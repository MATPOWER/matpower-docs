Search.setIndex({"docnames": ["dev-manual/acknowledgments", "dev-manual/architecture", "dev-manual/customizing", "dev-manual/data-model", "dev-manual/data-model-converter", "dev-manual/index", "dev-manual/introduction", "dev-manual/math-model", "dev-manual/net-model", "dev-manual/notation", "dev-manual/references", "dev-manual/task", "howto/builddocs", "howto/builddocs/generate_autodoc_stubs", "howto/builddocs/generate_matpower_autodoc", "howto/builddocs/generate_source_symlinks", "howto/element", "howto/extension", "howto/gizmo-element/index", "howto/three-phase", "index", "mips/functions/have_feature_lu_vec", "mips/functions/have_feature_pardiso", "mips/functions/have_feature_pardiso_legacy", "mips/functions/have_feature_pardiso_object", "mips/functions/mips", "mips/functions/mips_example1", "mips/functions/mips_example2", "mips/functions/mipsver", "mips/functions/mplinsolve", "mips/functions/qps_mips", "mips/functions/t_mips", "mips/functions/t_mips_pardiso", "mips/functions/t_mplinsolve", "mips/functions/t_qps_mips", "mips/functions/test_mips", "mips/index", "mips/reference", "most/functions/addgen2mpc", "most/functions/addstorage", "most/functions/addwind", "most/functions/apply_profile", "most/functions/c118swf", "most/functions/ex_case3a", "most/functions/ex_case3b", "most/functions/ex_contab", "most/functions/ex_load_profile", "most/functions/ex_storage", "most/functions/ex_transmat", "most/functions/ex_wind", "most/functions/ex_wind_profile", "most/functions/ex_wind_profile_d", "most/functions/ex_wind_uc", "most/functions/ex_xgd", "most/functions/ex_xgd_ramp", "most/functions/ex_xgd_res", "most/functions/ex_xgd_uc", "most/functions/filter_ramp_transitions", "most/functions/getprofiles", "most/functions/idx_profile", "most/functions/loadgenericdata", "most/functions/loadmd", "most/functions/loadstoragedata", "most/functions/loadxgendata", "most/functions/md_init", "most/functions/most", "most/functions/most_ex1_ed", "most/functions/most_ex2_dcopf", "most/functions/most_ex3_dcopf_w_uc", "most/functions/most_ex4_dcopf_ss", "most/functions/most_ex5_mpopf", "most/functions/most_ex6_uc", "most/functions/most_ex7_suc", "most/functions/most_summary", "most/functions/mostver", "most/functions/mpoption_info_most", "most/functions/plot_gen", "most/functions/plot_storage", "most/functions/plot_uc", "most/functions/plot_uc_data", "most/functions/t_case30_most", "most/functions/t_case3_most", "most/functions/t_case_tlmp", "most/functions/t_case_tlmp_storage", "most/functions/t_most_30b_1_1_0", "most/functions/t_most_30b_1_1_0_uc", "most/functions/t_most_30b_1_1_17", "most/functions/t_most_30b_3_1_0", "most/functions/t_most_30b_3_1_17", "most/functions/t_most_3b_1_1_0", "most/functions/t_most_3b_1_1_2", "most/functions/t_most_3b_3_1_0", "most/functions/t_most_3b_3_1_2", "most/functions/t_most_fixed_res", "most/functions/t_most_mpopf", "most/functions/t_most_sp", "most/functions/t_most_spuc", "most/functions/t_most_suc", "most/functions/t_most_tlmp", "most/functions/t_most_uc", "most/functions/t_most_w_ds", "most/functions/test_most", "most/functions/uniformwindprofile", "most/index", "most/reference", "mpom/classes/mp_idx_manager", "mpom/classes/opt_model", "mpom/functions/convert_lin_constraint", "mpom/functions/convert_lin_constraint_multipliers", "mpom/functions/cplex_options", "mpom/functions/glpk_options", "mpom/functions/gurobi_options", "mpom/functions/gurobiver", "mpom/functions/have_feature_bpmpd", "mpom/functions/have_feature_catchme", "mpom/functions/have_feature_clp", "mpom/functions/have_feature_cplex", "mpom/functions/have_feature_evalc", "mpom/functions/have_feature_fmincon", "mpom/functions/have_feature_fmincon_ipm", "mpom/functions/have_feature_fsolve", "mpom/functions/have_feature_glpk", "mpom/functions/have_feature_gurobi", "mpom/functions/have_feature_intlinprog", "mpom/functions/have_feature_ipopt", "mpom/functions/have_feature_ipopt_auxdata", "mpom/functions/have_feature_isequaln", "mpom/functions/have_feature_knitro", "mpom/functions/have_feature_knitromatlab", "mpom/functions/have_feature_ktrlink", "mpom/functions/have_feature_linprog", "mpom/functions/have_feature_linprog_ds", "mpom/functions/have_feature_mosek", "mpom/functions/have_feature_opti_clp", "mpom/functions/have_feature_optim", "mpom/functions/have_feature_optimoptions", "mpom/functions/have_feature_osqp", "mpom/functions/have_feature_quadprog", "mpom/functions/have_feature_quadprog_ls", "mpom/functions/have_feature_sdpt3", "mpom/functions/have_feature_sedumi", "mpom/functions/have_feature_yalmip", "mpom/functions/ipopt_options", "mpom/functions/miqps_cplex", "mpom/functions/miqps_glpk", "mpom/functions/miqps_gurobi", "mpom/functions/miqps_master", "mpom/functions/miqps_mosek", "mpom/functions/miqps_ot", "mpom/functions/mosek_options", "mpom/functions/mosek_symbcon", "mpom/functions/mpomver", "mpom/functions/mpopt2nleqopt", "mpom/functions/mpopt2nlpopt", "mpom/functions/mpopt2pneopt", "mpom/functions/mpopt2qpopt", "mpom/functions/nested_struct_copy", "mpom/functions/nleqs_core", "mpom/functions/nleqs_fd_newton", "mpom/functions/nleqs_fsolve", "mpom/functions/nleqs_gauss_seidel", "mpom/functions/nleqs_master", "mpom/functions/nleqs_master_ex1", "mpom/functions/nleqs_master_ex2", "mpom/functions/nleqs_newton", "mpom/functions/nlp_consfcn", "mpom/functions/nlp_costfcn", "mpom/functions/nlp_hessfcn", "mpom/functions/nlps_fmincon", "mpom/functions/nlps_ipopt", "mpom/functions/nlps_knitro", "mpom/functions/nlps_master", "mpom/functions/nlps_master_ex1", "mpom/functions/nlps_master_ex2", "mpom/functions/osqp_options", "mpom/functions/osqpver", "mpom/functions/pne_callback_default", "mpom/functions/pne_callback_nose", "mpom/functions/pne_callback_target_lam", "mpom/functions/pne_detect_events", "mpom/functions/pne_detected_event", "mpom/functions/pne_event_nose", "mpom/functions/pne_event_target_lam", "mpom/functions/pne_ex1", "mpom/functions/pne_pfcn_arc_len", "mpom/functions/pne_pfcn_natural", "mpom/functions/pne_pfcn_pseudo_arc_len", "mpom/functions/pne_register_callbacks", "mpom/functions/pne_register_events", "mpom/functions/pnes_master", "mpom/functions/qp_ex1", "mpom/functions/qps_bpmpd", "mpom/functions/qps_clp", "mpom/functions/qps_cplex", "mpom/functions/qps_glpk", "mpom/functions/qps_gurobi", "mpom/functions/qps_ipopt", "mpom/functions/qps_master", "mpom/functions/qps_mosek", "mpom/functions/qps_osqp", "mpom/functions/qps_ot", "mpom/functions/t_miqps_master", "mpom/functions/t_nested_struct_copy", "mpom/functions/t_nleqs_master", "mpom/functions/t_nlps_master", "mpom/functions/t_om_solve_leqs", "mpom/functions/t_om_solve_miqps", "mpom/functions/t_om_solve_nleqs", "mpom/functions/t_om_solve_nlps", "mpom/functions/t_om_solve_pne", "mpom/functions/t_om_solve_qps", "mpom/functions/t_opt_model", "mpom/functions/t_pnes_master", "mpom/functions/t_qps_master", "mpom/functions/test_mp_opt_model", "mpom/index", "mpom/reference", "mptest/functions/have_feature", "mptest/functions/have_feature_matlab", "mptest/functions/have_feature_octave", "mptest/functions/mptestver", "mptest/functions/t_begin", "mptest/functions/t_end", "mptest/functions/t_file_match", "mptest/functions/t_have_feature", "mptest/functions/t_is", "mptest/functions/t_ok", "mptest/functions/t_run_tests", "mptest/functions/t_skip", "mptest/functions/t_str_match", "mptest/functions/t_test_fcns", "mptest/functions/test_mptest", "mptest/index", "mptest/reference", "ref-manual/classes/index", "ref-manual/classes/mp/NODE_TYPE", "ref-manual/classes/mp/cost_table", "ref-manual/classes/mp/cost_table_utils", "ref-manual/classes/mp/data_model", "ref-manual/classes/mp/data_model_cpf", "ref-manual/classes/mp/data_model_opf", "ref-manual/classes/mp/dm_converter", "ref-manual/classes/mp/dm_converter_mpc2", "ref-manual/classes/mp/dm_converter_mpc2_legacy", "ref-manual/classes/mp/dm_element", "ref-manual/classes/mp/dmc_element", "ref-manual/classes/mp/dmce_branch_mpc2", "ref-manual/classes/mp/dmce_bus3p_mpc2", "ref-manual/classes/mp/dmce_bus_mpc2", "ref-manual/classes/mp/dmce_buslink_mpc2", "ref-manual/classes/mp/dmce_gen3p_mpc2", "ref-manual/classes/mp/dmce_gen_mpc2", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2", "ref-manual/classes/mp/dmce_line3p_mpc2", "ref-manual/classes/mp/dmce_load3p_mpc2", "ref-manual/classes/mp/dmce_load_mpc2", "ref-manual/classes/mp/dmce_reserve_gen_mpc2", "ref-manual/classes/mp/dmce_reserve_zone_mpc2", "ref-manual/classes/mp/dmce_shunt_mpc2", "ref-manual/classes/mp/dmce_xfmr3p_mpc2", "ref-manual/classes/mp/dme_branch", "ref-manual/classes/mp/dme_branch_opf", "ref-manual/classes/mp/dme_bus", "ref-manual/classes/mp/dme_bus3p", "ref-manual/classes/mp/dme_bus3p_opf", "ref-manual/classes/mp/dme_bus_opf", "ref-manual/classes/mp/dme_buslink", "ref-manual/classes/mp/dme_buslink_opf", "ref-manual/classes/mp/dme_gen", "ref-manual/classes/mp/dme_gen3p", "ref-manual/classes/mp/dme_gen3p_opf", "ref-manual/classes/mp/dme_gen_opf", "ref-manual/classes/mp/dme_legacy_dcline", "ref-manual/classes/mp/dme_legacy_dcline_opf", "ref-manual/classes/mp/dme_line3p", "ref-manual/classes/mp/dme_line3p_opf", "ref-manual/classes/mp/dme_load", "ref-manual/classes/mp/dme_load3p", "ref-manual/classes/mp/dme_load3p_opf", "ref-manual/classes/mp/dme_load_cpf", "ref-manual/classes/mp/dme_load_opf", "ref-manual/classes/mp/dme_reserve_gen", "ref-manual/classes/mp/dme_reserve_zone", "ref-manual/classes/mp/dme_shared_opf", "ref-manual/classes/mp/dme_shunt", "ref-manual/classes/mp/dme_shunt_cpf", "ref-manual/classes/mp/dme_shunt_opf", "ref-manual/classes/mp/dme_xfmr3p", "ref-manual/classes/mp/dme_xfmr3p_opf", "ref-manual/classes/mp/element_container", "ref-manual/classes/mp/extension", "ref-manual/classes/mp/form", "ref-manual/classes/mp/form_ac", "ref-manual/classes/mp/form_acc", "ref-manual/classes/mp/form_acp", "ref-manual/classes/mp/form_dc", "ref-manual/classes/mp/mapped_array", "ref-manual/classes/mp/math_model", "ref-manual/classes/mp/math_model_cpf_acc", "ref-manual/classes/mp/math_model_cpf_acci", "ref-manual/classes/mp/math_model_cpf_accs", "ref-manual/classes/mp/math_model_cpf_acp", "ref-manual/classes/mp/math_model_cpf_acpi", "ref-manual/classes/mp/math_model_cpf_acps", "ref-manual/classes/mp/math_model_opf", "ref-manual/classes/mp/math_model_opf_ac", "ref-manual/classes/mp/math_model_opf_acc", "ref-manual/classes/mp/math_model_opf_acci", "ref-manual/classes/mp/math_model_opf_acci_legacy", "ref-manual/classes/mp/math_model_opf_accs", "ref-manual/classes/mp/math_model_opf_accs_legacy", "ref-manual/classes/mp/math_model_opf_acp", "ref-manual/classes/mp/math_model_opf_acpi", "ref-manual/classes/mp/math_model_opf_acpi_legacy", "ref-manual/classes/mp/math_model_opf_acps", "ref-manual/classes/mp/math_model_opf_acps_legacy", "ref-manual/classes/mp/math_model_opf_dc", "ref-manual/classes/mp/math_model_opf_dc_legacy", "ref-manual/classes/mp/math_model_pf", "ref-manual/classes/mp/math_model_pf_ac", "ref-manual/classes/mp/math_model_pf_acci", "ref-manual/classes/mp/math_model_pf_accs", "ref-manual/classes/mp/math_model_pf_acpi", "ref-manual/classes/mp/math_model_pf_acps", "ref-manual/classes/mp/math_model_pf_dc", "ref-manual/classes/mp/mm_element", "ref-manual/classes/mp/mm_shared_opf_legacy", "ref-manual/classes/mp/mm_shared_pfcpf", "ref-manual/classes/mp/mm_shared_pfcpf_ac", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i", "ref-manual/classes/mp/mm_shared_pfcpf_acc", "ref-manual/classes/mp/mm_shared_pfcpf_acci", "ref-manual/classes/mp/mm_shared_pfcpf_accs", "ref-manual/classes/mp/mm_shared_pfcpf_acp", "ref-manual/classes/mp/mm_shared_pfcpf_acpi", "ref-manual/classes/mp/mm_shared_pfcpf_acps", "ref-manual/classes/mp/mm_shared_pfcpf_dc", "ref-manual/classes/mp/mme_branch", "ref-manual/classes/mp/mme_branch_opf", "ref-manual/classes/mp/mme_branch_opf_ac", "ref-manual/classes/mp/mme_branch_opf_acc", "ref-manual/classes/mp/mme_branch_opf_acp", "ref-manual/classes/mp/mme_branch_opf_dc", "ref-manual/classes/mp/mme_branch_pf_ac", "ref-manual/classes/mp/mme_branch_pf_dc", "ref-manual/classes/mp/mme_bus", "ref-manual/classes/mp/mme_bus3p", "ref-manual/classes/mp/mme_bus3p_opf_acc", "ref-manual/classes/mp/mme_bus3p_opf_acp", "ref-manual/classes/mp/mme_bus_opf_ac", "ref-manual/classes/mp/mme_bus_opf_acc", "ref-manual/classes/mp/mme_bus_opf_acp", "ref-manual/classes/mp/mme_bus_opf_dc", "ref-manual/classes/mp/mme_bus_pf_ac", "ref-manual/classes/mp/mme_bus_pf_dc", "ref-manual/classes/mp/mme_buslink", "ref-manual/classes/mp/mme_buslink_opf", "ref-manual/classes/mp/mme_buslink_opf_acc", "ref-manual/classes/mp/mme_buslink_opf_acp", "ref-manual/classes/mp/mme_buslink_pf_ac", "ref-manual/classes/mp/mme_buslink_pf_acc", "ref-manual/classes/mp/mme_buslink_pf_acp", "ref-manual/classes/mp/mme_gen", "ref-manual/classes/mp/mme_gen3p", "ref-manual/classes/mp/mme_gen3p_opf", "ref-manual/classes/mp/mme_gen_opf", "ref-manual/classes/mp/mme_gen_opf_ac", "ref-manual/classes/mp/mme_gen_opf_dc", "ref-manual/classes/mp/mme_gen_pf_ac", "ref-manual/classes/mp/mme_gen_pf_dc", "ref-manual/classes/mp/mme_legacy_dcline", "ref-manual/classes/mp/mme_legacy_dcline_opf", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc", "ref-manual/classes/mp/mme_line3p", "ref-manual/classes/mp/mme_line3p_opf", "ref-manual/classes/mp/mme_load", "ref-manual/classes/mp/mme_load_cpf", "ref-manual/classes/mp/mme_load_pf_ac", "ref-manual/classes/mp/mme_load_pf_dc", "ref-manual/classes/mp/mme_reserve_gen", "ref-manual/classes/mp/mme_reserve_zone", "ref-manual/classes/mp/mme_shunt", "ref-manual/classes/mp/mme_shunt_cpf", "ref-manual/classes/mp/mme_shunt_pf_ac", "ref-manual/classes/mp/mme_shunt_pf_dc", "ref-manual/classes/mp/mme_xfmr3p", "ref-manual/classes/mp/mme_xfmr3p_opf", "ref-manual/classes/mp/net_model", "ref-manual/classes/mp/net_model_ac", "ref-manual/classes/mp/net_model_acc", "ref-manual/classes/mp/net_model_acp", "ref-manual/classes/mp/net_model_dc", "ref-manual/classes/mp/nm_element", "ref-manual/classes/mp/nme_branch", "ref-manual/classes/mp/nme_branch_ac", "ref-manual/classes/mp/nme_branch_acc", "ref-manual/classes/mp/nme_branch_acp", "ref-manual/classes/mp/nme_branch_dc", "ref-manual/classes/mp/nme_bus", "ref-manual/classes/mp/nme_bus3p", "ref-manual/classes/mp/nme_bus3p_acc", "ref-manual/classes/mp/nme_bus3p_acp", "ref-manual/classes/mp/nme_bus_acc", "ref-manual/classes/mp/nme_bus_acp", "ref-manual/classes/mp/nme_bus_dc", "ref-manual/classes/mp/nme_buslink", "ref-manual/classes/mp/nme_buslink_acc", "ref-manual/classes/mp/nme_buslink_acp", "ref-manual/classes/mp/nme_gen", "ref-manual/classes/mp/nme_gen3p", "ref-manual/classes/mp/nme_gen3p_acc", "ref-manual/classes/mp/nme_gen3p_acp", "ref-manual/classes/mp/nme_gen_ac", "ref-manual/classes/mp/nme_gen_acc", "ref-manual/classes/mp/nme_gen_acp", "ref-manual/classes/mp/nme_gen_dc", "ref-manual/classes/mp/nme_legacy_dcline", "ref-manual/classes/mp/nme_legacy_dcline_ac", "ref-manual/classes/mp/nme_legacy_dcline_acc", "ref-manual/classes/mp/nme_legacy_dcline_acp", "ref-manual/classes/mp/nme_legacy_dcline_dc", "ref-manual/classes/mp/nme_line3p", "ref-manual/classes/mp/nme_load", "ref-manual/classes/mp/nme_load3p", "ref-manual/classes/mp/nme_load_ac", "ref-manual/classes/mp/nme_load_acc", "ref-manual/classes/mp/nme_load_acp", "ref-manual/classes/mp/nme_load_dc", "ref-manual/classes/mp/nme_shunt", "ref-manual/classes/mp/nme_shunt_ac", "ref-manual/classes/mp/nme_shunt_acc", "ref-manual/classes/mp/nme_shunt_acp", "ref-manual/classes/mp/nme_shunt_dc", "ref-manual/classes/mp/nme_xfmr3p", "ref-manual/classes/mp/task", "ref-manual/classes/mp/task_cpf", "ref-manual/classes/mp/task_cpf_legacy", "ref-manual/classes/mp/task_opf", "ref-manual/classes/mp/task_opf_legacy", "ref-manual/classes/mp/task_pf", "ref-manual/classes/mp/task_pf_legacy", "ref-manual/classes/mp/task_shared_legacy", "ref-manual/classes/mp/xt_3p", "ref-manual/classes/mp/xt_legacy_dcline", "ref-manual/classes/mp/xt_reserves", "ref-manual/classes/mp_table", "ref-manual/classes/mp_table_subclass", "ref-manual/functions/index", "ref-manual/functions/mp_table_class", "ref-manual/functions/run_cpf", "ref-manual/functions/run_mp", "ref-manual/functions/run_opf", "ref-manual/functions/run_pf", "ref-manual/index", "ref-manual/introduction", "users-manual/index"], "filenames": ["dev-manual/acknowledgments.rst", "dev-manual/architecture.rst", "dev-manual/customizing.rst", "dev-manual/data-model.rst", "dev-manual/data-model-converter.rst", "dev-manual/index.rst", "dev-manual/introduction.rst", "dev-manual/math-model.rst", "dev-manual/net-model.rst", "dev-manual/notation.rst", "dev-manual/references.rst", "dev-manual/task.rst", "howto/builddocs.rst", "howto/builddocs/generate_autodoc_stubs.rst", "howto/builddocs/generate_matpower_autodoc.rst", "howto/builddocs/generate_source_symlinks.rst", "howto/element.rst", "howto/extension.rst", "howto/gizmo-element/index.rst", "howto/three-phase.rst", "index.rst", "mips/functions/have_feature_lu_vec.rst", "mips/functions/have_feature_pardiso.rst", "mips/functions/have_feature_pardiso_legacy.rst", "mips/functions/have_feature_pardiso_object.rst", "mips/functions/mips.rst", "mips/functions/mips_example1.rst", "mips/functions/mips_example2.rst", "mips/functions/mipsver.rst", "mips/functions/mplinsolve.rst", "mips/functions/qps_mips.rst", "mips/functions/t_mips.rst", "mips/functions/t_mips_pardiso.rst", "mips/functions/t_mplinsolve.rst", "mips/functions/t_qps_mips.rst", "mips/functions/test_mips.rst", "mips/index.rst", "mips/reference.rst", "most/functions/addgen2mpc.rst", "most/functions/addstorage.rst", "most/functions/addwind.rst", "most/functions/apply_profile.rst", "most/functions/c118swf.rst", "most/functions/ex_case3a.rst", "most/functions/ex_case3b.rst", "most/functions/ex_contab.rst", "most/functions/ex_load_profile.rst", "most/functions/ex_storage.rst", "most/functions/ex_transmat.rst", "most/functions/ex_wind.rst", "most/functions/ex_wind_profile.rst", "most/functions/ex_wind_profile_d.rst", "most/functions/ex_wind_uc.rst", "most/functions/ex_xgd.rst", "most/functions/ex_xgd_ramp.rst", "most/functions/ex_xgd_res.rst", "most/functions/ex_xgd_uc.rst", "most/functions/filter_ramp_transitions.rst", "most/functions/getprofiles.rst", "most/functions/idx_profile.rst", "most/functions/loadgenericdata.rst", "most/functions/loadmd.rst", "most/functions/loadstoragedata.rst", "most/functions/loadxgendata.rst", "most/functions/md_init.rst", "most/functions/most.rst", "most/functions/most_ex1_ed.rst", "most/functions/most_ex2_dcopf.rst", "most/functions/most_ex3_dcopf_w_uc.rst", "most/functions/most_ex4_dcopf_ss.rst", "most/functions/most_ex5_mpopf.rst", "most/functions/most_ex6_uc.rst", "most/functions/most_ex7_suc.rst", "most/functions/most_summary.rst", "most/functions/mostver.rst", "most/functions/mpoption_info_most.rst", "most/functions/plot_gen.rst", "most/functions/plot_storage.rst", "most/functions/plot_uc.rst", "most/functions/plot_uc_data.rst", "most/functions/t_case30_most.rst", "most/functions/t_case3_most.rst", "most/functions/t_case_tlmp.rst", "most/functions/t_case_tlmp_storage.rst", "most/functions/t_most_30b_1_1_0.rst", "most/functions/t_most_30b_1_1_0_uc.rst", "most/functions/t_most_30b_1_1_17.rst", "most/functions/t_most_30b_3_1_0.rst", "most/functions/t_most_30b_3_1_17.rst", "most/functions/t_most_3b_1_1_0.rst", "most/functions/t_most_3b_1_1_2.rst", "most/functions/t_most_3b_3_1_0.rst", "most/functions/t_most_3b_3_1_2.rst", "most/functions/t_most_fixed_res.rst", "most/functions/t_most_mpopf.rst", "most/functions/t_most_sp.rst", "most/functions/t_most_spuc.rst", "most/functions/t_most_suc.rst", "most/functions/t_most_tlmp.rst", "most/functions/t_most_uc.rst", "most/functions/t_most_w_ds.rst", "most/functions/test_most.rst", "most/functions/uniformwindprofile.rst", "most/index.rst", "most/reference.rst", "mpom/classes/mp_idx_manager.rst", "mpom/classes/opt_model.rst", "mpom/functions/convert_lin_constraint.rst", "mpom/functions/convert_lin_constraint_multipliers.rst", "mpom/functions/cplex_options.rst", "mpom/functions/glpk_options.rst", "mpom/functions/gurobi_options.rst", "mpom/functions/gurobiver.rst", "mpom/functions/have_feature_bpmpd.rst", "mpom/functions/have_feature_catchme.rst", "mpom/functions/have_feature_clp.rst", "mpom/functions/have_feature_cplex.rst", "mpom/functions/have_feature_evalc.rst", "mpom/functions/have_feature_fmincon.rst", "mpom/functions/have_feature_fmincon_ipm.rst", "mpom/functions/have_feature_fsolve.rst", "mpom/functions/have_feature_glpk.rst", "mpom/functions/have_feature_gurobi.rst", "mpom/functions/have_feature_intlinprog.rst", "mpom/functions/have_feature_ipopt.rst", "mpom/functions/have_feature_ipopt_auxdata.rst", "mpom/functions/have_feature_isequaln.rst", "mpom/functions/have_feature_knitro.rst", "mpom/functions/have_feature_knitromatlab.rst", "mpom/functions/have_feature_ktrlink.rst", "mpom/functions/have_feature_linprog.rst", "mpom/functions/have_feature_linprog_ds.rst", "mpom/functions/have_feature_mosek.rst", "mpom/functions/have_feature_opti_clp.rst", "mpom/functions/have_feature_optim.rst", "mpom/functions/have_feature_optimoptions.rst", "mpom/functions/have_feature_osqp.rst", "mpom/functions/have_feature_quadprog.rst", "mpom/functions/have_feature_quadprog_ls.rst", "mpom/functions/have_feature_sdpt3.rst", "mpom/functions/have_feature_sedumi.rst", "mpom/functions/have_feature_yalmip.rst", "mpom/functions/ipopt_options.rst", "mpom/functions/miqps_cplex.rst", "mpom/functions/miqps_glpk.rst", "mpom/functions/miqps_gurobi.rst", "mpom/functions/miqps_master.rst", "mpom/functions/miqps_mosek.rst", "mpom/functions/miqps_ot.rst", "mpom/functions/mosek_options.rst", "mpom/functions/mosek_symbcon.rst", "mpom/functions/mpomver.rst", "mpom/functions/mpopt2nleqopt.rst", "mpom/functions/mpopt2nlpopt.rst", "mpom/functions/mpopt2pneopt.rst", "mpom/functions/mpopt2qpopt.rst", "mpom/functions/nested_struct_copy.rst", "mpom/functions/nleqs_core.rst", "mpom/functions/nleqs_fd_newton.rst", "mpom/functions/nleqs_fsolve.rst", "mpom/functions/nleqs_gauss_seidel.rst", "mpom/functions/nleqs_master.rst", "mpom/functions/nleqs_master_ex1.rst", "mpom/functions/nleqs_master_ex2.rst", "mpom/functions/nleqs_newton.rst", "mpom/functions/nlp_consfcn.rst", "mpom/functions/nlp_costfcn.rst", "mpom/functions/nlp_hessfcn.rst", "mpom/functions/nlps_fmincon.rst", "mpom/functions/nlps_ipopt.rst", "mpom/functions/nlps_knitro.rst", "mpom/functions/nlps_master.rst", "mpom/functions/nlps_master_ex1.rst", "mpom/functions/nlps_master_ex2.rst", "mpom/functions/osqp_options.rst", "mpom/functions/osqpver.rst", "mpom/functions/pne_callback_default.rst", "mpom/functions/pne_callback_nose.rst", "mpom/functions/pne_callback_target_lam.rst", "mpom/functions/pne_detect_events.rst", "mpom/functions/pne_detected_event.rst", "mpom/functions/pne_event_nose.rst", "mpom/functions/pne_event_target_lam.rst", "mpom/functions/pne_ex1.rst", "mpom/functions/pne_pfcn_arc_len.rst", "mpom/functions/pne_pfcn_natural.rst", "mpom/functions/pne_pfcn_pseudo_arc_len.rst", "mpom/functions/pne_register_callbacks.rst", "mpom/functions/pne_register_events.rst", "mpom/functions/pnes_master.rst", "mpom/functions/qp_ex1.rst", "mpom/functions/qps_bpmpd.rst", "mpom/functions/qps_clp.rst", "mpom/functions/qps_cplex.rst", "mpom/functions/qps_glpk.rst", "mpom/functions/qps_gurobi.rst", "mpom/functions/qps_ipopt.rst", "mpom/functions/qps_master.rst", "mpom/functions/qps_mosek.rst", "mpom/functions/qps_osqp.rst", "mpom/functions/qps_ot.rst", "mpom/functions/t_miqps_master.rst", "mpom/functions/t_nested_struct_copy.rst", "mpom/functions/t_nleqs_master.rst", "mpom/functions/t_nlps_master.rst", "mpom/functions/t_om_solve_leqs.rst", "mpom/functions/t_om_solve_miqps.rst", "mpom/functions/t_om_solve_nleqs.rst", "mpom/functions/t_om_solve_nlps.rst", "mpom/functions/t_om_solve_pne.rst", "mpom/functions/t_om_solve_qps.rst", "mpom/functions/t_opt_model.rst", "mpom/functions/t_pnes_master.rst", "mpom/functions/t_qps_master.rst", "mpom/functions/test_mp_opt_model.rst", "mpom/index.rst", "mpom/reference.rst", "mptest/functions/have_feature.rst", "mptest/functions/have_feature_matlab.rst", "mptest/functions/have_feature_octave.rst", "mptest/functions/mptestver.rst", "mptest/functions/t_begin.rst", "mptest/functions/t_end.rst", "mptest/functions/t_file_match.rst", "mptest/functions/t_have_feature.rst", "mptest/functions/t_is.rst", "mptest/functions/t_ok.rst", "mptest/functions/t_run_tests.rst", "mptest/functions/t_skip.rst", "mptest/functions/t_str_match.rst", "mptest/functions/t_test_fcns.rst", "mptest/functions/test_mptest.rst", "mptest/index.rst", "mptest/reference.rst", "ref-manual/classes/index.rst", "ref-manual/classes/mp/NODE_TYPE.rst", "ref-manual/classes/mp/cost_table.rst", "ref-manual/classes/mp/cost_table_utils.rst", "ref-manual/classes/mp/data_model.rst", "ref-manual/classes/mp/data_model_cpf.rst", "ref-manual/classes/mp/data_model_opf.rst", "ref-manual/classes/mp/dm_converter.rst", "ref-manual/classes/mp/dm_converter_mpc2.rst", "ref-manual/classes/mp/dm_converter_mpc2_legacy.rst", "ref-manual/classes/mp/dm_element.rst", "ref-manual/classes/mp/dmc_element.rst", "ref-manual/classes/mp/dmce_branch_mpc2.rst", "ref-manual/classes/mp/dmce_bus3p_mpc2.rst", "ref-manual/classes/mp/dmce_bus_mpc2.rst", "ref-manual/classes/mp/dmce_buslink_mpc2.rst", "ref-manual/classes/mp/dmce_gen3p_mpc2.rst", "ref-manual/classes/mp/dmce_gen_mpc2.rst", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2.rst", "ref-manual/classes/mp/dmce_line3p_mpc2.rst", "ref-manual/classes/mp/dmce_load3p_mpc2.rst", "ref-manual/classes/mp/dmce_load_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_gen_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_zone_mpc2.rst", "ref-manual/classes/mp/dmce_shunt_mpc2.rst", "ref-manual/classes/mp/dmce_xfmr3p_mpc2.rst", "ref-manual/classes/mp/dme_branch.rst", "ref-manual/classes/mp/dme_branch_opf.rst", "ref-manual/classes/mp/dme_bus.rst", "ref-manual/classes/mp/dme_bus3p.rst", "ref-manual/classes/mp/dme_bus3p_opf.rst", "ref-manual/classes/mp/dme_bus_opf.rst", "ref-manual/classes/mp/dme_buslink.rst", "ref-manual/classes/mp/dme_buslink_opf.rst", "ref-manual/classes/mp/dme_gen.rst", "ref-manual/classes/mp/dme_gen3p.rst", "ref-manual/classes/mp/dme_gen3p_opf.rst", "ref-manual/classes/mp/dme_gen_opf.rst", "ref-manual/classes/mp/dme_legacy_dcline.rst", "ref-manual/classes/mp/dme_legacy_dcline_opf.rst", "ref-manual/classes/mp/dme_line3p.rst", "ref-manual/classes/mp/dme_line3p_opf.rst", "ref-manual/classes/mp/dme_load.rst", "ref-manual/classes/mp/dme_load3p.rst", "ref-manual/classes/mp/dme_load3p_opf.rst", "ref-manual/classes/mp/dme_load_cpf.rst", "ref-manual/classes/mp/dme_load_opf.rst", "ref-manual/classes/mp/dme_reserve_gen.rst", "ref-manual/classes/mp/dme_reserve_zone.rst", "ref-manual/classes/mp/dme_shared_opf.rst", "ref-manual/classes/mp/dme_shunt.rst", "ref-manual/classes/mp/dme_shunt_cpf.rst", "ref-manual/classes/mp/dme_shunt_opf.rst", "ref-manual/classes/mp/dme_xfmr3p.rst", "ref-manual/classes/mp/dme_xfmr3p_opf.rst", "ref-manual/classes/mp/element_container.rst", "ref-manual/classes/mp/extension.rst", "ref-manual/classes/mp/form.rst", "ref-manual/classes/mp/form_ac.rst", "ref-manual/classes/mp/form_acc.rst", "ref-manual/classes/mp/form_acp.rst", "ref-manual/classes/mp/form_dc.rst", "ref-manual/classes/mp/mapped_array.rst", "ref-manual/classes/mp/math_model.rst", "ref-manual/classes/mp/math_model_cpf_acc.rst", "ref-manual/classes/mp/math_model_cpf_acci.rst", "ref-manual/classes/mp/math_model_cpf_accs.rst", "ref-manual/classes/mp/math_model_cpf_acp.rst", "ref-manual/classes/mp/math_model_cpf_acpi.rst", "ref-manual/classes/mp/math_model_cpf_acps.rst", "ref-manual/classes/mp/math_model_opf.rst", "ref-manual/classes/mp/math_model_opf_ac.rst", "ref-manual/classes/mp/math_model_opf_acc.rst", "ref-manual/classes/mp/math_model_opf_acci.rst", "ref-manual/classes/mp/math_model_opf_acci_legacy.rst", "ref-manual/classes/mp/math_model_opf_accs.rst", "ref-manual/classes/mp/math_model_opf_accs_legacy.rst", "ref-manual/classes/mp/math_model_opf_acp.rst", "ref-manual/classes/mp/math_model_opf_acpi.rst", "ref-manual/classes/mp/math_model_opf_acpi_legacy.rst", "ref-manual/classes/mp/math_model_opf_acps.rst", "ref-manual/classes/mp/math_model_opf_acps_legacy.rst", "ref-manual/classes/mp/math_model_opf_dc.rst", "ref-manual/classes/mp/math_model_opf_dc_legacy.rst", "ref-manual/classes/mp/math_model_pf.rst", "ref-manual/classes/mp/math_model_pf_ac.rst", "ref-manual/classes/mp/math_model_pf_acci.rst", "ref-manual/classes/mp/math_model_pf_accs.rst", "ref-manual/classes/mp/math_model_pf_acpi.rst", "ref-manual/classes/mp/math_model_pf_acps.rst", "ref-manual/classes/mp/math_model_pf_dc.rst", "ref-manual/classes/mp/mm_element.rst", "ref-manual/classes/mp/mm_shared_opf_legacy.rst", "ref-manual/classes/mp/mm_shared_pfcpf.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acc.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acci.rst", "ref-manual/classes/mp/mm_shared_pfcpf_accs.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acp.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acpi.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acps.rst", "ref-manual/classes/mp/mm_shared_pfcpf_dc.rst", "ref-manual/classes/mp/mme_branch.rst", "ref-manual/classes/mp/mme_branch_opf.rst", "ref-manual/classes/mp/mme_branch_opf_ac.rst", "ref-manual/classes/mp/mme_branch_opf_acc.rst", "ref-manual/classes/mp/mme_branch_opf_acp.rst", "ref-manual/classes/mp/mme_branch_opf_dc.rst", "ref-manual/classes/mp/mme_branch_pf_ac.rst", "ref-manual/classes/mp/mme_branch_pf_dc.rst", "ref-manual/classes/mp/mme_bus.rst", "ref-manual/classes/mp/mme_bus3p.rst", "ref-manual/classes/mp/mme_bus3p_opf_acc.rst", "ref-manual/classes/mp/mme_bus3p_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_ac.rst", "ref-manual/classes/mp/mme_bus_opf_acc.rst", "ref-manual/classes/mp/mme_bus_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_dc.rst", "ref-manual/classes/mp/mme_bus_pf_ac.rst", "ref-manual/classes/mp/mme_bus_pf_dc.rst", "ref-manual/classes/mp/mme_buslink.rst", "ref-manual/classes/mp/mme_buslink_opf.rst", "ref-manual/classes/mp/mme_buslink_opf_acc.rst", "ref-manual/classes/mp/mme_buslink_opf_acp.rst", "ref-manual/classes/mp/mme_buslink_pf_ac.rst", "ref-manual/classes/mp/mme_buslink_pf_acc.rst", "ref-manual/classes/mp/mme_buslink_pf_acp.rst", "ref-manual/classes/mp/mme_gen.rst", "ref-manual/classes/mp/mme_gen3p.rst", "ref-manual/classes/mp/mme_gen3p_opf.rst", "ref-manual/classes/mp/mme_gen_opf.rst", "ref-manual/classes/mp/mme_gen_opf_ac.rst", "ref-manual/classes/mp/mme_gen_opf_dc.rst", "ref-manual/classes/mp/mme_gen_pf_ac.rst", "ref-manual/classes/mp/mme_gen_pf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc.rst", "ref-manual/classes/mp/mme_line3p.rst", "ref-manual/classes/mp/mme_line3p_opf.rst", "ref-manual/classes/mp/mme_load.rst", "ref-manual/classes/mp/mme_load_cpf.rst", "ref-manual/classes/mp/mme_load_pf_ac.rst", "ref-manual/classes/mp/mme_load_pf_dc.rst", "ref-manual/classes/mp/mme_reserve_gen.rst", "ref-manual/classes/mp/mme_reserve_zone.rst", "ref-manual/classes/mp/mme_shunt.rst", "ref-manual/classes/mp/mme_shunt_cpf.rst", "ref-manual/classes/mp/mme_shunt_pf_ac.rst", "ref-manual/classes/mp/mme_shunt_pf_dc.rst", "ref-manual/classes/mp/mme_xfmr3p.rst", "ref-manual/classes/mp/mme_xfmr3p_opf.rst", "ref-manual/classes/mp/net_model.rst", "ref-manual/classes/mp/net_model_ac.rst", "ref-manual/classes/mp/net_model_acc.rst", "ref-manual/classes/mp/net_model_acp.rst", "ref-manual/classes/mp/net_model_dc.rst", "ref-manual/classes/mp/nm_element.rst", "ref-manual/classes/mp/nme_branch.rst", "ref-manual/classes/mp/nme_branch_ac.rst", "ref-manual/classes/mp/nme_branch_acc.rst", "ref-manual/classes/mp/nme_branch_acp.rst", "ref-manual/classes/mp/nme_branch_dc.rst", "ref-manual/classes/mp/nme_bus.rst", "ref-manual/classes/mp/nme_bus3p.rst", "ref-manual/classes/mp/nme_bus3p_acc.rst", "ref-manual/classes/mp/nme_bus3p_acp.rst", "ref-manual/classes/mp/nme_bus_acc.rst", "ref-manual/classes/mp/nme_bus_acp.rst", "ref-manual/classes/mp/nme_bus_dc.rst", "ref-manual/classes/mp/nme_buslink.rst", "ref-manual/classes/mp/nme_buslink_acc.rst", "ref-manual/classes/mp/nme_buslink_acp.rst", "ref-manual/classes/mp/nme_gen.rst", "ref-manual/classes/mp/nme_gen3p.rst", "ref-manual/classes/mp/nme_gen3p_acc.rst", "ref-manual/classes/mp/nme_gen3p_acp.rst", "ref-manual/classes/mp/nme_gen_ac.rst", "ref-manual/classes/mp/nme_gen_acc.rst", "ref-manual/classes/mp/nme_gen_acp.rst", "ref-manual/classes/mp/nme_gen_dc.rst", "ref-manual/classes/mp/nme_legacy_dcline.rst", "ref-manual/classes/mp/nme_legacy_dcline_ac.rst", "ref-manual/classes/mp/nme_legacy_dcline_acc.rst", "ref-manual/classes/mp/nme_legacy_dcline_acp.rst", "ref-manual/classes/mp/nme_legacy_dcline_dc.rst", "ref-manual/classes/mp/nme_line3p.rst", "ref-manual/classes/mp/nme_load.rst", "ref-manual/classes/mp/nme_load3p.rst", "ref-manual/classes/mp/nme_load_ac.rst", "ref-manual/classes/mp/nme_load_acc.rst", "ref-manual/classes/mp/nme_load_acp.rst", "ref-manual/classes/mp/nme_load_dc.rst", "ref-manual/classes/mp/nme_shunt.rst", "ref-manual/classes/mp/nme_shunt_ac.rst", "ref-manual/classes/mp/nme_shunt_acc.rst", "ref-manual/classes/mp/nme_shunt_acp.rst", "ref-manual/classes/mp/nme_shunt_dc.rst", "ref-manual/classes/mp/nme_xfmr3p.rst", "ref-manual/classes/mp/task.rst", "ref-manual/classes/mp/task_cpf.rst", "ref-manual/classes/mp/task_cpf_legacy.rst", "ref-manual/classes/mp/task_opf.rst", "ref-manual/classes/mp/task_opf_legacy.rst", "ref-manual/classes/mp/task_pf.rst", "ref-manual/classes/mp/task_pf_legacy.rst", "ref-manual/classes/mp/task_shared_legacy.rst", "ref-manual/classes/mp/xt_3p.rst", "ref-manual/classes/mp/xt_legacy_dcline.rst", "ref-manual/classes/mp/xt_reserves.rst", "ref-manual/classes/mp_table.rst", "ref-manual/classes/mp_table_subclass.rst", "ref-manual/functions/index.rst", "ref-manual/functions/mp_table_class.rst", "ref-manual/functions/run_cpf.rst", "ref-manual/functions/run_mp.rst", "ref-manual/functions/run_opf.rst", "ref-manual/functions/run_pf.rst", "ref-manual/index.rst", "ref-manual/introduction.rst", "users-manual/index.rst"], "titles": ["<span class=\"section-number\">10. </span>Acknowledgments", "<span class=\"section-number\">3. </span>Architecture Overview", "<span class=\"section-number\">9. </span>Customizing <span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span>", "<span class=\"section-number\">5. </span>Data Model Object", "<span class=\"section-number\">6. </span>Data Model Converter Object", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Developer\u2019s Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">8. </span>Mathematical Model Object", "<span class=\"section-number\">7. </span>Network Model Object", "<span class=\"section-number\">2. </span>Notation", "<span class=\"section-number\">11. </span>References", "<span class=\"section-number\">4. </span>Task Object", "How to Build the Documentation", "generate_autodoc_stubs", "generate_matpower_autodoc", "generate_source_symlinks", "How to Create a New Element Type", "How to Create an Extension", "A Test Gizmo Element Type", "How to Run a Three-Phase Power Flow", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Documentation", "have_feature_lu_vec", "have_feature_pardiso", "have_feature_pardiso_legacy", "have_feature_pardiso_object", "mips", "mips_example1", "mips_example2", "mipsver", "mplinsolve", "qps_mips", "t_mips", "t_mips_pardiso", "t_mplinsolve", "t_qps_mips", "test_mips", "MIPS User\u2019s Manual", "Reference", "addgen2mpc", "addstorage", "addwind", "apply_profile", "c118swf", "ex_case3a", "ex_case3b", "ex_contab", "ex_load_profile", "ex_storage", "ex_transmat", "ex_wind", "ex_wind_profile", "ex_wind_profile_d", "ex_wind_uc", "ex_xgd", "ex_xgd_ramp", "ex_xgd_res", "ex_xgd_uc", "filter_ramp_transitions", "getprofiles", "idx_profile", "loadgenericdata", "loadmd", "loadstoragedata", "loadxgendata", "md_init", "most", "most_ex1_ed", "most_ex2_dcopf", "most_ex3_dcopf_w_uc", "most_ex4_dcopf_ss", "most_ex5_mpopf", "most_ex6_uc", "most_ex7_suc", "most_summary", "mostver", "mpoption_info_most", "plot_gen", "plot_storage", "plot_uc", "plot_uc_data", "t_case30_most", "t_case3_most", "t_case_tlmp", "t_case_tlmp_storage", "t_most_30b_1_1_0", "t_most_30b_1_1_0_uc", "t_most_30b_1_1_17", "t_most_30b_3_1_0", "t_most_30b_3_1_17", "t_most_3b_1_1_0", "t_most_3b_1_1_2", "t_most_3b_3_1_0", "t_most_3b_3_1_2", "t_most_fixed_res", "t_most_mpopf", "t_most_sp", "t_most_spuc", "t_most_suc", "t_most_tlmp", "t_most_uc", "t_most_w_ds", "test_most", "uniformwindprofile", "MOST User\u2019s Manual", "Reference", "mp_idx_manager", "opt_model", "convert_lin_constraint", "convert_lin_constraint_multipliers", "cplex_options", "glpk_options", "gurobi_options", "gurobiver", "have_feature_bpmpd", "have_feature_catchme", "have_feature_clp", "have_feature_cplex", "have_feature_evalc", "have_feature_fmincon", "have_feature_fmincon_ipm", "have_feature_fsolve", "have_feature_glpk", "have_feature_gurobi", "have_feature_intlinprog", "have_feature_ipopt", "have_feature_ipopt_auxdata", "have_feature_isequaln", "have_feature_knitro", "have_feature_knitromatlab", "have_feature_ktrlink", "have_feature_linprog", "have_feature_linprog_ds", "have_feature_mosek", "have_feature_opti_clp", "have_feature_optim", "have_feature_optimoptions", "have_feature_osqp", "have_feature_quadprog", "have_feature_quadprog_ls", "have_feature_sdpt3", "have_feature_sedumi", "have_feature_yalmip", "ipopt_options", "miqps_cplex", "miqps_glpk", "miqps_gurobi", "miqps_master", "miqps_mosek", "miqps_ot", "mosek_options", "mosek_symbcon", "mpomver", "mpopt2nleqopt", "mpopt2nlpopt", "mpopt2pneopt", "mpopt2qpopt", "nested_struct_copy", "nleqs_core", "nleqs_fd_newton", "nleqs_fsolve", "nleqs_gauss_seidel", "nleqs_master", "nleqs_master_ex1", "nleqs_master_ex2", "nleqs_newton", "nlp_consfcn", "nlp_costfcn", "nlp_hessfcn", "nlps_fmincon", "nlps_ipopt", "nlps_knitro", "nlps_master", "nlps_master_ex1", "nlps_master_ex2", "osqp_options", "osqpver", "pne_callback_default", "pne_callback_nose", "pne_callback_target_lam", "pne_detect_events", "pne_detected_event", "pne_event_nose", "pne_event_target_lam", "pne_ex1", "pne_pfcn_arc_len", "pne_pfcn_natural", "pne_pfcn_pseudo_arc_len", "pne_register_callbacks", "pne_register_events", "pnes_master", "qp_ex1", "qps_bpmpd", "qps_clp", "qps_cplex", "qps_glpk", "qps_gurobi", "qps_ipopt", "qps_master", "qps_mosek", "qps_osqp", "qps_ot", "t_miqps_master", "t_nested_struct_copy", "t_nleqs_master", "t_nlps_master", "t_om_solve_leqs", "t_om_solve_miqps", "t_om_solve_nleqs", "t_om_solve_nlps", "t_om_solve_pne", "t_om_solve_qps", "t_opt_model", "t_pnes_master", "t_qps_master", "test_mp_opt_model", "<span class=\"raw-html\">MP-Opt-Model</span> User\u2019s Manual", "Reference", "have_feature", "have_feature_matlab", "have_feature_octave", "mptestver", "t_begin", "t_end", "t_file_match", "t_have_feature", "t_is", "t_ok", "t_run_tests", "t_skip", "t_str_match", "t_test_fcns", "test_mptest", "MP-Test User\u2019s Manual", "Reference", "<span class=\"section-number\">3. </span>Classes", "mp.NODE_TYPE", "mp.cost_table", "mp.cost_table_utils", "mp.data_model", "mp.data_model_cpf", "mp.data_model_opf", "mp.dm_converter", "mp.dm_converter_mpc2", "mp.dm_converter_mpc2_legacy", "mp.dm_element", "mp.dmc_element", "mp.dmce_branch_mpc2", "mp.dmce_bus3p_mpc2", "mp.dmce_bus_mpc2", "mp.dmce_buslink_mpc2", "mp.dmce_gen3p_mpc2", "mp.dmce_gen_mpc2", "mp.dmce_legacy_dcline_mpc2", "mp.dmce_line3p_mpc2", "mp.dmce_load3p_mpc2", "mp.dmce_load_mpc2", "mp.dmce_reserve_gen_mpc2", "mp.dmce_reserve_zone_mpc2", "mp.dmce_shunt_mpc2", "mp.dmce_xfmr3p_mpc2", "mp.dme_branch", "mp.dme_branch_opf", "mp.dme_bus", "mp.dme_bus3p", "mp.dme_bus3p_opf", "mp.dme_bus_opf", "mp.dme_buslink", "mp.dme_buslink_opf", "mp.dme_gen", "mp.dme_gen3p", "mp.dme_gen3p_opf", "mp.dme_gen_opf", "mp.dme_legacy_dcline", "mp.dme_legacy_dcline_opf", "mp.dme_line3p", "mp.dme_line3p_opf", "mp.dme_load", "mp.dme_load3p", "mp.dme_load3p_opf", "mp.dme_load_cpf", "mp.dme_load_opf", "mp.dme_reserve_gen", "mp.dme_reserve_zone", "mp.dme_shared_opf", "mp.dme_shunt", "mp.dme_shunt_cpf", "mp.dme_shunt_opf", "mp.dme_xfmr3p", "mp.dme_xfmr3p_opf", "mp.element_container", "mp.extension", "mp.form", "mp.form_ac", "mp.form_acc", "mp.form_acp", "mp.form_dc", "mp.mapped_array", "mp.math_model", "mp.math_model_cpf_acc", "mp.math_model_cpf_acci", "mp.math_model_cpf_accs", "mp.math_model_cpf_acp", "mp.math_model_cpf_acpi", "mp.math_model_cpf_acps", "mp.math_model_opf", "mp.math_model_opf_ac", "mp.math_model_opf_acc", "mp.math_model_opf_acci", "mp.math_model_opf_acci_legacy", "mp.math_model_opf_accs", "mp.math_model_opf_accs_legacy", "mp.math_model_opf_acp", "mp.math_model_opf_acpi", "mp.math_model_opf_acpi_legacy", "mp.math_model_opf_acps", "mp.math_model_opf_acps_legacy", "mp.math_model_opf_dc", "mp.math_model_opf_dc_legacy", "mp.math_model_pf", "mp.math_model_pf_ac", "mp.math_model_pf_acci", "mp.math_model_pf_accs", "mp.math_model_pf_acpi", "mp.math_model_pf_acps", "mp.math_model_pf_dc", "mp.mm_element", "mp.mm_shared_opf_legacy", "mp.mm_shared_pfcpf", "mp.mm_shared_pfcpf_ac", "mp.mm_shared_pfcpf_ac_i", "mp.mm_shared_pfcpf_acc", "mp.mm_shared_pfcpf_acci", "mp.mm_shared_pfcpf_accs", "mp.mm_shared_pfcpf_acp", "mp.mm_shared_pfcpf_acpi", "mp.mm_shared_pfcpf_acps", "mp.mm_shared_pfcpf_dc", "mp.mme_branch", "mp.mme_branch_opf", "mp.mme_branch_opf_ac", "mp.mme_branch_opf_acc", "mp.mme_branch_opf_acp", "mp.mme_branch_opf_dc", "mp.mme_branch_pf_ac", "mp.mme_branch_pf_dc", "mp.mme_bus", "mp.mme_bus3p", "mp.mme_bus3p_opf_acc", "mp.mme_bus3p_opf_acp", "mp.mme_bus_opf_ac", "mp.mme_bus_opf_acc", "mp.mme_bus_opf_acp", "mp.mme_bus_opf_dc", "mp.mme_bus_pf_ac", "mp.mme_bus_pf_dc", "mp.mme_buslink", "mp.mme_buslink_opf", "mp.mme_buslink_opf_acc", "mp.mme_buslink_opf_acp", "mp.mme_buslink_pf_ac", "mp.mme_buslink_pf_acc", "mp.mme_buslink_pf_acp", "mp.mme_gen", "mp.mme_gen3p", "mp.mme_gen3p_opf", "mp.mme_gen_opf", "mp.mme_gen_opf_ac", "mp.mme_gen_opf_dc", "mp.mme_gen_pf_ac", "mp.mme_gen_pf_dc", "mp.mme_legacy_dcline", "mp.mme_legacy_dcline_opf", "mp.mme_legacy_dcline_opf_ac", "mp.mme_legacy_dcline_opf_dc", "mp.mme_legacy_dcline_pf_ac", "mp.mme_legacy_dcline_pf_dc", "mp.mme_line3p", "mp.mme_line3p_opf", "mp.mme_load", "mp.mme_load_cpf", "mp.mme_load_pf_ac", "mp.mme_load_pf_dc", "mp.mme_reserve_gen", "mp.mme_reserve_zone", "mp.mme_shunt", "mp.mme_shunt_cpf", "mp.mme_shunt_pf_ac", "mp.mme_shunt_pf_dc", "mp.mme_xfmr3p", "mp.mme_xfmr3p_opf", "mp.net_model", "mp.net_model_ac", "mp.net_model_acc", "mp.net_model_acp", "mp.net_model_dc", "mp.nm_element", "mp.nme_branch", "mp.nme_branch_ac", "mp.nme_branch_acc", "mp.nme_branch_acp", "mp.nme_branch_dc", "mp.nme_bus", "mp.nme_bus3p", "mp.nme_bus3p_acc", "mp.nme_bus3p_acp", "mp.nme_bus_acc", "mp.nme_bus_acp", "mp.nme_bus_dc", "mp.nme_buslink", "mp.nme_buslink_acc", "mp.nme_buslink_acp", "mp.nme_gen", "mp.nme_gen3p", "mp.nme_gen3p_acc", "mp.nme_gen3p_acp", "mp.nme_gen_ac", "mp.nme_gen_acc", "mp.nme_gen_acp", "mp.nme_gen_dc", "mp.nme_legacy_dcline", "mp.nme_legacy_dcline_ac", "mp.nme_legacy_dcline_acc", "mp.nme_legacy_dcline_acp", "mp.nme_legacy_dcline_dc", "mp.nme_line3p", "mp.nme_load", "mp.nme_load3p", "mp.nme_load_ac", "mp.nme_load_acc", "mp.nme_load_acp", "mp.nme_load_dc", "mp.nme_shunt", "mp.nme_shunt_ac", "mp.nme_shunt_acc", "mp.nme_shunt_acp", "mp.nme_shunt_dc", "mp.nme_xfmr3p", "mp.task", "mp.task_cpf", "mp.task_cpf_legacy", "mp.task_opf", "mp.task_opf_legacy", "mp.task_pf", "mp.task_pf_legacy", "mp.task_shared_legacy", "mp.xt_3p", "mp.xt_legacy_dcline", "mp.xt_reserves", "mp_table", "mp_table_subclass", "<span class=\"section-number\">2. </span>Functions", "mp_table_class", "run_cpf", "run_mp", "run_opf", "run_pf", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Reference Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> User\u2019s Manual"], "terms": {"matpowhttpgithubcomusermanual": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "matlabreggnuoctavpsercpower": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "systemengin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "researchcentercertconsortiumelectrreliabltechnologisolutmip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "interiorpoint": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "solvermp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "readmopt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "model": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "most": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "optimschedultooltechnicnotedeveloprefer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458], "The": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 16, 17, 18, 19, 20, 25, 29, 30, 36, 37, 41, 42, 59, 60, 61, 65, 76, 77, 78, 102, 103, 104, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 176, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 216, 217, 223, 225, 229, 232, 233, 238, 239, 240, 245, 271, 274, 290, 291, 292, 295, 296, 297, 390, 395, 437, 445, 446, 447, 449, 457, 458], "team": 0, "would": [0, 2, 3, 4, 6, 7, 8, 16, 18, 63, 105, 150, 156, 176, 237, 244, 395], "like": [0, 4, 6, 8, 16, 41, 105, 106, 109, 110, 111, 142, 149, 174, 176, 179, 223, 232, 244, 296, 395, 449], "support": [0, 6, 21, 23, 24, 109, 114, 117, 125, 126, 131, 135, 138, 232, 441, 451], "numer": [0, 4, 6, 16, 18, 19, 25, 30, 41, 59, 63, 106, 146, 182, 189, 197, 217, 225, 296, 441], "grant": [0, 232], "contract": [0, 76], "have": [0, 2, 3, 4, 6, 8, 12, 16, 18, 42, 59, 61, 80, 105, 106, 108, 179, 232, 236, 395], "contribut": [0, 6, 16], "directli": [0, 2, 3, 4, 7, 16, 37, 106, 156, 159, 168, 170, 183, 190, 216, 223, 229, 232, 233, 245, 449], "indirectli": [0, 291, 292, 293, 294, 295, 437], "over": [0, 42, 65, 437], "year": 0, "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 25, 29, 36, 37, 39, 40, 42, 58, 59, 61, 62, 63, 73, 75, 80, 103, 105, 106, 108, 142, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 177, 178, 181, 182, 184, 185, 186, 189, 192, 215, 217, 223, 225, 226, 228, 229, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 289, 290, 291, 292, 295, 296, 297, 325, 329, 390, 392, 393, 394, 395, 437, 438, 439, 441, 442, 443, 447, 448, 449, 452, 453, 454, 455, 457, 458], "includ": [0, 1, 3, 4, 6, 8, 12, 14, 16, 17, 18, 19, 29, 44, 57, 62, 63, 65, 73, 76, 77, 78, 80, 106, 142, 176, 189, 217, 232, 238, 239, 240, 243, 244, 260, 282, 289, 293, 297, 323, 337, 338, 339, 340, 341, 342, 343, 344, 365, 371, 391, 392, 393, 395, 396, 437, 438, 442, 452, 453, 454, 455, 457], "fund": [0, 232], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 25, 29, 30, 36, 39, 40, 42, 57, 58, 60, 61, 62, 63, 65, 82, 83, 94, 102, 103, 105, 106, 107, 108, 109, 110, 111, 118, 119, 120, 123, 124, 130, 131, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 176, 179, 184, 186, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 216, 226, 232, 236, 237, 238, 241, 242, 244, 245, 260, 261, 272, 273, 274, 287, 289, 291, 292, 293, 294, 295, 296, 297, 306, 311, 316, 318, 320, 321, 322, 323, 325, 338, 339, 340, 342, 343, 344, 346, 350, 351, 352, 353, 354, 363, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 413, 414, 416, 417, 418, 421, 422, 424, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 449, 451, 453, 457], "u": [0, 3, 7, 12, 16, 17, 25, 29, 30, 73, 105, 106, 107, 108, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 232, 238, 243, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 276, 277, 281, 282, 284, 287], "depart": [0, 232], "energi": [0, 76, 77, 232], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 25, 29, 30, 35, 41, 42, 59, 61, 62, 63, 65, 73, 75, 76, 77, 78, 79, 83, 84, 85, 86, 89, 90, 95, 96, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 131, 142, 143, 144, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 174, 176, 179, 180, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 214, 217, 223, 227, 229, 231, 232, 235, 236, 238, 244, 245, 249, 260, 261, 262, 263, 265, 266, 267, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 289, 292, 293, 295, 296, 355, 356, 357, 358, 359, 360, 361, 364, 390, 391, 395, 401, 408, 409, 410, 411, 425, 431, 437, 439, 441, 443, 448, 458], "nation": [0, 232], "scienc": [0, 232], "foundat": [0, 232], "2": [0, 1, 2, 3, 4, 7, 8, 9, 12, 16, 17, 18, 19, 25, 27, 29, 30, 61, 63, 75, 78, 79, 82, 90, 92, 105, 106, 108, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 173, 174, 176, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 221, 222, 225, 226, 228, 232, 235, 236, 238, 241, 242, 244, 245, 260, 262, 263, 266, 269, 272, 274, 276, 277, 287, 289, 292, 293, 295, 296, 390, 396, 419, 437, 448], "arpa": 0, "e": [0, 1, 2, 3, 4, 6, 7, 8, 9, 13, 15, 16, 17, 18, 25, 28, 29, 41, 59, 61, 65, 74, 75, 95, 96, 97, 99, 105, 106, 112, 146, 151, 156, 157, 168, 169, 170, 171, 175, 176, 179, 187, 188, 189, 197, 217, 220, 235, 238, 241, 244, 245, 261, 265, 271, 273, 281, 282, 289, 290, 291, 292, 293, 294, 295, 297, 325, 390, 395, 437, 438, 444, 449, 453], "3": [0, 1, 2, 3, 7, 8, 9, 11, 16, 17, 19, 25, 29, 30, 41, 42, 59, 61, 75, 78, 79, 87, 88, 89, 90, 91, 92, 105, 106, 108, 109, 110, 111, 125, 135, 142, 143, 144, 145, 146, 147, 148, 149, 158, 160, 163, 164, 168, 169, 170, 171, 174, 176, 179, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 221, 222, 225, 226, 228, 232, 235, 236, 238, 247, 249, 250, 253, 254, 259, 262, 263, 264, 266, 267, 269, 270, 274, 275, 277, 278, 287, 288, 289, 292, 293, 295, 296, 346, 347, 348, 355, 356, 357, 358, 359, 360, 361, 363, 364, 376, 377, 388, 389, 390, 391, 402, 403, 404, 408, 409, 410, 412, 413, 414, 424, 426, 436, 437, 445], "other": [0, 1, 2, 3, 5, 6, 7, 8, 16, 18, 36, 41, 59, 103, 105, 106, 143, 144, 145, 146, 147, 148, 161, 168, 170, 171, 176, 189, 194, 197, 225, 232, 234, 238, 244, 297, 441, 448, 456, 457], "part": [0, 9, 16, 18, 19, 105, 232, 292, 293, 391, 392, 395], "offic": [0, 232], "deliveri": [0, 232], "transmiss": [0, 1, 3, 8, 10, 18, 20, 232, 260, 337, 338, 339, 340, 341, 342, 343, 344, 396], "program": [0, 6, 7, 20, 25, 30, 37, 106, 110, 115, 121, 124, 127, 133, 143, 144, 145, 146, 147, 148, 153, 155, 168, 169, 170, 171, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 232], "under": [0, 3, 6, 29, 42, 217, 218, 219, 232, 449], "laboratori": [0, 232], "cooper": [0, 232], "agreement": [0, 232], "No": [0, 25, 232, 445, 446], "de": [0, 232], "fc26": [0, 232], "09nt43321": [0, 232], "materi": [0, 232], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 18, 19, 20, 25, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 57, 58, 59, 60, 61, 62, 63, 65, 73, 75, 76, 77, 78, 79, 80, 101, 103, 104, 105, 106, 108, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 168, 169, 170, 171, 174, 176, 178, 179, 180, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 262, 263, 265, 274, 276, 289, 291, 292, 293, 294, 295, 296, 297, 365, 371, 390, 391, 395, 437, 448, 449, 451, 452, 453, 454, 455, 457, 458], "base": [0, 1, 3, 7, 9, 11, 13, 15, 16, 18, 19, 25, 30, 36, 42, 63, 78, 79, 103, 105, 106, 143, 144, 145, 147, 148, 158, 159, 160, 164, 168, 169, 170, 179, 181, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 215, 232, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 452, 456, 458], "upon": [0, 3, 189, 232, 238], "work": [0, 10, 16, 142, 150, 232, 237, 391, 394, 449, 451], "Nos": [0, 232], "0532744": [0, 232], "1642341": [0, 232], "1931421": [0, 232], "ani": [0, 1, 2, 6, 7, 8, 11, 16, 18, 58, 62, 73, 105, 106, 142, 152, 153, 154, 155, 156, 176, 179, 223, 232, 236, 237, 238, 244, 289, 290, 296, 325, 391, 437, 448, 453], "opinion": [0, 232], "find": [0, 1, 4, 9, 12, 16, 232, 441], "conclus": [0, 232], "recommend": [0, 12, 150, 232], "express": [0, 8, 226, 232], "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 25, 29, 30, 36, 37, 41, 42, 58, 59, 60, 61, 62, 63, 65, 77, 78, 79, 102, 103, 104, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 176, 179, 180, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 216, 223, 225, 227, 229, 232, 233, 235, 236, 238, 239, 241, 244, 245, 260, 262, 263, 266, 268, 269, 271, 274, 276, 277, 281, 284, 287, 290, 291, 292, 295, 296, 297, 325, 390, 392, 393, 394, 395, 437, 439, 441, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455], "those": [0, 1, 2, 3, 6, 7, 12, 16, 42, 106, 150, 232, 239, 244, 449], "author": [0, 232], "do": [0, 1, 16, 65, 76, 77, 78, 79, 156, 157, 189, 232, 235, 237, 290, 391, 394, 437, 441], "necessarili": [0, 41, 150, 232], "reflect": [0, 232], "view": [0, 232], "synthet": 0, "data": [0, 1, 5, 8, 11, 17, 20, 39, 40, 41, 42, 45, 46, 47, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 73, 104, 105, 106, 176, 216, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 303, 325, 338, 339, 342, 343, 344, 346, 350, 351, 352, 353, 354, 363, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 394, 395, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456], "grid": 0, "r": [0, 9, 10, 19, 25, 29, 63, 105, 106, 147, 157, 159, 161, 164, 189, 198, 245, 260, 274, 281, 287, 292, 391], "d": [0, 4, 8, 10, 16, 18, 25, 75, 156, 189, 225, 238, 241, 242, 245, 248, 296, 395, 437, 438, 439, 440, 441, 442, 443, 444, 452, 453, 454, 455], "project": [0, 6, 10, 20, 22, 232], "A": [1, 2, 3, 4, 7, 8, 9, 10, 11, 16, 19, 25, 29, 30, 59, 60, 105, 106, 107, 108, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 238, 241, 243, 244, 245, 289, 297, 325, 357, 360, 365, 371, 390, 395], "new": [1, 2, 3, 8, 11, 12, 17, 18, 20, 36, 38, 39, 40, 59, 65, 103, 106, 146, 176, 197, 215, 241, 390, 437, 445, 446, 457], "orient": [1, 2, 6, 24, 236, 448, 449], "core": [1, 2, 19, 157, 161, 456, 457, 458], "design": [1, 6, 8], "around": [1, 2, 42, 449, 452, 454, 455], "concept": 1, "gener": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 38, 39, 40, 41, 42, 44, 58, 62, 63, 65, 73, 76, 78, 79, 80, 95, 96, 97, 99, 102, 105, 106, 109, 111, 142, 149, 179, 232, 238, 244, 250, 251, 256, 268, 269, 270, 271, 281, 282, 362, 363, 364, 365, 366, 367, 368, 369, 382, 391, 411, 412, 413, 414, 415, 416, 417, 418, 440, 442, 445, 447, 449, 452, 453, 454, 455, 457], "element": [1, 5, 9, 10, 11, 17, 19, 20, 25, 41, 59, 61, 76, 77, 105, 106, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 179, 184, 185, 186, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 225, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 306, 311, 316, 319, 324, 325, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 445, 446, 447, 452, 453, 454, 455, 456], "wa": [1, 9, 42, 105, 106, 176, 189, 225, 226, 228, 232], "introduc": [1, 2, 9, 18], "8": [1, 7, 8, 16, 17, 18, 19, 25, 30, 77, 143, 144, 145, 147, 148, 157, 158, 160, 164, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 449], "0": [1, 3, 7, 13, 15, 16, 17, 18, 19, 25, 27, 29, 30, 42, 59, 61, 63, 65, 73, 77, 79, 95, 96, 97, 99, 102, 106, 111, 123, 128, 129, 143, 144, 145, 146, 147, 148, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 173, 176, 179, 180, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 221, 222, 223, 225, 226, 227, 228, 229, 232, 238, 244, 284, 292, 295, 390, 391, 395, 437, 439, 441, 443, 449, 458], "along": [1, 6, 16, 36, 103, 179, 215, 292, 390], "emploi": 1, "chapter": [1, 25], "give": [1, 105, 106], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 16, 18, 19, 20, 28, 39, 40, 58, 59, 60, 61, 62, 63, 64, 74, 76, 77, 78, 79, 105, 106, 109, 110, 112, 142, 151, 152, 153, 154, 155, 156, 157, 170, 175, 176, 179, 180, 184, 189, 217, 220, 235, 236, 238, 239, 240, 241, 244, 245, 289, 291, 292, 293, 294, 296, 297, 304, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 347, 348, 349, 350, 351, 352, 356, 364, 365, 371, 377, 389, 390, 395, 437, 448, 449, 454, 458], "primari": [1, 4, 36, 103, 215, 232], "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 36, 39, 40, 42, 60, 63, 65, 73, 75, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 217, 218, 219, 221, 222, 224, 230, 232, 235, 236, 238, 244, 245, 261, 265, 271, 272, 273, 281, 282, 283, 289, 290, 292, 293, 295, 297, 301, 305, 390, 391, 398, 427, 437, 439, 440, 441, 443, 444, 448, 449, 452, 453, 454, 455, 456, 457, 458], "solv": [1, 6, 11, 16, 17, 19, 20, 23, 25, 27, 29, 30, 37, 42, 65, 104, 105, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 173, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 216, 297, 325, 391, 394, 395, 437, 438, 452, 453, 454, 455], "steadi": [1, 6, 20], "state": [1, 3, 6, 7, 8, 9, 16, 18, 20, 57, 176, 189, 217, 238, 244, 291, 292, 293, 294, 295, 297, 306, 311, 316, 330, 333, 336, 390, 391, 392, 393, 394, 395, 408, 411, 412, 415, 418, 419, 420, 423, 437], "simul": [1, 3, 20, 453, 456, 458], "problem": [1, 2, 3, 6, 7, 8, 11, 16, 17, 20, 25, 27, 30, 42, 65, 69, 70, 71, 72, 94, 104, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 173, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 238, 297, 308, 310, 313, 315, 317, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 379, 380, 381, 385, 386, 387, 389, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 452, 454, 455], "flow": [1, 3, 7, 8, 11, 17, 18, 20, 25, 42, 65, 67, 68, 73, 244, 260, 261, 272, 273, 292, 297, 304, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 342, 343, 344, 353, 354, 359, 360, 361, 368, 369, 374, 375, 380, 381, 386, 387, 437, 438, 439, 440, 441, 442, 443, 445, 446, 450, 452, 453, 454, 455], "continu": [1, 7, 16, 17, 19, 36, 95, 103, 106, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 176, 177, 178, 181, 182, 184, 185, 186, 189, 215, 239, 279, 285, 327, 328, 329, 330, 331, 332, 333, 334, 335, 390, 437, 438, 439, 445, 446, 450, 452, 458], "At": [1, 232], "top": [1, 2, 20, 78, 156, 456, 458], "level": [1, 2, 25, 42, 106, 143, 144, 145, 146, 147, 148, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 227, 449, 456, 458], "task": [1, 3, 5, 6, 7, 17, 238, 239, 240, 241, 290, 297, 325, 390, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 452, 453, 454, 455, 456], "construct": [1, 2, 8, 11, 16, 18, 19, 20, 61, 105, 114, 236, 238, 240, 274, 290, 390, 395, 408, 448, 449], "variou": [1, 2, 6, 16, 18, 104, 105, 146, 157, 161, 171, 176, 197], "layer": [1, 2, 11, 16, 17, 18, 437], "desir": [1, 3, 4, 7, 8, 42, 60, 106, 182, 296, 453], "type": [1, 2, 3, 4, 7, 12, 17, 19, 20, 29, 36, 38, 41, 59, 60, 61, 103, 105, 106, 110, 152, 153, 154, 155, 215, 217, 232, 235, 236, 238, 241, 244, 245, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 289, 290, 291, 292, 295, 297, 325, 390, 391, 392, 393, 394, 395, 401, 437, 445, 446, 447, 448, 449, 453], "formul": [1, 2, 5, 7, 17, 19, 106, 236, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 329, 390, 392, 393, 394, 395, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 427, 428, 429, 430, 432, 433, 434, 435, 445, 446], "propog": 1, "back": [1, 3, 4, 16, 29, 65, 80, 105, 108, 156, 164, 176, 179, 182, 238, 244, 291, 297, 390, 437, 439, 441, 443], "through": [1, 2, 3, 4, 7, 8, 18, 19, 180, 186, 216, 237, 238, 449], "explicit": [1, 2, 12, 18, 29, 164, 237], "three": [1, 2, 3, 8, 11, 16, 17, 18, 20, 43, 44, 78, 81, 106, 176, 217, 244, 276, 290, 445, 456], "structur": [1, 3, 4, 8, 16, 25, 30, 39, 40, 41, 60, 61, 64, 65, 73, 75, 105, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 176, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 244, 296, 390], "decoupl": [1, 106, 158, 161, 323], "one": [1, 2, 3, 4, 6, 8, 11, 16, 18, 39, 40, 41, 42, 58, 62, 63, 78, 105, 106, 150, 152, 153, 154, 155, 156, 176, 180, 189, 216, 217, 244, 289, 292, 293, 296, 390, 391, 395, 449, 453], "anoth": [1, 7, 8, 16, 18, 106, 156, 182, 216, 244, 449], "visibl": [1, 3, 16, 18, 77, 157, 244], "paramet": [1, 4, 7, 9, 16, 19, 25, 29, 59, 62, 106, 109, 111, 149, 157, 161, 184, 185, 186, 189, 236, 237, 238, 239, 244, 274, 279, 285, 291, 292, 295, 326, 365, 367, 371, 390, 391, 394, 395, 397, 400, 408, 412, 415, 418, 420, 423, 424, 426, 427, 430, 432, 435, 436, 438, 447], "quantiti": [1, 16, 73, 189, 236, 281, 395, 447], "network": [1, 2, 3, 5, 11, 17, 19, 20, 65, 244, 290, 291, 292, 293, 294, 295, 297, 298, 301, 306, 311, 316, 325, 330, 333, 336, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 452, 453, 454, 455, 456], "connect": [1, 8, 18, 19, 238, 244, 390, 395], "mathemat": [1, 5, 6, 8, 9, 20, 106, 216, 244, 290, 297, 304, 325, 382, 383, 437, 438, 440, 442, 445, 446, 447, 452, 453, 454, 455, 456], "being": [1, 3, 8, 16, 39, 40, 41, 57, 59, 105, 106, 143, 144, 145, 146, 147, 148, 176, 244, 289, 437, 452, 458], "resepect": 1, "math": [1, 2, 11, 16, 17, 290, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 437, 438, 440, 441, 442], "shown": [1, 3, 4, 8, 11, 16, 18, 25, 29, 76, 77, 78, 79, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "figur": [1, 2, 3, 4, 7, 8, 11, 16, 18, 76, 77, 78, 79], "further": [1, 7, 8, 59, 325, 395], "particular": [1, 2, 3, 4, 8, 16, 17, 36, 41, 42, 58, 103, 105, 106, 180, 215, 232, 244, 245, 291, 325, 390, 395, 437], "format": [1, 2, 3, 4, 5, 16, 18, 20, 39, 40, 42, 43, 44, 61, 80, 81, 82, 83, 106, 238, 241, 242, 245, 290, 445, 446, 447, 456], "legaci": [1, 2, 3, 16, 17, 20, 23, 36, 103, 215, 238, 243, 252, 272, 273, 308, 310, 313, 315, 317, 326, 366, 370, 371, 372, 373, 374, 375, 419, 420, 421, 422, 423, 439, 441, 443, 444, 446, 456, 457], "case": [1, 3, 4, 7, 8, 11, 16, 17, 18, 20, 38, 39, 40, 41, 42, 43, 44, 58, 60, 61, 62, 63, 76, 77, 78, 79, 80, 81, 82, 83, 94, 105, 106, 152, 153, 154, 155, 156, 223, 229, 238, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 297, 390, 395, 437, 439, 441, 442, 443, 444, 452, 453, 454, 455, 458], "struct": [1, 2, 3, 4, 7, 11, 13, 15, 16, 19, 25, 28, 29, 30, 38, 39, 40, 41, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 76, 77, 78, 79, 102, 105, 106, 109, 110, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 217, 220, 236, 237, 238, 241, 242, 244, 245, 290, 292, 293, 294, 295, 296, 297, 318, 325, 365, 371, 390, 395, 437, 438, 439, 441, 443, 444, 452, 453, 454, 455], "mpc": [1, 2, 3, 4, 16, 19, 38, 39, 40, 47, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 238, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 317, 437, 439, 441, 443, 444, 452, 453, 454, 455], "file": [1, 3, 6, 11, 12, 13, 14, 15, 20, 23, 36, 39, 40, 42, 43, 44, 46, 47, 49, 52, 58, 60, 61, 62, 63, 76, 77, 78, 79, 80, 81, 82, 83, 103, 142, 170, 215, 223, 232, 238, 241, 242, 244, 437, 452, 453, 454, 455, 457], "convers": [1, 3, 4, 16, 42, 238, 244], "servic": [1, 8, 16, 18, 272, 339, 342, 343, 344, 346, 350, 351, 352, 353, 354, 363, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388], "convert": [1, 3, 5, 20, 42, 62, 63, 80, 106, 107, 108, 216, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 289, 290, 297, 306, 311, 316, 330, 333, 336, 390, 437, 438, 441, 444, 445, 446, 447, 456], "between": [1, 2, 3, 4, 7, 8, 16, 18, 42, 185, 223, 225, 226, 228, 229, 238, 241, 329, 390, 437], "specif": [1, 3, 7, 8, 11, 13, 15, 16, 18, 37, 59, 65, 105, 106, 146, 157, 158, 159, 160, 161, 164, 170, 171, 197, 216, 217, 232, 233, 238, 239, 240, 241, 243, 244, 245, 290, 291, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 390, 392, 393, 394, 395, 437, 439, 441, 443, 444, 445, 446, 447, 452, 453, 454, 455, 458], "extern": [1, 16, 390], "each": [1, 2, 3, 4, 6, 7, 8, 11, 16, 17, 18, 41, 42, 59, 63, 76, 77, 79, 105, 106, 152, 153, 154, 155, 156, 176, 189, 217, 223, 225, 227, 229, 238, 240, 241, 244, 245, 276, 282, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 357, 358, 360, 361, 390, 391, 394, 395, 437, 445, 446, 457], "plu": [1, 227], "organ": [1, 3, 6, 41, 238], "collect": [1, 6, 16, 18, 73, 106, 176, 292, 295], "enclos": [1, 289], "contain": [1, 2, 3, 4, 6, 7, 8, 11, 16, 17, 18, 19, 25, 29, 30, 39, 40, 41, 59, 60, 61, 62, 63, 65, 75, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 168, 169, 170, 171, 174, 176, 179, 181, 182, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 223, 237, 238, 241, 244, 245, 289, 290, 297, 325, 390, 395, 437, 445, 446, 447, 449, 452, 453, 454, 455, 456], "correspond": [1, 2, 3, 4, 6, 7, 8, 11, 16, 18, 25, 30, 38, 39, 40, 58, 59, 62, 63, 79, 105, 106, 143, 144, 145, 146, 147, 148, 156, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 179, 180, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 225, 236, 238, 241, 244, 245, 281, 291, 292, 293, 294, 295, 296, 297, 325, 339, 342, 343, 344, 346, 350, 351, 352, 353, 354, 363, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 395, 437, 439, 441, 443, 444, 445, 446, 457], "devic": [1, 16], "g": [1, 2, 3, 7, 8, 13, 15, 16, 17, 18, 25, 28, 29, 59, 65, 74, 95, 96, 97, 99, 105, 106, 112, 151, 156, 157, 160, 161, 163, 165, 168, 169, 170, 171, 175, 176, 187, 217, 220, 235, 238, 241, 244, 245, 261, 265, 271, 273, 281, 282, 284, 290, 291, 292, 293, 297, 325, 390, 391, 395, 437, 438, 441, 444, 449, 453], "bu": [1, 3, 4, 16, 17, 18, 19, 42, 43, 44, 59, 61, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 238, 244, 245, 247, 248, 254, 255, 258, 260, 262, 263, 264, 265, 266, 268, 269, 272, 273, 274, 276, 277, 284, 287, 325, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 395, 401, 402, 403, 404, 405, 406, 407, 440, 445, 452, 453, 454, 455, 458], "line": [1, 2, 3, 8, 17, 18, 19, 20, 42, 76, 77, 105, 106, 186, 223, 227, 238, 240, 241, 244, 252, 253, 260, 272, 273, 274, 275, 296, 297, 337, 338, 339, 340, 341, 342, 343, 344, 370, 371, 372, 373, 374, 375, 376, 377, 390, 395, 396, 419, 420, 421, 422, 423, 424, 445, 446, 448, 456], "some": [1, 6, 7, 8, 16, 17, 18, 19, 20, 25, 42, 44, 58, 59, 104, 105, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 225, 236, 237, 244, 293, 294, 439, 441, 443, 458], "attribut": 1, "interfac": [1, 2, 6, 7, 23, 24, 30, 106, 143, 144, 145, 147, 148, 157, 158, 159, 160, 164, 168, 169, 170, 171, 174, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 458], "reserv": [1, 2, 17, 55, 57, 63, 65, 73, 76, 93, 256, 257, 281, 282, 290, 382, 383, 447, 456], "requir": [1, 3, 6, 8, 12, 16, 17, 19, 25, 41, 42, 59, 60, 61, 62, 63, 64, 65, 93, 106, 125, 129, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 157, 158, 160, 161, 168, 169, 170, 171, 179, 197, 232, 244, 282, 338, 445, 446, 447], "provid": [1, 2, 3, 4, 6, 7, 8, 16, 18, 25, 29, 30, 39, 40, 41, 60, 62, 63, 78, 79, 105, 106, 109, 110, 111, 142, 143, 144, 145, 147, 148, 149, 157, 158, 159, 160, 164, 168, 169, 170, 171, 174, 182, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 216, 237, 238, 239, 241, 244, 245, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 303, 304, 305, 306, 308, 310, 311, 313, 315, 316, 317, 319, 324, 325, 391, 395, 437, 438, 440, 442, 444, 452, 453, 454, 455, 457, 458], "extraordinari": 1, "flexibl": [1, 2, 8, 452, 453, 454, 455, 457], "allow": [1, 2, 7, 8, 11, 16, 41, 42, 59, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 156, 157, 174, 189, 217, 237, 244, 297], "environ": [1, 5, 12], "ad": [1, 2, 8, 12, 16, 17, 18, 38, 39, 40, 42, 58, 105, 106, 176, 238, 241, 292, 293, 294, 296, 297, 303, 304, 328, 329, 336, 339, 340, 341, 342, 350, 357, 358, 359, 360, 361, 366, 367, 382, 383, 390], "modifi": [1, 3, 4, 6, 7, 8, 11, 16, 17, 18, 19, 41, 42, 58, 59, 75, 80, 102, 106, 109, 110, 111, 142, 149, 152, 153, 154, 155, 174, 179, 232, 241, 244, 245, 289, 290, 296, 390, 395, 445, 446, 447], "exist": [1, 2, 3, 8, 17, 39, 40, 65, 105, 106, 180, 187, 188, 217, 223, 238, 244, 245, 289, 296], "independ": [1, 7], "rest": [1, 8], "In": [1, 2, 3, 4, 6, 7, 8, 11, 12, 16, 17, 18, 41, 42, 105, 106, 189, 244, 297, 395, 437, 449], "given": [1, 3, 4, 7, 8, 9, 16, 17, 25, 39, 40, 41, 57, 61, 105, 106, 108, 168, 169, 170, 171, 176, 223, 227, 238, 244, 245, 276, 390, 395], "run": [1, 2, 3, 5, 6, 12, 16, 17, 18, 20, 35, 65, 101, 104, 176, 186, 187, 189, 194, 198, 214, 217, 218, 219, 221, 222, 227, 231, 232, 290, 437, 442, 450, 452, 453, 454, 455, 458], "set": [1, 2, 3, 4, 7, 8, 11, 13, 15, 16, 18, 25, 29, 38, 41, 42, 58, 59, 61, 62, 63, 65, 75, 102, 105, 106, 107, 108, 109, 110, 111, 135, 142, 149, 162, 163, 168, 174, 176, 177, 178, 179, 181, 182, 183, 189, 216, 221, 227, 228, 232, 236, 238, 244, 289, 290, 291, 318, 325, 326, 390, 391, 392, 393, 394, 395, 440, 441, 442, 445, 446, 452, 454, 455], "creat": [1, 2, 3, 4, 7, 8, 12, 14, 18, 20, 57, 59, 63, 64, 65, 76, 77, 78, 79, 102, 106, 152, 153, 154, 155, 232, 235, 236, 237, 238, 239, 240, 241, 244, 245, 296, 297, 304, 390, 395, 437, 441, 453], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 18, 19, 20, 25, 29, 30, 32, 36, 37, 41, 42, 58, 59, 61, 62, 63, 65, 75, 78, 79, 103, 104, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 216, 221, 223, 232, 233, 234, 236, 237, 238, 241, 243, 244, 245, 276, 289, 290, 291, 292, 293, 294, 295, 297, 325, 329, 330, 331, 332, 333, 334, 335, 390, 395, 437, 438, 440, 441, 442, 445, 446, 448, 449, 451, 452, 454, 455, 458], "show": [1, 2, 3, 4, 7, 8, 16, 17, 18, 42], "mai": [1, 3, 8, 9, 16, 25, 41, 59, 65, 106, 149, 176, 192, 232, 238], "sourc": [1, 3, 4, 6, 12, 13, 14, 15, 17, 18, 20, 36, 103, 156, 215, 232, 238, 241, 242, 244, 245, 437, 439, 441, 443, 444, 452, 453, 454, 455, 457], "individu": [1, 3, 7, 8, 11, 16, 18, 19, 23, 35, 76, 77, 78, 101, 105, 106, 214, 216, 221, 222, 227, 230, 231, 238, 244, 289, 326], "4": [1, 2, 8, 9, 11, 16, 17, 19, 25, 29, 30, 41, 105, 106, 119, 143, 144, 145, 146, 147, 148, 150, 164, 168, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 221, 222, 225, 226, 228, 232, 235, 262, 263, 290, 390, 408, 443, 449], "label": [1, 3, 8, 16, 18, 41, 59, 78, 79, 105, 158, 189, 238, 244, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287, 291, 293, 294, 295, 390], "white": 1, "circl": 1, "convent": [1, 3, 4, 5, 7, 8, 238, 241, 244, 245, 290, 297, 325, 390, 395], "throughout": [1, 3, 9, 61, 238], "codebas": 1, "variabl": [1, 3, 6, 8, 9, 18, 25, 30, 41, 60, 65, 105, 106, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 238, 241, 243, 244, 245, 291, 292, 293, 294, 295, 296, 297, 304, 325, 359, 365, 371, 382, 390, 391, 392, 393, 394, 395, 403, 404, 405, 406, 407, 408, 412, 415, 418, 420, 423, 447, 448, 449], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 15, 17, 18, 19, 25, 28, 30, 36, 38, 39, 40, 42, 58, 59, 60, 61, 62, 63, 73, 74, 75, 76, 77, 78, 79, 103, 105, 106, 109, 110, 111, 112, 142, 149, 151, 156, 157, 174, 175, 179, 180, 188, 189, 215, 217, 220, 223, 227, 232, 236, 238, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 326, 337, 345, 346, 355, 362, 363, 370, 376, 378, 382, 383, 384, 388, 390, 395, 396, 401, 402, 408, 411, 412, 419, 424, 425, 426, 431, 436, 437, 439, 440, 441, 442, 443, 444, 448, 452, 453, 454, 455, 458], "singl": [1, 2, 3, 8, 16, 17, 18, 19, 20, 25, 30, 41, 60, 78, 80, 82, 83, 95, 96, 105, 106, 107, 143, 144, 145, 146, 147, 148, 158, 159, 160, 161, 164, 168, 169, 170, 171, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 227, 236, 238, 244, 251, 266, 289, 290, 292, 295, 296, 390, 395, 445], "manag": [1, 11, 105], "overal": [1, 6, 42], "process": [1, 2, 4, 6, 11, 20, 241, 243, 244, 437, 439, 441, 443, 444], "pf": [1, 2, 3, 7, 11, 16, 17, 19, 73, 152, 290, 297, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 359, 360, 361, 437, 438, 442, 443, 444, 445, 446, 450, 455], "cpf": [1, 2, 3, 7, 11, 16, 17, 19, 239, 279, 285, 290, 297, 298, 299, 300, 301, 302, 303, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 335, 359, 360, 361, 379, 385, 437, 438, 439, 444, 445, 446, 450, 452, 453], "opf": [1, 2, 3, 6, 7, 11, 17, 18, 19, 42, 49, 53, 54, 55, 69, 70, 80, 94, 106, 109, 111, 142, 149, 150, 153, 155, 174, 238, 240, 261, 264, 265, 267, 270, 271, 273, 275, 278, 280, 283, 286, 288, 290, 297, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 356, 357, 358, 364, 365, 366, 367, 371, 372, 373, 377, 389, 437, 440, 441, 444, 445, 446, 447, 450, 453, 454, 456, 458], "ha": [1, 2, 3, 4, 6, 7, 8, 11, 16, 18, 59, 102, 105, 106, 177, 178, 179, 189, 236, 244, 276, 289, 325, 390, 442, 448, 449], "method": [1, 4, 5, 6, 7, 8, 16, 17, 18, 19, 25, 29, 105, 106, 111, 131, 157, 158, 159, 160, 161, 164, 171, 189, 197, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 279, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 415, 418, 419, 420, 423, 424, 425, 426, 427, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 457], "up": [1, 8, 12, 16, 17, 18, 41, 42, 65, 105, 106, 216, 221, 232, 318, 449, 457], "correspnd": 1, "For": [1, 2, 3, 4, 6, 7, 8, 16, 17, 18, 42, 59, 61, 105, 106, 109, 111, 150, 189, 217, 236, 244, 283, 291, 292, 293, 294, 295, 390, 395, 445, 446, 447, 452, 453, 454, 455, 458], "exampl": [1, 2, 3, 4, 6, 7, 11, 13, 15, 16, 17, 18, 20, 25, 26, 27, 30, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 66, 67, 68, 69, 70, 71, 72, 81, 82, 83, 103, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 217, 221, 222, 223, 225, 226, 227, 228, 229, 241, 244, 290, 296, 390, 395, 452, 453, 454, 455, 458], "follow": [1, 3, 7, 8, 9, 11, 12, 16, 17, 18, 19, 25, 27, 29, 30, 36, 37, 38, 39, 40, 41, 42, 44, 59, 61, 62, 63, 73, 76, 77, 78, 79, 80, 103, 104, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 173, 174, 176, 179, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 216, 217, 223, 225, 226, 228, 229, 232, 233, 236, 238, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 289, 390, 391, 392, 393, 394, 452, 453, 454, 455, 458], "9": [1, 2, 16, 17, 19, 30, 42, 111, 128, 129, 143, 144, 145, 147, 148, 149, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 232, 289, 390], "mpopt": [1, 2, 7, 16, 17, 19, 65, 109, 110, 111, 142, 149, 150, 152, 153, 154, 155, 174, 238, 240, 243, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 283, 284, 287, 290, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 334, 335, 336, 339, 340, 341, 342, 343, 344, 346, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 452, 453, 454, 455, 458], "mpoption": [1, 2, 17, 19, 65, 75, 109, 110, 111, 142, 149, 150, 152, 153, 154, 155, 156, 174, 458], "verbos": [1, 17, 19, 25, 29, 30, 35, 65, 73, 100, 101, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 214, 227, 231, 232], "option": [1, 3, 4, 5, 6, 7, 8, 11, 12, 16, 17, 18, 25, 29, 30, 37, 38, 39, 40, 58, 60, 61, 62, 63, 65, 73, 75, 76, 77, 78, 79, 102, 105, 106, 109, 110, 111, 135, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 180, 181, 182, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 217, 221, 223, 225, 226, 227, 229, 232, 233, 236, 238, 243, 244, 245, 290, 291, 292, 293, 295, 296, 297, 305, 316, 318, 325, 390, 391, 395, 437, 438, 439, 441, 442, 443, 444, 452, 453, 454, 455, 458], "task_opf": [1, 11, 234, 441, 453, 454, 456], "case9": [1, 3, 4, 19, 452, 453, 454, 455, 458], "step": [1, 3, 4, 7, 8, 11, 12, 16, 25, 106, 160, 164, 171, 176, 178, 179, 184, 185, 186, 188, 189, 197, 232, 449], "list": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 60, 62, 63, 106, 152, 153, 154, 155, 164, 176, 238, 240, 244, 245, 289, 390, 449], "roughli": [1, 3, 238], "equival": [1, 16, 18, 108, 229, 260, 296], "perform": [1, 7, 25, 29, 30, 65, 157, 158, 159, 160, 164, 169, 170, 189, 196, 238], "when": [1, 2, 3, 4, 6, 8, 9, 12, 16, 18, 28, 41, 42, 60, 65, 74, 76, 77, 105, 106, 112, 151, 156, 161, 175, 177, 178, 189, 217, 220, 221, 232, 234, 238, 241, 244, 296, 297, 390, 395, 437, 438, 448, 449], "It": [1, 3, 4, 6, 8, 16, 18, 19, 20, 41, 73, 106, 223, 232, 238, 241, 449, 453], "defin": [1, 3, 4, 6, 7, 8, 11, 16, 18, 19, 25, 30, 41, 42, 58, 59, 63, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 156, 168, 169, 170, 171, 174, 176, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 225, 235, 236, 238, 239, 243, 244, 245, 271, 274, 282, 292, 295, 297, 326, 390, 391, 395], "well": [1, 2, 3, 8, 16, 18, 20, 76, 77, 106, 216, 296, 390, 391, 437, 441, 447], "explicitli": [1, 8, 12, 16, 189, 391], "actual": [1, 6, 11, 25, 168, 169, 170, 171, 223, 225, 226, 229, 245, 395], "code": [1, 7, 12, 16, 17, 18, 19, 25, 106, 146, 147, 150, 157, 158, 159, 160, 161, 164, 168, 170, 171, 197, 198, 217, 218, 219, 232, 236, 320, 321, 322, 323, 329, 441, 451, 458], "thei": [1, 2, 4, 7, 8, 11, 12, 16, 18, 37, 105, 106, 216, 225, 232, 233, 290, 297], "return": [1, 2, 3, 4, 8, 11, 16, 18, 25, 28, 35, 39, 40, 58, 60, 62, 63, 74, 75, 76, 77, 78, 79, 101, 102, 105, 106, 107, 112, 142, 147, 150, 151, 156, 158, 170, 175, 176, 179, 180, 188, 189, 191, 198, 214, 217, 220, 231, 235, 238, 241, 242, 244, 245, 290, 291, 292, 293, 294, 295, 296, 297, 325, 326, 349, 365, 390, 391, 395, 437, 439, 441, 443, 448, 449, 451, 452, 453, 454, 455], "call": [1, 2, 3, 4, 6, 7, 8, 11, 16, 18, 25, 28, 29, 30, 37, 60, 74, 105, 106, 109, 110, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 151, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 175, 176, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 217, 220, 221, 222, 223, 225, 226, 228, 229, 233, 234, 236, 237, 238, 241, 243, 244, 245, 292, 293, 294, 296, 297, 325, 390, 391, 394, 395, 402, 437, 438, 439, 440, 441, 442, 443, 444, 448, 449, 452, 453, 454, 455], "them": [1, 2, 3, 8, 16, 18, 19, 20, 42, 76, 77, 95, 96, 97, 99, 105, 106, 108, 109, 110, 111, 142, 149, 174, 232, 238, 244, 290, 391, 394], "overridden": [1, 2, 3, 11, 16, 17, 18, 62, 105, 168, 236, 290, 445, 446], "subclass": [1, 2, 3, 4, 7, 8, 11, 18, 105, 238, 239, 240, 241, 244, 245, 289, 291, 292, 297, 298, 301, 306, 311, 316, 319, 324, 325, 390, 391, 395, 437, 441, 449], "main": [1, 2, 3, 4, 6, 18, 25, 30, 36, 103, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 244, 245, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 452, 453, 454, 455], "specifi": [1, 2, 8, 11, 16, 18, 25, 29, 30, 38, 39, 40, 58, 59, 60, 61, 76, 77, 78, 105, 106, 143, 144, 145, 146, 147, 148, 156, 165, 167, 168, 169, 170, 171, 176, 180, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 223, 229, 236, 237, 242, 244, 245, 284, 291, 292, 295, 296, 390, 395, 437, 453], "help": [1, 6, 29, 36, 65, 103, 105, 106, 110, 215, 232, 457], "both": [1, 3, 6, 7, 8, 11, 16, 17, 18, 42, 64, 65, 77, 78, 79, 106, 223, 229, 291, 292, 293, 294, 295, 296, 297, 439, 445, 446, 451], "after": [1, 2, 12, 16, 105, 109, 110, 111, 142, 149, 174, 176, 241, 244, 437, 438, 440, 441, 442], "itself": [1, 8, 59, 156, 244, 297, 390], "also": [1, 3, 4, 6, 7, 8, 9, 11, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 35, 39, 40, 41, 42, 58, 61, 65, 74, 75, 78, 79, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 323, 325, 390, 391, 392, 393, 394, 395, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455], "updat": [1, 3, 4, 6, 8, 11, 18, 20, 25, 42, 58, 65, 157, 160, 161, 164, 176, 179, 187, 188, 189, 222, 238, 241, 244, 245, 279, 285, 290, 297, 303, 325, 328, 336, 339, 342, 343, 344, 346, 350, 351, 352, 353, 354, 363, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 437, 438, 439, 441, 443, 444], "basic": [1, 232, 448], "dmc_class": [1, 17, 290, 437, 441, 445, 446, 447], "dm_converter_mpc2": [1, 3, 4, 234, 238, 241, 243, 245, 456], "v2": [1, 16, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "dm_class": [1, 17, 290, 437, 445, 446, 447], "data_model_opf": [1, 3, 234, 283, 456], "nm_class": [1, 17, 290, 437, 445, 446], "net_model_acp": [1, 8, 234, 456], "ac": [1, 6, 7, 9, 17, 19, 42, 153, 236, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 343, 347, 348, 349, 350, 351, 353, 357, 358, 359, 360, 361, 366, 368, 372, 374, 379, 380, 385, 386, 391, 392, 393, 395, 397, 398, 399, 403, 404, 405, 406, 409, 410, 413, 414, 415, 416, 417, 420, 421, 422, 427, 428, 429, 432, 433, 434, 440, 442, 445, 446, 458], "polar": [1, 2, 7, 8, 17, 19, 291, 292, 294, 297, 301, 302, 303, 311, 312, 313, 314, 315, 322, 323, 329, 333, 334, 335, 341, 348, 351, 358, 361, 393, 395, 399, 404, 406, 410, 414, 417, 422, 429, 434, 445, 446], "mm_class": [1, 17, 290, 437, 445, 446, 447], "math_model_opf_acp": [1, 7, 16, 234, 312, 315, 456], "dmc": [1, 3, 4, 238, 241, 244, 437, 438, 440, 441], "build": [1, 2, 5, 6, 18, 19, 20, 65, 106, 192, 216, 238, 241, 244, 297, 308, 310, 313, 315, 317, 325, 390, 391, 394, 395, 397, 400, 408, 412, 415, 418, 420, 423, 424, 426, 427, 430, 432, 435, 436, 437, 438], "dm": [1, 3, 4, 7, 8, 16, 18, 42, 238, 239, 240, 241, 242, 243, 244, 245, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 279, 281, 282, 283, 284, 285, 287, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 415, 418, 420, 423, 424, 426, 427, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 452, 453, 454, 455], "nm": [1, 7, 8, 16, 18, 292, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 415, 418, 420, 423, 424, 426, 427, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443], "mm": [1, 7, 8, 9, 16, 18, 292, 297, 298, 301, 304, 325, 326, 330, 333, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 395, 437, 438, 439, 441, 442, 443], "solve_opt": [1, 7, 297, 305, 316, 318, 324], "get": [1, 2, 4, 13, 15, 16, 18, 36, 42, 60, 61, 103, 105, 106, 215, 232, 236, 237, 238, 244, 245, 291, 292, 293, 294, 295, 325, 390, 391, 392, 393, 395, 437, 441, 458], "network_model_x_soln": [1, 7, 297, 437, 438, 442], "soln": [1, 16, 106, 181, 182, 391, 394, 395, 437], "port_inj_soln": [1, 391, 394], "comput": [1, 6, 8, 25, 65, 106, 143, 144, 145, 146, 147, 148, 157, 165, 166, 168, 169, 170, 171, 236, 292, 293, 294, 295, 391, 394], "data_model_upd": [1, 7, 18, 244, 297, 325], "four": [1, 2, 16, 19, 42, 106], "consist": [1, 2, 3, 8, 9, 11, 16, 18, 38, 42, 106, 395, 439, 441, 443], "hold": [1, 16, 18, 189, 289], "That": [1, 7, 8, 12, 16, 18, 19, 108, 156, 237, 242, 244, 245, 291, 292, 293, 294, 295, 297, 395, 449], "etc": [1, 3, 12, 16, 17, 18, 19, 23, 65, 73, 105, 157, 165, 166, 167, 176, 238, 244, 291, 297, 437, 448], "associ": [1, 6, 7, 8, 17], "valid": [1, 3, 60, 62, 63, 75, 105, 106, 152, 153, 154, 155, 156, 217, 235, 244, 245, 296, 325, 390, 395], "field": [1, 2, 4, 13, 15, 19, 25, 28, 29, 30, 38, 39, 40, 41, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 79, 105, 106, 109, 110, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 151, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 220, 236, 243, 244, 245, 297, 325, 365, 371, 390, 395, 438, 441], "identifi": [1, 3, 16, 29, 105, 106, 217, 238, 241, 242, 244, 390, 437], "can": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 18, 19, 25, 30, 36, 41, 59, 61, 62, 63, 65, 76, 77, 78, 79, 95, 96, 97, 99, 103, 105, 106, 107, 143, 144, 145, 146, 147, 148, 156, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 179, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 217, 223, 225, 232, 238, 244, 245, 289, 290, 292, 293, 295, 296, 297, 390, 395, 437, 448, 449, 452, 453, 454, 455, 458], "befor": [1, 2, 3, 4, 7, 8, 16, 18, 105, 106, 156, 176, 223, 229, 236, 238, 437, 439, 441, 443], "its": [1, 2, 3, 4, 6, 7, 8, 11, 16, 18, 20, 25, 42, 105, 106, 157, 159, 161, 164, 168, 169, 170, 171, 176, 189, 238, 240, 241, 244, 245, 291, 325, 390, 392, 393, 394, 395, 452, 453, 454, 455], "simpli": [1, 2, 3, 4, 6, 8, 9, 11, 16, 17, 19, 61, 106, 245, 294, 297], "loop": [1, 3, 4, 7, 8, 176, 437], "possibli": [1, 4, 16, 18, 30, 106, 107, 143, 144, 145, 146, 147, 148, 179, 191, 192, 193, 195, 196, 197, 198, 199, 200, 241, 390, 395], "access": [1, 6, 8, 17, 19, 106, 216, 236, 237, 245, 448, 449], "respect": [1, 3, 4, 7, 8, 9, 11, 16, 18, 19, 25, 29, 30, 106, 143, 144, 145, 146, 147, 148, 155, 168, 169, 170, 171, 182, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 244, 292, 390], "nme": [1, 8, 16, 291, 292, 293, 294, 295, 325, 338, 340, 357, 359, 360, 395, 402], "pull": [1, 16], "dme": [1, 3, 4, 16, 18, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 325, 366, 395], "describ": [1, 2, 3, 6, 7, 16, 17, 18, 19, 25, 30, 42, 61, 105, 106, 143, 144, 145, 146, 147, 148, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 395], "more": [1, 3, 6, 7, 8, 9, 16, 18, 39, 40, 42, 105, 106, 145, 189, 195, 199, 236, 238, 241, 244, 245, 289, 290, 291, 292, 293, 294, 295, 297, 325, 390, 395, 437, 441, 445, 446, 447, 448], "detail": [1, 3, 4, 8, 9, 16, 18, 25, 29, 30, 35, 41, 42, 43, 44, 58, 59, 61, 65, 73, 80, 81, 82, 83, 101, 105, 106, 109, 111, 142, 143, 145, 148, 149, 161, 168, 170, 176, 177, 178, 180, 187, 189, 193, 195, 199, 200, 214, 227, 231, 232, 237, 238, 241, 244, 245, 290, 291, 292, 293, 294, 295, 297, 390, 395, 445, 446, 447], "summari": [1, 3, 16, 17, 19, 73, 78, 79, 95, 96, 97, 99, 104, 105, 106, 221, 222, 227, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 279, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 415, 418, 419, 420, 423, 424, 425, 426, 427, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "inherit": [1, 2, 3, 4, 7, 8, 16, 17, 18, 237, 244, 245, 291, 292, 293, 294, 295, 297, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 390, 392, 393, 394, 395, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 413, 414, 416, 417, 418, 421, 422, 424, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 441, 445, 446, 449], "repres": [1, 6, 8, 16, 19, 41, 59, 106, 292, 390, 395], "abstract": [1, 7, 16, 18, 105, 241, 244, 245, 290, 291, 292, 297, 298, 301, 304, 305, 306, 311, 318, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 349, 355, 356, 359, 362, 365, 370, 371, 378, 384, 390, 391, 395, 396, 397, 401, 402, 408, 411, 412, 415, 419, 420, 425, 427, 431, 432, 437], "displai": [1, 3, 16, 18, 25, 78, 79, 105, 106, 109, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 223, 225, 226, 228, 229, 238, 241, 244, 296, 297, 390, 395, 437, 448, 449], "border": 1, "concret": [1, 3, 7, 8, 16, 18, 238, 241, 245, 291, 292, 293, 294, 295, 297, 390, 392, 393, 394], "doubl": [1, 25, 29, 30, 42, 61, 107, 108, 217, 225, 236, 238, 245, 260, 261, 262, 263, 265, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 292, 293, 294, 295, 297, 390, 391, 392, 393, 394, 395, 437, 442], "signific": [1, 106], "portion": [1, 4, 19, 244, 292], "implement": [1, 2, 3, 4, 6, 7, 8, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 37, 41, 104, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 153, 156, 160, 171, 176, 189, 197, 215, 218, 219, 232, 233, 236, 237, 238, 241, 242, 244, 245, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287, 289, 291, 292, 293, 294, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 408, 411, 412, 419, 424, 425, 426, 431, 436, 437, 438, 439, 440, 441, 442, 443, 448, 451], "greatli": 1, "reduc": [1, 7, 25], "effort": 1, "involv": [1, 2, 7, 8, 16, 18], "distinguish": [1, 176], "pss": [1, 4, 241], "raw": [1, 4, 192, 241, 441], "dc": [1, 7, 9, 17, 20, 42, 54, 65, 67, 68, 69, 70, 94, 150, 155, 236, 237, 243, 252, 271, 272, 273, 291, 295, 297, 316, 317, 324, 326, 336, 342, 344, 352, 354, 367, 369, 370, 371, 372, 373, 374, 375, 381, 387, 394, 400, 407, 418, 419, 420, 421, 422, 423, 430, 435, 440, 442, 446, 456], "cartesian": [1, 2, 7, 8, 17, 291, 292, 293, 298, 299, 300, 306, 307, 308, 309, 310, 320, 321, 329, 330, 331, 332, 340, 347, 350, 357, 360, 392, 398, 403, 405, 406, 409, 413, 416, 421, 428, 433, 445, 446], "goe": [1, 105], "which": [1, 2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 25, 29, 39, 40, 41, 58, 59, 61, 62, 63, 78, 79, 105, 106, 129, 143, 144, 145, 146, 147, 148, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 223, 229, 235, 239, 244, 289, 291, 292, 295, 297, 325, 390, 391, 395, 451, 458], "element_contain": [1, 2, 3, 4, 7, 8, 234, 238, 241, 297, 390, 456], "mixin": [1, 283, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 456], "share": [1, 3, 5, 6, 8, 16, 18, 283, 297, 320, 321, 322, 323, 329, 444], "mention": [1, 11, 449], "abov": [1, 2, 11, 12, 16, 18, 19, 25, 30, 41, 42, 62, 105, 106, 143, 144, 145, 146, 147, 148, 158, 159, 160, 161, 164, 168, 169, 170, 171, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 217, 233, 236, 449], "address": [1, 156, 449], "index": [1, 3, 4, 8, 9, 12, 16, 18, 29, 58, 61, 76, 77, 78, 79, 105, 106, 179, 180, 189, 236, 238, 244, 245, 260, 266, 268, 269, 272, 274, 276, 277, 281, 284, 287, 293, 296, 297, 390, 391, 392, 393, 395, 448, 449], "suppli": [1, 25, 30, 78, 79, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "properti": [1, 2, 4, 6, 7, 8, 16, 18, 105, 106, 235, 238, 241, 244, 251, 254, 255, 258, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 283, 284, 287, 289, 291, 292, 295, 297, 365, 371, 390, 391, 392, 393, 394, 395, 437, 438, 439, 440, 441, 442, 443, 449, 457], "element_class": [1, 2, 3, 4, 7, 8, 16, 18, 238, 241, 289], "sometim": [1, 3, 7, 297], "certain": [1, 4, 8, 11, 29, 438], "across": [1, 7, 8, 20, 41, 59, 61, 297, 357, 358, 360, 361, 444], "wai": [1, 2, 6, 16, 109, 110, 111, 142, 149, 150, 174, 290, 448], "match": [1, 2, 4, 41, 59, 60, 65, 106, 143, 144, 145, 146, 147, 148, 165, 167, 223, 225, 227, 229, 232, 244, 296, 357, 358, 360, 361], "path": [1, 12, 13, 14, 15, 60, 76, 77, 78, 79, 223, 232, 291], "current": [1, 2, 7, 9, 13, 15, 18, 19, 20, 25, 28, 29, 42, 73, 74, 76, 77, 78, 79, 106, 112, 142, 149, 151, 161, 171, 175, 176, 178, 179, 181, 182, 184, 185, 186, 189, 220, 260, 276, 292, 293, 294, 296, 299, 302, 305, 307, 308, 312, 313, 320, 322, 329, 331, 334, 356, 364, 377, 389, 390, 391, 437, 439, 441, 442, 443, 444, 448, 449, 452, 453, 454, 455, 457, 458], "approach": [1, 2, 16], "util": [1, 20, 106, 215], "first": [1, 2, 3, 4, 7, 8, 16, 18, 25, 30, 42, 60, 61, 62, 63, 76, 77, 78, 79, 106, 107, 142, 146, 152, 153, 155, 170, 183, 187, 190, 197, 217, 236, 290, 296, 390, 395, 448, 452, 454, 455], "we": [1, 3, 6, 8, 12, 16, 17, 18, 105, 106, 108, 232], "wrap": 1, "insid": [1, 289, 449], "inher": 1, "limit": [1, 3, 7, 11, 16, 17, 18, 25, 30, 42, 73, 106, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 177, 181, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 238, 260, 261, 265, 271, 273, 292, 293, 301, 338, 349, 350, 398, 438, 440, 442, 447], "order": [1, 2, 7, 11, 16, 18, 25, 29, 30, 41, 42, 59, 60, 61, 80, 105, 106, 109, 110, 111, 142, 149, 170, 174, 187, 236, 289, 291, 395, 441], "backward": [1, 19, 61, 109, 111, 142, 149], "compat": [1, 19, 61, 109, 111, 142, 149, 441, 448, 451, 458], "mechan": [1, 6, 17, 326], "intern": [1, 3, 6, 16, 18, 61, 105, 106, 390, 395, 458], "all": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 20, 25, 28, 30, 35, 41, 42, 59, 61, 62, 63, 64, 74, 76, 77, 78, 79, 101, 102, 105, 106, 109, 110, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 175, 176, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 214, 217, 220, 225, 227, 231, 232, 235, 236, 238, 244, 245, 251, 260, 266, 268, 269, 272, 274, 276, 277, 283, 284, 287, 291, 292, 293, 294, 295, 297, 325, 327, 328, 329, 330, 333, 390, 391, 392, 393, 394, 395, 437, 447], "even": [1, 2, 19, 41, 42, 78, 79, 145, 176, 195, 199], "importantli": 1, "extens": [1, 5, 11, 13, 15, 16, 19, 20, 60, 217, 241, 308, 310, 313, 315, 317, 437, 445, 446, 447, 452, 453, 454, 455, 456, 458], "suit": [1, 232], "second": [1, 3, 4, 7, 8, 16, 17, 18, 19, 42, 62, 63, 78, 79, 109, 110, 111, 142, 149, 174, 194, 198, 217, 232, 296, 395, 437, 452], "abl": [1, 41, 239], "make": [1, 7, 8, 12, 17, 18, 20, 58, 105, 106, 217, 236, 238, 241, 274, 390, 395, 444, 457], "full": [1, 7, 8, 29, 41, 105, 106, 156, 161, 178, 182, 189, 227, 291, 292, 293, 295, 326, 390, 391, 395, 458], "scope": 1, "end": [1, 2, 8, 9, 16, 17, 18, 25, 42, 65, 77, 105, 106, 157, 159, 161, 162, 163, 164, 168, 169, 170, 171, 183, 189, 190, 217, 223, 227, 232, 244, 260, 261, 272, 273, 274, 287, 292, 295, 296, 297, 437, 448, 449], "take": [1, 4, 7, 8, 9, 16, 17, 18, 42, 61, 106, 176, 187, 188, 217, 297, 391, 394], "advantag": [1, 16, 18], "capabl": [1, 18, 37, 216, 233, 268, 366], "add": [1, 2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 29, 38, 39, 40, 41, 58, 59, 105, 106, 176, 232, 238, 240, 241, 243, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 297, 325, 326, 365, 371, 390, 391, 392, 393, 394, 395, 403, 404, 405, 406, 407, 408, 412, 415, 418, 420, 423, 438, 439, 440, 441, 443, 445, 446, 447], "multiphas": 1, "unbalanc": [1, 2, 3, 19, 238, 290, 445], "hybrid": [1, 19], "own": [1, 2, 3, 4, 6, 7, 8, 159, 161, 176, 187, 188, 232, 233, 238, 244, 245, 325, 395], "version": [1, 4, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 36, 37, 42, 74, 103, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 151, 175, 176, 215, 217, 218, 219, 220, 232, 233, 236, 239, 241, 242, 291, 437, 458], "run_pf": [1, 2, 16, 17, 19, 450, 453, 456], "run_cpf": [1, 2, 16, 17, 19, 450, 453, 456], "run_opf": [1, 2, 16, 17, 19, 450, 453, 456, 458], "underscor": [1, 458], "One": [1, 8], "differ": [1, 2, 4, 7, 16, 18, 19, 25, 30, 41, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 176, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 223, 225, 244, 260, 261, 297, 338, 340, 341, 342, 398, 444, 448], "remov": [1, 3, 12, 16, 18, 42, 238, 289], "offlin": [1, 3, 7, 16, 18, 238, 244, 325], "equip": 1, "renumb": 1, "buse": [1, 2, 3, 4, 8, 16, 17, 18, 19, 42, 59, 73, 238, 244, 262, 263, 268, 269, 272, 346, 350, 351, 352, 353, 354], "consecut": [1, 4, 16, 61], "ext2int": 1, "int2ext": 1, "result": [1, 2, 3, 8, 11, 58, 73, 76, 77, 104, 105, 106, 147, 165, 167, 176, 179, 198, 199, 221, 222, 223, 225, 226, 229, 232, 238, 241, 292, 297, 390, 391, 437, 439, 441, 443, 449, 452, 453, 454, 455], "callback": [1, 2, 176, 177, 178, 179, 187, 189, 301, 441], "necessari": [1, 3, 7, 16, 106, 238, 244, 325, 442], "so": [1, 2, 3, 4, 7, 8, 12, 16, 17, 19, 25, 58, 156, 232, 235, 237, 245, 395, 445, 446, 449], "motiv": 1, "behind": 1, "facilit": [1, 20], "who": [1, 6, 223], "want": [1, 6, 16, 76, 77, 78, 79, 149], "possibl": [1, 3, 18, 29, 42, 59, 76, 77, 78, 105], "overrid": [1, 2, 11, 16, 17, 18, 106, 109, 110, 111, 142, 143, 144, 145, 147, 148, 149, 159, 168, 169, 170, 174, 191, 192, 193, 194, 195, 196, 198, 199, 200, 279, 285, 324, 340, 437, 448], "behavior": [1, 2, 75, 156], "complet": [1, 3, 7, 11, 16, 17, 18, 59, 106, 164, 182, 189, 238, 437, 458], "often": [1, 9, 73], "see": [1, 2, 3, 6, 8, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 35, 39, 40, 41, 42, 43, 44, 58, 59, 61, 65, 73, 74, 75, 80, 81, 82, 83, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 390, 391, 392, 393, 394, 395, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 458], "essenti": [1, 3, 18, 290, 390], "modif": [1, 2, 6, 59, 80, 290, 437], "addit": [1, 2, 3, 8, 16, 17, 18, 19, 29, 38, 41, 42, 61, 63, 104, 105, 238, 244, 290, 390, 452, 453, 454, 455, 458], "made": [1, 3, 57, 59, 61, 106, 217], "default": [1, 3, 4, 5, 6, 11, 16, 17, 18, 20, 25, 29, 30, 35, 39, 40, 60, 61, 62, 63, 65, 75, 76, 77, 78, 79, 101, 102, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 168, 169, 170, 171, 174, 176, 180, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 214, 221, 223, 227, 231, 236, 238, 239, 240, 244, 245, 290, 292, 295, 298, 301, 324, 390, 391, 392, 393, 394, 395, 437, 438, 440, 442, 448, 453, 458], "henc": [1, 42], "earli": 1, "cycl": [1, 7], "should": [1, 6, 11, 12, 16, 18, 60, 106, 150, 152, 153, 155, 165, 167, 176, 232, 238, 244, 297, 395], "execut": [1, 5, 109, 110, 111, 142, 149, 174, 187, 221, 437], "successfulli": 1, "command": [1, 6, 36, 103, 105, 106, 215, 232, 450, 458], "without": [1, 3, 4, 6, 7, 8, 9, 28, 42, 74, 105, 106, 112, 151, 175, 220, 244], "With": [2, 28, 42, 74, 106, 109, 110, 111, 112, 142, 149, 151, 174, 175, 220], "object": [2, 5, 6, 16, 17, 18, 24, 25, 30, 65, 73, 105, 106, 143, 144, 145, 146, 147, 148, 165, 166, 167, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 238, 239, 240, 241, 244, 245, 261, 265, 271, 273, 281, 282, 283, 289, 290, 291, 292, 296, 297, 298, 301, 304, 305, 306, 311, 318, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 390, 391, 392, 393, 394, 395, 437, 439, 440, 441, 443, 448, 449, 452, 453, 454, 455], "architectur": [2, 5], "outlin": [2, 3], "section": [2, 3, 6, 7, 8, 9, 16, 17, 18, 109, 111, 142, 146, 227, 232, 238, 240, 241, 244, 245, 261, 264, 265, 267, 270, 271, 273, 274, 275, 278, 280, 283, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 325, 390, 395, 437, 445, 446, 447, 458], "customiz": 2, "increas": [2, 42, 189], "dramat": 2, "ones": [2, 9, 16, 18], "import": [2, 3, 6, 18, 42, 238, 241, 242, 245, 253, 256], "understand": [2, 6], "how": [2, 3, 4, 8, 18, 59, 105, 156, 232, 244], "select": [2, 9, 17, 29, 42, 106, 150, 152, 153, 154, 155, 161, 291, 292, 293, 295, 391, 392, 393, 395, 438, 440, 442], "instanti": [2, 3, 4, 7, 8, 238, 241, 437], "There": [2, 3, 8, 11, 16, 41, 109, 110, 111, 142, 149, 174, 232], "sever": [2, 6, 16, 20, 232], "below": [2, 3, 16, 18, 19, 36, 58, 61, 62, 63, 103, 106, 168, 189, 215, 449], "illustr": [2, 4, 7, 8, 11, 18, 105], "invok": [2, 7, 176], "fact": [2, 16, 18], "simpl": [2, 3, 7, 8, 16, 19, 65, 78, 79, 106, 452, 454, 455], "wrapper": [2, 6, 30, 37, 143, 144, 145, 146, 147, 148, 159, 161, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 452, 453, 454, 455], "run_mp": [2, 6, 450, 452, 454, 455, 456], "onli": [2, 4, 7, 8, 12, 16, 17, 20, 57, 58, 63, 105, 106, 109, 111, 142, 143, 144, 145, 146, 147, 148, 149, 156, 176, 180, 189, 197, 221, 223, 229, 232, 244, 245, 296, 325, 390, 395, 439, 441, 443, 445, 446, 448, 449, 457], "valu": [2, 3, 7, 8, 17, 18, 25, 28, 29, 30, 41, 44, 57, 58, 59, 60, 61, 62, 63, 65, 73, 74, 75, 76, 77, 78, 79, 102, 105, 106, 109, 110, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 181, 182, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 220, 225, 235, 236, 238, 244, 245, 274, 279, 285, 291, 296, 297, 390, 391, 395, 437, 439, 440, 441, 443, 444], "task_class": [2, 290, 453], "argument": [2, 3, 4, 7, 8, 17, 25, 28, 30, 60, 62, 63, 65, 74, 75, 76, 77, 78, 105, 106, 109, 110, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 151, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 220, 223, 229, 244, 245, 296, 448, 452, 454, 455], "handl": [2, 4, 7, 8, 16, 18, 25, 76, 77, 78, 79, 105, 106, 144, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 177, 178, 187, 188, 189, 194, 215, 240, 242, 243, 244, 245, 283, 289, 290, 291, 292, 296, 301, 308, 310, 313, 315, 317, 325, 326, 327, 329, 395, 437, 438, 442, 444, 447, 451, 453], "constructor": [2, 3, 4, 7, 8, 16, 105, 106, 236, 238, 239, 240, 242, 289, 290, 296, 298, 301, 306, 308, 310, 311, 313, 315, 316, 317, 319, 324, 392, 393, 394, 437, 438, 440, 442, 448, 451, 453], "pass": [2, 3, 4, 7, 8, 11, 14, 16, 17, 19, 25, 60, 62, 63, 109, 110, 111, 142, 149, 156, 159, 164, 168, 169, 170, 171, 174, 176, 189, 217, 223, 225, 226, 227, 229, 232, 244, 297, 437, 448, 458], "mean": [2, 3, 16, 18, 19, 41, 59, 105, 106, 159, 161, 189, 276, 284, 395], "either": [2, 3, 6, 8, 16, 25, 41, 60, 65, 105, 106, 109, 110, 111, 142, 146, 149, 174, 178, 197, 238, 297, 390, 449], "two": [2, 3, 4, 5, 6, 7, 8, 16, 18, 42, 78, 79, 106, 155, 223, 225, 229, 238, 244, 296, 447, 449, 452], "descript": [2, 3, 4, 6, 8, 16, 18, 19, 29, 73, 105, 106, 189, 217, 236, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287], "dm_converter_class": [2, 290, 437, 438], "final": [2, 16, 18, 19, 25, 30, 59, 65, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 241, 390, 437], "data_model_class": [2, 290, 437], "network_model_class": [2, 290, 437], "math_model_class": [2, 290, 437], "dm_converter_class_mpc2_default": [2, 437, 441], "data_model_class_default": [2, 437, 438, 440], "network_model_class_default": [2, 437, 440, 442], "math_model_class_default": [2, 437, 438, 440, 441, 442], "tabl": [2, 4, 6, 12, 17, 18, 38, 39, 40, 41, 53, 54, 55, 56, 59, 61, 62, 63, 236, 237, 238, 244, 245, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 289, 290, 296, 439, 441, 443, 445, 446, 447, 448, 449, 451], "last": [2, 7, 106, 176, 184, 185, 186, 189, 290, 390, 448, 449], "cell": [2, 3, 4, 11, 12, 13, 15, 16, 38, 41, 60, 61, 62, 63, 78, 79, 105, 106, 156, 158, 176, 179, 187, 188, 189, 223, 227, 229, 236, 238, 244, 245, 274, 289, 290, 291, 292, 293, 294, 295, 296, 297, 390, 395, 437, 448, 452, 453, 454, 455], "arrai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 25, 28, 29, 30, 38, 41, 59, 60, 61, 62, 63, 74, 78, 79, 105, 106, 112, 151, 156, 157, 158, 160, 162, 163, 164, 175, 176, 179, 180, 183, 187, 188, 189, 190, 217, 220, 223, 225, 226, 227, 228, 229, 236, 238, 241, 242, 244, 245, 274, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 390, 395, 437, 448, 452, 453, 454, 455], "popul": [2, 16, 18, 441], "parent": [2, 16, 18, 156, 244, 261, 264, 265, 267, 270, 271, 273, 275, 278, 279, 280, 285, 286, 288, 291, 391, 394, 395, 439, 441, 443], "runtim": [2, 194, 198], "done": [2, 3, 7, 8, 16, 18, 80, 156, 176, 177, 178, 237, 449], "delet": [2, 12, 223, 296], "replac": [2, 16, 18, 59, 78, 79, 105, 106, 223, 229, 289], "entri": [2, 3, 4, 16, 41, 59, 105, 180, 244, 245, 289, 297, 390], "action": [2, 11], "new_class": 2, "append": [2, 38, 39, 40, 58, 109, 111, 142, 149, 240, 244, 289, 296], "old_class": 2, "isa": [2, 289], "true": [2, 16, 29, 35, 65, 76, 77, 101, 105, 106, 176, 179, 214, 217, 221, 223, 225, 226, 227, 228, 229, 231, 235, 236, 238, 244, 245, 262, 263, 289, 296, 390, 395, 440, 442, 448, 449], "typic": [2, 3, 4, 7, 8, 11, 16, 18, 244, 245, 325, 395, 453], "multipl": [2, 109, 110, 111, 142, 149, 174, 187, 189, 216, 244, 395, 449], "sequenti": [2, 3, 7, 8, 11, 223, 229], "modify_element_class": [2, 289], "previous": [2, 65, 106], "avail": [2, 10, 16, 18, 20, 21, 22, 23, 24, 25, 36, 103, 106, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 149, 155, 197, 215, 217, 218, 219, 233, 236, 281, 391, 437, 438, 444, 449, 451, 452, 453, 454, 455, 458], "affect": [2, 41, 59, 449], "v": [2, 8, 9, 28, 44, 74, 75, 106, 112, 151, 158, 160, 175, 220, 274, 276, 284, 292, 326, 330, 333, 336, 390, 395], "voltag": [2, 3, 8, 9, 16, 17, 18, 19, 42, 238, 244, 260, 261, 262, 263, 265, 268, 269, 272, 276, 284, 291, 292, 293, 294, 295, 301, 330, 331, 332, 333, 334, 335, 340, 341, 347, 348, 349, 350, 351, 357, 358, 359, 360, 361, 390, 391, 392, 393, 394, 395, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 429, 433, 434, 438, 440, 442, 445, 446, 452, 455], "represent": [2, 3, 8, 16, 17, 18, 395, 445, 446], "balanc": [2, 3, 7, 65, 73, 238, 265, 297, 299, 300, 302, 303, 305, 307, 309, 312, 314, 316, 320, 321, 322, 323, 324, 329, 331, 332, 334, 335, 391], "experiment": [2, 73, 444], "come": [2, 16, 19, 391], "These": [2, 3, 7, 16, 18, 37, 41, 59, 104, 176, 187, 188, 216, 233, 395, 450], "summar": [2, 4, 6, 9, 16, 17, 18, 41], "assign": [2, 4, 8, 16, 28, 74, 105, 112, 151, 156, 175, 220, 238, 239, 240, 244, 245, 296, 297, 298, 301, 392, 393, 394, 448, 449], "exp": [2, 444, 458], "must": [2, 8, 16, 18, 30, 38, 41, 59, 61, 65, 105, 106, 109, 110, 111, 142, 149, 174, 225, 236, 237, 238, 241, 244, 245, 291, 292, 293, 294, 295, 296, 325, 390, 395, 437, 448, 449], "sinc": [2, 7, 8, 16, 18, 25, 42, 150, 168, 169, 170, 171, 236, 448, 449], "doe": [2, 6, 7, 8, 18, 41, 105, 144, 194, 244, 297, 325, 437, 448, 451], "recogn": 2, "dmc_element_class": [2, 17, 290, 445, 446, 447], "dm_element_class": [2, 17, 290, 445, 446, 447], "nm_element_class": [2, 17, 290, 445, 446], "mm_element_class": [2, 17, 290, 445, 446, 447], "exclude_el": 2, "exclud": 2, "char": [2, 13, 14, 15, 16, 28, 29, 74, 106, 112, 151, 175, 176, 188, 217, 220, 223, 225, 226, 228, 229, 238, 241, 242, 244, 245, 289, 290, 291, 293, 294, 295, 296, 325, 390, 395, 437], "framework": [2, 5, 6, 20, 234, 290, 439, 441, 443, 452, 453, 454, 455, 457], "api": [2, 16, 37, 290], "bundl": [2, 42, 290], "togeth": [2, 16, 18, 106, 290], "packag": [2, 6, 14, 16, 17, 20, 232, 290, 439, 441, 443, 457], "xt_reserv": [2, 17, 234, 290, 456], "co": [2, 133], "fix": [2, 16, 17, 65, 93, 105, 165, 167, 290, 350, 442, 447, 456], "zonal": [2, 17, 65, 282, 290, 447, 456], "standard": [2, 7, 16, 18, 19, 30, 38, 61, 62, 63, 65, 143, 144, 145, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 187, 191, 192, 193, 194, 195, 196, 198, 199, 200, 236, 238, 244, 437], "toggle_reserv": 2, "run_opf_w_r": 2, "7": [2, 8, 16, 17, 19, 29, 30, 41, 65, 106, 123, 131, 143, 144, 145, 146, 147, 148, 158, 189, 232, 297, 458], "earlier": [2, 105, 458], "To": [2, 12, 16, 17, 19, 42, 105, 106, 261, 264, 265, 267, 270, 271, 273, 275, 278, 279, 280, 285, 286, 288, 449, 458], "you": [2, 3, 6, 9, 12, 16, 18, 36, 57, 59, 76, 77, 78, 79, 103, 105, 106, 149, 215, 232, 236, 448, 449, 458], "mpx": [2, 16, 17, 19, 290, 437, 438, 442, 452, 453, 454, 455], "veri": [2, 73, 448], "nine": [2, 458], "five": [2, 19, 445], "someth": [2, 16, 76, 77, 78, 79, 105, 106, 109, 110, 111, 142, 149, 174, 179, 232, 244], "complex": [2, 9, 16, 18, 225, 292, 293, 390, 391, 392, 393, 395, 438], "phase": [2, 3, 17, 20, 238, 247, 249, 250, 253, 254, 259, 260, 263, 264, 266, 267, 269, 270, 274, 275, 277, 278, 287, 288, 290, 346, 347, 348, 355, 356, 357, 358, 359, 360, 361, 363, 364, 376, 377, 388, 389, 402, 403, 404, 408, 409, 410, 412, 413, 414, 424, 426, 436, 445, 456], "load": [2, 3, 4, 16, 17, 18, 19, 42, 46, 58, 59, 60, 61, 62, 63, 73, 80, 104, 238, 239, 244, 254, 255, 276, 277, 278, 279, 280, 366, 378, 379, 380, 381, 390, 425, 426, 427, 428, 429, 430, 444, 445], "term": [2, 8, 16, 18, 25, 105, 106, 236, 260, 272, 292, 293, 294, 391], "pleas": [2, 16, 18, 25, 36, 42, 43, 44, 80, 81, 82, 83, 103, 106, 142, 215, 232, 458], "xt_3p": [2, 17, 19, 234, 290, 456], "input": [3, 4, 6, 11, 13, 14, 15, 16, 19, 25, 28, 29, 30, 38, 39, 40, 41, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 75, 79, 102, 105, 106, 107, 108, 109, 110, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 217, 220, 221, 223, 225, 226, 227, 228, 229, 235, 236, 238, 241, 243, 244, 245, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 390, 391, 392, 393, 394, 395, 437, 438, 439, 441, 443, 444, 452, 453, 454, 455], "output": [3, 4, 6, 12, 13, 15, 18, 25, 28, 29, 30, 38, 39, 40, 41, 58, 60, 61, 62, 63, 64, 65, 73, 74, 106, 107, 108, 109, 110, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 220, 223, 225, 226, 227, 229, 230, 232, 235, 236, 238, 240, 241, 244, 245, 268, 269, 271, 290, 291, 292, 293, 294, 295, 297, 325, 339, 342, 343, 344, 346, 350, 351, 352, 353, 354, 363, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 395, 437, 439, 441, 442, 443, 444, 452, 453, 454, 455], "present": [3, 16, 63, 65, 106, 223, 229, 238], "encapsul": [3, 8, 106, 238, 244, 395], "primarili": [3, 4, 7, 8, 238, 241, 390], "class": [3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 104, 105, 106, 215, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 453, 456, 457], "data_model": [3, 234, 239, 240, 241, 244, 245, 290, 297, 325, 390, 391, 394, 395, 437, 439, 441, 443, 456], "therefor": [3, 4, 7, 8, 42, 244, 297, 390, 392, 393, 394], "data_model_cpf": [3, 234, 456], "target": [3, 65, 178, 182, 189, 438, 452], "cost": [3, 16, 18, 25, 30, 38, 39, 40, 44, 55, 65, 80, 105, 106, 143, 144, 145, 146, 147, 148, 167, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 237, 243, 251, 268, 271, 273, 281, 297, 325, 326, 365, 366, 367, 371, 382, 441, 447], "nodal": [3, 7, 16, 238, 265, 305, 316, 391, 453, 454], "price": [3, 7, 16, 65, 73, 106, 143, 144, 145, 146, 147, 148, 238, 261, 265, 271, 273, 281, 282, 283, 307, 309, 312, 314, 338, 340, 447, 453, 454], "shadow": [3, 7, 16, 73, 106, 261, 265, 271, 273, 281, 283, 338, 340], "contraint": [3, 18], "By": [3, 4, 7, 8, 11, 16, 238, 241, 244, 245, 290, 297, 325, 390, 395, 448, 458], "begin": [3, 4, 7, 8, 9, 16, 18, 25, 61, 65, 77, 105, 106, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 183, 189, 190, 221, 238, 241, 244, 245, 290, 292, 295, 297, 325, 390, 395, 437], "initi": [3, 4, 7, 8, 16, 18, 25, 42, 64, 65, 105, 106, 176, 189, 221, 232, 238, 241, 242, 244, 245, 260, 262, 263, 266, 268, 269, 272, 274, 277, 287, 297, 347, 348, 349, 350, 351, 352, 356, 364, 365, 371, 377, 389, 390, 391, 392, 393, 442], "proce": [3, 7, 8, 238], "stage": [3, 4, 7, 8, 61, 65, 106, 143, 144, 145, 146, 147, 148, 189, 238, 241, 244], "everi": 3, "read": 3, "count": [3, 7, 8, 16, 19, 176, 225, 226, 228, 238, 244, 276, 284, 395], "determin": [3, 5, 7, 8, 11, 16, 18, 29, 106, 146, 161, 171, 179, 187, 189, 197, 217, 238, 244, 297, 437, 449], "number": [3, 4, 6, 7, 8, 9, 16, 18, 25, 28, 29, 30, 41, 59, 61, 73, 74, 105, 106, 109, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 151, 157, 158, 159, 160, 161, 164, 168, 169, 170, 175, 187, 189, 192, 196, 198, 217, 220, 221, 227, 228, 236, 238, 244, 245, 262, 292, 295, 296, 390, 395, 442], "instanc": [3, 5, 8, 11, 16, 18, 235, 238, 244, 395], "store": [3, 7, 8, 16, 18, 59, 65, 77, 105, 106, 238, 244, 289, 292, 293, 294, 296, 395, 448, 449], "nr": [3, 16, 18, 41, 244, 245], "onlin": [3, 7, 8, 16, 18, 238, 244, 268, 269, 272, 281, 282, 325, 395], "statu": [3, 16, 17, 18, 19, 35, 73, 79, 101, 144, 169, 192, 194, 196, 199, 214, 231, 238, 244], "map": [3, 8, 18, 58, 105, 189, 238, 244, 245, 282, 289, 296, 297, 390, 447], "id": [3, 4, 9, 16, 17, 18, 19, 59, 238, 244, 260, 266, 268, 269, 272, 274, 276, 277, 281, 284, 287, 390], "row": [3, 4, 8, 9, 16, 18, 29, 39, 40, 41, 58, 59, 78, 79, 106, 157, 158, 159, 161, 164, 189, 236, 238, 244, 245, 260, 262, 265, 268, 269, 272, 274, 276, 277, 281, 283, 284, 287, 390, 395, 448, 449], "id2i": [3, 16, 18, 244], "criteria": [3, 238, 244], "indic": [3, 4, 9, 11, 16, 18, 38, 39, 40, 41, 59, 62, 65, 76, 77, 78, 79, 105, 106, 107, 108, 152, 153, 155, 176, 177, 178, 179, 188, 189, 236, 238, 244, 245, 251, 268, 269, 272, 289, 291, 292, 295, 296, 297, 390, 391, 395, 442], "n": [3, 4, 9, 16, 18, 29, 41, 58, 59, 62, 63, 102, 105, 106, 107, 143, 145, 146, 157, 159, 161, 164, 189, 236, 238, 243, 244, 292, 293, 294, 296, 365, 371, 390, 395, 448], "off": [3, 16, 17, 18, 19, 217, 244, 260], "i2on": [3, 16, 244], "extract": [3, 4, 7, 16, 60, 105, 106, 232, 238, 244, 245, 274, 325, 338, 340, 395, 439, 441, 443, 448], "calcul": [3, 238, 244], "origin": [3, 4, 15, 16, 42, 223, 229, 238, 244], "p": [3, 9, 16, 17, 19, 29, 106, 146, 184, 185, 186, 236, 237, 238, 244, 260, 262, 263, 265, 266, 268, 269, 272, 276, 277, 281, 282, 284, 287, 295, 395], "few": [3, 4, 7, 8, 16, 19], "per": [3, 7, 8, 16, 18, 19, 63, 73, 236, 238, 260, 272, 325, 359, 382, 395, 396, 401, 402, 408, 411, 412, 419, 424, 425, 426, 431, 436, 447], "unit": [3, 6, 7, 9, 16, 19, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 56, 58, 62, 65, 71, 72, 76, 77, 78, 79, 96, 97, 99, 232, 236, 238, 260, 261, 265, 271, 272, 273, 281, 282], "mva": [3, 17, 19, 238, 260, 261], "found": [3, 16, 18, 19, 60, 105, 106, 177, 178, 236, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 458], "base_mva": [3, 16, 238, 366], "distribut": [3, 16, 20, 133, 232, 274, 445], "kva": [3, 19, 238, 287], "base_kva": [3, 19, 238, 287], "pretty_print": [3, 16, 238, 244, 261, 271, 273, 274, 287], "pretti": [3, 11, 18, 238, 240, 244, 261, 264, 265, 267, 270, 271, 273, 275, 278, 280, 283, 286, 288, 437, 452, 453, 454, 455], "text": [3, 20, 189, 223, 238, 457], "consol": [3, 11, 73, 238, 244], "control": [3, 16, 25, 73, 106, 143, 144, 145, 146, 147, 148, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 238, 244, 262, 263, 437], "cnt": [3, 16, 228, 238, 244], "total": [3, 8, 16, 17, 19, 41, 65, 105, 106, 189, 238, 244, 276, 281, 284, 390, 395, 442], "sum": [3, 16, 76, 77, 158, 236, 238, 244], "amount": [3, 238], "capac": [3, 17, 42, 102, 238, 281, 447], "loss": [3, 16, 17, 19, 238, 262, 272], "ext": [3, 16, 238, 244], "extrem": [3, 16, 237, 238, 244], "min": [3, 7, 16, 17, 25, 30, 63, 65, 76, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 238], "max": [3, 7, 16, 17, 19, 25, 30, 61, 73, 76, 190, 192, 238, 244], "det": [3, 16, 238, 244], "dispatch": [3, 16, 42, 66, 73, 76, 77, 80, 238, 366, 452, 453, 454, 455], "dm_element": [3, 16, 17, 18, 234, 238, 245, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287, 290, 325, 395, 456], "where": [3, 4, 6, 7, 8, 9, 12, 16, 18, 25, 30, 41, 42, 57, 59, 61, 62, 63, 76, 77, 78, 79, 102, 105, 106, 107, 108, 143, 144, 145, 146, 147, 148, 158, 159, 160, 161, 164, 168, 169, 170, 171, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 223, 229, 232, 236, 238, 276, 289, 292, 295, 296, 297, 325, 390, 395, 449], "relationship": [3, 4, 6, 7, 8, 390], "here": [3, 4, 6, 7, 8, 16, 17, 25, 41, 42, 59, 106, 149, 168, 169, 170, 171, 176, 261, 265, 271, 273, 281, 282, 390], "dme_bu": [3, 18, 234, 265, 456], "dme_gen": [3, 18, 234, 271, 456], "dme_load": [3, 18, 234, 279, 280, 456], "while": [3, 8, 16, 18, 449], "least": [3, 6, 42, 291, 292, 293, 294, 295, 390, 449], "tab": [3, 12, 16, 18, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 449, 452, 453, 454, 455], "column": [3, 4, 9, 16, 18, 25, 29, 41, 59, 61, 62, 63, 79, 106, 158, 165, 166, 168, 169, 170, 171, 236, 244, 245, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287, 292, 295, 390, 395, 448, 449], "attempt": [3, 60, 217, 449], "common": [3, 6, 8, 10, 16, 18, 42, 146, 161, 171, 189, 197, 244], "ctm": [3, 10], "uid": [3, 16, 18, 244, 260, 266, 268, 269, 272, 274, 276, 277, 281, 284, 287], "posit": [3, 182], "integ": [3, 6, 13, 15, 16, 25, 29, 30, 61, 65, 106, 107, 108, 143, 144, 145, 146, 147, 148, 153, 155, 216, 221, 227, 228, 235, 236, 238, 244, 245, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287, 291, 292, 293, 295, 296, 390, 391, 392, 393, 395, 437, 439, 441, 442, 443], "serv": [3, 8, 16, 290], "uniqu": [3, 8, 16, 105, 188, 244, 274, 390], "string": [3, 16, 18, 38, 41, 59, 60, 61, 78, 79, 105, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 156, 158, 174, 192, 197, 217, 229, 244, 245], "source_uid": [3, 16, 18, 244], "record": 3, "besid": [3, 19], "vector": [3, 4, 7, 8, 9, 16, 18, 21, 25, 29, 30, 38, 41, 58, 59, 61, 62, 63, 76, 77, 78, 105, 106, 107, 108, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 176, 181, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 225, 236, 244, 245, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 284, 287, 291, 292, 293, 294, 295, 296, 297, 390, 391, 392, 393, 394, 395, 438], "m": [3, 9, 12, 13, 15, 16, 17, 18, 19, 36, 39, 40, 58, 60, 61, 62, 73, 80, 103, 107, 109, 110, 111, 142, 149, 156, 174, 215, 232, 274, 292, 293, 294, 296, 390, 395, 448], "time": [3, 8, 9, 16, 18, 25, 41, 59, 61, 65, 73, 106, 192, 194, 198, 232, 292, 295, 395, 437], "largest": 3, "n_r": 3, "enter": 3, "gen": [3, 8, 16, 17, 19, 38, 39, 40, 41, 59, 62, 63, 76, 78, 82, 83, 238, 244, 245, 251, 268, 269, 281, 282, 325, 366, 390, 395, 442, 452, 453, 454, 455], "singular": [3, 16, 18, 244], "plural": [3, 16, 18, 244], "charact": [3, 143, 144, 145, 146, 147, 148, 223, 245], "might": [3, 105], "seem": 3, "logic": 3, "constant": [3, 8, 9, 16, 18, 25, 59, 63, 76, 106, 149, 150, 235, 236, 272, 276], "instead": [3, 16, 25, 29, 30, 59, 106, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "prevent": [3, 221], "effect": 3, "preclud": 3, "main_table_var_nam": [3, 16, 18, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 284, 287], "init_statu": [3, 244, 262, 263], "update_statu": [3, 16, 18, 238, 244, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287], "build_param": [3, 16, 18, 238, 244, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287, 390, 391, 394, 395, 397, 400, 408, 412, 415, 418, 420, 423, 424, 426, 427, 430, 432, 435, 436], "As": [3, 11, 16, 17, 36, 103, 215, 232], "node": [3, 7, 9, 16, 235, 244, 262, 263, 297, 299, 300, 302, 303, 307, 309, 312, 314, 320, 321, 322, 323, 324, 328, 336, 390, 391, 392, 393, 395, 401, 402, 442], "port": [3, 7, 8, 9, 16, 25, 244, 260, 272, 291, 292, 295, 390, 391, 394, 395, 396, 408, 411, 412, 419, 424, 425, 426, 431, 436, 438], "hand": [3, 6, 7, 11, 16, 25, 30, 106, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "inform": [3, 6, 8, 25, 39, 40, 105, 168, 169, 170, 171, 176, 179, 189, 215, 217, 233, 238, 241, 244, 245, 289, 290, 292, 293, 294, 297, 325, 390, 395, 437, 445, 446, 447, 458], "link": [3, 12, 16, 18, 19, 244, 445, 457], "branch": [3, 6, 7, 16, 17, 19, 42, 59, 73, 244, 246, 260, 261, 337, 338, 339, 340, 341, 342, 343, 344, 390, 396, 397, 398, 399, 400, 457], "pair": [3, 76, 77, 78, 105, 107, 108, 390, 452, 453, 454, 455], "context": [3, 9, 106, 176, 187], "b": [3, 7, 9, 16, 18, 19, 25, 29, 30, 106, 107, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 284, 289, 295, 296, 357, 360, 365, 371, 390, 448], "junction": [3, 244, 395], "could": [3, 16, 105, 109, 110, 111, 142, 149, 174], "coupl": 3, "cxn_type": [3, 16, 18, 244, 260, 266, 268, 269, 272, 274, 276, 277, 284, 287, 395], "cxn_idx_prop": [3, 16, 18, 244, 260, 266, 268, 269, 272, 274, 276, 277, 284, 287, 395], "fbu": [3, 16, 19, 244, 260, 272, 274, 287, 395], "tbu": [3, 16, 19, 244, 260, 272, 274, 287, 395], "automat": [3, 4, 8, 11, 12, 16, 18, 80, 105, 106, 146, 161, 171, 189, 197, 238, 241, 244, 251, 296, 297, 390, 395, 437, 448, 457], "had": [3, 42], "sand": 3, "cxn_type_prop": [3, 244, 395], "built": [3, 7, 16, 18, 20, 25, 29, 36, 65, 103, 106, 164, 215, 232, 236, 245, 448], "mp_tabl": [3, 16, 18, 234, 449, 451, 456], "mp_table_class": [3, 449, 450, 456], "abil": [4, 6, 241, 243, 448], "dure": [4, 16, 42, 241, 244], "dm_convert": [4, 234, 238, 242, 243, 244, 245, 290, 437, 439, 441, 443, 456], "6": [4, 16, 17, 19, 25, 29, 30, 42, 77, 135, 138, 143, 144, 145, 146, 147, 148, 168, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 245, 274, 390, 424, 436, 441], "yet": [4, 13, 15, 18, 36, 41, 103, 105, 106, 153, 215, 221, 222, 225, 226, 228, 451, 458], "been": [4, 7, 16, 18, 80, 106, 108, 177, 178, 179, 325, 442], "onc": [4, 7, 16, 18, 232, 325, 395], "readi": [4, 437], "loadcas": [4, 58], "same": [4, 8, 16, 18, 25, 29, 42, 44, 61, 62, 63, 105, 150, 156, 158, 164, 176, 187, 188, 189, 238, 239, 245, 296, 365, 390, 395], "again": [4, 16, 18, 42], "scratch": 4, "need": [4, 8, 16, 18, 41, 59, 63, 105, 106, 178, 189, 232, 239, 244, 245, 293, 294, 326, 439, 441, 443, 458], "dmc_element": [4, 16, 17, 234, 241, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 290, 456], "dmce": [4, 244, 245], "get_import_spec": [4, 245], "import_table_valu": [4, 245], "thing": [4, 16, 18], "interest": [4, 9, 11, 13, 15, 180, 236, 238, 291, 292, 293, 295, 390, 391, 392, 393, 395], "vmap": [4, 16, 245], "table_var_map": [4, 16, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "vn": [4, 16, 245, 247, 248, 251, 252, 255, 256, 257], "start": [4, 6, 12, 16, 25, 30, 105, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 296, 297, 303, 304, 438, 458], "col": [4, 16, 41, 59, 157, 159, 161, 164, 189, 236, 245, 390], "c": [4, 7, 8, 16, 18, 19, 25, 30, 63, 106, 143, 144, 145, 146, 147, 148, 162, 163, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 245, 247, 248, 274, 365, 371, 390, 395], "sf": [4, 245], "sf_fcn": 4, "copi": [4, 16, 19, 75, 105, 106, 156, 216, 238, 241, 244, 296], "scale": [4, 9, 25, 29, 76, 77, 78, 79, 102, 138, 155, 164, 167, 179, 189, 236, 245], "factor": [4, 23, 29, 42, 59, 102, 167, 179, 189, 245, 277, 366], "val": [4, 16, 105, 106, 188, 235, 245, 296, 448, 452, 453, 454, 455], "num": [4, 16, 18], "scalar": [4, 9, 16, 18, 41, 59, 60, 62, 105, 106, 188, 225, 236, 296, 390], "fcn": [4, 16, 105, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 176, 179, 187, 188, 189], "ifn": 4, "efn": 4, "spec": [4, 16, 187, 189, 223, 229, 245, 246, 247, 248, 251, 252, 256, 257, 325], "ridx": [4, 16, 245, 248, 251, 252], "get_export_spec": [4, 245], "export_table_valu": [4, 245], "init_export_data": [4, 245, 248], "relev": [4, 7, 8, 16, 19, 42, 65, 106, 179, 297, 325], "data_exist": [4, 245], "fals": [4, 16, 29, 35, 76, 77, 78, 79, 101, 106, 176, 214, 217, 221, 223, 225, 226, 227, 229, 231, 244, 390], "matrix": [4, 8, 9, 11, 16, 18, 25, 29, 30, 38, 39, 40, 41, 48, 61, 62, 63, 79, 105, 106, 107, 143, 144, 145, 146, 147, 148, 157, 158, 159, 161, 164, 165, 166, 167, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 225, 236, 274, 282, 291, 292, 293, 295, 390, 391, 395, 437], "pdf": [5, 6, 10, 12, 20, 36, 76, 77, 78, 79, 95, 96, 97, 99, 103, 215, 456, 458], "introduct": [5, 456], "notat": 5, "overview": [5, 6, 16, 18], "hierarchi": [5, 7, 16, 18], "custom": [5, 6, 17, 18, 189, 243, 290, 308, 310, 313, 315, 317, 326, 445, 446, 447, 450], "iter": [5, 19, 22, 25, 30, 147, 157, 158, 159, 160, 161, 164, 168, 169, 170, 176, 189, 192, 196, 198, 437, 438, 442], "via": [5, 16, 19, 58, 106, 156, 168, 170, 176, 187, 188, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 237, 452, 454, 455], "acknowledg": 5, "purpos": [6, 16, 105, 237, 239, 240, 457], "wish": [6, 62, 63], "your": [6, 17, 18, 95, 96, 97, 99, 142, 150, 216, 232, 233, 449], "document": [6, 16, 17, 18, 19, 29, 36, 103, 109, 110, 111, 142, 143, 145, 148, 168, 169, 170, 193, 195, 196, 199, 200, 215, 236, 457, 458], "languag": [6, 20], "scientif": 6, "commerci": 6, "product": 6, "mathwork": [6, 25, 30, 143, 145, 146, 147, 148, 158, 159, 160, 161, 164, 168, 169, 170, 171, 191, 193, 195, 196, 197, 198, 199, 200], "free": [6, 20], "open": [6, 20], "relat": [6, 7, 8, 11, 20, 105, 243, 292, 293, 294, 437], "softwar": [6, 20, 110], "git": 6, "subrepo": 6, "except": [6, 9, 16, 25, 30, 41, 65, 75, 106, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 217, 239, 296], "extra": [6, 16, 19], "howev": [6, 7, 11, 16, 18, 42, 449, 458], "download": [6, 20, 95, 96, 97, 99, 232], "zip": [6, 232, 276, 444], "releas": [6, 28, 74, 112, 151, 175, 217, 220], "depend": [6, 7, 8, 17, 59, 65, 75, 106, 161, 189, 192, 232, 238, 241, 245, 292, 297, 395, 438, 440, 442, 445, 446], "mptest": [6, 232], "doc": [6, 10, 12, 13, 15, 110, 146, 149, 170, 174, 194, 199], "have_featur": [6, 21, 22, 23, 24, 37, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 216, 218, 219, 224, 232, 233, 458], "nonlinear": [6, 7, 8, 16, 18, 25, 26, 27, 37, 105, 106, 124, 127, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 183, 189, 216, 243, 292, 391, 427], "primal": [6, 25, 65, 106, 143, 144, 145, 146, 147, 148, 150, 171, 191, 197, 198], "dual": [6, 25, 106, 110, 131, 147, 150, 171, 191, 197, 198, 293], "linear": [6, 7, 8, 9, 16, 22, 25, 29, 30, 32, 33, 37, 44, 65, 80, 105, 106, 110, 115, 121, 133, 143, 144, 145, 146, 147, 148, 155, 157, 159, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 236, 237, 243, 251, 272, 292, 295, 365, 367, 371], "equat": [6, 7, 16, 18, 29, 106, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 183, 189, 216], "easi": [6, 16, 58], "unifi": [6, 8, 10, 216], "lp": [6, 106, 113, 121, 130, 132, 155, 194, 197, 213, 215], "qp": [6, 7, 30, 34, 37, 65, 73, 106, 113, 132, 136, 137, 144, 148, 155, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 210, 213, 215], "mix": [6, 7, 65, 106, 143, 144, 145, 146, 147, 148, 153, 155, 216, 289, 291, 292, 293, 294, 295, 297], "switch": [6, 16, 17, 18], "chang": [6, 17, 19, 41, 42, 44, 59, 61, 106, 179, 442, 445, 446], "unsupport": [6, 440], "separ": [6, 16, 18, 77, 232], "resourc": 6, "sphinx": [6, 12, 13, 15, 20], "perman": 6, "master": [6, 13, 15, 41, 59, 61, 215, 457], "latest": [6, 149], "stabl": 6, "unreleas": 6, "hopefulli": 6, "tag": [6, 21, 22, 23, 24, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 217, 218, 219, 238, 240, 241, 242, 290, 291, 297, 395, 437, 440, 442], "becaus": [6, 16, 18, 42, 73, 449], "intend": [6, 37, 105, 106, 179, 216, 223, 225, 226, 228, 229, 233, 244, 450], "unmodifi": 6, "stick": 6, "syntax": [6, 21, 25, 30, 109, 110, 111, 114, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 174, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 237, 448, 449], "classdef": [6, 16, 17, 18], "obj": [6, 16, 17, 18, 25, 30, 105, 236, 244, 289, 296, 325, 390, 449], "namespac": 6, "produc": [6, 41], "html": [6, 12, 20, 110, 146, 149, 169, 170, 174, 196, 199], "what": [6, 9, 178], "hint": 6, "click": 6, "icon": [6, 457], "upper": [6, 16, 17, 25, 30, 106, 107, 108, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 260, 261, 262, 265, 268, 271, 272, 273, 281, 293, 390, 457], "right": [6, 8, 9, 12, 16, 18, 25, 30, 106, 143, 144, 145, 146, 147, 148, 162, 163, 168, 169, 170, 171, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 292, 295, 457], "corner": 6, "page": [6, 174, 232, 457], "cover": 6, "autom": 6, "contributor": 6, "guid": [6, 16, 17, 18, 19, 146], "form": [7, 8, 9, 16, 17, 29, 61, 106, 107, 108, 164, 176, 187, 188, 223, 229, 232, 234, 274, 292, 293, 294, 295, 297, 347, 348, 349, 350, 351, 352, 356, 359, 364, 365, 371, 377, 389, 390, 391, 392, 393, 394, 395, 456], "x": [7, 8, 9, 16, 18, 19, 23, 24, 25, 29, 30, 41, 62, 63, 105, 106, 107, 108, 111, 119, 138, 143, 144, 145, 146, 147, 148, 150, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 228, 236, 244, 260, 274, 287, 292, 293, 295, 297, 305, 323, 326, 330, 331, 332, 333, 334, 335, 336, 390, 391, 395, 427, 441, 449, 458], "rvec": [7, 9, 25, 30, 162, 163, 183, 190], "f": [7, 8, 9, 25, 30, 73, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 183, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 244, 323, 326, 441], "param": [7, 9, 16, 18, 25, 30, 42, 106, 110, 149, 190, 272, 291], "rmat": [7, 9, 25, 190], "trace": [7, 178, 182, 183, 189, 216], "curv": [7, 176, 177, 178, 181, 182, 186, 189, 236, 268], "parameter": [7, 106, 176, 178, 183, 184, 185, 186, 189, 216, 239, 279, 285], "lambda": [7, 16, 17, 25, 30, 106, 143, 144, 145, 146, 147, 148, 167, 168, 169, 170, 171, 178, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 239, 279, 285, 398, 438], "vari": [7, 106, 244], "constrain": [7, 16, 25, 27, 65, 80, 106, 143, 144, 145, 146, 147, 148, 173, 186], "min_": [7, 25, 27, 30, 173, 190], "textrm": 7, "qquad": 7, "h": [7, 16, 25, 30, 76, 77, 78, 79, 106, 143, 144, 145, 146, 147, 148, 165, 167, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 238, 244, 292, 391], "le": [7, 16, 18, 25, 27, 30, 173, 190], "_": [7, 8, 25, 30, 190, 391], "quadrat": [7, 16, 30, 44, 105, 106, 143, 144, 145, 146, 147, 148, 155, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 236], "tran": [7, 9, 30, 190], "q": [7, 9, 16, 17, 29, 106, 190, 236, 276, 284, 365, 371, 442], "k": [7, 9, 16, 18, 105, 106, 158, 176, 177, 178, 189, 236, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 283, 284, 287, 295, 301, 365, 371, 390, 395, 448], "l": [7, 16, 18, 25, 29, 30, 105, 106, 107, 108, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 243, 272, 292, 293, 294], "math_model": [7, 234, 238, 290, 304, 318, 325, 390, 395, 437, 439, 441, 443, 456], "opt_model": [7, 65, 105, 183, 190, 205, 206, 207, 208, 209, 210, 211, 215, 216, 297, 390], "mp_idx_manag": [7, 8, 106, 215, 216, 291, 297, 390, 391, 392, 393, 394], "nonzero": [7, 8], "auxiliari": [7, 292, 293, 294, 297], "appropri": [7, 9, 12, 16, 18, 25, 106, 217, 241, 291, 292], "characterist": 7, "mm_element": [7, 16, 17, 234, 244, 290, 297, 337, 345, 346, 355, 362, 363, 370, 376, 378, 382, 383, 384, 388, 395, 456], "mme": [7, 325, 395], "nme_bus_pf_acp": 7, "nme_bus_opf_acp": 7, "And": [7, 18, 19, 20, 445, 446], "similar": [7, 16, 42], "mme_gen": [7, 234, 365, 368, 369, 456], "similarli": [7, 8], "inject": [7, 9, 16, 17, 18, 19, 260, 272, 273, 274, 284, 287, 292, 293, 294, 295, 328, 336, 390, 391, 394, 438], "aggreg": [7, 42, 76, 77, 106, 292, 295, 391, 394, 395], "piecewis": [7, 16, 236, 237, 251, 365, 367, 371], "angl": [7, 8, 9, 17, 260, 261, 262, 263, 292, 293, 294, 295, 338, 340, 341, 342, 350, 391, 392, 393, 394, 395, 398, 442, 455], "mme_branch": [7, 234, 338, 343, 344, 456], "sens": 7, "respons": [7, 16, 244], "data_model_update_off": [7, 325], "zero": [7, 8, 9, 16, 18, 25, 30, 39, 40, 44, 58, 106, 109, 111, 142, 143, 144, 145, 147, 148, 149, 165, 167, 179, 180, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 238, 291, 395], "out": [7, 16, 19, 30, 104, 143, 144, 145, 146, 147, 148, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 222, 238, 240, 440], "data_model_update_on": [7, 16, 325, 339, 342, 343, 344, 346, 350, 351, 352, 353, 354, 363, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388], "differnt": 7, "avoid": [7, 12, 65, 106, 143, 144, 145, 146, 147, 148, 179], "duplic": [7, 105, 238, 241, 244, 296], "mm_shared_": 7, "evalu": [7, 25, 106, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 189, 226, 236, 293, 294, 326, 438], "jacobian": [7, 9, 25, 106, 157, 158, 159, 161, 164, 165, 168, 169, 170, 171, 184, 185, 186, 189, 292, 293, 294, 391], "put": [7, 16, 18], "kei": [8, 105, 244, 245], "modular": [8, 217], "deriv": [8, 106, 157, 159, 161, 164, 189, 236, 291, 292, 293, 294, 295, 305, 398], "featur": [8, 11, 21, 22, 23, 24, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 189, 217, 218, 219, 448, 458], "fulli": [8, 105, 458], "captur": 8, "oper": [8, 9, 16, 25, 29, 61, 106, 136, 164, 232, 395], "condit": [8, 25, 30, 42, 57, 61, 65, 226, 232], "non": [8, 9, 16, 18, 25, 44, 58, 63, 65, 76, 106, 109, 111, 142, 149, 157, 159, 161, 164, 165, 167, 189, 243, 291, 292, 293, 294, 295, 390, 391, 394, 395, 408, 411, 412, 415, 418, 419, 420, 423, 442], "z": [8, 9, 16, 18, 105, 106, 176, 189, 292, 295, 330, 333, 336, 390, 394, 395], "track": [8, 105, 106, 291, 297, 390], "n_p": [8, 9, 292, 295], "n_z": [8, 61, 295], "tn5": [8, 9, 10], "lot": [8, 106], "especi": [8, 232], "real": [8, 9, 16, 18, 25, 29, 73, 225, 292, 293, 390, 391, 392, 395], "predefin": [8, 16, 18], "activ": [8, 9, 12, 16, 17, 168, 244, 260, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 282, 284, 287, 292, 295, 328, 336, 359, 365, 371, 452, 453, 454, 455], "va": [8, 9, 16, 244, 262, 292, 293, 294, 295, 297, 391, 392, 393, 394, 406, 407, 455], "n_": [8, 9, 236, 292], "left": [8, 9, 16, 18, 25, 30, 106, 143, 144, 145, 146, 147, 148, 162, 163, 168, 169, 170, 171, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 292, 295], "bb": [8, 9, 16, 295, 400], "kk": [8, 9, 16, 295, 395, 418, 423], "pv": [8, 9, 16, 19, 235, 262, 263, 295, 328, 390, 395, 400, 402, 430, 435, 438], "suscept": [8, 9, 260, 274, 284], "coeffici": [8, 9, 16, 30, 106, 143, 144, 145, 146, 147, 148, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 272, 292, 295], "gp": [8, 16, 295, 394], "cc": [8, 9, 16, 18, 292, 295], "gi": [8, 292], "compon": [8, 16, 106, 181, 236, 237, 276, 292], "ilin": [8, 16, 18, 292], "slin": [8, 16, 18, 292], "arbitrari": [8, 16, 18, 105, 157, 161, 238, 244, 292], "snln": [8, 16, 18, 292, 391, 427], "inln": [8, 16, 18, 292, 391, 427], "six": [8, 16, 18, 19, 445], "yy": [8, 9, 16, 18, 19, 292, 397, 424, 427, 432, 436], "ll": [8, 9, 16, 18, 105, 106, 292], "nn": [8, 9, 16, 18, 292, 395, 401, 402, 408, 412, 415, 420], "iv": [8, 9, 16, 18, 292], "sv": [8, 9, 16, 18, 292, 426, 427], "admitt": [8, 9, 274, 397, 424, 436], "matric": [8, 9, 16, 18, 29, 41, 61, 62, 63, 107, 158, 225, 274, 292, 390, 391, 394, 395], "rather": [8, 16, 37, 41, 106, 150, 216, 233, 236, 292, 293, 391, 449], "dv": [8, 292], "conj": [8, 9, 292], "Then": [8, 12, 232, 238, 390], "written": [8, 20, 25, 221, 222, 225, 226, 228], "cdiag": [8, 292], "invc": [8, 292], "assum": [8, 16, 41, 42, 106, 108, 244, 274, 391, 437, 439, 441, 443, 444, 452, 453, 454, 455], "net_model": [8, 234, 238, 290, 292, 297, 325, 391, 392, 393, 394, 395, 402, 437, 439, 441, 443, 456], "nm_element": [8, 16, 17, 18, 234, 290, 291, 292, 293, 294, 295, 325, 390, 391, 392, 393, 394, 396, 401, 402, 408, 411, 412, 419, 424, 425, 426, 431, 436, 456], "special": [8, 59, 105, 448], "treatment": 8, "pq": [8, 19, 235, 262, 263, 268, 366, 390, 395, 402], "node_typ": [8, 16, 234, 390, 395, 401, 402, 456], "about": [8, 179, 181, 182, 217], "assembl": [8, 106, 391], "set_node_type_ref": [8, 390, 395, 401], "set_node_type_pv": [8, 390, 395, 401], "set_node_type_pq": [8, 390, 395, 401], "1000": [8, 19, 160], "2000": [8, 19, 189], "nme_bus_acp": [8, 234, 456], "nme_gen_acp": [8, 234, 456], "brief": 8, "rel": [8, 13, 15, 65, 106, 143, 144, 145, 146, 147, 148], "nme_bu": [8, 234, 405, 406, 407, 456], "nme_gen": [8, 234, 415, 418, 456], "neg": [8, 106, 145, 146, 147, 157, 158, 159, 160, 161, 164, 170, 171, 195, 197, 198, 199], "ident": [8, 9, 16, 25, 30, 143, 144, 145, 146, 147, 148, 158, 159, 160, 161, 164, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 225, 390], "nme_branch": [8, 234, 397, 400, 456], "nme_load": [8, 234, 427, 430, 456], "equal": [8, 16, 25, 41, 57, 58, 105, 106, 107, 108, 165, 167, 168, 169, 170, 171, 221, 222, 225, 226, 228, 232, 293, 349, 390, 391], "consum": 8, "stack": [8, 16, 18, 106, 107, 292, 295, 390, 395], "seri": [8, 227, 260, 274, 287], "t": [8, 9, 12, 13, 15, 16, 17, 18, 19, 57, 61, 65, 77, 105, 106, 157, 159, 161, 164, 179, 189, 232, 236, 292, 391, 437, 448, 449, 451], "cscal": [8, 9, 16, 18, 276], "y": [8, 18, 106, 228, 274, 292, 293, 294, 390], "i_": 8, "i_f": 8, "i_t": 8, "n_k": [8, 9, 16, 18, 292, 295], "cmat": [8, 9, 25, 30], "cccc": [8, 190], "1_": 8, "2_": 8, "ddot": 8, "cvec": [8, 9, 16, 18], "_f": 8, "1_f": 8, "2_f": 8, "vdot": 8, "_t": 8, "1_t": 8, "2_t": 8, "incid": [8, 9, 16, 18, 390, 391, 394, 395], "character": 8, "style": [9, 146, 197], "theta": 9, "uptheta": 9, "cvecg": 9, "rmatg": 9, "cmatg": 9, "hat": 9, "diag": 9, "diagon": [9, 16, 18, 390], "conjug": 9, "transpos": [9, 25, 29, 106, 168, 169, 170, 171, 184, 185, 186, 292, 293, 391], "re": [9, 11, 12, 18, 106, 143, 144, 145, 146, 147, 148, 179, 198, 223, 229], "im": [9, 18], "imaginari": [9, 16, 18, 292, 293, 391, 392, 395], "wise": [9, 80], "expon": 9, "f_": [9, 236], "gradient": [9, 25, 106, 165, 166, 168, 169, 170, 171, 184, 185, 186, 236], "w": [9, 13, 15, 42, 55, 119, 131, 138, 157, 159, 161, 164, 168, 189, 291, 292, 293, 294, 295, 303, 308, 310, 313, 315, 317, 391], "lam": [9, 25, 106, 108, 146, 168, 169, 170, 171, 189, 279, 285, 292, 293, 294, 305, 357, 391], "hessian": [9, 25, 106, 166, 167, 168, 169, 170, 171, 236, 292, 293, 294, 391], "dimens": [9, 16, 38, 41, 59, 61, 105, 106, 158, 188, 189, 244, 245, 296, 390, 395, 448, 449], "j": [9, 16, 25, 61, 105, 106, 157, 158, 159, 161, 164, 165, 189, 236, 276, 390, 395, 448], "natur": [9, 178, 185, 189], "log": [9, 176, 179, 180, 189], "approx": [9, 168], "71828": 9, "sqrt": [9, 160], "n_n": [9, 292, 295], "size": [9, 16, 25, 42, 76, 77, 78, 79, 105, 106, 176, 178, 179, 184, 185, 186, 189, 221, 222, 225, 226, 228, 232, 291, 296, 448, 449], "vvi": 9, "vri": 9, "vii": 9, "vmi": 9, "vai": 9, "magnitud": [9, 16, 17, 260, 262, 263, 265, 268, 269, 272, 292, 293, 294, 349, 350, 393, 395, 440, 452], "vr": [9, 292, 293, 390, 391, 392, 405], "vi": [9, 292, 293, 391, 392, 405], "vm": [9, 17, 106, 244, 262, 292, 293, 294, 297, 349, 391, 393, 406, 452], "dvm": 9, "inv": 9, "invers": 9, "frac": [9, 30, 190], "z_i": 9, "_i": [9, 276], "zr": [9, 16, 18, 292, 297, 390, 391], "zi": [9, 16, 18, 292, 297, 390, 391], "j_": 9, "affin": 9, "dd": 9, "aa": 9, "combin": [9, 106, 156, 292, 295, 395], "ccc": [9, 18], "underlin": 9, "obtain": [9, 42, 106, 292, 293, 391, 395], "multipli": [9, 16, 25, 30, 57, 59, 105, 106, 108, 143, 144, 145, 146, 147, 148, 167, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 292, 293, 391], "superscript": 9, "subscript": [9, 236, 237, 245], "carleton": 10, "coffrin": 10, "et": [10, 106, 437], "al": 10, "progress": [10, 25, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "www": [10, 106, 109, 110, 111, 122, 127, 132, 133, 142, 157, 158, 159, 160, 161, 164, 170, 171, 189, 191], "overleaf": 10, "5d94e3765cb3ba000129df3c": 10, "zimmerman": [10, 25], "octob": 10, "2020": 10, "org": [10, 20, 22, 25, 105, 106, 110, 136, 142, 168, 169, 170, 171, 174, 197, 199, 449], "much": [11, 245], "task_pf": [11, 234, 438, 439, 441, 443, 444, 453, 455, 456], "task_cpf": [11, 234, 439, 452, 453, 456], "usag": [11, 296], "pattern": 11, "occur": [11, 59], "flowchart": 11, "satisfi": [11, 25, 29, 30], "reactiv": [11, 16, 17, 42, 65, 244, 260, 265, 266, 268, 269, 271, 272, 273, 274, 276, 284, 287, 328, 359, 365, 442], "mark": 11, "star": 11, "sub": [11, 76, 77, 78, 79, 105, 106, 244, 245, 441], "accomplish": 11, "next_dm": [11, 437, 442], "next_nm": [11, 437], "next_mm": [11, 437, 438], "empti": [11, 16, 25, 30, 41, 61, 63, 64, 65, 76, 77, 78, 79, 105, 106, 109, 110, 111, 142, 146, 149, 174, 179, 180, 189, 197, 217, 236, 239, 240, 241, 244, 245, 291, 292, 293, 295, 297, 356, 364, 377, 389, 391, 392, 393, 437, 442], "termin": [11, 16, 25, 65, 106, 147, 161, 168, 170, 176, 181, 182, 189, 198], "On": [11, 25], "trigger": [11, 177, 178, 181, 182], "enforc": [11, 438, 442], "constraint": [11, 16, 17, 25, 30, 65, 100, 105, 106, 107, 108, 143, 144, 145, 146, 147, 148, 165, 167, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 236, 243, 261, 265, 281, 283, 292, 293, 297, 299, 300, 302, 303, 307, 309, 312, 314, 316, 320, 321, 322, 323, 324, 325, 338, 339, 340, 341, 342, 350, 357, 358, 359, 360, 361, 366, 367, 382, 383, 391, 408, 447], "print_soln": [11, 437], "print": [11, 18, 28, 35, 73, 74, 101, 104, 105, 112, 151, 175, 214, 220, 221, 222, 225, 226, 227, 228, 231, 238, 240, 244, 261, 264, 265, 267, 270, 271, 273, 275, 278, 280, 283, 286, 288, 437, 440, 452, 453, 454, 455], "save_soln": [11, 437], "save": [11, 76, 77, 78, 79, 95, 96, 97, 99, 105, 106, 241, 242, 391, 394, 437, 439, 441, 443, 452, 453, 454, 455], "instal": [12, 14, 28, 37, 74, 104, 112, 151, 175, 216, 220, 233], "python": 12, "virtual": 12, "unix": [12, 223, 229], "maco": 12, "window": [12, 76, 77, 78, 79, 223, 229], "python3": 12, "venv": 12, "env": 12, "bin": 12, "script": [12, 227], "confirm": 12, "leav": 12, "deactiv": 12, "sphinxcontrib": 12, "matlabdomain": 12, "rtd": 12, "theme": 12, "pip": 12, "texliv": 12, "latex": [12, 20], "directori": [12, 13, 14, 15, 76, 77, 78, 79, 95, 96, 97, 99, 142, 232], "latexpdf": 12, "twice": [12, 395], "pick": 12, "ensur": [12, 390], "content": [12, 16, 59, 109, 110, 111, 142, 149, 174, 223, 448, 449], "cross": 12, "date": [12, 28, 74, 112, 151, 175, 217, 220], "If": [12, 16, 25, 35, 60, 61, 62, 63, 76, 77, 101, 105, 106, 109, 110, 111, 142, 149, 157, 159, 161, 164, 168, 169, 170, 171, 174, 178, 179, 214, 217, 221, 223, 225, 231, 232, 244, 291, 296, 449], "everyth": [12, 221, 458], "properli": [12, 232], "creation": [12, 16], "rst": [12, 13, 14, 15], "stub": [12, 13, 14, 15], "mani": [12, 19, 232], "pars": [12, 106], "analyz": 12, "symlink": [12, 13, 14, 15], "subdirectori": 12, "generate_matpower_autodoc": 12, "hard": [12, 18], "lib": [12, 13, 15, 16, 17, 18, 19, 232], "prompt": [12, 232], "rebuild": [12, 244], "ref": [12, 13, 14, 16, 19, 235, 262, 263, 296, 390, 395, 402, 442], "generate_autodoc_stub": [12, 14], "generate_source_symlink": [12, 14], "dest": [13, 15], "success": [13, 15, 19, 35, 101, 147, 176, 198, 214, 231, 232, 437, 439, 441, 443], "err_list": [13, 15], "stub_typ": [13, 15], "destdir": [13, 15], "prepend": [13, 15], "dir": [13, 15], "gh_base_url": [13, 15], "url": [13, 15], "mod": [13, 15], "modul": [13, 15], "pkg": [13, 15], "src_path": [13, 15], "o": [13, 15], "otherwis": [13, 15, 17, 62, 63, 105, 106, 179, 189, 217, 225, 226, 227, 236, 244, 390, 391, 395, 451], "error": [13, 15, 60, 106, 156, 238, 244, 449], "fatal": [13, 15, 156], "blob": [13, 15], "class1": [13, 15], "class2": [13, 15], "class3": [13, 15], "class4": [13, 15], "func1": [13, 15], "func2": [13, 15], "func3": [13, 15], "func4": [13, 15], "install_dir": 14, "src": 15, "demonstr": [16, 17], "transform": [16, 17, 18, 19, 42, 259, 260, 287, 288, 337, 338, 339, 340, 341, 342, 343, 344, 388, 389, 396, 436, 445], "discuss": [16, 18], "exactli": [16, 178, 179], "p_": [16, 272], "mathrm": [16, 25, 30, 190, 236, 272, 292, 391], "p_1": 16, "_0": [16, 272], "_1": [16, 18, 272], "diagram": [16, 18], "_2": [16, 18], "_k": [16, 18], "p_k": 16, "q_k": 16, "p_2": 16, "q_1": 16, "q_2": 16, "setpoint": [16, 238, 268, 269, 272], "appli": [16, 41, 42, 58, 59, 109, 110, 111, 142, 143, 144, 145, 146, 147, 148, 149, 156, 167, 174, 189, 223, 229, 244, 449, 452, 453, 454, 455], "implmement": [16, 18], "legacy_dclin": [16, 17, 446], "whose": [16, 59, 105, 106, 158, 176, 227, 395], "role": 16, "piec": [16, 80, 244], "flag": [16, 25, 30, 65, 73, 76, 77, 78, 79, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 177, 178, 179, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 238, 240, 244, 437], "physic": [16, 18], "lower": [16, 25, 30, 106, 107, 108, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 260, 261, 262, 265, 268, 271, 272, 273, 281, 390], "bound": [16, 18, 25, 30, 106, 107, 108, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 238, 260, 261, 262, 265, 268, 271, 272, 273, 281, 293, 390], "dme_dclin": 16, "extend": [16, 37, 216, 233], "dme_dcline_opf": 16, "bus_fr": [16, 260, 272, 274, 287], "bus_to": [16, 260, 272, 274, 287], "loss0": [16, 272], "loss1": [16, 272], "vm_setpoint_fr": [16, 272], "vm_setpoint_to": [16, 272], "p_fr_lb": [16, 272], "p_fr_ub": [16, 272], "q_fr_lb": [16, 272], "q_fr_ub": [16, 272], "q_to_lb": [16, 272], "q_to_ub": [16, 272], "p_fr": [16, 17, 272], "q_fr": [16, 272], "p_to": [16, 272], "q_to": [16, 272], "dme_legacy_dclin": [16, 17, 234, 273, 446, 456], "notic": [16, 18], "fbus_on": [16, 272], "tbus_on": [16, 272], "p_fr_start": [16, 272], "p_to_start": [16, 272], "q_fr_start": [16, 272], "q_to_start": [16, 272], "our": [16, 18, 232], "th": [16, 236, 390, 395], "_start": 16, "horzcat": [16, 18, 244, 448, 449], "export_var": [16, 244, 260, 261, 262, 265, 268, 271, 272, 273, 279, 281, 282, 285], "var": [16, 59, 60, 105, 106, 189, 244, 391, 392, 393, 394, 441], "export_vars_offline_v": [16, 244, 260, 261, 262, 265, 268, 271, 272, 273, 281, 282, 325], "info": [16, 18, 21, 22, 23, 24, 28, 38, 74, 75, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 156, 169, 175, 179, 181, 182, 196, 217, 218, 219, 220, 244, 395], "b2i": [16, 18], "idx": [16, 18, 38, 39, 40, 41, 58, 76, 77, 78, 105, 106, 179, 189, 236, 237, 244, 262, 268, 291, 292, 293, 294, 295, 296, 297, 326, 328, 390, 391, 392, 393, 395, 401, 402, 403, 404, 405, 406, 407, 408, 412, 415, 418, 420, 423, 427], "alreadi": [16, 18, 39, 40, 65, 105, 106], "turn": [16, 18, 20, 217, 260], "bus_dm": 16, "isol": [16, 18, 235, 262, 263], "fill": [16, 18, 38, 289], "set_bus_type_pv": [16, 262], "vm_control": [16, 262, 263], "reli": [16, 18, 20], "global": [16, 221, 222, 225, 226, 228, 235, 458], "apply_vm_setpoint": [16, 268, 269, 272], "i_fr": 16, "i_to": 16, "vm_start": [16, 262], "pp_have_section_sum": [16, 244, 260, 268, 269, 272, 274, 276, 277, 281, 284, 287], "pp_data_sum": [16, 244, 260, 268, 269, 272, 274, 276, 277, 281, 284, 287], "torf": [16, 106, 217, 235, 238, 244, 245, 296, 448], "pp_arg": [16, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 283, 284, 287], "out_": [16, 238, 240, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 283, 284, 287], "fd": [16, 106, 158, 161, 163, 238, 244, 260, 261, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 283, 284, 287, 437, 440], "fprintf": 16, "29": [16, 217, 232], "12": [16, 17, 19, 190, 221, 222, 225, 226, 228, 232], "2f": 16, "mw": [16, 17, 73, 265, 268, 271, 272, 273, 276, 281, 282, 284], "mvar": [16, 17, 42, 265, 268, 271, 272, 273, 276, 281, 284], "pp_have_section_det": [16, 244, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287], "pp_get_headers_det": [16, 244, 260, 262, 263, 265, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287], "pp_data_det": [16, 244], "header": [16, 238, 240, 244, 437], "third": [16, 41, 42], "inj": [16, 17], "1234567": 16, "123456789": 16, "90": [16, 17], "123456": 16, "89": [16, 17, 42], "str": [16, 105, 244, 448], "pp_data_row_det": [16, 244, 260, 262, 263, 265, 266, 268, 269, 272, 274, 276, 277, 281, 282, 284, 287], "sprintf": [16, 18], "7d": 16, "9d": 16, "6d": 16, "10": [16, 17, 19, 25, 27, 30, 42, 143, 144, 145, 147, 148, 157, 158, 160, 163, 164, 168, 169, 170, 171, 173, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 223, 225, 229, 281, 448], "themselv": [16, 105, 106, 289], "chose": 16, "keep": [16, 19, 105, 106, 289], "check": [16, 37, 60, 75, 105, 156, 216, 217, 222, 230, 233, 235, 244, 245, 296, 440], "against": 16, "dme_legacy_dcline_opf": [16, 17, 234, 446, 456], "mu_p_fr_lb": [16, 273], "mu_p_fr_ub": [16, 273], "mu_q_fr_lb": [16, 273], "mu_q_fr_ub": [16, 273], "mu_q_to_lb": [16, 273], "mu_q_to_ub": [16, 273], "polynomi": [16, 80, 236, 237, 365, 366, 371], "breakpoint": [16, 236], "appear": [16, 105, 106], "cost_tabl": [16, 234, 237, 271, 273, 365, 449, 456], "have_cost": [16, 268, 271, 272, 273], "routin": [16, 36, 103, 166, 215, 232], "whether": [16, 65, 76, 77, 78, 79, 105, 106, 143, 144, 145, 146, 147, 148, 179, 188, 189, 218, 219, 223, 226, 229, 445, 446], "build_cost_param": [16, 271, 273, 366, 367, 371], "conveni": 16, "cost_table_util": [16, 234, 236, 456], "ismemb": 16, "variablenam": [16, 448], "poli": [16, 236, 371], "poly_param": [16, 236, 237, 365], "pwl": [16, 236, 237, 365, 371], "pwl_param": [16, 236, 237, 365], "els": [16, 17, 217, 232], "lim": [16, 238, 240, 261, 264, 265, 267, 270, 271, 273, 275, 278, 280, 283, 286, 288, 293], "lb": [16, 17, 296], "ub": [16, 17], "pp_have_section_lim": [16, 261, 265, 271, 273, 281, 283], "pp_binding_rows_lim": [16, 261, 265, 271, 273, 281, 283], "bind": [16, 25], "pp_get_headers_lim": [16, 261, 265, 271, 273, 281, 283], "pp_data_row_lim": [16, 261, 265, 271, 273, 281, 283], "ctol": [16, 283], "ptol": [16, 283], "dme_shared_opf": [16, 234, 261, 264, 265, 267, 270, 271, 273, 275, 278, 280, 281, 282, 286, 288, 456], "mu": [16, 17, 25, 106, 108, 168, 169, 170, 171, 441], "890": 16, "12345": 16, "78": 16, "mu_lb": [16, 281], "3f": 16, "mu_ub": [16, 281], "dcline": 16, "dclinecost": 16, "dmce_legacy_dcline_mpc2": [16, 17, 234, 446, 456], "data_field": [16, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "df": [16, 25, 106, 166, 168, 169, 170, 171, 236, 245, 326], "default_export_data_t": [16, 245, 246, 248, 251, 252], "expect": [16, 18, 19, 37, 65, 104, 189, 216, 221, 223, 225, 227, 229, 233, 242, 441], "retriev": [16, 105, 296, 448, 449], "default_export_data_nrow": [16, 245], "dt": [16, 245], "idx_dclin": 16, "qmaxt": 16, "major": 16, "directi": 16, "gcip_fcn": 16, "ob": 16, "dcline_cost_import": [16, 252], "gcep_fcn": 16, "dcline_cost_export": [16, 252], "br_statu": 16, "f_bu": 16, "t_bu": 16, "vf": 16, "vt": [16, 105, 106, 390], "pmin": [16, 44, 63, 76, 106], "pmax": [16, 42, 63, 76, 102, 106], "qminf": 16, "qmaxf": 16, "qmint": 16, "qf": 16, "pt": [16, 119], "qt": 16, "isfield": 16, "mu_pmin": 16, "mu_pmax": 16, "mu_qminf": 16, "mu_qmaxf": 16, "mu_qmint": 16, "mu_qmaxt": 16, "static": [16, 235, 236, 237, 251, 448], "dmce_gen_mpc2": [16, 234, 456], "gencost": [16, 19, 38, 39, 40, 59, 62, 63, 251], "gencost2cost_t": [16, 251], "cost_table2gencost": [16, 251], "next": [16, 18, 62, 63, 105, 106, 150, 176, 178, 179, 437, 449], "let": [16, 18], "nme_legacy_dclin": [16, 234, 420, 423, 456], "np": [16, 18, 390, 395, 396, 408, 411, 412, 419, 424, 425, 426, 431, 436], "nz": [16, 18, 133, 390, 395, 408, 411, 412, 419], "anyth": [16, 18, 221], "nme_legacy_dcline_ac": [16, 234, 421, 422, 456], "form_ac": [16, 18, 234, 293, 294, 295, 391, 392, 393, 456], "add_zvar": [16, 18, 390, 395, 408, 412, 415, 418, 420, 423], "ndc": 16, "nk": [16, 18, 395], "data_model_el": [16, 18, 245, 325, 395], "add_var": [16, 18, 105, 106, 297, 308, 310, 313, 315, 317, 325, 359, 365, 371, 382, 390, 395], "pdcf": [16, 420, 423], "qdcf": [16, 420], "pdct": [16, 420, 423], "inf": [16, 30, 63, 106, 143, 144, 145, 146, 147, 148, 157, 158, 160, 164, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 390], "qdct": [16, 420], "spey": 16, "add_vvar": [16, 18, 390, 395, 403, 404, 405, 406, 407], "defer": [16, 18], "recal": [16, 18], "omit": [16, 18, 105, 106, 238, 241, 244, 296, 297, 390, 395, 448], "25": [16, 17, 42, 296, 448], "proper": [16, 61], "becom": [16, 18, 25, 42, 237], "identii": 16, "nme_legacy_dcline_acc": [16, 17, 234, 446, 456], "form_acc": [16, 18, 234, 292, 294, 392, 398, 403, 405, 409, 413, 416, 421, 428, 433, 456], "nme_legacy_dcline_acp": [16, 17, 234, 446, 456], "form_acp": [16, 18, 234, 292, 293, 393, 399, 404, 406, 410, 414, 417, 422, 424, 426, 429, 434, 436, 456], "nme_legacy_dcline_dc": [16, 17, 234, 446, 456], "form_dc": [16, 234, 292, 293, 294, 394, 400, 407, 418, 423, 430, 435, 456], "z_1": 16, "z_2": 16, "analog": 16, "incorpor": [16, 18, 42], "impli": 16, "beyond": [16, 42], "mme_legacy_dclin": [16, 234, 371, 374, 375, 456], "slightli": 16, "mme_legacy_dcline_pf_ac": [16, 17, 234, 446, 456], "pp": [16, 25], "get_idx": [16, 105, 106], "s_fr": 16, "gs_": [16, 292, 391], "i1": [16, 105, 106, 236, 297, 326, 365, 371, 390, 448], "iN": [16, 105, 106, 297, 326, 390, 448], "s_to": 16, "imag": [16, 391, 392], "mme_legacy_dcline_pf_dc": [16, 17, 234, 446, 456], "26": [16, 19], "mme_legacy_dcline_opf": [16, 234, 372, 373, 456], "ccv": [16, 236], "just": [16, 244, 437, 449], "ydc": 16, "dimenion": 16, "isempti": [16, 448, 449], "add_constraint": [16, 297, 325, 339, 340, 341, 342, 350, 357, 358, 359, 360, 361, 366, 367, 371, 382, 383], "spdiag": 16, "add_lin_constraint": [16, 105, 106], "dcline_legaci": 16, "ycondc": 16, "add_cost": [16, 297, 318, 325, 365, 366, 371, 382], "kind": [16, 244], "less": [16, 29, 225, 236], "than": [16, 25, 57, 73, 106, 150, 225, 236, 292, 293, 391, 448], "greater": [16, 57, 111], "have_quad_cost": [16, 236, 365, 371], "add_quad_cost": [16, 105, 106], "polpdcf": 16, "higher": [16, 187, 225, 236], "pg": [16, 17, 63, 73, 105, 106, 268, 390, 415, 418, 452, 453, 454, 455], "i3": [16, 236, 365, 371], "cost_pdcf": 16, "xx": [16, 106, 236, 293, 357, 360, 398], "poly_cost_fcn": [16, 236], "poly_coef": [16, 236], "add_nln_cost": [16, 105, 106], "pwldc": 16, "interior_x0": [16, 304, 347, 348, 350, 351, 352, 356, 364, 365, 371, 377, 389], "x0": [16, 25, 30, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 304, 347, 348, 350, 351, 352, 356, 364, 365, 371, 377, 389], "feasibl": [16, 25, 42, 109], "vv": [16, 105, 106, 424], "maxc": [16, 236, 237], "max_pwl_cost": [16, 236, 237], "ab": [16, 188], "mathmat": [16, 325, 437, 439, 441, 443], "mme_legacy_dcline_opf_ac": [16, 17, 234, 446, 456], "network_model_el": [16, 325], "vm_setpoint": [16, 268, 440], "sign": [16, 181, 189], "swap": 16, "mme_legacy_dcline_opf_dc": [16, 17, 234, 446, 456], "now": [16, 36, 103, 215, 458], "were": [16, 42, 106, 222], "side": [16, 19, 106], "net_model_dc": [16, 234, 456], "mme_legacy_opf_dcline_ac": 16, "math_model_opf_acc": [16, 234, 307, 310, 456], "inclus": 16, "explain": 16, "xt_legacy_dclin": [16, 17, 234, 456], "t_case9_dclin": [16, 17], "go": 16, "gizmo": 16, "entir": [17, 61, 106, 292, 295], "20": [17, 25, 42, 187, 194, 296, 390], "_element_class": [17, 445, 446], "fmt": [17, 290, 445, 446, 447], "mpc2": [17, 241, 242, 290, 445, 446, 447], "task_tag": [17, 290, 297, 304, 318, 445, 446, 447], "v_cartesian": [17, 438, 440, 442], "immedi": 17, "succeed": [17, 19, 189, 439, 441, 443], "27": [17, 19, 158], "23": [17, 19], "setup": [17, 19, 305, 316], "04": 17, "6518": 17, "hr": 17, "area": [17, 42, 59, 262], "zone": [17, 42, 61, 257, 262, 282, 383, 447], "319": 17, "820": 17, "900": 17, "110": [17, 42], "315": 17, "115": 17, "00": [17, 19, 232], "124": 17, "40": [17, 146, 296], "59": [17, 19], "minimum": [17, 164, 189], "maximum": [17, 25, 30, 42, 147, 157, 158, 159, 160, 161, 164, 168, 170, 189, 198, 225, 236, 237], "066": 17, "30": [17, 42, 84, 85, 86, 87, 88, 158, 194, 296], "100": [17, 19, 42, 197], "51": [17, 187], "deg": [17, 19], "11": [17, 19, 29, 30, 42, 125, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200, 217], "lmp": 17, "14": [17, 19], "99": [17, 191], "mwh": [17, 73], "24": [17, 102], "48": 17, "62": [17, 19], "mvarh": 17, "43": 17, "mag": [17, 393], "pu": 17, "ang": [17, 393], "000": 17, "15": [17, 18, 19, 42, 390], "954": 17, "107": 17, "035": 17, "277": 17, "047": 17, "623": 17, "094": 17, "470": 17, "967": 17, "298": 17, "078": [17, 19], "508": 17, "952": 17, "085": 17, "992": 17, "600": [17, 146, 197], "081": 17, "160": 17, "476": 17, "427": 17, "097": 17, "205": 17, "043": 17, "112": 17, "067": 17, "079": 17, "consumpt": 17, "35": [17, 18, 19], "125": 17, "50": [17, 42, 187, 296], "19": 17, "47": [17, 19], "54": [17, 42], "31": 17, "18": [17, 19, 30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200, 232], "85": [17, 19], "49": [17, 105, 390], "68": [17, 105], "81": 17, "88": 17, "02": [17, 19], "32": 17, "65": 17, "37": [17, 158], "38": [17, 42, 105, 390], "39": 17, "87": [17, 105, 390], "69": 17, "64": [17, 19], "13": [17, 42, 146, 223, 229], "70": [17, 42], "01": [17, 19], "58": 17, "131": 17, "95": [17, 19, 25], "61": 17, "60": [17, 19, 296], "34": [17, 19, 42], "03": [17, 19], "06": [17, 19], "36": [17, 18], "97": [17, 19], "92": 17, "84": [17, 19], "75": 17, "566": 17, "231": 17, "197": 17, "010": 17, "046": 17, "250": [17, 42, 197], "98": [17, 19], "270": 17, "qg": [17, 65, 106, 268, 415], "300": [17, 146, 197], "22": [17, 19, 25, 42], "mu_sm_fr": 17, "sm_fr": 17, "sm_ub": 17, "sm_to": 17, "mu_sm_to": 17, "762": 17, "375": 17, "760": 17, "prototyp": [17, 19, 290, 456], "wider": 18, "rang": [18, 42], "fictiti": 18, "wide": [18, 59, 444], "verifi": [18, 232], "facil": 18, "sai": 18, "_g": 18, "proport": 18, "imped": [18, 19, 274, 276], "_3": 18, "_4": 18, "_5": 18, "_6": 18, "_7": 18, "_8": 18, "dme_gizmo": 18, "bus_1": 18, "bus_2": 18, "bus_3": 18, "y1r": 18, "y1i": 18, "y2r": 18, "y2i": 18, "m1r": 18, "m1i": 18, "m2r": 18, "m2i": 18, "lr": 18, "li": 18, "ir": 18, "ii": [18, 59], "ni": 18, "sr": 18, "si": [18, 391], "zr1": 18, "zi1": 18, "zr2": 18, "zi2": 18, "bus1": 18, "bus2": 18, "bus3": 18, "until": [18, 448], "look": [18, 156, 232], "dme_branch": [18, 234, 261, 456], "focu": 18, "assumpt": 18, "nme_gizmo": 18, "16": [18, 19], "nme_gizmo_ac": 18, "17": [18, 30, 42, 86, 88, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "zmax": 18, "vname_r": 18, "d_gizmo": 18, "vname_i": 18, "y1": 18, "1j": 18, "y2": 18, "m1": 18, "m2": 18, "ss": 18, "zz": 18, "j1": [18, 57, 448], "j2": [18, 57], "j3": 18, "spars": [18, 22, 29, 30, 106, 107, 143, 144, 145, 146, 147, 148, 165, 166, 167, 191, 192, 193, 195, 196, 197, 198, 199, 200, 291, 292, 293, 391, 395], "arbitrarili": 18, "obei": 18, "zr1_gizmo": 18, "nme_gizmo_acc": 18, "nme_gizmo_acp": 18, "xt_gizmo": 18, "mind": 19, "enhanc": 19, "plan": [19, 73], "futur": [19, 63, 106], "don": [19, 179], "t_run_mp_3p": 19, "t_case3p_a": 19, "0b1": 19, "feb": [19, 217], "2024": [19, 217], "residu": 19, "375e": 19, "042e": 19, "287e": 19, "179e": 19, "961e": 19, "570e": 19, "967e": 19, "405e": 19, "05": [19, 25, 189], "400e": 19, "090e": 19, "908e": 19, "newton": [19, 25, 106, 152, 154, 157, 158, 159, 161, 162, 163, 164], "converg": [19, 106, 145, 146, 157, 158, 159, 160, 161, 164, 169, 170, 171, 195, 196, 197, 199], "ph": [19, 25], "6109": 19, "kw": [19, 269, 274, 277, 287], "4206": 19, "kvar": [19, 269, 274, 287], "5450": 19, "2442": 19, "561": 19, "1173": 19, "590": 19, "kv": [19, 42, 262, 263, 287], "1996": 19, "120": 19, "1637": 19, "1105": 19, "0821": 19, "119": 19, "3055": 19, "2547": 19, "123": 19, "2028": 19, "114": 19, "79": 19, "1750": 19, "9298": 19, "126": 19, "80": [19, 42], "8327": 19, "102": 19, "1341": 19, "42": [19, 194], "970": 19, "52": 19, "2096": 19, "41": 19, "2672": 19, "1894": 19, "1275": 19, "8500": 19, "1800": 19, "9000": 19, "2375": 19, "9500": 19, "229": 19, "345": 19, "66": 19, "152": 19, "455": 19, "689": 19, "1036": 19, "1364": 19, "230": 19, "144": 19, "72": 19, "1323": 19, "881": 19, "2043": 19, "1133": 19, "2598": 19, "1508": 19, "1337": 19, "963": 19, "2074": 19, "1319": 19, "2652": 19, "1830": 19, "790": 19, "871": 19, "780": 19, "xfrm": 19, "xfmr": 19, "substat": 19, "bus3p": [19, 238, 266, 445], "line3p": [19, 445], "xfrm3p": 19, "load3p": [19, 445], "gen3p": [19, 445], "lc": [19, 253, 274], "mile": 19, "configur": 19, "referenc": [19, 105, 106, 274], "freq": [19, 274], "frequenc": [19, 274], "hertz": 19, "4bu": 19, "unb": 19, "dss": 19, "bal": 19, "opendss": 19, "ieee": [19, 25, 42], "ground": 19, "wye": 19, "sourceforg": 19, "net": [19, 437], "electricdss": 19, "head": 19, "tree": 19, "trunk": 19, "distrib": 19, "ieeetestcas": 19, "basemva": 19, "hz": [19, 274], "basekva": 19, "busid": 19, "basekv": [19, 42], "vm1": [19, 263], "vm2": [19, 263], "vm3": [19, 263, 404], "va1": [19, 263], "va2": [19, 263], "va3": [19, 263, 404], "brid": 19, "lcid": 19, "len": [19, 189, 274], "5280": 19, "2500": 19, "xfid": 19, "xfmr3p": [19, 445], "6000": 19, "ldid": 19, "ldbu": 19, "pd1": [19, 277], "pd2": [19, 277], "pd3": [19, 277], "ldpf1": 19, "ldpf2": 19, "ldpf3": 19, "genid": 19, "gbu": 19, "vg1": 19, "vg2": 19, "vg3": 19, "pg1": [19, 269], "pg2": [19, 269], "pg3": [19, 269, 412], "qg1": [19, 269], "qg2": [19, 269], "qg3": [19, 269, 412], "r11": 19, "r21": 19, "r31": 19, "r22": 19, "r32": 19, "r33": 19, "x11": 19, "x21": 19, "x31": 19, "x22": 19, "x32": 19, "x33": 19, "c11": 19, "c21": 19, "c31": 19, "c22": 19, "c32": 19, "c33": 19, "457541": 19, "15594": 19, "153474": 19, "466617": 19, "157996": 19, "461462": 19, "501648": 19, "384909": 19, "04813": 19, "423624": 19, "06502": 19, "0671": 19, "86241": 19, "85323": 19, "875": 19, "09098": 19, "3254": 19, "t_case3p_b": 19, "t_case3p_c": 19, "t_case3p_d": 19, "t_case3p_": 19, "t_case3p_f": 19, "21": 19, "t_case3p_g": 19, "t_case3p_h": 19, "home": [20, 156], "goal": 20, "restructur": 20, "still": [20, 106, 221, 222, 225, 226, 228, 232], "donat": 20, "detect": [21, 22, 23, 24, 37, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 176, 179, 180, 181, 182, 188, 189, 216, 217, 218, 219, 232, 233], "lu": [21, 29, 164], "privat": [21, 22, 23, 24, 36, 103, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 215, 218, 219, 232], "lu_vec": 21, "pardiso": [22, 23, 24, 25, 29, 32], "parallel": [22, 42], "direct": [22, 29, 156, 189], "have_feature_pardiso_legaci": [22, 24, 36, 37], "have_feature_pardiso_object": [22, 23, 36, 37], "pardiso_legaci": 23, "v5": 23, "mex": [23, 106, 142, 171, 197], "have_feature_pardiso": [23, 24, 36, 37], "pardiso_object": 24, "v6": [24, 105, 150], "later": [24, 105, 119, 123, 125, 128, 131, 135, 138, 296], "f_fcn": [25, 168, 169, 170, 171], "xmin": [25, 30, 106, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "xmax": [25, 30, 106, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "gh_fcn": [25, 168, 169, 170, 171], "hess_fcn": [25, 168, 169, 170, 171], "exitflag": [25, 30, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "nlp": [25, 31, 32, 37, 106, 153, 168, 169, 170, 171, 204, 208, 215], "minim": [25, 26, 168, 169, 170, 171, 172], "subject": [25, 27, 30, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 173, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "inequ": [25, 105, 106, 107, 108, 165, 167, 168, 169, 170, 171], "9th": [25, 168, 169, 170, 171], "d2f": [25, 106, 166, 168, 169, 170, 171, 236, 326], "infti": [25, 30, 190], "dh": [25, 106, 165, 168, 169, 170, 171, 292], "dg": [25, 106, 165, 168, 169, 170, 171, 293, 441], "lagrangian": [25, 167, 168, 169, 170, 171], "muv": [25, 292], "lxx": [25, 167, 168, 169, 170, 171], "eqnonlin": [25, 106, 167, 168, 169, 170, 171], "ineqnonlin": [25, 106, 167, 168, 169, 170, 171], "parenthes": [25, 106, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "linsolv": 25, "feastol": 25, "1e": [25, 65, 77, 106, 111, 143, 144, 145, 146, 147, 148, 149, 157, 158, 160, 164, 168, 189], "toler": [25, 65, 106, 109, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 188, 189, 225, 283], "gradtol": 25, "comptol": 25, "complementar": 25, "costtol": 25, "max_it": [25, 142, 149, 157, 158, 159, 160, 161, 164, 168, 174, 189], "150": 25, "step_control": [25, 106, 171, 197], "enabl": [25, 189], "sc": [25, 106, 150, 171, 197], "red_it": 25, "reduct": 25, "cost_mult": [25, 167, 168, 169, 170, 171], "improv": [25, 42], "3rd": [25, 41, 106, 223, 229], "xi": 25, "99995": 25, "alpha": [25, 65, 174, 236], "sigma": 25, "z0": [25, 243], "slack": [25, 328, 336], "alpha_min": 25, "alpha_p": 25, "alpha_d": 25, "smaller": [25, 41], "rho_min": 25, "rho_t": 25, "rho_max": 25, "mu_threshold": 25, "kt": 25, "forc": [25, 106], "max_steps": 25, "1e10": 25, "norm": [25, 157, 158, 160, 164, 184], "exce": 25, "altern": [25, 29, 30, 61, 106, 107, 143, 144, 145, 146, 147, 148, 158, 159, 160, 161, 164, 168, 169, 170, 171, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "algorithm": [25, 29, 106, 146, 150, 157, 158, 159, 160, 161, 164, 168, 171, 197], "exit": [25, 30, 35, 101, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 176, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 214, 231], "reach": [25, 30, 177, 178, 179, 189], "fail": [25, 30, 169, 189, 196, 223, 225, 226, 229, 230, 439, 441, 443], "hist": [25, 30, 157, 158, 160, 164], "trajectori": [25, 30, 61, 157, 158, 160, 164], "feascond": [25, 30], "gradcond": [25, 30], "compcond": [25, 30], "costcond": [25, 30], "gamma": [25, 30], "stepsiz": [25, 30, 189], "alphap": [25, 30], "alphad": [25, 30], "messag": [25, 30, 65, 106, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 164, 179, 189, 191, 223, 225, 226, 228, 229, 437], "langrang": [25, 30, 106, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "kuhn": [25, 30, 106, 143, 144, 145, 146, 147, 148, 167, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "tucker": [25, 30, 106, 143, 144, 145, 146, 147, 148, 167, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "mu_l": [25, 30, 105, 106, 108, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "mu_u": [25, 30, 105, 106, 108, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "almost": [25, 30, 143, 144, 145, 146, 147, 148, 158, 159, 160, 161, 164, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "fmincon": [25, 106, 118, 119, 153, 165, 166, 167, 168, 169, 170, 171, 173], "toolbox": [25, 30, 36, 103, 106, 118, 119, 120, 123, 129, 130, 131, 133, 134, 135, 137, 138, 143, 145, 146, 147, 148, 149, 158, 159, 160, 161, 164, 168, 169, 170, 171, 191, 193, 195, 196, 197, 198, 199, 200, 215, 232], "aeq": [25, 30, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "beq": [25, 30, 143, 144, 145, 146, 147, 148, 168, 169, 170, 171, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "en": [25, 168, 169, 170, 171], "wikipedia": [25, 168, 169, 170, 171], "wiki": [25, 168, 169, 170, 171], "nonlinear_program": [25, 168, 169, 170, 171], "f2": [25, 158, 160, 168, 169, 170, 171], "nargout": [25, 157, 159, 161, 164, 168, 169, 170, 171, 189], "gh2": [25, 168, 169, 170, 171], "hess2": [25, 168, 169, 170, 171], "nargin": [25, 168, 169, 170, 171, 232], "rai": 25, "wang": 25, "hi": 25, "phd": 25, "dissert": 25, "applic": [25, 109, 110, 111, 142, 149, 174], "multi": [25, 156, 449], "period": [25, 41, 57, 59, 61, 65, 73, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 102], "secur": [25, 42, 61, 69, 72, 80], "market": 25, "thesi": 25, "cornel": [25, 191], "univers": 25, "2007": 25, "murillo": 25, "sanchez": 25, "thoma": 25, "issu": [25, 232, 449], "transact": 25, "vol": 25, "aug": [25, 42], "1185": 25, "1193": 25, "doi": 25, "1109": 25, "tpwr": 25, "901301": 25, "unconstrain": [26, 172], "banana": [26, 172], "x_1": [27, 162, 163, 173, 183, 236], "x_2": [27, 162, 163, 173, 183, 236], "x_3": [27, 173], "varargin": [28, 74, 76, 77, 78, 105, 106, 112, 151, 160, 164, 175, 220, 236, 253, 256, 296, 303, 308, 310, 313, 315, 317, 326, 390, 395, 448, 452, 453, 454, 455], "mpver": [28, 74, 112, 151, 175], "previou": [29, 176, 184, 185, 186, 189], "qa": 29, "gilbert": [29, 164], "peierl": [29, 164], "permut": 29, "umfpack": [29, 164], "rh": [29, 107, 236], "alwai": [29, 41, 65, 106, 176], "backslash": [29, 106, 164], "decomposit": 29, "substitut": 29, "short": [29, 158, 241, 260, 291, 293, 294, 295], "cut": 29, "overhead": 29, "thu": [29, 41], "better": [29, 73], "small": [29, 164], "nout": 29, "vec": 29, "thresh": [29, 106], "lu3": [29, 164], "lu3a": 29, "lu4": [29, 164], "lu5": [29, 164], "lu3m": 29, "lu3am": 29, "lu4m": 29, "lu5m": 29, "paren": [29, 65, 106], "arg": [29, 60, 106, 144, 164, 189, 194, 390, 448], "amd": [29, 164], "pivot": 29, "threshold": [29, 57, 106], "mtype": 29, "nonsymmetr": 29, "iparm": 29, "1st": [29, 41, 59, 60, 176, 292, 391], "2nd": [29, 41, 223, 229, 292, 390, 391], "dparm": 29, "tr": [29, 106], "miss": [30, 38, 60, 106, 291, 292, 295, 391, 392, 393], "quadprog": [30, 106, 137, 138, 143, 145, 146, 147, 148, 191, 193, 195, 196, 197, 198, 199, 200], "v8doc": [30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "sa": [30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "sashtml": [30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "iml": [30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "chap8": [30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "sect12": [30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "htm": [30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "1003": [30, 143, 144, 145, 147, 148, 191, 192, 193, 195, 196, 197, 198, 199, 200], "quiet": [31, 32, 33, 34, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232], "mplinsolv": [33, 36, 37, 106, 164], "qps_mip": [34, 36, 37, 197], "exit_on_fail": [35, 101, 214, 231], "unless": [35, 62, 101, 156, 214, 223, 225, 226, 228, 229, 231, 297, 390], "t_run_test": [35, 101, 214, 221, 222, 223, 225, 226, 228, 229, 231, 232, 233], "all_ok": [35, 101, 214, 227, 231], "web": [36, 103, 215, 458], "asid": [36, 103, 215], "mipsver": [36, 37], "mips_example1": [36, 37], "mips_example2": [36, 37], "test_mip": [36, 37], "t_mip": [36, 37], "t_mips_pardiso": [36, 37], "t_mplinsolv": [36, 37], "t_qps_mip": [36, 37], "have_feature_lu_vec": [36, 37], "mpci": [38, 61], "fuel": 38, "new_mpc": [38, 39, 40], "gen_typ": 38, "insert": [38, 244, 245], "bottom": [38, 78], "genfuel": [38, 39, 40, 61], "unknown": 38, "newli": [38, 39, 40, 58, 244], "storag": [39, 41, 47, 59, 62, 65, 73, 76, 77, 78, 83, 98], "xgd": [39, 40, 41, 58, 59, 61, 63], "sd": [39, 41, 61, 62, 427], "xgen": 39, "storagedata": [39, 41, 59, 61, 62], "new_xgd": [39, 40], "new_sd": 39, "storageunitdata": 39, "xgendata": [39, 40, 41, 53, 54, 55, 56, 59, 61, 62, 63], "mat": [39, 40, 58, 60, 61, 62, 63], "xgd_tabl": [39, 40, 63], "filenam": [39, 40], "loadstoragedata": [39, 61, 103, 104], "sd_tabl": [39, 62], "ess": 39, "loadxgendata": [39, 40, 58, 61, 103, 104], "wind": [40, 49, 50, 51, 52, 58, 61, 102], "windunitdata": 40, "profil": [41, 46, 50, 51, 58, 59, 61, 102], "argin": 41, "dim": [41, 59, 61, 296, 448], "chgtab": 41, "chgtabsi": 41, "xgdi": [41, 61], "sdi": 41, "ctset": 41, "dimension": [41, 58, 61, 62, 63, 105, 292, 293, 390, 391], "chgtype": [41, 59], "nt": [41, 48, 59, 61, 73, 102], "nj_max": [41, 59, 73], "length": [41, 59, 143, 144, 145, 146, 147, 148, 158, 179, 184, 186, 274, 296], "idx_profil": [41, 58, 61, 102, 103, 104], "chgtabi": 41, "storagei": [41, 61], "ctsetsi": 41, "contingencydata": [41, 59], "nor": 41, "scenario": [41, 59, 61, 73, 102], "conting": [41, 42, 45, 59, 61, 65, 73, 76, 84, 85, 86, 87, 88, 89, 90, 91, 92], "expand": [41, 61], "singleton": [41, 59], "ignor": [41, 59, 106, 156, 194, 223, 338], "mpcdata": [41, 59], "mandatori": 41, "subset": [41, 59, 75, 105, 106, 236, 292, 293, 295, 391, 392, 393], "oppos": [41, 65, 217, 236, 448, 449], "nj": [41, 102], "unspecifi": 41, "probabl": [41, 48, 57, 61], "correctli": 41, "inconsist": 41, "resp": 41, "ie": [41, 140], "dedic": 41, "binari": [41, 106, 143, 144, 145, 146, 147, 148, 390], "span": 41, "cghtype": 41, "118": 42, "caseformat": [42, 43, 44, 80, 81, 82, 83], "ieee118cdf": 42, "txt": [42, 223, 229], "sep": 42, "2004": 42, "cdf2matp": 42, "rev": 42, "warn": [42, 65, 106, 143, 144, 145, 146, 147, 148], "cdf": 42, "lab": 42, "ec": 42, "uw": 42, "edu": [42, 140, 191], "pstca": 42, "psap": 42, "site": [42, 61], "mar": 42, "2006": 42, "08": 42, "93": [42, 105, 390], "archiv": 42, "1961": 42, "2010": 42, "cm": 42, "cz": 42, "group": [42, 58, 149], "thermal": 42, "cabl": 42, "safe": 42, "config": 42, "345kv": 42, "circuit": 42, "161": 42, "138kv": 42, "split": [42, 136], "ramp_agc": 42, "ramp_10": 42, "ramp_30": 42, "c118": 42, "2012": 42, "consider": 42, "compromis": 42, "procedur": 42, "synchron": 42, "capacitor": 42, "decreas": 42, "104": 42, "hydro": 42, "close": 42, "geograph": 42, "locat": [42, 188, 189, 232], "retir": 42, "yield": 42, "minu": 42, "chosen": [42, 59], "impact": 42, "deviat": 42, "criterion": [42, 189], "wors": 42, "worst": 42, "upgrad": 42, "76": 42, "caus": [42, 189, 217], "infeas": [42, 144, 147, 191, 192, 194, 198], "exceed": [42, 192], "appar": [42, 260, 292], "enough": [42, 191], "77": 42, "addition": 42, "330": 42, "furthermor": 42, "defici": 42, "difficult": 42, "resort": 42, "wherea": 42, "stochast": [44, 45, 46, 47, 49, 50, 52, 53, 55, 56, 65, 69, 72, 97], "commit": [44, 45, 46, 47, 50, 51, 52, 56, 59, 65, 71, 72, 73, 78, 79, 96, 97, 99], "ex_case3a": [44, 103, 104], "startup": [44, 268], "shutdown": 44, "transit": [48, 57, 61, 77], "definit": [48, 244], "determinist": [51, 61, 66, 67, 68, 70, 71, 94], "multiperiod": [54, 65, 70, 94], "ramp": [54, 57, 73, 76, 98, 281], "md0": 57, "mask": 57, "md": [57, 58, 61, 64, 76, 77, 78], "taken": [57, 94, 106, 152, 153, 155, 189], "transmat": [57, 61], "ve": 57, "profilesi": [58, 61], "profiles0": 58, "mycas": 58, "myxgendata": 58, "iwind": 58, "addwind": [58, 103, 104], "mywindunit": 58, "mywindprofil": 58, "loadmd": [58, 59, 65, 103, 104], "mytransmat": 58, "apply_profil": [58, 61, 103, 104], "pr_rep": 59, "pr_rel": 59, "pr_add": 59, "pr_tcont": 59, "pr_type": 59, "pr_tmpcd": 59, "pr_txgd": 59, "pr_tctd": 59, "pr_tstgd": 59, "pr_chgtype": 59, "question": [59, 217], "offer": [59, 63], "ct_tbu": 59, "ct_tgen": 59, "ct_tbrch": 59, "ct_tareabu": 59, "ct_tareagen": 59, "ct_tareabrch": 59, "ct_tload": 59, "ct_tareaload": 59, "ct_tgencost": 59, "ct_tareagencost": 59, "commitsch": [59, 63], "initialpg": [59, 63], "rampwearcostcoeff": [59, 63], "positiveactivereservepric": [59, 63], "positiveactivereservequant": [59, 63], "negativeactivereservepric": [59, 63], "negativeactivereservequant": [59, 63], "positiveactivedeltapric": [59, 63], "negativeactivedeltapric": [59, 63], "positiveloadfollowreservepric": [59, 63], "positiveloadfollowreservequant": [59, 63], "negativeloadfollowreservepric": [59, 63], "negativeloadfollowreservequant": [59, 63], "minstoragelevel": [59, 62], "maxstoragelevel": [59, 62], "outeff": [59, 62], "ineff": [59, 62], "lossfactor": [59, 62], "rho": [59, 62], "usual": 59, "idx_ct": 59, "ct_col": 59, "old": [59, 109, 111, 142, 146, 149, 197], "vale": 59, "pre": [59, 105, 236, 243, 439, 441, 443, 444], "iii": 59, "interpret": [59, 110, 289], "whenev": 59, "expans": 59, "within": [59, 105, 106, 236, 237, 390, 449], "varfil": 60, "vartyp": 60, "varnam": 60, "prioriti": [60, 176, 187], "throw": [60, 106], "regardless": [60, 150], "transmati": 61, "contabi": 61, "trajdatai": 61, "contab": 61, "trajdata": 61, "n_t": [61, 73], "n_j": [61, 73], "horizon": [61, 65, 73], "older": [61, 448], "centroid": 61, "n_w": 61, "colnam": [62, 63], "correpsond": 62, "md_init": [62, 103, 104], "unitidx": 62, "expectedterminalstorageaim": 62, "expectedterminalstoragemin": 62, "expectedterminalstoragemax": 62, "initialstorag": 62, "initialstoragelowerbound": 62, "initialstorageupperbound": 62, "initialstoragecost": 62, "terminalstoragepric": 62, "terminalchargingprice0": 62, "terminaldischargingprice0": 62, "terminalchargingpricek": 62, "terminaldischargingpricek": 62, "ng": [63, 73, 236, 237], "terminalpg": 63, "commitkei": [63, 65], "initialst": 63, "minup": 63, "mindown": 63, "potenti": [63, 437], "fueltyp": 63, "gen_statu": 63, "mdi": 65, "mdo": [65, 73], "cplex": [65, 106, 109, 116, 143, 146, 155, 193, 197], "gurobi": [65, 106, 111, 112, 122, 145, 146, 155, 195, 197, 216], "build_model": 65, "miqp": [65, 106, 132, 143, 145, 146, 147, 155, 201, 206, 215], "coordin": [65, 189, 236, 437], "solve_model": 65, "resolve_new_cost": 65, "unchang": 65, "dc_model": 65, "demand": [65, 276, 277, 284], "fixed_r": 65, "contstraint": 65, "never": 65, "q_coordin": 65, "security_constraint": 65, "terminal_target": 65, "cyclic": 65, "simultan": [65, 106, 395], "uc": [65, 68, 78, 79, 85], "restrict": 65, "down": 65, "roll": [65, 176, 179], "happen": 65, "alg": [65, 106, 146, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 168, 171, 173, 189, 197, 323], "miqps_mast": [65, 106, 116, 121, 122, 123, 132, 143, 144, 145, 147, 148, 155, 201, 215, 216], "qps_master": [65, 106, 113, 115, 116, 121, 122, 124, 125, 130, 131, 132, 133, 136, 137, 138, 155, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 213, 215, 216], "skip_pric": [65, 106, 143, 144, 145, 146, 147, 148], "skip": [65, 106, 143, 144, 145, 146, 147, 148, 156, 228, 232], "price_stage_warn_tol": [65, 106, 143, 144, 145, 146, 147, 148], "mi": [65, 106, 143, 144, 145, 146, 147, 148], "econom": 66, "consid": [73, 225, 395], "noth": [73, 238, 244, 290, 297, 437], "though": 73, "incomplet": 73, "nb": [73, 106], "n_b": 73, "n_g": 73, "nl": 73, "n_l": 73, "nc_max": 73, "n_c": 73, "rup": 73, "upward": 73, "rdn": 73, "downward": 73, "lamp": 73, "muf": 73, "selector": [75, 438, 440, 442], "default_opt": [75, 109, 110, 111, 142, 149, 174], "valid_opt": 75, "nested_struct_copi": [75, 202, 215, 216], "plot": [76, 77, 78, 79, 95, 96, 97, 99, 104, 176, 189], "option1_nam": [76, 77, 78], "option1_valu": [76, 77, 78], "parenthesi": [76, 77, 78, 79], "saveit": [76, 77, 78, 79], "saveal": [76, 77, 78], "savepath": [76, 77, 78, 79], "savenam": [76, 77, 78, 79], "placehold": [76, 77, 78, 79, 106, 189], "size_factor": [76, 77, 78, 79], "font": [76, 77, 78, 79], "marker": [76, 77, 78, 79], "show_pc": 76, "pc": 76, "show_variable_pmax": 76, "show_limit": 76, "show_conting": 76, "show_reserv": 76, "show_grid": [76, 77], "vertic": [76, 77, 78, 79, 106, 189, 390, 448, 449], "divid": [76, 77], "staircas": 77, "evenli": [77, 102], "align": 77, "smooth": 77, "displac": 77, "sort_tol": 77, "round": 77, "nearest": 77, "sort": 77, "show_expected_initi": 77, "show_expected_fin": 77, "show_adjusted_dispatch": 77, "show_dispatch": 77, "md2": 78, "titl": [78, 79, 189, 244], "subtitl": [78, 79], "legend": [78, 79, 189], "uc1": [78, 79], "uc2": [78, 79], "xlabel": [78, 79, 189], "horizont": [78, 79, 189, 395, 448, 449], "axi": [78, 79, 189], "ylabel": [78, 79, 189], "rowlabel": [78, 79], "pff": 78, "optin": 79, "red": [79, 296], "status": [79, 238], "grai": 79, "case30": 80, "case30v19": 80, "segment": 80, "tlmp": [82, 83, 98], "cong": [82, 83], "chen": [82, 83], "most_ex5_mpopf": [94, 103, 104], "create_plot": [95, 96, 97, 99], "create_pdf": [95, 96, 97, 99], "savedir": [95, 96, 97, 99], "choic": [95, 96, 97, 99, 189, 232], "sp_plot": 95, "spuc_plot": 96, "suc_plot": 97, "deteminist": 99, "uc_plot": 99, "dynam": 100, "space": 102, "getprofil": [102, 103, 104], "most_summari": [103, 104], "plot_gen": [103, 104], "plot_storag": [103, 104], "plot_uc": [103, 104], "plot_uc_data": [103, 104], "mostver": [103, 104], "addgen2mpc": [103, 104], "addstorag": [103, 104], "filter_ramp_transit": [103, 104], "uniformwindprofil": [103, 104], "most_ex1_": [103, 104], "most_ex2_dcopf": [103, 104], "most_ex3_dcopf_w_uc": [103, 104], "most_ex4_dcopf_ss": [103, 104], "most_ex6_uc": [103, 104], "most_ex7_suc": [103, 104], "ex_case3b": [103, 104], "ex_contab": [103, 104], "ex_load_profil": [103, 104], "ex_storag": [103, 104], "ex_transmat": [103, 104], "ex_wind": [103, 104], "ex_wind_profil": [103, 104], "ex_wind_profile_d": [103, 104], "ex_wind_uc": [103, 104], "ex_xgd": [103, 104], "ex_xgd_ramp": [103, 104], "ex_xgd_r": [103, 104], "ex_xgd_uc": [103, 104], "test_most": [103, 104], "t_most_3b_1_1_0": [103, 104], "t_most_3b_1_1_2": [103, 104], "t_most_3b_3_1_0": [103, 104], "t_most_3b_3_1_2": [103, 104], "t_most_30b_1_1_0": [103, 104], "t_most_30b_1_1_17": [103, 104], "t_most_30b_3_1_0": [103, 104], "t_most_30b_3_1_17": [103, 104], "t_most_fixed_r": [103, 104], "t_most_30b_1_1_0_uc": [103, 104], "t_most_sp": [103, 104], "t_most_spuc": [103, 104], "t_most_mpopf": [103, 104], "t_most_uc": [103, 104], "t_most_suc": [103, 104], "t_most_tlmp": [103, 104], "t_most_w_d": [103, 104], "c118swf": [103, 104], "t_case30_most": [103, 104], "t_case3_most": [103, 104], "t_case_tlmp": [103, 104], "t_case_tlmp_storag": [103, 104], "loadgenericdata": [103, 104], "mpoption_info_most": [103, 104], "block": [105, 106, 158, 251, 390], "def_set_typ": [105, 106, 308, 310, 313, 315, 317, 390, 391, 392, 393, 394], "set_typ": [105, 106, 390], "userdata": [105, 106, 238], "add_named_set": [105, 106, 308, 310, 313, 315, 317, 390], "declar": 105, "lin": [105, 106, 441], "init_set_typ": [105, 106, 308, 310, 313, 315, 317, 390], "ideal": [105, 237], "due": [105, 106], "bug": [105, 191, 449], "alter": 105, "savannah": [105, 449], "52614": 105, "workaround": 105, "sure": 105, "add_": [105, 106], "valid_named_set_typ": 105, "public": [105, 106], "shallow": [105, 106], "describe_idx": [105, 106], "361": 105, "semicolon": [105, 106, 238, 241, 244, 296, 297, 390, 395, 448], "display_set": 105, "screen": 105, "get_userdata": [105, 106], "retreiv": [105, 106], "getn": [105, 106], "init_indexed_nam": [105, 106], "params_": 105, "v0": [105, 106, 390], "a_struct": [105, 106], "an_obj": 105, "stype": 105, "sname": 105, "set_type_idx_map": [105, 390], "group_by_nam": [105, 390], "consolid": [105, 390], "field1": 105, "field2": 105, "var_ord": 105, "suppos": 105, "unpack": 105, "idx_list": [105, 106, 326, 390], "vl": [105, 106, 390], "vu": [105, 106, 390], "varset": [105, 106, 326], "nle": [105, 106, 243, 441], "hess": [105, 106], "computed_bi": [105, 106], "nli": [105, 106, 243, 441], "qdc": [105, 106], "cp": [105, 106, 326], "nlc": [105, 106], "add_nln_constraint": [105, 106], "dim_list": [105, 106], "pmismatch": [105, 106], "idx1": [105, 106, 395], "idx2": [105, 106, 395], "set_type1": [105, 106], "set_type2": [105, 106], "foo": [105, 106, 156, 232], "mu_l_foo": [105, 106], "mu_u_foo": [105, 106], "bar": [105, 106, 232], "nbar": [105, 106], "prefer": [105, 106], "haven": [105, 106], "om": [106, 165, 166, 167, 326, 441], "set_param": 106, "intial": 106, "params_var": [106, 390], "params_lin_constraint": 106, "params_nln_constraint": 106, "eval_nln_constraint": 106, "eval_nln_constraint_hess": 106, "params_nln_cost": 106, "params_quad_cost": 106, "eval_nln_cost": 106, "eval_quad_cost": 106, "problem_typ": 106, "display_soln": 106, "get_soln": 106, "parse_soln": 106, "is_solv": 106, "has_parsed_soln": 106, "deal": 106, "varsets_cell2struct": 106, "varsets_idx": 106, "varsets_len": 106, "varsets_x": 106, "indentifi": 106, "ghne": 106, "pmi": 106, "ghni": 106, "ghl": 106, "cach": [106, 217, 440, 442], "conform": 106, "prob_typ": 106, "eflag": 106, "jac": [106, 157, 158, 159, 161, 164, 189], "leq": [106, 205], "nleq": [106, 152, 203, 207, 215], "prob": [106, 164], "lagrang": [106, 167], "an_om": 106, "likewis": 106, "subsequ": [106, 176, 217], "4th": [106, 390], "is_mixed_integ": 106, "stash": 106, "effici": 106, "iseq": 106, "d2g": [106, 293, 391], "d2h": [106, 292], "IN": 106, "5th": 106, "6th": 106, "nx": [106, 143, 144, 145, 146, 147, 148, 176, 177, 178, 189, 301], "pgcost": 106, "quad_cost1": 106, "q1": 106, "c1": 106, "lin_cost2": 106, "c2": 106, "k2": 106, "lin_con_1": 106, "nle_con_b": 106, "want_vector": 106, "eval_lin_constraint": 106, "ax_u": 106, "l_ax": 106, "fetch": 106, "mupmin": 106, "mupmax": 106, "dg_b_2_3": 106, "memori": [106, 191], "avl": 106, "lvl": 106, "uvl": 106, "nv": [106, 390], "pg0": [106, 390], "zij0": [106, 390], "zijmin": 106, "zijmax": 106, "ztype": [106, 390], "deprec": 106, "accept": [106, 289], "unbound": [106, 144, 192, 194], "vmin": 106, "vmax": 106, "nlps_master": [106, 118, 119, 124, 125, 127, 153, 168, 169, 170, 172, 173, 204, 215, 216], "nleqs_mast": [106, 120, 152, 157, 158, 159, 160, 162, 163, 164, 189, 203, 215, 216], "mosek": [106, 132, 146, 147, 149, 150, 155, 197, 198], "linprog": [106, 130, 131, 146, 148, 194, 197, 200], "glpk": [106, 110, 121, 144, 146, 155, 194, 197], "bpmpd": [106, 113, 155, 191, 197], "milp": [106, 121, 123, 132, 143, 144, 145, 146, 147, 155, 201, 216], "tbx": [106, 146, 197], "intlingprog": 106, "minlp": [106, 153], "art": [106, 127, 128, 129, 153, 170, 171], "knitro": [106, 127, 128, 129, 153, 170, 171, 173], "bpmpd_mex": [106, 113, 191, 197], "clp": [106, 115, 133, 192, 197], "fast": [106, 158, 161, 323], "newon": 106, "fsolv": [106, 120, 152, 154, 158, 159, 160, 161, 164], "gauss": [106, 157, 160, 161], "seidel": [106, 157, 160, 161], "ipopt": [106, 124, 125, 142, 153, 169, 171, 173, 196, 197], "coin": [106, 115, 124, 133, 142, 169, 171, 192, 196, 197], "pure": [106, 171, 197], "mips_opt": [106, 171, 197], "variant": [106, 171, 197], "osqp": [106, 136, 174, 175, 197, 199, 216], "ot": [106, 146, 155, 197], "intlinprog": [106, 123, 146, 148], "bp_opt": [106, 191, 197], "bp": [106, 113, 191, 197], "clp_opt": [106, 192, 197], "cplex_opt": [106, 143, 146, 193, 197, 215, 216], "fd_opt": [106, 158, 161], "nleqs_fd_newton": [106, 161, 215, 216], "fmincon_opt": [106, 168, 171], "fsolve_opt": [106, 159, 161], "glpk_opt": [106, 144, 146, 194, 197], "grb_opt": [106, 111, 145, 146, 195, 197], "gs_opt": [106, 160, 161], "nleqs_gauss_seidel": [106, 157, 161, 215, 216], "intlinprog_opt": [106, 146, 148], "ipopt_opt": [106, 169, 171, 196, 197, 215, 216], "knitro_opt": [106, 170, 171], "leq_opt": 106, "absolut": 106, "linprog_opt": [106, 146, 148, 197, 200], "mosek_opt": [106, 146, 147, 197, 198, 215, 216], "newton_opt": [106, 161, 164], "nleqs_newton": [106, 157, 161, 215, 216], "osqp_opt": [106, 197, 199, 215, 216], "quadprog_opt": [106, 197, 200], "place": 106, "failur": [106, 146, 157, 158, 159, 160, 161, 164, 170, 171, 197, 437], "elaps": [106, 232, 437], "sec": [106, 238], "pnes_mast": [106, 154, 176, 181, 182, 183, 187, 188, 212, 215, 216], "mp_linsolv": 106, "fcn1": 106, "my_cost_function1": 106, "other_arg": 106, "fcn2": 106, "my_cost_function2": 106, "mycost1": 106, "mycost2": 106, "constrainst": 106, "recheck": 106, "pne": [106, 154, 176, 184, 185, 186, 187, 188, 209, 212, 215], "dx": 106, "qmi": 106, "nonlin": 106, "nne": 106, "nni": 106, "qq": 106, "nnc": 106, "st": 106, "ieq": [107, 108], "igt": [107, 108], "ilt": [107, 108], "ae": [107, 108], "ai": [107, 108], "bi": [107, 108], "convert_lin_constraint_multipli": [107, 215, 216], "eq": 108, "ineq": 108, "convert_lin_constraint": [108, 215, 216], "fname": [109, 110, 111, 142, 149, 174, 241, 242, 437], "normal": [109, 110, 111, 142, 149, 174, 176, 184, 185, 186, 237], "cplexoptimset": 109, "modified_opt": [109, 110, 111, 142, 149, 174], "violat": [109, 111, 142, 149, 170, 174, 283], "simplex": [109, 131, 150], "barrier": 109, "conflict": 109, "sift": 109, "tune": 109, "lpmethod": 109, "qpmethod": 109, "opt_fnam": [109, 110, 111, 142, 149, 174], "cplex_user_options_": 109, "Their": [109, 110, 111, 142, 149, 174], "preced": [109, 110, 111, 142, 149, 152, 153, 154, 155, 174], "cplex_user_options_3": 109, "thread": [109, 111], "refactor": 109, "timelimit": [109, 111], "10000": 109, "ibm": [109, 116], "knowledgecent": 109, "sssa5p": 109, "cplexlp": [109, 116, 143, 193], "cplexqp": [109, 116, 143, 193], "msglev": 110, "glpk_user_options_3": 110, "lpsolver": 110, "feasibilitytol": 111, "displayinterv": 111, "outputflag": 111, "logtoconsol": 111, "gurobi_user_options_": 111, "gurobi_user_options_3": 111, "optimalitytol": 111, "barconvtol": 111, "iterationlimit": 111, "3000": 111, "bariterlimit": 111, "200": [111, 197], "crossov": 111, "presolv": 111, "bpopt": 113, "catch": 114, "me": 114, "catchm": 114, "try": 114, "OR": [115, 124, 133, 192], "ilog": 116, "evalc": 117, "ver": [119, 131], "int": 119, "mtd": 119, "fmincon_ipm": 119, "kit": [121, 144, 194], "r2014a": 123, "ipopt_auxdata": 125, "isequaln": 126, "knitromatlab": [127, 128, 170], "knitro_nlp": [128, 170], "have_feature_knitro": [128, 129, 215, 216], "ktrlink": 129, "prior": [129, 176], "have_feature_linprog_d": [130, 215, 216], "availblti": 131, "linprog_d": 131, "r2014b": 131, "have_feature_linprog": [131, 215, 216], "mosekopt": [132, 147, 149, 198], "opti_clp": 133, "opti": 133, "inverseproblem": 133, "have_feature_clp": [133, 215, 216], "optimopt": [135, 159, 168], "have_feature_optim": [135, 215, 216], "have_feature_quadprog_l": [137, 215, 216], "larg": [138, 155, 168], "quadprog_l": 138, "convex": 138, "have_feature_quadprog": [138, 215, 216], "sdpt3": 139, "sdp": [139, 140], "sqlp": 139, "sedumi": 140, "lehigh": 140, "yalmip": 141, "platform": 141, "io": [141, 169, 196], "constr_viol_tol": 142, "print_level": 142, "ipopt_user_options_": 142, "ipopt_user_options_3": 142, "nlp_scaling_method": 142, "none": [142, 179, 189, 217, 235], "500": [142, 146, 197], "derivative_test": 142, "vtype": [143, 144, 145, 146, 147, 148, 291, 390], "semi": [143, 145, 146], "cplexmiqp": 143, "cplexmilp": 143, "glkp": 144, "dummi": [144, 194], "NOT": [144, 192, 194], "errnum": [144, 194], "700": [146, 197], "tour": 146, "node009": 146, "195": 146, "273": 146, "1365": 146, "140": 146, "msk_dpar_intpnt_tol_pfea": 149, "lp_alg": 149, "msk_ipar_optim": 149, "msk_ipar_intpnt_max_iter": 149, "gap_tol": 149, "msk_dpar_intpnt_tol_rel_gap": 149, "max_tim": 149, "msk_dpar_optimizer_max_tim": 149, "num_thread": 149, "msk_ipar_intpnt_num_thread": 149, "mosek_user_options_": 149, "mosek_user_options_3": 149, "msk_dpar_intpnt_tol_dfea": 149, "msk_ipar_sim_max_iter": 149, "5000000": 149, "manaul": 149, "symbol": [149, 150], "mosek_symbcon": [149, 215, 216], "stuct": 150, "safer": 150, "mosek_lp_alg": 150, "v7": 150, "msk_optimizer_dual_simplex": 150, "nleqopt": 152, "friend": [152, 153, 154, 155], "nlpopt": 153, "pneopt": 154, "qpopt": 155, "nest": [156, 448, 449], "destin": 156, "recurs": 156, "manner": 156, "valid_field": 156, "invalid": 156, "copy_mod": 156, "pointer": 156, "heirarchi": 156, "t_nested_struct_copi": [156, 215, 216], "TO": 156, "finish": [156, 222, 437], "sp": 157, "default_max_it": 157, "need_jac": 157, "update_fcn": 157, "partial": [157, 159, 161, 164, 189, 292], "tol": [157, 158, 159, 160, 161, 164, 168, 170, 188], "normf": [157, 158, 160, 164], "normdx": 157, "chilimath": [157, 159, 161, 164, 189], "lesson": [157, 159, 161, 164, 189], "advanc": [157, 159, 161, 164, 189], "algebra": [157, 159, 161, 164, 189], "f1": [157, 159, 161, 164], "newton_update_fcn": 157, "jac_approx_fcn": 158, "jj": 158, "approxim": [158, 164], "christi": [158, 160], "patton": [158, 160], "luk": [158, 160], "youtub": [158, 160], "watch": [158, 160], "pjg4yhtgerg": [158, 160], "57": [158, 160, 163], "jac_approx_fcn2": 158, "optimset": [159, 168], "nleqs_cor": [160, 161, 164, 215, 216], "x_update_fcn": 160, "x_update_fcn2": 160, "core_sp": 161, "nleqs_fsolv": [161, 215, 216], "lin_solv": 164, "larger": 164, "decomp": 164, "substitutn": 164, "degre": [164, 260, 261, 262, 263, 273], "reorder": 164, "suitabl": [165, 166, 167, 168], "tini": [165, 167], "sparsiti": [165, 167], "nlp_costfcn": [165, 167, 215, 216], "nlp_hessfcn": [165, 166, 215, 216], "nlp_consfcn": [166, 167, 215, 216], "bfg": 168, "lbfg": 168, "exact": 168, "finit": 168, "sqp": 168, "tol_x": [168, 170], "tol_f": [168, 170], "ipreturncodes__inc_8h_sourc": [169, 196], "cpu": [169, 196], "eval": [169, 196], "aret": 170, "maxit": 170, "3_referencemanu": 170, "knitromatlabrefer": 170, "funccount": 170, "constrviol": 170, "firstorderopt": 170, "measur": 170, "nlps_fmincon": [171, 215, 216], "nlps_ipopt": [171, 215, 216], "nlps_knitro": [171, 215, 216], "eps_prim_inf": 174, "osqp_user_options_3": 174, "polish": 174, "5000": 174, "solver_set": [174, 199], "cx": [176, 177, 178, 181, 182, 301], "px": [176, 177, 178, 301], "regist": [176, 179, 187, 188], "pne_register_callback": [176, 189, 215, 216], "cb": [176, 189], "recent": 176, "x_hat": [176, 189], "predictor": [176, 189, 438], "corrector": [176, 189, 438], "tangent": [176, 181, 184, 185, 186, 189], "default_step": [176, 189], "default_parm": [176, 189], "this_step": 176, "this_parm": 176, "parm": [176, 189], "event": [176, 177, 178, 179, 180, 181, 182, 188, 189, 301], "pne_detect_ev": [176, 180, 215, 216], "care": 176, "efv": [176, 181, 182], "propos": [176, 179], "done_msg": [176, 177, 178, 189], "reason": [176, 236], "warmstart": [176, 189, 438], "warm": [176, 189, 303, 438], "rollback": [176, 179, 188], "retri": 176, "request": [176, 179, 188, 440, 442], "msg": [176, 177, 178, 179, 189, 223, 225, 226, 228, 229], "negat": 176, "my_cback": [176, 187, 189], "nose": [177, 181, 189], "pne_event_nos": [177, 182, 188, 215, 216], "rais": [177, 178], "pne_callback_default": [177, 178, 187, 189, 215, 216], "target_lam": [178, 179], "pne_event_target_lam": [178, 181, 188, 215, 216], "predict": [178, 186, 189], "overshoot": 178, "adjust": [178, 279, 285, 440], "reg_ev": [179, 188], "nefv": 179, "cefv": 179, "critical_ev": 179, "eidx": 179, "interv": [179, 180], "critic": [179, 189], "step_scal": 179, "linearli": 179, "interpol": [179, 238, 438], "estim": 179, "qlim": 179, "event_log": 180, "ev": 180, "search": 180, "detec": 180, "pne_mast": 181, "stop_at": [181, 182, 189], "pne_register_ev": [181, 182, 189, 215, 216], "xp": [184, 185, 186, 189], "zp": [184, 185, 186, 189], "arc": [184, 186, 189], "dp": [184, 185, 186], "distanc": 184, "paramer": [184, 185, 186], "pne_pfcn_natur": [184, 186, 215, 216], "pne_pfcn_pseudo_arc_len": [184, 185, 215, 216], "pne_pfcn_arc_len": [185, 186, 215, 216], "pseudo": [186, 189], "lie": 186, "hyperplan": 186, "orthogon": 186, "correct": [186, 189, 442], "reg_cb": 187, "pne_callback_nos": [187, 215, 216], "pne_callback_target_lam": [187, 215, 216], "my_ev": [188, 189], "default_event_tol": [188, 189], "nleqs_opt": 189, "solve_bas": 189, "stop": 189, "lam_stop": 189, "adapt_step": 189, "toggl": [189, 217], "adapt": 189, "disabl": [189, 458], "adapt_step_damp": 189, "damp": 189, "adapt_step_tol": 189, "adapt_step_w": 189, "step_min": 189, "step_max": 189, "target_lam_tol": 189, "nose_tol": 189, "output_fcn": 189, "increment": [189, 225, 226, 228], "paus": 189, "yfcn": 189, "idx_default": 189, "xname": 189, "yname": 189, "xfcn": 189, "title2": 189, "ne": [189, 238], "lam_hat": 189, "max_lam": 189, "cont_step": 189, "counter": [189, 221, 222, 437], "opposit": 189, "dir_from_jac_eig": 189, "smallest": 189, "eigenvalu": 189, "pnes_callback_default": 189, "f1p": 189, "suboptim": 191, "explan": 192, "gkpk": 194, "400": 197, "glpk_option": [215, 216], "gurobi_opt": [215, 216], "mpopt2nleqopt": [215, 216], "mpopt2nlpopt": [215, 216], "mpopt2pneopt": [215, 216], "mpopt2qpopt": [215, 216], "gurobiv": [215, 216], "mpomver": [215, 216], "osqpver": [215, 216], "miqps_cplex": [215, 216], "miqps_glpk": [215, 216], "miqps_gurobi": [215, 216], "miqps_mosek": [215, 216], "miqps_ot": [215, 216], "pne_detected_ev": [215, 216], "qps_bpmpd": [215, 216], "qps_clp": [215, 216], "qps_cplex": [215, 216], "qps_glpk": [215, 216], "qps_gurobi": [215, 216], "qps_ipopt": [215, 216], "qps_mosek": [215, 216], "qps_osqp": [215, 216], "qps_ot": [215, 216], "nleqs_master_ex1": [215, 216], "nleqs_master_ex2": [215, 216], "nlps_master_ex1": [215, 216], "nlps_master_ex2": [215, 216], "pne_ex1": [215, 216], "qp_ex1": [215, 216], "test_mp_opt_model": [215, 216], "t_miqps_mast": [215, 216], "t_nleqs_mast": [215, 216], "t_nlps_master": [215, 216], "t_om_solve_leq": [215, 216], "t_om_solve_miqp": [215, 216], "t_om_solve_nleq": [215, 216], "t_om_solve_nlp": [215, 216], "t_om_solve_pn": [215, 216], "t_om_solve_qp": [215, 216], "t_opt_model": [215, 216], "t_pnes_mast": [215, 216], "t_qps_master": [215, 216], "have_feature_bpmpd": [215, 216], "have_feature_catchm": [215, 216], "have_feature_cplex": [215, 216], "have_feature_evalc": [215, 216], "have_feature_fmincon_ipm": [215, 216], "have_feature_fmincon": [215, 216], "have_feature_fsolv": [215, 216], "have_feature_glpk": [215, 216], "have_feature_gurobi": [215, 216], "have_feature_intlinprog": [215, 216], "have_feature_ipopt_auxdata": [215, 216], "have_feature_ipopt": [215, 216], "have_feature_isequaln": [215, 216], "have_feature_knitromatlab": [215, 216], "have_feature_ktrlink": [215, 216], "have_feature_mosek": [215, 216], "have_feature_opti_clp": [215, 216], "have_feature_optimopt": [215, 216], "have_feature_osqp": [215, 216], "have_feature_sdpt3": [215, 216], "have_feature_sedumi": [215, 216], "have_feature_yalmip": [215, 216], "rtype": 217, "ver_str": 217, "vstr": 217, "ver_num": 217, "vnum": 217, "rdate": 217, "all_info": 217, "clear_cach": 217, "boolean": [217, 221, 223, 225, 226, 227, 229, 235, 236, 238, 244, 245, 390, 395], "availabl": 217, "clear": 217, "011004": 217, "av": 217, "have_feature_": 217, "disp": [217, 296], "have_feature_matlab": [217, 232, 233], "have_feature_octav": [217, 232, 233], "num_of_test": 221, "t_ok": [221, 222, 223, 225, 228, 229, 230, 232, 233], "t_i": [221, 222, 223, 226, 228, 229, 230, 232, 233], "t_file_match": [221, 222, 225, 226, 228, 229, 230, 232, 233], "t_str_match": [221, 222, 223, 225, 226, 228, 230, 232, 233], "t_skip": [221, 222, 223, 225, 226, 229, 232, 233], "t_end": [221, 223, 225, 226, 227, 228, 229, 232, 233], "pi": [221, 222, 225, 226, 228, 232], "statist": 222, "t_begin": [222, 223, 225, 226, 227, 228, 229, 232, 233], "got_fnam": 223, "exp_fnam": 223, "rep": [223, 229], "del_got_fnam": 223, "ok": [223, 225, 226, 229, 232], "compar": [223, 229], "regexprep": [223, 229], "strrep": [223, 229], "eol": [223, 229], "test_generated_output": [223, 229], "expected_output": [223, 229], "mytest": [223, 229], "got": [225, 229], "prec": 225, "nan": 225, "cond": 226, "expr": 226, "test_nam": 227, "t_loadcas": 227, "t_jacobian": 227, "t_hessian": 227, "strcmp": 229, "fileread": 229, "among": 232, "familiar": 232, "clone": 232, "repositori": 232, "mptestxxx": 232, "xxx": 232, "kept": 232, "denot": [232, 261, 265, 271, 273, 281, 282], "test_mptest": [232, 233], "resembl": 232, "t_test_fcn": [232, 233], "t_have_featur": [232, 233], "write": 232, "mptest_ex1": 232, "test_everything_ex1": 232, "09": 232, "mptestver": [232, 233], "guidelin": 232, "report": 232, "claus": 232, "bsd": 232, "agenc": 232, "task_pf_legaci": [234, 456], "task_cpf_legaci": [234, 456], "task_opf_legaci": [234, 243, 456], "task_shared_legaci": [234, 439, 441, 443, 456], "dme_branch_opf": [234, 456], "dme_bus_opf": [234, 456], "dme_gen_opf": [234, 456], "dme_load_cpf": [234, 456], "dme_load_opf": [234, 456], "dme_shunt_cpf": [234, 456], "dme_shunt": [234, 285, 286, 456], "dme_shunt_opf": [234, 456], "dm_converter_mpc2_legaci": [234, 441, 456], "dmce_branch_mpc2": [234, 456], "dmce_bus_mpc2": [234, 456], "dmce_load_mpc2": [234, 444, 456], "dmce_shunt_mpc2": [234, 456], "net_model_ac": [234, 392, 393, 456], "net_model_acc": [234, 456], "nme_branch_ac": [234, 398, 399, 456], "nme_branch_acc": [234, 456], "nme_branch_acp": [234, 456], "nme_branch_dc": [234, 456], "nme_bus_acc": [234, 456], "nme_bus_dc": [234, 456], "nme_gen_ac": [234, 416, 417, 456], "nme_gen_acc": [234, 456], "nme_gen_dc": [234, 456], "nme_load_ac": [234, 428, 429, 456], "nme_load_acc": [234, 456], "nme_load_acp": [234, 456], "nme_load_dc": [234, 456], "nme_shunt": [234, 432, 435, 456], "nme_shunt_ac": [234, 433, 434, 456], "nme_shunt_acc": [234, 456], "nme_shunt_acp": [234, 456], "nme_shunt_dc": [234, 456], "math_model_pf": [234, 319, 324, 456], "math_model_pf_ac": [234, 320, 321, 322, 323, 456], "math_model_pf_acci": [234, 456], "math_model_pf_acc": [234, 456], "math_model_pf_acpi": [234, 456], "math_model_pf_acp": [234, 456], "math_model_pf_dc": [234, 456], "math_model_cpf_acc": [234, 299, 456], "math_model_cpf_acci": [234, 456], "math_model_cpf_acp": [234, 302, 456], "math_model_cpf_acpi": [234, 456], "math_model_opf": [234, 297, 305, 316, 456], "math_model_opf_ac": [234, 306, 311, 456], "math_model_opf_acci": [234, 308, 456], "math_model_opf_acci_legaci": [234, 456], "math_model_opf_accs_legaci": [234, 456], "math_model_opf_acpi": [234, 313, 456], "math_model_opf_acpi_legaci": [234, 456], "math_model_opf_acps_legaci": [234, 456], "math_model_opf_dc": [234, 317, 456], "math_model_opf_dc_legaci": [234, 456], "mm_shared_pfcpf": [234, 297, 328, 336, 456], "mm_shared_pfcpf_ac": [234, 330, 333, 456], "mm_shared_pfcpf_ac_i": [234, 331, 334, 456], "mm_shared_pfcpf_acc": [234, 300, 321, 331, 456], "mm_shared_pfcpf_acci": [234, 299, 320, 456], "mm_shared_pfcpf_acp": [234, 303, 323, 334, 456], "mm_shared_pfcpf_acpi": [234, 302, 322, 456], "mm_shared_pfcpf_dc": [234, 324, 456], "mm_shared_opf_legaci": [234, 308, 310, 313, 315, 317, 441, 456], "mme_branch_pf_ac": [234, 456], "mme_branch_pf_dc": [234, 456], "mme_branch_opf": [234, 339, 342, 456], "mme_branch_opf_ac": [234, 340, 341, 456], "mme_branch_opf_acc": [234, 456], "mme_branch_opf_acp": [234, 456], "mme_branch_opf_dc": [234, 456], "mme_bu": [234, 349, 352, 353, 354, 456], "mme_bus_pf_ac": [234, 456], "mme_bus_pf_dc": [234, 456], "mme_bus_opf_ac": [234, 350, 351, 456], "mme_bus_opf_acc": [234, 456], "mme_bus_opf_acp": [234, 456], "mme_bus_opf_dc": [234, 456], "mme_gen_pf_ac": [234, 456], "mme_gen_pf_dc": [234, 456], "mme_gen_opf": [234, 366, 367, 456], "mme_gen_opf_ac": [234, 456], "mme_gen_opf_dc": [234, 456], "mme_load": [234, 380, 381, 456], "mme_load_pf_ac": [234, 379, 456], "mme_load_pf_dc": [234, 456], "mme_load_cpf": [234, 456], "mme_shunt": [234, 386, 387, 456], "mme_shunt_pf_ac": [234, 385, 456], "mme_shunt_pf_dc": [234, 456], "mme_shunt_cpf": [234, 456], "mp_table_subclass": [234, 236, 237, 456], "mapped_arrai": [234, 289, 456], "belong": [234, 237, 329], "dmce_reserve_gen_mpc2": [234, 447, 456], "dmce_reserve_zone_mpc2": [234, 447, 456], "dme_reserve_gen": [234, 447, 456], "dme_reserve_zon": [234, 447, 456], "mme_reserve_gen": [234, 447, 456], "mme_reserve_zon": [234, 447, 456], "dmce_bus3p_mpc2": [234, 445, 456], "dmce_gen3p_mpc2": [234, 445, 456], "dmce_load3p_mpc2": [234, 445, 456], "dmce_line3p_mpc2": [234, 445, 456], "dmce_xfmr3p_mpc2": [234, 445, 456], "dmce_buslink_mpc2": [234, 445, 456], "dme_bus3p": [234, 264, 445, 456], "dme_gen3p": [234, 270, 445, 456], "dme_load3p": [234, 278, 445, 456], "dme_line3p": [234, 275, 445, 456], "dme_xfmr3p": [234, 288, 445, 456], "dme_buslink": [234, 267, 445, 456], "dme_bus3p_opf": [234, 445, 456], "dme_gen3p_opf": [234, 445, 456], "dme_load3p_opf": [234, 445, 456], "dme_line3p_opf": [234, 445, 456], "dme_xfmr3p_opf": [234, 445, 456], "dme_buslink_opf": [234, 445, 456], "nme_bus3p": [234, 403, 404, 456], "nme_bus3p_acc": [234, 445, 456], "nme_bus3p_acp": [234, 445, 456], "nme_gen3p": [234, 413, 414, 456], "nme_gen3p_acc": [234, 445, 456], "nme_gen3p_acp": [234, 445, 456], "nme_load3p": [234, 445, 456], "nme_line3p": [234, 445, 456], "nme_xfmr3p": [234, 445, 456], "nme_buslink": [234, 409, 410, 456], "nme_buslink_acc": [234, 445, 456], "nme_buslink_acp": [234, 445, 456], "mme_bus3p": [234, 347, 348, 445, 456], "mme_gen3p": [234, 364, 445, 456], "mme_line3p": [234, 377, 445, 456], "mme_xfmr3p": [234, 389, 445, 456], "mme_buslink": [234, 356, 359, 456], "mme_buslink_pf_ac": [234, 360, 361, 456], "mme_buslink_pf_acc": [234, 445, 456], "mme_buslink_pf_acp": [234, 445, 456], "mme_bus3p_opf_acc": [234, 445, 456], "mme_bus3p_opf_acp": [234, 445, 456], "mme_gen3p_opf": [234, 445, 456], "mme_line3p_opf": [234, 445, 456], "mme_xfmr3p_opf": [234, 445, 456], "mme_buslink_opf": [234, 357, 358, 456], "mme_buslink_opf_acc": [234, 445, 456], "mme_buslink_opf_acp": [234, 445, 456], "enumer": 235, "is_valid": 235, "seal": [235, 449], "poly_n": 236, "pwl_n": 236, "pwl_qty": 236, "pwl_cost": 236, "dot": [236, 448, 449], "var_nam": [236, 245, 448, 449], "subsref": [236, 237, 245, 296, 448, 449], "subsasgn": [236, 237, 296, 448, 449], "deleg": [236, 292, 449], "readabl": [236, 291, 293, 294, 295, 390], "c_0": 236, "c_1": 236, "c_n": 236, "c_j": 236, "f_1": 236, "f_2": 236, "x_n": 236, "f_n": 236, "quantii": 236, "x_j": 236, "piecwis": 236, "f_j": 236, "pu_bas": [236, 237], "polynmi": 236, "i0": [236, 296, 365, 371], "i2": [236, 365, 371], "x_scale": 236, "ccm": 236, "sum_": 236, "f_i": 236, "x_i": 236, "eval_poly_fcn": 236, "diff_poly_fcn": 236, "cumbersom": 237, "pp_flag": [238, 240], "pp_section_label": 238, "pp_section_list": [238, 240], "pp_have_sect": [238, 244], "pp_section": 238, "pp_get_head": [238, 244], "pp_get_headers_cnt": 238, "pp_get_headers_ext": 238, "pp_data": [238, 244], "set_bus_v_lims_via_vg": 238, "new_dm": [238, 244], "retun": [238, 241, 244, 296, 297, 390, 395, 448], "elm": 238, "s0": 238, "s1": 238, "suppress": 238, "blank_lin": 238, "blank": 238, "pp_get_headers_oth": [238, 240, 283], "use_vg": 238, "fraction": 238, "shunt": [239, 258, 260, 274, 284, 285, 286, 384, 385, 386, 387, 431, 432, 433, 434, 435], "format_tag": [241, 242], "export": [241, 242, 244, 245, 279, 285, 325, 439, 441, 443], "init_export": [241, 242], "new_dmc": 241, "prepar": [241, 244, 338], "fname_out": 241, "classic": 242, "legacy_user_mod_input": 243, "legacy_user_nln_constraint": 243, "fparm": 243, "h1": 243, "cw": 243, "zl": 243, "zu": 243, "user_constraint": 243, "undefin": 244, "table_exist": 244, "dm_converter_el": 244, "pp_row": 244, "pp_get_foot": 244, "footer": 244, "pp_have_section_cnt": 244, "pp_data_cnt": [244, 260, 262], "pp_have_section_ext": [244, 262], "pp_data_ext": [244, 262, 265], "pp_get_title_det": 244, "pp_get_footers_det": [244, 268, 276, 281, 284], "nc": [244, 245], "sole": 244, "subclass_var1": 244, "subclass_var2": 244, "pp_have_section_oth": [244, 283], "pp_data_oth": [244, 283], "newlin": 244, "data_sub": [245, 256, 257], "get_import_s": [245, 255, 256, 258], "get_export_s": [245, 255, 256, 258], "get_input_table_valu": 245, "import_col": 245, "export_col": 245, "bus_status_import": [247, 248], "bus_name_import": 248, "bus_name_export": 248, "buslink": [249, 266, 267, 355, 356, 357, 358, 359, 360, 361, 408, 409, 410, 445], "pwl1": 251, "start_cost_import": 251, "start_cost_export": 251, "gen_cost_import": 251, "p_or_q": 251, "gen_cost_export": 251, "gencost0": 251, "create_line_construction_t": [253, 274], "scale_factor_fcn": 255, "zip_sf": 255, "sys_wide_zip_load": [255, 444], "import_cost": 256, "import_qti": 256, "import_ramp": 256, "import_req": 257, "import_zon": 257, "resist": [260, 274, 287], "reactanc": [260, 274, 287], "g_fr": 260, "conduct": [260, 284], "b_fr": 260, "g_to": 260, "b_to": 260, "sm_ub_a": 260, "long": 260, "rate": [260, 281], "sm_ub_b": 260, "sm_ub_c": 260, "emerg": 260, "cm_ub_a": 260, "cm_ub_b": 260, "cm_ub_c": 260, "vad_lb": 260, "vad_ub": 260, "tm": 260, "nomin": [260, 276, 284], "ratio": 260, "ta": 260, "shift": 260, "pl_fr": 260, "ql_fr": 260, "pl_to": 260, "ql_to": 260, "xformer": 260, "radian": [260, 262, 263], "rate_a": 260, "mu_flow_fr_ub": 261, "mu_flow_to_ub": 261, "mu_vad_lb": 261, "mu_vad_ub": 261, "usd": [261, 265, 268, 271, 273, 281, 282], "pp_get_title_lim": [261, 283], "base_kv": [262, 263, 287], "vm_lb": 262, "vm_ub": 262, "va_start": 262, "set_bus_type_ref": 262, "set_bus_type_pq": 262, "vm1_start": 263, "vm2_start": 263, "vm3_start": 263, "va1_start": 263, "va2_start": 263, "va3_start": 263, "lam_p": [265, 453, 454], "lam_q": 265, "mu_vm_lb": 265, "mu_vm_ub": 265, "pg1_start": [266, 269], "pg2_start": [266, 269], "pg3_start": [266, 269], "qg1_start": [266, 269], "qg2_start": [266, 269], "qg3_start": [266, 269], "pg_lb": [268, 390], "pg_ub": [268, 390], "qg_lb": 268, "qg_ub": 268, "startup_cost_cold": 268, "cold": 268, "pc1": 268, "pc2": 268, "qc1_lb": 268, "qc1_ub": 268, "qc2_lb": 268, "qc2_ub": 268, "bus_on": [268, 269], "pg_start": 268, "qg_start": 268, "violated_q_lim": 268, "isload": 268, "vm1_setpoint": 269, "vm2_setpoint": 269, "vm3_setpoint": 269, "cost_pg": [271, 273], "cost_qg": 271, "mu_pg_lb": 271, "mu_pg_ub": [271, 281], "mu_qg_lb": 271, "mu_qg_ub": 271, "max_pwl_gencost": 271, "fr": 272, "pl1_fr": [274, 287], "ql1_fr": [274, 287], "pl2_fr": [274, 287], "ql2_fr": [274, 287], "pl3_fr": [274, 287], "ql3_fr": [274, 287], "pl1_to": [274, 287], "ql1_to": [274, 287], "pl2_to": [274, 287], "ql2_to": [274, 287], "pl3_to": [274, 287], "ql3_to": [274, 287], "lc_tab": 274, "symmetr": 274, "3x3": 274, "yc": 274, "lc_table_var_nam": 274, "vec2symmat": 274, "symmat2vec": 274, "pd": 276, "p_p": 276, "qd": 276, "q_p": 276, "pd_i": 276, "p_i": 276, "qd_i": 276, "q_i": 276, "pd_z": 276, "p_z": 276, "qd_z": 276, "q_z": 276, "_p": 276, "_z": 276, "pf1": 277, "pf2": 277, "pf3": 277, "dmb": [279, 285], "dmt": [279, 285], "qty": 281, "ramp10": 281, "minut": 281, "alloc": [281, 328, 336], "r_lb": 281, "r_ub": 281, "total_cost": 281, "prc": [281, 282], "req": 282, "pp_set_tols_lim": 283, "pp_rows_oth": 283, "pp_get_footers_oth": 283, "pp_rows_lim": 283, "pp_get_footers_lim": 283, "pp_data_lim": 283, "g_": [284, 293], "b_": 284, "absorb": 284, "class_list": 289, "aspect": [290, 447], "xt": 290, "form_nam": [291, 293, 294, 295, 297, 299, 300, 302, 303, 307, 309, 312, 314, 316, 320, 321, 322, 323, 324], "form_tag": [291, 293, 294, 295, 297, 299, 300, 302, 303, 307, 309, 312, 314, 316, 320, 321, 322, 323, 324], "model_param": [291, 292, 295], "model_vvar": [291, 293, 294, 295], "model_zvar": [291, 292, 295], "get_param": 291, "find_form_class": 291, "acc": [291, 293], "acp": [291, 294, 297], "properi": 291, "p1": 291, "p2": 291, "pn": 291, "pa": 291, "namea": 291, "pb": 291, "nameb": 291, "canon": 291, "form_class": 291, "netork": 291, "longest": 291, "compoent": 292, "params_ncol": [292, 295], "inln_hess": 292, "snln_hess": 292, "port_inj_curr": [292, 293, 294, 391], "port_inj_pow": [292, 293, 294, 295, 391], "port_inj_current_hess": [292, 293, 294, 391], "port_inj_power_hess": [292, 293, 294, 391], "port_inj_current_jac": [292, 293, 294], "port_inj_current_hess_v": [292, 293, 294], "port_inj_current_hess_vz": [292, 293, 294], "port_inj_power_jac": [292, 293, 294], "port_inj_power_hess_v": [292, 293, 294], "port_inj_power_hess_vz": [292, 293, 294], "port_apparent_power_lim_fcn": 292, "squar": [292, 293], "port_active_power_lim_fcn": 292, "port_active_power2_lim_fcn": 292, "port_current_lim_fcn": 292, "port_apparent_power_lim_hess": 292, "port_active_power_lim_hess": 292, "port_active_power2_lim_hess": 292, "port_current_lim_hess": 292, "aux_data_va_vm": [292, 293, 294], "param_ncol": [292, 295], "x_": [292, 293, 294, 391, 395, 427], "sysx": [292, 293, 294, 295, 391, 395, 427], "iv1": 292, "iv2": 292, "izr": 292, "izi": 292, "gi_": 292, "formula": 292, "sv1": 292, "sv2": 292, "szr": 292, "szi": 292, "mulipli": [292, 293, 391], "v_": [292, 293, 294, 328, 395], "invdiagv": [292, 293, 294], "diagslincj": [292, 293, 294], "z_": [292, 293, 294, 328, 395], "diaginv": [292, 293, 294], "dlamj": [292, 293, 294], "diagv": [292, 293, 294], "diagvi": [292, 293, 294], "diagilincj": [292, 293, 294], "hmax": 292, "h_": 292, "repesent": [293, 294], "va_fcn": [293, 357], "va_hess": [293, 357], "vm2_fcn": [293, 357], "vm2_hess": [293, 357], "iu": 293, "iw": 293, "iuu": 293, "iuw": 293, "iww": 293, "iuzr": 293, "iuzi": 293, "iwzr": 293, "iwzi": 293, "su": 293, "sw": 293, "suu": 293, "suw": 293, "sww": 293, "suzr": 293, "suzi": 293, "swzr": 293, "swzi": 293, "connvert": 293, "va_lb": 293, "va_ub": 293, "vm2_lb": 293, "vm2_ub": 293, "iva": 294, "ivm": 294, "ivava": 294, "ivavm": 294, "ivmvm": 294, "ivazr": 294, "ivazi": 294, "ivmzr": 294, "ivmzi": 294, "sva": 294, "svm": 294, "svava": 294, "svavm": 294, "svmvm": 294, "svazr": 294, "svazi": 294, "svmzr": 294, "svmzi": 294, "ma": 296, "width": 296, "height": 296, "depth": 296, "treat": 296, "add_el": 296, "color": 296, "weight": 296, "delete_el": 296, "has_nam": 296, "add_nam": 296, "name2idx": 296, "new_obj": 296, "num_el": 296, "overwrit": 296, "corrspond": 296, "aux_data": 297, "task_nam": [297, 304, 318], "add_aux_data": 297, "build_base_aux_data": 297, "add_system_var": [297, 304, 318], "add_system_constraint": [297, 308, 310, 313, 315, 317], "add_node_balance_constraint": [297, 299, 300, 302, 303, 307, 309, 312, 314, 316, 320, 321, 322, 323, 324], "add_system_cost": [297, 308, 310, 313, 315, 317], "update_nm_var": 297, "build_aux_data": [297, 304, 327, 331, 334, 335, 336], "mmx": [297, 306, 311, 316, 330, 333, 336], "nm_var": 297, "var_map": 297, "nm_var_typ": 297, "nm_i1": 297, "nm_in": 297, "nm_idx": 297, "mm_i1": 297, "mm_in": 297, "mm_idx": 297, "convert_x_m2n": [297, 306, 311, 316, 330, 333, 336], "math_model_cpf": [298, 301], "event_vlim": 301, "callback_vlim": 301, "expand_z_warmstart": 303, "solve_opts_warmstart": 303, "interior_va": [304, 306], "nodal_current_balance_fcn": 305, "nodal_power_balance_fcn": 305, "nodal_current_balance_hess": 305, "nodal_power_balance_hess": 305, "node_power_balance_pric": [307, 309, 312, 314], "formluat": [308, 310, 313, 315, 317], "legacy_user_var_nam": [308, 310, 313, 315, 317], "gs_x_updat": 323, "zg_x_updat": 323, "fd_jac_approx": 323, "fdpf_b_matrix_model": 323, "accordingli": 325, "def_set_types_legaci": 326, "init_set_types_legaci": 326, "get_mpc": 326, "build_legaci": 326, "add_legacy_user_var": 326, "add_legacy_user_cost": 326, "add_legacy_user_constraint": 326, "add_legacy_user_constraints_ac": 326, "add_legacy_cost": 326, "eval_legacy_cost": 326, "params_legacy_cost": 326, "add_system_varset_pf": 328, "vvar": 328, "typ": 328, "update_z": [328, 336], "sinj": 328, "know": 328, "formuat": [329, 330, 331, 332, 333, 334, 335], "build_aux_data_i": 329, "only_v": [330, 333, 336], "pf_convert": [330, 333, 336], "add_system_vars_pf": [331, 332, 334, 335, 336], "node_balance_equ": [331, 332, 334, 335], "fdpf": 335, "ang_diff_param": 338, "ang_diff_pric": [338, 340], "interior_vm": 349, "avg": 349, "clip": 349, "voltage_constraint": [359, 408], "pf_va_fcn": 360, "pf_vm_fcn": 360, "poly_p": 365, "poly_q": 365, "actv": [365, 371], "bulid": [366, 367], "pq_capability_constraint": 366, "makeapq": 366, "has_pq_cap": 366, "upper_low": 366, "haspqcap": 366, "disp_load_constant_pf_constraint": 366, "makeavl": 366, "the_np": 390, "the_nz": 390, "add_nod": [390, 395], "add_stat": [390, 395], "stack_matrix_param": 390, "stack_vector_param": 390, "add_port": 390, "set_type_label": 390, "get_node_idx": 390, "get_port_idx": 390, "get_state_idx": 390, "ensure_ref_nod": 390, "vnotz": 390, "unus": 390, "vr0": 390, "vrmin": 390, "vrmax": 390, "zij_lb": 390, "zij_ub": 390, "nidx": [390, 395], "pidx": 390, "sidx": 390, "skip_ensure_ref": 390, "ntv": [390, 395, 402], "by_elm": 390, "implicitli": 391, "port_inj_nln": 391, "port_inj_nln_hess": 391, "nodal_complex_current_bal": 391, "nodal_complex_power_bal": 391, "nodal_complex_current_balance_hess": 391, "nodal_complex_power_balance_hess": 391, "get_va": 391, "gv1": 391, "gv2": 391, "gzr": 391, "gzi": 391, "snln_": 391, "inln_": 391, "kcl": 391, "initial_voltage_angl": [392, 393], "math_model_el": 395, "get_nv_": 395, "x2vz": 395, "node_indic": 395, "incidence_matrix": 395, "nv_": 395, "vi_": 395, "cd": 395, "ang_diff_fcn": 398, "aang": 398, "lang": 398, "uang": 398, "ang_diff_hess": 398, "vr3": 403, "vi3": 403, "plink": 408, "qlink": 408, "vec2symmat_stack": 424, "port_inj_current_nln": 427, "port_inj_power_nln": 427, "interact": 437, "mm_opt": 437, "i_dm": 437, "i_nm": 437, "i_mm": 437, "didn": 437, "run_pr": [437, 438, 439, 440, 441, 442, 443, 444], "run_post": [437, 439, 441, 443], "print_soln_head": [437, 440], "dm_converter_cr": 437, "data_model_cr": 437, "data_model_build": [437, 438], "data_model_build_pr": 437, "data_model_build_post": [437, 440, 441], "network_model_cr": 437, "network_model_build": [437, 438], "network_model_build_pr": 437, "network_model_build_post": [437, 442], "network_model_upd": [437, 438], "math_model_cr": 437, "math_model_build": 437, "math_model_opt": [437, 438], "propag": 437, "mpoopt": 437, "handel": 437, "dm_converter_build": 437, "restart": 438, "superclass": [438, 440, 441, 442], "clam": 438, "plam": 438, "cv": 438, "current_bal": [438, 440, 442], "legacy_post_run": [439, 441, 443], "post": [439, 441, 443], "run_pre_legaci": [439, 441, 443, 444], "printout": 440, "variat": 441, "opf_model": 441, "opf_execut": 441, "dcopf_solv": 441, "nlpopf_solv": 441, "ref0": 442, "va_ref0": 442, "fixed_q_idx": 442, "fixed_q_qti": 442, "enforce_q_lim": 442, "move": 444, "optimi": [445, 446], "reserve_gen": 447, "reserve_zon": 447, "var1": [448, 451], "var2": [448, 451], "name1": 448, "name2": 448, "rownam": 448, "dimensionnam": 448, "focus": 448, "join": 448, "istabl": [448, 449], "concaten": [448, 449], "vertcat": [448, 449], "unfortun": 448, "realli": 448, "last_var": 448, "last_row": 448, "sub_t": 448, "jn": 448, "var_": 448, "t1": [448, 449], "t2": [448, 449], "extract_named_arg": 448, "row_nam": 448, "dim_nam": 448, "act": 449, "isn": 449, "cannot": 449, "fine": 449, "php": 449, "65037": 449, "emul": 449, "get_tabl": 449, "set_tabl": 449, "nativ": 451, "tablici": 451, "table_class": 451, "print_fnam": [452, 453, 454, 455], "soln_fnam": [452, 453, 454, 455], "case9target": 452, "miscellan": 456, "decrib": 458, "runopf": 458, "underli": 458, "bypass": 458, "use_legacy_cor": 458, "Or": 458, "session": 458, "mp_core": 458, "mainli": 458, "mode": 458}, "objects": {"": [[41, 0, 1, "", "apply_profile"], [107, 0, 1, "", "convert_lin_constraint"], [108, 0, 1, "", "convert_lin_constraint_multipliers"], [109, 0, 1, "", "cplex_options"], [43, 0, 1, "", "ex_case3a"], [44, 0, 1, "", "ex_case3b"], [45, 0, 1, "", "ex_contab"], [46, 0, 1, "", "ex_load_profile"], [47, 0, 1, "", "ex_storage"], [48, 0, 1, "", "ex_transmat"], [49, 0, 1, "", "ex_wind"], [50, 0, 1, "", "ex_wind_profile"], [51, 0, 1, "", "ex_wind_profile_d"], [52, 0, 1, "", "ex_wind_uc"], [53, 0, 1, "", "ex_xgd"], [54, 0, 1, "", "ex_xgd_ramp"], [55, 0, 1, "", "ex_xgd_res"], [56, 0, 1, "", "ex_xgd_uc"], [57, 0, 1, "", "filter_ramp_transitions"], [13, 0, 1, "", "generate_autodoc_stubs"], [14, 0, 1, "", "generate_matpower_autodoc"], [15, 0, 1, "", "generate_source_symlinks"], [110, 0, 1, "", "glpk_options"], [111, 0, 1, "", "gurobi_options"], [217, 0, 1, "", "have_feature"], [113, 0, 1, "", "have_feature_bpmpd"], [114, 0, 1, "", "have_feature_catchme"], [115, 0, 1, "", "have_feature_clp"], [116, 0, 1, "", "have_feature_cplex"], [117, 0, 1, "", "have_feature_evalc"], [118, 0, 1, "", "have_feature_fmincon"], [119, 0, 1, "", "have_feature_fmincon_ipm"], [120, 0, 1, "", "have_feature_fsolve"], [121, 0, 1, "", "have_feature_glpk"], [122, 0, 1, "", "have_feature_gurobi"], [123, 0, 1, "", "have_feature_intlinprog"], [124, 0, 1, "", "have_feature_ipopt"], [125, 0, 1, "", "have_feature_ipopt_auxdata"], [126, 0, 1, "", "have_feature_isequaln"], [127, 0, 1, "", "have_feature_knitro"], [128, 0, 1, "", "have_feature_knitromatlab"], [129, 0, 1, "", "have_feature_ktrlink"], [130, 0, 1, "", "have_feature_linprog"], [131, 0, 1, "", "have_feature_linprog_ds"], [21, 0, 1, "", "have_feature_lu_vec"], [218, 0, 1, "", "have_feature_matlab"], [132, 0, 1, "", "have_feature_mosek"], [219, 0, 1, "", "have_feature_octave"], [133, 0, 1, "", "have_feature_opti_clp"], [134, 0, 1, "", "have_feature_optim"], [135, 0, 1, "", "have_feature_optimoptions"], [136, 0, 1, "", "have_feature_osqp"], [22, 0, 1, "", "have_feature_pardiso"], [23, 0, 1, "", "have_feature_pardiso_legacy"], [24, 0, 1, "", "have_feature_pardiso_object"], [137, 0, 1, "", "have_feature_quadprog"], [138, 0, 1, "", "have_feature_quadprog_ls"], [139, 0, 1, "", "have_feature_sdpt3"], [140, 0, 1, "", "have_feature_sedumi"], [141, 0, 1, "", "have_feature_yalmip"], [59, 0, 1, "", "idx_profile"], [142, 0, 1, "", "ipopt_options"], [64, 0, 1, "", "md_init"], [26, 0, 1, "", "mips_example1"], [27, 0, 1, "", "mips_example2"], [143, 0, 1, "", "miqps_cplex"], [144, 0, 1, "", "miqps_glpk"], [145, 0, 1, "", "miqps_gurobi"], [146, 0, 1, "", "miqps_master"], [147, 0, 1, "", "miqps_mosek"], [148, 0, 1, "", "miqps_ot"], [149, 0, 1, "", "mosek_options"], [150, 0, 1, "", "mosek_symbcon"], [66, 0, 1, "", "most_ex1_ed"], [67, 0, 1, "", "most_ex2_dcopf"], [68, 0, 1, "", "most_ex3_dcopf_w_uc"], [69, 0, 1, "", "most_ex4_dcopf_ss"], [70, 0, 1, "", "most_ex5_mpopf"], [71, 0, 1, "", "most_ex6_uc"], [72, 0, 1, "", "most_ex7_suc"], [73, 0, 1, "", "most_summary"], [105, 1, 1, "", "mp_idx_manager"], [448, 1, 1, "", "mp_table"], [451, 0, 1, "", "mp_table_class"], [449, 1, 1, "", "mp_table_subclass"], [75, 0, 1, "", "mpoption_info_most"], [156, 0, 1, "", "nested_struct_copy"], [157, 0, 1, "", "nleqs_core"], [158, 0, 1, "", "nleqs_fd_newton"], [159, 0, 1, "", "nleqs_fsolve"], [160, 0, 1, "", "nleqs_gauss_seidel"], [161, 0, 1, "", "nleqs_master"], [162, 0, 1, "", "nleqs_master_ex1"], [163, 0, 1, "", "nleqs_master_ex2"], [164, 0, 1, "", "nleqs_newton"], [165, 0, 1, "", "nlp_consfcn"], [166, 0, 1, "", "nlp_costfcn"], [167, 0, 1, "", "nlp_hessfcn"], [168, 0, 1, "", "nlps_fmincon"], [169, 0, 1, "", "nlps_ipopt"], [170, 0, 1, "", "nlps_knitro"], [171, 0, 1, "", "nlps_master"], [172, 0, 1, "", "nlps_master_ex1"], [173, 0, 1, "", "nlps_master_ex2"], [106, 1, 1, "", "opt_model"], [174, 0, 1, "", "osqp_options"], [76, 0, 1, "", "plot_gen"], [77, 0, 1, "", "plot_storage"], [78, 0, 1, "", "plot_uc"], [79, 0, 1, "", "plot_uc_data"], [176, 0, 1, "", "pne_callback_default"], [177, 0, 1, "", "pne_callback_nose"], [178, 0, 1, "", "pne_callback_target_lam"], [179, 0, 1, "", "pne_detect_events"], [180, 0, 1, "", "pne_detected_event"], [181, 0, 1, "", "pne_event_nose"], [182, 0, 1, "", "pne_event_target_lam"], [183, 0, 1, "", "pne_ex1"], [184, 0, 1, "", "pne_pfcn_arc_len"], [185, 0, 1, "", "pne_pfcn_natural"], [186, 0, 1, "", "pne_pfcn_pseudo_arc_len"], [187, 0, 1, "", "pne_register_callbacks"], [188, 0, 1, "", "pne_register_events"], [189, 0, 1, "", "pnes_master"], [190, 0, 1, "", "qp_ex1"], [191, 0, 1, "", "qps_bpmpd"], [192, 0, 1, "", "qps_clp"], [193, 0, 1, "", "qps_cplex"], [194, 0, 1, "", "qps_glpk"], [195, 0, 1, "", "qps_gurobi"], [196, 0, 1, "", "qps_ipopt"], [197, 0, 1, "", "qps_master"], [30, 0, 1, "", "qps_mips"], [198, 0, 1, "", "qps_mosek"], [199, 0, 1, "", "qps_osqp"], [200, 0, 1, "", "qps_ot"], [452, 0, 1, "", "run_cpf"], [453, 0, 1, "", "run_mp"], [454, 0, 1, "", "run_opf"], [455, 0, 1, "", "run_pf"], [221, 0, 1, "", "t_begin"], [80, 0, 1, "", "t_case30_most"], [81, 0, 1, "", "t_case3_most"], [82, 0, 1, "", "t_case_tlmp"], [83, 0, 1, "", "t_case_tlmp_storage"], [222, 0, 1, "", "t_end"], [223, 0, 1, "", "t_file_match"], [224, 0, 1, "", "t_have_feature"], [225, 0, 1, "", "t_is"], [31, 0, 1, "", "t_mips"], [32, 0, 1, "", "t_mips_pardiso"], [201, 0, 1, "", "t_miqps_master"], [84, 0, 1, "", "t_most_30b_1_1_0"], [85, 0, 1, "", "t_most_30b_1_1_0_uc"], [86, 0, 1, "", "t_most_30b_1_1_17"], [87, 0, 1, "", "t_most_30b_3_1_0"], [88, 0, 1, "", "t_most_30b_3_1_17"], [89, 0, 1, "", "t_most_3b_1_1_0"], [90, 0, 1, "", "t_most_3b_1_1_2"], [91, 0, 1, "", "t_most_3b_3_1_0"], [92, 0, 1, "", "t_most_3b_3_1_2"], [93, 0, 1, "", "t_most_fixed_res"], [94, 0, 1, "", "t_most_mpopf"], [95, 0, 1, "", "t_most_sp"], [96, 0, 1, "", "t_most_spuc"], [97, 0, 1, "", "t_most_suc"], [98, 0, 1, "", "t_most_tlmp"], [99, 0, 1, "", "t_most_uc"], [100, 0, 1, "", "t_most_w_ds"], [33, 0, 1, "", "t_mplinsolve"], [202, 0, 1, "", "t_nested_struct_copy"], [203, 0, 1, "", "t_nleqs_master"], [204, 0, 1, "", "t_nlps_master"], [226, 0, 1, "", "t_ok"], [205, 0, 1, "", "t_om_solve_leqs"], [206, 0, 1, "", "t_om_solve_miqps"], [207, 0, 1, "", "t_om_solve_nleqs"], [208, 0, 1, "", "t_om_solve_nlps"], [209, 0, 1, "", "t_om_solve_pne"], [210, 0, 1, "", "t_om_solve_qps"], [211, 0, 1, "", "t_opt_model"], [212, 0, 1, "", "t_pnes_master"], [213, 0, 1, "", "t_qps_master"], [34, 0, 1, "", "t_qps_mips"], [227, 0, 1, "", "t_run_tests"], [228, 0, 1, "", "t_skip"], [229, 0, 1, "", "t_str_match"], [230, 0, 1, "", "t_test_fcns"], [35, 0, 1, "", "test_mips"], [101, 0, 1, "", "test_most"], [214, 0, 1, "", "test_mp_opt_model"], [231, 0, 1, "", "test_mptest"]], "mips": [[25, 0, 1, "", "mips"]], "most": [[65, 0, 1, "", "most"]], "mp": [[235, 1, 1, "", "NODE_TYPE"], [236, 1, 1, "", "cost_table"], [237, 1, 1, "", "cost_table_utils"], [238, 1, 1, "", "data_model"], [239, 1, 1, "", "data_model_cpf"], [240, 1, 1, "", "data_model_opf"], [241, 1, 1, "", "dm_converter"], [242, 1, 1, "", "dm_converter_mpc2"], [243, 1, 1, "", "dm_converter_mpc2_legacy"], [244, 1, 1, "", "dm_element"], [245, 1, 1, "", "dmc_element"], [246, 1, 1, "", "dmce_branch_mpc2"], [247, 1, 1, "", "dmce_bus3p_mpc2"], [248, 1, 1, "", "dmce_bus_mpc2"], [249, 1, 1, "", "dmce_buslink_mpc2"], [250, 1, 1, "", "dmce_gen3p_mpc2"], [251, 1, 1, "", "dmce_gen_mpc2"], [252, 1, 1, "", "dmce_legacy_dcline_mpc2"], [253, 1, 1, "", "dmce_line3p_mpc2"], [254, 1, 1, "", "dmce_load3p_mpc2"], [255, 1, 1, "", "dmce_load_mpc2"], [256, 1, 1, "", "dmce_reserve_gen_mpc2"], [257, 1, 1, "", "dmce_reserve_zone_mpc2"], [258, 1, 1, "", "dmce_shunt_mpc2"], [259, 1, 1, "", "dmce_xfmr3p_mpc2"], [260, 1, 1, "", "dme_branch"], [261, 1, 1, "", "dme_branch_opf"], [262, 1, 1, "", "dme_bus"], [263, 1, 1, "", "dme_bus3p"], [264, 1, 1, "", "dme_bus3p_opf"], [265, 1, 1, "", "dme_bus_opf"], [266, 1, 1, "", "dme_buslink"], [267, 1, 1, "", "dme_buslink_opf"], [268, 1, 1, "", "dme_gen"], [269, 1, 1, "", "dme_gen3p"], [270, 1, 1, "", "dme_gen3p_opf"], [271, 1, 1, "", "dme_gen_opf"], [272, 1, 1, "", "dme_legacy_dcline"], [273, 1, 1, "", "dme_legacy_dcline_opf"], [274, 1, 1, "", "dme_line3p"], [275, 1, 1, "", "dme_line3p_opf"], [276, 1, 1, "", "dme_load"], [277, 1, 1, "", "dme_load3p"], [278, 1, 1, "", "dme_load3p_opf"], [279, 1, 1, "", "dme_load_cpf"], [280, 1, 1, "", "dme_load_opf"], [281, 1, 1, "", "dme_reserve_gen"], [282, 1, 1, "", "dme_reserve_zone"], [283, 1, 1, "", "dme_shared_opf"], [284, 1, 1, "", "dme_shunt"], [285, 1, 1, "", "dme_shunt_cpf"], [286, 1, 1, "", "dme_shunt_opf"], [287, 1, 1, "", "dme_xfmr3p"], [288, 1, 1, "", "dme_xfmr3p_opf"], [289, 1, 1, "", "element_container"], [290, 1, 1, "", "extension"], [291, 1, 1, "", "form"], [292, 1, 1, "", "form_ac"], [293, 1, 1, "", "form_acc"], [294, 1, 1, "", "form_acp"], [295, 1, 1, "", "form_dc"], [296, 1, 1, "", "mapped_array"], [297, 1, 1, "", "math_model"], [298, 1, 1, "", "math_model_cpf_acc"], [299, 1, 1, "", "math_model_cpf_acci"], [300, 1, 1, "", "math_model_cpf_accs"], [301, 1, 1, "", "math_model_cpf_acp"], [302, 1, 1, "", "math_model_cpf_acpi"], [303, 1, 1, "", "math_model_cpf_acps"], [304, 1, 1, "", "math_model_opf"], [305, 1, 1, "", "math_model_opf_ac"], [306, 1, 1, "", "math_model_opf_acc"], [307, 1, 1, "", "math_model_opf_acci"], [308, 1, 1, "", "math_model_opf_acci_legacy"], [309, 1, 1, "", "math_model_opf_accs"], [310, 1, 1, "", "math_model_opf_accs_legacy"], [311, 1, 1, "", "math_model_opf_acp"], [312, 1, 1, "", "math_model_opf_acpi"], [313, 1, 1, "", "math_model_opf_acpi_legacy"], [314, 1, 1, "", "math_model_opf_acps"], [315, 1, 1, "", "math_model_opf_acps_legacy"], [316, 1, 1, "", "math_model_opf_dc"], [317, 1, 1, "", "math_model_opf_dc_legacy"], [318, 1, 1, "", "math_model_pf"], [319, 1, 1, "", "math_model_pf_ac"], [320, 1, 1, "", "math_model_pf_acci"], [321, 1, 1, "", "math_model_pf_accs"], [322, 1, 1, "", "math_model_pf_acpi"], [323, 1, 1, "", "math_model_pf_acps"], [324, 1, 1, "", "math_model_pf_dc"], [325, 1, 1, "", "mm_element"], [326, 1, 1, "", "mm_shared_opf_legacy"], [327, 1, 1, "", "mm_shared_pfcpf"], [328, 1, 1, "", "mm_shared_pfcpf_ac"], [329, 1, 1, "", "mm_shared_pfcpf_ac_i"], [330, 1, 1, "", "mm_shared_pfcpf_acc"], [331, 1, 1, "", "mm_shared_pfcpf_acci"], [332, 1, 1, "", "mm_shared_pfcpf_accs"], [333, 1, 1, "", "mm_shared_pfcpf_acp"], [334, 1, 1, "", "mm_shared_pfcpf_acpi"], [335, 1, 1, "", "mm_shared_pfcpf_acps"], [336, 1, 1, "", "mm_shared_pfcpf_dc"], [337, 1, 1, "", "mme_branch"], [338, 1, 1, "", "mme_branch_opf"], [339, 1, 1, "", "mme_branch_opf_ac"], [340, 1, 1, "", "mme_branch_opf_acc"], [341, 1, 1, "", "mme_branch_opf_acp"], [342, 1, 1, "", "mme_branch_opf_dc"], [343, 1, 1, "", "mme_branch_pf_ac"], [344, 1, 1, "", "mme_branch_pf_dc"], [345, 1, 1, "", "mme_bus"], [346, 1, 1, "", "mme_bus3p"], [347, 1, 1, "", "mme_bus3p_opf_acc"], [348, 1, 1, "", "mme_bus3p_opf_acp"], [349, 1, 1, "", "mme_bus_opf_ac"], [350, 1, 1, "", "mme_bus_opf_acc"], [351, 1, 1, "", "mme_bus_opf_acp"], [352, 1, 1, "", "mme_bus_opf_dc"], [353, 1, 1, "", "mme_bus_pf_ac"], [354, 1, 1, "", "mme_bus_pf_dc"], [355, 1, 1, "", "mme_buslink"], [356, 1, 1, "", "mme_buslink_opf"], [357, 1, 1, "", "mme_buslink_opf_acc"], [358, 1, 1, "", "mme_buslink_opf_acp"], [359, 1, 1, "", "mme_buslink_pf_ac"], [360, 1, 1, "", "mme_buslink_pf_acc"], [361, 1, 1, "", "mme_buslink_pf_acp"], [362, 1, 1, "", "mme_gen"], [363, 1, 1, "", "mme_gen3p"], [364, 1, 1, "", "mme_gen3p_opf"], [365, 1, 1, "", "mme_gen_opf"], [366, 1, 1, "", "mme_gen_opf_ac"], [367, 1, 1, "", "mme_gen_opf_dc"], [368, 1, 1, "", "mme_gen_pf_ac"], [369, 1, 1, "", "mme_gen_pf_dc"], [370, 1, 1, "", "mme_legacy_dcline"], [371, 1, 1, "", "mme_legacy_dcline_opf"], [372, 1, 1, "", "mme_legacy_dcline_opf_ac"], [373, 1, 1, "", "mme_legacy_dcline_opf_dc"], [374, 1, 1, "", "mme_legacy_dcline_pf_ac"], [375, 1, 1, "", "mme_legacy_dcline_pf_dc"], [376, 1, 1, "", "mme_line3p"], [377, 1, 1, "", "mme_line3p_opf"], [378, 1, 1, "", "mme_load"], [379, 1, 1, "", "mme_load_cpf"], [380, 1, 1, "", "mme_load_pf_ac"], [381, 1, 1, "", "mme_load_pf_dc"], [382, 1, 1, "", "mme_reserve_gen"], [383, 1, 1, "", "mme_reserve_zone"], [384, 1, 1, "", "mme_shunt"], [385, 1, 1, "", "mme_shunt_cpf"], [386, 1, 1, "", "mme_shunt_pf_ac"], [387, 1, 1, "", "mme_shunt_pf_dc"], [388, 1, 1, "", "mme_xfmr3p"], [389, 1, 1, "", "mme_xfmr3p_opf"], [390, 1, 1, "", "net_model"], [391, 1, 1, "", "net_model_ac"], [392, 1, 1, "", "net_model_acc"], [393, 1, 1, "", "net_model_acp"], [394, 1, 1, "", "net_model_dc"], [395, 1, 1, "", "nm_element"], [396, 1, 1, "", "nme_branch"], [397, 1, 1, "", "nme_branch_ac"], [398, 1, 1, "", "nme_branch_acc"], [399, 1, 1, "", "nme_branch_acp"], [400, 1, 1, "", "nme_branch_dc"], [401, 1, 1, "", "nme_bus"], [402, 1, 1, "", "nme_bus3p"], [403, 1, 1, "", "nme_bus3p_acc"], [404, 1, 1, "", "nme_bus3p_acp"], [405, 1, 1, "", "nme_bus_acc"], [406, 1, 1, "", "nme_bus_acp"], [407, 1, 1, "", "nme_bus_dc"], [408, 1, 1, "", "nme_buslink"], [409, 1, 1, "", "nme_buslink_acc"], [410, 1, 1, "", "nme_buslink_acp"], [411, 1, 1, "", "nme_gen"], [412, 1, 1, "", "nme_gen3p"], [413, 1, 1, "", "nme_gen3p_acc"], [414, 1, 1, "", "nme_gen3p_acp"], [415, 1, 1, "", "nme_gen_ac"], [416, 1, 1, "", "nme_gen_acc"], [417, 1, 1, "", "nme_gen_acp"], [418, 1, 1, "", "nme_gen_dc"], [419, 1, 1, "", "nme_legacy_dcline"], [420, 1, 1, "", "nme_legacy_dcline_ac"], [421, 1, 1, "", "nme_legacy_dcline_acc"], [422, 1, 1, "", "nme_legacy_dcline_acp"], [423, 1, 1, "", "nme_legacy_dcline_dc"], [424, 1, 1, "", "nme_line3p"], [425, 1, 1, "", "nme_load"], [426, 1, 1, "", "nme_load3p"], [427, 1, 1, "", "nme_load_ac"], [428, 1, 1, "", "nme_load_acc"], [429, 1, 1, "", "nme_load_acp"], [430, 1, 1, "", "nme_load_dc"], [431, 1, 1, "", "nme_shunt"], [432, 1, 1, "", "nme_shunt_ac"], [433, 1, 1, "", "nme_shunt_acc"], [434, 1, 1, "", "nme_shunt_acp"], [435, 1, 1, "", "nme_shunt_dc"], [436, 1, 1, "", "nme_xfmr3p"], [437, 1, 1, "", "task"], [438, 1, 1, "", "task_cpf"], [439, 1, 1, "", "task_cpf_legacy"], [440, 1, 1, "", "task_opf"], [441, 1, 1, "", "task_opf_legacy"], [442, 1, 1, "", "task_pf"], [443, 1, 1, "", "task_pf_legacy"], [444, 1, 1, "", "task_shared_legacy"], [445, 1, 1, "", "xt_3p"], [446, 1, 1, "", "xt_legacy_dcline"], [447, 1, 1, "", "xt_reserves"]], "mp.NODE_TYPE": [[235, 2, 1, "", "NONE"], [235, 2, 1, "", "PQ"], [235, 2, 1, "", "PV"], [235, 2, 1, "", "REF"], [235, 3, 1, "", "is_valid"]], "mp.cost_table": [[236, 4, 1, "", "cost_table"], [236, 3, 1, "", "diff_poly_fcn"], [236, 3, 1, "", "eval_poly_fcn"], [236, 4, 1, "", "max_pwl_cost"], [236, 3, 1, "", "poly_cost_fcn"], [236, 4, 1, "", "poly_params"], [236, 4, 1, "", "pwl_params"]], "mp.cost_table_utils": [[237, 3, 1, "", "max_pwl_cost"], [237, 3, 1, "", "poly_params"], [237, 3, 1, "", "pwl_params"]], "mp.data_model": [[238, 2, 1, "", "base_kva"], [238, 2, 1, "", "base_mva"], [238, 4, 1, "", "build"], [238, 4, 1, "", "build_params"], [238, 4, 1, "", "copy"], [238, 4, 1, "", "count"], [238, 4, 1, "", "data_model"], [238, 4, 1, "", "display"], [238, 4, 1, "", "initialize"], [238, 4, 1, "", "online"], [238, 4, 1, "", "pp_data"], [238, 4, 1, "", "pp_flags"], [238, 4, 1, "", "pp_get_headers"], [238, 4, 1, "", "pp_get_headers_cnt"], [238, 4, 1, "", "pp_get_headers_ext"], [238, 4, 1, "", "pp_get_headers_other"], [238, 4, 1, "", "pp_have_section"], [238, 4, 1, "", "pp_section"], [238, 4, 1, "", "pp_section_label"], [238, 4, 1, "", "pp_section_list"], [238, 4, 1, "", "pretty_print"], [238, 4, 1, "", "set_bus_v_lims_via_vg"], [238, 2, 1, "", "source"], [238, 4, 1, "", "update_status"], [238, 2, 1, "", "userdata"]], "mp.data_model_cpf": [[239, 4, 1, "", "data_model_cpf"]], "mp.data_model_opf": [[240, 4, 1, "", "data_model_opf"], [240, 4, 1, "", "pp_flags"], [240, 4, 1, "", "pp_get_headers_other"], [240, 4, 1, "", "pp_section_list"]], "mp.dm_converter": [[241, 4, 1, "", "build"], [241, 4, 1, "", "copy"], [241, 4, 1, "", "display"], [241, 4, 1, "", "export"], [241, 4, 1, "", "format_tag"], [241, 4, 1, "", "import"], [241, 4, 1, "", "init_export"], [241, 4, 1, "", "save"]], "mp.dm_converter_mpc2": [[242, 4, 1, "", "dm_converter_mpc2"], [242, 4, 1, "", "format_tag"], [242, 4, 1, "", "import"], [242, 4, 1, "", "init_export"], [242, 4, 1, "", "save"]], "mp.dm_converter_mpc2_legacy": [[243, 4, 1, "", "legacy_user_mod_inputs"], [243, 4, 1, "", "legacy_user_nln_constraints"]], "mp.dm_element": [[244, 4, 1, "", "ID"], [244, 2, 1, "", "ID2i"], [244, 4, 1, "", "build_params"], [244, 4, 1, "", "copy"], [244, 4, 1, "", "count"], [244, 4, 1, "", "cxn_idx_prop"], [244, 4, 1, "", "cxn_type"], [244, 4, 1, "", "cxn_type_prop"], [244, 4, 1, "", "display"], [244, 4, 1, "", "dm_converter_element"], [244, 4, 1, "", "export_vars"], [244, 4, 1, "", "export_vars_offline_val"], [244, 2, 1, "", "i2on"], [244, 4, 1, "", "init_status"], [244, 4, 1, "", "initialize"], [244, 4, 1, "", "label"], [244, 4, 1, "", "labels"], [244, 4, 1, "", "main_table_var_names"], [244, 2, 1, "", "n"], [244, 4, 1, "", "name"], [244, 2, 1, "", "nr"], [244, 2, 1, "", "off"], [244, 2, 1, "", "on"], [244, 4, 1, "", "pp_data"], [244, 4, 1, "", "pp_data_cnt"], [244, 4, 1, "", "pp_data_det"], [244, 4, 1, "", "pp_data_ext"], [244, 4, 1, "", "pp_data_row_det"], [244, 4, 1, "", "pp_data_sum"], [244, 4, 1, "", "pp_get_footers"], [244, 4, 1, "", "pp_get_footers_det"], [244, 4, 1, "", "pp_get_headers"], [244, 4, 1, "", "pp_get_headers_det"], [244, 4, 1, "", "pp_get_title_det"], [244, 4, 1, "", "pp_have_section"], [244, 4, 1, "", "pp_have_section_cnt"], [244, 4, 1, "", "pp_have_section_det"], [244, 4, 1, "", "pp_have_section_ext"], [244, 4, 1, "", "pp_have_section_sum"], [244, 4, 1, "", "pp_rows"], [244, 4, 1, "", "pretty_print"], [244, 4, 1, "", "rebuild"], [244, 2, 1, "", "tab"], [244, 4, 1, "", "table_exists"], [244, 4, 1, "", "update_status"]], "mp.dmc_element": [[245, 4, 1, "", "data_exists"], [245, 4, 1, "", "data_field"], [245, 4, 1, "", "data_model_element"], [245, 4, 1, "", "data_subs"], [245, 4, 1, "", "default_export_data_nrows"], [245, 4, 1, "", "default_export_data_table"], [245, 4, 1, "", "export"], [245, 4, 1, "", "export_col"], [245, 4, 1, "", "export_table_values"], [245, 4, 1, "", "get_export_size"], [245, 4, 1, "", "get_export_spec"], [245, 4, 1, "", "get_import_size"], [245, 4, 1, "", "get_import_spec"], [245, 4, 1, "", "get_input_table_values"], [245, 4, 1, "", "import"], [245, 4, 1, "", "import_col"], [245, 4, 1, "", "import_table_values"], [245, 4, 1, "", "init_export_data"], [245, 4, 1, "", "name"], [245, 4, 1, "", "table_var_map"]], "mp.dmce_branch_mpc2": [[246, 4, 1, "", "data_field"], [246, 4, 1, "", "default_export_data_table"], [246, 4, 1, "", "name"], [246, 4, 1, "", "table_var_map"]], "mp.dmce_bus3p_mpc2": [[247, 4, 1, "", "bus_status_import"], [247, 4, 1, "", "data_field"], [247, 4, 1, "", "name"], [247, 4, 1, "", "table_var_map"]], "mp.dmce_bus_mpc2": [[248, 4, 1, "", "bus_name_export"], [248, 4, 1, "", "bus_name_import"], [248, 4, 1, "", "bus_status_import"], [248, 4, 1, "", "data_field"], [248, 4, 1, "", "default_export_data_table"], [248, 4, 1, "", "init_export_data"], [248, 4, 1, "", "name"], [248, 4, 1, "", "table_var_map"]], "mp.dmce_buslink_mpc2": [[249, 4, 1, "", "data_field"], [249, 4, 1, "", "name"], [249, 4, 1, "", "table_var_map"]], "mp.dmce_gen3p_mpc2": [[250, 4, 1, "", "data_field"], [250, 4, 1, "", "name"], [250, 4, 1, "", "table_var_map"]], "mp.dmce_gen_mpc2": [[251, 3, 1, "", "cost_table2gencost"], [251, 4, 1, "", "data_field"], [251, 4, 1, "", "default_export_data_table"], [251, 4, 1, "", "gen_cost_export"], [251, 4, 1, "", "gen_cost_import"], [251, 3, 1, "", "gencost2cost_table"], [251, 4, 1, "", "name"], [251, 2, 1, "", "pwl1"], [251, 4, 1, "", "start_cost_export"], [251, 4, 1, "", "start_cost_import"], [251, 4, 1, "", "table_var_map"]], "mp.dmce_legacy_dcline_mpc2": [[252, 4, 1, "", "data_field"], [252, 4, 1, "", "dcline_cost_export"], [252, 4, 1, "", "dcline_cost_import"], [252, 4, 1, "", "default_export_data_table"], [252, 4, 1, "", "name"], [252, 4, 1, "", "table_var_map"]], "mp.dmce_line3p_mpc2": [[253, 4, 1, "", "create_line_construction_table"], [253, 4, 1, "", "data_field"], [253, 4, 1, "", "import"], [253, 4, 1, "", "name"], [253, 4, 1, "", "table_var_map"]], "mp.dmce_load3p_mpc2": [[254, 2, 1, "", "bus"], [254, 4, 1, "", "data_field"], [254, 4, 1, "", "name"], [254, 4, 1, "", "table_var_map"]], "mp.dmce_load_mpc2": [[255, 2, 1, "", "bus"], [255, 4, 1, "", "data_field"], [255, 4, 1, "", "get_export_size"], [255, 4, 1, "", "get_import_size"], [255, 4, 1, "", "name"], [255, 4, 1, "", "scale_factor_fcn"], [255, 4, 1, "", "sys_wide_zip_loads"], [255, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_gen_mpc2": [[256, 4, 1, "", "data_field"], [256, 4, 1, "", "data_subs"], [256, 4, 1, "", "get_export_size"], [256, 4, 1, "", "get_import_size"], [256, 4, 1, "", "import"], [256, 4, 1, "", "import_cost"], [256, 4, 1, "", "import_qty"], [256, 4, 1, "", "import_ramp"], [256, 4, 1, "", "name"], [256, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_zone_mpc2": [[257, 4, 1, "", "data_field"], [257, 4, 1, "", "data_subs"], [257, 4, 1, "", "import_req"], [257, 4, 1, "", "import_zones"], [257, 4, 1, "", "name"], [257, 4, 1, "", "table_var_map"]], "mp.dmce_shunt_mpc2": [[258, 2, 1, "", "bus"], [258, 4, 1, "", "data_field"], [258, 4, 1, "", "get_export_size"], [258, 4, 1, "", "get_import_size"], [258, 4, 1, "", "name"], [258, 4, 1, "", "table_var_map"]], "mp.dmce_xfmr3p_mpc2": [[259, 4, 1, "", "data_field"], [259, 4, 1, "", "name"], [259, 4, 1, "", "table_var_map"]], "mp.dme_branch": [[260, 2, 1, "", "b_fr"], [260, 2, 1, "", "b_to"], [260, 4, 1, "", "build_params"], [260, 4, 1, "", "cxn_idx_prop"], [260, 4, 1, "", "cxn_type"], [260, 4, 1, "", "export_vars"], [260, 4, 1, "", "export_vars_offline_val"], [260, 2, 1, "", "fbus"], [260, 2, 1, "", "g_fr"], [260, 2, 1, "", "g_to"], [260, 4, 1, "", "initialize"], [260, 4, 1, "", "label"], [260, 4, 1, "", "labels"], [260, 4, 1, "", "main_table_var_names"], [260, 4, 1, "", "name"], [260, 4, 1, "", "pp_data_cnt"], [260, 4, 1, "", "pp_data_row_det"], [260, 4, 1, "", "pp_data_sum"], [260, 4, 1, "", "pp_get_headers_det"], [260, 4, 1, "", "pp_have_section_det"], [260, 4, 1, "", "pp_have_section_sum"], [260, 2, 1, "", "r"], [260, 2, 1, "", "rate_a"], [260, 2, 1, "", "ta"], [260, 2, 1, "", "tbus"], [260, 2, 1, "", "tm"], [260, 4, 1, "", "update_status"], [260, 2, 1, "", "x"]], "mp.dme_branch_opf": [[261, 4, 1, "", "export_vars"], [261, 4, 1, "", "export_vars_offline_val"], [261, 4, 1, "", "main_table_var_names"], [261, 4, 1, "", "pp_binding_rows_lim"], [261, 4, 1, "", "pp_data_row_lim"], [261, 4, 1, "", "pp_get_headers_lim"], [261, 4, 1, "", "pp_get_title_lim"], [261, 4, 1, "", "pp_have_section_lim"], [261, 4, 1, "", "pretty_print"]], "mp.dme_bus": [[262, 4, 1, "", "build_params"], [262, 4, 1, "", "export_vars"], [262, 4, 1, "", "export_vars_offline_val"], [262, 4, 1, "", "init_status"], [262, 4, 1, "", "label"], [262, 4, 1, "", "labels"], [262, 4, 1, "", "main_table_var_names"], [262, 4, 1, "", "name"], [262, 4, 1, "", "pp_data_cnt"], [262, 4, 1, "", "pp_data_ext"], [262, 4, 1, "", "pp_data_row_det"], [262, 4, 1, "", "pp_get_headers_det"], [262, 4, 1, "", "pp_have_section_det"], [262, 4, 1, "", "pp_have_section_ext"], [262, 4, 1, "", "set_bus_type_pq"], [262, 4, 1, "", "set_bus_type_pv"], [262, 4, 1, "", "set_bus_type_ref"], [262, 2, 1, "", "type"], [262, 4, 1, "", "update_status"], [262, 2, 1, "", "va_start"], [262, 2, 1, "", "vm_control"], [262, 2, 1, "", "vm_lb"], [262, 2, 1, "", "vm_start"], [262, 2, 1, "", "vm_ub"]], "mp.dme_bus3p": [[263, 4, 1, "", "build_params"], [263, 4, 1, "", "init_status"], [263, 4, 1, "", "label"], [263, 4, 1, "", "labels"], [263, 4, 1, "", "main_table_var_names"], [263, 4, 1, "", "name"], [263, 4, 1, "", "pp_data_row_det"], [263, 4, 1, "", "pp_get_headers_det"], [263, 4, 1, "", "pp_have_section_det"], [263, 2, 1, "", "type"], [263, 4, 1, "", "update_status"], [263, 2, 1, "", "va1_start"], [263, 2, 1, "", "va2_start"], [263, 2, 1, "", "va3_start"], [263, 2, 1, "", "vm1_start"], [263, 2, 1, "", "vm2_start"], [263, 2, 1, "", "vm3_start"], [263, 2, 1, "", "vm_control"]], "mp.dme_bus_opf": [[265, 4, 1, "", "export_vars"], [265, 4, 1, "", "export_vars_offline_val"], [265, 4, 1, "", "main_table_var_names"], [265, 4, 1, "", "pp_binding_rows_lim"], [265, 4, 1, "", "pp_data_ext"], [265, 4, 1, "", "pp_data_row_det"], [265, 4, 1, "", "pp_data_row_lim"], [265, 4, 1, "", "pp_get_headers_det"], [265, 4, 1, "", "pp_get_headers_lim"], [265, 4, 1, "", "pp_have_section_lim"]], "mp.dme_buslink": [[266, 4, 1, "", "build_params"], [266, 2, 1, "", "bus"], [266, 2, 1, "", "bus3p"], [266, 4, 1, "", "cxn_idx_prop"], [266, 4, 1, "", "cxn_type"], [266, 4, 1, "", "initialize"], [266, 4, 1, "", "label"], [266, 4, 1, "", "labels"], [266, 4, 1, "", "main_table_var_names"], [266, 4, 1, "", "name"], [266, 2, 1, "", "pg1_start"], [266, 2, 1, "", "pg2_start"], [266, 2, 1, "", "pg3_start"], [266, 4, 1, "", "pp_data_row_det"], [266, 4, 1, "", "pp_get_headers_det"], [266, 4, 1, "", "pp_have_section_det"], [266, 2, 1, "", "qg1_start"], [266, 2, 1, "", "qg2_start"], [266, 2, 1, "", "qg3_start"], [266, 4, 1, "", "update_status"]], "mp.dme_gen": [[268, 4, 1, "", "apply_vm_setpoint"], [268, 4, 1, "", "build_params"], [268, 2, 1, "", "bus"], [268, 2, 1, "", "bus_on"], [268, 4, 1, "", "cxn_idx_prop"], [268, 4, 1, "", "cxn_type"], [268, 4, 1, "", "export_vars"], [268, 4, 1, "", "export_vars_offline_val"], [268, 4, 1, "", "have_cost"], [268, 4, 1, "", "initialize"], [268, 4, 1, "", "isload"], [268, 4, 1, "", "label"], [268, 4, 1, "", "labels"], [268, 4, 1, "", "main_table_var_names"], [268, 4, 1, "", "name"], [268, 2, 1, "", "pg_lb"], [268, 2, 1, "", "pg_start"], [268, 2, 1, "", "pg_ub"], [268, 4, 1, "", "pp_data_row_det"], [268, 4, 1, "", "pp_data_sum"], [268, 4, 1, "", "pp_get_footers_det"], [268, 4, 1, "", "pp_get_headers_det"], [268, 4, 1, "", "pp_have_section_det"], [268, 4, 1, "", "pp_have_section_sum"], [268, 2, 1, "", "qg_lb"], [268, 2, 1, "", "qg_start"], [268, 2, 1, "", "qg_ub"], [268, 4, 1, "", "update_status"], [268, 4, 1, "", "violated_q_lims"], [268, 2, 1, "", "vm_setpoint"]], "mp.dme_gen3p": [[269, 4, 1, "", "apply_vm_setpoint"], [269, 4, 1, "", "build_params"], [269, 2, 1, "", "bus"], [269, 2, 1, "", "bus_on"], [269, 4, 1, "", "cxn_idx_prop"], [269, 4, 1, "", "cxn_type"], [269, 4, 1, "", "initialize"], [269, 4, 1, "", "label"], [269, 4, 1, "", "labels"], [269, 4, 1, "", "main_table_var_names"], [269, 4, 1, "", "name"], [269, 2, 1, "", "pg1_start"], [269, 2, 1, "", "pg2_start"], [269, 2, 1, "", "pg3_start"], [269, 4, 1, "", "pp_data_row_det"], [269, 4, 1, "", "pp_data_sum"], [269, 4, 1, "", "pp_get_headers_det"], [269, 4, 1, "", "pp_have_section_det"], [269, 4, 1, "", "pp_have_section_sum"], [269, 2, 1, "", "qg1_start"], [269, 2, 1, "", "qg2_start"], [269, 2, 1, "", "qg3_start"], [269, 4, 1, "", "update_status"], [269, 2, 1, "", "vm1_setpoint"], [269, 2, 1, "", "vm2_setpoint"], [269, 2, 1, "", "vm3_setpoint"]], "mp.dme_gen_opf": [[271, 4, 1, "", "build_cost_params"], [271, 4, 1, "", "export_vars"], [271, 4, 1, "", "export_vars_offline_val"], [271, 4, 1, "", "have_cost"], [271, 4, 1, "", "main_table_var_names"], [271, 4, 1, "", "max_pwl_gencost"], [271, 4, 1, "", "pp_binding_rows_lim"], [271, 4, 1, "", "pp_data_row_lim"], [271, 4, 1, "", "pp_get_headers_lim"], [271, 4, 1, "", "pp_have_section_lim"], [271, 4, 1, "", "pretty_print"]], "mp.dme_legacy_dcline": [[272, 4, 1, "", "apply_vm_setpoints"], [272, 4, 1, "", "build_params"], [272, 4, 1, "", "cxn_idx_prop"], [272, 4, 1, "", "cxn_type"], [272, 4, 1, "", "export_vars"], [272, 4, 1, "", "export_vars_offline_val"], [272, 2, 1, "", "fbus"], [272, 2, 1, "", "fbus_on"], [272, 4, 1, "", "have_cost"], [272, 4, 1, "", "initialize"], [272, 4, 1, "", "label"], [272, 4, 1, "", "labels"], [272, 2, 1, "", "loss0"], [272, 2, 1, "", "loss1"], [272, 4, 1, "", "main_table_var_names"], [272, 4, 1, "", "name"], [272, 2, 1, "", "p_fr_lb"], [272, 2, 1, "", "p_fr_start"], [272, 2, 1, "", "p_fr_ub"], [272, 2, 1, "", "p_to_start"], [272, 4, 1, "", "pp_data_row_det"], [272, 4, 1, "", "pp_data_sum"], [272, 4, 1, "", "pp_get_headers_det"], [272, 4, 1, "", "pp_have_section_det"], [272, 4, 1, "", "pp_have_section_sum"], [272, 2, 1, "", "q_fr_lb"], [272, 2, 1, "", "q_fr_start"], [272, 2, 1, "", "q_fr_ub"], [272, 2, 1, "", "q_to_lb"], [272, 2, 1, "", "q_to_start"], [272, 2, 1, "", "q_to_ub"], [272, 2, 1, "", "tbus"], [272, 2, 1, "", "tbus_on"], [272, 4, 1, "", "update_status"], [272, 2, 1, "", "vm_setpoint_fr"], [272, 2, 1, "", "vm_setpoint_to"]], "mp.dme_legacy_dcline_opf": [[273, 4, 1, "", "build_cost_params"], [273, 4, 1, "", "export_vars"], [273, 4, 1, "", "export_vars_offline_val"], [273, 4, 1, "", "have_cost"], [273, 4, 1, "", "main_table_var_names"], [273, 4, 1, "", "pp_binding_rows_lim"], [273, 4, 1, "", "pp_data_row_lim"], [273, 4, 1, "", "pp_get_headers_lim"], [273, 4, 1, "", "pp_have_section_lim"], [273, 4, 1, "", "pretty_print"]], "mp.dme_line3p": [[274, 4, 1, "", "build_params"], [274, 4, 1, "", "create_line_construction_table"], [274, 4, 1, "", "cxn_idx_prop"], [274, 4, 1, "", "cxn_type"], [274, 2, 1, "", "fbus"], [274, 2, 1, "", "freq"], [274, 4, 1, "", "initialize"], [274, 4, 1, "", "label"], [274, 4, 1, "", "labels"], [274, 2, 1, "", "lc"], [274, 2, 1, "", "lc_tab"], [274, 4, 1, "", "lc_table_var_names"], [274, 2, 1, "", "len"], [274, 4, 1, "", "main_table_var_names"], [274, 4, 1, "", "name"], [274, 4, 1, "", "pp_data_row_det"], [274, 4, 1, "", "pp_data_sum"], [274, 4, 1, "", "pp_get_headers_det"], [274, 4, 1, "", "pp_have_section_det"], [274, 4, 1, "", "pp_have_section_sum"], [274, 4, 1, "", "pretty_print"], [274, 4, 1, "", "symmat2vec"], [274, 2, 1, "", "tbus"], [274, 4, 1, "", "update_status"], [274, 4, 1, "", "vec2symmat"], [274, 2, 1, "", "yc"], [274, 2, 1, "", "ys"]], "mp.dme_load": [[276, 4, 1, "", "build_params"], [276, 2, 1, "", "bus"], [276, 4, 1, "", "count"], [276, 4, 1, "", "cxn_idx_prop"], [276, 4, 1, "", "cxn_type"], [276, 4, 1, "", "label"], [276, 4, 1, "", "labels"], [276, 4, 1, "", "main_table_var_names"], [276, 4, 1, "", "name"], [276, 2, 1, "", "pd"], [276, 2, 1, "", "pd_i"], [276, 2, 1, "", "pd_z"], [276, 4, 1, "", "pp_data_row_det"], [276, 4, 1, "", "pp_data_sum"], [276, 4, 1, "", "pp_get_footers_det"], [276, 4, 1, "", "pp_get_headers_det"], [276, 4, 1, "", "pp_have_section_det"], [276, 4, 1, "", "pp_have_section_sum"], [276, 2, 1, "", "qd"], [276, 2, 1, "", "qd_i"], [276, 2, 1, "", "qd_z"], [276, 4, 1, "", "update_status"]], "mp.dme_load3p": [[277, 4, 1, "", "build_params"], [277, 2, 1, "", "bus"], [277, 4, 1, "", "cxn_idx_prop"], [277, 4, 1, "", "cxn_type"], [277, 4, 1, "", "initialize"], [277, 4, 1, "", "label"], [277, 4, 1, "", "labels"], [277, 4, 1, "", "main_table_var_names"], [277, 4, 1, "", "name"], [277, 2, 1, "", "pd1"], [277, 2, 1, "", "pd2"], [277, 2, 1, "", "pd3"], [277, 2, 1, "", "pf1"], [277, 2, 1, "", "pf2"], [277, 2, 1, "", "pf3"], [277, 4, 1, "", "pp_data_row_det"], [277, 4, 1, "", "pp_data_sum"], [277, 4, 1, "", "pp_get_headers_det"], [277, 4, 1, "", "pp_have_section_det"], [277, 4, 1, "", "pp_have_section_sum"], [277, 4, 1, "", "update_status"]], "mp.dme_load_cpf": [[279, 4, 1, "", "export_vars"], [279, 4, 1, "", "parameterized"]], "mp.dme_reserve_gen": [[281, 4, 1, "", "build_params"], [281, 4, 1, "", "export_vars"], [281, 4, 1, "", "export_vars_offline_val"], [281, 2, 1, "", "gen"], [281, 4, 1, "", "label"], [281, 4, 1, "", "labels"], [281, 4, 1, "", "main_table_var_names"], [281, 4, 1, "", "name"], [281, 4, 1, "", "pp_binding_rows_lim"], [281, 4, 1, "", "pp_data_row_det"], [281, 4, 1, "", "pp_data_row_lim"], [281, 4, 1, "", "pp_data_sum"], [281, 4, 1, "", "pp_get_footers_det"], [281, 4, 1, "", "pp_get_headers_det"], [281, 4, 1, "", "pp_get_headers_lim"], [281, 4, 1, "", "pp_have_section_det"], [281, 4, 1, "", "pp_have_section_lim"], [281, 4, 1, "", "pp_have_section_sum"], [281, 2, 1, "", "r_ub"], [281, 4, 1, "", "update_status"]], "mp.dme_reserve_zone": [[282, 4, 1, "", "build_params"], [282, 4, 1, "", "export_vars"], [282, 4, 1, "", "export_vars_offline_val"], [282, 4, 1, "", "label"], [282, 4, 1, "", "labels"], [282, 4, 1, "", "main_table_var_names"], [282, 4, 1, "", "name"], [282, 4, 1, "", "pp_data_row_det"], [282, 4, 1, "", "pp_get_headers_det"], [282, 4, 1, "", "pp_have_section_det"], [282, 2, 1, "", "req"], [282, 4, 1, "", "update_status"], [282, 2, 1, "", "zones"]], "mp.dme_shared_opf": [[283, 2, 1, "", "ctol"], [283, 4, 1, "", "pp_binding_rows_lim"], [283, 4, 1, "", "pp_data_lim"], [283, 4, 1, "", "pp_data_other"], [283, 4, 1, "", "pp_data_row_lim"], [283, 4, 1, "", "pp_get_footers_lim"], [283, 4, 1, "", "pp_get_footers_other"], [283, 4, 1, "", "pp_get_headers_lim"], [283, 4, 1, "", "pp_get_headers_other"], [283, 4, 1, "", "pp_get_title_lim"], [283, 4, 1, "", "pp_have_section_lim"], [283, 4, 1, "", "pp_have_section_other"], [283, 4, 1, "", "pp_rows_lim"], [283, 4, 1, "", "pp_rows_other"], [283, 4, 1, "", "pp_set_tols_lim"], [283, 2, 1, "", "ptol"]], "mp.dme_shunt": [[284, 2, 1, "", "bs"], [284, 4, 1, "", "build_params"], [284, 2, 1, "", "bus"], [284, 4, 1, "", "count"], [284, 4, 1, "", "cxn_idx_prop"], [284, 4, 1, "", "cxn_type"], [284, 2, 1, "", "gs"], [284, 4, 1, "", "label"], [284, 4, 1, "", "labels"], [284, 4, 1, "", "main_table_var_names"], [284, 4, 1, "", "name"], [284, 4, 1, "", "pp_data_row_det"], [284, 4, 1, "", "pp_data_sum"], [284, 4, 1, "", "pp_get_footers_det"], [284, 4, 1, "", "pp_get_headers_det"], [284, 4, 1, "", "pp_have_section_det"], [284, 4, 1, "", "pp_have_section_sum"], [284, 4, 1, "", "update_status"]], "mp.dme_shunt_cpf": [[285, 4, 1, "", "export_vars"], [285, 4, 1, "", "parameterized"]], "mp.dme_xfmr3p": [[287, 4, 1, "", "build_params"], [287, 4, 1, "", "cxn_idx_prop"], [287, 4, 1, "", "cxn_type"], [287, 2, 1, "", "fbus"], [287, 4, 1, "", "initialize"], [287, 4, 1, "", "label"], [287, 4, 1, "", "labels"], [287, 4, 1, "", "main_table_var_names"], [287, 4, 1, "", "name"], [287, 4, 1, "", "pp_data_row_det"], [287, 4, 1, "", "pp_data_sum"], [287, 4, 1, "", "pp_get_headers_det"], [287, 4, 1, "", "pp_have_section_det"], [287, 4, 1, "", "pp_have_section_sum"], [287, 4, 1, "", "pretty_print"], [287, 2, 1, "", "r"], [287, 2, 1, "", "tbus"], [287, 4, 1, "", "update_status"], [287, 2, 1, "", "x"]], "mp.element_container": [[289, 2, 1, "", "element_classes"], [289, 2, 1, "", "elements"], [289, 4, 1, "", "modify_element_classes"]], "mp.extension": [[290, 4, 1, "", "data_model_class"], [290, 4, 1, "", "dm_converter_class"], [290, 4, 1, "", "dm_element_classes"], [290, 4, 1, "", "dmc_element_classes"], [290, 4, 1, "", "math_model_class"], [290, 4, 1, "", "mm_element_classes"], [290, 4, 1, "", "network_model_class"], [290, 4, 1, "", "nm_element_classes"], [290, 4, 1, "", "task_class"]], "mp.form": [[291, 4, 1, "", "find_form_class"], [291, 4, 1, "", "form_name"], [291, 4, 1, "", "form_tag"], [291, 4, 1, "", "get_params"], [291, 4, 1, "", "model_params"], [291, 4, 1, "", "model_vvars"], [291, 4, 1, "", "model_zvars"]], "mp.form_ac": [[292, 2, 1, "", "L"], [292, 2, 1, "", "M"], [292, 2, 1, "", "N"], [292, 2, 1, "", "Y"], [292, 4, 1, "", "aux_data_va_vm"], [292, 2, 1, "", "i"], [292, 2, 1, "", "inln"], [292, 2, 1, "", "inln_hess"], [292, 4, 1, "", "model_params"], [292, 4, 1, "", "model_zvars"], [292, 2, 1, "", "param_ncols"], [292, 4, 1, "", "port_active_power2_lim_fcn"], [292, 4, 1, "", "port_active_power2_lim_hess"], [292, 4, 1, "", "port_active_power_lim_fcn"], [292, 4, 1, "", "port_active_power_lim_hess"], [292, 4, 1, "", "port_apparent_power_lim_fcn"], [292, 4, 1, "", "port_apparent_power_lim_hess"], [292, 4, 1, "", "port_current_lim_fcn"], [292, 4, 1, "", "port_current_lim_hess"], [292, 4, 1, "", "port_inj_current"], [292, 4, 1, "", "port_inj_current_hess"], [292, 4, 1, "", "port_inj_current_hess_v"], [292, 4, 1, "", "port_inj_current_hess_vz"], [292, 4, 1, "", "port_inj_current_jac"], [292, 4, 1, "", "port_inj_power"], [292, 4, 1, "", "port_inj_power_hess"], [292, 4, 1, "", "port_inj_power_hess_v"], [292, 4, 1, "", "port_inj_power_hess_vz"], [292, 4, 1, "", "port_inj_power_jac"], [292, 2, 1, "", "s"], [292, 2, 1, "", "snln"], [292, 2, 1, "", "snln_hess"]], "mp.form_acc": [[293, 4, 1, "", "aux_data_va_vm"], [293, 4, 1, "", "form_name"], [293, 4, 1, "", "form_tag"], [293, 4, 1, "", "model_vvars"], [293, 4, 1, "", "port_inj_current_hess_v"], [293, 4, 1, "", "port_inj_current_hess_vz"], [293, 4, 1, "", "port_inj_current_jac"], [293, 4, 1, "", "port_inj_power_hess_v"], [293, 4, 1, "", "port_inj_power_hess_vz"], [293, 4, 1, "", "port_inj_power_jac"], [293, 4, 1, "", "va_fcn"], [293, 4, 1, "", "va_hess"], [293, 4, 1, "", "vm2_fcn"], [293, 4, 1, "", "vm2_hess"]], "mp.form_acp": [[294, 4, 1, "", "aux_data_va_vm"], [294, 4, 1, "", "form_name"], [294, 4, 1, "", "form_tag"], [294, 4, 1, "", "model_vvars"], [294, 4, 1, "", "port_inj_current_hess_v"], [294, 4, 1, "", "port_inj_current_hess_vz"], [294, 4, 1, "", "port_inj_current_jac"], [294, 4, 1, "", "port_inj_power_hess_v"], [294, 4, 1, "", "port_inj_power_hess_vz"], [294, 4, 1, "", "port_inj_power_jac"]], "mp.form_dc": [[295, 2, 1, "", "B"], [295, 2, 1, "", "K"], [295, 4, 1, "", "form_name"], [295, 4, 1, "", "form_tag"], [295, 4, 1, "", "model_params"], [295, 4, 1, "", "model_vvars"], [295, 4, 1, "", "model_zvars"], [295, 2, 1, "", "p"], [295, 2, 1, "", "param_ncols"], [295, 4, 1, "", "port_inj_power"]], "mp.mapped_array": [[296, 4, 1, "", "add_elements"], [296, 4, 1, "", "add_names"], [296, 4, 1, "", "copy"], [296, 4, 1, "", "delete_elements"], [296, 4, 1, "", "display"], [296, 4, 1, "", "has_name"], [296, 4, 1, "", "length"], [296, 4, 1, "", "mapped_array"], [296, 4, 1, "", "name2idx"], [296, 4, 1, "", "size"], [296, 4, 1, "", "subsasgn"], [296, 4, 1, "", "subsref"]], "mp.math_model": [[297, 4, 1, "", "add_aux_data"], [297, 4, 1, "", "add_constraints"], [297, 4, 1, "", "add_costs"], [297, 4, 1, "", "add_node_balance_constraints"], [297, 4, 1, "", "add_system_constraints"], [297, 4, 1, "", "add_system_costs"], [297, 4, 1, "", "add_system_vars"], [297, 4, 1, "", "add_vars"], [297, 2, 1, "", "aux_data"], [297, 4, 1, "", "build"], [297, 4, 1, "", "build_base_aux_data"], [297, 4, 1, "", "data_model_update"], [297, 4, 1, "", "display"], [297, 4, 1, "", "form_name"], [297, 4, 1, "", "form_tag"], [297, 4, 1, "", "network_model_x_soln"], [297, 4, 1, "", "solve_opts"], [297, 4, 1, "", "task_name"], [297, 4, 1, "", "task_tag"], [297, 4, 1, "", "update_nm_vars"]], "mp.math_model_cpf_acc": [[298, 4, 1, "", "math_model_cpf_acc"]], "mp.math_model_cpf_acci": [[299, 4, 1, "", "add_node_balance_constraints"], [299, 4, 1, "", "form_name"], [299, 4, 1, "", "form_tag"]], "mp.math_model_cpf_accs": [[300, 4, 1, "", "add_node_balance_constraints"], [300, 4, 1, "", "form_name"], [300, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acp": [[301, 4, 1, "", "callback_vlim"], [301, 4, 1, "", "event_vlim"], [301, 4, 1, "", "math_model_cpf_acp"]], "mp.math_model_cpf_acpi": [[302, 4, 1, "", "add_node_balance_constraints"], [302, 4, 1, "", "form_name"], [302, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acps": [[303, 4, 1, "", "add_node_balance_constraints"], [303, 4, 1, "", "expand_z_warmstart"], [303, 4, 1, "", "form_name"], [303, 4, 1, "", "form_tag"], [303, 4, 1, "", "solve_opts_warmstart"]], "mp.math_model_opf": [[304, 4, 1, "", "add_system_vars"], [304, 4, 1, "", "build_aux_data"], [304, 4, 1, "", "interior_va"], [304, 4, 1, "", "interior_x0"], [304, 4, 1, "", "task_name"], [304, 4, 1, "", "task_tag"]], "mp.math_model_opf_ac": [[305, 4, 1, "", "nodal_current_balance_fcn"], [305, 4, 1, "", "nodal_current_balance_hess"], [305, 4, 1, "", "nodal_power_balance_fcn"], [305, 4, 1, "", "nodal_power_balance_hess"], [305, 4, 1, "", "solve_opts"]], "mp.math_model_opf_acc": [[306, 4, 1, "", "convert_x_m2n"], [306, 4, 1, "", "interior_va"], [306, 4, 1, "", "math_model_opf_acc"]], "mp.math_model_opf_acci": [[307, 4, 1, "", "add_node_balance_constraints"], [307, 4, 1, "", "form_name"], [307, 4, 1, "", "form_tag"], [307, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acci_legacy": [[308, 4, 1, "", "add_named_set"], [308, 4, 1, "", "add_system_constraints"], [308, 4, 1, "", "add_system_costs"], [308, 4, 1, "", "add_vars"], [308, 4, 1, "", "build"], [308, 4, 1, "", "def_set_types"], [308, 4, 1, "", "init_set_types"], [308, 4, 1, "", "legacy_user_var_names"], [308, 4, 1, "", "math_model_opf_acci_legacy"]], "mp.math_model_opf_accs": [[309, 4, 1, "", "add_node_balance_constraints"], [309, 4, 1, "", "form_name"], [309, 4, 1, "", "form_tag"], [309, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_accs_legacy": [[310, 4, 1, "", "add_named_set"], [310, 4, 1, "", "add_system_constraints"], [310, 4, 1, "", "add_system_costs"], [310, 4, 1, "", "add_vars"], [310, 4, 1, "", "build"], [310, 4, 1, "", "def_set_types"], [310, 4, 1, "", "init_set_types"], [310, 4, 1, "", "legacy_user_var_names"], [310, 4, 1, "", "math_model_opf_accs_legacy"]], "mp.math_model_opf_acp": [[311, 4, 1, "", "convert_x_m2n"], [311, 4, 1, "", "math_model_opf_acp"]], "mp.math_model_opf_acpi": [[312, 4, 1, "", "add_node_balance_constraints"], [312, 4, 1, "", "form_name"], [312, 4, 1, "", "form_tag"], [312, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acpi_legacy": [[313, 4, 1, "", "add_named_set"], [313, 4, 1, "", "add_system_constraints"], [313, 4, 1, "", "add_system_costs"], [313, 4, 1, "", "add_vars"], [313, 4, 1, "", "build"], [313, 4, 1, "", "def_set_types"], [313, 4, 1, "", "init_set_types"], [313, 4, 1, "", "legacy_user_var_names"], [313, 4, 1, "", "math_model_opf_acpi_legacy"]], "mp.math_model_opf_acps": [[314, 4, 1, "", "add_node_balance_constraints"], [314, 4, 1, "", "form_name"], [314, 4, 1, "", "form_tag"], [314, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acps_legacy": [[315, 4, 1, "", "add_named_set"], [315, 4, 1, "", "add_system_constraints"], [315, 4, 1, "", "add_system_costs"], [315, 4, 1, "", "add_vars"], [315, 4, 1, "", "build"], [315, 4, 1, "", "def_set_types"], [315, 4, 1, "", "init_set_types"], [315, 4, 1, "", "legacy_user_var_names"], [315, 4, 1, "", "math_model_opf_acps_legacy"]], "mp.math_model_opf_dc": [[316, 4, 1, "", "add_node_balance_constraints"], [316, 4, 1, "", "convert_x_m2n"], [316, 4, 1, "", "form_name"], [316, 4, 1, "", "form_tag"], [316, 4, 1, "", "math_model_opf_dc"], [316, 4, 1, "", "solve_opts"]], "mp.math_model_opf_dc_legacy": [[317, 4, 1, "", "add_named_set"], [317, 4, 1, "", "add_system_constraints"], [317, 4, 1, "", "add_system_costs"], [317, 4, 1, "", "add_vars"], [317, 4, 1, "", "build"], [317, 4, 1, "", "def_set_types"], [317, 4, 1, "", "init_set_types"], [317, 4, 1, "", "legacy_user_var_names"], [317, 4, 1, "", "math_model_opf_dc_legacy"]], "mp.math_model_pf": [[318, 4, 1, "", "add_costs"], [318, 4, 1, "", "add_system_vars"], [318, 4, 1, "", "solve_opts"], [318, 4, 1, "", "task_name"], [318, 4, 1, "", "task_tag"]], "mp.math_model_pf_ac": [[319, 4, 1, "", "math_model_pf_ac"]], "mp.math_model_pf_acci": [[320, 4, 1, "", "add_node_balance_constraints"], [320, 4, 1, "", "form_name"], [320, 4, 1, "", "form_tag"]], "mp.math_model_pf_accs": [[321, 4, 1, "", "add_node_balance_constraints"], [321, 4, 1, "", "form_name"], [321, 4, 1, "", "form_tag"]], "mp.math_model_pf_acpi": [[322, 4, 1, "", "add_node_balance_constraints"], [322, 4, 1, "", "form_name"], [322, 4, 1, "", "form_tag"]], "mp.math_model_pf_acps": [[323, 4, 1, "", "add_node_balance_constraints"], [323, 4, 1, "", "fd_jac_approx"], [323, 4, 1, "", "fdpf_B_matrix_models"], [323, 4, 1, "", "form_name"], [323, 4, 1, "", "form_tag"], [323, 4, 1, "", "gs_x_update"], [323, 4, 1, "", "zg_x_update"]], "mp.math_model_pf_dc": [[324, 4, 1, "", "add_node_balance_constraints"], [324, 4, 1, "", "form_name"], [324, 4, 1, "", "form_tag"], [324, 4, 1, "", "math_model_pf_dc"], [324, 4, 1, "", "solve_opts"]], "mp.mm_element": [[325, 4, 1, "", "add_constraints"], [325, 4, 1, "", "add_costs"], [325, 4, 1, "", "add_vars"], [325, 4, 1, "", "data_model_element"], [325, 4, 1, "", "data_model_update"], [325, 4, 1, "", "data_model_update_off"], [325, 4, 1, "", "data_model_update_on"], [325, 4, 1, "", "name"], [325, 4, 1, "", "network_model_element"]], "mp.mm_shared_opf_legacy": [[326, 4, 1, "", "add_legacy_cost"], [326, 4, 1, "", "add_legacy_user_constraints"], [326, 4, 1, "", "add_legacy_user_constraints_ac"], [326, 4, 1, "", "add_legacy_user_costs"], [326, 4, 1, "", "add_legacy_user_vars"], [326, 4, 1, "", "build_legacy"], [326, 4, 1, "", "def_set_types_legacy"], [326, 4, 1, "", "eval_legacy_cost"], [326, 4, 1, "", "get_mpc"], [326, 4, 1, "", "init_set_types_legacy"], [326, 4, 1, "", "params_legacy_cost"]], "mp.mm_shared_pfcpf": [[327, 4, 1, "", "build_aux_data"]], "mp.mm_shared_pfcpf_ac": [[328, 4, 1, "", "add_system_varset_pf"], [328, 4, 1, "", "update_z"]], "mp.mm_shared_pfcpf_ac_i": [[329, 4, 1, "", "build_aux_data_i"]], "mp.mm_shared_pfcpf_acc": [[330, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acci": [[331, 4, 1, "", "add_system_vars_pf"], [331, 4, 1, "", "build_aux_data"], [331, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_accs": [[332, 4, 1, "", "add_system_vars_pf"], [332, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acp": [[333, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acpi": [[334, 4, 1, "", "add_system_vars_pf"], [334, 4, 1, "", "build_aux_data"], [334, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acps": [[335, 4, 1, "", "add_system_vars_pf"], [335, 4, 1, "", "build_aux_data"], [335, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_dc": [[336, 4, 1, "", "add_system_vars_pf"], [336, 4, 1, "", "build_aux_data"], [336, 4, 1, "", "convert_x_m2n"], [336, 4, 1, "", "update_z"]], "mp.mme_branch": [[337, 4, 1, "", "name"]], "mp.mme_branch_opf": [[338, 4, 1, "", "ang_diff_params"], [338, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_ac": [[339, 4, 1, "", "add_constraints"], [339, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_opf_acc": [[340, 4, 1, "", "add_constraints"], [340, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_acp": [[341, 4, 1, "", "add_constraints"]], "mp.mme_branch_opf_dc": [[342, 4, 1, "", "add_constraints"], [342, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_ac": [[343, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_dc": [[344, 4, 1, "", "data_model_update_on"]], "mp.mme_bus": [[345, 4, 1, "", "name"]], "mp.mme_bus3p": [[346, 4, 1, "", "data_model_update_on"], [346, 4, 1, "", "name"]], "mp.mme_bus3p_opf_acc": [[347, 4, 1, "", "interior_x0"]], "mp.mme_bus3p_opf_acp": [[348, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_ac": [[349, 4, 1, "", "interior_vm"]], "mp.mme_bus_opf_acc": [[350, 4, 1, "", "add_constraints"], [350, 4, 1, "", "data_model_update_on"], [350, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_acp": [[351, 4, 1, "", "data_model_update_on"], [351, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_dc": [[352, 4, 1, "", "data_model_update_on"], [352, 4, 1, "", "interior_x0"]], "mp.mme_bus_pf_ac": [[353, 4, 1, "", "data_model_update_on"]], "mp.mme_bus_pf_dc": [[354, 4, 1, "", "data_model_update_on"]], "mp.mme_buslink": [[355, 4, 1, "", "name"]], "mp.mme_buslink_opf": [[356, 4, 1, "", "interior_x0"]], "mp.mme_buslink_opf_acc": [[357, 4, 1, "", "add_constraints"], [357, 4, 1, "", "va_fcn"], [357, 4, 1, "", "va_hess"], [357, 4, 1, "", "vm2_fcn"], [357, 4, 1, "", "vm2_hess"]], "mp.mme_buslink_opf_acp": [[358, 4, 1, "", "add_constraints"]], "mp.mme_buslink_pf_ac": [[359, 4, 1, "", "add_constraints"], [359, 4, 1, "", "add_vars"], [359, 4, 1, "", "voltage_constraints"]], "mp.mme_buslink_pf_acc": [[360, 4, 1, "", "add_constraints"], [360, 4, 1, "", "pf_va_fcn"], [360, 4, 1, "", "pf_vm_fcn"]], "mp.mme_buslink_pf_acp": [[361, 4, 1, "", "add_constraints"]], "mp.mme_gen": [[362, 4, 1, "", "name"]], "mp.mme_gen3p": [[363, 4, 1, "", "data_model_update_on"], [363, 4, 1, "", "name"]], "mp.mme_gen3p_opf": [[364, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf": [[365, 4, 1, "", "add_costs"], [365, 4, 1, "", "add_vars"], [365, 2, 1, "", "cost"], [365, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf_ac": [[366, 4, 1, "", "add_constraints"], [366, 4, 1, "", "add_costs"], [366, 4, 1, "", "build_cost_params"], [366, 4, 1, "", "data_model_update_on"], [366, 4, 1, "", "disp_load_constant_pf_constraint"], [366, 4, 1, "", "has_pq_cap"], [366, 4, 1, "", "pq_capability_constraint"]], "mp.mme_gen_opf_dc": [[367, 4, 1, "", "add_constraints"], [367, 4, 1, "", "build_cost_params"], [367, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_ac": [[368, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_dc": [[369, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline": [[370, 4, 1, "", "name"]], "mp.mme_legacy_dcline_opf": [[371, 4, 1, "", "add_constraints"], [371, 4, 1, "", "add_costs"], [371, 4, 1, "", "add_vars"], [371, 4, 1, "", "build_cost_params"], [371, 2, 1, "", "cost"], [371, 4, 1, "", "interior_x0"]], "mp.mme_legacy_dcline_opf_ac": [[372, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_opf_dc": [[373, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_ac": [[374, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_dc": [[375, 4, 1, "", "data_model_update_on"]], "mp.mme_line3p": [[376, 4, 1, "", "data_model_update_on"], [376, 4, 1, "", "name"]], "mp.mme_line3p_opf": [[377, 4, 1, "", "interior_x0"]], "mp.mme_load": [[378, 4, 1, "", "name"]], "mp.mme_load_cpf": [[379, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_ac": [[380, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_dc": [[381, 4, 1, "", "data_model_update_on"]], "mp.mme_reserve_gen": [[382, 4, 1, "", "add_constraints"], [382, 4, 1, "", "add_costs"], [382, 4, 1, "", "add_vars"], [382, 4, 1, "", "data_model_update_on"], [382, 4, 1, "", "name"]], "mp.mme_reserve_zone": [[383, 4, 1, "", "add_constraints"], [383, 4, 1, "", "data_model_update_on"], [383, 4, 1, "", "name"]], "mp.mme_shunt": [[384, 4, 1, "", "name"]], "mp.mme_shunt_cpf": [[385, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_ac": [[386, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_dc": [[387, 4, 1, "", "data_model_update_on"]], "mp.mme_xfmr3p": [[388, 4, 1, "", "data_model_update_on"], [388, 4, 1, "", "name"]], "mp.mme_xfmr3p_opf": [[389, 4, 1, "", "interior_x0"]], "mp.net_model": [[390, 4, 1, "", "add_node"], [390, 4, 1, "", "add_nodes"], [390, 4, 1, "", "add_port"], [390, 4, 1, "", "add_state"], [390, 4, 1, "", "add_states"], [390, 4, 1, "", "add_var"], [390, 4, 1, "", "add_vvars"], [390, 4, 1, "", "add_zvars"], [390, 4, 1, "", "build"], [390, 4, 1, "", "build_params"], [390, 4, 1, "", "def_set_types"], [390, 4, 1, "", "display"], [390, 4, 1, "", "ensure_ref_node"], [390, 4, 1, "", "get_node_idx"], [390, 4, 1, "", "get_port_idx"], [390, 4, 1, "", "get_state_idx"], [390, 4, 1, "", "init_set_types"], [390, 4, 1, "", "name"], [390, 2, 1, "", "node"], [390, 4, 1, "", "node_types"], [390, 4, 1, "", "np"], [390, 2, 1, "", "nv"], [390, 4, 1, "", "nz"], [390, 4, 1, "", "params_var"], [390, 2, 1, "", "port"], [390, 4, 1, "", "set_node_type_pq"], [390, 4, 1, "", "set_node_type_pv"], [390, 4, 1, "", "set_node_type_ref"], [390, 4, 1, "", "set_type_idx_map"], [390, 4, 1, "", "set_type_label"], [390, 4, 1, "", "stack_matrix_params"], [390, 4, 1, "", "stack_vector_params"], [390, 2, 1, "", "state"], [390, 2, 1, "", "the_np"], [390, 2, 1, "", "the_nz"]], "mp.net_model_ac": [[391, 4, 1, "", "build_params"], [391, 4, 1, "", "def_set_types"], [391, 4, 1, "", "get_va"], [391, 4, 1, "", "nodal_complex_current_balance"], [391, 4, 1, "", "nodal_complex_current_balance_hess"], [391, 4, 1, "", "nodal_complex_power_balance"], [391, 4, 1, "", "nodal_complex_power_balance_hess"], [391, 4, 1, "", "port_inj_nln"], [391, 4, 1, "", "port_inj_nln_hess"], [391, 4, 1, "", "port_inj_soln"]], "mp.net_model_acc": [[392, 4, 1, "", "def_set_types"], [392, 4, 1, "", "initial_voltage_angle"], [392, 4, 1, "", "net_model_acc"]], "mp.net_model_acp": [[393, 4, 1, "", "def_set_types"], [393, 4, 1, "", "initial_voltage_angle"], [393, 4, 1, "", "net_model_acp"]], "mp.net_model_dc": [[394, 4, 1, "", "build_params"], [394, 4, 1, "", "def_set_types"], [394, 4, 1, "", "net_model_dc"], [394, 4, 1, "", "port_inj_soln"], [394, 2, 1, "", "va"], [394, 2, 1, "", "z"]], "mp.nm_element": [[395, 2, 1, "", "C"], [395, 2, 1, "", "D"], [395, 4, 1, "", "add_nodes"], [395, 4, 1, "", "add_states"], [395, 4, 1, "", "add_vvars"], [395, 4, 1, "", "add_zvars"], [395, 4, 1, "", "build_params"], [395, 4, 1, "", "count"], [395, 4, 1, "", "data_model_element"], [395, 4, 1, "", "display"], [395, 4, 1, "", "get_nv_"], [395, 4, 1, "", "incidence_matrix"], [395, 4, 1, "", "math_model_element"], [395, 4, 1, "", "name"], [395, 2, 1, "", "nk"], [395, 4, 1, "", "nn"], [395, 4, 1, "", "node_indices"], [395, 4, 1, "", "node_types"], [395, 4, 1, "", "np"], [395, 4, 1, "", "nz"], [395, 4, 1, "", "set_node_type_pq"], [395, 4, 1, "", "set_node_type_pv"], [395, 4, 1, "", "set_node_type_ref"], [395, 2, 1, "", "soln"], [395, 4, 1, "", "x2vz"]], "mp.nme_branch": [[396, 4, 1, "", "name"], [396, 4, 1, "", "np"]], "mp.nme_branch_ac": [[397, 4, 1, "", "build_params"]], "mp.nme_branch_acc": [[398, 4, 1, "", "ang_diff_fcn"], [398, 4, 1, "", "ang_diff_hess"]], "mp.nme_branch_dc": [[400, 4, 1, "", "build_params"]], "mp.nme_bus": [[401, 4, 1, "", "name"], [401, 4, 1, "", "nn"], [401, 4, 1, "", "node_types"], [401, 4, 1, "", "set_node_type_pq"], [401, 4, 1, "", "set_node_type_pv"], [401, 4, 1, "", "set_node_type_ref"]], "mp.nme_bus3p": [[402, 4, 1, "", "name"], [402, 4, 1, "", "nn"], [402, 4, 1, "", "node_types"]], "mp.nme_bus3p_acc": [[403, 4, 1, "", "add_vvars"]], "mp.nme_bus3p_acp": [[404, 4, 1, "", "add_vvars"]], "mp.nme_bus_acc": [[405, 4, 1, "", "add_vvars"]], "mp.nme_bus_acp": [[406, 4, 1, "", "add_vvars"]], "mp.nme_bus_dc": [[407, 4, 1, "", "add_vvars"]], "mp.nme_buslink": [[408, 4, 1, "", "add_zvars"], [408, 4, 1, "", "build_params"], [408, 4, 1, "", "name"], [408, 4, 1, "", "np"], [408, 4, 1, "", "nz"], [408, 4, 1, "", "voltage_constraints"]], "mp.nme_gen": [[411, 4, 1, "", "name"], [411, 4, 1, "", "np"], [411, 4, 1, "", "nz"]], "mp.nme_gen3p": [[412, 4, 1, "", "add_zvars"], [412, 4, 1, "", "build_params"], [412, 4, 1, "", "name"], [412, 4, 1, "", "np"], [412, 4, 1, "", "nz"]], "mp.nme_gen_ac": [[415, 4, 1, "", "add_zvars"], [415, 4, 1, "", "build_params"]], "mp.nme_gen_dc": [[418, 4, 1, "", "add_zvars"], [418, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline": [[419, 4, 1, "", "name"], [419, 4, 1, "", "np"], [419, 4, 1, "", "nz"]], "mp.nme_legacy_dcline_ac": [[420, 4, 1, "", "add_zvars"], [420, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline_dc": [[423, 4, 1, "", "add_zvars"], [423, 4, 1, "", "build_params"]], "mp.nme_line3p": [[424, 4, 1, "", "build_params"], [424, 4, 1, "", "name"], [424, 4, 1, "", "np"], [424, 4, 1, "", "vec2symmat_stacked"]], "mp.nme_load": [[425, 4, 1, "", "name"], [425, 4, 1, "", "np"]], "mp.nme_load3p": [[426, 4, 1, "", "build_params"], [426, 4, 1, "", "name"], [426, 4, 1, "", "np"]], "mp.nme_load_ac": [[427, 4, 1, "", "build_params"], [427, 4, 1, "", "port_inj_current_nln"], [427, 4, 1, "", "port_inj_power_nln"]], "mp.nme_load_dc": [[430, 4, 1, "", "build_params"]], "mp.nme_shunt": [[431, 4, 1, "", "name"], [431, 4, 1, "", "np"]], "mp.nme_shunt_ac": [[432, 4, 1, "", "build_params"]], "mp.nme_shunt_dc": [[435, 4, 1, "", "build_params"]], "mp.nme_xfmr3p": [[436, 4, 1, "", "build_params"], [436, 4, 1, "", "name"], [436, 4, 1, "", "np"]], "mp.task": [[437, 4, 1, "", "data_model_build"], [437, 4, 1, "", "data_model_build_post"], [437, 4, 1, "", "data_model_build_pre"], [437, 4, 1, "", "data_model_class"], [437, 4, 1, "", "data_model_class_default"], [437, 4, 1, "", "data_model_create"], [437, 2, 1, "", "dm"], [437, 4, 1, "", "dm_converter_build"], [437, 4, 1, "", "dm_converter_class"], [437, 4, 1, "", "dm_converter_class_mpc2_default"], [437, 4, 1, "", "dm_converter_create"], [437, 2, 1, "", "dmc"], [437, 2, 1, "", "et"], [437, 2, 1, "", "i_dm"], [437, 2, 1, "", "i_mm"], [437, 2, 1, "", "i_nm"], [437, 4, 1, "", "math_model_build"], [437, 4, 1, "", "math_model_class"], [437, 4, 1, "", "math_model_class_default"], [437, 4, 1, "", "math_model_create"], [437, 4, 1, "", "math_model_opt"], [437, 2, 1, "", "message"], [437, 2, 1, "", "mm"], [437, 2, 1, "", "mm_opt"], [437, 2, 1, "", "name"], [437, 4, 1, "", "network_model_build"], [437, 4, 1, "", "network_model_build_post"], [437, 4, 1, "", "network_model_build_pre"], [437, 4, 1, "", "network_model_class"], [437, 4, 1, "", "network_model_class_default"], [437, 4, 1, "", "network_model_create"], [437, 4, 1, "", "network_model_update"], [437, 4, 1, "", "network_model_x_soln"], [437, 4, 1, "", "next_dm"], [437, 4, 1, "", "next_mm"], [437, 4, 1, "", "next_nm"], [437, 2, 1, "", "nm"], [437, 4, 1, "", "print_soln"], [437, 4, 1, "", "print_soln_header"], [437, 4, 1, "", "run"], [437, 4, 1, "", "run_post"], [437, 4, 1, "", "run_pre"], [437, 4, 1, "", "save_soln"], [437, 2, 1, "", "success"], [437, 2, 1, "", "tag"]], "mp.task_cpf": [[438, 4, 1, "", "data_model_build"], [438, 4, 1, "", "data_model_class_default"], [438, 4, 1, "", "dm_converter_class"], [438, 4, 1, "", "math_model_class_default"], [438, 4, 1, "", "math_model_opt"], [438, 4, 1, "", "network_model_build"], [438, 4, 1, "", "network_model_update"], [438, 4, 1, "", "network_model_x_soln"], [438, 4, 1, "", "next_mm"], [438, 4, 1, "", "run_pre"], [438, 4, 1, "", "task_cpf"], [438, 2, 1, "", "warmstart"]], "mp.task_cpf_legacy": [[439, 4, 1, "", "legacy_post_run"], [439, 4, 1, "", "run_post"], [439, 4, 1, "", "run_pre"]], "mp.task_opf": [[440, 4, 1, "", "data_model_build_post"], [440, 4, 1, "", "data_model_class_default"], [440, 2, 1, "", "dc"], [440, 4, 1, "", "math_model_class_default"], [440, 4, 1, "", "network_model_class_default"], [440, 4, 1, "", "print_soln_header"], [440, 4, 1, "", "run_pre"]], "mp.task_opf_legacy": [[441, 4, 1, "", "data_model_build_post"], [441, 4, 1, "", "dm_converter_class_mpc2_default"], [441, 4, 1, "", "legacy_post_run"], [441, 4, 1, "", "math_model_class_default"], [441, 4, 1, "", "run_post"], [441, 4, 1, "", "run_pre"]], "mp.task_pf": [[442, 2, 1, "", "dc"], [442, 4, 1, "", "enforce_q_lims"], [442, 2, 1, "", "fixed_q_idx"], [442, 2, 1, "", "fixed_q_qty"], [442, 2, 1, "", "iterations"], [442, 4, 1, "", "math_model_class_default"], [442, 2, 1, "", "name"], [442, 4, 1, "", "network_model_build_post"], [442, 4, 1, "", "network_model_class_default"], [442, 4, 1, "", "network_model_x_soln"], [442, 4, 1, "", "next_dm"], [442, 2, 1, "", "ref"], [442, 2, 1, "", "ref0"], [442, 4, 1, "", "run_pre"], [442, 2, 1, "", "tag"], [442, 2, 1, "", "va_ref0"]], "mp.task_pf_legacy": [[443, 4, 1, "", "legacy_post_run"], [443, 4, 1, "", "run_post"], [443, 4, 1, "", "run_pre"]], "mp.task_shared_legacy": [[444, 4, 1, "", "run_pre_legacy"]], "mp.xt_3p": [[445, 4, 1, "", "dm_element_classes"], [445, 4, 1, "", "dmc_element_classes"], [445, 4, 1, "", "mm_element_classes"], [445, 4, 1, "", "nm_element_classes"]], "mp.xt_legacy_dcline": [[446, 4, 1, "", "dm_element_classes"], [446, 4, 1, "", "dmc_element_classes"], [446, 4, 1, "", "mm_element_classes"], [446, 4, 1, "", "nm_element_classes"]], "mp.xt_reserves": [[447, 4, 1, "", "dm_element_classes"], [447, 4, 1, "", "dmc_element_classes"], [447, 4, 1, "", "mm_element_classes"]], "mp_idx_manager": [[105, 4, 1, "", "add_named_set"], [105, 4, 1, "", "copy"], [105, 4, 1, "", "describe_idx"], [105, 4, 1, "", "display_set"], [105, 4, 1, "", "get"], [105, 4, 1, "", "getN"], [105, 4, 1, "", "get_idx"], [105, 4, 1, "", "get_userdata"], [105, 4, 1, "", "init_indexed_name"], [105, 4, 1, "", "init_set_types"], [105, 4, 1, "", "mp_idx_manager"], [105, 4, 1, "", "set_type_idx_map"], [105, 4, 1, "", "valid_named_set_type"]], "mp_table": [[448, 4, 1, "", "display"], [448, 4, 1, "", "end"], [448, 3, 1, "", "extract_named_args"], [448, 4, 1, "", "horzcat"], [448, 4, 1, "", "isempty"], [448, 4, 1, "", "istable"], [448, 4, 1, "", "mp_table"], [448, 4, 1, "", "size"], [448, 4, 1, "", "subsasgn"], [448, 4, 1, "", "subsref"], [448, 4, 1, "", "vertcat"]], "mp_table_subclass": [[449, 4, 1, "", "get_table"], [449, 4, 1, "", "set_table"]], "opt_model": [[106, 4, 1, "", "add_lin_constraint"], [106, 4, 1, "", "add_named_set"], [106, 4, 1, "", "add_nln_constraint"], [106, 4, 1, "", "add_nln_cost"], [106, 4, 1, "", "add_quad_cost"], [106, 4, 1, "", "add_var"], [106, 4, 1, "", "def_set_types"], [106, 4, 1, "", "display"], [106, 4, 1, "", "display_soln"], [106, 4, 1, "", "eval_lin_constraint"], [106, 4, 1, "", "eval_nln_constraint"], [106, 4, 1, "", "eval_nln_constraint_hess"], [106, 4, 1, "", "eval_nln_cost"], [106, 4, 1, "", "eval_quad_cost"], [106, 4, 1, "", "get_idx"], [106, 4, 1, "", "get_soln"], [106, 4, 1, "", "has_parsed_soln"], [106, 4, 1, "", "init_indexed_name"], [106, 4, 1, "", "init_set_types"], [106, 4, 1, "", "is_mixed_integer"], [106, 4, 1, "", "is_solved"], [106, 2, 1, "", "lin"], [106, 2, 1, "", "nlc"], [106, 2, 1, "", "nle"], [106, 2, 1, "", "nli"], [106, 4, 1, "", "opt_model"], [106, 4, 1, "", "params_lin_constraint"], [106, 4, 1, "", "params_nln_constraint"], [106, 4, 1, "", "params_nln_cost"], [106, 4, 1, "", "params_quad_cost"], [106, 4, 1, "", "params_var"], [106, 4, 1, "", "parse_soln"], [106, 2, 1, "", "prob_type"], [106, 4, 1, "", "problem_type"], [106, 2, 1, "", "qdc"], [106, 4, 1, "", "set_params"], [106, 2, 1, "", "soln"], [106, 4, 1, "", "solve"], [106, 2, 1, "", "var"], [106, 4, 1, "", "varsets_cell2struct"], [106, 4, 1, "", "varsets_idx"], [106, 4, 1, "", "varsets_len"], [106, 4, 1, "", "varsets_x"]]}, "objtypes": {"0": "mat:function", "1": "mat:class", "2": "mat:attribute", "3": "mat:staticmethod", "4": "mat:method"}, "objnames": {"0": ["mat", "function", "MATLAB function"], "1": ["mat", "class", "MATLAB class"], "2": ["mat", "attribute", "MATLAB attribute"], "3": ["mat", "staticmethod", "MATLAB static method"], "4": ["mat", "method", "MATLAB method"]}, "titleterms": {"acknowledg": [0, 232], "architectur": 1, "overview": [1, 20], "m": [1, 2, 5, 6, 20, 234, 456, 458], "span": [1, 2, 5, 6, 20, 234, 456, 458], "style": [1, 2, 5, 6, 20, 234, 456, 458], "font": [1, 2, 5, 6, 20, 234, 456, 458], "size": [1, 2, 5, 6, 20, 234, 456, 458], "smaller": [1, 2, 5, 6, 20, 234, 456, 458], "atpow": [1, 2, 5, 6, 20, 234, 456, 458], "matpow": [1, 2, 5, 6, 20, 234, 456, 458], "object": [1, 3, 4, 7, 8, 11], "instanc": 1, "class": [1, 2, 7, 216, 234], "hierarchi": 1, "two": 1, "framework": [1, 458], "custom": [1, 2, 16], "default": 2, "determin": 2, "task": [2, 11, 16, 234, 437], "model": [2, 3, 4, 7, 8, 11, 16, 18, 215, 216, 234], "data": [2, 3, 4, 7, 16, 18, 19, 234], "convert": [2, 4, 11, 16, 18, 234], "specif": [2, 4], "method": [2, 3, 11], "element": [2, 3, 4, 7, 8, 16, 18, 234], "modifi": 2, "via": 2, "option": [2, 216], "extens": [2, 17, 18, 234, 290], "build": [3, 4, 7, 8, 11, 12, 16], "system": 3, "level": [3, 450], "paramet": [3, 8, 18], "print": [3, 16], "tabl": [3, 16], "properti": 3, "connect": [3, 16], "import": [4, 16], "export": [4, 16], "variabl": [4, 7, 16], "map": [4, 16], "valu": [4, 16], "develop": [5, 6], "": [5, 36, 103, 215, 232, 458], "manual": [5, 12, 20, 36, 103, 215, 232, 456, 458], "introduct": [6, 457], "environ": 6, "github": 6, "repositori": 6, "convent": 6, "mathemat": [7, 16, 18, 234], "solv": 7, "math": 7, "updat": [7, 12, 16], "network": [7, 8, 16, 18, 234], "ad": 7, "constraint": 7, "cost": 7, "share": 7, "formul": [8, 16, 18], "dc": [8, 16, 234], "ac": [8, 16, 18], "complex": 8, "power": [8, 16, 19], "inject": 8, "current": 8, "node": 8, "type": [8, 16, 18], "exampl": [8, 19, 37, 104, 216], "bu": 8, "gener": 8, "branch": 8, "load": 8, "aggreg": 8, "notat": 9, "refer": [10, 12, 36, 37, 103, 104, 215, 216, 233, 456], "run": [11, 19], "iter": 11, "execut": 11, "other": [11, 20, 37, 104, 233, 450], "how": [12, 16, 17, 19, 20], "document": [12, 20, 232], "util": [12, 216], "function": [12, 16, 37, 104, 216, 233, 450], "generate_autodoc_stub": 13, "generate_matpower_autodoc": 14, "generate_source_symlink": 15, "creat": [16, 17], "new": [16, 458], "transmiss": 16, "line": [16, 234], "name": 16, "main": [16, 37, 104], "output": 16, "stage": 16, "pretti": 16, "opf": [16, 234], "subclass": 16, "field": 16, "sourc": 16, "all": [16, 18], "cartesian": [16, 18], "v": [16, 18], "polar": [16, 18], "flow": [16, 19], "optim": 16, "us": [16, 17], "see": [16, 17], "also": [16, 17], "an": 17, "A": 18, "test": [18, 37, 104, 216, 232, 233], "gizmo": 18, "3": 18, "port": 18, "compon": 18, "three": [19, 234], "phase": [19, 234], "format": 19, "case": 19, "To": 20, "guid": 20, "link": 20, "have_feature_lu_vec": 21, "have_feature_pardiso": 22, "have_feature_pardiso_legaci": 23, "have_feature_pardiso_object": 24, "mip": [25, 36, 37], "mips_example1": 26, "mips_example2": 27, "mipsver": 28, "mplinsolv": 29, "qps_mip": 30, "t_mip": 31, "t_mips_pardiso": 32, "t_mplinsolv": 33, "t_qps_mip": 34, "test_mip": 35, "user": [36, 103, 215, 232, 458], "privat": [37, 104, 216, 233], "addgen2mpc": 38, "addstorag": 39, "addwind": 40, "apply_profil": 41, "c118swf": 42, "ex_case3a": 43, "ex_case3b": 44, "ex_contab": 45, "ex_load_profil": 46, "ex_storag": 47, "ex_transmat": 48, "ex_wind": 49, "ex_wind_profil": 50, "ex_wind_profile_d": 51, "ex_wind_uc": 52, "ex_xgd": 53, "ex_xgd_ramp": 54, "ex_xgd_r": 55, "ex_xgd_uc": 56, "filter_ramp_transit": 57, "getprofil": 58, "idx_profil": 59, "loadgenericdata": 60, "loadmd": 61, "loadstoragedata": 62, "loadxgendata": 63, "md_init": 64, "most": [65, 103, 104], "most_ex1_": 66, "most_ex2_dcopf": 67, "most_ex3_dcopf_w_uc": 68, "most_ex4_dcopf_ss": 69, "most_ex5_mpopf": 70, "most_ex6_uc": 71, "most_ex7_suc": 72, "most_summari": 73, "mostver": 74, "mpoption_info_most": 75, "plot_gen": 76, "plot_storag": 77, "plot_uc": 78, "plot_uc_data": 79, "t_case30_most": 80, "t_case3_most": 81, "t_case_tlmp": 82, "t_case_tlmp_storag": 83, "t_most_30b_1_1_0": 84, "t_most_30b_1_1_0_uc": 85, "t_most_30b_1_1_17": 86, "t_most_30b_3_1_0": 87, "t_most_30b_3_1_17": 88, "t_most_3b_1_1_0": 89, "t_most_3b_1_1_2": 90, "t_most_3b_3_1_0": 91, "t_most_3b_3_1_2": 92, "t_most_fixed_r": 93, "t_most_mpopf": 94, "t_most_sp": 95, "t_most_spuc": 96, "t_most_suc": 97, "t_most_tlmp": 98, "t_most_uc": 99, "t_most_w_d": 100, "test_most": 101, "uniformwindprofil": 102, "mp_idx_manag": 105, "opt_model": 106, "convert_lin_constraint": 107, "convert_lin_constraint_multipli": 108, "cplex_opt": 109, "glpk_option": 110, "gurobi_opt": 111, "gurobiv": 112, "have_feature_bpmpd": 113, "have_feature_catchm": 114, "have_feature_clp": 115, "have_feature_cplex": 116, "have_feature_evalc": 117, "have_feature_fmincon": 118, "have_feature_fmincon_ipm": 119, "have_feature_fsolv": 120, "have_feature_glpk": 121, "have_feature_gurobi": 122, "have_feature_intlinprog": 123, "have_feature_ipopt": 124, "have_feature_ipopt_auxdata": 125, "have_feature_isequaln": 126, "have_feature_knitro": 127, "have_feature_knitromatlab": 128, "have_feature_ktrlink": 129, "have_feature_linprog": 130, "have_feature_linprog_d": 131, "have_feature_mosek": 132, "have_feature_opti_clp": 133, "have_feature_optim": 134, "have_feature_optimopt": 135, "have_feature_osqp": 136, "have_feature_quadprog": 137, "have_feature_quadprog_l": 138, "have_feature_sdpt3": 139, "have_feature_sedumi": 140, "have_feature_yalmip": 141, "ipopt_opt": 142, "miqps_cplex": 143, "miqps_glpk": 144, "miqps_gurobi": 145, "miqps_mast": 146, "miqps_mosek": 147, "miqps_ot": 148, "mosek_opt": 149, "mosek_symbcon": 150, "mpomver": 151, "mpopt2nleqopt": 152, "mpopt2nlpopt": 153, "mpopt2pneopt": 154, "mpopt2qpopt": 155, "nested_struct_copi": 156, "nleqs_cor": 157, "nleqs_fd_newton": 158, "nleqs_fsolv": 159, "nleqs_gauss_seidel": 160, "nleqs_mast": 161, "nleqs_master_ex1": 162, "nleqs_master_ex2": 163, "nleqs_newton": 164, "nlp_consfcn": 165, "nlp_costfcn": 166, "nlp_hessfcn": 167, "nlps_fmincon": 168, "nlps_ipopt": 169, "nlps_knitro": 170, "nlps_master": 171, "nlps_master_ex1": 172, "nlps_master_ex2": 173, "osqp_opt": 174, "osqpver": 175, "pne_callback_default": 176, "pne_callback_nos": 177, "pne_callback_target_lam": 178, "pne_detect_ev": 179, "pne_detected_ev": 180, "pne_event_nos": 181, "pne_event_target_lam": 182, "pne_ex1": 183, "pne_pfcn_arc_len": 184, "pne_pfcn_natur": 185, "pne_pfcn_pseudo_arc_len": 186, "pne_register_callback": 187, "pne_register_ev": 188, "pnes_mast": 189, "qp_ex1": 190, "qps_bpmpd": 191, "qps_clp": 192, "qps_cplex": 193, "qps_glpk": 194, "qps_gurobi": 195, "qps_ipopt": 196, "qps_master": 197, "qps_mosek": 198, "qps_osqp": 199, "qps_ot": 200, "t_miqps_mast": 201, "t_nested_struct_copi": 202, "t_nleqs_mast": 203, "t_nlps_master": 204, "t_om_solve_leq": 205, "t_om_solve_miqp": 206, "t_om_solve_nleq": 207, "t_om_solve_nlp": 208, "t_om_solve_pn": 209, "t_om_solve_qp": 210, "t_opt_model": 211, "t_pnes_mast": 212, "t_qps_master": 213, "test_mp_opt_model": 214, "mp": [215, 216, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "opt": [215, 216], "mpom": [215, 216], "master": 216, "handl": 216, "version": 216, "inform": 216, "solver": 216, "interfac": 216, "implement": 216, "miqp": 216, "nleq": 216, "nlp": 216, "pne": 216, "lp": 216, "qp": 216, "have_featur": 217, "have_feature_matlab": 218, "have_feature_octav": 219, "mptestver": 220, "t_begin": 221, "t_end": 222, "t_file_match": 223, "t_have_featur": 224, "t_i": 225, "t_ok": 226, "t_run_test": 227, "t_skip": 228, "t_str_match": 229, "t_test_fcn": 230, "test_mptest": 231, "instal": 232, "usag": 232, "contribut": 232, "licens": 232, "core": 234, "legaci": [234, 458], "contain": 234, "mixin": 234, "miscellan": 234, "base": 234, "fix": 234, "zonal": 234, "reserv": 234, "prototyp": 234, "node_typ": 235, "cost_tabl": 236, "cost_table_util": 237, "data_model": 238, "data_model_cpf": 239, "data_model_opf": 240, "dm_convert": 241, "dm_converter_mpc2": 242, "dm_converter_mpc2_legaci": 243, "dm_element": 244, "dmc_element": 245, "dmce_branch_mpc2": 246, "dmce_bus3p_mpc2": 247, "dmce_bus_mpc2": 248, "dmce_buslink_mpc2": 249, "dmce_gen3p_mpc2": 250, "dmce_gen_mpc2": 251, "dmce_legacy_dcline_mpc2": 252, "dmce_line3p_mpc2": 253, "dmce_load3p_mpc2": 254, "dmce_load_mpc2": 255, "dmce_reserve_gen_mpc2": 256, "dmce_reserve_zone_mpc2": 257, "dmce_shunt_mpc2": 258, "dmce_xfmr3p_mpc2": 259, "dme_branch": 260, "dme_branch_opf": 261, "dme_bu": 262, "dme_bus3p": 263, "dme_bus3p_opf": 264, "dme_bus_opf": 265, "dme_buslink": 266, "dme_buslink_opf": 267, "dme_gen": 268, "dme_gen3p": 269, "dme_gen3p_opf": 270, "dme_gen_opf": 271, "dme_legacy_dclin": 272, "dme_legacy_dcline_opf": 273, "dme_line3p": 274, "dme_line3p_opf": 275, "dme_load": 276, "dme_load3p": 277, "dme_load3p_opf": 278, "dme_load_cpf": 279, "dme_load_opf": 280, "dme_reserve_gen": 281, "dme_reserve_zon": 282, "dme_shared_opf": 283, "dme_shunt": 284, "dme_shunt_cpf": 285, "dme_shunt_opf": 286, "dme_xfmr3p": 287, "dme_xfmr3p_opf": 288, "element_contain": 289, "form": 291, "form_ac": 292, "form_acc": 293, "form_acp": 294, "form_dc": 295, "mapped_arrai": 296, "math_model": 297, "math_model_cpf_acc": [298, 300], "math_model_cpf_acci": 299, "math_model_cpf_acp": [301, 303], "math_model_cpf_acpi": 302, "math_model_opf": 304, "math_model_opf_ac": 305, "math_model_opf_acc": [306, 309], "math_model_opf_acci": 307, "math_model_opf_acci_legaci": 308, "math_model_opf_accs_legaci": 310, "math_model_opf_acp": [311, 314], "math_model_opf_acpi": 312, "math_model_opf_acpi_legaci": 313, "math_model_opf_acps_legaci": 315, "math_model_opf_dc": 316, "math_model_opf_dc_legaci": 317, "math_model_pf": 318, "math_model_pf_ac": 319, "math_model_pf_acci": 320, "math_model_pf_acc": 321, "math_model_pf_acpi": 322, "math_model_pf_acp": 323, "math_model_pf_dc": 324, "mm_element": 325, "mm_shared_opf_legaci": 326, "mm_shared_pfcpf": 327, "mm_shared_pfcpf_ac": 328, "mm_shared_pfcpf_ac_i": 329, "mm_shared_pfcpf_acc": [330, 332], "mm_shared_pfcpf_acci": 331, "mm_shared_pfcpf_acp": [333, 335], "mm_shared_pfcpf_acpi": 334, "mm_shared_pfcpf_dc": 336, "mme_branch": 337, "mme_branch_opf": 338, "mme_branch_opf_ac": 339, "mme_branch_opf_acc": 340, "mme_branch_opf_acp": 341, "mme_branch_opf_dc": 342, "mme_branch_pf_ac": 343, "mme_branch_pf_dc": 344, "mme_bu": 345, "mme_bus3p": 346, "mme_bus3p_opf_acc": 347, "mme_bus3p_opf_acp": 348, "mme_bus_opf_ac": 349, "mme_bus_opf_acc": 350, "mme_bus_opf_acp": 351, "mme_bus_opf_dc": 352, "mme_bus_pf_ac": 353, "mme_bus_pf_dc": 354, "mme_buslink": 355, "mme_buslink_opf": 356, "mme_buslink_opf_acc": 357, "mme_buslink_opf_acp": 358, "mme_buslink_pf_ac": 359, "mme_buslink_pf_acc": 360, "mme_buslink_pf_acp": 361, "mme_gen": 362, "mme_gen3p": 363, "mme_gen3p_opf": 364, "mme_gen_opf": 365, "mme_gen_opf_ac": 366, "mme_gen_opf_dc": 367, "mme_gen_pf_ac": 368, "mme_gen_pf_dc": 369, "mme_legacy_dclin": 370, "mme_legacy_dcline_opf": 371, "mme_legacy_dcline_opf_ac": 372, "mme_legacy_dcline_opf_dc": 373, "mme_legacy_dcline_pf_ac": 374, "mme_legacy_dcline_pf_dc": 375, "mme_line3p": 376, "mme_line3p_opf": 377, "mme_load": 378, "mme_load_cpf": 379, "mme_load_pf_ac": 380, "mme_load_pf_dc": 381, "mme_reserve_gen": 382, "mme_reserve_zon": 383, "mme_shunt": 384, "mme_shunt_cpf": 385, "mme_shunt_pf_ac": 386, "mme_shunt_pf_dc": 387, "mme_xfmr3p": 388, "mme_xfmr3p_opf": 389, "net_model": 390, "net_model_ac": 391, "net_model_acc": 392, "net_model_acp": 393, "net_model_dc": 394, "nm_element": 395, "nme_branch": 396, "nme_branch_ac": 397, "nme_branch_acc": 398, "nme_branch_acp": 399, "nme_branch_dc": 400, "nme_bu": 401, "nme_bus3p": 402, "nme_bus3p_acc": 403, "nme_bus3p_acp": 404, "nme_bus_acc": 405, "nme_bus_acp": 406, "nme_bus_dc": 407, "nme_buslink": 408, "nme_buslink_acc": 409, "nme_buslink_acp": 410, "nme_gen": 411, "nme_gen3p": 412, "nme_gen3p_acc": 413, "nme_gen3p_acp": 414, "nme_gen_ac": 415, "nme_gen_acc": 416, "nme_gen_acp": 417, "nme_gen_dc": 418, "nme_legacy_dclin": 419, "nme_legacy_dcline_ac": 420, "nme_legacy_dcline_acc": 421, "nme_legacy_dcline_acp": 422, "nme_legacy_dcline_dc": 423, "nme_line3p": 424, "nme_load": 425, "nme_load3p": 426, "nme_load_ac": 427, "nme_load_acc": 428, "nme_load_acp": 429, "nme_load_dc": 430, "nme_shunt": 431, "nme_shunt_ac": 432, "nme_shunt_acc": 433, "nme_shunt_acp": 434, "nme_shunt_dc": 435, "nme_xfmr3p": 436, "task_cpf": 438, "task_cpf_legaci": 439, "task_opf": 440, "task_opf_legaci": 441, "task_pf": 442, "task_pf_legaci": 443, "task_shared_legaci": 444, "xt_3p": 445, "xt_legacy_dclin": 446, "xt_reserv": 447, "mp_tabl": 448, "mp_table_subclass": 449, "limit": 449, "top": 450, "simul": 450, "mp_table_class": 451, "run_cpf": 452, "run_mp": 453, "run_opf": 454, "run_pf": 455, "flexibl": 458}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Acknowledgments": [[0, "acknowledgments"], [232, "acknowledgments"]], "Architecture Overview": [[1, "architecture-overview"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Object Instances": [[1, "matpower-object-instances"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Class Hierarchies": [[1, "matpower-class-hierarchies"]], "Two M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Frameworks": [[1, "two-matpower-frameworks"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Customization": [[1, "matpower-customization"]], "Customizing M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{}": [[2, "customizing-matpower"]], "Default Class Determination": [[2, "default-class-determination"]], "Task Class": [[2, "task-class"]], "Model and Data Converter Classes": [[2, "model-and-data-converter-classes"]], "Class Specification Methods of a Task": [[2, "id7"]], "Element Classes": [[2, "element-classes"]], "Element Class Modifiers": [[2, "id8"]], "Customization via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Options": [[2, "customization-via-matpower-options"]], "Class Customization Options": [[2, "id9"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extensions": [[2, "matpower-extensions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Methods": [[2, "id10"]], "Data Model Object": [[3, "data-model-object"]], "Data Models": [[3, "data-models"]], "Building a Data Model": [[3, "building-a-data-model"]], "System Level Parameters": [[3, "system-level-parameters"]], "Printing a Data Model": [[3, "printing-a-data-model"]], "Data Model Elements": [[3, "data-model-elements"]], "Data Tables": [[3, "data-tables"]], "Properties": [[3, "properties"]], "Data Model Element Properties": [[3, "id6"]], "Methods": [[3, "methods"]], "Connections": [[3, "connections"]], "Data Model Converter Object": [[4, "data-model-converter-object"]], "Data Model Converters": [[4, "data-model-converters"]], "Building a Data Model Converter": [[4, "building-a-data-model-converter"]], "Importing Data": [[4, "importing-data"]], "Exporting Data": [[4, "exporting-data"]], "Data Model Converter Elements": [[4, "data-model-converter-elements"]], "Data Import Specifications": [[4, "data-import-specifications"]], "Variable Map Values": [[4, "id5"]], "Data Export Specifications": [[4, "data-export-specifications"]], "Introduction": [[6, "introduction"], [457, "introduction"]], "Development Environment": [[6, "development-environment"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} GitHub Repositories": [[6, "id1"]], "Conventions": [[6, "conventions"]], "Mathematical Model Object": [[7, "mathematical-model-object"]], "Mathematical Models": [[7, "mathematical-models"]], "Building a Mathematical Model": [[7, "building-a-mathematical-model"]], "Solving a Math Model": [[7, "solving-a-math-model"]], "Updating Network and Data Models": [[7, "updating-network-and-data-models"]], "Mathematical Model Elements": [[7, "mathematical-model-elements"]], "Adding Variables, Constraints, and Costs": [[7, "adding-variables-constraints-and-costs"]], "Updating Data Model Elements": [[7, "updating-data-model-elements"]], "Shared Classes": [[7, "shared-classes"]], "Network Model Object": [[8, "network-model-object"]], "Network Model Formulations": [[8, "network-model-formulations"]], "DC Formulation": [[8, "dc-formulation"], [16, "dc-formulation"]], "AC Formulations": [[8, "ac-formulations"], [16, "ac-formulations"], [18, "ac-formulations"]], "Complex Power Injections": [[8, "complex-power-injections"]], "Complex Current Injections": [[8, "complex-current-injections"]], "Network Models": [[8, "network-models"]], "Building a Network Model": [[8, "building-a-network-model"]], "Node Types": [[8, "node-types"]], "Network Model Elements": [[8, "network-model-elements"]], "Example Elements": [[8, "example-elements"]], "Bus": [[8, "bus"]], "Generator": [[8, "generator"]], "Branch": [[8, "branch"]], "Load": [[8, "load"]], "Building Element Parameters": [[8, "building-element-parameters"]], "Aggregation": [[8, "aggregation"]], "Notation": [[9, "notation"]], "References": [[10, "references"]], "Task Object": [[11, "task-object"]], "Running a Task": [[11, "running-a-task"]], "Building Model and Converter Objects": [[11, "building-model-and-converter-objects"]], "Iterative Execution": [[11, "iterative-execution"]], "Other Methods": [[11, "other-methods"]], "How to Build the Documentation": [[12, "how-to-build-the-documentation"]], "Updating the Reference Manual": [[12, "updating-the-reference-manual"]], "Reference Manual Utility Functions": [[12, "reference-manual-utility-functions"]], "How to Create a New Element Type": [[16, "how-to-create-a-new-element-type"]], "DC Transmission Line": [[16, "dc-transmission-line"]], "Data Model Element": [[16, "data-model-element"], [18, "data-model-element"]], "DC Line Data Model": [[16, "id2"]], "Naming": [[16, "naming"]], "Connectivity": [[16, "connectivity"]], "Main Data Table": [[16, "main-data-table"]], "Output Values": [[16, "output-values"]], "Building the Element in Stages": [[16, "building-the-element-in-stages"]], "Pretty Printing": [[16, "pretty-printing"]], "OPF Subclass": [[16, "opf-subclass"]], "Data Model Converter Element": [[16, "data-model-converter-element"], [18, "data-model-converter-element"]], "Main Field in Data Source": [[16, "main-field-in-data-source"]], "Table Variable Map": [[16, "table-variable-map"]], "Custom Import/Export Functions": [[16, "custom-import-export-functions"]], "Network Model Element": [[16, "network-model-element"], [18, "network-model-element"]], "All Formulations": [[16, "all-formulations"], [18, "all-formulations"]], "AC Cartesian vs Polar Formulations": [[16, "ac-cartesian-vs-polar-formulations"], [18, "ac-cartesian-vs-polar-formulations"]], "Mathematical Model Element": [[16, "mathematical-model-element"], [18, "mathematical-model-element"]], "All Tasks and Formulations": [[16, "all-tasks-and-formulations"]], "Power Flow": [[16, "power-flow"]], "Optimal Power Flow": [[16, "optimal-power-flow"]], "Data Model Update": [[16, "data-model-update"]], "AC Optimal Power Flow": [[16, "ac-optimal-power-flow"]], "DC Optimal Power Flow": [[16, "dc-optimal-power-flow"]], "Using the New Element": [[16, "using-the-new-element"]], "See Also": [[16, "see-also"], [17, "see-also"]], "How to Create an Extension": [[17, "how-to-create-an-extension"]], "Using the Extension": [[17, "using-the-extension"]], "A Test Gizmo Element Type": [[18, "a-test-gizmo-element-type"]], "3-Port Gizmo": [[18, "port-gizmo"]], "Gizmo Components/Parameters": [[18, "id2"]], "Gizmo Data Model": [[18, "id3"]], "Gizmo Extension": [[18, "gizmo-extension"]], "How to Run a Three-Phase Power Flow": [[19, "how-to-run-a-three-phase-power-flow"]], "Data Format": [[19, "data-format"]], "Example Cases": [[19, "example-cases"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Documentation": [[20, "matpower-documentation"]], "Overview": [[20, "overview"]], "Manuals": [[20, null]], "How To Guides": [[20, null]], "Other Links": [[20, null]], "MIPS User\u2019s Manual": [[36, "mips-user-s-manual"]], "Reference": [[36, "reference"], [37, "reference"], [103, "reference"], [104, "reference"], [215, "reference"], [216, "reference"], [233, "reference"]], "Main MIPS Functions": [[37, "main-mips-functions"]], "Other Function": [[37, "other-function"]], "MIPS Examples": [[37, "mips-examples"]], "MIPS Tests": [[37, "mips-tests"]], "Private Functions": [[37, "private-functions"], [104, "private-functions"], [216, "private-functions"], [233, "private-functions"]], "MOST User\u2019s Manual": [[103, "most-user-s-manual"]], "Main MOST Functions": [[104, "main-most-functions"]], "Other Functions": [[104, "other-functions"], [233, "other-functions"], [450, "other-functions"]], "MOST Examples": [[104, "most-examples"]], "MOST Tests": [[104, "most-tests"]], "MP-Opt-Model\\mpom{} User\u2019s Manual": [[215, "mpom-user-s-manual"]], "MP-Opt-Model\\mpom{} Classes": [[216, "mpom-classes"]], "MP-Opt-Model\\mpom{} Functions": [[216, "mpom-functions"]], "Master Functions": [[216, "master-functions"]], "Utility Functions": [[216, "utility-functions"]], "Options Handling Functions": [[216, "options-handling-functions"]], "Version Information Functions": [[216, "version-information-functions"]], "Solver Interfaces & Implementations": [[216, "solver-interfaces-implementations"]], "MIQP Solver": [[216, "miqp-solver"]], "NLEQ Solver": [[216, "nleq-solver"]], "NLP Solver": [[216, "nlp-solver"]], "PNE Solver": [[216, "pne-solver"]], "LP/QP Solver": [[216, "lp-qp-solver"]], "MP-Opt-Model\\mpom{} Examples": [[216, "mpom-examples"]], "MP-Opt-Model\\mpom{} Tests": [[216, "mpom-tests"]], "MP-Test User\u2019s Manual": [[232, "mp-test-user-s-manual"]], "Installation": [[232, "installation"]], "Usage": [[232, "usage"]], "Documentation": [[232, "documentation"]], "Contributing": [[232, "contributing"]], "License": [[232, "license"]], "Testing Functions": [[233, "testing-functions"]], "Tests of MP-Test": [[233, "tests-of-mp-test"]], "Classes": [[234, "classes"]], "Task Classes": [[234, "task-classes"]], "Core Task Classes": [[234, "core-task-classes"]], "Legacy Task Classes": [[234, "legacy-task-classes"]], "Data Model Classes": [[234, "data-model-classes"]], "Containers": [[234, "containers"], [234, "id1"], [234, "id3"], [234, "id5"]], "Elements": [[234, "elements"], [234, "id2"], [234, "id4"], [234, "id6"]], "Element Mixins": [[234, "element-mixins"]], "Data Model Converter Classes": [[234, "data-model-converter-classes"]], "Network Model Classes": [[234, "network-model-classes"]], "Mathematical Model Classes": [[234, "mathematical-model-classes"]], "Container Mixins": [[234, "container-mixins"]], "Miscellaneous Classes": [[234, "miscellaneous-classes"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Classes": [[234, "matpower-extension-classes"]], "Base": [[234, "base"]], "OPF Fixed Zonal Reserves Extension": [[234, "opf-fixed-zonal-reserves-extension"]], "Three-Phase Prototype Extension": [[234, "three-phase-prototype-extension"]], "Legacy DC Line Extension": [[234, "legacy-dc-line-extension"]], "Functions": [[450, "functions"]], "Top-Level Simulation Functions": [[450, "top-level-simulation-functions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} User\u2019s Manual": [[458, "matpower-user-s-manual"]], "Legacy Framework": [[458, "legacy-framework"]], "New Flexible Framework": [[458, "new-flexible-framework"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Developer\u2019s Manual": [[5, "matpower-developer-s-manual"]], "generate_autodoc_stubs": [[13, "generate-autodoc-stubs"]], "generate_matpower_autodoc": [[14, "generate-matpower-autodoc"]], "generate_source_symlinks": [[15, "generate-source-symlinks"]], "have_feature_lu_vec": [[21, "have-feature-lu-vec"]], "have_feature_pardiso": [[22, "have-feature-pardiso"]], "have_feature_pardiso_legacy": [[23, "have-feature-pardiso-legacy"]], "have_feature_pardiso_object": [[24, "have-feature-pardiso-object"]], "mips": [[25, "mips"]], "mips_example1": [[26, "mips-example1"]], "mips_example2": [[27, "mips-example2"]], "mipsver": [[28, "mipsver"]], "mplinsolve": [[29, "mplinsolve"]], "qps_mips": [[30, "qps-mips"]], "t_mips": [[31, "t-mips"]], "t_mips_pardiso": [[32, "t-mips-pardiso"]], "t_mplinsolve": [[33, "t-mplinsolve"]], "t_qps_mips": [[34, "t-qps-mips"]], "test_mips": [[35, "test-mips"]], "addgen2mpc": [[38, "addgen2mpc"]], "addstorage": [[39, "addstorage"]], "addwind": [[40, "addwind"]], "apply_profile": [[41, "apply-profile"]], "c118swf": [[42, "c118swf"]], "ex_case3a": [[43, "ex-case3a"]], "ex_case3b": [[44, "ex-case3b"]], "ex_contab": [[45, "ex-contab"]], "ex_load_profile": [[46, "ex-load-profile"]], "ex_storage": [[47, "ex-storage"]], "ex_transmat": [[48, "ex-transmat"]], "ex_wind": [[49, "ex-wind"]], "ex_wind_profile": [[50, "ex-wind-profile"]], "ex_wind_profile_d": [[51, "ex-wind-profile-d"]], "ex_wind_uc": [[52, "ex-wind-uc"]], "ex_xgd": [[53, "ex-xgd"]], "ex_xgd_ramp": [[54, "ex-xgd-ramp"]], "ex_xgd_res": [[55, "ex-xgd-res"]], "ex_xgd_uc": [[56, "ex-xgd-uc"]], "filter_ramp_transitions": [[57, "filter-ramp-transitions"]], "getprofiles": [[58, "getprofiles"]], "idx_profile": [[59, "idx-profile"]], "loadgenericdata": [[60, "loadgenericdata"]], "loadmd": [[61, "loadmd"]], "loadstoragedata": [[62, "loadstoragedata"]], "loadxgendata": [[63, "loadxgendata"]], "md_init": [[64, "md-init"]], "most": [[65, "most"]], "most_ex1_ed": [[66, "most-ex1-ed"]], "most_ex2_dcopf": [[67, "most-ex2-dcopf"]], "most_ex3_dcopf_w_uc": [[68, "most-ex3-dcopf-w-uc"]], "most_ex4_dcopf_ss": [[69, "most-ex4-dcopf-ss"]], "most_ex5_mpopf": [[70, "most-ex5-mpopf"]], "most_ex6_uc": [[71, "most-ex6-uc"]], "most_ex7_suc": [[72, "most-ex7-suc"]], "most_summary": [[73, "most-summary"]], "mostver": [[74, "mostver"]], "mpoption_info_most": [[75, "mpoption-info-most"]], "plot_gen": [[76, "plot-gen"]], "plot_storage": [[77, "plot-storage"]], "plot_uc": [[78, "plot-uc"]], "plot_uc_data": [[79, "plot-uc-data"]], "t_case30_most": [[80, "t-case30-most"]], "t_case3_most": [[81, "t-case3-most"]], "t_case_tlmp": [[82, "t-case-tlmp"]], "t_case_tlmp_storage": [[83, "t-case-tlmp-storage"]], "t_most_30b_1_1_0": [[84, "t-most-30b-1-1-0"]], "t_most_30b_1_1_0_uc": [[85, "t-most-30b-1-1-0-uc"]], "t_most_30b_1_1_17": [[86, "t-most-30b-1-1-17"]], "t_most_30b_3_1_0": [[87, "t-most-30b-3-1-0"]], "t_most_30b_3_1_17": [[88, "t-most-30b-3-1-17"]], "t_most_3b_1_1_0": [[89, "t-most-3b-1-1-0"]], "t_most_3b_1_1_2": [[90, "t-most-3b-1-1-2"]], "t_most_3b_3_1_0": [[91, "t-most-3b-3-1-0"]], "t_most_3b_3_1_2": [[92, "t-most-3b-3-1-2"]], "t_most_fixed_res": [[93, "t-most-fixed-res"]], "t_most_mpopf": [[94, "t-most-mpopf"]], "t_most_sp": [[95, "t-most-sp"]], "t_most_spuc": [[96, "t-most-spuc"]], "t_most_suc": [[97, "t-most-suc"]], "t_most_tlmp": [[98, "t-most-tlmp"]], "t_most_uc": [[99, "t-most-uc"]], "t_most_w_ds": [[100, "t-most-w-ds"]], "test_most": [[101, "test-most"]], "uniformwindprofile": [[102, "uniformwindprofile"]], "mp_idx_manager": [[105, "mp-idx-manager"]], "opt_model": [[106, "opt-model"]], "convert_lin_constraint": [[107, "convert-lin-constraint"]], "convert_lin_constraint_multipliers": [[108, "convert-lin-constraint-multipliers"]], "cplex_options": [[109, "cplex-options"]], "glpk_options": [[110, "glpk-options"]], "gurobi_options": [[111, "gurobi-options"]], "gurobiver": [[112, "gurobiver"]], "have_feature_bpmpd": [[113, "have-feature-bpmpd"]], "have_feature_catchme": [[114, "have-feature-catchme"]], "have_feature_clp": [[115, "have-feature-clp"]], "have_feature_cplex": [[116, "have-feature-cplex"]], "have_feature_evalc": [[117, "have-feature-evalc"]], "have_feature_fmincon": [[118, "have-feature-fmincon"]], "have_feature_fmincon_ipm": [[119, "have-feature-fmincon-ipm"]], "have_feature_fsolve": [[120, "have-feature-fsolve"]], "have_feature_glpk": [[121, "have-feature-glpk"]], "have_feature_gurobi": [[122, "have-feature-gurobi"]], "have_feature_intlinprog": [[123, "have-feature-intlinprog"]], "have_feature_ipopt": [[124, "have-feature-ipopt"]], "have_feature_ipopt_auxdata": [[125, "have-feature-ipopt-auxdata"]], "have_feature_isequaln": [[126, "have-feature-isequaln"]], "have_feature_knitro": [[127, "have-feature-knitro"]], "have_feature_knitromatlab": [[128, "have-feature-knitromatlab"]], "have_feature_ktrlink": [[129, "have-feature-ktrlink"]], "have_feature_linprog": [[130, "have-feature-linprog"]], "have_feature_linprog_ds": [[131, "have-feature-linprog-ds"]], "have_feature_mosek": [[132, "have-feature-mosek"]], "have_feature_opti_clp": [[133, "have-feature-opti-clp"]], "have_feature_optim": [[134, "have-feature-optim"]], "have_feature_optimoptions": [[135, "have-feature-optimoptions"]], "have_feature_osqp": [[136, "have-feature-osqp"]], "have_feature_quadprog": [[137, "have-feature-quadprog"]], "have_feature_quadprog_ls": [[138, "have-feature-quadprog-ls"]], "have_feature_sdpt3": [[139, "have-feature-sdpt3"]], "have_feature_sedumi": [[140, "have-feature-sedumi"]], "have_feature_yalmip": [[141, "have-feature-yalmip"]], "ipopt_options": [[142, "ipopt-options"]], "miqps_cplex": [[143, "miqps-cplex"]], "miqps_glpk": [[144, "miqps-glpk"]], "miqps_gurobi": [[145, "miqps-gurobi"]], "miqps_master": [[146, "miqps-master"]], "miqps_mosek": [[147, "miqps-mosek"]], "miqps_ot": [[148, "miqps-ot"]], "mosek_options": [[149, "mosek-options"]], "mosek_symbcon": [[150, "mosek-symbcon"]], "mpomver": [[151, "mpomver"]], "mpopt2nleqopt": [[152, "mpopt2nleqopt"]], "mpopt2nlpopt": [[153, "mpopt2nlpopt"]], "mpopt2pneopt": [[154, "mpopt2pneopt"]], "mpopt2qpopt": [[155, "mpopt2qpopt"]], "nested_struct_copy": [[156, "nested-struct-copy"]], "nleqs_core": [[157, "nleqs-core"]], "nleqs_fd_newton": [[158, "nleqs-fd-newton"]], "nleqs_fsolve": [[159, "nleqs-fsolve"]], "nleqs_gauss_seidel": [[160, "nleqs-gauss-seidel"]], "nleqs_master": [[161, "nleqs-master"]], "nleqs_master_ex1": [[162, "nleqs-master-ex1"]], "nleqs_master_ex2": [[163, "nleqs-master-ex2"]], "nleqs_newton": [[164, "nleqs-newton"]], "nlp_consfcn": [[165, "nlp-consfcn"]], "nlp_costfcn": [[166, "nlp-costfcn"]], "nlp_hessfcn": [[167, "nlp-hessfcn"]], "nlps_fmincon": [[168, "nlps-fmincon"]], "nlps_ipopt": [[169, "nlps-ipopt"]], "nlps_knitro": [[170, "nlps-knitro"]], "nlps_master": [[171, "nlps-master"]], "nlps_master_ex1": [[172, "nlps-master-ex1"]], "nlps_master_ex2": [[173, "nlps-master-ex2"]], "osqp_options": [[174, "osqp-options"]], "osqpver": [[175, "osqpver"]], "pne_callback_default": [[176, "pne-callback-default"]], "pne_callback_nose": [[177, "pne-callback-nose"]], "pne_callback_target_lam": [[178, "pne-callback-target-lam"]], "pne_detect_events": [[179, "pne-detect-events"]], "pne_detected_event": [[180, "pne-detected-event"]], "pne_event_nose": [[181, "pne-event-nose"]], "pne_event_target_lam": [[182, "pne-event-target-lam"]], "pne_ex1": [[183, "pne-ex1"]], "pne_pfcn_arc_len": [[184, "pne-pfcn-arc-len"]], "pne_pfcn_natural": [[185, "pne-pfcn-natural"]], "pne_pfcn_pseudo_arc_len": [[186, "pne-pfcn-pseudo-arc-len"]], "pne_register_callbacks": [[187, "pne-register-callbacks"]], "pne_register_events": [[188, "pne-register-events"]], "pnes_master": [[189, "pnes-master"]], "qp_ex1": [[190, "qp-ex1"]], "qps_bpmpd": [[191, "qps-bpmpd"]], "qps_clp": [[192, "qps-clp"]], "qps_cplex": [[193, "qps-cplex"]], "qps_glpk": [[194, "qps-glpk"]], "qps_gurobi": [[195, "qps-gurobi"]], "qps_ipopt": [[196, "qps-ipopt"]], "qps_master": [[197, "qps-master"]], "qps_mosek": [[198, "qps-mosek"]], "qps_osqp": [[199, "qps-osqp"]], "qps_ot": [[200, "qps-ot"]], "t_miqps_master": [[201, "t-miqps-master"]], "t_nested_struct_copy": [[202, "t-nested-struct-copy"]], "t_nleqs_master": [[203, "t-nleqs-master"]], "t_nlps_master": [[204, "t-nlps-master"]], "t_om_solve_leqs": [[205, "t-om-solve-leqs"]], "t_om_solve_miqps": [[206, "t-om-solve-miqps"]], "t_om_solve_nleqs": [[207, "t-om-solve-nleqs"]], "t_om_solve_nlps": [[208, "t-om-solve-nlps"]], "t_om_solve_pne": [[209, "t-om-solve-pne"]], "t_om_solve_qps": [[210, "t-om-solve-qps"]], "t_opt_model": [[211, "t-opt-model"]], "t_pnes_master": [[212, "t-pnes-master"]], "t_qps_master": [[213, "t-qps-master"]], "test_mp_opt_model": [[214, "test-mp-opt-model"]], "have_feature": [[217, "have-feature"]], "have_feature_matlab": [[218, "have-feature-matlab"]], "have_feature_octave": [[219, "have-feature-octave"]], "mptestver": [[220, "mptestver"]], "t_begin": [[221, "t-begin"]], "t_end": [[222, "t-end"]], "t_file_match": [[223, "t-file-match"]], "t_have_feature": [[224, "t-have-feature"]], "t_is": [[225, "t-is"]], "t_ok": [[226, "t-ok"]], "t_run_tests": [[227, "t-run-tests"]], "t_skip": [[228, "t-skip"]], "t_str_match": [[229, "t-str-match"]], "t_test_fcns": [[230, "t-test-fcns"]], "test_mptest": [[231, "test-mptest"]], "mp.NODE_TYPE": [[235, "mp-node-type"]], "mp.cost_table": [[236, "mp-cost-table"]], "mp.cost_table_utils": [[237, "mp-cost-table-utils"]], "mp.data_model": [[238, "mp-data-model"]], "mp.data_model_cpf": [[239, "mp-data-model-cpf"]], "mp.data_model_opf": [[240, "mp-data-model-opf"]], "mp.dm_converter": [[241, "mp-dm-converter"]], "mp.dm_converter_mpc2": [[242, "mp-dm-converter-mpc2"]], "mp.dm_converter_mpc2_legacy": [[243, "mp-dm-converter-mpc2-legacy"]], "mp.dm_element": [[244, "mp-dm-element"]], "mp.dmc_element": [[245, "mp-dmc-element"]], "mp.dmce_branch_mpc2": [[246, "mp-dmce-branch-mpc2"]], "mp.dmce_bus3p_mpc2": [[247, "mp-dmce-bus3p-mpc2"]], "mp.dmce_bus_mpc2": [[248, "mp-dmce-bus-mpc2"]], "mp.dmce_buslink_mpc2": [[249, "mp-dmce-buslink-mpc2"]], "mp.dmce_gen3p_mpc2": [[250, "mp-dmce-gen3p-mpc2"]], "mp.dmce_gen_mpc2": [[251, "mp-dmce-gen-mpc2"]], "mp.dmce_legacy_dcline_mpc2": [[252, "mp-dmce-legacy-dcline-mpc2"]], "mp.dmce_line3p_mpc2": [[253, "mp-dmce-line3p-mpc2"]], "mp.dmce_load3p_mpc2": [[254, "mp-dmce-load3p-mpc2"]], "mp.dmce_load_mpc2": [[255, "mp-dmce-load-mpc2"]], "mp.dmce_reserve_gen_mpc2": [[256, "mp-dmce-reserve-gen-mpc2"]], "mp.dmce_reserve_zone_mpc2": [[257, "mp-dmce-reserve-zone-mpc2"]], "mp.dmce_shunt_mpc2": [[258, "mp-dmce-shunt-mpc2"]], "mp.dmce_xfmr3p_mpc2": [[259, "mp-dmce-xfmr3p-mpc2"]], "mp.dme_branch": [[260, "mp-dme-branch"]], "mp.dme_branch_opf": [[261, "mp-dme-branch-opf"]], "mp.dme_bus": [[262, "mp-dme-bus"]], "mp.dme_bus3p": [[263, "mp-dme-bus3p"]], "mp.dme_bus3p_opf": [[264, "mp-dme-bus3p-opf"]], "mp.dme_bus_opf": [[265, "mp-dme-bus-opf"]], "mp.dme_buslink": [[266, "mp-dme-buslink"]], "mp.dme_buslink_opf": [[267, "mp-dme-buslink-opf"]], "mp.dme_gen": [[268, "mp-dme-gen"]], "mp.dme_gen3p": [[269, "mp-dme-gen3p"]], "mp.dme_gen3p_opf": [[270, "mp-dme-gen3p-opf"]], "mp.dme_gen_opf": [[271, "mp-dme-gen-opf"]], "mp.dme_legacy_dcline": [[272, "mp-dme-legacy-dcline"]], "mp.dme_legacy_dcline_opf": [[273, "mp-dme-legacy-dcline-opf"]], "mp.dme_line3p": [[274, "mp-dme-line3p"]], "mp.dme_line3p_opf": [[275, "mp-dme-line3p-opf"]], "mp.dme_load": [[276, "mp-dme-load"]], "mp.dme_load3p": [[277, "mp-dme-load3p"]], "mp.dme_load3p_opf": [[278, "mp-dme-load3p-opf"]], "mp.dme_load_cpf": [[279, "mp-dme-load-cpf"]], "mp.dme_load_opf": [[280, "mp-dme-load-opf"]], "mp.dme_reserve_gen": [[281, "mp-dme-reserve-gen"]], "mp.dme_reserve_zone": [[282, "mp-dme-reserve-zone"]], "mp.dme_shared_opf": [[283, "mp-dme-shared-opf"]], "mp.dme_shunt": [[284, "mp-dme-shunt"]], "mp.dme_shunt_cpf": [[285, "mp-dme-shunt-cpf"]], "mp.dme_shunt_opf": [[286, "mp-dme-shunt-opf"]], "mp.dme_xfmr3p": [[287, "mp-dme-xfmr3p"]], "mp.dme_xfmr3p_opf": [[288, "mp-dme-xfmr3p-opf"]], "mp.element_container": [[289, "mp-element-container"]], "mp.extension": [[290, "mp-extension"]], "mp.form": [[291, "mp-form"]], "mp.form_ac": [[292, "mp-form-ac"]], "mp.form_acc": [[293, "mp-form-acc"]], "mp.form_acp": [[294, "mp-form-acp"]], "mp.form_dc": [[295, "mp-form-dc"]], "mp.mapped_array": [[296, "mp-mapped-array"]], "mp.math_model": [[297, "mp-math-model"]], "mp.math_model_cpf_acc": [[298, "mp-math-model-cpf-acc"]], "mp.math_model_cpf_acci": [[299, "mp-math-model-cpf-acci"]], "mp.math_model_cpf_accs": [[300, "mp-math-model-cpf-accs"]], "mp.math_model_cpf_acp": [[301, "mp-math-model-cpf-acp"]], "mp.math_model_cpf_acpi": [[302, "mp-math-model-cpf-acpi"]], "mp.math_model_cpf_acps": [[303, "mp-math-model-cpf-acps"]], "mp.math_model_opf": [[304, "mp-math-model-opf"]], "mp.math_model_opf_ac": [[305, "mp-math-model-opf-ac"]], "mp.math_model_opf_acc": [[306, "mp-math-model-opf-acc"]], "mp.math_model_opf_acci": [[307, "mp-math-model-opf-acci"]], "mp.math_model_opf_acci_legacy": [[308, "mp-math-model-opf-acci-legacy"]], "mp.math_model_opf_accs": [[309, "mp-math-model-opf-accs"]], "mp.math_model_opf_accs_legacy": [[310, "mp-math-model-opf-accs-legacy"]], "mp.math_model_opf_acp": [[311, "mp-math-model-opf-acp"]], "mp.math_model_opf_acpi": [[312, "mp-math-model-opf-acpi"]], "mp.math_model_opf_acpi_legacy": [[313, "mp-math-model-opf-acpi-legacy"]], "mp.math_model_opf_acps": [[314, "mp-math-model-opf-acps"]], "mp.math_model_opf_acps_legacy": [[315, "mp-math-model-opf-acps-legacy"]], "mp.math_model_opf_dc": [[316, "mp-math-model-opf-dc"]], "mp.math_model_opf_dc_legacy": [[317, "mp-math-model-opf-dc-legacy"]], "mp.math_model_pf": [[318, "mp-math-model-pf"]], "mp.math_model_pf_ac": [[319, "mp-math-model-pf-ac"]], "mp.math_model_pf_acci": [[320, "mp-math-model-pf-acci"]], "mp.math_model_pf_accs": [[321, "mp-math-model-pf-accs"]], "mp.math_model_pf_acpi": [[322, "mp-math-model-pf-acpi"]], "mp.math_model_pf_acps": [[323, "mp-math-model-pf-acps"]], "mp.math_model_pf_dc": [[324, "mp-math-model-pf-dc"]], "mp.mm_element": [[325, "mp-mm-element"]], "mp.mm_shared_opf_legacy": [[326, "mp-mm-shared-opf-legacy"]], "mp.mm_shared_pfcpf": [[327, "mp-mm-shared-pfcpf"]], "mp.mm_shared_pfcpf_ac": [[328, "mp-mm-shared-pfcpf-ac"]], "mp.mm_shared_pfcpf_ac_i": [[329, "mp-mm-shared-pfcpf-ac-i"]], "mp.mm_shared_pfcpf_acc": [[330, "mp-mm-shared-pfcpf-acc"]], "mp.mm_shared_pfcpf_acci": [[331, "mp-mm-shared-pfcpf-acci"]], "mp.mm_shared_pfcpf_accs": [[332, "mp-mm-shared-pfcpf-accs"]], "mp.mm_shared_pfcpf_acp": [[333, "mp-mm-shared-pfcpf-acp"]], "mp.mm_shared_pfcpf_acpi": [[334, "mp-mm-shared-pfcpf-acpi"]], "mp.mm_shared_pfcpf_acps": [[335, "mp-mm-shared-pfcpf-acps"]], "mp.mm_shared_pfcpf_dc": [[336, "mp-mm-shared-pfcpf-dc"]], "mp.mme_branch": [[337, "mp-mme-branch"]], "mp.mme_branch_opf": [[338, "mp-mme-branch-opf"]], "mp.mme_branch_opf_ac": [[339, "mp-mme-branch-opf-ac"]], "mp.mme_branch_opf_acc": [[340, "mp-mme-branch-opf-acc"]], "mp.mme_branch_opf_acp": [[341, "mp-mme-branch-opf-acp"]], "mp.mme_branch_opf_dc": [[342, "mp-mme-branch-opf-dc"]], "mp.mme_branch_pf_ac": [[343, "mp-mme-branch-pf-ac"]], "mp.mme_branch_pf_dc": [[344, "mp-mme-branch-pf-dc"]], "mp.mme_bus": [[345, "mp-mme-bus"]], "mp.mme_bus3p": [[346, "mp-mme-bus3p"]], "mp.mme_bus3p_opf_acc": [[347, "mp-mme-bus3p-opf-acc"]], "mp.mme_bus3p_opf_acp": [[348, "mp-mme-bus3p-opf-acp"]], "mp.mme_bus_opf_ac": [[349, "mp-mme-bus-opf-ac"]], "mp.mme_bus_opf_acc": [[350, "mp-mme-bus-opf-acc"]], "mp.mme_bus_opf_acp": [[351, "mp-mme-bus-opf-acp"]], "mp.mme_bus_opf_dc": [[352, "mp-mme-bus-opf-dc"]], "mp.mme_bus_pf_ac": [[353, "mp-mme-bus-pf-ac"]], "mp.mme_bus_pf_dc": [[354, "mp-mme-bus-pf-dc"]], "mp.mme_buslink": [[355, "mp-mme-buslink"]], "mp.mme_buslink_opf": [[356, "mp-mme-buslink-opf"]], "mp.mme_buslink_opf_acc": [[357, "mp-mme-buslink-opf-acc"]], "mp.mme_buslink_opf_acp": [[358, "mp-mme-buslink-opf-acp"]], "mp.mme_buslink_pf_ac": [[359, "mp-mme-buslink-pf-ac"]], "mp.mme_buslink_pf_acc": [[360, "mp-mme-buslink-pf-acc"]], "mp.mme_buslink_pf_acp": [[361, "mp-mme-buslink-pf-acp"]], "mp.mme_gen": [[362, "mp-mme-gen"]], "mp.mme_gen3p": [[363, "mp-mme-gen3p"]], "mp.mme_gen3p_opf": [[364, "mp-mme-gen3p-opf"]], "mp.mme_gen_opf": [[365, "mp-mme-gen-opf"]], "mp.mme_gen_opf_ac": [[366, "mp-mme-gen-opf-ac"]], "mp.mme_gen_opf_dc": [[367, "mp-mme-gen-opf-dc"]], "mp.mme_gen_pf_ac": [[368, "mp-mme-gen-pf-ac"]], "mp.mme_gen_pf_dc": [[369, "mp-mme-gen-pf-dc"]], "mp.mme_legacy_dcline": [[370, "mp-mme-legacy-dcline"]], "mp.mme_legacy_dcline_opf": [[371, "mp-mme-legacy-dcline-opf"]], "mp.mme_legacy_dcline_opf_ac": [[372, "mp-mme-legacy-dcline-opf-ac"]], "mp.mme_legacy_dcline_opf_dc": [[373, "mp-mme-legacy-dcline-opf-dc"]], "mp.mme_legacy_dcline_pf_ac": [[374, "mp-mme-legacy-dcline-pf-ac"]], "mp.mme_legacy_dcline_pf_dc": [[375, "mp-mme-legacy-dcline-pf-dc"]], "mp.mme_line3p": [[376, "mp-mme-line3p"]], "mp.mme_line3p_opf": [[377, "mp-mme-line3p-opf"]], "mp.mme_load": [[378, "mp-mme-load"]], "mp.mme_load_cpf": [[379, "mp-mme-load-cpf"]], "mp.mme_load_pf_ac": [[380, "mp-mme-load-pf-ac"]], "mp.mme_load_pf_dc": [[381, "mp-mme-load-pf-dc"]], "mp.mme_reserve_gen": [[382, "mp-mme-reserve-gen"]], "mp.mme_reserve_zone": [[383, "mp-mme-reserve-zone"]], "mp.mme_shunt": [[384, "mp-mme-shunt"]], "mp.mme_shunt_cpf": [[385, "mp-mme-shunt-cpf"]], "mp.mme_shunt_pf_ac": [[386, "mp-mme-shunt-pf-ac"]], "mp.mme_shunt_pf_dc": [[387, "mp-mme-shunt-pf-dc"]], "mp.mme_xfmr3p": [[388, "mp-mme-xfmr3p"]], "mp.mme_xfmr3p_opf": [[389, "mp-mme-xfmr3p-opf"]], "mp.net_model": [[390, "mp-net-model"]], "mp.net_model_ac": [[391, "mp-net-model-ac"]], "mp.net_model_acc": [[392, "mp-net-model-acc"]], "mp.net_model_acp": [[393, "mp-net-model-acp"]], "mp.net_model_dc": [[394, "mp-net-model-dc"]], "mp.nm_element": [[395, "mp-nm-element"]], "mp.nme_branch": [[396, "mp-nme-branch"]], "mp.nme_branch_ac": [[397, "mp-nme-branch-ac"]], "mp.nme_branch_acc": [[398, "mp-nme-branch-acc"]], "mp.nme_branch_acp": [[399, "mp-nme-branch-acp"]], "mp.nme_branch_dc": [[400, "mp-nme-branch-dc"]], "mp.nme_bus": [[401, "mp-nme-bus"]], "mp.nme_bus3p": [[402, "mp-nme-bus3p"]], "mp.nme_bus3p_acc": [[403, "mp-nme-bus3p-acc"]], "mp.nme_bus3p_acp": [[404, "mp-nme-bus3p-acp"]], "mp.nme_bus_acc": [[405, "mp-nme-bus-acc"]], "mp.nme_bus_acp": [[406, "mp-nme-bus-acp"]], "mp.nme_bus_dc": [[407, "mp-nme-bus-dc"]], "mp.nme_buslink": [[408, "mp-nme-buslink"]], "mp.nme_buslink_acc": [[409, "mp-nme-buslink-acc"]], "mp.nme_buslink_acp": [[410, "mp-nme-buslink-acp"]], "mp.nme_gen": [[411, "mp-nme-gen"]], "mp.nme_gen3p": [[412, "mp-nme-gen3p"]], "mp.nme_gen3p_acc": [[413, "mp-nme-gen3p-acc"]], "mp.nme_gen3p_acp": [[414, "mp-nme-gen3p-acp"]], "mp.nme_gen_ac": [[415, "mp-nme-gen-ac"]], "mp.nme_gen_acc": [[416, "mp-nme-gen-acc"]], "mp.nme_gen_acp": [[417, "mp-nme-gen-acp"]], "mp.nme_gen_dc": [[418, "mp-nme-gen-dc"]], "mp.nme_legacy_dcline": [[419, "mp-nme-legacy-dcline"]], "mp.nme_legacy_dcline_ac": [[420, "mp-nme-legacy-dcline-ac"]], "mp.nme_legacy_dcline_acc": [[421, "mp-nme-legacy-dcline-acc"]], "mp.nme_legacy_dcline_acp": [[422, "mp-nme-legacy-dcline-acp"]], "mp.nme_legacy_dcline_dc": [[423, "mp-nme-legacy-dcline-dc"]], "mp.nme_line3p": [[424, "mp-nme-line3p"]], "mp.nme_load": [[425, "mp-nme-load"]], "mp.nme_load3p": [[426, "mp-nme-load3p"]], "mp.nme_load_ac": [[427, "mp-nme-load-ac"]], "mp.nme_load_acc": [[428, "mp-nme-load-acc"]], "mp.nme_load_acp": [[429, "mp-nme-load-acp"]], "mp.nme_load_dc": [[430, "mp-nme-load-dc"]], "mp.nme_shunt": [[431, "mp-nme-shunt"]], "mp.nme_shunt_ac": [[432, "mp-nme-shunt-ac"]], "mp.nme_shunt_acc": [[433, "mp-nme-shunt-acc"]], "mp.nme_shunt_acp": [[434, "mp-nme-shunt-acp"]], "mp.nme_shunt_dc": [[435, "mp-nme-shunt-dc"]], "mp.nme_xfmr3p": [[436, "mp-nme-xfmr3p"]], "mp.task": [[437, "mp-task"]], "mp.task_cpf": [[438, "mp-task-cpf"]], "mp.task_cpf_legacy": [[439, "mp-task-cpf-legacy"]], "mp.task_opf": [[440, "mp-task-opf"]], "mp.task_opf_legacy": [[441, "mp-task-opf-legacy"]], "mp.task_pf": [[442, "mp-task-pf"]], "mp.task_pf_legacy": [[443, "mp-task-pf-legacy"]], "mp.task_shared_legacy": [[444, "mp-task-shared-legacy"]], "mp.xt_3p": [[445, "mp-xt-3p"]], "mp.xt_legacy_dcline": [[446, "mp-xt-legacy-dcline"]], "mp.xt_reserves": [[447, "mp-xt-reserves"]], "mp_table": [[448, "mp-table"]], "mp_table_subclass": [[449, "mp-table-subclass"]], "Limitations": [[449, null]], "mp_table_class": [[451, "mp-table-class"]], "run_cpf": [[452, "run-cpf"]], "run_mp": [[453, "run-mp"]], "run_opf": [[454, "run-opf"]], "run_pf": [[455, "run-pf"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Reference Manual": [[456, "matpower-reference-manual"]]}, "indexentries": {"generate_autodoc_stubs() (built-in function)": [[13, "generate_autodoc_stubs"]], "generate_matpower_autodoc() (built-in function)": [[14, "generate_matpower_autodoc"]], "generate_source_symlinks() (built-in function)": [[15, "generate_source_symlinks"]], "have_feature_lu_vec() (built-in function)": [[21, "have_feature_lu_vec"]], "have_feature_pardiso() (built-in function)": [[22, "have_feature_pardiso"]], "have_feature_pardiso_legacy() (built-in function)": [[23, "have_feature_pardiso_legacy"]], "have_feature_pardiso_object() (built-in function)": [[24, "have_feature_pardiso_object"]], "mips() (in module mips)": [[25, "mips.mips"]], "mips_example1() (built-in function)": [[26, "mips_example1"]], "mips_example2() (built-in function)": [[27, "mips_example2"]], "mipsver() (built-in function)": [[28, "mipsver"]], "mplinsolve() (built-in function)": [[29, "mplinsolve"]], "qps_mips() (built-in function)": [[30, "qps_mips"]], "t_mips() (built-in function)": [[31, "t_mips"]], "t_mips_pardiso() (built-in function)": [[32, "t_mips_pardiso"]], "t_mplinsolve() (built-in function)": [[33, "t_mplinsolve"]], "t_qps_mips() (built-in function)": [[34, "t_qps_mips"]], "test_mips() (built-in function)": [[35, "test_mips"]], "addgen2mpc() (built-in function)": [[38, "addgen2mpc"]], "addstorage() (built-in function)": [[39, "addstorage"]], "addwind() (built-in function)": [[40, "addwind"]], "apply_profile() (built-in function)": [[41, "apply_profile"]], "c118swf() (built-in function)": [[42, "c118swf"]], "ex_case3a() (built-in function)": [[43, "ex_case3a"]], "ex_case3b() (built-in function)": [[44, "ex_case3b"]], "ex_contab() (built-in function)": [[45, "ex_contab"]], "ex_load_profile() (built-in function)": [[46, "ex_load_profile"]], "ex_storage() (built-in function)": [[47, "ex_storage"]], "ex_transmat() (built-in function)": [[48, "ex_transmat"]], "ex_wind() (built-in function)": [[49, "ex_wind"]], "ex_wind_profile() (built-in function)": [[50, "ex_wind_profile"]], "ex_wind_profile_d() (built-in function)": [[51, "ex_wind_profile_d"]], "ex_wind_uc() (built-in function)": [[52, "ex_wind_uc"]], "ex_xgd() (built-in function)": [[53, "ex_xgd"]], "ex_xgd_ramp() (built-in function)": [[54, "ex_xgd_ramp"]], "ex_xgd_res() (built-in function)": [[55, "ex_xgd_res"]], "ex_xgd_uc() (built-in function)": [[56, "ex_xgd_uc"]], "filter_ramp_transitions() (built-in function)": [[57, "filter_ramp_transitions"]], "getprofiles() (built-in function)": [[58, "getprofiles"]], "idx_profile() (built-in function)": [[59, "idx_profile"]], "loadgenericdata() (built-in function)": [[60, "loadgenericdata"]], "loadmd() (built-in function)": [[61, "loadmd"]], "loadstoragedata() (built-in function)": [[62, "loadstoragedata"]], "loadxgendata() (built-in function)": [[63, "loadxgendata"]], "md_init() (built-in function)": [[64, "md_init"]], "most() (in module most)": [[65, "most.most"]], "most_ex1_ed() (built-in function)": [[66, "most_ex1_ed"]], "most_ex2_dcopf() (built-in function)": [[67, "most_ex2_dcopf"]], "most_ex3_dcopf_w_uc() (built-in function)": [[68, "most_ex3_dcopf_w_uc"]], "most_ex4_dcopf_ss() (built-in function)": [[69, "most_ex4_dcopf_ss"]], "most_ex5_mpopf() (built-in function)": [[70, "most_ex5_mpopf"]], "most_ex6_uc() (built-in function)": [[71, "most_ex6_uc"]], "most_ex7_suc() (built-in function)": [[72, "most_ex7_suc"]], "most_summary() (built-in function)": [[73, "most_summary"]], "mostver() (built-in function)": [[74, "mostver"]], "mpoption_info_most() (built-in function)": [[75, "mpoption_info_most"]], "plot_gen() (built-in function)": [[76, "plot_gen"]], "plot_storage() (built-in function)": [[77, "plot_storage"]], "plot_uc() (built-in function)": [[78, "plot_uc"]], "plot_uc_data() (built-in function)": [[79, "plot_uc_data"]], "t_case30_most() (built-in function)": [[80, "t_case30_most"]], "t_case3_most() (built-in function)": [[81, "t_case3_most"]], "t_case_tlmp() (built-in function)": [[82, "t_case_tlmp"]], "t_case_tlmp_storage() (built-in function)": [[83, "t_case_tlmp_storage"]], "t_most_30b_1_1_0() (built-in function)": [[84, "t_most_30b_1_1_0"]], "t_most_30b_1_1_0_uc() (built-in function)": [[85, "t_most_30b_1_1_0_uc"]], "t_most_30b_1_1_17() (built-in function)": [[86, "t_most_30b_1_1_17"]], "t_most_30b_3_1_0() (built-in function)": [[87, "t_most_30b_3_1_0"]], "t_most_30b_3_1_17() (built-in function)": [[88, "t_most_30b_3_1_17"]], "t_most_3b_1_1_0() (built-in function)": [[89, "t_most_3b_1_1_0"]], "t_most_3b_1_1_2() (built-in function)": [[90, "t_most_3b_1_1_2"]], "t_most_3b_3_1_0() (built-in function)": [[91, "t_most_3b_3_1_0"]], "t_most_3b_3_1_2() (built-in function)": [[92, "t_most_3b_3_1_2"]], "t_most_fixed_res() (built-in function)": [[93, "t_most_fixed_res"]], "t_most_mpopf() (built-in function)": [[94, "t_most_mpopf"]], "t_most_sp() (built-in function)": [[95, "t_most_sp"]], "t_most_spuc() (built-in function)": [[96, "t_most_spuc"]], "t_most_suc() (built-in function)": [[97, "t_most_suc"]], "t_most_tlmp() (built-in function)": [[98, "t_most_tlmp"]], "t_most_uc() (built-in function)": [[99, "t_most_uc"]], "t_most_w_ds() (built-in function)": [[100, "t_most_w_ds"]], "test_most() (built-in function)": [[101, "test_most"]], "uniformwindprofile() (built-in function)": [[102, "uniformwindprofile"]], "add_named_set() (mp_idx_manager method)": [[105, "mp_idx_manager.add_named_set"]], "copy() (mp_idx_manager method)": [[105, "mp_idx_manager.copy"]], "describe_idx() (mp_idx_manager method)": [[105, "mp_idx_manager.describe_idx"]], "display_set() (mp_idx_manager method)": [[105, "mp_idx_manager.display_set"]], "get() (mp_idx_manager method)": [[105, "mp_idx_manager.get"]], "getn() (mp_idx_manager method)": [[105, "mp_idx_manager.getN"]], "get_idx() (mp_idx_manager method)": [[105, "mp_idx_manager.get_idx"]], "get_userdata() (mp_idx_manager method)": [[105, "mp_idx_manager.get_userdata"]], "init_indexed_name() (mp_idx_manager method)": [[105, "mp_idx_manager.init_indexed_name"]], "init_set_types() (mp_idx_manager method)": [[105, "mp_idx_manager.init_set_types"]], "mp_idx_manager (built-in class)": [[105, "mp_idx_manager"]], "mp_idx_manager() (mp_idx_manager method)": [[105, "mp_idx_manager.mp_idx_manager"]], "set_type_idx_map() (mp_idx_manager method)": [[105, "mp_idx_manager.set_type_idx_map"]], "valid_named_set_type() (mp_idx_manager method)": [[105, "mp_idx_manager.valid_named_set_type"]], "add_lin_constraint() (opt_model method)": [[106, "opt_model.add_lin_constraint"]], "add_named_set() (opt_model method)": [[106, "opt_model.add_named_set"]], "add_nln_constraint() (opt_model method)": [[106, "opt_model.add_nln_constraint"]], "add_nln_cost() (opt_model method)": [[106, "opt_model.add_nln_cost"]], "add_quad_cost() (opt_model method)": [[106, "opt_model.add_quad_cost"]], "add_var() (opt_model method)": [[106, "opt_model.add_var"]], "def_set_types() (opt_model method)": [[106, "opt_model.def_set_types"]], "display() (opt_model method)": [[106, "opt_model.display"]], "display_soln() (opt_model method)": [[106, "opt_model.display_soln"]], "eval_lin_constraint() (opt_model method)": [[106, "opt_model.eval_lin_constraint"]], "eval_nln_constraint() (opt_model method)": [[106, "opt_model.eval_nln_constraint"]], "eval_nln_constraint_hess() (opt_model method)": [[106, "opt_model.eval_nln_constraint_hess"]], "eval_nln_cost() (opt_model method)": [[106, "opt_model.eval_nln_cost"]], "eval_quad_cost() (opt_model method)": [[106, "opt_model.eval_quad_cost"]], "get_idx() (opt_model method)": [[106, "opt_model.get_idx"]], "get_soln() (opt_model method)": [[106, "opt_model.get_soln"]], "has_parsed_soln() (opt_model method)": [[106, "opt_model.has_parsed_soln"]], "init_indexed_name() (opt_model method)": [[106, "opt_model.init_indexed_name"]], "init_set_types() (opt_model method)": [[106, "opt_model.init_set_types"]], "is_mixed_integer() (opt_model method)": [[106, "opt_model.is_mixed_integer"]], "is_solved() (opt_model method)": [[106, "opt_model.is_solved"]], "lin (opt_model attribute)": [[106, "opt_model.lin"]], "nlc (opt_model attribute)": [[106, "opt_model.nlc"]], "nle (opt_model attribute)": [[106, "opt_model.nle"]], "nli (opt_model attribute)": [[106, "opt_model.nli"]], "opt_model (built-in class)": [[106, "opt_model"]], "opt_model() (opt_model method)": [[106, "opt_model.opt_model"]], "params_lin_constraint() (opt_model method)": [[106, "opt_model.params_lin_constraint"]], "params_nln_constraint() (opt_model method)": [[106, "opt_model.params_nln_constraint"]], "params_nln_cost() (opt_model method)": [[106, "opt_model.params_nln_cost"]], "params_quad_cost() (opt_model method)": [[106, "opt_model.params_quad_cost"]], "params_var() (opt_model method)": [[106, "opt_model.params_var"]], "parse_soln() (opt_model method)": [[106, "opt_model.parse_soln"]], "prob_type (opt_model attribute)": [[106, "opt_model.prob_type"]], "problem_type() (opt_model method)": [[106, "opt_model.problem_type"]], "qdc (opt_model attribute)": [[106, "opt_model.qdc"]], "set_params() (opt_model method)": [[106, "opt_model.set_params"]], "soln (opt_model attribute)": [[106, "opt_model.soln"]], "solve() (opt_model method)": [[106, "opt_model.solve"]], "var (opt_model attribute)": [[106, "opt_model.var"]], "varsets_cell2struct() (opt_model method)": [[106, "opt_model.varsets_cell2struct"]], "varsets_idx() (opt_model method)": [[106, "opt_model.varsets_idx"]], "varsets_len() (opt_model method)": [[106, "opt_model.varsets_len"]], "varsets_x() (opt_model method)": [[106, "opt_model.varsets_x"]], "convert_lin_constraint() (built-in function)": [[107, "convert_lin_constraint"]], "convert_lin_constraint_multipliers() (built-in function)": [[108, "convert_lin_constraint_multipliers"]], "cplex_options() (built-in function)": [[109, "cplex_options"]], "glpk_options() (built-in function)": [[110, "glpk_options"]], "gurobi_options() (built-in function)": [[111, "gurobi_options"]], "gurobiver() (built-in function)": [[112, "gurobiver"]], "have_feature_bpmpd() (built-in function)": [[113, "have_feature_bpmpd"]], "have_feature_catchme() (built-in function)": [[114, "have_feature_catchme"]], "have_feature_clp() (built-in function)": [[115, "have_feature_clp"]], "have_feature_cplex() (built-in function)": [[116, "have_feature_cplex"]], "have_feature_evalc() (built-in function)": [[117, "have_feature_evalc"]], "have_feature_fmincon() (built-in function)": [[118, "have_feature_fmincon"]], "have_feature_fmincon_ipm() (built-in function)": [[119, "have_feature_fmincon_ipm"]], "have_feature_fsolve() (built-in function)": [[120, "have_feature_fsolve"]], "have_feature_glpk() (built-in function)": [[121, "have_feature_glpk"]], "have_feature_gurobi() (built-in function)": [[122, "have_feature_gurobi"]], "have_feature_intlinprog() (built-in function)": [[123, "have_feature_intlinprog"]], "have_feature_ipopt() (built-in function)": [[124, "have_feature_ipopt"]], "have_feature_ipopt_auxdata() (built-in function)": [[125, "have_feature_ipopt_auxdata"]], "have_feature_isequaln() (built-in function)": [[126, "have_feature_isequaln"]], "have_feature_knitro() (built-in function)": [[127, "have_feature_knitro"]], "have_feature_knitromatlab() (built-in function)": [[128, "have_feature_knitromatlab"]], "have_feature_ktrlink() (built-in function)": [[129, "have_feature_ktrlink"]], "have_feature_linprog() (built-in function)": [[130, "have_feature_linprog"]], "have_feature_linprog_ds() (built-in function)": [[131, "have_feature_linprog_ds"]], "have_feature_mosek() (built-in function)": [[132, "have_feature_mosek"]], "have_feature_opti_clp() (built-in function)": [[133, "have_feature_opti_clp"]], "have_feature_optim() (built-in function)": [[134, "have_feature_optim"]], "have_feature_optimoptions() (built-in function)": [[135, "have_feature_optimoptions"]], "have_feature_osqp() (built-in function)": [[136, "have_feature_osqp"]], "have_feature_quadprog() (built-in function)": [[137, "have_feature_quadprog"]], "have_feature_quadprog_ls() (built-in function)": [[138, "have_feature_quadprog_ls"]], "have_feature_sdpt3() (built-in function)": [[139, "have_feature_sdpt3"]], "have_feature_sedumi() (built-in function)": [[140, "have_feature_sedumi"]], "have_feature_yalmip() (built-in function)": [[141, "have_feature_yalmip"]], "ipopt_options() (built-in function)": [[142, "ipopt_options"]], "miqps_cplex() (built-in function)": [[143, "miqps_cplex"]], "miqps_glpk() (built-in function)": [[144, "miqps_glpk"]], "miqps_gurobi() (built-in function)": [[145, "miqps_gurobi"]], "miqps_master() (built-in function)": [[146, "miqps_master"]], "miqps_mosek() (built-in function)": [[147, "miqps_mosek"]], "miqps_ot() (built-in function)": [[148, "miqps_ot"]], "mosek_options() (built-in function)": [[149, "mosek_options"]], "mosek_symbcon() (built-in function)": [[150, "mosek_symbcon"]], "mpomver() (built-in function)": [[151, "mpomver"]], "mpopt2nleqopt() (built-in function)": [[152, "mpopt2nleqopt"]], "mpopt2nlpopt() (built-in function)": [[153, "mpopt2nlpopt"]], "mpopt2pneopt() (built-in function)": [[154, "mpopt2pneopt"]], "mpopt2qpopt() (built-in function)": [[155, "mpopt2qpopt"]], "nested_struct_copy() (built-in function)": [[156, "nested_struct_copy"]], "nleqs_core() (built-in function)": [[157, "nleqs_core"]], "nleqs_fd_newton() (built-in function)": [[158, "nleqs_fd_newton"]], "nleqs_fsolve() (built-in function)": [[159, "nleqs_fsolve"]], "nleqs_gauss_seidel() (built-in function)": [[160, "nleqs_gauss_seidel"]], "nleqs_master() (built-in function)": [[161, "nleqs_master"]], "nleqs_master_ex1() (built-in function)": [[162, "nleqs_master_ex1"]], "nleqs_master_ex2() (built-in function)": [[163, "nleqs_master_ex2"]], "nleqs_newton() (built-in function)": [[164, "nleqs_newton"]], "nlp_consfcn() (built-in function)": [[165, "nlp_consfcn"]], "nlp_costfcn() (built-in function)": [[166, "nlp_costfcn"]], "nlp_hessfcn() (built-in function)": [[167, "nlp_hessfcn"]], "nlps_fmincon() (built-in function)": [[168, "nlps_fmincon"]], "nlps_ipopt() (built-in function)": [[169, "nlps_ipopt"]], "nlps_knitro() (built-in function)": [[170, "nlps_knitro"]], "nlps_master() (built-in function)": [[171, "nlps_master"]], "nlps_master_ex1() (built-in function)": [[172, "nlps_master_ex1"]], "nlps_master_ex2() (built-in function)": [[173, "nlps_master_ex2"]], "osqp_options() (built-in function)": [[174, "osqp_options"]], "osqpver() (built-in function)": [[175, "osqpver"]], "pne_callback_default() (built-in function)": [[176, "pne_callback_default"]], "pne_callback_nose() (built-in function)": [[177, "pne_callback_nose"]], "pne_callback_target_lam() (built-in function)": [[178, "pne_callback_target_lam"]], "pne_detect_events() (built-in function)": [[179, "pne_detect_events"]], "pne_detected_event() (built-in function)": [[180, "pne_detected_event"]], "pne_event_nose() (built-in function)": [[181, "pne_event_nose"]], "pne_event_target_lam() (built-in function)": [[182, "pne_event_target_lam"]], "pne_ex1() (built-in function)": [[183, "pne_ex1"]], "pne_pfcn_arc_len() (built-in function)": [[184, "pne_pfcn_arc_len"]], "pne_pfcn_natural() (built-in function)": [[185, "pne_pfcn_natural"]], "pne_pfcn_pseudo_arc_len() (built-in function)": [[186, "pne_pfcn_pseudo_arc_len"]], "pne_register_callbacks() (built-in function)": [[187, "pne_register_callbacks"]], "pne_register_events() (built-in function)": [[188, "pne_register_events"]], "pnes_master() (built-in function)": [[189, "pnes_master"]], "qp_ex1() (built-in function)": [[190, "qp_ex1"]], "qps_bpmpd() (built-in function)": [[191, "qps_bpmpd"]], "qps_clp() (built-in function)": [[192, "qps_clp"]], "qps_cplex() (built-in function)": [[193, "qps_cplex"]], "qps_glpk() (built-in function)": [[194, "qps_glpk"]], "qps_gurobi() (built-in function)": [[195, "qps_gurobi"]], "qps_ipopt() (built-in function)": [[196, "qps_ipopt"]], "qps_master() (built-in function)": [[197, "qps_master"]], "qps_mosek() (built-in function)": [[198, "qps_mosek"]], "qps_osqp() (built-in function)": [[199, "qps_osqp"]], "qps_ot() (built-in function)": [[200, "qps_ot"]], "t_miqps_master() (built-in function)": [[201, "t_miqps_master"]], "t_nested_struct_copy() (built-in function)": [[202, "t_nested_struct_copy"]], "t_nleqs_master() (built-in function)": [[203, "t_nleqs_master"]], "t_nlps_master() (built-in function)": [[204, "t_nlps_master"]], "t_om_solve_leqs() (built-in function)": [[205, "t_om_solve_leqs"]], "t_om_solve_miqps() (built-in function)": [[206, "t_om_solve_miqps"]], "t_om_solve_nleqs() (built-in function)": [[207, "t_om_solve_nleqs"]], "t_om_solve_nlps() (built-in function)": [[208, "t_om_solve_nlps"]], "t_om_solve_pne() (built-in function)": [[209, "t_om_solve_pne"]], "t_om_solve_qps() (built-in function)": [[210, "t_om_solve_qps"]], "t_opt_model() (built-in function)": [[211, "t_opt_model"]], "t_pnes_master() (built-in function)": [[212, "t_pnes_master"]], "t_qps_master() (built-in function)": [[213, "t_qps_master"]], "test_mp_opt_model() (built-in function)": [[214, "test_mp_opt_model"]], "have_feature() (built-in function)": [[217, "have_feature"]], "have_feature_matlab() (built-in function)": [[218, "have_feature_matlab"]], "have_feature_octave() (built-in function)": [[219, "have_feature_octave"]], "mptestver() (built-in function)": [[220, "mptestver"]], "t_begin() (built-in function)": [[221, "t_begin"]], "t_end() (built-in function)": [[222, "t_end"]], "t_file_match() (built-in function)": [[223, "t_file_match"]], "t_have_feature() (built-in function)": [[224, "t_have_feature"]], "t_is() (built-in function)": [[225, "t_is"]], "t_ok() (built-in function)": [[226, "t_ok"]], "t_run_tests() (built-in function)": [[227, "t_run_tests"]], "t_skip() (built-in function)": [[228, "t_skip"]], "t_str_match() (built-in function)": [[229, "t_str_match"]], "t_test_fcns() (built-in function)": [[230, "t_test_fcns"]], "test_mptest() (built-in function)": [[231, "test_mptest"]], "node_type (class in mp)": [[235, "mp.NODE_TYPE"]], "none (mp.node_type attribute)": [[235, "mp.NODE_TYPE.NONE"]], "pq (mp.node_type attribute)": [[235, "mp.NODE_TYPE.PQ"]], "pv (mp.node_type attribute)": [[235, "mp.NODE_TYPE.PV"]], "ref (mp.node_type attribute)": [[235, "mp.NODE_TYPE.REF"]], "is_valid() (mp.node_type static method)": [[235, "mp.NODE_TYPE.is_valid"]], "cost_table (class in mp)": [[236, "mp.cost_table"]], "cost_table() (mp.cost_table method)": [[236, "mp.cost_table.cost_table"]], "diff_poly_fcn() (mp.cost_table static method)": [[236, "mp.cost_table.diff_poly_fcn"]], "eval_poly_fcn() (mp.cost_table static method)": [[236, "mp.cost_table.eval_poly_fcn"]], "max_pwl_cost() (mp.cost_table method)": [[236, "mp.cost_table.max_pwl_cost"]], "poly_cost_fcn() (mp.cost_table static method)": [[236, "mp.cost_table.poly_cost_fcn"]], "poly_params() (mp.cost_table method)": [[236, "mp.cost_table.poly_params"]], "pwl_params() (mp.cost_table method)": [[236, "mp.cost_table.pwl_params"]], "cost_table_utils (class in mp)": [[237, "mp.cost_table_utils"]], "max_pwl_cost() (mp.cost_table_utils static method)": [[237, "mp.cost_table_utils.max_pwl_cost"]], "poly_params() (mp.cost_table_utils static method)": [[237, "mp.cost_table_utils.poly_params"]], "pwl_params() (mp.cost_table_utils static method)": [[237, "mp.cost_table_utils.pwl_params"]], "base_kva (mp.data_model attribute)": [[238, "mp.data_model.base_kva"]], "base_mva (mp.data_model attribute)": [[238, "mp.data_model.base_mva"]], "build() (mp.data_model method)": [[238, "mp.data_model.build"]], "build_params() (mp.data_model method)": [[238, "mp.data_model.build_params"]], "copy() (mp.data_model method)": [[238, "mp.data_model.copy"]], "count() (mp.data_model method)": [[238, "mp.data_model.count"]], "data_model (class in mp)": [[238, "mp.data_model"]], "data_model() (mp.data_model method)": [[238, "mp.data_model.data_model"]], "display() (mp.data_model method)": [[238, "mp.data_model.display"]], "initialize() (mp.data_model method)": [[238, "mp.data_model.initialize"]], "online() (mp.data_model method)": [[238, "mp.data_model.online"]], "pp_data() (mp.data_model method)": [[238, "mp.data_model.pp_data"]], "pp_flags() (mp.data_model method)": [[238, "mp.data_model.pp_flags"]], "pp_get_headers() (mp.data_model method)": [[238, "mp.data_model.pp_get_headers"]], "pp_get_headers_cnt() (mp.data_model method)": [[238, "mp.data_model.pp_get_headers_cnt"]], "pp_get_headers_ext() (mp.data_model method)": [[238, "mp.data_model.pp_get_headers_ext"]], "pp_get_headers_other() (mp.data_model method)": [[238, "mp.data_model.pp_get_headers_other"]], "pp_have_section() (mp.data_model method)": [[238, "mp.data_model.pp_have_section"]], "pp_section() (mp.data_model method)": [[238, "mp.data_model.pp_section"]], "pp_section_label() (mp.data_model method)": [[238, "mp.data_model.pp_section_label"]], "pp_section_list() (mp.data_model method)": [[238, "mp.data_model.pp_section_list"]], "pretty_print() (mp.data_model method)": [[238, "mp.data_model.pretty_print"]], "set_bus_v_lims_via_vg() (mp.data_model method)": [[238, "mp.data_model.set_bus_v_lims_via_vg"]], "source (mp.data_model attribute)": [[238, "mp.data_model.source"]], "update_status() (mp.data_model method)": [[238, "mp.data_model.update_status"]], "userdata (mp.data_model attribute)": [[238, "mp.data_model.userdata"]], "data_model_cpf (class in mp)": [[239, "mp.data_model_cpf"]], "data_model_cpf() (mp.data_model_cpf method)": [[239, "mp.data_model_cpf.data_model_cpf"]], "data_model_opf (class in mp)": [[240, "mp.data_model_opf"]], "data_model_opf() (mp.data_model_opf method)": [[240, "mp.data_model_opf.data_model_opf"]], "pp_flags() (mp.data_model_opf method)": [[240, "mp.data_model_opf.pp_flags"]], "pp_get_headers_other() (mp.data_model_opf method)": [[240, "mp.data_model_opf.pp_get_headers_other"]], "pp_section_list() (mp.data_model_opf method)": [[240, "mp.data_model_opf.pp_section_list"]], "build() (mp.dm_converter method)": [[241, "mp.dm_converter.build"]], "copy() (mp.dm_converter method)": [[241, "mp.dm_converter.copy"]], "display() (mp.dm_converter method)": [[241, "mp.dm_converter.display"]], "dm_converter (class in mp)": [[241, "mp.dm_converter"]], "export() (mp.dm_converter method)": [[241, "mp.dm_converter.export"]], "format_tag() (mp.dm_converter method)": [[241, "mp.dm_converter.format_tag"]], "import() (mp.dm_converter method)": [[241, "mp.dm_converter.import"]], "init_export() (mp.dm_converter method)": [[241, "mp.dm_converter.init_export"]], "save() (mp.dm_converter method)": [[241, "mp.dm_converter.save"]], "dm_converter_mpc2 (class in mp)": [[242, "mp.dm_converter_mpc2"]], "dm_converter_mpc2() (mp.dm_converter_mpc2 method)": [[242, "mp.dm_converter_mpc2.dm_converter_mpc2"]], "format_tag() (mp.dm_converter_mpc2 method)": [[242, "mp.dm_converter_mpc2.format_tag"]], "import() (mp.dm_converter_mpc2 method)": [[242, "mp.dm_converter_mpc2.import"]], "init_export() (mp.dm_converter_mpc2 method)": [[242, "mp.dm_converter_mpc2.init_export"]], "save() (mp.dm_converter_mpc2 method)": [[242, "mp.dm_converter_mpc2.save"]], "dm_converter_mpc2_legacy (class in mp)": [[243, "mp.dm_converter_mpc2_legacy"]], "legacy_user_mod_inputs() (mp.dm_converter_mpc2_legacy method)": [[243, "mp.dm_converter_mpc2_legacy.legacy_user_mod_inputs"]], "legacy_user_nln_constraints() (mp.dm_converter_mpc2_legacy method)": [[243, "mp.dm_converter_mpc2_legacy.legacy_user_nln_constraints"]], "id() (mp.dm_element method)": [[244, "mp.dm_element.ID"]], "id2i (mp.dm_element attribute)": [[244, "mp.dm_element.ID2i"]], "build_params() (mp.dm_element method)": [[244, "mp.dm_element.build_params"]], "copy() (mp.dm_element method)": [[244, "mp.dm_element.copy"]], "count() (mp.dm_element method)": [[244, "mp.dm_element.count"]], "cxn_idx_prop() (mp.dm_element method)": [[244, "mp.dm_element.cxn_idx_prop"]], "cxn_type() (mp.dm_element method)": [[244, "mp.dm_element.cxn_type"]], "cxn_type_prop() (mp.dm_element method)": [[244, "mp.dm_element.cxn_type_prop"]], "display() (mp.dm_element method)": [[244, "mp.dm_element.display"]], "dm_converter_element() (mp.dm_element method)": [[244, "mp.dm_element.dm_converter_element"]], "dm_element (class in mp)": [[244, "mp.dm_element"]], "export_vars() (mp.dm_element method)": [[244, "mp.dm_element.export_vars"]], "export_vars_offline_val() (mp.dm_element method)": [[244, "mp.dm_element.export_vars_offline_val"]], "i2on (mp.dm_element attribute)": [[244, "mp.dm_element.i2on"]], "init_status() (mp.dm_element method)": [[244, "mp.dm_element.init_status"]], "initialize() (mp.dm_element method)": [[244, "mp.dm_element.initialize"]], "label() (mp.dm_element method)": [[244, "mp.dm_element.label"]], "labels() (mp.dm_element method)": [[244, "mp.dm_element.labels"]], "main_table_var_names() (mp.dm_element method)": [[244, "mp.dm_element.main_table_var_names"]], "n (mp.dm_element attribute)": [[244, "mp.dm_element.n"]], "name() (mp.dm_element method)": [[244, "mp.dm_element.name"]], "nr (mp.dm_element attribute)": [[244, "mp.dm_element.nr"]], "off (mp.dm_element attribute)": [[244, "mp.dm_element.off"]], "on (mp.dm_element attribute)": [[244, "mp.dm_element.on"]], "pp_data() (mp.dm_element method)": [[244, "mp.dm_element.pp_data"]], "pp_data_cnt() (mp.dm_element method)": [[244, "mp.dm_element.pp_data_cnt"]], "pp_data_det() (mp.dm_element method)": [[244, "mp.dm_element.pp_data_det"]], "pp_data_ext() (mp.dm_element method)": [[244, "mp.dm_element.pp_data_ext"]], "pp_data_row_det() (mp.dm_element method)": [[244, "mp.dm_element.pp_data_row_det"]], "pp_data_sum() (mp.dm_element method)": [[244, "mp.dm_element.pp_data_sum"]], "pp_get_footers() (mp.dm_element method)": [[244, "mp.dm_element.pp_get_footers"]], "pp_get_footers_det() (mp.dm_element method)": [[244, "mp.dm_element.pp_get_footers_det"]], "pp_get_headers() (mp.dm_element method)": [[244, "mp.dm_element.pp_get_headers"]], "pp_get_headers_det() (mp.dm_element method)": [[244, "mp.dm_element.pp_get_headers_det"]], "pp_get_title_det() (mp.dm_element method)": [[244, "mp.dm_element.pp_get_title_det"]], "pp_have_section() (mp.dm_element method)": [[244, "mp.dm_element.pp_have_section"]], "pp_have_section_cnt() (mp.dm_element method)": [[244, "mp.dm_element.pp_have_section_cnt"]], "pp_have_section_det() (mp.dm_element method)": [[244, "mp.dm_element.pp_have_section_det"]], "pp_have_section_ext() (mp.dm_element method)": [[244, "mp.dm_element.pp_have_section_ext"]], "pp_have_section_sum() (mp.dm_element method)": [[244, "mp.dm_element.pp_have_section_sum"]], "pp_rows() (mp.dm_element method)": [[244, "mp.dm_element.pp_rows"]], "pretty_print() (mp.dm_element method)": [[244, "mp.dm_element.pretty_print"]], "rebuild() (mp.dm_element method)": [[244, "mp.dm_element.rebuild"]], "tab (mp.dm_element attribute)": [[244, "mp.dm_element.tab"]], "table_exists() (mp.dm_element method)": [[244, "mp.dm_element.table_exists"]], "update_status() (mp.dm_element method)": [[244, "mp.dm_element.update_status"]], "data_exists() (mp.dmc_element method)": [[245, "mp.dmc_element.data_exists"]], "data_field() (mp.dmc_element method)": [[245, "mp.dmc_element.data_field"]], "data_model_element() (mp.dmc_element method)": [[245, "mp.dmc_element.data_model_element"]], "data_subs() (mp.dmc_element method)": [[245, "mp.dmc_element.data_subs"]], "default_export_data_nrows() (mp.dmc_element method)": [[245, "mp.dmc_element.default_export_data_nrows"]], "default_export_data_table() (mp.dmc_element method)": [[245, "mp.dmc_element.default_export_data_table"]], "dmc_element (class in mp)": [[245, "mp.dmc_element"]], "export() (mp.dmc_element method)": [[245, "mp.dmc_element.export"]], "export_col() (mp.dmc_element method)": [[245, "mp.dmc_element.export_col"]], "export_table_values() (mp.dmc_element method)": [[245, "mp.dmc_element.export_table_values"]], "get_export_size() (mp.dmc_element method)": [[245, "mp.dmc_element.get_export_size"]], "get_export_spec() (mp.dmc_element method)": [[245, "mp.dmc_element.get_export_spec"]], "get_import_size() (mp.dmc_element method)": [[245, "mp.dmc_element.get_import_size"]], "get_import_spec() (mp.dmc_element method)": [[245, "mp.dmc_element.get_import_spec"]], "get_input_table_values() (mp.dmc_element method)": [[245, "mp.dmc_element.get_input_table_values"]], "import() (mp.dmc_element method)": [[245, "mp.dmc_element.import"]], "import_col() (mp.dmc_element method)": [[245, "mp.dmc_element.import_col"]], "import_table_values() (mp.dmc_element method)": [[245, "mp.dmc_element.import_table_values"]], "init_export_data() (mp.dmc_element method)": [[245, "mp.dmc_element.init_export_data"]], "name() (mp.dmc_element method)": [[245, "mp.dmc_element.name"]], "table_var_map() (mp.dmc_element method)": [[245, "mp.dmc_element.table_var_map"]], "data_field() (mp.dmce_branch_mpc2 method)": [[246, "mp.dmce_branch_mpc2.data_field"]], "default_export_data_table() (mp.dmce_branch_mpc2 method)": [[246, "mp.dmce_branch_mpc2.default_export_data_table"]], "dmce_branch_mpc2 (class in mp)": [[246, "mp.dmce_branch_mpc2"]], "name() (mp.dmce_branch_mpc2 method)": [[246, "mp.dmce_branch_mpc2.name"]], "table_var_map() (mp.dmce_branch_mpc2 method)": [[246, "mp.dmce_branch_mpc2.table_var_map"]], "bus_status_import() (mp.dmce_bus3p_mpc2 method)": [[247, "mp.dmce_bus3p_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus3p_mpc2 method)": [[247, "mp.dmce_bus3p_mpc2.data_field"]], "dmce_bus3p_mpc2 (class in mp)": [[247, "mp.dmce_bus3p_mpc2"]], "name() (mp.dmce_bus3p_mpc2 method)": [[247, "mp.dmce_bus3p_mpc2.name"]], "table_var_map() (mp.dmce_bus3p_mpc2 method)": [[247, "mp.dmce_bus3p_mpc2.table_var_map"]], "bus_name_export() (mp.dmce_bus_mpc2 method)": [[248, "mp.dmce_bus_mpc2.bus_name_export"]], "bus_name_import() (mp.dmce_bus_mpc2 method)": [[248, "mp.dmce_bus_mpc2.bus_name_import"]], "bus_status_import() (mp.dmce_bus_mpc2 method)": [[248, "mp.dmce_bus_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus_mpc2 method)": [[248, "mp.dmce_bus_mpc2.data_field"]], "default_export_data_table() (mp.dmce_bus_mpc2 method)": [[248, "mp.dmce_bus_mpc2.default_export_data_table"]], "dmce_bus_mpc2 (class in mp)": [[248, "mp.dmce_bus_mpc2"]], "init_export_data() (mp.dmce_bus_mpc2 method)": [[248, "mp.dmce_bus_mpc2.init_export_data"]], "name() (mp.dmce_bus_mpc2 method)": [[248, "mp.dmce_bus_mpc2.name"]], "table_var_map() (mp.dmce_bus_mpc2 method)": [[248, "mp.dmce_bus_mpc2.table_var_map"]], "data_field() (mp.dmce_buslink_mpc2 method)": [[249, "mp.dmce_buslink_mpc2.data_field"]], "dmce_buslink_mpc2 (class in mp)": [[249, "mp.dmce_buslink_mpc2"]], "name() (mp.dmce_buslink_mpc2 method)": [[249, "mp.dmce_buslink_mpc2.name"]], "table_var_map() (mp.dmce_buslink_mpc2 method)": [[249, "mp.dmce_buslink_mpc2.table_var_map"]], "data_field() (mp.dmce_gen3p_mpc2 method)": [[250, "mp.dmce_gen3p_mpc2.data_field"]], "dmce_gen3p_mpc2 (class in mp)": [[250, "mp.dmce_gen3p_mpc2"]], "name() (mp.dmce_gen3p_mpc2 method)": [[250, "mp.dmce_gen3p_mpc2.name"]], "table_var_map() (mp.dmce_gen3p_mpc2 method)": [[250, "mp.dmce_gen3p_mpc2.table_var_map"]], "cost_table2gencost() (mp.dmce_gen_mpc2 static method)": [[251, "mp.dmce_gen_mpc2.cost_table2gencost"]], "data_field() (mp.dmce_gen_mpc2 method)": [[251, "mp.dmce_gen_mpc2.data_field"]], "default_export_data_table() (mp.dmce_gen_mpc2 method)": [[251, "mp.dmce_gen_mpc2.default_export_data_table"]], "dmce_gen_mpc2 (class in mp)": [[251, "mp.dmce_gen_mpc2"]], "gen_cost_export() (mp.dmce_gen_mpc2 method)": [[251, "mp.dmce_gen_mpc2.gen_cost_export"]], "gen_cost_import() (mp.dmce_gen_mpc2 method)": [[251, "mp.dmce_gen_mpc2.gen_cost_import"]], "gencost2cost_table() (mp.dmce_gen_mpc2 static method)": [[251, "mp.dmce_gen_mpc2.gencost2cost_table"]], "name() (mp.dmce_gen_mpc2 method)": [[251, "mp.dmce_gen_mpc2.name"]], "pwl1 (mp.dmce_gen_mpc2 attribute)": [[251, "mp.dmce_gen_mpc2.pwl1"]], "start_cost_export() (mp.dmce_gen_mpc2 method)": [[251, "mp.dmce_gen_mpc2.start_cost_export"]], "start_cost_import() (mp.dmce_gen_mpc2 method)": [[251, "mp.dmce_gen_mpc2.start_cost_import"]], "table_var_map() (mp.dmce_gen_mpc2 method)": [[251, "mp.dmce_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_legacy_dcline_mpc2 method)": [[252, "mp.dmce_legacy_dcline_mpc2.data_field"]], "dcline_cost_export() (mp.dmce_legacy_dcline_mpc2 method)": [[252, "mp.dmce_legacy_dcline_mpc2.dcline_cost_export"]], "dcline_cost_import() (mp.dmce_legacy_dcline_mpc2 method)": [[252, "mp.dmce_legacy_dcline_mpc2.dcline_cost_import"]], "default_export_data_table() (mp.dmce_legacy_dcline_mpc2 method)": [[252, "mp.dmce_legacy_dcline_mpc2.default_export_data_table"]], "dmce_legacy_dcline_mpc2 (class in mp)": [[252, "mp.dmce_legacy_dcline_mpc2"]], "name() (mp.dmce_legacy_dcline_mpc2 method)": [[252, "mp.dmce_legacy_dcline_mpc2.name"]], "table_var_map() (mp.dmce_legacy_dcline_mpc2 method)": [[252, "mp.dmce_legacy_dcline_mpc2.table_var_map"]], "create_line_construction_table() (mp.dmce_line3p_mpc2 method)": [[253, "mp.dmce_line3p_mpc2.create_line_construction_table"]], "data_field() (mp.dmce_line3p_mpc2 method)": [[253, "mp.dmce_line3p_mpc2.data_field"]], "dmce_line3p_mpc2 (class in mp)": [[253, "mp.dmce_line3p_mpc2"]], "import() (mp.dmce_line3p_mpc2 method)": [[253, "mp.dmce_line3p_mpc2.import"]], "name() (mp.dmce_line3p_mpc2 method)": [[253, "mp.dmce_line3p_mpc2.name"]], "table_var_map() (mp.dmce_line3p_mpc2 method)": [[253, "mp.dmce_line3p_mpc2.table_var_map"]], "bus (mp.dmce_load3p_mpc2 attribute)": [[254, "mp.dmce_load3p_mpc2.bus"]], "data_field() (mp.dmce_load3p_mpc2 method)": [[254, "mp.dmce_load3p_mpc2.data_field"]], "dmce_load3p_mpc2 (class in mp)": [[254, "mp.dmce_load3p_mpc2"]], "name() (mp.dmce_load3p_mpc2 method)": [[254, "mp.dmce_load3p_mpc2.name"]], "table_var_map() (mp.dmce_load3p_mpc2 method)": [[254, "mp.dmce_load3p_mpc2.table_var_map"]], "bus (mp.dmce_load_mpc2 attribute)": [[255, "mp.dmce_load_mpc2.bus"]], "data_field() (mp.dmce_load_mpc2 method)": [[255, "mp.dmce_load_mpc2.data_field"]], "dmce_load_mpc2 (class in mp)": [[255, "mp.dmce_load_mpc2"]], "get_export_size() (mp.dmce_load_mpc2 method)": [[255, "mp.dmce_load_mpc2.get_export_size"]], "get_import_size() (mp.dmce_load_mpc2 method)": [[255, "mp.dmce_load_mpc2.get_import_size"]], "name() (mp.dmce_load_mpc2 method)": [[255, "mp.dmce_load_mpc2.name"]], "scale_factor_fcn() (mp.dmce_load_mpc2 method)": [[255, "mp.dmce_load_mpc2.scale_factor_fcn"]], "sys_wide_zip_loads() (mp.dmce_load_mpc2 method)": [[255, "mp.dmce_load_mpc2.sys_wide_zip_loads"]], "table_var_map() (mp.dmce_load_mpc2 method)": [[255, "mp.dmce_load_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.data_subs"]], "dmce_reserve_gen_mpc2 (class in mp)": [[256, "mp.dmce_reserve_gen_mpc2"]], "get_export_size() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.get_export_size"]], "get_import_size() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.get_import_size"]], "import() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.import"]], "import_cost() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.import_cost"]], "import_qty() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.import_qty"]], "import_ramp() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.import_ramp"]], "name() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.name"]], "table_var_map() (mp.dmce_reserve_gen_mpc2 method)": [[256, "mp.dmce_reserve_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_zone_mpc2 method)": [[257, "mp.dmce_reserve_zone_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_zone_mpc2 method)": [[257, "mp.dmce_reserve_zone_mpc2.data_subs"]], "dmce_reserve_zone_mpc2 (class in mp)": [[257, "mp.dmce_reserve_zone_mpc2"]], "import_req() (mp.dmce_reserve_zone_mpc2 method)": [[257, "mp.dmce_reserve_zone_mpc2.import_req"]], "import_zones() (mp.dmce_reserve_zone_mpc2 method)": [[257, "mp.dmce_reserve_zone_mpc2.import_zones"]], "name() (mp.dmce_reserve_zone_mpc2 method)": [[257, "mp.dmce_reserve_zone_mpc2.name"]], "table_var_map() (mp.dmce_reserve_zone_mpc2 method)": [[257, "mp.dmce_reserve_zone_mpc2.table_var_map"]], "bus (mp.dmce_shunt_mpc2 attribute)": [[258, "mp.dmce_shunt_mpc2.bus"]], "data_field() (mp.dmce_shunt_mpc2 method)": [[258, "mp.dmce_shunt_mpc2.data_field"]], "dmce_shunt_mpc2 (class in mp)": [[258, "mp.dmce_shunt_mpc2"]], "get_export_size() (mp.dmce_shunt_mpc2 method)": [[258, "mp.dmce_shunt_mpc2.get_export_size"]], "get_import_size() (mp.dmce_shunt_mpc2 method)": [[258, "mp.dmce_shunt_mpc2.get_import_size"]], "name() (mp.dmce_shunt_mpc2 method)": [[258, "mp.dmce_shunt_mpc2.name"]], "table_var_map() (mp.dmce_shunt_mpc2 method)": [[258, "mp.dmce_shunt_mpc2.table_var_map"]], "data_field() (mp.dmce_xfmr3p_mpc2 method)": [[259, "mp.dmce_xfmr3p_mpc2.data_field"]], "dmce_xfmr3p_mpc2 (class in mp)": [[259, "mp.dmce_xfmr3p_mpc2"]], "name() (mp.dmce_xfmr3p_mpc2 method)": [[259, "mp.dmce_xfmr3p_mpc2.name"]], "table_var_map() (mp.dmce_xfmr3p_mpc2 method)": [[259, "mp.dmce_xfmr3p_mpc2.table_var_map"]], "b_fr (mp.dme_branch attribute)": [[260, "mp.dme_branch.b_fr"]], "b_to (mp.dme_branch attribute)": [[260, "mp.dme_branch.b_to"]], "build_params() (mp.dme_branch method)": [[260, "mp.dme_branch.build_params"]], "cxn_idx_prop() (mp.dme_branch method)": [[260, "mp.dme_branch.cxn_idx_prop"]], "cxn_type() (mp.dme_branch method)": [[260, "mp.dme_branch.cxn_type"]], "dme_branch (class in mp)": [[260, "mp.dme_branch"]], "export_vars() (mp.dme_branch method)": [[260, "mp.dme_branch.export_vars"]], "export_vars_offline_val() (mp.dme_branch method)": [[260, "mp.dme_branch.export_vars_offline_val"]], "fbus (mp.dme_branch attribute)": [[260, "mp.dme_branch.fbus"]], "g_fr (mp.dme_branch attribute)": [[260, "mp.dme_branch.g_fr"]], "g_to (mp.dme_branch attribute)": [[260, "mp.dme_branch.g_to"]], "initialize() (mp.dme_branch method)": [[260, "mp.dme_branch.initialize"]], "label() (mp.dme_branch method)": [[260, "mp.dme_branch.label"]], "labels() (mp.dme_branch method)": [[260, "mp.dme_branch.labels"]], "main_table_var_names() (mp.dme_branch method)": [[260, "mp.dme_branch.main_table_var_names"]], "name() (mp.dme_branch method)": [[260, "mp.dme_branch.name"]], "pp_data_cnt() (mp.dme_branch method)": [[260, "mp.dme_branch.pp_data_cnt"]], "pp_data_row_det() (mp.dme_branch method)": [[260, "mp.dme_branch.pp_data_row_det"]], "pp_data_sum() (mp.dme_branch method)": [[260, "mp.dme_branch.pp_data_sum"]], "pp_get_headers_det() (mp.dme_branch method)": [[260, "mp.dme_branch.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_branch method)": [[260, "mp.dme_branch.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_branch method)": [[260, "mp.dme_branch.pp_have_section_sum"]], "r (mp.dme_branch attribute)": [[260, "mp.dme_branch.r"]], "rate_a (mp.dme_branch attribute)": [[260, "mp.dme_branch.rate_a"]], "ta (mp.dme_branch attribute)": [[260, "mp.dme_branch.ta"]], "tbus (mp.dme_branch attribute)": [[260, "mp.dme_branch.tbus"]], "tm (mp.dme_branch attribute)": [[260, "mp.dme_branch.tm"]], "update_status() (mp.dme_branch method)": [[260, "mp.dme_branch.update_status"]], "x (mp.dme_branch attribute)": [[260, "mp.dme_branch.x"]], "dme_branch_opf (class in mp)": [[261, "mp.dme_branch_opf"]], "export_vars() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.export_vars"]], "export_vars_offline_val() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.pp_get_headers_lim"]], "pp_get_title_lim() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_branch_opf method)": [[261, "mp.dme_branch_opf.pretty_print"]], "build_params() (mp.dme_bus method)": [[262, "mp.dme_bus.build_params"]], "dme_bus (class in mp)": [[262, "mp.dme_bus"]], "export_vars() (mp.dme_bus method)": [[262, "mp.dme_bus.export_vars"]], "export_vars_offline_val() (mp.dme_bus method)": [[262, "mp.dme_bus.export_vars_offline_val"]], "init_status() (mp.dme_bus method)": [[262, "mp.dme_bus.init_status"]], "label() (mp.dme_bus method)": [[262, "mp.dme_bus.label"]], "labels() (mp.dme_bus method)": [[262, "mp.dme_bus.labels"]], "main_table_var_names() (mp.dme_bus method)": [[262, "mp.dme_bus.main_table_var_names"]], "name() (mp.dme_bus method)": [[262, "mp.dme_bus.name"]], "pp_data_cnt() (mp.dme_bus method)": [[262, "mp.dme_bus.pp_data_cnt"]], "pp_data_ext() (mp.dme_bus method)": [[262, "mp.dme_bus.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus method)": [[262, "mp.dme_bus.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus method)": [[262, "mp.dme_bus.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus method)": [[262, "mp.dme_bus.pp_have_section_det"]], "pp_have_section_ext() (mp.dme_bus method)": [[262, "mp.dme_bus.pp_have_section_ext"]], "set_bus_type_pq() (mp.dme_bus method)": [[262, "mp.dme_bus.set_bus_type_pq"]], "set_bus_type_pv() (mp.dme_bus method)": [[262, "mp.dme_bus.set_bus_type_pv"]], "set_bus_type_ref() (mp.dme_bus method)": [[262, "mp.dme_bus.set_bus_type_ref"]], "type (mp.dme_bus attribute)": [[262, "mp.dme_bus.type"]], "update_status() (mp.dme_bus method)": [[262, "mp.dme_bus.update_status"]], "va_start (mp.dme_bus attribute)": [[262, "mp.dme_bus.va_start"]], "vm_control (mp.dme_bus attribute)": [[262, "mp.dme_bus.vm_control"]], "vm_lb (mp.dme_bus attribute)": [[262, "mp.dme_bus.vm_lb"]], "vm_start (mp.dme_bus attribute)": [[262, "mp.dme_bus.vm_start"]], "vm_ub (mp.dme_bus attribute)": [[262, "mp.dme_bus.vm_ub"]], "build_params() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.build_params"]], "dme_bus3p (class in mp)": [[263, "mp.dme_bus3p"]], "init_status() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.init_status"]], "label() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.label"]], "labels() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.labels"]], "main_table_var_names() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.main_table_var_names"]], "name() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.name"]], "pp_data_row_det() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.pp_have_section_det"]], "type (mp.dme_bus3p attribute)": [[263, "mp.dme_bus3p.type"]], "update_status() (mp.dme_bus3p method)": [[263, "mp.dme_bus3p.update_status"]], "va1_start (mp.dme_bus3p attribute)": [[263, "mp.dme_bus3p.va1_start"]], "va2_start (mp.dme_bus3p attribute)": [[263, "mp.dme_bus3p.va2_start"]], "va3_start (mp.dme_bus3p attribute)": [[263, "mp.dme_bus3p.va3_start"]], "vm1_start (mp.dme_bus3p attribute)": [[263, "mp.dme_bus3p.vm1_start"]], "vm2_start (mp.dme_bus3p attribute)": [[263, "mp.dme_bus3p.vm2_start"]], "vm3_start (mp.dme_bus3p attribute)": [[263, "mp.dme_bus3p.vm3_start"]], "vm_control (mp.dme_bus3p attribute)": [[263, "mp.dme_bus3p.vm_control"]], "dme_bus3p_opf (class in mp)": [[264, "mp.dme_bus3p_opf"]], "dme_bus_opf (class in mp)": [[265, "mp.dme_bus_opf"]], "export_vars() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.export_vars"]], "export_vars_offline_val() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.pp_binding_rows_lim"]], "pp_data_ext() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.pp_data_row_lim"]], "pp_get_headers_det() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_bus_opf method)": [[265, "mp.dme_bus_opf.pp_have_section_lim"]], "build_params() (mp.dme_buslink method)": [[266, "mp.dme_buslink.build_params"]], "bus (mp.dme_buslink attribute)": [[266, "mp.dme_buslink.bus"]], "bus3p (mp.dme_buslink attribute)": [[266, "mp.dme_buslink.bus3p"]], "cxn_idx_prop() (mp.dme_buslink method)": [[266, "mp.dme_buslink.cxn_idx_prop"]], "cxn_type() (mp.dme_buslink method)": [[266, "mp.dme_buslink.cxn_type"]], "dme_buslink (class in mp)": [[266, "mp.dme_buslink"]], "initialize() (mp.dme_buslink method)": [[266, "mp.dme_buslink.initialize"]], "label() (mp.dme_buslink method)": [[266, "mp.dme_buslink.label"]], "labels() (mp.dme_buslink method)": [[266, "mp.dme_buslink.labels"]], "main_table_var_names() (mp.dme_buslink method)": [[266, "mp.dme_buslink.main_table_var_names"]], "name() (mp.dme_buslink method)": [[266, "mp.dme_buslink.name"]], "pg1_start (mp.dme_buslink attribute)": [[266, "mp.dme_buslink.pg1_start"]], "pg2_start (mp.dme_buslink attribute)": [[266, "mp.dme_buslink.pg2_start"]], "pg3_start (mp.dme_buslink attribute)": [[266, "mp.dme_buslink.pg3_start"]], "pp_data_row_det() (mp.dme_buslink method)": [[266, "mp.dme_buslink.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_buslink method)": [[266, "mp.dme_buslink.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_buslink method)": [[266, "mp.dme_buslink.pp_have_section_det"]], "qg1_start (mp.dme_buslink attribute)": [[266, "mp.dme_buslink.qg1_start"]], "qg2_start (mp.dme_buslink attribute)": [[266, "mp.dme_buslink.qg2_start"]], "qg3_start (mp.dme_buslink attribute)": [[266, "mp.dme_buslink.qg3_start"]], "update_status() (mp.dme_buslink method)": [[266, "mp.dme_buslink.update_status"]], "dme_buslink_opf (class in mp)": [[267, "mp.dme_buslink_opf"]], "apply_vm_setpoint() (mp.dme_gen method)": [[268, "mp.dme_gen.apply_vm_setpoint"]], "build_params() (mp.dme_gen method)": [[268, "mp.dme_gen.build_params"]], "bus (mp.dme_gen attribute)": [[268, "mp.dme_gen.bus"]], "bus_on (mp.dme_gen attribute)": [[268, "mp.dme_gen.bus_on"]], "cxn_idx_prop() (mp.dme_gen method)": [[268, "mp.dme_gen.cxn_idx_prop"]], "cxn_type() (mp.dme_gen method)": [[268, "mp.dme_gen.cxn_type"]], "dme_gen (class in mp)": [[268, "mp.dme_gen"]], "export_vars() (mp.dme_gen method)": [[268, "mp.dme_gen.export_vars"]], "export_vars_offline_val() (mp.dme_gen method)": [[268, "mp.dme_gen.export_vars_offline_val"]], "have_cost() (mp.dme_gen method)": [[268, "mp.dme_gen.have_cost"]], "initialize() (mp.dme_gen method)": [[268, "mp.dme_gen.initialize"]], "isload() (mp.dme_gen method)": [[268, "mp.dme_gen.isload"]], "label() (mp.dme_gen method)": [[268, "mp.dme_gen.label"]], "labels() (mp.dme_gen method)": [[268, "mp.dme_gen.labels"]], "main_table_var_names() (mp.dme_gen method)": [[268, "mp.dme_gen.main_table_var_names"]], "name() (mp.dme_gen method)": [[268, "mp.dme_gen.name"]], "pg_lb (mp.dme_gen attribute)": [[268, "mp.dme_gen.pg_lb"]], "pg_start (mp.dme_gen attribute)": [[268, "mp.dme_gen.pg_start"]], "pg_ub (mp.dme_gen attribute)": [[268, "mp.dme_gen.pg_ub"]], "pp_data_row_det() (mp.dme_gen method)": [[268, "mp.dme_gen.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen method)": [[268, "mp.dme_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_gen method)": [[268, "mp.dme_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_gen method)": [[268, "mp.dme_gen.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen method)": [[268, "mp.dme_gen.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen method)": [[268, "mp.dme_gen.pp_have_section_sum"]], "qg_lb (mp.dme_gen attribute)": [[268, "mp.dme_gen.qg_lb"]], "qg_start (mp.dme_gen attribute)": [[268, "mp.dme_gen.qg_start"]], "qg_ub (mp.dme_gen attribute)": [[268, "mp.dme_gen.qg_ub"]], "update_status() (mp.dme_gen method)": [[268, "mp.dme_gen.update_status"]], "violated_q_lims() (mp.dme_gen method)": [[268, "mp.dme_gen.violated_q_lims"]], "vm_setpoint (mp.dme_gen attribute)": [[268, "mp.dme_gen.vm_setpoint"]], "apply_vm_setpoint() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.apply_vm_setpoint"]], "build_params() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.build_params"]], "bus (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.bus"]], "bus_on (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.bus_on"]], "cxn_idx_prop() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.cxn_idx_prop"]], "cxn_type() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.cxn_type"]], "dme_gen3p (class in mp)": [[269, "mp.dme_gen3p"]], "initialize() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.initialize"]], "label() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.label"]], "labels() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.labels"]], "main_table_var_names() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.main_table_var_names"]], "name() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.name"]], "pg1_start (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.pg1_start"]], "pg2_start (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.pg2_start"]], "pg3_start (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.pg3_start"]], "pp_data_row_det() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.pp_have_section_sum"]], "qg1_start (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.qg1_start"]], "qg2_start (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.qg2_start"]], "qg3_start (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.qg3_start"]], "update_status() (mp.dme_gen3p method)": [[269, "mp.dme_gen3p.update_status"]], "vm1_setpoint (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.vm1_setpoint"]], "vm2_setpoint (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.vm2_setpoint"]], "vm3_setpoint (mp.dme_gen3p attribute)": [[269, "mp.dme_gen3p.vm3_setpoint"]], "dme_gen3p_opf (class in mp)": [[270, "mp.dme_gen3p_opf"]], "build_cost_params() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.build_cost_params"]], "dme_gen_opf (class in mp)": [[271, "mp.dme_gen_opf"]], "export_vars() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.export_vars"]], "export_vars_offline_val() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.export_vars_offline_val"]], "have_cost() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.have_cost"]], "main_table_var_names() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.main_table_var_names"]], "max_pwl_gencost() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.max_pwl_gencost"]], "pp_binding_rows_lim() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_gen_opf method)": [[271, "mp.dme_gen_opf.pretty_print"]], "apply_vm_setpoints() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.apply_vm_setpoints"]], "build_params() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.build_params"]], "cxn_idx_prop() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.cxn_idx_prop"]], "cxn_type() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.cxn_type"]], "dme_legacy_dcline (class in mp)": [[272, "mp.dme_legacy_dcline"]], "export_vars() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.export_vars_offline_val"]], "fbus (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.fbus"]], "fbus_on (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.fbus_on"]], "have_cost() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.have_cost"]], "initialize() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.initialize"]], "label() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.label"]], "labels() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.labels"]], "loss0 (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.loss0"]], "loss1 (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.loss1"]], "main_table_var_names() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.main_table_var_names"]], "name() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.name"]], "p_fr_lb (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.p_fr_lb"]], "p_fr_start (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.p_fr_start"]], "p_fr_ub (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.p_fr_ub"]], "p_to_start (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.p_to_start"]], "pp_data_row_det() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.pp_data_row_det"]], "pp_data_sum() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.pp_data_sum"]], "pp_get_headers_det() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.pp_have_section_sum"]], "q_fr_lb (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.q_fr_lb"]], "q_fr_start (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.q_fr_start"]], "q_fr_ub (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.q_fr_ub"]], "q_to_lb (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.q_to_lb"]], "q_to_start (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.q_to_start"]], "q_to_ub (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.q_to_ub"]], "tbus (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.tbus"]], "tbus_on (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.tbus_on"]], "update_status() (mp.dme_legacy_dcline method)": [[272, "mp.dme_legacy_dcline.update_status"]], "vm_setpoint_fr (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.vm_setpoint_fr"]], "vm_setpoint_to (mp.dme_legacy_dcline attribute)": [[272, "mp.dme_legacy_dcline.vm_setpoint_to"]], "build_cost_params() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.build_cost_params"]], "dme_legacy_dcline_opf (class in mp)": [[273, "mp.dme_legacy_dcline_opf"]], "export_vars() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.export_vars_offline_val"]], "have_cost() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.have_cost"]], "main_table_var_names() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_legacy_dcline_opf method)": [[273, "mp.dme_legacy_dcline_opf.pretty_print"]], "build_params() (mp.dme_line3p method)": [[274, "mp.dme_line3p.build_params"]], "create_line_construction_table() (mp.dme_line3p method)": [[274, "mp.dme_line3p.create_line_construction_table"]], "cxn_idx_prop() (mp.dme_line3p method)": [[274, "mp.dme_line3p.cxn_idx_prop"]], "cxn_type() (mp.dme_line3p method)": [[274, "mp.dme_line3p.cxn_type"]], "dme_line3p (class in mp)": [[274, "mp.dme_line3p"]], "fbus (mp.dme_line3p attribute)": [[274, "mp.dme_line3p.fbus"]], "freq (mp.dme_line3p attribute)": [[274, "mp.dme_line3p.freq"]], "initialize() (mp.dme_line3p method)": [[274, "mp.dme_line3p.initialize"]], "label() (mp.dme_line3p method)": [[274, "mp.dme_line3p.label"]], "labels() (mp.dme_line3p method)": [[274, "mp.dme_line3p.labels"]], "lc (mp.dme_line3p attribute)": [[274, "mp.dme_line3p.lc"]], "lc_tab (mp.dme_line3p attribute)": [[274, "mp.dme_line3p.lc_tab"]], "lc_table_var_names() (mp.dme_line3p method)": [[274, "mp.dme_line3p.lc_table_var_names"]], "len (mp.dme_line3p attribute)": [[274, "mp.dme_line3p.len"]], "main_table_var_names() (mp.dme_line3p method)": [[274, "mp.dme_line3p.main_table_var_names"]], "name() (mp.dme_line3p method)": [[274, "mp.dme_line3p.name"]], "pp_data_row_det() (mp.dme_line3p method)": [[274, "mp.dme_line3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_line3p method)": [[274, "mp.dme_line3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_line3p method)": [[274, "mp.dme_line3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_line3p method)": [[274, "mp.dme_line3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_line3p method)": [[274, "mp.dme_line3p.pp_have_section_sum"]], "pretty_print() (mp.dme_line3p method)": [[274, "mp.dme_line3p.pretty_print"]], "symmat2vec() (mp.dme_line3p method)": [[274, "mp.dme_line3p.symmat2vec"]], "tbus (mp.dme_line3p attribute)": [[274, "mp.dme_line3p.tbus"]], "update_status() (mp.dme_line3p method)": [[274, "mp.dme_line3p.update_status"]], "vec2symmat() (mp.dme_line3p method)": [[274, "mp.dme_line3p.vec2symmat"]], "yc (mp.dme_line3p attribute)": [[274, "mp.dme_line3p.yc"]], "ys (mp.dme_line3p attribute)": [[274, "mp.dme_line3p.ys"]], "dme_line3p_opf (class in mp)": [[275, "mp.dme_line3p_opf"]], "build_params() (mp.dme_load method)": [[276, "mp.dme_load.build_params"]], "bus (mp.dme_load attribute)": [[276, "mp.dme_load.bus"]], "count() (mp.dme_load method)": [[276, "mp.dme_load.count"]], "cxn_idx_prop() (mp.dme_load method)": [[276, "mp.dme_load.cxn_idx_prop"]], "cxn_type() (mp.dme_load method)": [[276, "mp.dme_load.cxn_type"]], "dme_load (class in mp)": [[276, "mp.dme_load"]], "label() (mp.dme_load method)": [[276, "mp.dme_load.label"]], "labels() (mp.dme_load method)": [[276, "mp.dme_load.labels"]], "main_table_var_names() (mp.dme_load method)": [[276, "mp.dme_load.main_table_var_names"]], "name() (mp.dme_load method)": [[276, "mp.dme_load.name"]], "pd (mp.dme_load attribute)": [[276, "mp.dme_load.pd"]], "pd_i (mp.dme_load attribute)": [[276, "mp.dme_load.pd_i"]], "pd_z (mp.dme_load attribute)": [[276, "mp.dme_load.pd_z"]], "pp_data_row_det() (mp.dme_load method)": [[276, "mp.dme_load.pp_data_row_det"]], "pp_data_sum() (mp.dme_load method)": [[276, "mp.dme_load.pp_data_sum"]], "pp_get_footers_det() (mp.dme_load method)": [[276, "mp.dme_load.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_load method)": [[276, "mp.dme_load.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load method)": [[276, "mp.dme_load.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load method)": [[276, "mp.dme_load.pp_have_section_sum"]], "qd (mp.dme_load attribute)": [[276, "mp.dme_load.qd"]], "qd_i (mp.dme_load attribute)": [[276, "mp.dme_load.qd_i"]], "qd_z (mp.dme_load attribute)": [[276, "mp.dme_load.qd_z"]], "update_status() (mp.dme_load method)": [[276, "mp.dme_load.update_status"]], "build_params() (mp.dme_load3p method)": [[277, "mp.dme_load3p.build_params"]], "bus (mp.dme_load3p attribute)": [[277, "mp.dme_load3p.bus"]], "cxn_idx_prop() (mp.dme_load3p method)": [[277, "mp.dme_load3p.cxn_idx_prop"]], "cxn_type() (mp.dme_load3p method)": [[277, "mp.dme_load3p.cxn_type"]], "dme_load3p (class in mp)": [[277, "mp.dme_load3p"]], "initialize() (mp.dme_load3p method)": [[277, "mp.dme_load3p.initialize"]], "label() (mp.dme_load3p method)": [[277, "mp.dme_load3p.label"]], "labels() (mp.dme_load3p method)": [[277, "mp.dme_load3p.labels"]], "main_table_var_names() (mp.dme_load3p method)": [[277, "mp.dme_load3p.main_table_var_names"]], "name() (mp.dme_load3p method)": [[277, "mp.dme_load3p.name"]], "pd1 (mp.dme_load3p attribute)": [[277, "mp.dme_load3p.pd1"]], "pd2 (mp.dme_load3p attribute)": [[277, "mp.dme_load3p.pd2"]], "pd3 (mp.dme_load3p attribute)": [[277, "mp.dme_load3p.pd3"]], "pf1 (mp.dme_load3p attribute)": [[277, "mp.dme_load3p.pf1"]], "pf2 (mp.dme_load3p attribute)": [[277, "mp.dme_load3p.pf2"]], "pf3 (mp.dme_load3p attribute)": [[277, "mp.dme_load3p.pf3"]], "pp_data_row_det() (mp.dme_load3p method)": [[277, "mp.dme_load3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_load3p method)": [[277, "mp.dme_load3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_load3p method)": [[277, "mp.dme_load3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load3p method)": [[277, "mp.dme_load3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load3p method)": [[277, "mp.dme_load3p.pp_have_section_sum"]], "update_status() (mp.dme_load3p method)": [[277, "mp.dme_load3p.update_status"]], "dme_load3p_opf (class in mp)": [[278, "mp.dme_load3p_opf"]], "dme_load_cpf (class in mp)": [[279, "mp.dme_load_cpf"]], "export_vars() (mp.dme_load_cpf method)": [[279, "mp.dme_load_cpf.export_vars"]], "parameterized() (mp.dme_load_cpf method)": [[279, "mp.dme_load_cpf.parameterized"]], "dme_load_opf (class in mp)": [[280, "mp.dme_load_opf"]], "build_params() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.build_params"]], "dme_reserve_gen (class in mp)": [[281, "mp.dme_reserve_gen"]], "export_vars() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.export_vars_offline_val"]], "gen (mp.dme_reserve_gen attribute)": [[281, "mp.dme_reserve_gen.gen"]], "label() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.label"]], "labels() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.labels"]], "main_table_var_names() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.main_table_var_names"]], "name() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.name"]], "pp_binding_rows_lim() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_binding_rows_lim"]], "pp_data_row_det() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_data_row_lim"]], "pp_data_sum() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_get_headers_lim"]], "pp_have_section_det() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_have_section_det"]], "pp_have_section_lim() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_have_section_lim"]], "pp_have_section_sum() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.pp_have_section_sum"]], "r_ub (mp.dme_reserve_gen attribute)": [[281, "mp.dme_reserve_gen.r_ub"]], "update_status() (mp.dme_reserve_gen method)": [[281, "mp.dme_reserve_gen.update_status"]], "build_params() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.build_params"]], "dme_reserve_zone (class in mp)": [[282, "mp.dme_reserve_zone"]], "export_vars() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.export_vars_offline_val"]], "label() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.label"]], "labels() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.labels"]], "main_table_var_names() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.main_table_var_names"]], "name() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.name"]], "pp_data_row_det() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.pp_have_section_det"]], "req (mp.dme_reserve_zone attribute)": [[282, "mp.dme_reserve_zone.req"]], "update_status() (mp.dme_reserve_zone method)": [[282, "mp.dme_reserve_zone.update_status"]], "zones (mp.dme_reserve_zone attribute)": [[282, "mp.dme_reserve_zone.zones"]], "ctol (mp.dme_shared_opf attribute)": [[283, "mp.dme_shared_opf.ctol"]], "dme_shared_opf (class in mp)": [[283, "mp.dme_shared_opf"]], "pp_binding_rows_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_binding_rows_lim"]], "pp_data_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_data_lim"]], "pp_data_other() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_data_other"]], "pp_data_row_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_data_row_lim"]], "pp_get_footers_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_get_footers_lim"]], "pp_get_footers_other() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_get_footers_other"]], "pp_get_headers_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_get_headers_lim"]], "pp_get_headers_other() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_get_headers_other"]], "pp_get_title_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_have_section_lim"]], "pp_have_section_other() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_have_section_other"]], "pp_rows_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_rows_lim"]], "pp_rows_other() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_rows_other"]], "pp_set_tols_lim() (mp.dme_shared_opf method)": [[283, "mp.dme_shared_opf.pp_set_tols_lim"]], "ptol (mp.dme_shared_opf attribute)": [[283, "mp.dme_shared_opf.ptol"]], "bs (mp.dme_shunt attribute)": [[284, "mp.dme_shunt.bs"]], "build_params() (mp.dme_shunt method)": [[284, "mp.dme_shunt.build_params"]], "bus (mp.dme_shunt attribute)": [[284, "mp.dme_shunt.bus"]], "count() (mp.dme_shunt method)": [[284, "mp.dme_shunt.count"]], "cxn_idx_prop() (mp.dme_shunt method)": [[284, "mp.dme_shunt.cxn_idx_prop"]], "cxn_type() (mp.dme_shunt method)": [[284, "mp.dme_shunt.cxn_type"]], "dme_shunt (class in mp)": [[284, "mp.dme_shunt"]], "gs (mp.dme_shunt attribute)": [[284, "mp.dme_shunt.gs"]], "label() (mp.dme_shunt method)": [[284, "mp.dme_shunt.label"]], "labels() (mp.dme_shunt method)": [[284, "mp.dme_shunt.labels"]], "main_table_var_names() (mp.dme_shunt method)": [[284, "mp.dme_shunt.main_table_var_names"]], "name() (mp.dme_shunt method)": [[284, "mp.dme_shunt.name"]], "pp_data_row_det() (mp.dme_shunt method)": [[284, "mp.dme_shunt.pp_data_row_det"]], "pp_data_sum() (mp.dme_shunt method)": [[284, "mp.dme_shunt.pp_data_sum"]], "pp_get_footers_det() (mp.dme_shunt method)": [[284, "mp.dme_shunt.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_shunt method)": [[284, "mp.dme_shunt.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_shunt method)": [[284, "mp.dme_shunt.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_shunt method)": [[284, "mp.dme_shunt.pp_have_section_sum"]], "update_status() (mp.dme_shunt method)": [[284, "mp.dme_shunt.update_status"]], "dme_shunt_cpf (class in mp)": [[285, "mp.dme_shunt_cpf"]], "export_vars() (mp.dme_shunt_cpf method)": [[285, "mp.dme_shunt_cpf.export_vars"]], "parameterized() (mp.dme_shunt_cpf method)": [[285, "mp.dme_shunt_cpf.parameterized"]], "dme_shunt_opf (class in mp)": [[286, "mp.dme_shunt_opf"]], "build_params() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.build_params"]], "cxn_idx_prop() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.cxn_idx_prop"]], "cxn_type() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.cxn_type"]], "dme_xfmr3p (class in mp)": [[287, "mp.dme_xfmr3p"]], "fbus (mp.dme_xfmr3p attribute)": [[287, "mp.dme_xfmr3p.fbus"]], "initialize() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.initialize"]], "label() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.label"]], "labels() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.labels"]], "main_table_var_names() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.main_table_var_names"]], "name() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.name"]], "pp_data_row_det() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.pp_have_section_sum"]], "pretty_print() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.pretty_print"]], "r (mp.dme_xfmr3p attribute)": [[287, "mp.dme_xfmr3p.r"]], "tbus (mp.dme_xfmr3p attribute)": [[287, "mp.dme_xfmr3p.tbus"]], "update_status() (mp.dme_xfmr3p method)": [[287, "mp.dme_xfmr3p.update_status"]], "x (mp.dme_xfmr3p attribute)": [[287, "mp.dme_xfmr3p.x"]], "dme_xfmr3p_opf (class in mp)": [[288, "mp.dme_xfmr3p_opf"]], "element_classes (mp.element_container attribute)": [[289, "mp.element_container.element_classes"]], "element_container (class in mp)": [[289, "mp.element_container"]], "elements (mp.element_container attribute)": [[289, "mp.element_container.elements"]], "modify_element_classes() (mp.element_container method)": [[289, "mp.element_container.modify_element_classes"]], "data_model_class() (mp.extension method)": [[290, "mp.extension.data_model_class"]], "dm_converter_class() (mp.extension method)": [[290, "mp.extension.dm_converter_class"]], "dm_element_classes() (mp.extension method)": [[290, "mp.extension.dm_element_classes"]], "dmc_element_classes() (mp.extension method)": [[290, "mp.extension.dmc_element_classes"]], "extension (class in mp)": [[290, "mp.extension"]], "math_model_class() (mp.extension method)": [[290, "mp.extension.math_model_class"]], "mm_element_classes() (mp.extension method)": [[290, "mp.extension.mm_element_classes"]], "network_model_class() (mp.extension method)": [[290, "mp.extension.network_model_class"]], "nm_element_classes() (mp.extension method)": [[290, "mp.extension.nm_element_classes"]], "task_class() (mp.extension method)": [[290, "mp.extension.task_class"]], "find_form_class() (mp.form method)": [[291, "mp.form.find_form_class"]], "form (class in mp)": [[291, "mp.form"]], "form_name() (mp.form method)": [[291, "mp.form.form_name"]], "form_tag() (mp.form method)": [[291, "mp.form.form_tag"]], "get_params() (mp.form method)": [[291, "mp.form.get_params"]], "model_params() (mp.form method)": [[291, "mp.form.model_params"]], "model_vvars() (mp.form method)": [[291, "mp.form.model_vvars"]], "model_zvars() (mp.form method)": [[291, "mp.form.model_zvars"]], "l (mp.form_ac attribute)": [[292, "mp.form_ac.L"]], "m (mp.form_ac attribute)": [[292, "mp.form_ac.M"]], "n (mp.form_ac attribute)": [[292, "mp.form_ac.N"]], "y (mp.form_ac attribute)": [[292, "mp.form_ac.Y"]], "aux_data_va_vm() (mp.form_ac method)": [[292, "mp.form_ac.aux_data_va_vm"]], "form_ac (class in mp)": [[292, "mp.form_ac"]], "i (mp.form_ac attribute)": [[292, "mp.form_ac.i"]], "inln (mp.form_ac attribute)": [[292, "mp.form_ac.inln"]], "inln_hess (mp.form_ac attribute)": [[292, "mp.form_ac.inln_hess"]], "model_params() (mp.form_ac method)": [[292, "mp.form_ac.model_params"]], "model_zvars() (mp.form_ac method)": [[292, "mp.form_ac.model_zvars"]], "param_ncols (mp.form_ac attribute)": [[292, "mp.form_ac.param_ncols"]], "port_active_power2_lim_fcn() (mp.form_ac method)": [[292, "mp.form_ac.port_active_power2_lim_fcn"]], "port_active_power2_lim_hess() (mp.form_ac method)": [[292, "mp.form_ac.port_active_power2_lim_hess"]], "port_active_power_lim_fcn() (mp.form_ac method)": [[292, "mp.form_ac.port_active_power_lim_fcn"]], "port_active_power_lim_hess() (mp.form_ac method)": [[292, "mp.form_ac.port_active_power_lim_hess"]], "port_apparent_power_lim_fcn() (mp.form_ac method)": [[292, "mp.form_ac.port_apparent_power_lim_fcn"]], "port_apparent_power_lim_hess() (mp.form_ac method)": [[292, "mp.form_ac.port_apparent_power_lim_hess"]], "port_current_lim_fcn() (mp.form_ac method)": [[292, "mp.form_ac.port_current_lim_fcn"]], "port_current_lim_hess() (mp.form_ac method)": [[292, "mp.form_ac.port_current_lim_hess"]], "port_inj_current() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_current"]], "port_inj_current_hess() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_current_hess"]], "port_inj_current_hess_v() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_current_jac"]], "port_inj_power() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_power"]], "port_inj_power_hess() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_power_hess"]], "port_inj_power_hess_v() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_ac method)": [[292, "mp.form_ac.port_inj_power_jac"]], "s (mp.form_ac attribute)": [[292, "mp.form_ac.s"]], "snln (mp.form_ac attribute)": [[292, "mp.form_ac.snln"]], "snln_hess (mp.form_ac attribute)": [[292, "mp.form_ac.snln_hess"]], "aux_data_va_vm() (mp.form_acc method)": [[293, "mp.form_acc.aux_data_va_vm"]], "form_acc (class in mp)": [[293, "mp.form_acc"]], "form_name() (mp.form_acc method)": [[293, "mp.form_acc.form_name"]], "form_tag() (mp.form_acc method)": [[293, "mp.form_acc.form_tag"]], "model_vvars() (mp.form_acc method)": [[293, "mp.form_acc.model_vvars"]], "port_inj_current_hess_v() (mp.form_acc method)": [[293, "mp.form_acc.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acc method)": [[293, "mp.form_acc.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acc method)": [[293, "mp.form_acc.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acc method)": [[293, "mp.form_acc.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acc method)": [[293, "mp.form_acc.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acc method)": [[293, "mp.form_acc.port_inj_power_jac"]], "va_fcn() (mp.form_acc method)": [[293, "mp.form_acc.va_fcn"]], "va_hess() (mp.form_acc method)": [[293, "mp.form_acc.va_hess"]], "vm2_fcn() (mp.form_acc method)": [[293, "mp.form_acc.vm2_fcn"]], "vm2_hess() (mp.form_acc method)": [[293, "mp.form_acc.vm2_hess"]], "aux_data_va_vm() (mp.form_acp method)": [[294, "mp.form_acp.aux_data_va_vm"]], "form_acp (class in mp)": [[294, "mp.form_acp"]], "form_name() (mp.form_acp method)": [[294, "mp.form_acp.form_name"]], "form_tag() (mp.form_acp method)": [[294, "mp.form_acp.form_tag"]], "model_vvars() (mp.form_acp method)": [[294, "mp.form_acp.model_vvars"]], "port_inj_current_hess_v() (mp.form_acp method)": [[294, "mp.form_acp.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acp method)": [[294, "mp.form_acp.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acp method)": [[294, "mp.form_acp.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acp method)": [[294, "mp.form_acp.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acp method)": [[294, "mp.form_acp.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acp method)": [[294, "mp.form_acp.port_inj_power_jac"]], "b (mp.form_dc attribute)": [[295, "mp.form_dc.B"]], "k (mp.form_dc attribute)": [[295, "mp.form_dc.K"]], "form_dc (class in mp)": [[295, "mp.form_dc"]], "form_name() (mp.form_dc method)": [[295, "mp.form_dc.form_name"]], "form_tag() (mp.form_dc method)": [[295, "mp.form_dc.form_tag"]], "model_params() (mp.form_dc method)": [[295, "mp.form_dc.model_params"]], "model_vvars() (mp.form_dc method)": [[295, "mp.form_dc.model_vvars"]], "model_zvars() (mp.form_dc method)": [[295, "mp.form_dc.model_zvars"]], "p (mp.form_dc attribute)": [[295, "mp.form_dc.p"]], "param_ncols (mp.form_dc attribute)": [[295, "mp.form_dc.param_ncols"]], "port_inj_power() (mp.form_dc method)": [[295, "mp.form_dc.port_inj_power"]], "add_elements() (mp.mapped_array method)": [[296, "mp.mapped_array.add_elements"]], "add_names() (mp.mapped_array method)": [[296, "mp.mapped_array.add_names"]], "copy() (mp.mapped_array method)": [[296, "mp.mapped_array.copy"]], "delete_elements() (mp.mapped_array method)": [[296, "mp.mapped_array.delete_elements"]], "display() (mp.mapped_array method)": [[296, "mp.mapped_array.display"]], "has_name() (mp.mapped_array method)": [[296, "mp.mapped_array.has_name"]], "length() (mp.mapped_array method)": [[296, "mp.mapped_array.length"]], "mapped_array (class in mp)": [[296, "mp.mapped_array"]], "mapped_array() (mp.mapped_array method)": [[296, "mp.mapped_array.mapped_array"]], "name2idx() (mp.mapped_array method)": [[296, "mp.mapped_array.name2idx"]], "size() (mp.mapped_array method)": [[296, "mp.mapped_array.size"]], "subsasgn() (mp.mapped_array method)": [[296, "mp.mapped_array.subsasgn"]], "subsref() (mp.mapped_array method)": [[296, "mp.mapped_array.subsref"]], "add_aux_data() (mp.math_model method)": [[297, "mp.math_model.add_aux_data"]], "add_constraints() (mp.math_model method)": [[297, "mp.math_model.add_constraints"]], "add_costs() (mp.math_model method)": [[297, "mp.math_model.add_costs"]], "add_node_balance_constraints() (mp.math_model method)": [[297, "mp.math_model.add_node_balance_constraints"]], "add_system_constraints() (mp.math_model method)": [[297, "mp.math_model.add_system_constraints"]], "add_system_costs() (mp.math_model method)": [[297, "mp.math_model.add_system_costs"]], "add_system_vars() (mp.math_model method)": [[297, "mp.math_model.add_system_vars"]], "add_vars() (mp.math_model method)": [[297, "mp.math_model.add_vars"]], "aux_data (mp.math_model attribute)": [[297, "mp.math_model.aux_data"]], "build() (mp.math_model method)": [[297, "mp.math_model.build"]], "build_base_aux_data() (mp.math_model method)": [[297, "mp.math_model.build_base_aux_data"]], "data_model_update() (mp.math_model method)": [[297, "mp.math_model.data_model_update"]], "display() (mp.math_model method)": [[297, "mp.math_model.display"]], "form_name() (mp.math_model method)": [[297, "mp.math_model.form_name"]], "form_tag() (mp.math_model method)": [[297, "mp.math_model.form_tag"]], "math_model (class in mp)": [[297, "mp.math_model"]], "network_model_x_soln() (mp.math_model method)": [[297, "mp.math_model.network_model_x_soln"]], "solve_opts() (mp.math_model method)": [[297, "mp.math_model.solve_opts"]], "task_name() (mp.math_model method)": [[297, "mp.math_model.task_name"]], "task_tag() (mp.math_model method)": [[297, "mp.math_model.task_tag"]], "update_nm_vars() (mp.math_model method)": [[297, "mp.math_model.update_nm_vars"]], "math_model_cpf_acc (class in mp)": [[298, "mp.math_model_cpf_acc"]], "math_model_cpf_acc() (mp.math_model_cpf_acc method)": [[298, "mp.math_model_cpf_acc.math_model_cpf_acc"]], "add_node_balance_constraints() (mp.math_model_cpf_acci method)": [[299, "mp.math_model_cpf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acci method)": [[299, "mp.math_model_cpf_acci.form_name"]], "form_tag() (mp.math_model_cpf_acci method)": [[299, "mp.math_model_cpf_acci.form_tag"]], "math_model_cpf_acci (class in mp)": [[299, "mp.math_model_cpf_acci"]], "add_node_balance_constraints() (mp.math_model_cpf_accs method)": [[300, "mp.math_model_cpf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_accs method)": [[300, "mp.math_model_cpf_accs.form_name"]], "form_tag() (mp.math_model_cpf_accs method)": [[300, "mp.math_model_cpf_accs.form_tag"]], "math_model_cpf_accs (class in mp)": [[300, "mp.math_model_cpf_accs"]], "callback_vlim() (mp.math_model_cpf_acp method)": [[301, "mp.math_model_cpf_acp.callback_vlim"]], "event_vlim() (mp.math_model_cpf_acp method)": [[301, "mp.math_model_cpf_acp.event_vlim"]], "math_model_cpf_acp (class in mp)": [[301, "mp.math_model_cpf_acp"]], "math_model_cpf_acp() (mp.math_model_cpf_acp method)": [[301, "mp.math_model_cpf_acp.math_model_cpf_acp"]], "add_node_balance_constraints() (mp.math_model_cpf_acpi method)": [[302, "mp.math_model_cpf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acpi method)": [[302, "mp.math_model_cpf_acpi.form_name"]], "form_tag() (mp.math_model_cpf_acpi method)": [[302, "mp.math_model_cpf_acpi.form_tag"]], "math_model_cpf_acpi (class in mp)": [[302, "mp.math_model_cpf_acpi"]], "add_node_balance_constraints() (mp.math_model_cpf_acps method)": [[303, "mp.math_model_cpf_acps.add_node_balance_constraints"]], "expand_z_warmstart() (mp.math_model_cpf_acps method)": [[303, "mp.math_model_cpf_acps.expand_z_warmstart"]], "form_name() (mp.math_model_cpf_acps method)": [[303, "mp.math_model_cpf_acps.form_name"]], "form_tag() (mp.math_model_cpf_acps method)": [[303, "mp.math_model_cpf_acps.form_tag"]], "math_model_cpf_acps (class in mp)": [[303, "mp.math_model_cpf_acps"]], "solve_opts_warmstart() (mp.math_model_cpf_acps method)": [[303, "mp.math_model_cpf_acps.solve_opts_warmstart"]], "add_system_vars() (mp.math_model_opf method)": [[304, "mp.math_model_opf.add_system_vars"]], "build_aux_data() (mp.math_model_opf method)": [[304, "mp.math_model_opf.build_aux_data"]], "interior_va() (mp.math_model_opf method)": [[304, "mp.math_model_opf.interior_va"]], "interior_x0() (mp.math_model_opf method)": [[304, "mp.math_model_opf.interior_x0"]], "math_model_opf (class in mp)": [[304, "mp.math_model_opf"]], "task_name() (mp.math_model_opf method)": [[304, "mp.math_model_opf.task_name"]], "task_tag() (mp.math_model_opf method)": [[304, "mp.math_model_opf.task_tag"]], "math_model_opf_ac (class in mp)": [[305, "mp.math_model_opf_ac"]], "nodal_current_balance_fcn() (mp.math_model_opf_ac method)": [[305, "mp.math_model_opf_ac.nodal_current_balance_fcn"]], "nodal_current_balance_hess() (mp.math_model_opf_ac method)": [[305, "mp.math_model_opf_ac.nodal_current_balance_hess"]], "nodal_power_balance_fcn() (mp.math_model_opf_ac method)": [[305, "mp.math_model_opf_ac.nodal_power_balance_fcn"]], "nodal_power_balance_hess() (mp.math_model_opf_ac method)": [[305, "mp.math_model_opf_ac.nodal_power_balance_hess"]], "solve_opts() (mp.math_model_opf_ac method)": [[305, "mp.math_model_opf_ac.solve_opts"]], "convert_x_m2n() (mp.math_model_opf_acc method)": [[306, "mp.math_model_opf_acc.convert_x_m2n"]], "interior_va() (mp.math_model_opf_acc method)": [[306, "mp.math_model_opf_acc.interior_va"]], "math_model_opf_acc (class in mp)": [[306, "mp.math_model_opf_acc"]], "math_model_opf_acc() (mp.math_model_opf_acc method)": [[306, "mp.math_model_opf_acc.math_model_opf_acc"]], "add_node_balance_constraints() (mp.math_model_opf_acci method)": [[307, "mp.math_model_opf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acci method)": [[307, "mp.math_model_opf_acci.form_name"]], "form_tag() (mp.math_model_opf_acci method)": [[307, "mp.math_model_opf_acci.form_tag"]], "math_model_opf_acci (class in mp)": [[307, "mp.math_model_opf_acci"]], "node_power_balance_prices() (mp.math_model_opf_acci method)": [[307, "mp.math_model_opf_acci.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.add_vars"]], "build() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.build"]], "def_set_types() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.legacy_user_var_names"]], "math_model_opf_acci_legacy (class in mp)": [[308, "mp.math_model_opf_acci_legacy"]], "math_model_opf_acci_legacy() (mp.math_model_opf_acci_legacy method)": [[308, "mp.math_model_opf_acci_legacy.math_model_opf_acci_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_accs method)": [[309, "mp.math_model_opf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_accs method)": [[309, "mp.math_model_opf_accs.form_name"]], "form_tag() (mp.math_model_opf_accs method)": [[309, "mp.math_model_opf_accs.form_tag"]], "math_model_opf_accs (class in mp)": [[309, "mp.math_model_opf_accs"]], "node_power_balance_prices() (mp.math_model_opf_accs method)": [[309, "mp.math_model_opf_accs.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.add_vars"]], "build() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.build"]], "def_set_types() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.legacy_user_var_names"]], "math_model_opf_accs_legacy (class in mp)": [[310, "mp.math_model_opf_accs_legacy"]], "math_model_opf_accs_legacy() (mp.math_model_opf_accs_legacy method)": [[310, "mp.math_model_opf_accs_legacy.math_model_opf_accs_legacy"]], "convert_x_m2n() (mp.math_model_opf_acp method)": [[311, "mp.math_model_opf_acp.convert_x_m2n"]], "math_model_opf_acp (class in mp)": [[311, "mp.math_model_opf_acp"]], "math_model_opf_acp() (mp.math_model_opf_acp method)": [[311, "mp.math_model_opf_acp.math_model_opf_acp"]], "add_node_balance_constraints() (mp.math_model_opf_acpi method)": [[312, "mp.math_model_opf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acpi method)": [[312, "mp.math_model_opf_acpi.form_name"]], "form_tag() (mp.math_model_opf_acpi method)": [[312, "mp.math_model_opf_acpi.form_tag"]], "math_model_opf_acpi (class in mp)": [[312, "mp.math_model_opf_acpi"]], "node_power_balance_prices() (mp.math_model_opf_acpi method)": [[312, "mp.math_model_opf_acpi.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.add_vars"]], "build() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.build"]], "def_set_types() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.legacy_user_var_names"]], "math_model_opf_acpi_legacy (class in mp)": [[313, "mp.math_model_opf_acpi_legacy"]], "math_model_opf_acpi_legacy() (mp.math_model_opf_acpi_legacy method)": [[313, "mp.math_model_opf_acpi_legacy.math_model_opf_acpi_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_acps method)": [[314, "mp.math_model_opf_acps.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acps method)": [[314, "mp.math_model_opf_acps.form_name"]], "form_tag() (mp.math_model_opf_acps method)": [[314, "mp.math_model_opf_acps.form_tag"]], "math_model_opf_acps (class in mp)": [[314, "mp.math_model_opf_acps"]], "node_power_balance_prices() (mp.math_model_opf_acps method)": [[314, "mp.math_model_opf_acps.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.add_vars"]], "build() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.build"]], "def_set_types() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.legacy_user_var_names"]], "math_model_opf_acps_legacy (class in mp)": [[315, "mp.math_model_opf_acps_legacy"]], "math_model_opf_acps_legacy() (mp.math_model_opf_acps_legacy method)": [[315, "mp.math_model_opf_acps_legacy.math_model_opf_acps_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_dc method)": [[316, "mp.math_model_opf_dc.add_node_balance_constraints"]], "convert_x_m2n() (mp.math_model_opf_dc method)": [[316, "mp.math_model_opf_dc.convert_x_m2n"]], "form_name() (mp.math_model_opf_dc method)": [[316, "mp.math_model_opf_dc.form_name"]], "form_tag() (mp.math_model_opf_dc method)": [[316, "mp.math_model_opf_dc.form_tag"]], "math_model_opf_dc (class in mp)": [[316, "mp.math_model_opf_dc"]], "math_model_opf_dc() (mp.math_model_opf_dc method)": [[316, "mp.math_model_opf_dc.math_model_opf_dc"]], "solve_opts() (mp.math_model_opf_dc method)": [[316, "mp.math_model_opf_dc.solve_opts"]], "add_named_set() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.add_vars"]], "build() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.build"]], "def_set_types() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.legacy_user_var_names"]], "math_model_opf_dc_legacy (class in mp)": [[317, "mp.math_model_opf_dc_legacy"]], "math_model_opf_dc_legacy() (mp.math_model_opf_dc_legacy method)": [[317, "mp.math_model_opf_dc_legacy.math_model_opf_dc_legacy"]], "add_costs() (mp.math_model_pf method)": [[318, "mp.math_model_pf.add_costs"]], "add_system_vars() (mp.math_model_pf method)": [[318, "mp.math_model_pf.add_system_vars"]], "math_model_pf (class in mp)": [[318, "mp.math_model_pf"]], "solve_opts() (mp.math_model_pf method)": [[318, "mp.math_model_pf.solve_opts"]], "task_name() (mp.math_model_pf method)": [[318, "mp.math_model_pf.task_name"]], "task_tag() (mp.math_model_pf method)": [[318, "mp.math_model_pf.task_tag"]], "math_model_pf_ac (class in mp)": [[319, "mp.math_model_pf_ac"]], "math_model_pf_ac() (mp.math_model_pf_ac method)": [[319, "mp.math_model_pf_ac.math_model_pf_ac"]], "add_node_balance_constraints() (mp.math_model_pf_acci method)": [[320, "mp.math_model_pf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acci method)": [[320, "mp.math_model_pf_acci.form_name"]], "form_tag() (mp.math_model_pf_acci method)": [[320, "mp.math_model_pf_acci.form_tag"]], "math_model_pf_acci (class in mp)": [[320, "mp.math_model_pf_acci"]], "add_node_balance_constraints() (mp.math_model_pf_accs method)": [[321, "mp.math_model_pf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_accs method)": [[321, "mp.math_model_pf_accs.form_name"]], "form_tag() (mp.math_model_pf_accs method)": [[321, "mp.math_model_pf_accs.form_tag"]], "math_model_pf_accs (class in mp)": [[321, "mp.math_model_pf_accs"]], "add_node_balance_constraints() (mp.math_model_pf_acpi method)": [[322, "mp.math_model_pf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acpi method)": [[322, "mp.math_model_pf_acpi.form_name"]], "form_tag() (mp.math_model_pf_acpi method)": [[322, "mp.math_model_pf_acpi.form_tag"]], "math_model_pf_acpi (class in mp)": [[322, "mp.math_model_pf_acpi"]], "add_node_balance_constraints() (mp.math_model_pf_acps method)": [[323, "mp.math_model_pf_acps.add_node_balance_constraints"]], "fd_jac_approx() (mp.math_model_pf_acps method)": [[323, "mp.math_model_pf_acps.fd_jac_approx"]], "fdpf_b_matrix_models() (mp.math_model_pf_acps method)": [[323, "mp.math_model_pf_acps.fdpf_B_matrix_models"]], "form_name() (mp.math_model_pf_acps method)": [[323, "mp.math_model_pf_acps.form_name"]], "form_tag() (mp.math_model_pf_acps method)": [[323, "mp.math_model_pf_acps.form_tag"]], "gs_x_update() (mp.math_model_pf_acps method)": [[323, "mp.math_model_pf_acps.gs_x_update"]], "math_model_pf_acps (class in mp)": [[323, "mp.math_model_pf_acps"]], "zg_x_update() (mp.math_model_pf_acps method)": [[323, "mp.math_model_pf_acps.zg_x_update"]], "add_node_balance_constraints() (mp.math_model_pf_dc method)": [[324, "mp.math_model_pf_dc.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_dc method)": [[324, "mp.math_model_pf_dc.form_name"]], "form_tag() (mp.math_model_pf_dc method)": [[324, "mp.math_model_pf_dc.form_tag"]], "math_model_pf_dc (class in mp)": [[324, "mp.math_model_pf_dc"]], "math_model_pf_dc() (mp.math_model_pf_dc method)": [[324, "mp.math_model_pf_dc.math_model_pf_dc"]], "solve_opts() (mp.math_model_pf_dc method)": [[324, "mp.math_model_pf_dc.solve_opts"]], "add_constraints() (mp.mm_element method)": [[325, "mp.mm_element.add_constraints"]], "add_costs() (mp.mm_element method)": [[325, "mp.mm_element.add_costs"]], "add_vars() (mp.mm_element method)": [[325, "mp.mm_element.add_vars"]], "data_model_element() (mp.mm_element method)": [[325, "mp.mm_element.data_model_element"]], "data_model_update() (mp.mm_element method)": [[325, "mp.mm_element.data_model_update"]], "data_model_update_off() (mp.mm_element method)": [[325, "mp.mm_element.data_model_update_off"]], "data_model_update_on() (mp.mm_element method)": [[325, "mp.mm_element.data_model_update_on"]], "mm_element (class in mp)": [[325, "mp.mm_element"]], "name() (mp.mm_element method)": [[325, "mp.mm_element.name"]], "network_model_element() (mp.mm_element method)": [[325, "mp.mm_element.network_model_element"]], "add_legacy_cost() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.add_legacy_cost"]], "add_legacy_user_constraints() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.add_legacy_user_constraints"]], "add_legacy_user_constraints_ac() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.add_legacy_user_constraints_ac"]], "add_legacy_user_costs() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.add_legacy_user_costs"]], "add_legacy_user_vars() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.add_legacy_user_vars"]], "build_legacy() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.build_legacy"]], "def_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.def_set_types_legacy"]], "eval_legacy_cost() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.eval_legacy_cost"]], "get_mpc() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.get_mpc"]], "init_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.init_set_types_legacy"]], "mm_shared_opf_legacy (class in mp)": [[326, "mp.mm_shared_opf_legacy"]], "params_legacy_cost() (mp.mm_shared_opf_legacy method)": [[326, "mp.mm_shared_opf_legacy.params_legacy_cost"]], "build_aux_data() (mp.mm_shared_pfcpf method)": [[327, "mp.mm_shared_pfcpf.build_aux_data"]], "mm_shared_pfcpf (class in mp)": [[327, "mp.mm_shared_pfcpf"]], "add_system_varset_pf() (mp.mm_shared_pfcpf_ac method)": [[328, "mp.mm_shared_pfcpf_ac.add_system_varset_pf"]], "mm_shared_pfcpf_ac (class in mp)": [[328, "mp.mm_shared_pfcpf_ac"]], "update_z() (mp.mm_shared_pfcpf_ac method)": [[328, "mp.mm_shared_pfcpf_ac.update_z"]], "build_aux_data_i() (mp.mm_shared_pfcpf_ac_i method)": [[329, "mp.mm_shared_pfcpf_ac_i.build_aux_data_i"]], "mm_shared_pfcpf_ac_i (class in mp)": [[329, "mp.mm_shared_pfcpf_ac_i"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acc method)": [[330, "mp.mm_shared_pfcpf_acc.convert_x_m2n"]], "mm_shared_pfcpf_acc (class in mp)": [[330, "mp.mm_shared_pfcpf_acc"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acci method)": [[331, "mp.mm_shared_pfcpf_acci.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acci method)": [[331, "mp.mm_shared_pfcpf_acci.build_aux_data"]], "mm_shared_pfcpf_acci (class in mp)": [[331, "mp.mm_shared_pfcpf_acci"]], "node_balance_equations() (mp.mm_shared_pfcpf_acci method)": [[331, "mp.mm_shared_pfcpf_acci.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_accs method)": [[332, "mp.mm_shared_pfcpf_accs.add_system_vars_pf"]], "mm_shared_pfcpf_accs (class in mp)": [[332, "mp.mm_shared_pfcpf_accs"]], "node_balance_equations() (mp.mm_shared_pfcpf_accs method)": [[332, "mp.mm_shared_pfcpf_accs.node_balance_equations"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acp method)": [[333, "mp.mm_shared_pfcpf_acp.convert_x_m2n"]], "mm_shared_pfcpf_acp (class in mp)": [[333, "mp.mm_shared_pfcpf_acp"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acpi method)": [[334, "mp.mm_shared_pfcpf_acpi.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acpi method)": [[334, "mp.mm_shared_pfcpf_acpi.build_aux_data"]], "mm_shared_pfcpf_acpi (class in mp)": [[334, "mp.mm_shared_pfcpf_acpi"]], "node_balance_equations() (mp.mm_shared_pfcpf_acpi method)": [[334, "mp.mm_shared_pfcpf_acpi.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acps method)": [[335, "mp.mm_shared_pfcpf_acps.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acps method)": [[335, "mp.mm_shared_pfcpf_acps.build_aux_data"]], "mm_shared_pfcpf_acps (class in mp)": [[335, "mp.mm_shared_pfcpf_acps"]], "node_balance_equations() (mp.mm_shared_pfcpf_acps method)": [[335, "mp.mm_shared_pfcpf_acps.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_dc method)": [[336, "mp.mm_shared_pfcpf_dc.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_dc method)": [[336, "mp.mm_shared_pfcpf_dc.build_aux_data"]], "convert_x_m2n() (mp.mm_shared_pfcpf_dc method)": [[336, "mp.mm_shared_pfcpf_dc.convert_x_m2n"]], "mm_shared_pfcpf_dc (class in mp)": [[336, "mp.mm_shared_pfcpf_dc"]], "update_z() (mp.mm_shared_pfcpf_dc method)": [[336, "mp.mm_shared_pfcpf_dc.update_z"]], "mme_branch (class in mp)": [[337, "mp.mme_branch"]], "name() (mp.mme_branch method)": [[337, "mp.mme_branch.name"]], "ang_diff_params() (mp.mme_branch_opf method)": [[338, "mp.mme_branch_opf.ang_diff_params"]], "ang_diff_prices() (mp.mme_branch_opf method)": [[338, "mp.mme_branch_opf.ang_diff_prices"]], "mme_branch_opf (class in mp)": [[338, "mp.mme_branch_opf"]], "add_constraints() (mp.mme_branch_opf_ac method)": [[339, "mp.mme_branch_opf_ac.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_ac method)": [[339, "mp.mme_branch_opf_ac.data_model_update_on"]], "mme_branch_opf_ac (class in mp)": [[339, "mp.mme_branch_opf_ac"]], "add_constraints() (mp.mme_branch_opf_acc method)": [[340, "mp.mme_branch_opf_acc.add_constraints"]], "ang_diff_prices() (mp.mme_branch_opf_acc method)": [[340, "mp.mme_branch_opf_acc.ang_diff_prices"]], "mme_branch_opf_acc (class in mp)": [[340, "mp.mme_branch_opf_acc"]], "add_constraints() (mp.mme_branch_opf_acp method)": [[341, "mp.mme_branch_opf_acp.add_constraints"]], "mme_branch_opf_acp (class in mp)": [[341, "mp.mme_branch_opf_acp"]], "add_constraints() (mp.mme_branch_opf_dc method)": [[342, "mp.mme_branch_opf_dc.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_dc method)": [[342, "mp.mme_branch_opf_dc.data_model_update_on"]], "mme_branch_opf_dc (class in mp)": [[342, "mp.mme_branch_opf_dc"]], "data_model_update_on() (mp.mme_branch_pf_ac method)": [[343, "mp.mme_branch_pf_ac.data_model_update_on"]], "mme_branch_pf_ac (class in mp)": [[343, "mp.mme_branch_pf_ac"]], "data_model_update_on() (mp.mme_branch_pf_dc method)": [[344, "mp.mme_branch_pf_dc.data_model_update_on"]], "mme_branch_pf_dc (class in mp)": [[344, "mp.mme_branch_pf_dc"]], "mme_bus (class in mp)": [[345, "mp.mme_bus"]], "name() (mp.mme_bus method)": [[345, "mp.mme_bus.name"]], "data_model_update_on() (mp.mme_bus3p method)": [[346, "mp.mme_bus3p.data_model_update_on"]], "mme_bus3p (class in mp)": [[346, "mp.mme_bus3p"]], "name() (mp.mme_bus3p method)": [[346, "mp.mme_bus3p.name"]], "interior_x0() (mp.mme_bus3p_opf_acc method)": [[347, "mp.mme_bus3p_opf_acc.interior_x0"]], "mme_bus3p_opf_acc (class in mp)": [[347, "mp.mme_bus3p_opf_acc"]], "interior_x0() (mp.mme_bus3p_opf_acp method)": [[348, "mp.mme_bus3p_opf_acp.interior_x0"]], "mme_bus3p_opf_acp (class in mp)": [[348, "mp.mme_bus3p_opf_acp"]], "interior_vm() (mp.mme_bus_opf_ac method)": [[349, "mp.mme_bus_opf_ac.interior_vm"]], "mme_bus_opf_ac (class in mp)": [[349, "mp.mme_bus_opf_ac"]], "add_constraints() (mp.mme_bus_opf_acc method)": [[350, "mp.mme_bus_opf_acc.add_constraints"]], "data_model_update_on() (mp.mme_bus_opf_acc method)": [[350, "mp.mme_bus_opf_acc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acc method)": [[350, "mp.mme_bus_opf_acc.interior_x0"]], "mme_bus_opf_acc (class in mp)": [[350, "mp.mme_bus_opf_acc"]], "data_model_update_on() (mp.mme_bus_opf_acp method)": [[351, "mp.mme_bus_opf_acp.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acp method)": [[351, "mp.mme_bus_opf_acp.interior_x0"]], "mme_bus_opf_acp (class in mp)": [[351, "mp.mme_bus_opf_acp"]], "data_model_update_on() (mp.mme_bus_opf_dc method)": [[352, "mp.mme_bus_opf_dc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_dc method)": [[352, "mp.mme_bus_opf_dc.interior_x0"]], "mme_bus_opf_dc (class in mp)": [[352, "mp.mme_bus_opf_dc"]], "data_model_update_on() (mp.mme_bus_pf_ac method)": [[353, "mp.mme_bus_pf_ac.data_model_update_on"]], "mme_bus_pf_ac (class in mp)": [[353, "mp.mme_bus_pf_ac"]], "data_model_update_on() (mp.mme_bus_pf_dc method)": [[354, "mp.mme_bus_pf_dc.data_model_update_on"]], "mme_bus_pf_dc (class in mp)": [[354, "mp.mme_bus_pf_dc"]], "mme_buslink (class in mp)": [[355, "mp.mme_buslink"]], "name() (mp.mme_buslink method)": [[355, "mp.mme_buslink.name"]], "interior_x0() (mp.mme_buslink_opf method)": [[356, "mp.mme_buslink_opf.interior_x0"]], "mme_buslink_opf (class in mp)": [[356, "mp.mme_buslink_opf"]], "add_constraints() (mp.mme_buslink_opf_acc method)": [[357, "mp.mme_buslink_opf_acc.add_constraints"]], "mme_buslink_opf_acc (class in mp)": [[357, "mp.mme_buslink_opf_acc"]], "va_fcn() (mp.mme_buslink_opf_acc method)": [[357, "mp.mme_buslink_opf_acc.va_fcn"]], "va_hess() (mp.mme_buslink_opf_acc method)": [[357, "mp.mme_buslink_opf_acc.va_hess"]], "vm2_fcn() (mp.mme_buslink_opf_acc method)": [[357, "mp.mme_buslink_opf_acc.vm2_fcn"]], "vm2_hess() (mp.mme_buslink_opf_acc method)": [[357, "mp.mme_buslink_opf_acc.vm2_hess"]], "add_constraints() (mp.mme_buslink_opf_acp method)": [[358, "mp.mme_buslink_opf_acp.add_constraints"]], "mme_buslink_opf_acp (class in mp)": [[358, "mp.mme_buslink_opf_acp"]], "add_constraints() (mp.mme_buslink_pf_ac method)": [[359, "mp.mme_buslink_pf_ac.add_constraints"]], "add_vars() (mp.mme_buslink_pf_ac method)": [[359, "mp.mme_buslink_pf_ac.add_vars"]], "mme_buslink_pf_ac (class in mp)": [[359, "mp.mme_buslink_pf_ac"]], "voltage_constraints() (mp.mme_buslink_pf_ac method)": [[359, "mp.mme_buslink_pf_ac.voltage_constraints"]], "add_constraints() (mp.mme_buslink_pf_acc method)": [[360, "mp.mme_buslink_pf_acc.add_constraints"]], "mme_buslink_pf_acc (class in mp)": [[360, "mp.mme_buslink_pf_acc"]], "pf_va_fcn() (mp.mme_buslink_pf_acc method)": [[360, "mp.mme_buslink_pf_acc.pf_va_fcn"]], "pf_vm_fcn() (mp.mme_buslink_pf_acc method)": [[360, "mp.mme_buslink_pf_acc.pf_vm_fcn"]], "add_constraints() (mp.mme_buslink_pf_acp method)": [[361, "mp.mme_buslink_pf_acp.add_constraints"]], "mme_buslink_pf_acp (class in mp)": [[361, "mp.mme_buslink_pf_acp"]], "mme_gen (class in mp)": [[362, "mp.mme_gen"]], "name() (mp.mme_gen method)": [[362, "mp.mme_gen.name"]], "data_model_update_on() (mp.mme_gen3p method)": [[363, "mp.mme_gen3p.data_model_update_on"]], "mme_gen3p (class in mp)": [[363, "mp.mme_gen3p"]], "name() (mp.mme_gen3p method)": [[363, "mp.mme_gen3p.name"]], "interior_x0() (mp.mme_gen3p_opf method)": [[364, "mp.mme_gen3p_opf.interior_x0"]], "mme_gen3p_opf (class in mp)": [[364, "mp.mme_gen3p_opf"]], "add_costs() (mp.mme_gen_opf method)": [[365, "mp.mme_gen_opf.add_costs"]], "add_vars() (mp.mme_gen_opf method)": [[365, "mp.mme_gen_opf.add_vars"]], "cost (mp.mme_gen_opf attribute)": [[365, "mp.mme_gen_opf.cost"]], "interior_x0() (mp.mme_gen_opf method)": [[365, "mp.mme_gen_opf.interior_x0"]], "mme_gen_opf (class in mp)": [[365, "mp.mme_gen_opf"]], "add_constraints() (mp.mme_gen_opf_ac method)": [[366, "mp.mme_gen_opf_ac.add_constraints"]], "add_costs() (mp.mme_gen_opf_ac method)": [[366, "mp.mme_gen_opf_ac.add_costs"]], "build_cost_params() (mp.mme_gen_opf_ac method)": [[366, "mp.mme_gen_opf_ac.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_ac method)": [[366, "mp.mme_gen_opf_ac.data_model_update_on"]], "disp_load_constant_pf_constraint() (mp.mme_gen_opf_ac method)": [[366, "mp.mme_gen_opf_ac.disp_load_constant_pf_constraint"]], "has_pq_cap() (mp.mme_gen_opf_ac method)": [[366, "mp.mme_gen_opf_ac.has_pq_cap"]], "mme_gen_opf_ac (class in mp)": [[366, "mp.mme_gen_opf_ac"]], "pq_capability_constraint() (mp.mme_gen_opf_ac method)": [[366, "mp.mme_gen_opf_ac.pq_capability_constraint"]], "add_constraints() (mp.mme_gen_opf_dc method)": [[367, "mp.mme_gen_opf_dc.add_constraints"]], "build_cost_params() (mp.mme_gen_opf_dc method)": [[367, "mp.mme_gen_opf_dc.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_dc method)": [[367, "mp.mme_gen_opf_dc.data_model_update_on"]], "mme_gen_opf_dc (class in mp)": [[367, "mp.mme_gen_opf_dc"]], "data_model_update_on() (mp.mme_gen_pf_ac method)": [[368, "mp.mme_gen_pf_ac.data_model_update_on"]], "mme_gen_pf_ac (class in mp)": [[368, "mp.mme_gen_pf_ac"]], "data_model_update_on() (mp.mme_gen_pf_dc method)": [[369, "mp.mme_gen_pf_dc.data_model_update_on"]], "mme_gen_pf_dc (class in mp)": [[369, "mp.mme_gen_pf_dc"]], "mme_legacy_dcline (class in mp)": [[370, "mp.mme_legacy_dcline"]], "name() (mp.mme_legacy_dcline method)": [[370, "mp.mme_legacy_dcline.name"]], "add_constraints() (mp.mme_legacy_dcline_opf method)": [[371, "mp.mme_legacy_dcline_opf.add_constraints"]], "add_costs() (mp.mme_legacy_dcline_opf method)": [[371, "mp.mme_legacy_dcline_opf.add_costs"]], "add_vars() (mp.mme_legacy_dcline_opf method)": [[371, "mp.mme_legacy_dcline_opf.add_vars"]], "build_cost_params() (mp.mme_legacy_dcline_opf method)": [[371, "mp.mme_legacy_dcline_opf.build_cost_params"]], "cost (mp.mme_legacy_dcline_opf attribute)": [[371, "mp.mme_legacy_dcline_opf.cost"]], "interior_x0() (mp.mme_legacy_dcline_opf method)": [[371, "mp.mme_legacy_dcline_opf.interior_x0"]], "mme_legacy_dcline_opf (class in mp)": [[371, "mp.mme_legacy_dcline_opf"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_ac method)": [[372, "mp.mme_legacy_dcline_opf_ac.data_model_update_on"]], "mme_legacy_dcline_opf_ac (class in mp)": [[372, "mp.mme_legacy_dcline_opf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_dc method)": [[373, "mp.mme_legacy_dcline_opf_dc.data_model_update_on"]], "mme_legacy_dcline_opf_dc (class in mp)": [[373, "mp.mme_legacy_dcline_opf_dc"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_ac method)": [[374, "mp.mme_legacy_dcline_pf_ac.data_model_update_on"]], "mme_legacy_dcline_pf_ac (class in mp)": [[374, "mp.mme_legacy_dcline_pf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_dc method)": [[375, "mp.mme_legacy_dcline_pf_dc.data_model_update_on"]], "mme_legacy_dcline_pf_dc (class in mp)": [[375, "mp.mme_legacy_dcline_pf_dc"]], "data_model_update_on() (mp.mme_line3p method)": [[376, "mp.mme_line3p.data_model_update_on"]], "mme_line3p (class in mp)": [[376, "mp.mme_line3p"]], "name() (mp.mme_line3p method)": [[376, "mp.mme_line3p.name"]], "interior_x0() (mp.mme_line3p_opf method)": [[377, "mp.mme_line3p_opf.interior_x0"]], "mme_line3p_opf (class in mp)": [[377, "mp.mme_line3p_opf"]], "mme_load (class in mp)": [[378, "mp.mme_load"]], "name() (mp.mme_load method)": [[378, "mp.mme_load.name"]], "data_model_update_on() (mp.mme_load_cpf method)": [[379, "mp.mme_load_cpf.data_model_update_on"]], "mme_load_cpf (class in mp)": [[379, "mp.mme_load_cpf"]], "data_model_update_on() (mp.mme_load_pf_ac method)": [[380, "mp.mme_load_pf_ac.data_model_update_on"]], "mme_load_pf_ac (class in mp)": [[380, "mp.mme_load_pf_ac"]], "data_model_update_on() (mp.mme_load_pf_dc method)": [[381, "mp.mme_load_pf_dc.data_model_update_on"]], "mme_load_pf_dc (class in mp)": [[381, "mp.mme_load_pf_dc"]], "add_constraints() (mp.mme_reserve_gen method)": [[382, "mp.mme_reserve_gen.add_constraints"]], "add_costs() (mp.mme_reserve_gen method)": [[382, "mp.mme_reserve_gen.add_costs"]], "add_vars() (mp.mme_reserve_gen method)": [[382, "mp.mme_reserve_gen.add_vars"]], "data_model_update_on() (mp.mme_reserve_gen method)": [[382, "mp.mme_reserve_gen.data_model_update_on"]], "mme_reserve_gen (class in mp)": [[382, "mp.mme_reserve_gen"]], "name() (mp.mme_reserve_gen method)": [[382, "mp.mme_reserve_gen.name"]], "add_constraints() (mp.mme_reserve_zone method)": [[383, "mp.mme_reserve_zone.add_constraints"]], "data_model_update_on() (mp.mme_reserve_zone method)": [[383, "mp.mme_reserve_zone.data_model_update_on"]], "mme_reserve_zone (class in mp)": [[383, "mp.mme_reserve_zone"]], "name() (mp.mme_reserve_zone method)": [[383, "mp.mme_reserve_zone.name"]], "mme_shunt (class in mp)": [[384, "mp.mme_shunt"]], "name() (mp.mme_shunt method)": [[384, "mp.mme_shunt.name"]], "data_model_update_on() (mp.mme_shunt_cpf method)": [[385, "mp.mme_shunt_cpf.data_model_update_on"]], "mme_shunt_cpf (class in mp)": [[385, "mp.mme_shunt_cpf"]], "data_model_update_on() (mp.mme_shunt_pf_ac method)": [[386, "mp.mme_shunt_pf_ac.data_model_update_on"]], "mme_shunt_pf_ac (class in mp)": [[386, "mp.mme_shunt_pf_ac"]], "data_model_update_on() (mp.mme_shunt_pf_dc method)": [[387, "mp.mme_shunt_pf_dc.data_model_update_on"]], "mme_shunt_pf_dc (class in mp)": [[387, "mp.mme_shunt_pf_dc"]], "data_model_update_on() (mp.mme_xfmr3p method)": [[388, "mp.mme_xfmr3p.data_model_update_on"]], "mme_xfmr3p (class in mp)": [[388, "mp.mme_xfmr3p"]], "name() (mp.mme_xfmr3p method)": [[388, "mp.mme_xfmr3p.name"]], "interior_x0() (mp.mme_xfmr3p_opf method)": [[389, "mp.mme_xfmr3p_opf.interior_x0"]], "mme_xfmr3p_opf (class in mp)": [[389, "mp.mme_xfmr3p_opf"]], "add_node() (mp.net_model method)": [[390, "mp.net_model.add_node"]], "add_nodes() (mp.net_model method)": [[390, "mp.net_model.add_nodes"]], "add_port() (mp.net_model method)": [[390, "mp.net_model.add_port"]], "add_state() (mp.net_model method)": [[390, "mp.net_model.add_state"]], "add_states() (mp.net_model method)": [[390, "mp.net_model.add_states"]], "add_var() (mp.net_model method)": [[390, "mp.net_model.add_var"]], "add_vvars() (mp.net_model method)": [[390, "mp.net_model.add_vvars"]], "add_zvars() (mp.net_model method)": [[390, "mp.net_model.add_zvars"]], "build() (mp.net_model method)": [[390, "mp.net_model.build"]], "build_params() (mp.net_model method)": [[390, "mp.net_model.build_params"]], "def_set_types() (mp.net_model method)": [[390, "mp.net_model.def_set_types"]], "display() (mp.net_model method)": [[390, "mp.net_model.display"]], "ensure_ref_node() (mp.net_model method)": [[390, "mp.net_model.ensure_ref_node"]], "get_node_idx() (mp.net_model method)": [[390, "mp.net_model.get_node_idx"]], "get_port_idx() (mp.net_model method)": [[390, "mp.net_model.get_port_idx"]], "get_state_idx() (mp.net_model method)": [[390, "mp.net_model.get_state_idx"]], "init_set_types() (mp.net_model method)": [[390, "mp.net_model.init_set_types"]], "name() (mp.net_model method)": [[390, "mp.net_model.name"]], "net_model (class in mp)": [[390, "mp.net_model"]], "node (mp.net_model attribute)": [[390, "mp.net_model.node"]], "node_types() (mp.net_model method)": [[390, "mp.net_model.node_types"]], "np() (mp.net_model method)": [[390, "mp.net_model.np"]], "nv (mp.net_model attribute)": [[390, "mp.net_model.nv"]], "nz() (mp.net_model method)": [[390, "mp.net_model.nz"]], "params_var() (mp.net_model method)": [[390, "mp.net_model.params_var"]], "port (mp.net_model attribute)": [[390, "mp.net_model.port"]], "set_node_type_pq() (mp.net_model method)": [[390, "mp.net_model.set_node_type_pq"]], "set_node_type_pv() (mp.net_model method)": [[390, "mp.net_model.set_node_type_pv"]], "set_node_type_ref() (mp.net_model method)": [[390, "mp.net_model.set_node_type_ref"]], "set_type_idx_map() (mp.net_model method)": [[390, "mp.net_model.set_type_idx_map"]], "set_type_label() (mp.net_model method)": [[390, "mp.net_model.set_type_label"]], "stack_matrix_params() (mp.net_model method)": [[390, "mp.net_model.stack_matrix_params"]], "stack_vector_params() (mp.net_model method)": [[390, "mp.net_model.stack_vector_params"]], "state (mp.net_model attribute)": [[390, "mp.net_model.state"]], "the_np (mp.net_model attribute)": [[390, "mp.net_model.the_np"]], "the_nz (mp.net_model attribute)": [[390, "mp.net_model.the_nz"]], "build_params() (mp.net_model_ac method)": [[391, "mp.net_model_ac.build_params"]], "def_set_types() (mp.net_model_ac method)": [[391, "mp.net_model_ac.def_set_types"]], "get_va() (mp.net_model_ac method)": [[391, "mp.net_model_ac.get_va"]], "net_model_ac (class in mp)": [[391, "mp.net_model_ac"]], "nodal_complex_current_balance() (mp.net_model_ac method)": [[391, "mp.net_model_ac.nodal_complex_current_balance"]], "nodal_complex_current_balance_hess() (mp.net_model_ac method)": [[391, "mp.net_model_ac.nodal_complex_current_balance_hess"]], "nodal_complex_power_balance() (mp.net_model_ac method)": [[391, "mp.net_model_ac.nodal_complex_power_balance"]], "nodal_complex_power_balance_hess() (mp.net_model_ac method)": [[391, "mp.net_model_ac.nodal_complex_power_balance_hess"]], "port_inj_nln() (mp.net_model_ac method)": [[391, "mp.net_model_ac.port_inj_nln"]], "port_inj_nln_hess() (mp.net_model_ac method)": [[391, "mp.net_model_ac.port_inj_nln_hess"]], "port_inj_soln() (mp.net_model_ac method)": [[391, "mp.net_model_ac.port_inj_soln"]], "def_set_types() (mp.net_model_acc method)": [[392, "mp.net_model_acc.def_set_types"]], "initial_voltage_angle() (mp.net_model_acc method)": [[392, "mp.net_model_acc.initial_voltage_angle"]], "net_model_acc (class in mp)": [[392, "mp.net_model_acc"]], "net_model_acc() (mp.net_model_acc method)": [[392, "mp.net_model_acc.net_model_acc"]], "def_set_types() (mp.net_model_acp method)": [[393, "mp.net_model_acp.def_set_types"]], "initial_voltage_angle() (mp.net_model_acp method)": [[393, "mp.net_model_acp.initial_voltage_angle"]], "net_model_acp (class in mp)": [[393, "mp.net_model_acp"]], "net_model_acp() (mp.net_model_acp method)": [[393, "mp.net_model_acp.net_model_acp"]], "build_params() (mp.net_model_dc method)": [[394, "mp.net_model_dc.build_params"]], "def_set_types() (mp.net_model_dc method)": [[394, "mp.net_model_dc.def_set_types"]], "net_model_dc (class in mp)": [[394, "mp.net_model_dc"]], "net_model_dc() (mp.net_model_dc method)": [[394, "mp.net_model_dc.net_model_dc"]], "port_inj_soln() (mp.net_model_dc method)": [[394, "mp.net_model_dc.port_inj_soln"]], "va (mp.net_model_dc attribute)": [[394, "mp.net_model_dc.va"]], "z (mp.net_model_dc attribute)": [[394, "mp.net_model_dc.z"]], "c (mp.nm_element attribute)": [[395, "mp.nm_element.C"]], "d (mp.nm_element attribute)": [[395, "mp.nm_element.D"]], "add_nodes() (mp.nm_element method)": [[395, "mp.nm_element.add_nodes"]], "add_states() (mp.nm_element method)": [[395, "mp.nm_element.add_states"]], "add_vvars() (mp.nm_element method)": [[395, "mp.nm_element.add_vvars"]], "add_zvars() (mp.nm_element method)": [[395, "mp.nm_element.add_zvars"]], "build_params() (mp.nm_element method)": [[395, "mp.nm_element.build_params"]], "count() (mp.nm_element method)": [[395, "mp.nm_element.count"]], "data_model_element() (mp.nm_element method)": [[395, "mp.nm_element.data_model_element"]], "display() (mp.nm_element method)": [[395, "mp.nm_element.display"]], "get_nv_() (mp.nm_element method)": [[395, "mp.nm_element.get_nv_"]], "incidence_matrix() (mp.nm_element method)": [[395, "mp.nm_element.incidence_matrix"]], "math_model_element() (mp.nm_element method)": [[395, "mp.nm_element.math_model_element"]], "name() (mp.nm_element method)": [[395, "mp.nm_element.name"]], "nk (mp.nm_element attribute)": [[395, "mp.nm_element.nk"]], "nm_element (class in mp)": [[395, "mp.nm_element"]], "nn() (mp.nm_element method)": [[395, "mp.nm_element.nn"]], "node_indices() (mp.nm_element method)": [[395, "mp.nm_element.node_indices"]], "node_types() (mp.nm_element method)": [[395, "mp.nm_element.node_types"]], "np() (mp.nm_element method)": [[395, "mp.nm_element.np"]], "nz() (mp.nm_element method)": [[395, "mp.nm_element.nz"]], "set_node_type_pq() (mp.nm_element method)": [[395, "mp.nm_element.set_node_type_pq"]], "set_node_type_pv() (mp.nm_element method)": [[395, "mp.nm_element.set_node_type_pv"]], "set_node_type_ref() (mp.nm_element method)": [[395, "mp.nm_element.set_node_type_ref"]], "soln (mp.nm_element attribute)": [[395, "mp.nm_element.soln"]], "x2vz() (mp.nm_element method)": [[395, "mp.nm_element.x2vz"]], "name() (mp.nme_branch method)": [[396, "mp.nme_branch.name"]], "nme_branch (class in mp)": [[396, "mp.nme_branch"]], "np() (mp.nme_branch method)": [[396, "mp.nme_branch.np"]], "build_params() (mp.nme_branch_ac method)": [[397, "mp.nme_branch_ac.build_params"]], "nme_branch_ac (class in mp)": [[397, "mp.nme_branch_ac"]], "ang_diff_fcn() (mp.nme_branch_acc method)": [[398, "mp.nme_branch_acc.ang_diff_fcn"]], "ang_diff_hess() (mp.nme_branch_acc method)": [[398, "mp.nme_branch_acc.ang_diff_hess"]], "nme_branch_acc (class in mp)": [[398, "mp.nme_branch_acc"]], "nme_branch_acp (class in mp)": [[399, "mp.nme_branch_acp"]], "build_params() (mp.nme_branch_dc method)": [[400, "mp.nme_branch_dc.build_params"]], "nme_branch_dc (class in mp)": [[400, "mp.nme_branch_dc"]], "name() (mp.nme_bus method)": [[401, "mp.nme_bus.name"]], "nme_bus (class in mp)": [[401, "mp.nme_bus"]], "nn() (mp.nme_bus method)": [[401, "mp.nme_bus.nn"]], "node_types() (mp.nme_bus method)": [[401, "mp.nme_bus.node_types"]], "set_node_type_pq() (mp.nme_bus method)": [[401, "mp.nme_bus.set_node_type_pq"]], "set_node_type_pv() (mp.nme_bus method)": [[401, "mp.nme_bus.set_node_type_pv"]], "set_node_type_ref() (mp.nme_bus method)": [[401, "mp.nme_bus.set_node_type_ref"]], "name() (mp.nme_bus3p method)": [[402, "mp.nme_bus3p.name"]], "nme_bus3p (class in mp)": [[402, "mp.nme_bus3p"]], "nn() (mp.nme_bus3p method)": [[402, "mp.nme_bus3p.nn"]], "node_types() (mp.nme_bus3p method)": [[402, "mp.nme_bus3p.node_types"]], "add_vvars() (mp.nme_bus3p_acc method)": [[403, "mp.nme_bus3p_acc.add_vvars"]], "nme_bus3p_acc (class in mp)": [[403, "mp.nme_bus3p_acc"]], "add_vvars() (mp.nme_bus3p_acp method)": [[404, "mp.nme_bus3p_acp.add_vvars"]], "nme_bus3p_acp (class in mp)": [[404, "mp.nme_bus3p_acp"]], "add_vvars() (mp.nme_bus_acc method)": [[405, "mp.nme_bus_acc.add_vvars"]], "nme_bus_acc (class in mp)": [[405, "mp.nme_bus_acc"]], "add_vvars() (mp.nme_bus_acp method)": [[406, "mp.nme_bus_acp.add_vvars"]], "nme_bus_acp (class in mp)": [[406, "mp.nme_bus_acp"]], "add_vvars() (mp.nme_bus_dc method)": [[407, "mp.nme_bus_dc.add_vvars"]], "nme_bus_dc (class in mp)": [[407, "mp.nme_bus_dc"]], "add_zvars() (mp.nme_buslink method)": [[408, "mp.nme_buslink.add_zvars"]], "build_params() (mp.nme_buslink method)": [[408, "mp.nme_buslink.build_params"]], "name() (mp.nme_buslink method)": [[408, "mp.nme_buslink.name"]], "nme_buslink (class in mp)": [[408, "mp.nme_buslink"]], "np() (mp.nme_buslink method)": [[408, "mp.nme_buslink.np"]], "nz() (mp.nme_buslink method)": [[408, "mp.nme_buslink.nz"]], "voltage_constraints() (mp.nme_buslink method)": [[408, "mp.nme_buslink.voltage_constraints"]], "nme_buslink_acc (class in mp)": [[409, "mp.nme_buslink_acc"]], "nme_buslink_acp (class in mp)": [[410, "mp.nme_buslink_acp"]], "name() (mp.nme_gen method)": [[411, "mp.nme_gen.name"]], "nme_gen (class in mp)": [[411, "mp.nme_gen"]], "np() (mp.nme_gen method)": [[411, "mp.nme_gen.np"]], "nz() (mp.nme_gen method)": [[411, "mp.nme_gen.nz"]], "add_zvars() (mp.nme_gen3p method)": [[412, "mp.nme_gen3p.add_zvars"]], "build_params() (mp.nme_gen3p method)": [[412, "mp.nme_gen3p.build_params"]], "name() (mp.nme_gen3p method)": [[412, "mp.nme_gen3p.name"]], "nme_gen3p (class in mp)": [[412, "mp.nme_gen3p"]], "np() (mp.nme_gen3p method)": [[412, "mp.nme_gen3p.np"]], "nz() (mp.nme_gen3p method)": [[412, "mp.nme_gen3p.nz"]], "nme_gen3p_acc (class in mp)": [[413, "mp.nme_gen3p_acc"]], "nme_gen3p_acp (class in mp)": [[414, "mp.nme_gen3p_acp"]], "add_zvars() (mp.nme_gen_ac method)": [[415, "mp.nme_gen_ac.add_zvars"]], "build_params() (mp.nme_gen_ac method)": [[415, "mp.nme_gen_ac.build_params"]], "nme_gen_ac (class in mp)": [[415, "mp.nme_gen_ac"]], "nme_gen_acc (class in mp)": [[416, "mp.nme_gen_acc"]], "nme_gen_acp (class in mp)": [[417, "mp.nme_gen_acp"]], "add_zvars() (mp.nme_gen_dc method)": [[418, "mp.nme_gen_dc.add_zvars"]], "build_params() (mp.nme_gen_dc method)": [[418, "mp.nme_gen_dc.build_params"]], "nme_gen_dc (class in mp)": [[418, "mp.nme_gen_dc"]], "name() (mp.nme_legacy_dcline method)": [[419, "mp.nme_legacy_dcline.name"]], "nme_legacy_dcline (class in mp)": [[419, "mp.nme_legacy_dcline"]], "np() (mp.nme_legacy_dcline method)": [[419, "mp.nme_legacy_dcline.np"]], "nz() (mp.nme_legacy_dcline method)": [[419, "mp.nme_legacy_dcline.nz"]], "add_zvars() (mp.nme_legacy_dcline_ac method)": [[420, "mp.nme_legacy_dcline_ac.add_zvars"]], "build_params() (mp.nme_legacy_dcline_ac method)": [[420, "mp.nme_legacy_dcline_ac.build_params"]], "nme_legacy_dcline_ac (class in mp)": [[420, "mp.nme_legacy_dcline_ac"]], "nme_legacy_dcline_acc (class in mp)": [[421, "mp.nme_legacy_dcline_acc"]], "nme_legacy_dcline_acp (class in mp)": [[422, "mp.nme_legacy_dcline_acp"]], "add_zvars() (mp.nme_legacy_dcline_dc method)": [[423, "mp.nme_legacy_dcline_dc.add_zvars"]], "build_params() (mp.nme_legacy_dcline_dc method)": [[423, "mp.nme_legacy_dcline_dc.build_params"]], "nme_legacy_dcline_dc (class in mp)": [[423, "mp.nme_legacy_dcline_dc"]], "build_params() (mp.nme_line3p method)": [[424, "mp.nme_line3p.build_params"]], "name() (mp.nme_line3p method)": [[424, "mp.nme_line3p.name"]], "nme_line3p (class in mp)": [[424, "mp.nme_line3p"]], "np() (mp.nme_line3p method)": [[424, "mp.nme_line3p.np"]], "vec2symmat_stacked() (mp.nme_line3p method)": [[424, "mp.nme_line3p.vec2symmat_stacked"]], "name() (mp.nme_load method)": [[425, "mp.nme_load.name"]], "nme_load (class in mp)": [[425, "mp.nme_load"]], "np() (mp.nme_load method)": [[425, "mp.nme_load.np"]], "build_params() (mp.nme_load3p method)": [[426, "mp.nme_load3p.build_params"]], "name() (mp.nme_load3p method)": [[426, "mp.nme_load3p.name"]], "nme_load3p (class in mp)": [[426, "mp.nme_load3p"]], "np() (mp.nme_load3p method)": [[426, "mp.nme_load3p.np"]], "build_params() (mp.nme_load_ac method)": [[427, "mp.nme_load_ac.build_params"]], "nme_load_ac (class in mp)": [[427, "mp.nme_load_ac"]], "port_inj_current_nln() (mp.nme_load_ac method)": [[427, "mp.nme_load_ac.port_inj_current_nln"]], "port_inj_power_nln() (mp.nme_load_ac method)": [[427, "mp.nme_load_ac.port_inj_power_nln"]], "nme_load_acc (class in mp)": [[428, "mp.nme_load_acc"]], "nme_load_acp (class in mp)": [[429, "mp.nme_load_acp"]], "build_params() (mp.nme_load_dc method)": [[430, "mp.nme_load_dc.build_params"]], "nme_load_dc (class in mp)": [[430, "mp.nme_load_dc"]], "name() (mp.nme_shunt method)": [[431, "mp.nme_shunt.name"]], "nme_shunt (class in mp)": [[431, "mp.nme_shunt"]], "np() (mp.nme_shunt method)": [[431, "mp.nme_shunt.np"]], "build_params() (mp.nme_shunt_ac method)": [[432, "mp.nme_shunt_ac.build_params"]], "nme_shunt_ac (class in mp)": [[432, "mp.nme_shunt_ac"]], "nme_shunt_acc (class in mp)": [[433, "mp.nme_shunt_acc"]], "nme_shunt_acp (class in mp)": [[434, "mp.nme_shunt_acp"]], "build_params() (mp.nme_shunt_dc method)": [[435, "mp.nme_shunt_dc.build_params"]], "nme_shunt_dc (class in mp)": [[435, "mp.nme_shunt_dc"]], "build_params() (mp.nme_xfmr3p method)": [[436, "mp.nme_xfmr3p.build_params"]], "name() (mp.nme_xfmr3p method)": [[436, "mp.nme_xfmr3p.name"]], "nme_xfmr3p (class in mp)": [[436, "mp.nme_xfmr3p"]], "np() (mp.nme_xfmr3p method)": [[436, "mp.nme_xfmr3p.np"]], "data_model_build() (mp.task method)": [[437, "mp.task.data_model_build"]], "data_model_build_post() (mp.task method)": [[437, "mp.task.data_model_build_post"]], "data_model_build_pre() (mp.task method)": [[437, "mp.task.data_model_build_pre"]], "data_model_class() (mp.task method)": [[437, "mp.task.data_model_class"]], "data_model_class_default() (mp.task method)": [[437, "mp.task.data_model_class_default"]], "data_model_create() (mp.task method)": [[437, "mp.task.data_model_create"]], "dm (mp.task attribute)": [[437, "mp.task.dm"]], "dm_converter_build() (mp.task method)": [[437, "mp.task.dm_converter_build"]], "dm_converter_class() (mp.task method)": [[437, "mp.task.dm_converter_class"]], "dm_converter_class_mpc2_default() (mp.task method)": [[437, "mp.task.dm_converter_class_mpc2_default"]], "dm_converter_create() (mp.task method)": [[437, "mp.task.dm_converter_create"]], "dmc (mp.task attribute)": [[437, "mp.task.dmc"]], "et (mp.task attribute)": [[437, "mp.task.et"]], "i_dm (mp.task attribute)": [[437, "mp.task.i_dm"]], "i_mm (mp.task attribute)": [[437, "mp.task.i_mm"]], "i_nm (mp.task attribute)": [[437, "mp.task.i_nm"]], "math_model_build() (mp.task method)": [[437, "mp.task.math_model_build"]], "math_model_class() (mp.task method)": [[437, "mp.task.math_model_class"]], "math_model_class_default() (mp.task method)": [[437, "mp.task.math_model_class_default"]], "math_model_create() (mp.task method)": [[437, "mp.task.math_model_create"]], "math_model_opt() (mp.task method)": [[437, "mp.task.math_model_opt"]], "message (mp.task attribute)": [[437, "mp.task.message"]], "mm (mp.task attribute)": [[437, "mp.task.mm"]], "mm_opt (mp.task attribute)": [[437, "mp.task.mm_opt"]], "name (mp.task attribute)": [[437, "mp.task.name"]], "network_model_build() (mp.task method)": [[437, "mp.task.network_model_build"]], "network_model_build_post() (mp.task method)": [[437, "mp.task.network_model_build_post"]], "network_model_build_pre() (mp.task method)": [[437, "mp.task.network_model_build_pre"]], "network_model_class() (mp.task method)": [[437, "mp.task.network_model_class"]], "network_model_class_default() (mp.task method)": [[437, "mp.task.network_model_class_default"]], "network_model_create() (mp.task method)": [[437, "mp.task.network_model_create"]], "network_model_update() (mp.task method)": [[437, "mp.task.network_model_update"]], "network_model_x_soln() (mp.task method)": [[437, "mp.task.network_model_x_soln"]], "next_dm() (mp.task method)": [[437, "mp.task.next_dm"]], "next_mm() (mp.task method)": [[437, "mp.task.next_mm"]], "next_nm() (mp.task method)": [[437, "mp.task.next_nm"]], "nm (mp.task attribute)": [[437, "mp.task.nm"]], "print_soln() (mp.task method)": [[437, "mp.task.print_soln"]], "print_soln_header() (mp.task method)": [[437, "mp.task.print_soln_header"]], "run() (mp.task method)": [[437, "mp.task.run"]], "run_post() (mp.task method)": [[437, "mp.task.run_post"]], "run_pre() (mp.task method)": [[437, "mp.task.run_pre"]], "save_soln() (mp.task method)": [[437, "mp.task.save_soln"]], "success (mp.task attribute)": [[437, "mp.task.success"]], "tag (mp.task attribute)": [[437, "mp.task.tag"]], "task (class in mp)": [[437, "mp.task"]], "data_model_build() (mp.task_cpf method)": [[438, "mp.task_cpf.data_model_build"]], "data_model_class_default() (mp.task_cpf method)": [[438, "mp.task_cpf.data_model_class_default"]], "dm_converter_class() (mp.task_cpf method)": [[438, "mp.task_cpf.dm_converter_class"]], "math_model_class_default() (mp.task_cpf method)": [[438, "mp.task_cpf.math_model_class_default"]], "math_model_opt() (mp.task_cpf method)": [[438, "mp.task_cpf.math_model_opt"]], "network_model_build() (mp.task_cpf method)": [[438, "mp.task_cpf.network_model_build"]], "network_model_update() (mp.task_cpf method)": [[438, "mp.task_cpf.network_model_update"]], "network_model_x_soln() (mp.task_cpf method)": [[438, "mp.task_cpf.network_model_x_soln"]], "next_mm() (mp.task_cpf method)": [[438, "mp.task_cpf.next_mm"]], "run_pre() (mp.task_cpf method)": [[438, "mp.task_cpf.run_pre"]], "task_cpf (class in mp)": [[438, "mp.task_cpf"]], "task_cpf() (mp.task_cpf method)": [[438, "mp.task_cpf.task_cpf"]], "warmstart (mp.task_cpf attribute)": [[438, "mp.task_cpf.warmstart"]], "legacy_post_run() (mp.task_cpf_legacy method)": [[439, "mp.task_cpf_legacy.legacy_post_run"]], "run_post() (mp.task_cpf_legacy method)": [[439, "mp.task_cpf_legacy.run_post"]], "run_pre() (mp.task_cpf_legacy method)": [[439, "mp.task_cpf_legacy.run_pre"]], "task_cpf_legacy (class in mp)": [[439, "mp.task_cpf_legacy"]], "data_model_build_post() (mp.task_opf method)": [[440, "mp.task_opf.data_model_build_post"]], "data_model_class_default() (mp.task_opf method)": [[440, "mp.task_opf.data_model_class_default"]], "dc (mp.task_opf attribute)": [[440, "mp.task_opf.dc"]], "math_model_class_default() (mp.task_opf method)": [[440, "mp.task_opf.math_model_class_default"]], "network_model_class_default() (mp.task_opf method)": [[440, "mp.task_opf.network_model_class_default"]], "print_soln_header() (mp.task_opf method)": [[440, "mp.task_opf.print_soln_header"]], "run_pre() (mp.task_opf method)": [[440, "mp.task_opf.run_pre"]], "task_opf (class in mp)": [[440, "mp.task_opf"]], "data_model_build_post() (mp.task_opf_legacy method)": [[441, "mp.task_opf_legacy.data_model_build_post"]], "dm_converter_class_mpc2_default() (mp.task_opf_legacy method)": [[441, "mp.task_opf_legacy.dm_converter_class_mpc2_default"]], "legacy_post_run() (mp.task_opf_legacy method)": [[441, "mp.task_opf_legacy.legacy_post_run"]], "math_model_class_default() (mp.task_opf_legacy method)": [[441, "mp.task_opf_legacy.math_model_class_default"]], "run_post() (mp.task_opf_legacy method)": [[441, "mp.task_opf_legacy.run_post"]], "run_pre() (mp.task_opf_legacy method)": [[441, "mp.task_opf_legacy.run_pre"]], "task_opf_legacy (class in mp)": [[441, "mp.task_opf_legacy"]], "dc (mp.task_pf attribute)": [[442, "mp.task_pf.dc"]], "enforce_q_lims() (mp.task_pf method)": [[442, "mp.task_pf.enforce_q_lims"]], "fixed_q_idx (mp.task_pf attribute)": [[442, "mp.task_pf.fixed_q_idx"]], "fixed_q_qty (mp.task_pf attribute)": [[442, "mp.task_pf.fixed_q_qty"]], "iterations (mp.task_pf attribute)": [[442, "mp.task_pf.iterations"]], "math_model_class_default() (mp.task_pf method)": [[442, "mp.task_pf.math_model_class_default"]], "name (mp.task_pf attribute)": [[442, "mp.task_pf.name"]], "network_model_build_post() (mp.task_pf method)": [[442, "mp.task_pf.network_model_build_post"]], "network_model_class_default() (mp.task_pf method)": [[442, "mp.task_pf.network_model_class_default"]], "network_model_x_soln() (mp.task_pf method)": [[442, "mp.task_pf.network_model_x_soln"]], "next_dm() (mp.task_pf method)": [[442, "mp.task_pf.next_dm"]], "ref (mp.task_pf attribute)": [[442, "mp.task_pf.ref"]], "ref0 (mp.task_pf attribute)": [[442, "mp.task_pf.ref0"]], "run_pre() (mp.task_pf method)": [[442, "mp.task_pf.run_pre"]], "tag (mp.task_pf attribute)": [[442, "mp.task_pf.tag"]], "task_pf (class in mp)": [[442, "mp.task_pf"]], "va_ref0 (mp.task_pf attribute)": [[442, "mp.task_pf.va_ref0"]], "legacy_post_run() (mp.task_pf_legacy method)": [[443, "mp.task_pf_legacy.legacy_post_run"]], "run_post() (mp.task_pf_legacy method)": [[443, "mp.task_pf_legacy.run_post"]], "run_pre() (mp.task_pf_legacy method)": [[443, "mp.task_pf_legacy.run_pre"]], "task_pf_legacy (class in mp)": [[443, "mp.task_pf_legacy"]], "run_pre_legacy() (mp.task_shared_legacy method)": [[444, "mp.task_shared_legacy.run_pre_legacy"]], "task_shared_legacy (class in mp)": [[444, "mp.task_shared_legacy"]], "dm_element_classes() (mp.xt_3p method)": [[445, "mp.xt_3p.dm_element_classes"]], "dmc_element_classes() (mp.xt_3p method)": [[445, "mp.xt_3p.dmc_element_classes"]], "mm_element_classes() (mp.xt_3p method)": [[445, "mp.xt_3p.mm_element_classes"]], "nm_element_classes() (mp.xt_3p method)": [[445, "mp.xt_3p.nm_element_classes"]], "xt_3p (class in mp)": [[445, "mp.xt_3p"]], "dm_element_classes() (mp.xt_legacy_dcline method)": [[446, "mp.xt_legacy_dcline.dm_element_classes"]], "dmc_element_classes() (mp.xt_legacy_dcline method)": [[446, "mp.xt_legacy_dcline.dmc_element_classes"]], "mm_element_classes() (mp.xt_legacy_dcline method)": [[446, "mp.xt_legacy_dcline.mm_element_classes"]], "nm_element_classes() (mp.xt_legacy_dcline method)": [[446, "mp.xt_legacy_dcline.nm_element_classes"]], "xt_legacy_dcline (class in mp)": [[446, "mp.xt_legacy_dcline"]], "dm_element_classes() (mp.xt_reserves method)": [[447, "mp.xt_reserves.dm_element_classes"]], "dmc_element_classes() (mp.xt_reserves method)": [[447, "mp.xt_reserves.dmc_element_classes"]], "mm_element_classes() (mp.xt_reserves method)": [[447, "mp.xt_reserves.mm_element_classes"]], "xt_reserves (class in mp)": [[447, "mp.xt_reserves"]], "display() (mp_table method)": [[448, "mp_table.display"]], "end() (mp_table method)": [[448, "mp_table.end"]], "extract_named_args() (mp_table static method)": [[448, "mp_table.extract_named_args"]], "horzcat() (mp_table method)": [[448, "mp_table.horzcat"]], "isempty() (mp_table method)": [[448, "mp_table.isempty"]], "istable() (mp_table method)": [[448, "mp_table.istable"]], "mp_table (built-in class)": [[448, "mp_table"]], "mp_table() (mp_table method)": [[448, "mp_table.mp_table"]], "size() (mp_table method)": [[448, "mp_table.size"]], "subsasgn() (mp_table method)": [[448, "mp_table.subsasgn"]], "subsref() (mp_table method)": [[448, "mp_table.subsref"]], "vertcat() (mp_table method)": [[448, "mp_table.vertcat"]], "get_table() (mp_table_subclass method)": [[449, "mp_table_subclass.get_table"]], "mp_table_subclass (built-in class)": [[449, "mp_table_subclass"]], "set_table() (mp_table_subclass method)": [[449, "mp_table_subclass.set_table"]], "mp_table_class() (built-in function)": [[451, "mp_table_class"]], "run_cpf() (built-in function)": [[452, "run_cpf"]], "run_mp() (built-in function)": [[453, "run_mp"]], "run_opf() (built-in function)": [[454, "run_opf"]], "run_pf() (built-in function)": [[455, "run_pf"]]}})