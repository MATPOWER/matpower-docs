Search.setIndex({"docnames": ["dev-manual/acknowledgments", "dev-manual/architecture", "dev-manual/customizing", "dev-manual/data-model", "dev-manual/data-model-converter", "dev-manual/index", "dev-manual/introduction", "dev-manual/math-model", "dev-manual/net-model", "dev-manual/notation", "dev-manual/references", "dev-manual/task", "howto/builddocs", "howto/builddocs/generate_autodoc_stubs", "howto/builddocs/generate_matpower_autodoc", "howto/builddocs/generate_source_symlinks", "howto/element", "howto/extension", "howto/gizmo-element/index", "howto/three-phase", "index", "mips/functions/have_feature_lu_vec", "mips/functions/have_feature_pardiso", "mips/functions/have_feature_pardiso_legacy", "mips/functions/have_feature_pardiso_object", "mips/functions/mips", "mips/functions/mips_example1", "mips/functions/mips_example2", "mips/functions/mipsver", "mips/functions/mplinsolve", "mips/functions/qps_mips", "mips/functions/t_mips", "mips/functions/t_mips_pardiso", "mips/functions/t_mplinsolve", "mips/functions/t_qps_mips", "mips/functions/test_mips", "mips/index", "mips/reference", "most/index", "mpom/index", "mptest/functions/have_feature", "mptest/functions/have_feature_matlab", "mptest/functions/have_feature_octave", "mptest/functions/mptestver", "mptest/functions/t_begin", "mptest/functions/t_end", "mptest/functions/t_file_match", "mptest/functions/t_have_feature", "mptest/functions/t_is", "mptest/functions/t_ok", "mptest/functions/t_run_tests", "mptest/functions/t_skip", "mptest/functions/t_str_match", "mptest/functions/t_test_fcns", "mptest/functions/test_mptest", "mptest/index", "mptest/reference", "ref-manual/classes/index", "ref-manual/classes/mp/NODE_TYPE", "ref-manual/classes/mp/cost_table", "ref-manual/classes/mp/cost_table_utils", "ref-manual/classes/mp/data_model", "ref-manual/classes/mp/data_model_cpf", "ref-manual/classes/mp/data_model_opf", "ref-manual/classes/mp/dm_converter", "ref-manual/classes/mp/dm_converter_mpc2", "ref-manual/classes/mp/dm_converter_mpc2_legacy", "ref-manual/classes/mp/dm_element", "ref-manual/classes/mp/dmc_element", "ref-manual/classes/mp/dmce_branch_mpc2", "ref-manual/classes/mp/dmce_bus3p_mpc2", "ref-manual/classes/mp/dmce_bus_mpc2", "ref-manual/classes/mp/dmce_buslink_mpc2", "ref-manual/classes/mp/dmce_gen3p_mpc2", "ref-manual/classes/mp/dmce_gen_mpc2", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2", "ref-manual/classes/mp/dmce_line3p_mpc2", "ref-manual/classes/mp/dmce_load3p_mpc2", "ref-manual/classes/mp/dmce_load_mpc2", "ref-manual/classes/mp/dmce_reserve_gen_mpc2", "ref-manual/classes/mp/dmce_reserve_zone_mpc2", "ref-manual/classes/mp/dmce_shunt_mpc2", "ref-manual/classes/mp/dmce_xfmr3p_mpc2", "ref-manual/classes/mp/dme_branch", "ref-manual/classes/mp/dme_branch_opf", "ref-manual/classes/mp/dme_bus", "ref-manual/classes/mp/dme_bus3p", "ref-manual/classes/mp/dme_bus3p_opf", "ref-manual/classes/mp/dme_bus_opf", "ref-manual/classes/mp/dme_buslink", "ref-manual/classes/mp/dme_buslink_opf", "ref-manual/classes/mp/dme_gen", "ref-manual/classes/mp/dme_gen3p", "ref-manual/classes/mp/dme_gen3p_opf", "ref-manual/classes/mp/dme_gen_opf", "ref-manual/classes/mp/dme_legacy_dcline", "ref-manual/classes/mp/dme_legacy_dcline_opf", "ref-manual/classes/mp/dme_line3p", "ref-manual/classes/mp/dme_line3p_opf", "ref-manual/classes/mp/dme_load", "ref-manual/classes/mp/dme_load3p", "ref-manual/classes/mp/dme_load3p_opf", "ref-manual/classes/mp/dme_load_cpf", "ref-manual/classes/mp/dme_load_opf", "ref-manual/classes/mp/dme_reserve_gen", "ref-manual/classes/mp/dme_reserve_zone", "ref-manual/classes/mp/dme_shared_opf", "ref-manual/classes/mp/dme_shunt", "ref-manual/classes/mp/dme_shunt_cpf", "ref-manual/classes/mp/dme_shunt_opf", "ref-manual/classes/mp/dme_xfmr3p", "ref-manual/classes/mp/dme_xfmr3p_opf", "ref-manual/classes/mp/element_container", "ref-manual/classes/mp/extension", "ref-manual/classes/mp/form", "ref-manual/classes/mp/form_ac", "ref-manual/classes/mp/form_acc", "ref-manual/classes/mp/form_acp", "ref-manual/classes/mp/form_dc", "ref-manual/classes/mp/mapped_array", "ref-manual/classes/mp/math_model", "ref-manual/classes/mp/math_model_cpf_acc", "ref-manual/classes/mp/math_model_cpf_acci", "ref-manual/classes/mp/math_model_cpf_accs", "ref-manual/classes/mp/math_model_cpf_acp", "ref-manual/classes/mp/math_model_cpf_acpi", "ref-manual/classes/mp/math_model_cpf_acps", "ref-manual/classes/mp/math_model_opf", "ref-manual/classes/mp/math_model_opf_ac", "ref-manual/classes/mp/math_model_opf_acc", "ref-manual/classes/mp/math_model_opf_acci", "ref-manual/classes/mp/math_model_opf_acci_legacy", "ref-manual/classes/mp/math_model_opf_accs", "ref-manual/classes/mp/math_model_opf_accs_legacy", "ref-manual/classes/mp/math_model_opf_acp", "ref-manual/classes/mp/math_model_opf_acpi", "ref-manual/classes/mp/math_model_opf_acpi_legacy", "ref-manual/classes/mp/math_model_opf_acps", "ref-manual/classes/mp/math_model_opf_acps_legacy", "ref-manual/classes/mp/math_model_opf_dc", "ref-manual/classes/mp/math_model_opf_dc_legacy", "ref-manual/classes/mp/math_model_pf", "ref-manual/classes/mp/math_model_pf_ac", "ref-manual/classes/mp/math_model_pf_acci", "ref-manual/classes/mp/math_model_pf_accs", "ref-manual/classes/mp/math_model_pf_acpi", "ref-manual/classes/mp/math_model_pf_acps", "ref-manual/classes/mp/math_model_pf_dc", "ref-manual/classes/mp/mm_element", "ref-manual/classes/mp/mm_shared_opf_legacy", "ref-manual/classes/mp/mm_shared_pfcpf", "ref-manual/classes/mp/mm_shared_pfcpf_ac", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i", "ref-manual/classes/mp/mm_shared_pfcpf_acc", "ref-manual/classes/mp/mm_shared_pfcpf_acci", "ref-manual/classes/mp/mm_shared_pfcpf_accs", "ref-manual/classes/mp/mm_shared_pfcpf_acp", "ref-manual/classes/mp/mm_shared_pfcpf_acpi", "ref-manual/classes/mp/mm_shared_pfcpf_acps", "ref-manual/classes/mp/mm_shared_pfcpf_dc", "ref-manual/classes/mp/mme_branch", "ref-manual/classes/mp/mme_branch_opf", "ref-manual/classes/mp/mme_branch_opf_ac", "ref-manual/classes/mp/mme_branch_opf_acc", "ref-manual/classes/mp/mme_branch_opf_acp", "ref-manual/classes/mp/mme_branch_opf_dc", "ref-manual/classes/mp/mme_branch_pf_ac", "ref-manual/classes/mp/mme_branch_pf_dc", "ref-manual/classes/mp/mme_bus", "ref-manual/classes/mp/mme_bus3p", "ref-manual/classes/mp/mme_bus3p_opf_acc", "ref-manual/classes/mp/mme_bus3p_opf_acp", "ref-manual/classes/mp/mme_bus_opf_ac", "ref-manual/classes/mp/mme_bus_opf_acc", "ref-manual/classes/mp/mme_bus_opf_acp", "ref-manual/classes/mp/mme_bus_opf_dc", "ref-manual/classes/mp/mme_bus_pf_ac", "ref-manual/classes/mp/mme_bus_pf_dc", "ref-manual/classes/mp/mme_buslink", "ref-manual/classes/mp/mme_buslink_opf", "ref-manual/classes/mp/mme_buslink_opf_acc", "ref-manual/classes/mp/mme_buslink_opf_acp", "ref-manual/classes/mp/mme_buslink_pf_ac", "ref-manual/classes/mp/mme_buslink_pf_acc", "ref-manual/classes/mp/mme_buslink_pf_acp", "ref-manual/classes/mp/mme_gen", "ref-manual/classes/mp/mme_gen3p", "ref-manual/classes/mp/mme_gen3p_opf", "ref-manual/classes/mp/mme_gen_opf", "ref-manual/classes/mp/mme_gen_opf_ac", "ref-manual/classes/mp/mme_gen_opf_dc", "ref-manual/classes/mp/mme_gen_pf_ac", "ref-manual/classes/mp/mme_gen_pf_dc", "ref-manual/classes/mp/mme_legacy_dcline", "ref-manual/classes/mp/mme_legacy_dcline_opf", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc", "ref-manual/classes/mp/mme_line3p", "ref-manual/classes/mp/mme_line3p_opf", "ref-manual/classes/mp/mme_load", "ref-manual/classes/mp/mme_load_cpf", "ref-manual/classes/mp/mme_load_pf_ac", "ref-manual/classes/mp/mme_load_pf_dc", "ref-manual/classes/mp/mme_reserve_gen", "ref-manual/classes/mp/mme_reserve_zone", "ref-manual/classes/mp/mme_shunt", "ref-manual/classes/mp/mme_shunt_cpf", "ref-manual/classes/mp/mme_shunt_pf_ac", "ref-manual/classes/mp/mme_shunt_pf_dc", "ref-manual/classes/mp/mme_xfmr3p", "ref-manual/classes/mp/mme_xfmr3p_opf", "ref-manual/classes/mp/net_model", "ref-manual/classes/mp/net_model_ac", "ref-manual/classes/mp/net_model_acc", "ref-manual/classes/mp/net_model_acp", "ref-manual/classes/mp/net_model_dc", "ref-manual/classes/mp/nm_element", "ref-manual/classes/mp/nme_branch", "ref-manual/classes/mp/nme_branch_ac", "ref-manual/classes/mp/nme_branch_acc", "ref-manual/classes/mp/nme_branch_acp", "ref-manual/classes/mp/nme_branch_dc", "ref-manual/classes/mp/nme_bus", "ref-manual/classes/mp/nme_bus3p", "ref-manual/classes/mp/nme_bus3p_acc", "ref-manual/classes/mp/nme_bus3p_acp", "ref-manual/classes/mp/nme_bus_acc", "ref-manual/classes/mp/nme_bus_acp", "ref-manual/classes/mp/nme_bus_dc", "ref-manual/classes/mp/nme_buslink", "ref-manual/classes/mp/nme_buslink_acc", "ref-manual/classes/mp/nme_buslink_acp", "ref-manual/classes/mp/nme_gen", "ref-manual/classes/mp/nme_gen3p", "ref-manual/classes/mp/nme_gen3p_acc", "ref-manual/classes/mp/nme_gen3p_acp", "ref-manual/classes/mp/nme_gen_ac", "ref-manual/classes/mp/nme_gen_acc", "ref-manual/classes/mp/nme_gen_acp", "ref-manual/classes/mp/nme_gen_dc", "ref-manual/classes/mp/nme_legacy_dcline", "ref-manual/classes/mp/nme_legacy_dcline_ac", "ref-manual/classes/mp/nme_legacy_dcline_acc", "ref-manual/classes/mp/nme_legacy_dcline_acp", "ref-manual/classes/mp/nme_legacy_dcline_dc", "ref-manual/classes/mp/nme_line3p", "ref-manual/classes/mp/nme_load", "ref-manual/classes/mp/nme_load3p", "ref-manual/classes/mp/nme_load_ac", "ref-manual/classes/mp/nme_load_acc", "ref-manual/classes/mp/nme_load_acp", "ref-manual/classes/mp/nme_load_dc", "ref-manual/classes/mp/nme_shunt", "ref-manual/classes/mp/nme_shunt_ac", "ref-manual/classes/mp/nme_shunt_acc", "ref-manual/classes/mp/nme_shunt_acp", "ref-manual/classes/mp/nme_shunt_dc", "ref-manual/classes/mp/nme_xfmr3p", "ref-manual/classes/mp/task", "ref-manual/classes/mp/task_cpf", "ref-manual/classes/mp/task_cpf_legacy", "ref-manual/classes/mp/task_opf", "ref-manual/classes/mp/task_opf_legacy", "ref-manual/classes/mp/task_pf", "ref-manual/classes/mp/task_pf_legacy", "ref-manual/classes/mp/task_shared_legacy", "ref-manual/classes/mp/xt_3p", "ref-manual/classes/mp/xt_legacy_dcline", "ref-manual/classes/mp/xt_reserves", "ref-manual/classes/mp_table", "ref-manual/classes/mp_table_subclass", "ref-manual/functions/index", "ref-manual/functions/mp_table_class", "ref-manual/functions/run_cpf", "ref-manual/functions/run_mp", "ref-manual/functions/run_opf", "ref-manual/functions/run_pf", "ref-manual/index", "ref-manual/introduction", "users-manual/index"], "filenames": ["dev-manual/acknowledgments.rst", "dev-manual/architecture.rst", "dev-manual/customizing.rst", "dev-manual/data-model.rst", "dev-manual/data-model-converter.rst", "dev-manual/index.rst", "dev-manual/introduction.rst", "dev-manual/math-model.rst", "dev-manual/net-model.rst", "dev-manual/notation.rst", "dev-manual/references.rst", "dev-manual/task.rst", "howto/builddocs.rst", "howto/builddocs/generate_autodoc_stubs.rst", "howto/builddocs/generate_matpower_autodoc.rst", "howto/builddocs/generate_source_symlinks.rst", "howto/element.rst", "howto/extension.rst", "howto/gizmo-element/index.rst", "howto/three-phase.rst", "index.rst", "mips/functions/have_feature_lu_vec.rst", "mips/functions/have_feature_pardiso.rst", "mips/functions/have_feature_pardiso_legacy.rst", "mips/functions/have_feature_pardiso_object.rst", "mips/functions/mips.rst", "mips/functions/mips_example1.rst", "mips/functions/mips_example2.rst", "mips/functions/mipsver.rst", "mips/functions/mplinsolve.rst", "mips/functions/qps_mips.rst", "mips/functions/t_mips.rst", "mips/functions/t_mips_pardiso.rst", "mips/functions/t_mplinsolve.rst", "mips/functions/t_qps_mips.rst", "mips/functions/test_mips.rst", "mips/index.rst", "mips/reference.rst", "most/index.rst", "mpom/index.rst", "mptest/functions/have_feature.rst", "mptest/functions/have_feature_matlab.rst", "mptest/functions/have_feature_octave.rst", "mptest/functions/mptestver.rst", "mptest/functions/t_begin.rst", "mptest/functions/t_end.rst", "mptest/functions/t_file_match.rst", "mptest/functions/t_have_feature.rst", "mptest/functions/t_is.rst", "mptest/functions/t_ok.rst", "mptest/functions/t_run_tests.rst", "mptest/functions/t_skip.rst", "mptest/functions/t_str_match.rst", "mptest/functions/t_test_fcns.rst", "mptest/functions/test_mptest.rst", "mptest/index.rst", "mptest/reference.rst", "ref-manual/classes/index.rst", "ref-manual/classes/mp/NODE_TYPE.rst", "ref-manual/classes/mp/cost_table.rst", "ref-manual/classes/mp/cost_table_utils.rst", "ref-manual/classes/mp/data_model.rst", "ref-manual/classes/mp/data_model_cpf.rst", "ref-manual/classes/mp/data_model_opf.rst", "ref-manual/classes/mp/dm_converter.rst", "ref-manual/classes/mp/dm_converter_mpc2.rst", "ref-manual/classes/mp/dm_converter_mpc2_legacy.rst", "ref-manual/classes/mp/dm_element.rst", "ref-manual/classes/mp/dmc_element.rst", "ref-manual/classes/mp/dmce_branch_mpc2.rst", "ref-manual/classes/mp/dmce_bus3p_mpc2.rst", "ref-manual/classes/mp/dmce_bus_mpc2.rst", "ref-manual/classes/mp/dmce_buslink_mpc2.rst", "ref-manual/classes/mp/dmce_gen3p_mpc2.rst", "ref-manual/classes/mp/dmce_gen_mpc2.rst", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2.rst", "ref-manual/classes/mp/dmce_line3p_mpc2.rst", "ref-manual/classes/mp/dmce_load3p_mpc2.rst", "ref-manual/classes/mp/dmce_load_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_gen_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_zone_mpc2.rst", "ref-manual/classes/mp/dmce_shunt_mpc2.rst", "ref-manual/classes/mp/dmce_xfmr3p_mpc2.rst", "ref-manual/classes/mp/dme_branch.rst", "ref-manual/classes/mp/dme_branch_opf.rst", "ref-manual/classes/mp/dme_bus.rst", "ref-manual/classes/mp/dme_bus3p.rst", "ref-manual/classes/mp/dme_bus3p_opf.rst", "ref-manual/classes/mp/dme_bus_opf.rst", "ref-manual/classes/mp/dme_buslink.rst", "ref-manual/classes/mp/dme_buslink_opf.rst", "ref-manual/classes/mp/dme_gen.rst", "ref-manual/classes/mp/dme_gen3p.rst", "ref-manual/classes/mp/dme_gen3p_opf.rst", "ref-manual/classes/mp/dme_gen_opf.rst", "ref-manual/classes/mp/dme_legacy_dcline.rst", "ref-manual/classes/mp/dme_legacy_dcline_opf.rst", "ref-manual/classes/mp/dme_line3p.rst", "ref-manual/classes/mp/dme_line3p_opf.rst", "ref-manual/classes/mp/dme_load.rst", "ref-manual/classes/mp/dme_load3p.rst", "ref-manual/classes/mp/dme_load3p_opf.rst", "ref-manual/classes/mp/dme_load_cpf.rst", "ref-manual/classes/mp/dme_load_opf.rst", "ref-manual/classes/mp/dme_reserve_gen.rst", "ref-manual/classes/mp/dme_reserve_zone.rst", "ref-manual/classes/mp/dme_shared_opf.rst", "ref-manual/classes/mp/dme_shunt.rst", "ref-manual/classes/mp/dme_shunt_cpf.rst", "ref-manual/classes/mp/dme_shunt_opf.rst", "ref-manual/classes/mp/dme_xfmr3p.rst", "ref-manual/classes/mp/dme_xfmr3p_opf.rst", "ref-manual/classes/mp/element_container.rst", "ref-manual/classes/mp/extension.rst", "ref-manual/classes/mp/form.rst", "ref-manual/classes/mp/form_ac.rst", "ref-manual/classes/mp/form_acc.rst", "ref-manual/classes/mp/form_acp.rst", "ref-manual/classes/mp/form_dc.rst", "ref-manual/classes/mp/mapped_array.rst", "ref-manual/classes/mp/math_model.rst", "ref-manual/classes/mp/math_model_cpf_acc.rst", "ref-manual/classes/mp/math_model_cpf_acci.rst", "ref-manual/classes/mp/math_model_cpf_accs.rst", "ref-manual/classes/mp/math_model_cpf_acp.rst", "ref-manual/classes/mp/math_model_cpf_acpi.rst", "ref-manual/classes/mp/math_model_cpf_acps.rst", "ref-manual/classes/mp/math_model_opf.rst", "ref-manual/classes/mp/math_model_opf_ac.rst", "ref-manual/classes/mp/math_model_opf_acc.rst", "ref-manual/classes/mp/math_model_opf_acci.rst", "ref-manual/classes/mp/math_model_opf_acci_legacy.rst", "ref-manual/classes/mp/math_model_opf_accs.rst", "ref-manual/classes/mp/math_model_opf_accs_legacy.rst", "ref-manual/classes/mp/math_model_opf_acp.rst", "ref-manual/classes/mp/math_model_opf_acpi.rst", "ref-manual/classes/mp/math_model_opf_acpi_legacy.rst", "ref-manual/classes/mp/math_model_opf_acps.rst", "ref-manual/classes/mp/math_model_opf_acps_legacy.rst", "ref-manual/classes/mp/math_model_opf_dc.rst", "ref-manual/classes/mp/math_model_opf_dc_legacy.rst", "ref-manual/classes/mp/math_model_pf.rst", "ref-manual/classes/mp/math_model_pf_ac.rst", "ref-manual/classes/mp/math_model_pf_acci.rst", "ref-manual/classes/mp/math_model_pf_accs.rst", "ref-manual/classes/mp/math_model_pf_acpi.rst", "ref-manual/classes/mp/math_model_pf_acps.rst", "ref-manual/classes/mp/math_model_pf_dc.rst", "ref-manual/classes/mp/mm_element.rst", "ref-manual/classes/mp/mm_shared_opf_legacy.rst", "ref-manual/classes/mp/mm_shared_pfcpf.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acc.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acci.rst", "ref-manual/classes/mp/mm_shared_pfcpf_accs.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acp.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acpi.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acps.rst", "ref-manual/classes/mp/mm_shared_pfcpf_dc.rst", "ref-manual/classes/mp/mme_branch.rst", "ref-manual/classes/mp/mme_branch_opf.rst", "ref-manual/classes/mp/mme_branch_opf_ac.rst", "ref-manual/classes/mp/mme_branch_opf_acc.rst", "ref-manual/classes/mp/mme_branch_opf_acp.rst", "ref-manual/classes/mp/mme_branch_opf_dc.rst", "ref-manual/classes/mp/mme_branch_pf_ac.rst", "ref-manual/classes/mp/mme_branch_pf_dc.rst", "ref-manual/classes/mp/mme_bus.rst", "ref-manual/classes/mp/mme_bus3p.rst", "ref-manual/classes/mp/mme_bus3p_opf_acc.rst", "ref-manual/classes/mp/mme_bus3p_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_ac.rst", "ref-manual/classes/mp/mme_bus_opf_acc.rst", "ref-manual/classes/mp/mme_bus_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_dc.rst", "ref-manual/classes/mp/mme_bus_pf_ac.rst", "ref-manual/classes/mp/mme_bus_pf_dc.rst", "ref-manual/classes/mp/mme_buslink.rst", "ref-manual/classes/mp/mme_buslink_opf.rst", "ref-manual/classes/mp/mme_buslink_opf_acc.rst", "ref-manual/classes/mp/mme_buslink_opf_acp.rst", "ref-manual/classes/mp/mme_buslink_pf_ac.rst", "ref-manual/classes/mp/mme_buslink_pf_acc.rst", "ref-manual/classes/mp/mme_buslink_pf_acp.rst", "ref-manual/classes/mp/mme_gen.rst", "ref-manual/classes/mp/mme_gen3p.rst", "ref-manual/classes/mp/mme_gen3p_opf.rst", "ref-manual/classes/mp/mme_gen_opf.rst", "ref-manual/classes/mp/mme_gen_opf_ac.rst", "ref-manual/classes/mp/mme_gen_opf_dc.rst", "ref-manual/classes/mp/mme_gen_pf_ac.rst", "ref-manual/classes/mp/mme_gen_pf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc.rst", "ref-manual/classes/mp/mme_line3p.rst", "ref-manual/classes/mp/mme_line3p_opf.rst", "ref-manual/classes/mp/mme_load.rst", "ref-manual/classes/mp/mme_load_cpf.rst", "ref-manual/classes/mp/mme_load_pf_ac.rst", "ref-manual/classes/mp/mme_load_pf_dc.rst", "ref-manual/classes/mp/mme_reserve_gen.rst", "ref-manual/classes/mp/mme_reserve_zone.rst", "ref-manual/classes/mp/mme_shunt.rst", "ref-manual/classes/mp/mme_shunt_cpf.rst", "ref-manual/classes/mp/mme_shunt_pf_ac.rst", "ref-manual/classes/mp/mme_shunt_pf_dc.rst", "ref-manual/classes/mp/mme_xfmr3p.rst", "ref-manual/classes/mp/mme_xfmr3p_opf.rst", "ref-manual/classes/mp/net_model.rst", "ref-manual/classes/mp/net_model_ac.rst", "ref-manual/classes/mp/net_model_acc.rst", "ref-manual/classes/mp/net_model_acp.rst", "ref-manual/classes/mp/net_model_dc.rst", "ref-manual/classes/mp/nm_element.rst", "ref-manual/classes/mp/nme_branch.rst", "ref-manual/classes/mp/nme_branch_ac.rst", "ref-manual/classes/mp/nme_branch_acc.rst", "ref-manual/classes/mp/nme_branch_acp.rst", "ref-manual/classes/mp/nme_branch_dc.rst", "ref-manual/classes/mp/nme_bus.rst", "ref-manual/classes/mp/nme_bus3p.rst", "ref-manual/classes/mp/nme_bus3p_acc.rst", "ref-manual/classes/mp/nme_bus3p_acp.rst", "ref-manual/classes/mp/nme_bus_acc.rst", "ref-manual/classes/mp/nme_bus_acp.rst", "ref-manual/classes/mp/nme_bus_dc.rst", "ref-manual/classes/mp/nme_buslink.rst", "ref-manual/classes/mp/nme_buslink_acc.rst", "ref-manual/classes/mp/nme_buslink_acp.rst", "ref-manual/classes/mp/nme_gen.rst", "ref-manual/classes/mp/nme_gen3p.rst", "ref-manual/classes/mp/nme_gen3p_acc.rst", "ref-manual/classes/mp/nme_gen3p_acp.rst", "ref-manual/classes/mp/nme_gen_ac.rst", "ref-manual/classes/mp/nme_gen_acc.rst", "ref-manual/classes/mp/nme_gen_acp.rst", "ref-manual/classes/mp/nme_gen_dc.rst", "ref-manual/classes/mp/nme_legacy_dcline.rst", "ref-manual/classes/mp/nme_legacy_dcline_ac.rst", "ref-manual/classes/mp/nme_legacy_dcline_acc.rst", "ref-manual/classes/mp/nme_legacy_dcline_acp.rst", "ref-manual/classes/mp/nme_legacy_dcline_dc.rst", "ref-manual/classes/mp/nme_line3p.rst", "ref-manual/classes/mp/nme_load.rst", "ref-manual/classes/mp/nme_load3p.rst", "ref-manual/classes/mp/nme_load_ac.rst", "ref-manual/classes/mp/nme_load_acc.rst", "ref-manual/classes/mp/nme_load_acp.rst", "ref-manual/classes/mp/nme_load_dc.rst", "ref-manual/classes/mp/nme_shunt.rst", "ref-manual/classes/mp/nme_shunt_ac.rst", "ref-manual/classes/mp/nme_shunt_acc.rst", "ref-manual/classes/mp/nme_shunt_acp.rst", "ref-manual/classes/mp/nme_shunt_dc.rst", "ref-manual/classes/mp/nme_xfmr3p.rst", "ref-manual/classes/mp/task.rst", "ref-manual/classes/mp/task_cpf.rst", "ref-manual/classes/mp/task_cpf_legacy.rst", "ref-manual/classes/mp/task_opf.rst", "ref-manual/classes/mp/task_opf_legacy.rst", "ref-manual/classes/mp/task_pf.rst", "ref-manual/classes/mp/task_pf_legacy.rst", "ref-manual/classes/mp/task_shared_legacy.rst", "ref-manual/classes/mp/xt_3p.rst", "ref-manual/classes/mp/xt_legacy_dcline.rst", "ref-manual/classes/mp/xt_reserves.rst", "ref-manual/classes/mp_table.rst", "ref-manual/classes/mp_table_subclass.rst", "ref-manual/functions/index.rst", "ref-manual/functions/mp_table_class.rst", "ref-manual/functions/run_cpf.rst", "ref-manual/functions/run_mp.rst", "ref-manual/functions/run_opf.rst", "ref-manual/functions/run_pf.rst", "ref-manual/index.rst", "ref-manual/introduction.rst", "users-manual/index.rst"], "titles": ["<span class=\"section-number\">10. </span>Acknowledgments", "<span class=\"section-number\">3. </span>Architecture Overview", "<span class=\"section-number\">9. </span>Customizing <span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span>", "<span class=\"section-number\">5. </span>Data Model Object", "<span class=\"section-number\">6. </span>Data Model Converter Object", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Developer\u2019s Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">8. </span>Mathematical Model Object", "<span class=\"section-number\">7. </span>Network Model Object", "<span class=\"section-number\">2. </span>Notation", "<span class=\"section-number\">11. </span>References", "<span class=\"section-number\">4. </span>Task Object", "How to Build the Documentation", "generate_autodoc_stubs", "generate_matpower_autodoc", "generate_source_symlinks", "How to Create a New Element Type", "How to Create an Extension", "A Test Gizmo Element Type", "How to Run a Three-Phase Power Flow", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Documentation", "have_feature_lu_vec", "have_feature_pardiso", "have_feature_pardiso_legacy", "have_feature_pardiso_object", "mips", "mips_example1", "mips_example2", "mipsver", "mplinsolve", "qps_mips", "t_mips", "t_mips_pardiso", "t_mplinsolve", "t_qps_mips", "test_mips", "MIPS User\u2019s Manual", "Reference", "<span class=\"raw-html\">MOST</span> User\u2019s Manual", "<span class=\"raw-html\">MP-Opt-Model</span> User\u2019s Manual", "have_feature", "have_feature_matlab", "have_feature_octave", "mptestver", "t_begin", "t_end", "t_file_match", "t_have_feature", "t_is", "t_ok", "t_run_tests", "t_skip", "t_str_match", "t_test_fcns", "test_mptest", "MP-Test User\u2019s Manual", "Reference", "<span class=\"section-number\">3. </span>Classes", "mp.NODE_TYPE", "mp.cost_table", "mp.cost_table_utils", "mp.data_model", "mp.data_model_cpf", "mp.data_model_opf", "mp.dm_converter", "mp.dm_converter_mpc2", "mp.dm_converter_mpc2_legacy", "mp.dm_element", "mp.dmc_element", "mp.dmce_branch_mpc2", "mp.dmce_bus3p_mpc2", "mp.dmce_bus_mpc2", "mp.dmce_buslink_mpc2", "mp.dmce_gen3p_mpc2", "mp.dmce_gen_mpc2", "mp.dmce_legacy_dcline_mpc2", "mp.dmce_line3p_mpc2", "mp.dmce_load3p_mpc2", "mp.dmce_load_mpc2", "mp.dmce_reserve_gen_mpc2", "mp.dmce_reserve_zone_mpc2", "mp.dmce_shunt_mpc2", "mp.dmce_xfmr3p_mpc2", "mp.dme_branch", "mp.dme_branch_opf", "mp.dme_bus", "mp.dme_bus3p", "mp.dme_bus3p_opf", "mp.dme_bus_opf", "mp.dme_buslink", "mp.dme_buslink_opf", "mp.dme_gen", "mp.dme_gen3p", "mp.dme_gen3p_opf", "mp.dme_gen_opf", "mp.dme_legacy_dcline", "mp.dme_legacy_dcline_opf", "mp.dme_line3p", "mp.dme_line3p_opf", "mp.dme_load", "mp.dme_load3p", "mp.dme_load3p_opf", "mp.dme_load_cpf", "mp.dme_load_opf", "mp.dme_reserve_gen", "mp.dme_reserve_zone", "mp.dme_shared_opf", "mp.dme_shunt", "mp.dme_shunt_cpf", "mp.dme_shunt_opf", "mp.dme_xfmr3p", "mp.dme_xfmr3p_opf", "mp.element_container", "mp.extension", "mp.form", "mp.form_ac", "mp.form_acc", "mp.form_acp", "mp.form_dc", "mp.mapped_array", "mp.math_model", "mp.math_model_cpf_acc", "mp.math_model_cpf_acci", "mp.math_model_cpf_accs", "mp.math_model_cpf_acp", "mp.math_model_cpf_acpi", "mp.math_model_cpf_acps", "mp.math_model_opf", "mp.math_model_opf_ac", "mp.math_model_opf_acc", "mp.math_model_opf_acci", "mp.math_model_opf_acci_legacy", "mp.math_model_opf_accs", "mp.math_model_opf_accs_legacy", "mp.math_model_opf_acp", "mp.math_model_opf_acpi", "mp.math_model_opf_acpi_legacy", "mp.math_model_opf_acps", "mp.math_model_opf_acps_legacy", "mp.math_model_opf_dc", "mp.math_model_opf_dc_legacy", "mp.math_model_pf", "mp.math_model_pf_ac", "mp.math_model_pf_acci", "mp.math_model_pf_accs", "mp.math_model_pf_acpi", "mp.math_model_pf_acps", "mp.math_model_pf_dc", "mp.mm_element", "mp.mm_shared_opf_legacy", "mp.mm_shared_pfcpf", "mp.mm_shared_pfcpf_ac", "mp.mm_shared_pfcpf_ac_i", "mp.mm_shared_pfcpf_acc", "mp.mm_shared_pfcpf_acci", "mp.mm_shared_pfcpf_accs", "mp.mm_shared_pfcpf_acp", "mp.mm_shared_pfcpf_acpi", "mp.mm_shared_pfcpf_acps", "mp.mm_shared_pfcpf_dc", "mp.mme_branch", "mp.mme_branch_opf", "mp.mme_branch_opf_ac", "mp.mme_branch_opf_acc", "mp.mme_branch_opf_acp", "mp.mme_branch_opf_dc", "mp.mme_branch_pf_ac", "mp.mme_branch_pf_dc", "mp.mme_bus", "mp.mme_bus3p", "mp.mme_bus3p_opf_acc", "mp.mme_bus3p_opf_acp", "mp.mme_bus_opf_ac", "mp.mme_bus_opf_acc", "mp.mme_bus_opf_acp", "mp.mme_bus_opf_dc", "mp.mme_bus_pf_ac", "mp.mme_bus_pf_dc", "mp.mme_buslink", "mp.mme_buslink_opf", "mp.mme_buslink_opf_acc", "mp.mme_buslink_opf_acp", "mp.mme_buslink_pf_ac", "mp.mme_buslink_pf_acc", "mp.mme_buslink_pf_acp", "mp.mme_gen", "mp.mme_gen3p", "mp.mme_gen3p_opf", "mp.mme_gen_opf", "mp.mme_gen_opf_ac", "mp.mme_gen_opf_dc", "mp.mme_gen_pf_ac", "mp.mme_gen_pf_dc", "mp.mme_legacy_dcline", "mp.mme_legacy_dcline_opf", "mp.mme_legacy_dcline_opf_ac", "mp.mme_legacy_dcline_opf_dc", "mp.mme_legacy_dcline_pf_ac", "mp.mme_legacy_dcline_pf_dc", "mp.mme_line3p", "mp.mme_line3p_opf", "mp.mme_load", "mp.mme_load_cpf", "mp.mme_load_pf_ac", "mp.mme_load_pf_dc", "mp.mme_reserve_gen", "mp.mme_reserve_zone", "mp.mme_shunt", "mp.mme_shunt_cpf", "mp.mme_shunt_pf_ac", "mp.mme_shunt_pf_dc", "mp.mme_xfmr3p", "mp.mme_xfmr3p_opf", "mp.net_model", "mp.net_model_ac", "mp.net_model_acc", "mp.net_model_acp", "mp.net_model_dc", "mp.nm_element", "mp.nme_branch", "mp.nme_branch_ac", "mp.nme_branch_acc", "mp.nme_branch_acp", "mp.nme_branch_dc", "mp.nme_bus", "mp.nme_bus3p", "mp.nme_bus3p_acc", "mp.nme_bus3p_acp", "mp.nme_bus_acc", "mp.nme_bus_acp", "mp.nme_bus_dc", "mp.nme_buslink", "mp.nme_buslink_acc", "mp.nme_buslink_acp", "mp.nme_gen", "mp.nme_gen3p", "mp.nme_gen3p_acc", "mp.nme_gen3p_acp", "mp.nme_gen_ac", "mp.nme_gen_acc", "mp.nme_gen_acp", "mp.nme_gen_dc", "mp.nme_legacy_dcline", "mp.nme_legacy_dcline_ac", "mp.nme_legacy_dcline_acc", "mp.nme_legacy_dcline_acp", "mp.nme_legacy_dcline_dc", "mp.nme_line3p", "mp.nme_load", "mp.nme_load3p", "mp.nme_load_ac", "mp.nme_load_acc", "mp.nme_load_acp", "mp.nme_load_dc", "mp.nme_shunt", "mp.nme_shunt_ac", "mp.nme_shunt_acc", "mp.nme_shunt_acp", "mp.nme_shunt_dc", "mp.nme_xfmr3p", "mp.task", "mp.task_cpf", "mp.task_cpf_legacy", "mp.task_opf", "mp.task_opf_legacy", "mp.task_pf", "mp.task_pf_legacy", "mp.task_shared_legacy", "mp.xt_3p", "mp.xt_legacy_dcline", "mp.xt_reserves", "mp_table", "mp_table_subclass", "<span class=\"section-number\">2. </span>Functions", "mp_table_class", "run_cpf", "run_mp", "run_opf", "run_pf", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Reference Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> User\u2019s Manual"], "terms": {"matpow": [0, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "github": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "user": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "manual": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "matlab": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "reg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "gnu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "octav": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "pserc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "power": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "system": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "engin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "research": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "center": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "cert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "consortium": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "electr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "reliabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "technologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "solut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "mip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "interior": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "solver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "mp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "readm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "opt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "model": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "most": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "schedul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "tool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "technic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "note": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "develop": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281], "The": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 16, 17, 18, 19, 20, 25, 29, 30, 36, 37, 38, 39, 40, 46, 48, 52, 55, 56, 61, 62, 63, 68, 94, 97, 113, 114, 115, 118, 119, 120, 213, 218, 260, 268, 269, 270, 272, 280, 281], "team": 0, "would": [0, 2, 3, 4, 6, 7, 8, 16, 18, 60, 67, 218], "like": [0, 4, 6, 8, 16, 46, 55, 67, 119, 218, 272], "support": [0, 6, 21, 23, 24, 55, 264, 274], "numer": [0, 4, 6, 16, 18, 19, 25, 30, 40, 48, 119, 264], "grant": [0, 55], "contract": 0, "have": [0, 2, 3, 4, 6, 8, 12, 16, 18, 55, 59, 218], "contribut": [0, 6, 16], "directli": [0, 2, 3, 4, 7, 16, 37, 46, 52, 55, 56, 68, 272], "indirectli": [0, 114, 115, 116, 117, 118, 260], "over": [0, 260], "year": 0, "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 25, 29, 36, 37, 40, 46, 48, 49, 51, 52, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 112, 113, 114, 115, 118, 119, 120, 148, 152, 213, 215, 216, 217, 218, 260, 261, 262, 264, 265, 266, 270, 271, 272, 275, 276, 277, 278, 280, 281], "includ": [0, 1, 3, 4, 6, 8, 12, 14, 16, 17, 18, 19, 29, 40, 55, 61, 62, 63, 66, 67, 83, 105, 112, 116, 120, 146, 160, 161, 162, 163, 164, 165, 166, 167, 188, 194, 214, 215, 216, 218, 219, 260, 261, 265, 275, 276, 277, 278, 280], "fund": [0, 55], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 25, 29, 30, 36, 49, 55, 59, 60, 61, 64, 65, 67, 68, 83, 84, 95, 96, 97, 110, 112, 114, 115, 116, 117, 118, 119, 120, 129, 134, 139, 141, 143, 144, 145, 146, 148, 161, 162, 163, 165, 166, 167, 169, 173, 174, 175, 176, 177, 186, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 239, 240, 241, 244, 245, 247, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 272, 274, 276, 280], "u": [0, 3, 7, 12, 16, 17, 25, 29, 30, 55, 61, 66, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 99, 100, 104, 105, 107, 110], "depart": [0, 55], "energi": [0, 55], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 25, 29, 30, 35, 40, 46, 50, 52, 54, 55, 58, 59, 61, 67, 68, 72, 83, 84, 85, 86, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 112, 115, 116, 118, 119, 178, 179, 180, 181, 182, 183, 184, 187, 213, 214, 218, 224, 231, 232, 233, 234, 248, 254, 260, 262, 264, 266, 271, 281], "nation": [0, 55], "scienc": [0, 55], "foundat": [0, 55], "2": [0, 1, 2, 3, 4, 7, 8, 9, 12, 16, 17, 18, 19, 25, 27, 29, 30, 44, 45, 48, 49, 51, 55, 58, 59, 61, 64, 65, 67, 68, 83, 85, 86, 89, 92, 95, 97, 99, 100, 110, 112, 115, 116, 118, 119, 213, 219, 242, 260, 271], "arpa": 0, "e": [0, 1, 2, 3, 4, 6, 7, 8, 9, 13, 15, 16, 17, 18, 25, 28, 29, 40, 43, 58, 61, 64, 67, 68, 84, 88, 94, 96, 104, 105, 112, 113, 114, 115, 116, 117, 118, 120, 148, 213, 218, 260, 261, 267, 272, 276], "3": [0, 1, 2, 3, 7, 8, 9, 11, 16, 17, 19, 25, 29, 30, 40, 44, 45, 48, 49, 51, 55, 58, 59, 61, 70, 72, 73, 76, 77, 82, 85, 86, 87, 89, 90, 92, 93, 97, 98, 100, 101, 110, 111, 112, 115, 116, 118, 119, 169, 170, 171, 178, 179, 180, 181, 182, 183, 184, 186, 187, 199, 200, 211, 212, 213, 214, 225, 226, 227, 231, 232, 233, 235, 236, 237, 247, 249, 259, 260, 268], "other": [0, 1, 2, 3, 5, 6, 7, 8, 16, 18, 36, 48, 55, 57, 61, 67, 120, 264, 271, 279, 280], "part": [0, 9, 16, 18, 19, 55, 115, 116, 214, 215, 218], "offic": [0, 55], "deliveri": [0, 55], "transmiss": [0, 1, 3, 8, 10, 18, 20, 55, 83, 160, 161, 162, 163, 164, 165, 166, 167, 219], "program": [0, 6, 7, 20, 25, 30, 37, 55], "under": [0, 3, 6, 29, 40, 41, 42, 55, 272], "laboratori": [0, 55], "cooper": [0, 55], "agreement": [0, 55], "No": [0, 25, 55, 268, 269], "de": [0, 55], "fc26": [0, 55], "09nt43321": [0, 55], "materi": [0, 55], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 18, 19, 20, 25, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 85, 86, 88, 97, 99, 112, 114, 115, 116, 117, 118, 119, 120, 188, 194, 213, 214, 218, 260, 271, 272, 274, 275, 276, 277, 278, 280, 281], "base": [0, 1, 3, 7, 9, 11, 13, 15, 16, 18, 19, 25, 30, 36, 38, 39, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 275, 279, 281], "upon": [0, 3, 55, 61], "work": [0, 10, 16, 55, 60, 214, 217, 272, 274], "Nos": [0, 55], "0532744": [0, 55], "1642341": [0, 55], "1931421": [0, 55], "ani": [0, 1, 2, 6, 7, 8, 11, 16, 18, 46, 55, 59, 60, 61, 67, 112, 113, 119, 148, 214, 260, 271, 276], "opinion": [0, 55], "find": [0, 1, 4, 9, 12, 16, 55, 264], "conclus": [0, 55], "recommend": [0, 12, 55], "express": [0, 8, 49, 55], "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 25, 29, 30, 36, 37, 46, 48, 50, 52, 55, 56, 58, 59, 61, 62, 64, 67, 68, 83, 85, 86, 89, 91, 92, 94, 97, 99, 100, 104, 107, 110, 113, 114, 115, 118, 119, 120, 148, 213, 215, 216, 217, 218, 260, 262, 264, 266, 268, 269, 271, 272, 273, 275, 276, 277, 278], "those": [0, 1, 2, 3, 6, 7, 12, 16, 55, 62, 67, 272], "author": [0, 55], "do": [0, 1, 16, 55, 58, 60, 113, 214, 217, 260, 264], "necessarili": [0, 55], "reflect": [0, 55], "view": [0, 55], "synthet": 0, "data": [0, 1, 5, 8, 11, 17, 20, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 126, 148, 161, 162, 165, 166, 167, 169, 173, 174, 175, 176, 177, 186, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 217, 218, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279], "grid": 0, "r": [0, 9, 10, 19, 25, 29, 68, 83, 97, 104, 110, 115, 214], "d": [0, 4, 8, 10, 16, 18, 25, 48, 61, 64, 65, 68, 71, 119, 218, 260, 261, 262, 263, 264, 265, 266, 267, 275, 276, 277, 278], "project": [0, 6, 10, 20, 22, 55], "A": [1, 2, 3, 4, 7, 8, 9, 10, 11, 16, 19, 25, 29, 30, 59, 61, 64, 66, 67, 68, 112, 120, 148, 180, 183, 188, 194, 213, 218], "new": [1, 2, 3, 8, 11, 12, 17, 18, 20, 36, 38, 39, 64, 213, 260, 268, 269, 280], "orient": [1, 2, 6, 24, 59, 271, 272], "core": [1, 2, 19, 279, 280, 281], "design": [1, 6, 8], "around": [1, 2, 272, 275, 277, 278], "concept": 1, "gener": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 55, 61, 67, 73, 74, 79, 91, 92, 93, 94, 104, 105, 185, 186, 187, 188, 189, 190, 191, 192, 205, 214, 234, 235, 236, 237, 238, 239, 240, 241, 263, 265, 268, 270, 272, 275, 276, 277, 278, 280], "element": [1, 5, 9, 10, 11, 17, 19, 20, 25, 48, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 129, 134, 139, 142, 147, 148, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 268, 269, 270, 275, 276, 277, 278, 279], "wa": [1, 9, 48, 49, 51, 55], "introduc": [1, 2, 9, 18], "8": [1, 7, 8, 16, 17, 18, 19, 25, 30, 272], "0": [1, 3, 7, 13, 15, 16, 17, 18, 19, 25, 27, 29, 30, 40, 44, 45, 46, 48, 49, 50, 51, 52, 55, 61, 67, 107, 115, 118, 213, 214, 218, 260, 262, 264, 266, 272, 281], "along": [1, 6, 16, 36, 115, 213], "emploi": 1, "chapter": [1, 25], "give": 1, "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 16, 18, 19, 20, 28, 40, 43, 58, 59, 61, 62, 63, 64, 67, 68, 112, 114, 115, 116, 117, 119, 120, 127, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 173, 174, 175, 179, 187, 188, 194, 200, 212, 213, 218, 260, 271, 272, 277, 281], "primari": [1, 4, 36, 55], "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 36, 40, 41, 42, 44, 45, 47, 53, 55, 58, 59, 61, 67, 68, 84, 88, 94, 95, 96, 104, 105, 106, 112, 113, 115, 116, 118, 120, 124, 128, 213, 214, 221, 250, 260, 262, 263, 264, 266, 267, 271, 272, 275, 276, 277, 278, 279, 280, 281], "solv": [1, 6, 11, 16, 17, 19, 20, 23, 25, 27, 29, 30, 37, 120, 148, 214, 217, 218, 260, 261, 275, 276, 277, 278], "steadi": [1, 6, 20], "state": [1, 3, 6, 7, 8, 9, 16, 18, 20, 40, 61, 67, 114, 115, 116, 117, 118, 120, 129, 134, 139, 153, 156, 159, 213, 214, 215, 216, 217, 218, 231, 234, 235, 238, 241, 242, 243, 246, 260], "simul": [1, 3, 20, 276, 279, 281], "problem": [1, 2, 3, 6, 7, 8, 11, 16, 17, 20, 25, 27, 30, 61, 120, 131, 133, 136, 138, 140, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 203, 204, 208, 209, 210, 212, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 275, 277, 278], "flow": [1, 3, 7, 8, 11, 17, 18, 20, 25, 67, 83, 84, 95, 96, 115, 120, 127, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 167, 176, 177, 182, 183, 184, 191, 192, 197, 198, 203, 204, 209, 210, 260, 261, 262, 263, 264, 265, 266, 268, 269, 273, 275, 276, 277, 278], "continu": [1, 7, 16, 17, 19, 36, 38, 39, 62, 102, 108, 150, 151, 152, 153, 154, 155, 156, 157, 158, 213, 260, 261, 262, 268, 269, 273, 275, 281], "At": [1, 55], "top": [1, 2, 20, 279, 281], "level": [1, 2, 25, 50, 272, 279, 281], "task": [1, 3, 5, 6, 7, 17, 61, 62, 63, 64, 113, 120, 148, 213, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 279], "construct": [1, 2, 8, 11, 16, 18, 19, 20, 59, 61, 63, 97, 113, 213, 218, 231, 271, 272], "variou": [1, 2, 6, 16, 18], "layer": [1, 2, 11, 16, 17, 18, 260], "desir": [1, 3, 4, 7, 8, 119, 276], "type": [1, 2, 3, 4, 7, 12, 17, 19, 20, 29, 36, 40, 55, 58, 59, 61, 64, 67, 68, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 112, 113, 114, 115, 118, 120, 148, 213, 214, 215, 216, 217, 218, 224, 260, 268, 269, 270, 271, 272, 276], "formul": [1, 2, 5, 7, 17, 19, 59, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 152, 213, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 250, 251, 252, 253, 255, 256, 257, 258, 268, 269], "propog": 1, "back": [1, 3, 4, 16, 29, 61, 67, 114, 120, 213, 260, 262, 264, 266], "through": [1, 2, 3, 4, 7, 8, 18, 19, 60, 61, 272], "explicit": [1, 2, 12, 18, 29, 60], "three": [1, 2, 3, 8, 11, 16, 17, 18, 20, 40, 67, 99, 113, 268, 279], "structur": [1, 3, 4, 8, 16, 25, 30, 67, 119, 213], "decoupl": [1, 146], "one": [1, 2, 3, 4, 6, 8, 11, 16, 18, 40, 67, 112, 115, 116, 119, 213, 214, 218, 272, 276], "anoth": [1, 7, 8, 16, 18, 67, 272], "visibl": [1, 3, 16, 18, 67], "paramet": [1, 4, 7, 9, 16, 19, 25, 29, 59, 60, 61, 62, 67, 97, 102, 108, 114, 115, 118, 149, 188, 190, 194, 213, 214, 217, 218, 220, 223, 231, 235, 238, 241, 243, 246, 247, 249, 250, 253, 255, 258, 259, 261, 270], "quantiti": [1, 16, 59, 104, 218, 270], "network": [1, 2, 3, 5, 11, 17, 19, 20, 67, 113, 114, 115, 116, 117, 118, 120, 121, 124, 129, 134, 139, 148, 153, 156, 159, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 275, 276, 277, 278, 279], "connect": [1, 8, 18, 19, 61, 67, 213, 218], "mathemat": [1, 5, 6, 8, 9, 20, 67, 113, 120, 127, 148, 205, 206, 260, 261, 263, 265, 268, 269, 270, 275, 276, 277, 278, 279], "being": [1, 3, 8, 16, 67, 112, 260, 275, 281], "resepect": 1, "math": [1, 2, 11, 16, 17, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 260, 261, 263, 264, 265], "shown": [1, 3, 4, 8, 11, 16, 18, 25, 29], "figur": [1, 2, 3, 4, 7, 8, 11, 16, 18], "further": [1, 7, 8, 148, 218], "particular": [1, 2, 3, 4, 8, 16, 17, 36, 55, 67, 68, 114, 148, 213, 218, 260], "format": [1, 2, 3, 4, 5, 16, 18, 20, 61, 64, 65, 68, 113, 268, 269, 270, 279], "legaci": [1, 2, 3, 16, 17, 20, 23, 36, 61, 66, 75, 95, 96, 131, 133, 136, 138, 140, 149, 189, 193, 194, 195, 196, 197, 198, 242, 243, 244, 245, 246, 262, 264, 266, 267, 269, 279, 280], "case": [1, 3, 4, 7, 8, 11, 16, 17, 18, 20, 46, 52, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 120, 213, 218, 260, 262, 264, 265, 266, 267, 275, 276, 277, 278, 281], "struct": [1, 2, 3, 4, 7, 11, 13, 15, 16, 19, 25, 28, 29, 30, 40, 43, 59, 60, 61, 64, 65, 67, 68, 113, 115, 116, 117, 118, 119, 120, 141, 148, 188, 194, 213, 218, 260, 261, 262, 264, 266, 267, 275, 276, 277, 278], "mpc": [1, 2, 3, 4, 16, 19, 61, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 140, 260, 262, 264, 266, 267, 275, 276, 277, 278], "file": [1, 3, 6, 11, 12, 13, 14, 15, 20, 23, 36, 46, 55, 61, 64, 65, 67, 260, 275, 276, 277, 278, 280], "convers": [1, 3, 4, 16, 61, 67], "servic": [1, 8, 16, 18, 95, 162, 165, 166, 167, 169, 173, 174, 175, 176, 177, 186, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211], "convert": [1, 3, 5, 20, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 112, 113, 120, 129, 134, 139, 153, 156, 159, 213, 260, 261, 264, 267, 268, 269, 270, 279], "between": [1, 2, 3, 4, 7, 8, 16, 18, 46, 48, 49, 51, 52, 61, 64, 152, 213, 260], "specif": [1, 3, 7, 8, 11, 13, 15, 16, 18, 37, 40, 55, 56, 61, 62, 63, 64, 66, 67, 68, 113, 114, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 213, 215, 216, 217, 218, 260, 262, 264, 266, 267, 268, 269, 270, 275, 276, 277, 278, 281], "extern": [1, 16, 213], "each": [1, 2, 3, 4, 6, 7, 8, 11, 16, 17, 18, 40, 46, 48, 50, 52, 61, 63, 64, 67, 68, 99, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 148, 180, 181, 183, 184, 213, 214, 217, 218, 260, 268, 269, 280], "plu": [1, 50], "organ": [1, 3, 6, 61], "collect": [1, 6, 16, 18, 115, 118], "enclos": [1, 112], "contain": [1, 2, 3, 4, 6, 7, 8, 11, 16, 17, 18, 19, 25, 29, 30, 46, 60, 61, 64, 67, 68, 112, 113, 120, 148, 213, 218, 260, 268, 269, 270, 272, 275, 276, 277, 278, 279], "correspond": [1, 2, 3, 4, 6, 7, 8, 11, 16, 18, 25, 30, 40, 48, 59, 61, 64, 67, 68, 104, 114, 115, 116, 117, 118, 119, 120, 148, 162, 165, 166, 167, 169, 173, 174, 175, 176, 177, 186, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 218, 260, 262, 264, 266, 267, 268, 269, 280], "devic": [1, 16], "g": [1, 2, 3, 7, 8, 13, 15, 16, 17, 18, 25, 28, 29, 40, 43, 58, 61, 64, 67, 68, 84, 88, 94, 96, 104, 105, 107, 113, 114, 115, 116, 120, 148, 213, 214, 218, 260, 261, 264, 267, 272, 276], "bu": [1, 3, 4, 16, 17, 18, 19, 61, 67, 68, 70, 71, 77, 78, 81, 83, 85, 86, 87, 88, 89, 91, 92, 95, 96, 97, 99, 100, 107, 110, 148, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 218, 224, 225, 226, 227, 228, 229, 230, 263, 268, 275, 276, 277, 278, 281], "line": [1, 2, 3, 8, 17, 18, 19, 20, 46, 50, 61, 63, 64, 67, 75, 76, 83, 95, 96, 97, 98, 119, 120, 160, 161, 162, 163, 164, 165, 166, 167, 193, 194, 195, 196, 197, 198, 199, 200, 213, 218, 219, 242, 243, 244, 245, 246, 247, 268, 269, 271, 279], "some": [1, 6, 7, 8, 16, 17, 18, 19, 20, 25, 48, 59, 60, 67, 116, 117, 262, 264, 266, 281], "attribut": 1, "interfac": [1, 2, 6, 7, 23, 24, 30, 281], "reserv": [1, 2, 17, 79, 80, 104, 105, 113, 205, 206, 270, 279], "requir": [1, 3, 6, 8, 12, 16, 17, 19, 25, 55, 67, 105, 161, 268, 269, 270], "provid": [1, 2, 3, 4, 6, 7, 8, 16, 18, 25, 29, 30, 60, 61, 62, 64, 67, 68, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 126, 127, 128, 129, 131, 133, 134, 136, 138, 139, 140, 142, 147, 148, 214, 218, 260, 261, 263, 265, 267, 275, 276, 277, 278, 280, 281], "extraordinari": 1, "flexibl": [1, 2, 8, 275, 276, 277, 278, 280], "allow": [1, 2, 7, 8, 11, 16, 40, 60, 67, 120], "environ": [1, 5, 12], "ad": [1, 2, 8, 12, 16, 17, 18, 61, 64, 115, 116, 117, 119, 120, 126, 127, 151, 152, 159, 162, 163, 164, 165, 173, 180, 181, 182, 183, 184, 189, 190, 205, 206, 213], "modifi": [1, 3, 4, 6, 7, 8, 11, 16, 17, 18, 19, 55, 64, 67, 68, 112, 113, 119, 213, 218, 268, 269, 270], "exist": [1, 2, 3, 8, 17, 40, 46, 61, 67, 68, 112, 119], "independ": [1, 7], "rest": [1, 8], "In": [1, 2, 3, 4, 6, 7, 8, 11, 12, 16, 17, 18, 67, 120, 218, 260, 272], "given": [1, 3, 4, 7, 8, 9, 16, 17, 25, 46, 50, 61, 67, 68, 99, 213, 218], "run": [1, 2, 3, 5, 6, 12, 16, 17, 18, 20, 35, 40, 41, 42, 44, 45, 50, 54, 55, 113, 260, 265, 273, 275, 276, 277, 278, 281], "set": [1, 2, 3, 4, 7, 8, 11, 13, 15, 16, 18, 25, 29, 44, 50, 51, 55, 59, 61, 67, 112, 113, 114, 141, 148, 149, 213, 214, 215, 216, 217, 218, 263, 264, 265, 268, 269, 275, 277, 278], "creat": [1, 2, 3, 4, 7, 8, 12, 14, 18, 20, 55, 58, 59, 60, 61, 62, 63, 64, 67, 68, 119, 120, 127, 213, 218, 260, 264, 276], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 18, 19, 20, 25, 29, 30, 32, 36, 37, 38, 39, 44, 46, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 99, 112, 113, 114, 115, 116, 117, 118, 120, 148, 152, 153, 154, 155, 156, 157, 158, 213, 218, 260, 261, 263, 264, 265, 268, 269, 271, 272, 274, 275, 277, 278, 281], "show": [1, 2, 3, 4, 7, 8, 16, 17, 18], "mai": [1, 3, 8, 9, 16, 25, 55, 61], "sourc": [1, 3, 4, 6, 12, 13, 14, 15, 17, 18, 20, 36, 55, 61, 64, 65, 67, 68, 260, 262, 264, 266, 267, 275, 276, 277, 278, 280], "individu": [1, 3, 7, 8, 11, 16, 18, 19, 23, 35, 44, 45, 50, 53, 54, 61, 67, 112, 149], "4": [1, 2, 8, 9, 11, 16, 17, 19, 25, 29, 30, 40, 44, 45, 48, 49, 51, 55, 58, 85, 86, 113, 213, 231, 266, 272], "label": [1, 3, 8, 16, 18, 61, 67, 83, 85, 86, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110, 114, 116, 117, 118, 213], "white": 1, "circl": 1, "convent": [1, 3, 4, 5, 7, 8, 61, 64, 67, 68, 113, 120, 148, 213, 218], "throughout": [1, 3, 9, 61], "codebas": 1, "variabl": [1, 3, 6, 8, 9, 18, 25, 30, 59, 61, 64, 66, 67, 68, 114, 115, 116, 117, 118, 119, 120, 127, 148, 182, 188, 194, 205, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 235, 238, 241, 243, 246, 270, 271, 272], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 15, 17, 18, 19, 25, 28, 30, 36, 40, 43, 46, 50, 55, 59, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 148, 149, 160, 168, 169, 178, 185, 186, 193, 199, 201, 205, 206, 207, 211, 213, 218, 219, 224, 225, 231, 234, 235, 242, 247, 248, 249, 254, 259, 260, 262, 263, 264, 265, 266, 267, 271, 275, 276, 277, 278, 281], "singl": [1, 2, 3, 8, 16, 17, 18, 19, 20, 25, 30, 50, 59, 61, 67, 74, 89, 112, 113, 115, 118, 119, 213, 218, 268], "manag": [1, 11], "overal": [1, 6], "process": [1, 2, 4, 6, 11, 20, 64, 66, 67, 260, 262, 264, 266, 267], "pf": [1, 2, 3, 7, 11, 16, 17, 19, 113, 120, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 182, 183, 184, 260, 261, 265, 266, 267, 268, 269, 273, 278], "cpf": [1, 2, 3, 7, 11, 16, 17, 19, 62, 102, 108, 113, 120, 121, 122, 123, 124, 125, 126, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 182, 183, 184, 202, 208, 260, 261, 262, 267, 268, 269, 273, 275, 276], "opf": [1, 2, 3, 6, 7, 11, 17, 18, 19, 61, 63, 84, 87, 88, 90, 93, 94, 96, 98, 101, 103, 106, 109, 111, 113, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 179, 180, 181, 187, 188, 189, 190, 194, 195, 196, 200, 212, 260, 263, 264, 267, 268, 269, 270, 273, 276, 277, 279, 281], "ha": [1, 2, 3, 4, 6, 7, 8, 11, 16, 18, 59, 67, 99, 112, 148, 213, 265, 271, 272], "method": [1, 4, 5, 6, 7, 8, 16, 17, 18, 19, 25, 29, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 238, 241, 242, 243, 246, 247, 248, 249, 250, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280], "up": [1, 8, 12, 16, 17, 18, 44, 55, 141, 272, 280], "correspnd": 1, "For": [1, 2, 3, 4, 6, 7, 8, 16, 17, 18, 40, 59, 67, 106, 114, 115, 116, 117, 118, 213, 218, 268, 269, 270, 275, 276, 277, 278, 281], "exampl": [1, 2, 3, 4, 6, 7, 11, 13, 15, 16, 17, 18, 20, 25, 26, 27, 30, 36, 40, 44, 45, 46, 48, 49, 50, 51, 52, 64, 67, 113, 119, 213, 218, 275, 276, 277, 278, 281], "follow": [1, 3, 7, 8, 9, 11, 12, 16, 17, 18, 19, 25, 27, 29, 30, 36, 37, 40, 46, 48, 49, 51, 52, 55, 56, 59, 61, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 112, 213, 214, 215, 216, 217, 275, 276, 277, 278, 281], "9": [1, 2, 16, 17, 19, 30, 55, 112, 213], "mpopt": [1, 2, 7, 16, 17, 19, 61, 63, 66, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 110, 113, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 278, 281], "mpoption": [1, 2, 17, 19, 281], "verbos": [1, 17, 19, 25, 29, 30, 35, 50, 54, 55], "option": [1, 3, 4, 5, 6, 7, 8, 11, 12, 16, 17, 18, 25, 29, 30, 37, 40, 44, 46, 48, 49, 50, 52, 55, 56, 59, 61, 66, 67, 68, 113, 114, 115, 116, 118, 119, 120, 128, 139, 141, 148, 213, 214, 218, 260, 261, 262, 264, 265, 266, 267, 275, 276, 277, 278, 281], "task_opf": [1, 11, 57, 264, 276, 277, 279], "case9": [1, 3, 4, 19, 275, 276, 277, 278, 281], "step": [1, 3, 4, 7, 8, 11, 12, 16, 25, 55, 272], "list": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 61, 63, 67, 68, 112, 213, 272], "roughli": [1, 3, 61], "equival": [1, 16, 18, 52, 83, 119], "perform": [1, 7, 25, 29, 30, 61], "when": [1, 2, 3, 4, 6, 8, 9, 12, 16, 18, 28, 40, 43, 44, 55, 57, 61, 64, 67, 119, 120, 213, 218, 260, 261, 271, 272], "It": [1, 3, 4, 6, 8, 16, 18, 19, 20, 46, 55, 61, 64, 272, 276], "defin": [1, 3, 4, 6, 7, 8, 11, 16, 18, 19, 25, 30, 40, 48, 58, 59, 61, 62, 66, 67, 68, 94, 97, 105, 115, 118, 120, 149, 213, 214, 218], "well": [1, 2, 3, 8, 16, 18, 20, 119, 213, 214, 260, 264, 270], "explicitli": [1, 8, 12, 16, 214], "actual": [1, 6, 11, 25, 46, 48, 49, 52, 68, 218], "code": [1, 7, 12, 16, 17, 18, 19, 25, 40, 41, 42, 55, 59, 143, 144, 145, 146, 152, 264, 274, 281], "thei": [1, 2, 4, 7, 8, 11, 12, 16, 18, 37, 48, 55, 56, 113, 120], "return": [1, 2, 3, 4, 8, 11, 16, 18, 25, 28, 35, 40, 43, 54, 58, 61, 64, 65, 67, 68, 113, 114, 115, 116, 117, 118, 119, 120, 148, 149, 172, 188, 213, 214, 218, 260, 262, 264, 266, 271, 272, 274, 275, 276, 277, 278], "call": [1, 2, 3, 4, 6, 7, 8, 11, 16, 18, 25, 28, 29, 30, 37, 40, 43, 44, 45, 46, 48, 49, 51, 52, 56, 57, 59, 60, 61, 64, 66, 67, 68, 115, 116, 117, 119, 120, 148, 213, 214, 217, 218, 225, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278], "them": [1, 2, 3, 8, 16, 18, 19, 20, 55, 61, 67, 113, 214, 217], "overridden": [1, 2, 3, 11, 16, 17, 18, 59, 113, 268, 269], "subclass": [1, 2, 3, 4, 7, 8, 11, 18, 61, 62, 63, 64, 67, 68, 112, 114, 115, 120, 121, 124, 129, 134, 139, 142, 147, 148, 213, 214, 218, 260, 264, 272], "main": [1, 2, 3, 4, 6, 18, 25, 30, 36, 67, 68, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 275, 276, 277, 278], "specifi": [1, 2, 8, 11, 16, 18, 25, 29, 30, 40, 46, 52, 59, 60, 65, 67, 68, 107, 114, 115, 118, 119, 213, 218, 260, 276], "help": [1, 6, 29, 36, 55, 280], "both": [1, 3, 6, 7, 8, 11, 16, 17, 18, 46, 52, 114, 115, 116, 117, 118, 119, 120, 262, 268, 269, 274], "after": [1, 2, 12, 16, 64, 67, 260, 261, 263, 264, 265], "itself": [1, 8, 67, 120, 213], "also": [1, 3, 4, 6, 7, 8, 9, 11, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 35, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 94, 112, 113, 114, 115, 116, 117, 118, 119, 120, 146, 148, 213, 214, 215, 216, 217, 218, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278], "updat": [1, 3, 4, 6, 8, 11, 18, 20, 25, 45, 61, 64, 67, 68, 102, 108, 113, 120, 126, 148, 151, 159, 162, 165, 166, 167, 169, 173, 174, 175, 176, 177, 186, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 260, 261, 262, 264, 266, 267], "basic": [1, 55, 271], "dmc_class": [1, 17, 113, 260, 264, 268, 269, 270], "dm_converter_mpc2": [1, 3, 4, 57, 61, 64, 66, 68, 279], "v2": [1, 16, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "dm_class": [1, 17, 113, 260, 268, 269, 270], "data_model_opf": [1, 3, 57, 106, 279], "nm_class": [1, 17, 113, 260, 268, 269], "net_model_acp": [1, 8, 57, 279], "ac": [1, 6, 7, 9, 17, 19, 59, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 166, 170, 171, 172, 173, 174, 176, 180, 181, 182, 183, 184, 189, 191, 195, 197, 202, 203, 208, 209, 214, 215, 216, 218, 220, 221, 222, 226, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 243, 244, 245, 250, 251, 252, 255, 256, 257, 263, 265, 268, 269, 281], "polar": [1, 2, 7, 8, 17, 19, 114, 115, 117, 120, 124, 125, 126, 134, 135, 136, 137, 138, 145, 146, 152, 156, 157, 158, 164, 171, 174, 181, 184, 216, 218, 222, 227, 229, 233, 237, 240, 245, 252, 257, 268, 269], "mm_class": [1, 17, 113, 260, 268, 269, 270], "math_model_opf_acp": [1, 7, 16, 57, 135, 138, 279], "dmc": [1, 3, 4, 61, 64, 67, 260, 261, 263, 264], "build": [1, 2, 5, 6, 18, 19, 20, 61, 64, 67, 120, 131, 133, 136, 138, 140, 148, 213, 214, 217, 218, 220, 223, 231, 235, 238, 241, 243, 246, 247, 249, 250, 253, 255, 258, 259, 260, 261], "dm": [1, 3, 4, 7, 8, 16, 18, 61, 62, 63, 64, 65, 66, 67, 68, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 110, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 238, 241, 243, 246, 247, 249, 250, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 275, 276, 277, 278], "nm": [1, 7, 8, 16, 18, 115, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 238, 241, 243, 246, 247, 249, 250, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266], "mm": [1, 7, 8, 9, 16, 18, 115, 120, 121, 124, 127, 148, 149, 153, 156, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 218, 260, 261, 262, 264, 265, 266], "solve_opt": [1, 7, 120, 128, 139, 141, 147], "get": [1, 2, 4, 13, 15, 16, 18, 36, 55, 59, 60, 61, 67, 68, 114, 115, 116, 117, 118, 148, 213, 214, 215, 216, 218, 260, 264, 281], "network_model_x_soln": [1, 7, 120, 260, 261, 265], "soln": [1, 16, 214, 217, 218, 260], "port_inj_soln": [1, 214, 217], "comput": [1, 6, 8, 25, 59, 115, 116, 117, 118, 214, 217], "data_model_upd": [1, 7, 18, 67, 120, 148], "four": [1, 2, 16, 19], "consist": [1, 2, 3, 8, 9, 11, 16, 18, 218, 262, 264, 266], "hold": [1, 16, 18, 112], "That": [1, 7, 8, 12, 16, 18, 19, 60, 65, 67, 68, 114, 115, 116, 117, 118, 120, 218, 272], "etc": [1, 3, 12, 16, 17, 18, 19, 23, 61, 67, 114, 120, 260, 271], "associ": [1, 6, 7, 8, 17], "valid": [1, 3, 40, 58, 67, 68, 119, 148, 213, 218], "field": [1, 2, 4, 13, 15, 19, 25, 28, 29, 30, 40, 43, 59, 66, 67, 68, 120, 148, 188, 194, 213, 218, 261, 264], "identifi": [1, 3, 16, 29, 40, 61, 64, 65, 67, 213, 260], "can": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 18, 19, 25, 30, 36, 40, 46, 48, 55, 61, 67, 68, 112, 113, 115, 116, 118, 119, 120, 213, 218, 260, 271, 272, 275, 276, 277, 278, 281], "befor": [1, 2, 3, 4, 7, 8, 16, 18, 46, 52, 59, 61, 260, 262, 264, 266], "its": [1, 2, 3, 4, 6, 7, 8, 11, 16, 18, 20, 25, 61, 63, 64, 67, 68, 114, 148, 213, 215, 216, 217, 218, 275, 276, 277, 278], "simpli": [1, 2, 3, 4, 6, 8, 9, 11, 16, 17, 19, 68, 117, 120], "loop": [1, 3, 4, 7, 8, 260], "possibli": [1, 4, 16, 18, 30, 64, 213, 218], "access": [1, 6, 8, 17, 19, 59, 60, 68, 271, 272], "respect": [1, 3, 4, 7, 8, 9, 11, 16, 18, 19, 25, 29, 30, 67, 115, 213], "nme": [1, 8, 16, 114, 115, 116, 117, 118, 148, 161, 163, 180, 182, 183, 218, 225], "pull": [1, 16], "dme": [1, 3, 4, 16, 18, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 148, 189, 218], "describ": [1, 2, 3, 6, 7, 16, 17, 18, 19, 25, 30, 218], "more": [1, 3, 6, 7, 8, 9, 16, 18, 59, 61, 64, 67, 68, 112, 113, 114, 115, 116, 117, 118, 120, 148, 213, 218, 260, 264, 268, 269, 270, 271], "detail": [1, 3, 4, 8, 9, 16, 18, 25, 29, 30, 35, 50, 54, 55, 60, 61, 64, 67, 68, 113, 114, 115, 116, 117, 118, 120, 213, 218, 268, 269, 270], "summari": [1, 3, 16, 17, 19, 44, 45, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 238, 241, 242, 243, 246, 247, 248, 249, 250, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "inherit": [1, 2, 3, 4, 7, 8, 16, 17, 18, 60, 67, 68, 114, 115, 116, 117, 118, 120, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 213, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 239, 240, 241, 244, 245, 247, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 268, 269, 272], "repres": [1, 6, 8, 16, 19, 115, 213, 218], "abstract": [1, 7, 16, 18, 64, 67, 68, 113, 114, 115, 120, 121, 124, 127, 128, 129, 134, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 172, 178, 179, 182, 185, 188, 193, 194, 201, 207, 213, 214, 218, 219, 220, 224, 225, 231, 234, 235, 238, 242, 243, 248, 250, 254, 255, 260], "displai": [1, 3, 16, 18, 25, 46, 48, 49, 51, 52, 61, 64, 67, 119, 120, 213, 218, 260, 271, 272], "border": 1, "concret": [1, 3, 7, 8, 16, 18, 61, 64, 68, 114, 115, 116, 117, 118, 120, 213, 215, 216, 217], "doubl": [1, 25, 29, 30, 40, 48, 59, 61, 68, 83, 84, 85, 86, 88, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 115, 116, 117, 118, 120, 213, 214, 215, 216, 217, 218, 260, 265], "signific": 1, "portion": [1, 4, 19, 67, 115], "implement": [1, 2, 3, 4, 6, 7, 8, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 37, 41, 42, 55, 56, 59, 60, 61, 64, 65, 67, 68, 83, 85, 86, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110, 112, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 139, 141, 143, 144, 145, 146, 147, 148, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 218, 219, 220, 221, 223, 224, 225, 231, 234, 235, 242, 247, 248, 249, 254, 259, 260, 261, 262, 263, 264, 265, 266, 271, 274], "greatli": 1, "reduc": [1, 7, 25], "effort": 1, "involv": [1, 2, 7, 8, 16, 18], "distinguish": 1, "pss": [1, 4, 64], "raw": [1, 4, 64, 264], "dc": [1, 7, 9, 17, 20, 59, 60, 66, 75, 94, 95, 96, 114, 118, 120, 139, 140, 147, 149, 159, 165, 167, 175, 177, 190, 192, 193, 194, 195, 196, 197, 198, 204, 210, 217, 223, 230, 241, 242, 243, 244, 245, 246, 253, 258, 263, 265, 269, 279], "cartesian": [1, 2, 7, 8, 17, 114, 115, 116, 121, 122, 123, 129, 130, 131, 132, 133, 143, 144, 152, 153, 154, 155, 163, 170, 173, 180, 183, 215, 221, 226, 228, 229, 232, 236, 239, 244, 251, 256, 268, 269], "goe": 1, "which": [1, 2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 25, 29, 40, 46, 52, 58, 62, 67, 112, 114, 115, 118, 120, 148, 213, 214, 218, 274, 281], "element_contain": [1, 2, 3, 4, 7, 8, 57, 61, 64, 120, 213, 279], "mixin": [1, 106, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 279], "share": [1, 3, 5, 6, 8, 16, 18, 106, 120, 143, 144, 145, 146, 152, 267], "mention": [1, 11, 272], "abov": [1, 2, 11, 12, 16, 18, 19, 25, 30, 40, 56, 59, 272], "address": [1, 272], "index": [1, 3, 4, 8, 9, 12, 16, 18, 29, 59, 61, 67, 68, 83, 89, 91, 92, 95, 97, 99, 100, 104, 107, 110, 116, 119, 120, 213, 214, 215, 216, 218, 271, 272], "suppli": [1, 25, 30], "properti": [1, 2, 4, 6, 7, 8, 16, 18, 58, 61, 64, 67, 74, 77, 78, 81, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 110, 112, 114, 115, 118, 120, 188, 194, 213, 214, 215, 216, 217, 218, 260, 261, 262, 263, 264, 265, 266, 272, 280], "element_class": [1, 2, 3, 4, 7, 8, 16, 18, 61, 64, 112], "sometim": [1, 3, 7, 120], "certain": [1, 4, 8, 11, 29, 261], "across": [1, 7, 8, 20, 120, 180, 181, 183, 184, 267], "wai": [1, 2, 6, 16, 113, 271], "match": [1, 2, 4, 46, 48, 50, 52, 55, 67, 119, 180, 181, 183, 184], "path": [1, 12, 13, 14, 15, 46, 55, 114], "current": [1, 2, 7, 9, 13, 15, 18, 19, 20, 25, 28, 29, 43, 83, 99, 115, 116, 117, 119, 122, 125, 128, 130, 131, 135, 136, 143, 145, 152, 154, 157, 179, 187, 200, 212, 213, 214, 260, 262, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 280, 281], "approach": [1, 2, 16], "util": [1, 20], "first": [1, 2, 3, 4, 7, 8, 16, 18, 25, 30, 40, 59, 113, 119, 213, 218, 271, 275, 277, 278], "we": [1, 3, 6, 8, 12, 16, 17, 18, 55], "wrap": 1, "insid": [1, 112, 272], "inher": 1, "limit": [1, 3, 7, 11, 16, 17, 18, 25, 30, 61, 83, 84, 88, 94, 96, 115, 116, 124, 161, 172, 173, 221, 261, 263, 265, 270], "order": [1, 2, 7, 11, 16, 18, 25, 29, 30, 59, 112, 114, 218, 264], "backward": [1, 19], "compat": [1, 19, 264, 271, 274, 281], "mechan": [1, 6, 17, 149], "intern": [1, 3, 6, 16, 18, 213, 218, 281], "all": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 20, 25, 28, 30, 35, 40, 43, 48, 50, 54, 55, 58, 59, 61, 67, 68, 74, 83, 89, 91, 92, 95, 97, 99, 100, 106, 107, 110, 114, 115, 116, 117, 118, 120, 148, 150, 151, 152, 153, 156, 213, 214, 215, 216, 217, 218, 260, 270], "even": [1, 2, 19], "importantli": 1, "extens": [1, 5, 11, 13, 15, 16, 19, 20, 40, 64, 131, 133, 136, 138, 140, 260, 268, 269, 270, 275, 276, 277, 278, 279, 281], "suit": [1, 55], "second": [1, 3, 4, 7, 8, 16, 17, 18, 19, 40, 55, 119, 218, 260, 275], "abl": [1, 62], "make": [1, 7, 8, 12, 17, 18, 20, 40, 59, 61, 64, 97, 213, 218, 267, 280], "full": [1, 7, 8, 29, 50, 114, 115, 116, 118, 149, 213, 214, 218, 281], "scope": 1, "end": [1, 2, 8, 9, 16, 17, 18, 25, 40, 46, 50, 55, 67, 83, 84, 95, 96, 97, 110, 115, 118, 119, 120, 260, 271, 272], "take": [1, 4, 7, 8, 9, 16, 17, 18, 40, 120, 214, 217], "advantag": [1, 16, 18], "capabl": [1, 18, 37, 56, 91, 189], "add": [1, 2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 29, 55, 61, 63, 64, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 120, 148, 149, 188, 194, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 235, 238, 241, 243, 246, 261, 262, 263, 264, 266, 268, 269, 270], "multiphas": 1, "unbalanc": [1, 2, 3, 19, 61, 113, 268], "hybrid": [1, 19], "own": [1, 2, 3, 4, 6, 7, 8, 55, 56, 61, 67, 68, 148, 218], "version": [1, 4, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 59, 62, 64, 65, 114, 260, 281], "run_pf": [1, 2, 16, 17, 19, 273, 276, 279], "run_cpf": [1, 2, 16, 17, 19, 273, 276, 279], "run_opf": [1, 2, 16, 17, 19, 273, 276, 279, 281], "underscor": [1, 281], "One": [1, 8], "differ": [1, 2, 4, 7, 16, 18, 19, 25, 30, 46, 48, 67, 83, 84, 120, 161, 163, 164, 165, 221, 267, 271], "remov": [1, 3, 12, 16, 18, 61, 112], "offlin": [1, 3, 7, 16, 18, 61, 67, 148], "equip": 1, "renumb": 1, "buse": [1, 2, 3, 4, 8, 16, 17, 18, 19, 61, 67, 85, 86, 91, 92, 95, 169, 173, 174, 175, 176, 177], "consecut": [1, 4, 16], "ext2int": 1, "int2ext": 1, "result": [1, 2, 3, 8, 11, 44, 45, 46, 48, 49, 52, 55, 61, 64, 115, 120, 213, 214, 260, 262, 264, 266, 272, 275, 276, 277, 278], "callback": [1, 2, 124, 264], "necessari": [1, 3, 7, 16, 61, 67, 148, 265], "so": [1, 2, 3, 4, 7, 8, 12, 16, 17, 19, 25, 55, 58, 60, 68, 218, 268, 269, 272], "motiv": 1, "behind": 1, "facilit": [1, 20], "who": [1, 6, 46], "want": [1, 6, 16], "possibl": [1, 3, 18, 29], "overrid": [1, 2, 11, 16, 17, 18, 102, 108, 147, 163, 260, 271], "behavior": [1, 2], "complet": [1, 3, 7, 11, 16, 17, 18, 61, 260, 281], "often": [1, 9], "see": [1, 2, 3, 6, 8, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 35, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 94, 112, 113, 114, 115, 116, 117, 118, 119, 120, 148, 213, 214, 215, 216, 217, 218, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 281], "essenti": [1, 3, 18, 113, 213], "modif": [1, 2, 6, 113, 260], "addit": [1, 2, 3, 8, 16, 17, 18, 19, 29, 61, 67, 113, 213, 275, 276, 277, 278, 281], "made": [1, 3, 40], "default": [1, 3, 4, 5, 6, 11, 16, 17, 18, 20, 25, 29, 30, 35, 44, 46, 50, 54, 59, 61, 62, 63, 67, 68, 113, 115, 118, 121, 124, 147, 213, 214, 215, 216, 217, 218, 260, 261, 263, 265, 271, 276, 281], "henc": 1, "earli": 1, "cycl": [1, 7], "should": [1, 6, 11, 12, 16, 18, 55, 61, 67, 120, 218], "execut": [1, 5, 44, 260], "successfulli": 1, "command": [1, 6, 36, 55, 273, 281], "without": [1, 3, 4, 6, 7, 8, 9, 28, 43, 67], "With": [2, 28, 43], "object": [2, 5, 6, 16, 17, 18, 24, 25, 30, 59, 61, 62, 63, 64, 67, 68, 84, 88, 94, 96, 104, 105, 106, 112, 113, 114, 115, 119, 120, 121, 124, 127, 128, 129, 134, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 213, 214, 215, 216, 217, 218, 260, 262, 263, 264, 266, 271, 272, 275, 276, 277, 278], "architectur": [2, 5], "outlin": [2, 3], "section": [2, 3, 6, 7, 8, 9, 16, 17, 18, 50, 55, 61, 63, 64, 67, 68, 84, 87, 88, 90, 93, 94, 96, 97, 98, 101, 103, 106, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 148, 213, 218, 260, 268, 269, 270, 281], "customiz": 2, "increas": 2, "dramat": 2, "ones": [2, 9, 16, 18], "import": [2, 3, 6, 18, 61, 64, 65, 68, 76, 79], "understand": [2, 6], "how": [2, 3, 4, 8, 18, 55, 67], "select": [2, 9, 17, 29, 114, 115, 116, 118, 214, 215, 216, 218, 261, 263, 265], "instanti": [2, 3, 4, 7, 8, 61, 64, 260], "There": [2, 3, 8, 11, 16, 55], "sever": [2, 6, 16, 20, 55], "below": [2, 3, 16, 18, 19, 36, 272], "illustr": [2, 4, 7, 8, 11, 18], "invok": [2, 7], "fact": [2, 16, 18], "simpl": [2, 3, 7, 8, 16, 19, 275, 277, 278], "wrapper": [2, 6, 30, 37, 275, 276, 277, 278], "run_mp": [2, 6, 273, 275, 277, 278, 279], "onli": [2, 4, 7, 8, 12, 16, 17, 20, 44, 46, 52, 55, 67, 68, 119, 148, 213, 218, 262, 264, 266, 268, 269, 271, 272, 280], "valu": [2, 3, 7, 8, 17, 18, 25, 28, 29, 30, 40, 43, 48, 58, 59, 61, 67, 68, 97, 102, 108, 114, 119, 120, 213, 214, 218, 260, 262, 263, 264, 266, 267], "task_class": [2, 113, 276], "argument": [2, 3, 4, 7, 8, 17, 25, 28, 30, 40, 43, 46, 52, 67, 68, 119, 271, 275, 277, 278], "handl": [2, 4, 7, 8, 16, 18, 25, 63, 65, 66, 67, 68, 106, 112, 113, 114, 115, 119, 124, 131, 133, 136, 138, 140, 148, 149, 150, 152, 218, 260, 261, 265, 267, 270, 274, 276], "constructor": [2, 3, 4, 7, 8, 16, 59, 61, 62, 63, 65, 112, 113, 119, 121, 124, 129, 131, 133, 134, 136, 138, 139, 140, 142, 147, 215, 216, 217, 260, 261, 263, 265, 271, 274, 276], "pass": [2, 3, 4, 7, 8, 11, 14, 16, 17, 19, 25, 40, 46, 48, 49, 50, 52, 55, 67, 120, 260, 271, 281], "mean": [2, 3, 16, 18, 19, 99, 107, 218], "either": [2, 3, 6, 8, 16, 25, 61, 120, 213, 272], "two": [2, 3, 4, 5, 6, 7, 8, 16, 18, 46, 48, 52, 61, 67, 119, 270, 272, 275], "descript": [2, 3, 4, 6, 8, 16, 18, 19, 29, 40, 59, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110], "dm_converter_class": [2, 113, 260, 261], "final": [2, 16, 18, 19, 25, 30, 40, 64, 213, 260], "data_model_class": [2, 113, 260], "network_model_class": [2, 113, 260], "math_model_class": [2, 113, 260], "dm_converter_class_mpc2_default": [2, 260, 264], "data_model_class_default": [2, 260, 261, 263], "network_model_class_default": [2, 260, 263, 265], "math_model_class_default": [2, 260, 261, 263, 264, 265], "tabl": [2, 4, 6, 12, 17, 18, 59, 60, 61, 67, 68, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 112, 113, 119, 262, 264, 266, 268, 269, 270, 271, 272, 274], "last": [2, 7, 113, 213, 271, 272], "cell": [2, 3, 4, 11, 12, 13, 15, 16, 46, 50, 52, 59, 61, 67, 68, 97, 112, 113, 114, 115, 116, 117, 118, 119, 120, 213, 218, 260, 271, 275, 276, 277, 278], "arrai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 25, 28, 29, 30, 40, 43, 46, 48, 49, 50, 51, 52, 59, 61, 64, 65, 67, 68, 97, 112, 113, 114, 115, 116, 117, 118, 119, 120, 148, 213, 218, 260, 271, 275, 276, 277, 278], "popul": [2, 16, 18, 264], "parent": [2, 16, 18, 67, 84, 87, 88, 90, 93, 94, 96, 98, 101, 102, 103, 108, 109, 111, 114, 214, 217, 218, 262, 264, 266], "runtim": 2, "done": [2, 3, 7, 8, 16, 18, 60, 272], "delet": [2, 12, 46, 119], "replac": [2, 16, 18, 46, 52, 112], "entri": [2, 3, 4, 16, 67, 68, 112, 120, 213], "action": [2, 11], "new_class": 2, "append": [2, 63, 67, 112, 119], "old_class": 2, "isa": [2, 112], "true": [2, 16, 29, 35, 40, 44, 46, 48, 49, 50, 51, 52, 54, 58, 59, 61, 67, 68, 85, 86, 112, 119, 213, 218, 263, 265, 271, 272], "typic": [2, 3, 4, 7, 8, 11, 16, 18, 67, 68, 148, 218, 276], "multipl": [2, 67, 218, 272], "sequenti": [2, 3, 7, 8, 11, 46, 52], "modify_element_class": [2, 112], "previous": 2, "avail": [2, 10, 16, 18, 20, 21, 22, 23, 24, 25, 36, 38, 39, 40, 41, 42, 56, 59, 104, 214, 260, 261, 267, 272, 274, 275, 276, 277, 278, 281], "affect": [2, 272], "v": [2, 8, 9, 28, 43, 97, 99, 107, 115, 149, 153, 156, 159, 213, 218], "voltag": [2, 3, 8, 9, 16, 17, 18, 19, 61, 67, 83, 84, 85, 86, 88, 91, 92, 95, 99, 107, 114, 115, 116, 117, 118, 124, 153, 154, 155, 156, 157, 158, 163, 164, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 213, 214, 215, 216, 217, 218, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 251, 252, 256, 257, 261, 263, 265, 268, 269, 275, 278], "represent": [2, 3, 8, 16, 17, 18, 218, 268, 269], "balanc": [2, 3, 7, 61, 88, 120, 122, 123, 125, 126, 128, 130, 132, 135, 137, 139, 143, 144, 145, 146, 147, 152, 154, 155, 157, 158, 214], "experiment": [2, 267], "come": [2, 16, 19, 214], "These": [2, 3, 7, 16, 18, 37, 56, 218, 273], "summar": [2, 4, 6, 9, 16, 17, 18], "assign": [2, 4, 8, 16, 28, 43, 61, 62, 63, 67, 68, 119, 120, 121, 124, 215, 216, 217, 271, 272], "exp": [2, 267, 281], "must": [2, 8, 16, 18, 30, 48, 59, 60, 61, 64, 67, 68, 114, 115, 116, 117, 118, 119, 148, 213, 218, 260, 271, 272], "sinc": [2, 7, 8, 16, 18, 25, 59, 271, 272], "doe": [2, 6, 7, 8, 18, 67, 120, 148, 260, 271, 274], "recogn": 2, "dmc_element_class": [2, 17, 113, 268, 269, 270], "dm_element_class": [2, 17, 113, 268, 269, 270], "nm_element_class": [2, 17, 113, 268, 269], "mm_element_class": [2, 17, 113, 268, 269, 270], "exclude_el": 2, "exclud": 2, "char": [2, 13, 14, 15, 16, 28, 29, 40, 43, 46, 48, 49, 51, 52, 61, 64, 65, 67, 68, 112, 113, 114, 116, 117, 118, 119, 148, 213, 218, 260], "framework": [2, 5, 6, 20, 57, 113, 262, 264, 266, 275, 276, 277, 278, 280], "api": [2, 16, 37, 113], "bundl": [2, 113], "togeth": [2, 16, 18, 113], "packag": [2, 6, 14, 16, 17, 20, 55, 113, 262, 264, 266, 280], "xt_reserv": [2, 17, 57, 113, 279], "co": 2, "fix": [2, 16, 17, 113, 173, 265, 270, 279], "zonal": [2, 17, 105, 113, 270, 279], "standard": [2, 7, 16, 18, 19, 30, 59, 61, 67, 260], "toggle_reserv": 2, "run_opf_w_r": 2, "7": [2, 8, 16, 17, 19, 29, 30, 55, 120, 281], "earlier": [2, 281], "To": [2, 12, 16, 17, 19, 84, 87, 88, 90, 93, 94, 96, 98, 101, 102, 103, 108, 109, 111, 272, 281], "you": [2, 3, 6, 9, 12, 16, 18, 36, 55, 59, 271, 272, 281], "mpx": [2, 16, 17, 19, 113, 260, 261, 265, 275, 276, 277, 278], "veri": [2, 271], "nine": [2, 281], "five": [2, 19, 268], "someth": [2, 16, 55, 67], "complex": [2, 9, 16, 18, 48, 115, 116, 213, 214, 215, 216, 218, 261], "phase": [2, 3, 17, 20, 61, 70, 72, 73, 76, 77, 82, 83, 86, 87, 89, 90, 92, 93, 97, 98, 100, 101, 110, 111, 113, 169, 170, 171, 178, 179, 180, 181, 182, 183, 184, 186, 187, 199, 200, 211, 212, 225, 226, 227, 231, 232, 233, 235, 236, 237, 247, 249, 259, 268, 279], "load": [2, 3, 4, 16, 17, 18, 19, 61, 62, 67, 77, 78, 99, 100, 101, 102, 103, 189, 201, 202, 203, 204, 213, 248, 249, 250, 251, 252, 253, 267, 268], "term": [2, 8, 16, 18, 25, 59, 83, 95, 115, 116, 117, 214], "pleas": [2, 16, 18, 25, 36, 38, 39, 55, 281], "xt_3p": [2, 17, 19, 57, 113, 279], "input": [3, 4, 6, 11, 13, 14, 15, 16, 19, 25, 28, 29, 30, 40, 43, 44, 46, 48, 49, 50, 51, 52, 58, 59, 61, 64, 66, 67, 68, 112, 113, 114, 115, 116, 117, 118, 119, 120, 148, 213, 214, 215, 216, 217, 218, 260, 261, 262, 264, 266, 267, 275, 276, 277, 278], "output": [3, 4, 6, 12, 13, 15, 18, 25, 28, 29, 30, 40, 43, 46, 48, 49, 50, 52, 53, 55, 58, 59, 61, 63, 64, 67, 68, 91, 92, 94, 113, 114, 115, 116, 117, 118, 120, 148, 162, 165, 166, 167, 169, 173, 174, 175, 176, 177, 186, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 260, 262, 264, 265, 266, 267, 275, 276, 277, 278], "present": [3, 16, 46, 52, 61], "encapsul": [3, 8, 61, 67, 218], "primarili": [3, 4, 7, 8, 61, 64, 213], "class": [3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 279, 280], "data_model": [3, 57, 62, 63, 64, 67, 68, 113, 120, 148, 213, 214, 217, 218, 260, 262, 264, 266, 279], "therefor": [3, 4, 7, 8, 67, 120, 213, 215, 216, 217], "data_model_cpf": [3, 57, 279], "target": [3, 261, 275], "cost": [3, 16, 18, 25, 30, 59, 60, 66, 74, 91, 94, 96, 104, 120, 148, 149, 188, 189, 190, 194, 205, 264, 270], "nodal": [3, 7, 16, 61, 88, 128, 139, 214, 276, 277], "price": [3, 7, 16, 61, 84, 88, 94, 96, 104, 105, 106, 130, 132, 135, 137, 161, 163, 270, 276, 277], "shadow": [3, 7, 16, 84, 88, 94, 96, 104, 106, 161, 163], "contraint": [3, 18], "By": [3, 4, 7, 8, 11, 16, 61, 64, 67, 68, 113, 120, 148, 213, 218, 271, 281], "begin": [3, 4, 7, 8, 9, 16, 18, 25, 44, 61, 64, 67, 68, 113, 115, 118, 120, 148, 213, 218, 260], "initi": [3, 4, 7, 8, 16, 18, 25, 44, 55, 61, 64, 65, 67, 68, 83, 85, 86, 89, 91, 92, 95, 97, 100, 110, 120, 170, 171, 172, 173, 174, 175, 179, 187, 188, 194, 200, 212, 213, 214, 215, 216, 265], "proce": [3, 7, 8, 61], "stage": [3, 4, 7, 8, 61, 64, 67], "everi": 3, "read": 3, "count": [3, 7, 8, 16, 19, 48, 49, 51, 61, 67, 99, 107, 218], "determin": [3, 5, 7, 8, 11, 16, 18, 29, 40, 61, 67, 120, 260, 272], "number": [3, 4, 6, 7, 8, 9, 16, 18, 25, 28, 29, 30, 40, 43, 44, 50, 51, 59, 61, 67, 68, 85, 115, 118, 119, 213, 218, 265], "instanc": [3, 5, 8, 11, 16, 18, 58, 61, 67, 218], "store": [3, 7, 8, 16, 18, 61, 67, 112, 115, 116, 117, 119, 218, 271, 272], "nr": [3, 16, 18, 67, 68], "onlin": [3, 7, 8, 16, 18, 61, 67, 91, 92, 95, 104, 105, 148, 218], "statu": [3, 16, 17, 18, 19, 35, 54, 61, 67], "map": [3, 8, 18, 61, 67, 68, 105, 112, 119, 120, 213, 270], "id": [3, 4, 9, 16, 17, 18, 19, 61, 67, 83, 89, 91, 92, 95, 97, 99, 100, 104, 107, 110, 213], "row": [3, 4, 8, 9, 16, 18, 29, 59, 61, 67, 68, 83, 85, 88, 91, 92, 95, 97, 99, 100, 104, 106, 107, 110, 213, 218, 271, 272], "id2i": [3, 16, 18, 67], "criteria": [3, 61, 67], "indic": [3, 4, 9, 11, 16, 18, 59, 61, 67, 68, 74, 91, 92, 95, 112, 114, 115, 118, 119, 120, 213, 214, 218, 265], "n": [3, 4, 9, 16, 18, 29, 59, 61, 66, 67, 115, 116, 117, 119, 188, 194, 213, 218, 271], "off": [3, 16, 17, 18, 19, 40, 67, 83], "i2on": [3, 16, 67], "extract": [3, 4, 7, 16, 55, 61, 67, 68, 97, 148, 161, 163, 218, 262, 264, 266, 271], "calcul": [3, 61, 67], "origin": [3, 4, 15, 16, 46, 52, 61, 67], "p": [3, 9, 16, 17, 19, 29, 59, 60, 61, 67, 83, 85, 86, 88, 89, 91, 92, 95, 99, 100, 104, 105, 107, 110, 118, 218], "few": [3, 4, 7, 8, 16, 19], "per": [3, 7, 8, 16, 18, 19, 59, 61, 83, 95, 148, 182, 205, 218, 219, 224, 225, 231, 234, 235, 242, 247, 248, 249, 254, 259, 270], "unit": [3, 6, 7, 9, 16, 19, 55, 59, 61, 83, 84, 88, 94, 95, 96, 104, 105], "mva": [3, 17, 19, 61, 83, 84], "found": [3, 16, 18, 19, 59, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 281], "base_mva": [3, 16, 61, 189], "distribut": [3, 16, 20, 55, 97, 268], "kva": [3, 19, 61, 110], "base_kva": [3, 19, 61, 110], "pretty_print": [3, 16, 61, 67, 84, 94, 96, 97, 110], "pretti": [3, 11, 18, 61, 63, 67, 84, 87, 88, 90, 93, 94, 96, 98, 101, 103, 106, 109, 111, 260, 275, 276, 277, 278], "text": [3, 20, 46, 61, 280], "consol": [3, 11, 61, 67], "control": [3, 16, 25, 61, 67, 85, 86, 260], "cnt": [3, 16, 51, 61, 67], "total": [3, 8, 16, 17, 19, 61, 67, 99, 104, 107, 213, 218, 265], "sum": [3, 16, 59, 61, 67], "amount": [3, 61], "capac": [3, 17, 61, 104, 270], "loss": [3, 16, 17, 19, 61, 85, 95], "ext": [3, 16, 61, 67], "extrem": [3, 16, 60, 61, 67], "min": [3, 7, 16, 17, 25, 30, 61], "max": [3, 7, 16, 17, 19, 25, 30, 61, 67], "det": [3, 16, 61, 67], "dispatch": [3, 16, 61, 189, 275, 276, 277, 278], "dm_element": [3, 16, 17, 18, 57, 61, 68, 83, 85, 86, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110, 113, 148, 218, 279], "where": [3, 4, 6, 7, 8, 9, 12, 16, 18, 25, 30, 40, 46, 52, 55, 59, 61, 99, 112, 115, 118, 119, 120, 148, 213, 218, 272], "relationship": [3, 4, 6, 7, 8, 213], "here": [3, 4, 6, 7, 8, 16, 17, 25, 84, 88, 94, 96, 104, 105, 213], "dme_bu": [3, 18, 57, 88, 279], "dme_gen": [3, 18, 57, 94, 279], "dme_load": [3, 18, 57, 102, 103, 279], "while": [3, 8, 16, 18, 272], "least": [3, 6, 114, 115, 116, 117, 118, 213, 272], "tab": [3, 12, 16, 18, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 272, 275, 276, 277, 278], "column": [3, 4, 9, 16, 18, 25, 29, 59, 67, 68, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110, 115, 118, 213, 218, 271, 272], "attempt": [3, 40, 272], "common": [3, 6, 8, 10, 16, 18, 67], "ctm": [3, 10], "uid": [3, 16, 18, 67, 83, 89, 91, 92, 95, 97, 99, 100, 104, 107, 110], "posit": 3, "integ": [3, 6, 13, 15, 16, 25, 29, 30, 44, 50, 51, 58, 59, 61, 67, 68, 83, 85, 86, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110, 114, 115, 116, 118, 119, 213, 214, 215, 216, 218, 260, 262, 264, 265, 266], "serv": [3, 8, 16, 113], "uniqu": [3, 8, 16, 67, 97, 213], "string": [3, 16, 18, 40, 52, 67, 68], "source_uid": [3, 16, 18, 67], "record": 3, "besid": [3, 19], "vector": [3, 4, 7, 8, 9, 16, 18, 21, 25, 29, 30, 48, 59, 67, 68, 83, 85, 86, 89, 91, 92, 95, 97, 99, 100, 107, 110, 114, 115, 116, 117, 118, 119, 120, 213, 214, 215, 216, 217, 218, 261], "m": [3, 9, 12, 13, 15, 16, 17, 18, 19, 36, 55, 97, 115, 116, 117, 119, 213, 218, 271], "time": [3, 8, 9, 16, 18, 25, 55, 115, 118, 218, 260], "largest": 3, "n_r": 3, "enter": 3, "gen": [3, 8, 16, 17, 19, 61, 67, 68, 74, 91, 92, 104, 105, 148, 189, 213, 218, 265, 275, 276, 277, 278], "singular": [3, 16, 18, 67], "plural": [3, 16, 18, 67], "charact": [3, 46, 68], "might": 3, "seem": 3, "logic": 3, "constant": [3, 8, 9, 16, 18, 25, 58, 59, 95, 99], "instead": [3, 16, 25, 29, 30], "prevent": [3, 44], "effect": 3, "preclud": 3, "main_table_var_nam": [3, 16, 18, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 110], "init_statu": [3, 67, 85, 86], "update_statu": [3, 16, 18, 61, 67, 83, 85, 86, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110], "build_param": [3, 16, 18, 61, 67, 83, 85, 86, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110, 213, 214, 217, 218, 220, 223, 231, 235, 238, 241, 243, 246, 247, 249, 250, 253, 255, 258, 259], "As": [3, 11, 16, 17, 36, 55], "node": [3, 7, 9, 16, 58, 67, 85, 86, 120, 122, 123, 125, 126, 130, 132, 135, 137, 143, 144, 145, 146, 147, 151, 159, 213, 214, 215, 216, 218, 224, 225, 265], "port": [3, 7, 8, 9, 16, 25, 67, 83, 95, 114, 115, 118, 213, 214, 217, 218, 219, 231, 234, 235, 242, 247, 248, 249, 254, 259, 261], "hand": [3, 6, 7, 11, 16, 25, 30], "inform": [3, 6, 8, 25, 40, 56, 61, 64, 67, 68, 112, 113, 115, 116, 117, 120, 148, 213, 218, 260, 268, 269, 270, 281], "link": [3, 12, 16, 18, 19, 67, 268, 280], "branch": [3, 6, 7, 16, 17, 19, 67, 69, 83, 84, 160, 161, 162, 163, 164, 165, 166, 167, 213, 219, 220, 221, 222, 223, 280], "pair": [3, 213, 275, 276, 277, 278], "context": [3, 9], "b": [3, 7, 9, 16, 18, 19, 25, 29, 30, 59, 107, 112, 118, 119, 180, 183, 188, 194, 213, 271], "junction": [3, 67, 218], "could": [3, 16], "coupl": 3, "cxn_type": [3, 16, 18, 67, 83, 89, 91, 92, 95, 97, 99, 100, 107, 110, 218], "cxn_idx_prop": [3, 16, 18, 67, 83, 89, 91, 92, 95, 97, 99, 100, 107, 110, 218], "fbu": [3, 16, 19, 67, 83, 95, 97, 110, 218], "tbu": [3, 16, 19, 67, 83, 95, 97, 110, 218], "automat": [3, 4, 8, 11, 12, 16, 18, 61, 64, 67, 74, 119, 120, 213, 218, 260, 271, 280], "had": 3, "sand": 3, "cxn_type_prop": [3, 67, 218], "built": [3, 7, 16, 18, 20, 25, 29, 36, 55, 59, 68, 271], "mp_tabl": [3, 16, 18, 57, 272, 274, 279], "mp_table_class": [3, 272, 273, 279], "abil": [4, 6, 64, 66, 271], "dure": [4, 16, 64, 67], "dm_convert": [4, 57, 61, 65, 66, 67, 68, 113, 260, 262, 264, 266, 279], "6": [4, 16, 17, 19, 25, 29, 30, 68, 97, 213, 247, 259, 264], "yet": [4, 13, 15, 18, 36, 38, 39, 44, 45, 48, 49, 51, 274, 281], "been": [4, 7, 16, 18, 148, 265], "onc": [4, 7, 16, 18, 55, 148, 218], "readi": [4, 260], "loadcas": 4, "same": [4, 8, 16, 18, 25, 29, 61, 62, 68, 119, 188, 213, 218], "again": [4, 16, 18], "scratch": 4, "need": [4, 8, 16, 18, 55, 62, 67, 68, 116, 117, 149, 262, 264, 266, 281], "dmc_element": [4, 16, 17, 57, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 113, 279], "dmce": [4, 67, 68], "get_import_spec": [4, 68], "import_table_valu": [4, 68], "thing": [4, 16, 18], "interest": [4, 9, 11, 13, 15, 59, 61, 114, 115, 116, 118, 213, 214, 215, 216, 218], "vmap": [4, 16, 68], "table_var_map": [4, 16, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "vn": [4, 16, 68, 70, 71, 74, 75, 78, 79, 80], "start": [4, 6, 12, 16, 25, 30, 119, 120, 126, 127, 261, 281], "col": [4, 16, 59, 68, 213], "c": [4, 7, 8, 16, 18, 19, 25, 30, 59, 68, 70, 71, 97, 188, 194, 213, 218], "sf": [4, 68], "sf_fcn": 4, "copi": [4, 16, 19, 61, 64, 67, 119], "scale": [4, 9, 25, 29, 59, 68], "factor": [4, 23, 29, 68, 100, 189], "val": [4, 16, 58, 68, 119, 271, 275, 276, 277, 278], "num": [4, 16, 18], "scalar": [4, 9, 16, 18, 48, 59, 119, 213], "fcn": [4, 16], "ifn": 4, "efn": 4, "spec": [4, 16, 46, 52, 68, 69, 70, 71, 74, 75, 79, 80, 148], "ridx": [4, 16, 68, 71, 74, 75], "get_export_spec": [4, 68], "export_table_valu": [4, 68], "init_export_data": [4, 68, 71], "relev": [4, 7, 8, 16, 19, 120, 148], "data_exist": [4, 68], "fals": [4, 16, 29, 35, 40, 44, 46, 48, 49, 50, 52, 54, 67, 213], "matrix": [4, 8, 9, 11, 16, 18, 25, 29, 30, 48, 59, 97, 105, 114, 115, 116, 118, 213, 214, 218, 260], "pdf": [5, 6, 10, 12, 20, 36, 38, 39, 279, 281], "introduct": [5, 279], "notat": 5, "overview": [5, 6, 16, 18], "hierarchi": [5, 7, 16, 18], "custom": [5, 6, 17, 18, 66, 113, 131, 133, 136, 138, 140, 149, 268, 269, 270, 273], "iter": [5, 19, 22, 25, 30, 260, 261, 265], "via": [5, 16, 19, 60, 275, 277, 278], "acknowledg": 5, "purpos": [6, 16, 60, 62, 63, 280], "wish": 6, "your": [6, 17, 18, 55, 56, 272], "document": [6, 16, 17, 18, 19, 29, 36, 59, 280, 281], "languag": [6, 20], "scientif": 6, "commerci": 6, "product": 6, "mathwork": [6, 25, 30], "free": [6, 20], "open": [6, 20], "relat": [6, 7, 8, 11, 20, 66, 115, 116, 117, 260], "softwar": [6, 20], "git": 6, "subrepo": 6, "except": [6, 9, 16, 25, 30, 40, 62, 119], "extra": [6, 16, 19], "howev": [6, 7, 11, 16, 18, 272, 281], "download": [6, 20, 55], "zip": [6, 55, 99, 267], "releas": [6, 28, 40, 43], "depend": [6, 7, 8, 17, 55, 61, 64, 68, 115, 120, 218, 261, 263, 265, 268, 269], "mptest": [6, 55], "doc": [6, 10, 12, 13, 15], "have_featur": [6, 21, 22, 23, 24, 37, 41, 42, 47, 55, 56, 281], "nonlinear": [6, 7, 8, 16, 18, 25, 26, 27, 37, 66, 115, 214, 250], "primal": [6, 25], "dual": [6, 25, 116], "linear": [6, 7, 8, 9, 16, 22, 25, 29, 30, 32, 33, 37, 59, 60, 66, 74, 95, 115, 118, 188, 190, 194], "equat": [6, 7, 16, 18, 29], "easi": [6, 16], "unifi": [6, 8, 10], "lp": 6, "qp": [6, 7, 30, 34, 37], "mix": [6, 7, 112, 114, 115, 116, 117, 118, 120], "switch": [6, 16, 17, 18], "chang": [6, 17, 19, 265, 268, 269], "unsupport": [6, 263], "separ": [6, 16, 18, 55], "resourc": 6, "sphinx": [6, 12, 13, 15, 20], "perman": 6, "master": [6, 13, 15, 280], "latest": 6, "stabl": 6, "unreleas": 6, "hopefulli": 6, "tag": [6, 21, 22, 23, 24, 40, 41, 42, 61, 63, 64, 65, 113, 114, 120, 218, 260, 263, 265], "becaus": [6, 16, 18, 272], "intend": [6, 37, 46, 48, 49, 51, 52, 56, 67, 273], "unmodifi": 6, "stick": 6, "syntax": [6, 21, 25, 30, 59, 60, 271, 272], "classdef": [6, 16, 17, 18], "obj": [6, 16, 17, 18, 25, 30, 59, 67, 112, 119, 148, 213, 272], "namespac": 6, "produc": 6, "html": [6, 12, 20], "what": [6, 9], "hint": 6, "click": 6, "icon": [6, 280], "upper": [6, 16, 17, 25, 30, 83, 84, 85, 88, 91, 94, 95, 96, 104, 116, 213, 280], "right": [6, 8, 9, 12, 16, 18, 25, 30, 115, 118, 280], "corner": 6, "page": [6, 55, 280], "cover": 6, "autom": 6, "contributor": 6, "guid": [6, 16, 17, 18, 19], "form": [7, 8, 9, 16, 17, 29, 46, 52, 55, 57, 97, 115, 116, 117, 118, 120, 170, 171, 172, 173, 174, 175, 179, 182, 187, 188, 194, 200, 212, 213, 214, 215, 216, 217, 218, 279], "x": [7, 8, 9, 16, 18, 19, 23, 24, 25, 29, 30, 51, 59, 67, 83, 97, 110, 115, 116, 118, 120, 128, 146, 149, 153, 154, 155, 156, 157, 158, 159, 213, 214, 218, 250, 264, 272, 281], "rvec": [7, 9, 25, 30], "f": [7, 8, 9, 25, 30, 59, 67, 146, 149, 264], "param": [7, 9, 16, 18, 25, 30, 95, 114], "rmat": [7, 9], "trace": 7, "curv": [7, 59, 91], "parameter": [7, 62, 102, 108], "lambda": [7, 16, 17, 25, 30, 62, 102, 108, 221, 261], "vari": [7, 67], "constrain": [7, 16, 25, 27], "min_": [7, 25, 27, 30], "textrm": 7, "qquad": 7, "h": [7, 16, 25, 30, 61, 67, 115, 214], "le": [7, 16, 18, 25, 27, 30], "_": [7, 8, 25, 30, 214], "quadrat": [7, 16, 30, 59], "tran": [7, 9, 30], "q": [7, 9, 16, 17, 29, 59, 99, 107, 188, 194, 265], "k": [7, 9, 16, 18, 59, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 110, 118, 124, 188, 194, 213, 218, 271], "l": [7, 16, 18, 25, 29, 30, 66, 95, 115, 116, 117], "math_model": [7, 57, 61, 113, 127, 141, 148, 213, 218, 260, 262, 264, 266, 279], "opt_model": [7, 120, 213], "mp_idx_manag": [7, 8, 114, 120, 213, 214, 215, 216, 217], "nonzero": [7, 8], "auxiliari": [7, 115, 116, 117, 120], "appropri": [7, 9, 12, 16, 18, 25, 40, 64, 114, 115], "characterist": 7, "mm_element": [7, 16, 17, 57, 67, 113, 120, 160, 168, 169, 178, 185, 186, 193, 199, 201, 205, 206, 207, 211, 218, 279], "mme": [7, 148, 218], "nme_bus_pf_acp": 7, "nme_bus_opf_acp": 7, "And": [7, 18, 19, 20, 268, 269], "similar": [7, 16], "mme_gen": [7, 57, 188, 191, 192, 279], "similarli": [7, 8], "inject": [7, 9, 16, 17, 18, 19, 83, 95, 96, 97, 107, 110, 115, 116, 117, 118, 151, 159, 213, 214, 217, 261], "aggreg": [7, 115, 118, 214, 217, 218], "piecewis": [7, 16, 59, 60, 74, 188, 190, 194], "angl": [7, 8, 9, 17, 83, 84, 85, 86, 115, 116, 117, 118, 161, 163, 164, 165, 173, 214, 215, 216, 217, 218, 221, 265, 278], "mme_branch": [7, 57, 161, 166, 167, 279], "sens": 7, "respons": [7, 16, 67], "data_model_update_off": [7, 148], "zero": [7, 8, 9, 16, 18, 25, 30, 61, 114, 218], "out": [7, 16, 19, 30, 45, 61, 63, 263], "data_model_update_on": [7, 16, 148, 162, 165, 166, 167, 169, 173, 174, 175, 176, 177, 186, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211], "differnt": 7, "avoid": [7, 12], "duplic": [7, 61, 64, 67, 119], "mm_shared_": 7, "evalu": [7, 25, 49, 59, 116, 117, 149, 261], "jacobian": [7, 9, 25, 115, 116, 117, 214], "put": [7, 16, 18], "kei": [8, 67, 68], "modular": [8, 40], "deriv": [8, 59, 114, 115, 116, 117, 118, 128, 221], "featur": [8, 11, 21, 22, 23, 24, 40, 41, 42, 271, 281], "fulli": [8, 281], "captur": 8, "oper": [8, 9, 16, 25, 29, 55, 218], "condit": [8, 25, 30, 49, 55], "non": [8, 9, 16, 18, 25, 66, 114, 115, 116, 117, 118, 213, 214, 217, 218, 231, 234, 235, 238, 241, 242, 243, 246, 265], "z": [8, 9, 16, 18, 115, 118, 153, 156, 159, 213, 217, 218], "track": [8, 114, 120, 213], "n_p": [8, 9, 115, 118], "n_z": [8, 118], "tn5": [8, 9, 10], "lot": 8, "especi": [8, 55], "real": [8, 9, 16, 18, 25, 29, 48, 115, 116, 213, 214, 215, 218], "predefin": [8, 16, 18], "activ": [8, 9, 12, 16, 17, 67, 83, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 105, 107, 110, 115, 118, 151, 159, 182, 188, 194, 275, 276, 277, 278], "va": [8, 9, 16, 67, 85, 115, 116, 117, 118, 120, 214, 215, 216, 217, 229, 230, 278], "n_": [8, 9, 59, 115], "left": [8, 9, 16, 18, 25, 30, 115, 118], "bb": [8, 9, 16, 118, 223], "kk": [8, 9, 16, 118, 218, 241, 246], "pv": [8, 9, 16, 19, 58, 85, 86, 118, 151, 213, 218, 223, 225, 253, 258, 261], "suscept": [8, 9, 83, 97, 107], "coeffici": [8, 9, 16, 30, 59, 95, 115, 118], "gp": [8, 16, 118, 217], "cc": [8, 9, 16, 18, 115, 118], "gi": [8, 115], "compon": [8, 16, 59, 60, 99, 115], "ilin": [8, 16, 18, 115], "slin": [8, 16, 18, 115], "arbitrari": [8, 16, 18, 61, 67, 115], "snln": [8, 16, 18, 115, 214, 250], "inln": [8, 16, 18, 115, 214, 250], "six": [8, 16, 18, 19, 268], "yy": [8, 9, 16, 18, 19, 115, 220, 247, 250, 255, 259], "ll": [8, 9, 16, 18, 115], "nn": [8, 9, 16, 18, 115, 218, 224, 225, 231, 235, 238, 243], "iv": [8, 9, 16, 18, 115], "sv": [8, 9, 16, 18, 115, 249, 250], "admitt": [8, 9, 97, 220, 247, 259], "matric": [8, 9, 16, 18, 29, 48, 97, 115, 213, 214, 217, 218], "rather": [8, 16, 37, 56, 59, 115, 116, 214, 272], "dv": [8, 115], "conj": [8, 9, 115], "Then": [8, 12, 55, 61, 213], "written": [8, 20, 25, 44, 45, 48, 49, 51], "cdiag": [8, 115], "invc": [8, 115], "assum": [8, 16, 67, 97, 214, 260, 262, 264, 266, 267, 275, 276, 277, 278], "net_model": [8, 57, 61, 113, 115, 120, 148, 214, 215, 216, 217, 218, 225, 260, 262, 264, 266, 279], "nm_element": [8, 16, 17, 18, 57, 113, 114, 115, 116, 117, 118, 148, 213, 214, 215, 216, 217, 219, 224, 225, 231, 234, 235, 242, 247, 248, 249, 254, 259, 279], "special": [8, 271], "treatment": 8, "pq": [8, 19, 58, 85, 86, 91, 189, 213, 218, 225], "node_typ": [8, 16, 57, 213, 218, 224, 225, 279], "about": [8, 40], "assembl": [8, 214], "set_node_type_ref": [8, 213, 218, 224], "set_node_type_pv": [8, 213, 218, 224], "set_node_type_pq": [8, 213, 218, 224], "1000": [8, 19], "2000": [8, 19], "nme_bus_acp": [8, 57, 279], "nme_gen_acp": [8, 57, 279], "brief": 8, "rel": [8, 13, 15], "nme_bu": [8, 57, 228, 229, 230, 279], "nme_gen": [8, 57, 238, 241, 279], "neg": 8, "ident": [8, 9, 16, 25, 30, 48, 213], "nme_branch": [8, 57, 220, 223, 279], "nme_load": [8, 57, 250, 253, 279], "equal": [8, 16, 25, 44, 45, 48, 49, 51, 55, 116, 172, 213, 214], "consum": 8, "stack": [8, 16, 18, 115, 118, 213, 218], "seri": [8, 50, 83, 97, 110], "t": [8, 9, 12, 13, 15, 16, 17, 18, 19, 55, 59, 115, 214, 260, 271, 272, 274], "cscal": [8, 9, 16, 18, 99], "y": [8, 18, 51, 97, 115, 116, 117, 213], "i_": 8, "i_f": 8, "i_t": 8, "n_k": [8, 9, 16, 18, 115, 118], "cmat": [8, 9, 25, 30], "cccc": 8, "1_": 8, "2_": 8, "ddot": 8, "cvec": [8, 9, 16, 18], "_f": 8, "1_f": 8, "2_f": 8, "vdot": 8, "_t": 8, "1_t": 8, "2_t": 8, "incid": [8, 9, 16, 18, 213, 214, 217, 218], "character": 8, "style": 9, "theta": 9, "uptheta": 9, "cvecg": 9, "rmatg": 9, "cmatg": 9, "hat": 9, "diag": 9, "diagon": [9, 16, 18, 213], "conjug": 9, "transpos": [9, 25, 29, 115, 116, 214], "re": [9, 11, 12, 18, 46, 52], "im": [9, 18], "imaginari": [9, 16, 18, 115, 116, 214, 215, 218], "wise": 9, "expon": 9, "f_": [9, 59], "gradient": [9, 25, 59], "w": [9, 13, 15, 114, 115, 116, 117, 118, 126, 131, 133, 136, 138, 140, 214], "lam": [9, 25, 102, 108, 115, 116, 117, 128, 180, 214], "hessian": [9, 25, 59, 115, 116, 117, 214], "dimens": [9, 16, 67, 68, 119, 213, 218, 271, 272], "j": [9, 16, 25, 59, 99, 213, 218, 271], "natur": 9, "log": 9, "approx": 9, "71828": 9, "sqrt": 9, "n_n": [9, 115, 118], "size": [9, 16, 25, 44, 45, 48, 49, 51, 55, 114, 119, 271, 272], "vvi": 9, "vri": 9, "vii": 9, "vmi": 9, "vai": 9, "magnitud": [9, 16, 17, 83, 85, 86, 88, 91, 92, 95, 115, 116, 117, 172, 173, 216, 218, 263, 275], "vr": [9, 115, 116, 213, 214, 215, 228], "vi": [9, 115, 116, 214, 215, 228], "vm": [9, 17, 67, 85, 115, 116, 117, 120, 172, 214, 216, 229, 275], "dvm": 9, "inv": 9, "invers": 9, "frac": [9, 30], "z_i": 9, "_i": [9, 99], "zr": [9, 16, 18, 115, 120, 213, 214], "zi": [9, 16, 18, 115, 120, 213, 214], "j_": 9, "affin": 9, "dd": 9, "aa": 9, "combin": [9, 115, 118, 218], "ccc": [9, 18], "underlin": 9, "obtain": [9, 115, 116, 214, 218], "multipli": [9, 16, 25, 30, 115, 116, 214], "superscript": 9, "subscript": [9, 59, 60, 68], "carleton": 10, "coffrin": 10, "et": [10, 260], "al": 10, "progress": [10, 25], "www": 10, "overleaf": 10, "5d94e3765cb3ba000129df3c": 10, "zimmerman": [10, 25], "octob": 10, "2020": 10, "org": [10, 20, 22, 25, 272], "much": [11, 68], "task_pf": [11, 57, 261, 262, 264, 266, 267, 276, 278, 279], "task_cpf": [11, 57, 262, 275, 276, 279], "usag": [11, 119], "pattern": 11, "occur": 11, "flowchart": 11, "satisfi": [11, 25, 29, 30], "reactiv": [11, 16, 17, 67, 83, 88, 89, 91, 92, 94, 95, 96, 97, 99, 107, 110, 151, 182, 188, 265], "mark": 11, "star": 11, "sub": [11, 67, 68, 264], "accomplish": 11, "next_dm": [11, 260, 265], "next_nm": [11, 260], "next_mm": [11, 260, 261], "empti": [11, 16, 25, 30, 40, 59, 62, 63, 64, 67, 68, 114, 115, 116, 118, 120, 179, 187, 200, 212, 214, 215, 216, 260, 265], "termin": [11, 16, 25], "On": [11, 25], "trigger": 11, "enforc": [11, 261, 265], "constraint": [11, 16, 17, 25, 30, 59, 66, 84, 88, 104, 106, 115, 116, 120, 122, 123, 125, 126, 130, 132, 135, 137, 139, 143, 144, 145, 146, 147, 148, 161, 162, 163, 164, 165, 173, 180, 181, 182, 183, 184, 189, 190, 205, 206, 214, 231, 270], "print_soln": [11, 260], "print": [11, 18, 28, 35, 43, 44, 45, 48, 49, 50, 51, 54, 61, 63, 67, 84, 87, 88, 90, 93, 94, 96, 98, 101, 103, 106, 109, 111, 260, 263, 275, 276, 277, 278], "save_soln": [11, 260], "save": [11, 64, 65, 214, 217, 260, 262, 264, 266, 275, 276, 277, 278], "instal": [12, 14, 28, 37, 43, 56], "python": 12, "virtual": 12, "unix": [12, 46, 52], "maco": 12, "window": [12, 46, 52], "python3": 12, "venv": 12, "env": 12, "bin": 12, "script": [12, 50], "confirm": 12, "leav": 12, "deactiv": 12, "sphinxcontrib": 12, "matlabdomain": 12, "rtd": 12, "theme": 12, "pip": 12, "texliv": 12, "latex": [12, 20], "directori": [12, 13, 14, 15, 55], "latexpdf": 12, "twice": [12, 218], "pick": 12, "ensur": [12, 213], "content": [12, 16, 46, 271, 272], "cross": 12, "date": [12, 28, 40, 43], "If": [12, 16, 25, 35, 40, 44, 46, 48, 54, 55, 67, 114, 119, 272], "everyth": [12, 44, 281], "properli": [12, 55], "creation": [12, 16], "rst": [12, 13, 14, 15], "stub": [12, 13, 14, 15], "mani": [12, 19, 55], "pars": 12, "analyz": 12, "symlink": [12, 13, 14, 15], "subdirectori": 12, "generate_matpower_autodoc": 12, "hard": [12, 18], "lib": [12, 13, 15, 16, 17, 18, 19, 55], "prompt": [12, 55], "rebuild": [12, 67], "ref": [12, 13, 14, 16, 19, 58, 85, 86, 119, 213, 218, 225, 265], "generate_autodoc_stub": [12, 14], "generate_source_symlink": [12, 14], "dest": [13, 15], "success": [13, 15, 19, 35, 54, 55, 260, 262, 264, 266], "err_list": [13, 15], "stub_typ": [13, 15], "destdir": [13, 15], "prepend": [13, 15], "dir": [13, 15], "gh_base_url": [13, 15], "url": [13, 15], "mod": [13, 15], "modul": [13, 15], "pkg": [13, 15], "src_path": [13, 15], "o": [13, 15], "otherwis": [13, 15, 17, 40, 48, 49, 50, 59, 67, 213, 214, 218, 274], "error": [13, 15, 61, 67, 272], "fatal": [13, 15], "blob": [13, 15], "class1": [13, 15], "class2": [13, 15], "class3": [13, 15], "class4": [13, 15], "func1": [13, 15], "func2": [13, 15], "func3": [13, 15], "func4": [13, 15], "install_dir": 14, "src": 15, "demonstr": [16, 17], "transform": [16, 17, 18, 19, 82, 83, 110, 111, 160, 161, 162, 163, 164, 165, 166, 167, 211, 212, 219, 259, 268], "discuss": [16, 18], "exactli": 16, "p_": [16, 95], "mathrm": [16, 25, 30, 59, 95, 115, 214], "p_1": 16, "_0": [16, 95], "_1": [16, 18, 95], "diagram": [16, 18], "_2": [16, 18], "_k": [16, 18], "p_k": 16, "q_k": 16, "p_2": 16, "q_1": 16, "q_2": 16, "setpoint": [16, 61, 91, 92, 95], "appli": [16, 46, 52, 67, 272, 275, 276, 277, 278], "implmement": [16, 18], "legacy_dclin": [16, 17, 269], "whose": [16, 50, 218], "role": 16, "piec": [16, 67], "flag": [16, 25, 30, 61, 63, 67, 260], "physic": [16, 18], "lower": [16, 25, 30, 59, 83, 84, 85, 88, 91, 94, 95, 96, 104, 213], "bound": [16, 18, 25, 30, 61, 83, 84, 85, 88, 91, 94, 95, 96, 104, 116, 213], "dme_dclin": 16, "extend": [16, 37, 56], "dme_dcline_opf": 16, "bus_fr": [16, 83, 95, 97, 110], "bus_to": [16, 83, 95, 97, 110], "loss0": [16, 95], "loss1": [16, 95], "vm_setpoint_fr": [16, 95], "vm_setpoint_to": [16, 95], "p_fr_lb": [16, 95], "p_fr_ub": [16, 95], "q_fr_lb": [16, 95], "q_fr_ub": [16, 95], "q_to_lb": [16, 95], "q_to_ub": [16, 95], "p_fr": [16, 17, 95], "q_fr": [16, 95], "p_to": [16, 95], "q_to": [16, 95], "dme_legacy_dclin": [16, 17, 57, 96, 269, 279], "notic": [16, 18], "fbus_on": [16, 95], "tbus_on": [16, 95], "p_fr_start": [16, 95], "p_to_start": [16, 95], "q_fr_start": [16, 95], "q_to_start": [16, 95], "our": [16, 18, 55], "th": [16, 59, 213, 218], "_start": 16, "horzcat": [16, 18, 67, 271, 272], "export_var": [16, 67, 83, 84, 85, 88, 91, 94, 95, 96, 102, 104, 105, 108], "var": [16, 67, 214, 215, 216, 217, 264], "export_vars_offline_v": [16, 67, 83, 84, 85, 88, 91, 94, 95, 96, 104, 105, 148], "info": [16, 18, 21, 22, 23, 24, 28, 40, 41, 42, 43, 67, 218], "b2i": [16, 18], "idx": [16, 18, 59, 60, 67, 85, 91, 114, 115, 116, 117, 118, 119, 120, 149, 151, 213, 214, 215, 216, 218, 224, 225, 226, 227, 228, 229, 230, 231, 235, 238, 241, 243, 246, 250], "alreadi": [16, 18], "turn": [16, 18, 20, 40, 83], "bus_dm": 16, "isol": [16, 18, 58, 85, 86], "fill": [16, 18, 112], "set_bus_type_pv": [16, 85], "vm_control": [16, 85, 86], "reli": [16, 18, 20], "global": [16, 44, 45, 48, 49, 51, 58, 281], "apply_vm_setpoint": [16, 91, 92, 95], "i_fr": 16, "i_to": 16, "vm_start": [16, 85], "pp_have_section_sum": [16, 67, 83, 91, 92, 95, 97, 99, 100, 104, 107, 110], "pp_data_sum": [16, 67, 83, 91, 92, 95, 97, 99, 100, 104, 107, 110], "torf": [16, 40, 58, 61, 67, 68, 119, 271], "pp_arg": [16, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 110], "out_": [16, 61, 63, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 110], "fd": [16, 61, 67, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 110, 260, 263], "fprintf": 16, "29": [16, 40, 55], "12": [16, 17, 19, 44, 45, 48, 49, 51, 55], "2f": 16, "mw": [16, 17, 88, 91, 94, 95, 96, 99, 104, 105, 107], "mvar": [16, 17, 88, 91, 94, 95, 96, 99, 104, 107], "pp_have_section_det": [16, 67, 83, 85, 86, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110], "pp_get_headers_det": [16, 67, 83, 85, 86, 88, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110], "pp_data_det": [16, 67], "header": [16, 61, 63, 67, 260], "third": 16, "inj": [16, 17], "1234567": 16, "123456789": 16, "90": [16, 17], "123456": 16, "89": [16, 17], "str": [16, 67, 271], "pp_data_row_det": [16, 67, 83, 85, 86, 88, 89, 91, 92, 95, 97, 99, 100, 104, 105, 107, 110], "sprintf": [16, 18], "7d": 16, "9d": 16, "6d": 16, "10": [16, 17, 19, 25, 27, 30, 46, 48, 52, 104, 271], "themselv": [16, 112], "chose": 16, "keep": [16, 19, 112], "check": [16, 37, 40, 45, 53, 56, 58, 67, 68, 119, 263], "against": 16, "dme_legacy_dcline_opf": [16, 17, 57, 269, 279], "mu_p_fr_lb": [16, 96], "mu_p_fr_ub": [16, 96], "mu_q_fr_lb": [16, 96], "mu_q_fr_ub": [16, 96], "mu_q_to_lb": [16, 96], "mu_q_to_ub": [16, 96], "polynomi": [16, 59, 60, 188, 189, 194], "breakpoint": [16, 59], "appear": 16, "cost_tabl": [16, 57, 60, 94, 96, 188, 272, 279], "have_cost": [16, 91, 94, 95, 96], "routin": [16, 36, 55], "whether": [16, 41, 42, 46, 49, 52, 268, 269], "build_cost_param": [16, 94, 96, 189, 190, 194], "conveni": 16, "cost_table_util": [16, 57, 59, 279], "ismemb": 16, "variablenam": [16, 271], "poli": [16, 59, 194], "poly_param": [16, 59, 60, 188], "pwl": [16, 59, 60, 188, 194], "pwl_param": [16, 59, 60, 188], "els": [16, 17, 40, 55], "lim": [16, 61, 63, 84, 87, 88, 90, 93, 94, 96, 98, 101, 103, 106, 109, 111, 116], "lb": [16, 17, 119], "ub": [16, 17], "pp_have_section_lim": [16, 84, 88, 94, 96, 104, 106], "pp_binding_rows_lim": [16, 84, 88, 94, 96, 104, 106], "bind": [16, 25], "pp_get_headers_lim": [16, 84, 88, 94, 96, 104, 106], "pp_data_row_lim": [16, 84, 88, 94, 96, 104, 106], "ctol": [16, 106], "ptol": [16, 106], "dme_shared_opf": [16, 57, 84, 87, 88, 90, 93, 94, 96, 98, 101, 103, 104, 105, 109, 111, 279], "mu": [16, 17, 25, 264], "890": 16, "12345": 16, "78": 16, "mu_lb": [16, 104], "3f": 16, "mu_ub": [16, 104], "dcline": 16, "dclinecost": 16, "dmce_legacy_dcline_mpc2": [16, 17, 57, 269, 279], "data_field": [16, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "df": [16, 25, 59, 68, 149], "default_export_data_t": [16, 68, 69, 71, 74, 75], "expect": [16, 18, 19, 37, 44, 46, 48, 50, 52, 56, 65, 264], "retriev": [16, 119, 271, 272], "default_export_data_nrow": [16, 68], "dt": [16, 68], "idx_dclin": 16, "qmaxt": 16, "major": 16, "directi": 16, "gcip_fcn": 16, "ob": 16, "dcline_cost_import": [16, 75], "gcep_fcn": 16, "dcline_cost_export": [16, 75], "br_statu": 16, "f_bu": 16, "t_bu": 16, "vf": 16, "vt": [16, 213], "pmin": 16, "pmax": 16, "qminf": 16, "qmaxf": 16, "qmint": 16, "qf": 16, "pt": 16, "qt": 16, "isfield": 16, "mu_pmin": 16, "mu_pmax": 16, "mu_qminf": 16, "mu_qmaxf": 16, "mu_qmint": 16, "mu_qmaxt": 16, "static": [16, 58, 59, 60, 74, 271], "dmce_gen_mpc2": [16, 57, 279], "gencost": [16, 19, 74], "gencost2cost_t": [16, 74], "cost_table2gencost": [16, 74], "next": [16, 18, 260, 272], "let": [16, 18], "nme_legacy_dclin": [16, 57, 243, 246, 279], "np": [16, 18, 213, 218, 219, 231, 234, 235, 242, 247, 248, 249, 254, 259], "nz": [16, 18, 213, 218, 231, 234, 235, 242], "anyth": [16, 18, 44], "nme_legacy_dcline_ac": [16, 57, 244, 245, 279], "form_ac": [16, 18, 57, 116, 117, 118, 214, 215, 216, 279], "add_zvar": [16, 18, 213, 218, 231, 235, 238, 241, 243, 246], "ndc": 16, "nk": [16, 18, 218], "data_model_el": [16, 18, 68, 148, 218], "add_var": [16, 18, 120, 131, 133, 136, 138, 140, 148, 182, 188, 194, 205, 213, 218], "pdcf": [16, 243, 246], "qdcf": [16, 243], "pdct": [16, 243, 246], "inf": [16, 30, 213], "qdct": [16, 243], "spey": 16, "add_vvar": [16, 18, 213, 218, 226, 227, 228, 229, 230], "defer": [16, 18], "recal": [16, 18], "omit": [16, 18, 61, 64, 67, 119, 120, 213, 218, 271], "13": [16, 17, 46, 52], "proper": 16, "becom": [16, 18, 25, 60], "identii": 16, "nme_legacy_dcline_acc": [16, 17, 57, 269, 279], "form_acc": [16, 18, 57, 115, 117, 215, 221, 226, 228, 232, 236, 239, 244, 251, 256, 279], "nme_legacy_dcline_acp": [16, 17, 57, 269, 279], "form_acp": [16, 18, 57, 115, 116, 216, 222, 227, 229, 233, 237, 240, 245, 247, 249, 252, 257, 259, 279], "nme_legacy_dcline_dc": [16, 17, 57, 269, 279], "form_dc": [16, 57, 115, 116, 117, 217, 223, 230, 241, 246, 253, 258, 279], "z_1": 16, "z_2": 16, "analog": 16, "incorpor": [16, 18], "impli": 16, "beyond": 16, "mme_legacy_dclin": [16, 57, 194, 197, 198, 279], "slightli": 16, "mme_legacy_dcline_pf_ac": [16, 17, 57, 269, 279], "pp": [16, 25], "get_idx": 16, "s_fr": 16, "gs_": [16, 115, 214], "i1": [16, 59, 120, 149, 188, 194, 213, 271], "iN": [16, 120, 149, 213, 271], "s_to": 16, "imag": [16, 214, 215], "mme_legacy_dcline_pf_dc": [16, 17, 57, 269, 279], "14": [16, 17, 19], "mme_legacy_dcline_opf": [16, 57, 195, 196, 279], "ccv": [16, 59], "just": [16, 67, 260, 272], "ydc": 16, "dimenion": 16, "isempti": [16, 271, 272], "add_constraint": [16, 120, 148, 162, 163, 164, 165, 173, 180, 181, 182, 183, 184, 189, 190, 194, 205, 206], "spdiag": 16, "add_lin_constraint": 16, "dcline_legaci": 16, "ycondc": 16, "add_cost": [16, 120, 141, 148, 188, 189, 194, 205], "kind": [16, 67], "less": [16, 29, 48, 59], "than": [16, 25, 48, 59, 115, 116, 214, 271], "greater": 16, "have_quad_cost": [16, 59, 188, 194], "add_quad_cost": 16, "polpdcf": 16, "higher": [16, 48, 59], "pg": [16, 17, 91, 213, 238, 241, 275, 276, 277, 278], "i3": [16, 59, 188, 194], "cost_pdcf": 16, "xx": [16, 59, 116, 180, 183, 221], "poly_cost_fcn": [16, 59], "poly_coef": [16, 59], "add_nln_cost": 16, "pwldc": 16, "interior_x0": [16, 127, 170, 171, 173, 174, 175, 179, 187, 188, 194, 200, 212], "x0": [16, 25, 30, 127, 170, 171, 173, 174, 175, 179, 187, 188, 194, 200, 212], "feasibl": [16, 25], "vv": [16, 247], "maxc": [16, 59, 60], "max_pwl_cost": [16, 59, 60], "ab": 16, "mathmat": [16, 148, 260, 262, 264, 266], "mme_legacy_dcline_opf_ac": [16, 17, 57, 269, 279], "network_model_el": [16, 148], "vm_setpoint": [16, 91, 263], "sign": 16, "swap": 16, "mme_legacy_dcline_opf_dc": [16, 17, 57, 269, 279], "now": [16, 36, 38, 39, 281], "were": [16, 45], "side": [16, 19], "net_model_dc": [16, 57, 279], "mme_legacy_opf_dcline_ac": 16, "math_model_opf_acc": [16, 57, 130, 133, 279], "inclus": 16, "explain": 16, "xt_legacy_dclin": [16, 17, 57, 279], "t_case9_dclin": [16, 17], "go": 16, "gizmo": 16, "entir": [17, 115, 118], "20": [17, 25, 119, 213], "_element_class": [17, 268, 269], "fmt": [17, 113, 268, 269, 270], "mpc2": [17, 64, 65, 113, 268, 269, 270], "task_tag": [17, 113, 120, 127, 141, 268, 269, 270], "v_cartesian": [17, 261, 263, 265], "immedi": 17, "succeed": [17, 19, 262, 264, 266], "27": [17, 19], "23": [17, 18, 19], "setup": [17, 19, 128, 139], "04": 17, "6518": 17, "hr": 17, "area": [17, 85], "zone": [17, 80, 85, 105, 206, 270], "319": 17, "820": 17, "900": 17, "110": 17, "315": 17, "115": 17, "00": [17, 19, 55], "124": 17, "40": [17, 119], "59": [17, 19], "minimum": 17, "maximum": [17, 25, 30, 48, 59, 60], "066": 17, "30": [17, 119], "100": [17, 19], "51": 17, "deg": [17, 19], "11": [17, 19, 29, 30, 40], "lmp": 17, "99": 17, "mwh": 17, "24": [17, 18], "48": 17, "62": [17, 19], "mvarh": 17, "43": 17, "mag": [17, 216], "pu": 17, "ang": [17, 216], "000": 17, "15": [17, 18, 19, 213], "954": 17, "107": 17, "035": 17, "277": 17, "047": 17, "623": 17, "094": 17, "470": 17, "967": 17, "298": 17, "078": [17, 19], "508": 17, "952": 17, "085": 17, "992": 17, "600": 17, "081": 17, "160": 17, "476": 17, "427": 17, "097": 17, "205": 17, "043": 17, "112": 17, "067": 17, "079": 17, "consumpt": 17, "35": [17, 19], "125": 17, "50": [17, 119], "19": 17, "47": [17, 19], "54": 17, "31": 17, "18": [17, 19, 30, 55], "85": [17, 19], "49": [17, 213], "68": 17, "25": [17, 119, 271], "81": 17, "88": 17, "02": [17, 19], "32": 17, "65": 17, "37": 17, "38": [17, 213], "39": 17, "87": [17, 213], "69": 17, "64": [17, 19], "70": 17, "01": [17, 19], "58": 17, "131": 17, "95": [17, 19, 25], "61": 17, "60": [17, 19, 119], "34": [17, 19], "03": [17, 19], "06": [17, 19], "36": 17, "97": [17, 19], "92": 17, "84": [17, 19], "75": 17, "566": 17, "231": 17, "197": 17, "010": 17, "046": 17, "250": 17, "98": [17, 19], "270": 17, "qg": [17, 91, 238], "300": 17, "22": [17, 19, 25], "mu_sm_fr": 17, "sm_fr": 17, "sm_ub": 17, "sm_to": 17, "mu_sm_to": 17, "762": 17, "375": 17, "760": 17, "prototyp": [17, 19, 113, 279], "wider": 18, "rang": 18, "fictiti": 18, "wide": [18, 267], "verifi": [18, 55], "facil": 18, "sai": 18, "_g": 18, "proport": 18, "imped": [18, 19, 97, 99], "_3": 18, "_4": 18, "_5": 18, "_6": 18, "_7": 18, "_8": 18, "dme_gizmo": 18, "bus_1": 18, "bus_2": 18, "bus_3": 18, "y1r": 18, "y1i": 18, "y2r": 18, "y2i": 18, "m1r": 18, "m1i": 18, "m2r": 18, "m2i": 18, "lr": 18, "li": 18, "ir": 18, "ii": 18, "ni": 18, "sr": 18, "si": [18, 214], "zr1": 18, "zi1": 18, "zr2": 18, "zi2": 18, "bus1": 18, "bus2": 18, "bus3": 18, "until": [18, 271], "look": [18, 55], "dme_branch": [18, 57, 84, 279], "focu": 18, "assumpt": 18, "nme_gizmo": 18, "16": [18, 19], "nme_gizmo_ac": 18, "17": [18, 30], "zmax": 18, "vname_r": 18, "d_gizmo": 18, "vname_i": 18, "y1": 18, "1j": 18, "y2": 18, "m1": 18, "m2": 18, "ss": 18, "zz": 18, "j1": [18, 271], "j2": 18, "j3": 18, "spars": [18, 22, 29, 30, 114, 115, 116, 214, 218], "arbitrarili": 18, "obei": 18, "zr1_gizmo": 18, "nme_gizmo_acc": 18, "nme_gizmo_acp": 18, "xt_gizmo": 18, "mind": 19, "enhanc": 19, "plan": 19, "futur": 19, "don": 19, "t_run_mp_3p": 19, "t_case3p_a": 19, "0b1": 19, "feb": [19, 40], "2024": [19, 40], "residu": 19, "375e": 19, "042e": 19, "287e": 19, "179e": 19, "961e": 19, "570e": 19, "967e": 19, "405e": 19, "05": [19, 25], "400e": 19, "090e": 19, "908e": 19, "newton": [19, 25], "converg": 19, "ph": [19, 25], "6109": 19, "kw": [19, 92, 97, 100, 110], "4206": 19, "kvar": [19, 92, 97, 110], "5450": 19, "2442": 19, "561": 19, "1173": 19, "590": 19, "kv": [19, 85, 86, 110], "1996": 19, "120": 19, "1637": 19, "1105": 19, "0821": 19, "119": 19, "26": 19, "3055": 19, "2547": 19, "123": 19, "2028": 19, "114": 19, "79": 19, "1750": 19, "9298": 19, "126": 19, "80": 19, "8327": 19, "102": 19, "1341": 19, "42": 19, "970": 19, "52": 19, "2096": 19, "41": 19, "2672": 19, "1894": 19, "1275": 19, "8500": 19, "1800": 19, "9000": 19, "2375": 19, "9500": 19, "229": 19, "345": 19, "66": 19, "152": 19, "455": 19, "689": 19, "1036": 19, "1364": 19, "230": 19, "144": 19, "72": 19, "1323": 19, "881": 19, "2043": 19, "1133": 19, "2598": 19, "1508": 19, "1337": 19, "963": 19, "2074": 19, "1319": 19, "2652": 19, "1830": 19, "790": 19, "871": 19, "780": 19, "xfrm": 19, "xfmr": 19, "substat": 19, "bus3p": [19, 61, 89, 268], "line3p": [19, 268], "xfrm3p": 19, "load3p": [19, 268], "gen3p": [19, 268], "lc": [19, 76, 97], "mile": 19, "configur": 19, "referenc": [19, 97], "freq": [19, 97], "frequenc": [19, 97], "hertz": 19, "4bu": 19, "unb": 19, "dss": 19, "bal": 19, "opendss": 19, "ieee": [19, 25], "ground": 19, "wye": 19, "sourceforg": 19, "net": [19, 260], "electricdss": 19, "head": 19, "tree": 19, "trunk": 19, "distrib": 19, "ieeetestcas": 19, "basemva": 19, "hz": [19, 97], "basekva": 19, "busid": 19, "basekv": 19, "vm1": [19, 86], "vm2": [19, 86], "vm3": [19, 86, 227], "va1": [19, 86], "va2": [19, 86], "va3": [19, 86, 227], "brid": 19, "lcid": 19, "len": [19, 97], "5280": 19, "2500": 19, "xfid": 19, "xfmr3p": [19, 268], "6000": 19, "ldid": 19, "ldbu": 19, "pd1": [19, 100], "pd2": [19, 100], "pd3": [19, 100], "ldpf1": 19, "ldpf2": 19, "ldpf3": 19, "genid": 19, "gbu": 19, "vg1": 19, "vg2": 19, "vg3": 19, "pg1": [19, 92], "pg2": [19, 92], "pg3": [19, 92, 235], "qg1": [19, 92], "qg2": [19, 92], "qg3": [19, 92, 235], "r11": 19, "r21": 19, "r31": 19, "r22": 19, "r32": 19, "r33": 19, "x11": 19, "x21": 19, "x31": 19, "x22": 19, "x32": 19, "x33": 19, "c11": 19, "c21": 19, "c31": 19, "c22": 19, "c32": 19, "c33": 19, "457541": 19, "15594": 19, "153474": 19, "466617": 19, "157996": 19, "461462": 19, "501648": 19, "384909": 19, "04813": 19, "423624": 19, "06502": 19, "0671": 19, "86241": 19, "85323": 19, "875": 19, "09098": 19, "3254": 19, "t_case3p_b": 19, "t_case3p_c": 19, "t_case3p_d": 19, "t_case3p_": 19, "t_case3p_f": 19, "21": 19, "t_case3p_g": 19, "t_case3p_h": 19, "home": 20, "goal": 20, "restructur": 20, "still": [20, 44, 45, 48, 49, 51, 55], "donat": 20, "detect": [21, 22, 23, 24, 37, 40, 41, 42, 55, 56], "lu": [21, 29], "privat": [21, 22, 23, 24, 36, 41, 42, 55], "lu_vec": 21, "pardiso": [22, 23, 24, 25, 29, 32], "parallel": 22, "direct": [22, 29], "have_feature_pardiso_legaci": [22, 24, 36, 37], "have_feature_pardiso_object": [22, 23, 36, 37], "pardiso_legaci": 23, "v5": 23, "mex": 23, "have_feature_pardiso": [23, 24, 36, 37], "pardiso_object": 24, "v6": 24, "later": [24, 119], "f_fcn": 25, "xmin": [25, 30], "xmax": [25, 30], "gh_fcn": 25, "hess_fcn": 25, "exitflag": [25, 30], "nlp": [25, 31, 32, 37], "minim": [25, 26], "subject": [25, 27, 30], "inequ": 25, "9th": 25, "d2f": [25, 59, 149], "infti": [25, 30], "dh": [25, 115], "dg": [25, 116, 264], "lagrangian": 25, "muv": [25, 115], "lxx": 25, "eqnonlin": 25, "ineqnonlin": 25, "parenthes": 25, "linsolv": 25, "feastol": 25, "1e": 25, "toler": [25, 48, 106], "gradtol": 25, "comptol": 25, "complementar": 25, "costtol": 25, "max_it": 25, "150": 25, "step_control": 25, "enabl": 25, "sc": 25, "red_it": 25, "reduct": 25, "cost_mult": 25, "improv": 25, "3rd": [25, 46, 52], "xi": 25, "99995": 25, "alpha": [25, 59], "sigma": 25, "z0": [25, 66], "slack": [25, 151, 159], "alpha_min": 25, "alpha_p": 25, "alpha_d": 25, "smaller": 25, "rho_min": 25, "rho_t": 25, "rho_max": 25, "mu_threshold": 25, "kt": 25, "forc": 25, "max_steps": 25, "1e10": 25, "norm": 25, "exce": 25, "altern": [25, 29, 30], "algorithm": [25, 29], "exit": [25, 30, 35, 54], "reach": [25, 30], "fail": [25, 30, 46, 48, 49, 52, 53, 262, 264, 266], "hist": [25, 30], "trajectori": [25, 30], "feascond": [25, 30], "gradcond": [25, 30], "compcond": [25, 30], "costcond": [25, 30], "gamma": [25, 30], "stepsiz": [25, 30], "alphap": [25, 30], "alphad": [25, 30], "messag": [25, 30, 46, 48, 49, 51, 52, 260], "langrang": [25, 30], "kuhn": [25, 30], "tucker": [25, 30], "mu_l": [25, 30], "mu_u": [25, 30], "almost": [25, 30], "fmincon": 25, "toolbox": [25, 30, 36, 55], "aeq": [25, 30], "beq": [25, 30], "en": 25, "wikipedia": 25, "wiki": 25, "nonlinear_program": 25, "f2": 25, "nargout": 25, "gh2": 25, "hess2": 25, "nargin": [25, 55], "rai": 25, "wang": 25, "hi": 25, "phd": 25, "dissert": 25, "applic": 25, "multi": [25, 272], "period": 25, "secur": 25, "market": 25, "thesi": 25, "cornel": 25, "univers": 25, "2007": 25, "murillo": 25, "sanchez": 25, "thoma": 25, "issu": [25, 55, 272], "transact": 25, "vol": 25, "aug": 25, "1185": 25, "1193": 25, "doi": 25, "1109": 25, "tpwr": 25, "901301": 25, "unconstrain": 26, "banana": 26, "x_1": [27, 59], "x_2": [27, 59], "x_3": 27, "varargin": [28, 43, 59, 76, 79, 119, 126, 131, 133, 136, 138, 140, 149, 213, 218, 271, 275, 276, 277, 278], "mpver": 28, "previou": 29, "qa": 29, "gilbert": 29, "peierl": 29, "permut": 29, "umfpack": 29, "rh": [29, 59], "alwai": 29, "backslash": 29, "decomposit": 29, "substitut": 29, "short": [29, 64, 83, 114, 116, 117, 118], "cut": 29, "overhead": 29, "thu": 29, "better": 29, "small": 29, "nout": 29, "vec": 29, "thresh": 29, "lu3": 29, "lu3a": 29, "lu4": 29, "lu5": 29, "lu3m": 29, "lu3am": 29, "lu4m": 29, "lu5m": 29, "paren": 29, "arg": [29, 213, 271], "amd": 29, "pivot": 29, "threshold": 29, "mtype": 29, "nonsymmetr": 29, "iparm": 29, "1st": [29, 115, 214], "2nd": [29, 46, 52, 115, 213, 214], "dparm": 29, "tr": 29, "miss": [30, 114, 115, 118, 214, 215, 216], "quadprog": 30, "v8doc": 30, "sa": 30, "sashtml": 30, "iml": 30, "chap8": 30, "sect12": 30, "htm": 30, "1003": 30, "quiet": [31, 32, 33, 34, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55], "mplinsolv": [33, 36, 37], "qps_mip": [34, 36, 37], "exit_on_fail": [35, 54], "unless": [35, 46, 48, 49, 51, 52, 54, 120, 213], "t_run_test": [35, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56], "all_ok": [35, 50, 54], "web": [36, 38, 39, 281], "asid": 36, "mipsver": [36, 37], "mips_example1": [36, 37], "mips_example2": [36, 37], "test_mip": [36, 37], "t_mip": [36, 37], "t_mips_pardiso": [36, 37], "t_mplinsolv": [36, 37], "t_qps_mip": [36, 37], "have_feature_lu_vec": [36, 37], "rtype": 40, "toggl": 40, "ver_str": 40, "vstr": 40, "ver_num": 40, "vnum": 40, "rdate": 40, "all_info": 40, "clear_cach": 40, "cach": [40, 263, 265], "subsequ": 40, "none": [40, 58], "boolean": [40, 44, 46, 48, 49, 50, 52, 58, 59, 61, 67, 68, 213, 218], "availabl": 40, "clear": 40, "011004": 40, "av": 40, "caus": 40, "have_feature_": 40, "question": 40, "oppos": [40, 59, 271, 272], "disp": [40, 119], "have_feature_matlab": [40, 55, 56], "have_feature_octav": [40, 55, 56], "num_of_test": 44, "counter": [44, 45, 260], "t_ok": [44, 45, 46, 48, 51, 52, 53, 55, 56], "t_i": [44, 45, 46, 49, 51, 52, 53, 55, 56], "t_file_match": [44, 45, 48, 49, 51, 52, 53, 55, 56], "t_str_match": [44, 45, 46, 48, 49, 51, 53, 55, 56], "t_skip": [44, 45, 46, 48, 49, 52, 55, 56], "t_end": [44, 46, 48, 49, 50, 51, 52, 55, 56], "pi": [44, 45, 48, 49, 51, 55], "finish": [45, 260], "statist": 45, "t_begin": [45, 46, 48, 49, 50, 51, 52, 55, 56], "got_fnam": 46, "exp_fnam": 46, "msg": [46, 48, 49, 51, 52], "rep": [46, 52], "del_got_fnam": 46, "ok": [46, 48, 49, 52, 55], "ignor": [46, 161], "compar": [46, 52], "regexprep": [46, 52], "strrep": [46, 52], "eol": [46, 52], "test_generated_output": [46, 52], "txt": [46, 52], "expected_output": [46, 52], "mytest": [46, 52], "got": [48, 52], "prec": 48, "increment": [48, 49, 51], "nan": 48, "consid": [48, 218], "cond": 49, "expr": 49, "test_nam": 50, "t_loadcas": 50, "t_jacobian": 50, "t_hessian": 50, "skip": [51, 55], "strcmp": 52, "fileread": 52, "among": 55, "familiar": 55, "clone": 55, "repositori": 55, "locat": 55, "choic": 55, "mptestxxx": 55, "xxx": 55, "kept": 55, "denot": [55, 84, 88, 94, 96, 104, 105], "test_mptest": [55, 56], "resembl": 55, "t_test_fcn": [55, 56], "t_have_featur": [55, 56], "elaps": [55, 260], "write": 55, "mptest_ex1": 55, "foo": 55, "bar": 55, "test_everything_ex1": 55, "09": 55, "mptestver": [55, 56], "guidelin": 55, "report": 55, "claus": 55, "bsd": 55, "agenc": 55, "task_pf_legaci": [57, 279], "task_cpf_legaci": [57, 279], "task_opf_legaci": [57, 66, 279], "task_shared_legaci": [57, 262, 264, 266, 279], "dme_branch_opf": [57, 279], "dme_bus_opf": [57, 279], "dme_gen_opf": [57, 279], "dme_load_cpf": [57, 279], "dme_load_opf": [57, 279], "dme_shunt_cpf": [57, 279], "dme_shunt": [57, 108, 109, 279], "dme_shunt_opf": [57, 279], "dm_converter_mpc2_legaci": [57, 264, 279], "dmce_branch_mpc2": [57, 279], "dmce_bus_mpc2": [57, 279], "dmce_load_mpc2": [57, 267, 279], "dmce_shunt_mpc2": [57, 279], "net_model_ac": [57, 215, 216, 279], "net_model_acc": [57, 279], "nme_branch_ac": [57, 221, 222, 279], "nme_branch_acc": [57, 279], "nme_branch_acp": [57, 279], "nme_branch_dc": [57, 279], "nme_bus_acc": [57, 279], "nme_bus_dc": [57, 279], "nme_gen_ac": [57, 239, 240, 279], "nme_gen_acc": [57, 279], "nme_gen_dc": [57, 279], "nme_load_ac": [57, 251, 252, 279], "nme_load_acc": [57, 279], "nme_load_acp": [57, 279], "nme_load_dc": [57, 279], "nme_shunt": [57, 255, 258, 279], "nme_shunt_ac": [57, 256, 257, 279], "nme_shunt_acc": [57, 279], "nme_shunt_acp": [57, 279], "nme_shunt_dc": [57, 279], "math_model_pf": [57, 142, 147, 279], "math_model_pf_ac": [57, 143, 144, 145, 146, 279], "math_model_pf_acci": [57, 279], "math_model_pf_acc": [57, 279], "math_model_pf_acpi": [57, 279], "math_model_pf_acp": [57, 279], "math_model_pf_dc": [57, 279], "math_model_cpf_acc": [57, 122, 279], "math_model_cpf_acci": [57, 279], "math_model_cpf_acp": [57, 125, 279], "math_model_cpf_acpi": [57, 279], "math_model_opf": [57, 120, 128, 139, 279], "math_model_opf_ac": [57, 129, 134, 279], "math_model_opf_acci": [57, 131, 279], "math_model_opf_acci_legaci": [57, 279], "math_model_opf_accs_legaci": [57, 279], "math_model_opf_acpi": [57, 136, 279], "math_model_opf_acpi_legaci": [57, 279], "math_model_opf_acps_legaci": [57, 279], "math_model_opf_dc": [57, 140, 279], "math_model_opf_dc_legaci": [57, 279], "mm_shared_pfcpf": [57, 120, 151, 159, 279], "mm_shared_pfcpf_ac": [57, 153, 156, 279], "mm_shared_pfcpf_ac_i": [57, 154, 157, 279], "mm_shared_pfcpf_acc": [57, 123, 144, 154, 279], "mm_shared_pfcpf_acci": [57, 122, 143, 279], "mm_shared_pfcpf_acp": [57, 126, 146, 157, 279], "mm_shared_pfcpf_acpi": [57, 125, 145, 279], "mm_shared_pfcpf_dc": [57, 147, 279], "mm_shared_opf_legaci": [57, 131, 133, 136, 138, 140, 264, 279], "mme_branch_pf_ac": [57, 279], "mme_branch_pf_dc": [57, 279], "mme_branch_opf": [57, 162, 165, 279], "mme_branch_opf_ac": [57, 163, 164, 279], "mme_branch_opf_acc": [57, 279], "mme_branch_opf_acp": [57, 279], "mme_branch_opf_dc": [57, 279], "mme_bu": [57, 172, 175, 176, 177, 279], "mme_bus_pf_ac": [57, 279], "mme_bus_pf_dc": [57, 279], "mme_bus_opf_ac": [57, 173, 174, 279], "mme_bus_opf_acc": [57, 279], "mme_bus_opf_acp": [57, 279], "mme_bus_opf_dc": [57, 279], "mme_gen_pf_ac": [57, 279], "mme_gen_pf_dc": [57, 279], "mme_gen_opf": [57, 189, 190, 279], "mme_gen_opf_ac": [57, 279], "mme_gen_opf_dc": [57, 279], "mme_load": [57, 203, 204, 279], "mme_load_pf_ac": [57, 202, 279], "mme_load_pf_dc": [57, 279], "mme_load_cpf": [57, 279], "mme_shunt": [57, 209, 210, 279], "mme_shunt_pf_ac": [57, 208, 279], "mme_shunt_pf_dc": [57, 279], "mme_shunt_cpf": [57, 279], "mp_table_subclass": [57, 59, 60, 279], "mapped_arrai": [57, 112, 279], "belong": [57, 60, 152], "dmce_reserve_gen_mpc2": [57, 270, 279], "dmce_reserve_zone_mpc2": [57, 270, 279], "dme_reserve_gen": [57, 270, 279], "dme_reserve_zon": [57, 270, 279], "mme_reserve_gen": [57, 270, 279], "mme_reserve_zon": [57, 270, 279], "dmce_bus3p_mpc2": [57, 268, 279], "dmce_gen3p_mpc2": [57, 268, 279], "dmce_load3p_mpc2": [57, 268, 279], "dmce_line3p_mpc2": [57, 268, 279], "dmce_xfmr3p_mpc2": [57, 268, 279], "dmce_buslink_mpc2": [57, 268, 279], "dme_bus3p": [57, 87, 268, 279], "dme_gen3p": [57, 93, 268, 279], "dme_load3p": [57, 101, 268, 279], "dme_line3p": [57, 98, 268, 279], "dme_xfmr3p": [57, 111, 268, 279], "dme_buslink": [57, 90, 268, 279], "dme_bus3p_opf": [57, 268, 279], "dme_gen3p_opf": [57, 268, 279], "dme_load3p_opf": [57, 268, 279], "dme_line3p_opf": [57, 268, 279], "dme_xfmr3p_opf": [57, 268, 279], "dme_buslink_opf": [57, 268, 279], "nme_bus3p": [57, 226, 227, 279], "nme_bus3p_acc": [57, 268, 279], "nme_bus3p_acp": [57, 268, 279], "nme_gen3p": [57, 236, 237, 279], "nme_gen3p_acc": [57, 268, 279], "nme_gen3p_acp": [57, 268, 279], "nme_load3p": [57, 268, 279], "nme_line3p": [57, 268, 279], "nme_xfmr3p": [57, 268, 279], "nme_buslink": [57, 232, 233, 279], "nme_buslink_acc": [57, 268, 279], "nme_buslink_acp": [57, 268, 279], "mme_bus3p": [57, 170, 171, 268, 279], "mme_gen3p": [57, 187, 268, 279], "mme_line3p": [57, 200, 268, 279], "mme_xfmr3p": [57, 212, 268, 279], "mme_buslink": [57, 179, 182, 279], "mme_buslink_pf_ac": [57, 183, 184, 279], "mme_buslink_pf_acc": [57, 268, 279], "mme_buslink_pf_acp": [57, 268, 279], "mme_bus3p_opf_acc": [57, 268, 279], "mme_bus3p_opf_acp": [57, 268, 279], "mme_gen3p_opf": [57, 268, 279], "mme_line3p_opf": [57, 268, 279], "mme_xfmr3p_opf": [57, 268, 279], "mme_buslink_opf": [57, 180, 181, 279], "mme_buslink_opf_acc": [57, 268, 279], "mme_buslink_opf_acp": [57, 268, 279], "enumer": 58, "is_valid": 58, "seal": [58, 272], "poly_n": 59, "pwl_n": 59, "pwl_qty": 59, "pwl_cost": 59, "dot": [59, 271, 272], "var_nam": [59, 68, 271, 272], "within": [59, 60, 213, 272], "subsref": [59, 60, 68, 119, 271, 272], "subsasgn": [59, 60, 119, 271, 272], "reason": 59, "deleg": [59, 115, 272], "readabl": [59, 114, 116, 117, 118, 213], "c_0": 59, "c_1": 59, "c_n": 59, "c_j": 59, "f_1": 59, "f_2": 59, "x_n": 59, "f_n": 59, "quantii": 59, "coordin": [59, 260], "x_j": 59, "piecwis": 59, "f_j": 59, "pu_bas": [59, 60], "polynmi": 59, "i0": [59, 119, 188, 194], "i2": [59, 188, 194], "ng": [59, 60], "x_scale": 59, "ccm": 59, "sum_": 59, "f_i": 59, "x_i": 59, "pre": [59, 66, 262, 264, 266, 267], "subset": [59, 115, 116, 118, 214, 215, 216], "eval_poly_fcn": 59, "diff_poly_fcn": 59, "ideal": 60, "normal": 60, "cumbersom": 60, "userdata": 61, "pp_flag": [61, 63], "pp_section_label": 61, "pp_section_list": [61, 63], "pp_have_sect": [61, 67], "pp_section": 61, "pp_get_head": [61, 67], "pp_get_headers_cnt": 61, "pp_get_headers_ext": 61, "pp_data": [61, 67], "set_bus_v_lims_via_vg": 61, "new_dm": [61, 67], "status": 61, "semicolon": [61, 64, 67, 119, 120, 213, 218, 271], "retun": [61, 64, 67, 119, 120, 213, 218, 271], "sec": 61, "elm": 61, "s0": 61, "s1": 61, "suppress": 61, "ne": 61, "blank_lin": 61, "blank": 61, "pp_get_headers_oth": [61, 63, 106], "noth": [61, 67, 113, 120, 260], "use_vg": 61, "fraction": 61, "interpol": [61, 261], "shunt": [62, 81, 83, 97, 107, 108, 109, 207, 208, 209, 210, 254, 255, 256, 257, 258], "format_tag": [64, 65], "export": [64, 65, 67, 68, 102, 108, 148, 262, 264, 266], "init_export": [64, 65], "new_dmc": 64, "prepar": [64, 67, 161], "fname": [64, 65, 260], "fname_out": 64, "classic": 65, "legacy_user_mod_input": 66, "legacy_user_nln_constraint": 66, "fparm": 66, "h1": 66, "cw": 66, "zl": 66, "zu": 66, "user_constraint": 66, "nle": [66, 264], "nli": [66, 264], "undefin": 67, "definit": 67, "table_exist": 67, "dm_converter_el": 67, "pp_row": 67, "pp_get_foot": 67, "footer": 67, "pp_have_section_cnt": 67, "pp_data_cnt": [67, 83, 85], "pp_have_section_ext": [67, 85], "pp_data_ext": [67, 85, 88], "pp_get_title_det": 67, "titl": 67, "pp_get_footers_det": [67, 91, 99, 104, 107], "nc": [67, 68], "sole": 67, "subclass_var1": 67, "subclass_var2": 67, "newli": 67, "pp_have_section_oth": [67, 106], "pp_data_oth": [67, 106], "insert": [67, 68], "newlin": 67, "data_sub": [68, 79, 80], "get_import_s": [68, 78, 79, 81], "get_export_s": [68, 78, 79, 81], "get_input_table_valu": 68, "import_col": 68, "export_col": 68, "bus_status_import": [70, 71], "bus_name_import": 71, "bus_name_export": 71, "buslink": [72, 89, 90, 178, 179, 180, 181, 182, 183, 184, 231, 232, 233, 268], "pwl1": 74, "block": [74, 213], "start_cost_import": 74, "start_cost_export": 74, "gen_cost_import": 74, "p_or_q": 74, "gen_cost_export": 74, "gencost0": 74, "create_line_construction_t": [76, 97], "scale_factor_fcn": 78, "zip_sf": 78, "sys_wide_zip_load": [78, 267], "import_cost": 79, "import_qti": 79, "import_ramp": 79, "import_req": 80, "import_zon": 80, "resist": [83, 97, 110], "reactanc": [83, 97, 110], "g_fr": 83, "conduct": [83, 107], "b_fr": 83, "g_to": 83, "b_to": 83, "sm_ub_a": 83, "long": 83, "appar": [83, 115], "rate": [83, 104], "sm_ub_b": 83, "sm_ub_c": 83, "emerg": 83, "cm_ub_a": 83, "cm_ub_b": 83, "cm_ub_c": 83, "vad_lb": 83, "vad_ub": 83, "tm": 83, "nomin": [83, 99, 107], "ratio": 83, "ta": 83, "shift": 83, "degre": [83, 84, 85, 86, 96], "pl_fr": 83, "ql_fr": 83, "pl_to": 83, "ql_to": 83, "xformer": 83, "radian": [83, 85, 86], "rate_a": 83, "mu_flow_fr_ub": 84, "mu_flow_to_ub": 84, "mu_vad_lb": 84, "mu_vad_ub": 84, "usd": [84, 88, 91, 94, 96, 104, 105], "pp_get_title_lim": [84, 106], "base_kv": [85, 86, 110], "vm_lb": 85, "vm_ub": 85, "va_start": 85, "set_bus_type_ref": 85, "set_bus_type_pq": 85, "vm1_start": 86, "vm2_start": 86, "vm3_start": 86, "va1_start": 86, "va2_start": 86, "va3_start": 86, "lam_p": [88, 276, 277], "lam_q": 88, "mu_vm_lb": 88, "mu_vm_ub": 88, "pg1_start": [89, 92], "pg2_start": [89, 92], "pg3_start": [89, 92], "qg1_start": [89, 92], "qg2_start": [89, 92], "qg3_start": [89, 92], "pg_lb": [91, 213], "pg_ub": [91, 213], "qg_lb": 91, "qg_ub": 91, "startup_cost_cold": 91, "cold": 91, "startup": 91, "pc1": 91, "pc2": 91, "qc1_lb": 91, "qc1_ub": 91, "qc2_lb": 91, "qc2_ub": 91, "bus_on": [91, 92], "pg_start": 91, "qg_start": 91, "violated_q_lim": 91, "isload": 91, "vm1_setpoint": 92, "vm2_setpoint": 92, "vm3_setpoint": 92, "cost_pg": [94, 96], "cost_qg": 94, "mu_pg_lb": 94, "mu_pg_ub": [94, 104], "mu_qg_lb": 94, "mu_qg_ub": 94, "max_pwl_gencost": 94, "fr": 95, "length": [97, 119], "pl1_fr": [97, 110], "ql1_fr": [97, 110], "pl2_fr": [97, 110], "ql2_fr": [97, 110], "pl3_fr": [97, 110], "ql3_fr": [97, 110], "pl1_to": [97, 110], "ql1_to": [97, 110], "pl2_to": [97, 110], "ql2_to": [97, 110], "pl3_to": [97, 110], "ql3_to": [97, 110], "lc_tab": 97, "symmetr": 97, "3x3": 97, "yc": 97, "lc_table_var_nam": 97, "vec2symmat": 97, "symmat2vec": 97, "pd": 99, "p_p": 99, "demand": [99, 100, 107], "qd": 99, "q_p": 99, "pd_i": 99, "p_i": 99, "qd_i": 99, "q_i": 99, "pd_z": 99, "p_z": 99, "qd_z": 99, "q_z": 99, "_p": 99, "_z": 99, "pf1": 100, "pf2": 100, "pf3": 100, "adjust": [102, 108, 263], "dmb": [102, 108], "dmt": [102, 108], "qty": 104, "ramp10": 104, "minut": 104, "ramp": 104, "alloc": [104, 151, 159], "r_lb": 104, "r_ub": 104, "total_cost": 104, "prc": [104, 105], "req": 105, "violat": 106, "pp_set_tols_lim": 106, "pp_rows_oth": 106, "pp_get_footers_oth": 106, "pp_rows_lim": 106, "pp_get_footers_lim": 106, "pp_data_lim": 106, "g_": [107, 116], "b_": 107, "absorb": 107, "class_list": 112, "accept": 112, "interpret": 112, "aspect": [113, 270], "xt": 113, "form_nam": [114, 116, 117, 118, 120, 122, 123, 125, 126, 130, 132, 135, 137, 139, 143, 144, 145, 146, 147], "form_tag": [114, 116, 117, 118, 120, 122, 123, 125, 126, 130, 132, 135, 137, 139, 143, 144, 145, 146, 147], "model_param": [114, 115, 118], "model_vvar": [114, 116, 117, 118], "model_zvar": [114, 115, 118], "get_param": 114, "find_form_class": 114, "acc": [114, 116], "acp": [114, 117, 120], "properi": 114, "vtype": [114, 213], "p1": 114, "p2": 114, "pn": 114, "pa": 114, "namea": 114, "pb": 114, "nameb": 114, "canon": 114, "form_class": 114, "netork": 114, "longest": 114, "compoent": 115, "params_ncol": [115, 118], "inln_hess": 115, "snln_hess": 115, "port_inj_curr": [115, 116, 117, 214], "port_inj_pow": [115, 116, 117, 118, 214], "port_inj_current_hess": [115, 116, 117, 214], "port_inj_power_hess": [115, 116, 117, 214], "port_inj_current_jac": [115, 116, 117], "port_inj_current_hess_v": [115, 116, 117], "port_inj_current_hess_vz": [115, 116, 117], "port_inj_power_jac": [115, 116, 117], "port_inj_power_hess_v": [115, 116, 117], "port_inj_power_hess_vz": [115, 116, 117], "port_apparent_power_lim_fcn": 115, "squar": [115, 116], "port_active_power_lim_fcn": 115, "port_active_power2_lim_fcn": 115, "port_current_lim_fcn": 115, "port_apparent_power_lim_hess": 115, "port_active_power_lim_hess": 115, "port_active_power2_lim_hess": 115, "port_current_lim_hess": 115, "aux_data_va_vm": [115, 116, 117], "param_ncol": [115, 118], "x_": [115, 116, 117, 214, 218, 250], "sysx": [115, 116, 117, 118, 214, 218, 250], "iv1": 115, "iv2": 115, "izr": 115, "izi": 115, "partial": 115, "gi_": 115, "formula": 115, "sv1": 115, "sv2": 115, "szr": 115, "szi": 115, "dimension": [115, 116, 213, 214], "mulipli": [115, 116, 214], "v_": [115, 116, 117, 151, 218], "invdiagv": [115, 116, 117], "diagslincj": [115, 116, 117], "z_": [115, 116, 117, 151, 218], "diaginv": [115, 116, 117], "dlamj": [115, 116, 117], "diagv": [115, 116, 117], "diagvi": [115, 116, 117], "diagilincj": [115, 116, 117], "hmax": 115, "h_": 115, "d2h": 115, "repesent": [116, 117], "va_fcn": [116, 180], "va_hess": [116, 180], "vm2_fcn": [116, 180], "vm2_hess": [116, 180], "iu": 116, "iw": 116, "iuu": 116, "iuw": 116, "iww": 116, "iuzr": 116, "iuzi": 116, "iwzr": 116, "iwzi": 116, "su": 116, "sw": 116, "suu": 116, "suw": 116, "sww": 116, "suzr": 116, "suzi": 116, "swzr": 116, "swzi": 116, "connvert": 116, "va_lb": 116, "va_ub": 116, "d2g": [116, 214], "vm2_lb": 116, "vm2_ub": 116, "iva": 117, "ivm": 117, "ivava": 117, "ivavm": 117, "ivmvm": 117, "ivazr": 117, "ivazi": 117, "ivmzr": 117, "ivmzi": 117, "sva": 117, "svm": 117, "svava": 117, "svavm": 117, "svmvm": 117, "svazr": 117, "svazi": 117, "svmzr": 117, "svmzi": 117, "ma": 119, "width": 119, "height": 119, "depth": 119, "treat": 119, "add_el": 119, "red": 119, "color": 119, "weight": 119, "delete_el": 119, "has_nam": 119, "add_nam": 119, "name2idx": 119, "new_obj": 119, "num_el": 119, "dim": [119, 271], "overwrit": 119, "corrspond": 119, "aux_data": 120, "task_nam": [120, 127, 141], "add_aux_data": 120, "build_base_aux_data": 120, "add_system_var": [120, 127, 141], "add_system_constraint": [120, 131, 133, 136, 138, 140], "add_node_balance_constraint": [120, 122, 123, 125, 126, 130, 132, 135, 137, 139, 143, 144, 145, 146, 147], "add_system_cost": [120, 131, 133, 136, 138, 140], "update_nm_var": 120, "build_aux_data": [120, 127, 150, 154, 157, 158, 159], "mmx": [120, 129, 134, 139, 153, 156, 159], "nm_var": 120, "var_map": 120, "nm_var_typ": 120, "nm_i1": 120, "nm_in": 120, "nm_idx": 120, "mm_i1": 120, "mm_in": 120, "mm_idx": 120, "convert_x_m2n": [120, 129, 134, 139, 153, 156, 159], "math_model_cpf": [121, 124], "event": 124, "event_vlim": 124, "cx": 124, "callback_vlim": 124, "nx": 124, "px": 124, "warm": [126, 261], "expand_z_warmstart": 126, "solve_opts_warmstart": 126, "interior_va": [127, 129], "nodal_current_balance_fcn": 128, "nodal_power_balance_fcn": 128, "nodal_current_balance_hess": 128, "nodal_power_balance_hess": 128, "node_power_balance_pric": [130, 132, 135, 137], "formluat": [131, 133, 136, 138, 140], "add_named_set": [131, 133, 136, 138, 140, 213], "def_set_typ": [131, 133, 136, 138, 140, 213, 214, 215, 216, 217], "init_set_typ": [131, 133, 136, 138, 140, 213], "legacy_user_var_nam": [131, 133, 136, 138, 140], "fast": 146, "gs_x_updat": 146, "zg_x_updat": 146, "fd_jac_approx": 146, "fdpf_b_matrix_model": 146, "alg": 146, "accordingli": 148, "def_set_types_legaci": 149, "init_set_types_legaci": 149, "get_mpc": 149, "om": [149, 264], "build_legaci": 149, "add_legacy_user_var": 149, "add_legacy_user_cost": 149, "add_legacy_user_constraint": 149, "add_legacy_user_constraints_ac": 149, "add_legacy_cost": 149, "cp": 149, "varset": 149, "idx_list": [149, 213], "eval_legacy_cost": 149, "params_legacy_cost": 149, "add_system_varset_pf": 151, "vvar": 151, "typ": 151, "update_z": [151, 159], "sinj": 151, "know": 151, "formuat": [152, 153, 154, 155, 156, 157, 158], "build_aux_data_i": 152, "only_v": [153, 156, 159], "pf_convert": [153, 156, 159], "add_system_vars_pf": [154, 155, 157, 158, 159], "node_balance_equ": [154, 155, 157, 158], "fdpf": 158, "ang_diff_param": 161, "ang_diff_pric": [161, 163], "interior_vm": 172, "avg": 172, "clip": 172, "voltage_constraint": [182, 231], "pf_va_fcn": 183, "pf_vm_fcn": 183, "poly_p": 188, "poly_q": 188, "actv": [188, 194], "bulid": [189, 190], "pq_capability_constraint": 189, "makeapq": 189, "has_pq_cap": 189, "upper_low": 189, "haspqcap": 189, "disp_load_constant_pf_constraint": 189, "makeavl": 189, "the_np": 213, "the_nz": 213, "nv": 213, "add_nod": [213, 218], "add_stat": [213, 218], "stack_matrix_param": 213, "stack_vector_param": 213, "add_port": 213, "set_type_idx_map": 213, "set_type_label": 213, "params_var": 213, "get_node_idx": 213, "get_port_idx": 213, "get_state_idx": 213, "ensure_ref_nod": 213, "vnotz": 213, "vertic": [213, 271, 272], "unus": 213, "set_typ": 213, "group_by_nam": 213, "consolid": 213, "93": 213, "v0": 213, "vl": 213, "vu": 213, "binari": 213, "vr0": 213, "vrmin": 213, "vrmax": 213, "pg0": 213, "zij0": 213, "zij_lb": 213, "zij_ub": 213, "ztype": 213, "nidx": [213, 218], "pidx": 213, "sidx": 213, "skip_ensure_ref": 213, "ntv": [213, 218, 225], "by_elm": 213, "4th": 213, "implicitli": 214, "port_inj_nln": 214, "port_inj_nln_hess": 214, "nodal_complex_current_bal": 214, "nodal_complex_power_bal": 214, "nodal_complex_current_balance_hess": 214, "nodal_complex_power_balance_hess": 214, "get_va": 214, "gv1": 214, "gv2": 214, "gzr": 214, "gzi": 214, "snln_": 214, "inln_": 214, "kcl": 214, "initial_voltage_angl": [215, 216], "math_model_el": 218, "get_nv_": 218, "x2vz": 218, "node_indic": 218, "incidence_matrix": 218, "nv_": 218, "vi_": 218, "simultan": 218, "cd": 218, "idx1": 218, "idx2": 218, "horizont": [218, 271, 272], "ang_diff_fcn": 221, "aang": 221, "lang": 221, "uang": 221, "ang_diff_hess": 221, "vr3": 226, "vi3": 226, "plink": 231, "qlink": 231, "vec2symmat_stack": 247, "port_inj_current_nln": 250, "sd": 250, "port_inj_power_nln": 250, "interact": 260, "mm_opt": 260, "i_dm": 260, "i_nm": 260, "i_mm": 260, "didn": 260, "run_pr": [260, 261, 262, 263, 264, 265, 266, 267], "run_post": [260, 262, 264, 266], "print_soln_head": [260, 263], "failur": 260, "dm_converter_cr": 260, "data_model_cr": 260, "data_model_build": [260, 261], "data_model_build_pr": 260, "data_model_build_post": [260, 263, 264], "network_model_cr": 260, "network_model_build": [260, 261], "network_model_build_pr": 260, "network_model_build_post": [260, 265], "network_model_upd": [260, 261], "math_model_cr": 260, "math_model_build": 260, "math_model_opt": [260, 261], "propag": 260, "mpoopt": 260, "potenti": 260, "handel": 260, "dm_converter_build": 260, "restart": 261, "warmstart": 261, "superclass": [261, 263, 264, 265], "clam": 261, "corrector": 261, "plam": 261, "predictor": 261, "cv": 261, "selector": [261, 263, 265], "current_bal": [261, 263, 265], "legacy_post_run": [262, 264, 266], "post": [262, 264, 266], "run_pre_legaci": [262, 264, 266, 267], "printout": 263, "request": [263, 265], "variat": 264, "opf_model": 264, "lin": 264, "opf_execut": 264, "dcopf_solv": 264, "nlpopf_solv": 264, "ref0": 265, "va_ref0": 265, "fixed_q_idx": 265, "fixed_q_qti": 265, "enforce_q_lim": 265, "correct": 265, "move": 267, "optimi": [268, 269], "reserve_gen": 270, "reserve_zon": 270, "older": 271, "var1": [271, 274], "var2": [271, 274], "name1": 271, "name2": 271, "rownam": 271, "dimensionnam": 271, "focus": 271, "join": 271, "istabl": [271, 272], "concaten": [271, 272], "vertcat": [271, 272], "unfortun": 271, "realli": 271, "last_var": 271, "last_row": 271, "sub_t": 271, "jn": 271, "var_": 271, "t1": [271, 272], "t2": [271, 272], "nest": [271, 272], "extract_named_arg": 271, "row_nam": 271, "dim_nam": 271, "act": 272, "isn": 272, "cannot": 272, "fine": 272, "bug": 272, "savannah": 272, "php": 272, "65037": 272, "emul": 272, "get_tabl": 272, "set_tabl": 272, "nativ": 274, "tablici": 274, "table_class": 274, "print_fnam": [275, 276, 277, 278], "soln_fnam": [275, 276, 277, 278], "case9target": 275, "miscellan": 279, "decrib": 281, "runopf": 281, "underli": 281, "bypass": 281, "use_legacy_cor": 281, "Or": 281, "disabl": 281, "session": 281, "mp_core": 281, "mainli": 281, "mode": 281}, "objects": {"": [[13, 0, 1, "", "generate_autodoc_stubs"], [14, 0, 1, "", "generate_matpower_autodoc"], [15, 0, 1, "", "generate_source_symlinks"], [40, 0, 1, "", "have_feature"], [21, 0, 1, "", "have_feature_lu_vec"], [41, 0, 1, "", "have_feature_matlab"], [42, 0, 1, "", "have_feature_octave"], [22, 0, 1, "", "have_feature_pardiso"], [23, 0, 1, "", "have_feature_pardiso_legacy"], [24, 0, 1, "", "have_feature_pardiso_object"], [26, 0, 1, "", "mips_example1"], [27, 0, 1, "", "mips_example2"], [271, 1, 1, "", "mp_table"], [274, 0, 1, "", "mp_table_class"], [272, 1, 1, "", "mp_table_subclass"], [30, 0, 1, "", "qps_mips"], [275, 0, 1, "", "run_cpf"], [276, 0, 1, "", "run_mp"], [277, 0, 1, "", "run_opf"], [278, 0, 1, "", "run_pf"], [44, 0, 1, "", "t_begin"], [45, 0, 1, "", "t_end"], [46, 0, 1, "", "t_file_match"], [47, 0, 1, "", "t_have_feature"], [48, 0, 1, "", "t_is"], [31, 0, 1, "", "t_mips"], [32, 0, 1, "", "t_mips_pardiso"], [33, 0, 1, "", "t_mplinsolve"], [49, 0, 1, "", "t_ok"], [34, 0, 1, "", "t_qps_mips"], [50, 0, 1, "", "t_run_tests"], [51, 0, 1, "", "t_skip"], [52, 0, 1, "", "t_str_match"], [53, 0, 1, "", "t_test_fcns"], [35, 0, 1, "", "test_mips"], [54, 0, 1, "", "test_mptest"]], "mips": [[25, 0, 1, "", "mips"]], "mp": [[58, 1, 1, "", "NODE_TYPE"], [59, 1, 1, "", "cost_table"], [60, 1, 1, "", "cost_table_utils"], [61, 1, 1, "", "data_model"], [62, 1, 1, "", "data_model_cpf"], [63, 1, 1, "", "data_model_opf"], [64, 1, 1, "", "dm_converter"], [65, 1, 1, "", "dm_converter_mpc2"], [66, 1, 1, "", "dm_converter_mpc2_legacy"], [67, 1, 1, "", "dm_element"], [68, 1, 1, "", "dmc_element"], [69, 1, 1, "", "dmce_branch_mpc2"], [70, 1, 1, "", "dmce_bus3p_mpc2"], [71, 1, 1, "", "dmce_bus_mpc2"], [72, 1, 1, "", "dmce_buslink_mpc2"], [73, 1, 1, "", "dmce_gen3p_mpc2"], [74, 1, 1, "", "dmce_gen_mpc2"], [75, 1, 1, "", "dmce_legacy_dcline_mpc2"], [76, 1, 1, "", "dmce_line3p_mpc2"], [77, 1, 1, "", "dmce_load3p_mpc2"], [78, 1, 1, "", "dmce_load_mpc2"], [79, 1, 1, "", "dmce_reserve_gen_mpc2"], [80, 1, 1, "", "dmce_reserve_zone_mpc2"], [81, 1, 1, "", "dmce_shunt_mpc2"], [82, 1, 1, "", "dmce_xfmr3p_mpc2"], [83, 1, 1, "", "dme_branch"], [84, 1, 1, "", "dme_branch_opf"], [85, 1, 1, "", "dme_bus"], [86, 1, 1, "", "dme_bus3p"], [87, 1, 1, "", "dme_bus3p_opf"], [88, 1, 1, "", "dme_bus_opf"], [89, 1, 1, "", "dme_buslink"], [90, 1, 1, "", "dme_buslink_opf"], [91, 1, 1, "", "dme_gen"], [92, 1, 1, "", "dme_gen3p"], [93, 1, 1, "", "dme_gen3p_opf"], [94, 1, 1, "", "dme_gen_opf"], [95, 1, 1, "", "dme_legacy_dcline"], [96, 1, 1, "", "dme_legacy_dcline_opf"], [97, 1, 1, "", "dme_line3p"], [98, 1, 1, "", "dme_line3p_opf"], [99, 1, 1, "", "dme_load"], [100, 1, 1, "", "dme_load3p"], [101, 1, 1, "", "dme_load3p_opf"], [102, 1, 1, "", "dme_load_cpf"], [103, 1, 1, "", "dme_load_opf"], [104, 1, 1, "", "dme_reserve_gen"], [105, 1, 1, "", "dme_reserve_zone"], [106, 1, 1, "", "dme_shared_opf"], [107, 1, 1, "", "dme_shunt"], [108, 1, 1, "", "dme_shunt_cpf"], [109, 1, 1, "", "dme_shunt_opf"], [110, 1, 1, "", "dme_xfmr3p"], [111, 1, 1, "", "dme_xfmr3p_opf"], [112, 1, 1, "", "element_container"], [113, 1, 1, "", "extension"], [114, 1, 1, "", "form"], [115, 1, 1, "", "form_ac"], [116, 1, 1, "", "form_acc"], [117, 1, 1, "", "form_acp"], [118, 1, 1, "", "form_dc"], [119, 1, 1, "", "mapped_array"], [120, 1, 1, "", "math_model"], [121, 1, 1, "", "math_model_cpf_acc"], [122, 1, 1, "", "math_model_cpf_acci"], [123, 1, 1, "", "math_model_cpf_accs"], [124, 1, 1, "", "math_model_cpf_acp"], [125, 1, 1, "", "math_model_cpf_acpi"], [126, 1, 1, "", "math_model_cpf_acps"], [127, 1, 1, "", "math_model_opf"], [128, 1, 1, "", "math_model_opf_ac"], [129, 1, 1, "", "math_model_opf_acc"], [130, 1, 1, "", "math_model_opf_acci"], [131, 1, 1, "", "math_model_opf_acci_legacy"], [132, 1, 1, "", "math_model_opf_accs"], [133, 1, 1, "", "math_model_opf_accs_legacy"], [134, 1, 1, "", "math_model_opf_acp"], [135, 1, 1, "", "math_model_opf_acpi"], [136, 1, 1, "", "math_model_opf_acpi_legacy"], [137, 1, 1, "", "math_model_opf_acps"], [138, 1, 1, "", "math_model_opf_acps_legacy"], [139, 1, 1, "", "math_model_opf_dc"], [140, 1, 1, "", "math_model_opf_dc_legacy"], [141, 1, 1, "", "math_model_pf"], [142, 1, 1, "", "math_model_pf_ac"], [143, 1, 1, "", "math_model_pf_acci"], [144, 1, 1, "", "math_model_pf_accs"], [145, 1, 1, "", "math_model_pf_acpi"], [146, 1, 1, "", "math_model_pf_acps"], [147, 1, 1, "", "math_model_pf_dc"], [148, 1, 1, "", "mm_element"], [149, 1, 1, "", "mm_shared_opf_legacy"], [150, 1, 1, "", "mm_shared_pfcpf"], [151, 1, 1, "", "mm_shared_pfcpf_ac"], [152, 1, 1, "", "mm_shared_pfcpf_ac_i"], [153, 1, 1, "", "mm_shared_pfcpf_acc"], [154, 1, 1, "", "mm_shared_pfcpf_acci"], [155, 1, 1, "", "mm_shared_pfcpf_accs"], [156, 1, 1, "", "mm_shared_pfcpf_acp"], [157, 1, 1, "", "mm_shared_pfcpf_acpi"], [158, 1, 1, "", "mm_shared_pfcpf_acps"], [159, 1, 1, "", "mm_shared_pfcpf_dc"], [160, 1, 1, "", "mme_branch"], [161, 1, 1, "", "mme_branch_opf"], [162, 1, 1, "", "mme_branch_opf_ac"], [163, 1, 1, "", "mme_branch_opf_acc"], [164, 1, 1, "", "mme_branch_opf_acp"], [165, 1, 1, "", "mme_branch_opf_dc"], [166, 1, 1, "", "mme_branch_pf_ac"], [167, 1, 1, "", "mme_branch_pf_dc"], [168, 1, 1, "", "mme_bus"], [169, 1, 1, "", "mme_bus3p"], [170, 1, 1, "", "mme_bus3p_opf_acc"], [171, 1, 1, "", "mme_bus3p_opf_acp"], [172, 1, 1, "", "mme_bus_opf_ac"], [173, 1, 1, "", "mme_bus_opf_acc"], [174, 1, 1, "", "mme_bus_opf_acp"], [175, 1, 1, "", "mme_bus_opf_dc"], [176, 1, 1, "", "mme_bus_pf_ac"], [177, 1, 1, "", "mme_bus_pf_dc"], [178, 1, 1, "", "mme_buslink"], [179, 1, 1, "", "mme_buslink_opf"], [180, 1, 1, "", "mme_buslink_opf_acc"], [181, 1, 1, "", "mme_buslink_opf_acp"], [182, 1, 1, "", "mme_buslink_pf_ac"], [183, 1, 1, "", "mme_buslink_pf_acc"], [184, 1, 1, "", "mme_buslink_pf_acp"], [185, 1, 1, "", "mme_gen"], [186, 1, 1, "", "mme_gen3p"], [187, 1, 1, "", "mme_gen3p_opf"], [188, 1, 1, "", "mme_gen_opf"], [189, 1, 1, "", "mme_gen_opf_ac"], [190, 1, 1, "", "mme_gen_opf_dc"], [191, 1, 1, "", "mme_gen_pf_ac"], [192, 1, 1, "", "mme_gen_pf_dc"], [193, 1, 1, "", "mme_legacy_dcline"], [194, 1, 1, "", "mme_legacy_dcline_opf"], [195, 1, 1, "", "mme_legacy_dcline_opf_ac"], [196, 1, 1, "", "mme_legacy_dcline_opf_dc"], [197, 1, 1, "", "mme_legacy_dcline_pf_ac"], [198, 1, 1, "", "mme_legacy_dcline_pf_dc"], [199, 1, 1, "", "mme_line3p"], [200, 1, 1, "", "mme_line3p_opf"], [201, 1, 1, "", "mme_load"], [202, 1, 1, "", "mme_load_cpf"], [203, 1, 1, "", "mme_load_pf_ac"], [204, 1, 1, "", "mme_load_pf_dc"], [205, 1, 1, "", "mme_reserve_gen"], [206, 1, 1, "", "mme_reserve_zone"], [207, 1, 1, "", "mme_shunt"], [208, 1, 1, "", "mme_shunt_cpf"], [209, 1, 1, "", "mme_shunt_pf_ac"], [210, 1, 1, "", "mme_shunt_pf_dc"], [211, 1, 1, "", "mme_xfmr3p"], [212, 1, 1, "", "mme_xfmr3p_opf"], [213, 1, 1, "", "net_model"], [214, 1, 1, "", "net_model_ac"], [215, 1, 1, "", "net_model_acc"], [216, 1, 1, "", "net_model_acp"], [217, 1, 1, "", "net_model_dc"], [218, 1, 1, "", "nm_element"], [219, 1, 1, "", "nme_branch"], [220, 1, 1, "", "nme_branch_ac"], [221, 1, 1, "", "nme_branch_acc"], [222, 1, 1, "", "nme_branch_acp"], [223, 1, 1, "", "nme_branch_dc"], [224, 1, 1, "", "nme_bus"], [225, 1, 1, "", "nme_bus3p"], [226, 1, 1, "", "nme_bus3p_acc"], [227, 1, 1, "", "nme_bus3p_acp"], [228, 1, 1, "", "nme_bus_acc"], [229, 1, 1, "", "nme_bus_acp"], [230, 1, 1, "", "nme_bus_dc"], [231, 1, 1, "", "nme_buslink"], [232, 1, 1, "", "nme_buslink_acc"], [233, 1, 1, "", "nme_buslink_acp"], [234, 1, 1, "", "nme_gen"], [235, 1, 1, "", "nme_gen3p"], [236, 1, 1, "", "nme_gen3p_acc"], [237, 1, 1, "", "nme_gen3p_acp"], [238, 1, 1, "", "nme_gen_ac"], [239, 1, 1, "", "nme_gen_acc"], [240, 1, 1, "", "nme_gen_acp"], [241, 1, 1, "", "nme_gen_dc"], [242, 1, 1, "", "nme_legacy_dcline"], [243, 1, 1, "", "nme_legacy_dcline_ac"], [244, 1, 1, "", "nme_legacy_dcline_acc"], [245, 1, 1, "", "nme_legacy_dcline_acp"], [246, 1, 1, "", "nme_legacy_dcline_dc"], [247, 1, 1, "", "nme_line3p"], [248, 1, 1, "", "nme_load"], [249, 1, 1, "", "nme_load3p"], [250, 1, 1, "", "nme_load_ac"], [251, 1, 1, "", "nme_load_acc"], [252, 1, 1, "", "nme_load_acp"], [253, 1, 1, "", "nme_load_dc"], [254, 1, 1, "", "nme_shunt"], [255, 1, 1, "", "nme_shunt_ac"], [256, 1, 1, "", "nme_shunt_acc"], [257, 1, 1, "", "nme_shunt_acp"], [258, 1, 1, "", "nme_shunt_dc"], [259, 1, 1, "", "nme_xfmr3p"], [260, 1, 1, "", "task"], [261, 1, 1, "", "task_cpf"], [262, 1, 1, "", "task_cpf_legacy"], [263, 1, 1, "", "task_opf"], [264, 1, 1, "", "task_opf_legacy"], [265, 1, 1, "", "task_pf"], [266, 1, 1, "", "task_pf_legacy"], [267, 1, 1, "", "task_shared_legacy"], [268, 1, 1, "", "xt_3p"], [269, 1, 1, "", "xt_legacy_dcline"], [270, 1, 1, "", "xt_reserves"]], "mp.NODE_TYPE": [[58, 2, 1, "", "NONE"], [58, 2, 1, "", "PQ"], [58, 2, 1, "", "PV"], [58, 2, 1, "", "REF"], [58, 3, 1, "", "is_valid"]], "mp.cost_table": [[59, 4, 1, "", "cost_table"], [59, 3, 1, "", "diff_poly_fcn"], [59, 3, 1, "", "eval_poly_fcn"], [59, 4, 1, "", "max_pwl_cost"], [59, 3, 1, "", "poly_cost_fcn"], [59, 4, 1, "", "poly_params"], [59, 4, 1, "", "pwl_params"]], "mp.cost_table_utils": [[60, 3, 1, "", "max_pwl_cost"], [60, 3, 1, "", "poly_params"], [60, 3, 1, "", "pwl_params"]], "mp.data_model": [[61, 2, 1, "", "base_kva"], [61, 2, 1, "", "base_mva"], [61, 4, 1, "", "build"], [61, 4, 1, "", "build_params"], [61, 4, 1, "", "copy"], [61, 4, 1, "", "count"], [61, 4, 1, "", "data_model"], [61, 4, 1, "", "display"], [61, 4, 1, "", "initialize"], [61, 4, 1, "", "online"], [61, 4, 1, "", "pp_data"], [61, 4, 1, "", "pp_flags"], [61, 4, 1, "", "pp_get_headers"], [61, 4, 1, "", "pp_get_headers_cnt"], [61, 4, 1, "", "pp_get_headers_ext"], [61, 4, 1, "", "pp_get_headers_other"], [61, 4, 1, "", "pp_have_section"], [61, 4, 1, "", "pp_section"], [61, 4, 1, "", "pp_section_label"], [61, 4, 1, "", "pp_section_list"], [61, 4, 1, "", "pretty_print"], [61, 4, 1, "", "set_bus_v_lims_via_vg"], [61, 2, 1, "", "source"], [61, 4, 1, "", "update_status"], [61, 2, 1, "", "userdata"]], "mp.data_model_cpf": [[62, 4, 1, "", "data_model_cpf"]], "mp.data_model_opf": [[63, 4, 1, "", "data_model_opf"], [63, 4, 1, "", "pp_flags"], [63, 4, 1, "", "pp_get_headers_other"], [63, 4, 1, "", "pp_section_list"]], "mp.dm_converter": [[64, 4, 1, "", "build"], [64, 4, 1, "", "copy"], [64, 4, 1, "", "display"], [64, 4, 1, "", "export"], [64, 4, 1, "", "format_tag"], [64, 4, 1, "", "import"], [64, 4, 1, "", "init_export"], [64, 4, 1, "", "save"]], "mp.dm_converter_mpc2": [[65, 4, 1, "", "dm_converter_mpc2"], [65, 4, 1, "", "format_tag"], [65, 4, 1, "", "import"], [65, 4, 1, "", "init_export"], [65, 4, 1, "", "save"]], "mp.dm_converter_mpc2_legacy": [[66, 4, 1, "", "legacy_user_mod_inputs"], [66, 4, 1, "", "legacy_user_nln_constraints"]], "mp.dm_element": [[67, 4, 1, "", "ID"], [67, 2, 1, "", "ID2i"], [67, 4, 1, "", "build_params"], [67, 4, 1, "", "copy"], [67, 4, 1, "", "count"], [67, 4, 1, "", "cxn_idx_prop"], [67, 4, 1, "", "cxn_type"], [67, 4, 1, "", "cxn_type_prop"], [67, 4, 1, "", "display"], [67, 4, 1, "", "dm_converter_element"], [67, 4, 1, "", "export_vars"], [67, 4, 1, "", "export_vars_offline_val"], [67, 2, 1, "", "i2on"], [67, 4, 1, "", "init_status"], [67, 4, 1, "", "initialize"], [67, 4, 1, "", "label"], [67, 4, 1, "", "labels"], [67, 4, 1, "", "main_table_var_names"], [67, 2, 1, "", "n"], [67, 4, 1, "", "name"], [67, 2, 1, "", "nr"], [67, 2, 1, "", "off"], [67, 2, 1, "", "on"], [67, 4, 1, "", "pp_data"], [67, 4, 1, "", "pp_data_cnt"], [67, 4, 1, "", "pp_data_det"], [67, 4, 1, "", "pp_data_ext"], [67, 4, 1, "", "pp_data_row_det"], [67, 4, 1, "", "pp_data_sum"], [67, 4, 1, "", "pp_get_footers"], [67, 4, 1, "", "pp_get_footers_det"], [67, 4, 1, "", "pp_get_headers"], [67, 4, 1, "", "pp_get_headers_det"], [67, 4, 1, "", "pp_get_title_det"], [67, 4, 1, "", "pp_have_section"], [67, 4, 1, "", "pp_have_section_cnt"], [67, 4, 1, "", "pp_have_section_det"], [67, 4, 1, "", "pp_have_section_ext"], [67, 4, 1, "", "pp_have_section_sum"], [67, 4, 1, "", "pp_rows"], [67, 4, 1, "", "pretty_print"], [67, 4, 1, "", "rebuild"], [67, 2, 1, "", "tab"], [67, 4, 1, "", "table_exists"], [67, 4, 1, "", "update_status"]], "mp.dmc_element": [[68, 4, 1, "", "data_exists"], [68, 4, 1, "", "data_field"], [68, 4, 1, "", "data_model_element"], [68, 4, 1, "", "data_subs"], [68, 4, 1, "", "default_export_data_nrows"], [68, 4, 1, "", "default_export_data_table"], [68, 4, 1, "", "export"], [68, 4, 1, "", "export_col"], [68, 4, 1, "", "export_table_values"], [68, 4, 1, "", "get_export_size"], [68, 4, 1, "", "get_export_spec"], [68, 4, 1, "", "get_import_size"], [68, 4, 1, "", "get_import_spec"], [68, 4, 1, "", "get_input_table_values"], [68, 4, 1, "", "import"], [68, 4, 1, "", "import_col"], [68, 4, 1, "", "import_table_values"], [68, 4, 1, "", "init_export_data"], [68, 4, 1, "", "name"], [68, 4, 1, "", "table_var_map"]], "mp.dmce_branch_mpc2": [[69, 4, 1, "", "data_field"], [69, 4, 1, "", "default_export_data_table"], [69, 4, 1, "", "name"], [69, 4, 1, "", "table_var_map"]], "mp.dmce_bus3p_mpc2": [[70, 4, 1, "", "bus_status_import"], [70, 4, 1, "", "data_field"], [70, 4, 1, "", "name"], [70, 4, 1, "", "table_var_map"]], "mp.dmce_bus_mpc2": [[71, 4, 1, "", "bus_name_export"], [71, 4, 1, "", "bus_name_import"], [71, 4, 1, "", "bus_status_import"], [71, 4, 1, "", "data_field"], [71, 4, 1, "", "default_export_data_table"], [71, 4, 1, "", "init_export_data"], [71, 4, 1, "", "name"], [71, 4, 1, "", "table_var_map"]], "mp.dmce_buslink_mpc2": [[72, 4, 1, "", "data_field"], [72, 4, 1, "", "name"], [72, 4, 1, "", "table_var_map"]], "mp.dmce_gen3p_mpc2": [[73, 4, 1, "", "data_field"], [73, 4, 1, "", "name"], [73, 4, 1, "", "table_var_map"]], "mp.dmce_gen_mpc2": [[74, 3, 1, "", "cost_table2gencost"], [74, 4, 1, "", "data_field"], [74, 4, 1, "", "default_export_data_table"], [74, 4, 1, "", "gen_cost_export"], [74, 4, 1, "", "gen_cost_import"], [74, 3, 1, "", "gencost2cost_table"], [74, 4, 1, "", "name"], [74, 2, 1, "", "pwl1"], [74, 4, 1, "", "start_cost_export"], [74, 4, 1, "", "start_cost_import"], [74, 4, 1, "", "table_var_map"]], "mp.dmce_legacy_dcline_mpc2": [[75, 4, 1, "", "data_field"], [75, 4, 1, "", "dcline_cost_export"], [75, 4, 1, "", "dcline_cost_import"], [75, 4, 1, "", "default_export_data_table"], [75, 4, 1, "", "name"], [75, 4, 1, "", "table_var_map"]], "mp.dmce_line3p_mpc2": [[76, 4, 1, "", "create_line_construction_table"], [76, 4, 1, "", "data_field"], [76, 4, 1, "", "import"], [76, 4, 1, "", "name"], [76, 4, 1, "", "table_var_map"]], "mp.dmce_load3p_mpc2": [[77, 2, 1, "", "bus"], [77, 4, 1, "", "data_field"], [77, 4, 1, "", "name"], [77, 4, 1, "", "table_var_map"]], "mp.dmce_load_mpc2": [[78, 2, 1, "", "bus"], [78, 4, 1, "", "data_field"], [78, 4, 1, "", "get_export_size"], [78, 4, 1, "", "get_import_size"], [78, 4, 1, "", "name"], [78, 4, 1, "", "scale_factor_fcn"], [78, 4, 1, "", "sys_wide_zip_loads"], [78, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_gen_mpc2": [[79, 4, 1, "", "data_field"], [79, 4, 1, "", "data_subs"], [79, 4, 1, "", "get_export_size"], [79, 4, 1, "", "get_import_size"], [79, 4, 1, "", "import"], [79, 4, 1, "", "import_cost"], [79, 4, 1, "", "import_qty"], [79, 4, 1, "", "import_ramp"], [79, 4, 1, "", "name"], [79, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_zone_mpc2": [[80, 4, 1, "", "data_field"], [80, 4, 1, "", "data_subs"], [80, 4, 1, "", "import_req"], [80, 4, 1, "", "import_zones"], [80, 4, 1, "", "name"], [80, 4, 1, "", "table_var_map"]], "mp.dmce_shunt_mpc2": [[81, 2, 1, "", "bus"], [81, 4, 1, "", "data_field"], [81, 4, 1, "", "get_export_size"], [81, 4, 1, "", "get_import_size"], [81, 4, 1, "", "name"], [81, 4, 1, "", "table_var_map"]], "mp.dmce_xfmr3p_mpc2": [[82, 4, 1, "", "data_field"], [82, 4, 1, "", "name"], [82, 4, 1, "", "table_var_map"]], "mp.dme_branch": [[83, 2, 1, "", "b_fr"], [83, 2, 1, "", "b_to"], [83, 4, 1, "", "build_params"], [83, 4, 1, "", "cxn_idx_prop"], [83, 4, 1, "", "cxn_type"], [83, 4, 1, "", "export_vars"], [83, 4, 1, "", "export_vars_offline_val"], [83, 2, 1, "", "fbus"], [83, 2, 1, "", "g_fr"], [83, 2, 1, "", "g_to"], [83, 4, 1, "", "initialize"], [83, 4, 1, "", "label"], [83, 4, 1, "", "labels"], [83, 4, 1, "", "main_table_var_names"], [83, 4, 1, "", "name"], [83, 4, 1, "", "pp_data_cnt"], [83, 4, 1, "", "pp_data_row_det"], [83, 4, 1, "", "pp_data_sum"], [83, 4, 1, "", "pp_get_headers_det"], [83, 4, 1, "", "pp_have_section_det"], [83, 4, 1, "", "pp_have_section_sum"], [83, 2, 1, "", "r"], [83, 2, 1, "", "rate_a"], [83, 2, 1, "", "ta"], [83, 2, 1, "", "tbus"], [83, 2, 1, "", "tm"], [83, 4, 1, "", "update_status"], [83, 2, 1, "", "x"]], "mp.dme_branch_opf": [[84, 4, 1, "", "export_vars"], [84, 4, 1, "", "export_vars_offline_val"], [84, 4, 1, "", "main_table_var_names"], [84, 4, 1, "", "pp_binding_rows_lim"], [84, 4, 1, "", "pp_data_row_lim"], [84, 4, 1, "", "pp_get_headers_lim"], [84, 4, 1, "", "pp_get_title_lim"], [84, 4, 1, "", "pp_have_section_lim"], [84, 4, 1, "", "pretty_print"]], "mp.dme_bus": [[85, 4, 1, "", "build_params"], [85, 4, 1, "", "export_vars"], [85, 4, 1, "", "export_vars_offline_val"], [85, 4, 1, "", "init_status"], [85, 4, 1, "", "label"], [85, 4, 1, "", "labels"], [85, 4, 1, "", "main_table_var_names"], [85, 4, 1, "", "name"], [85, 4, 1, "", "pp_data_cnt"], [85, 4, 1, "", "pp_data_ext"], [85, 4, 1, "", "pp_data_row_det"], [85, 4, 1, "", "pp_get_headers_det"], [85, 4, 1, "", "pp_have_section_det"], [85, 4, 1, "", "pp_have_section_ext"], [85, 4, 1, "", "set_bus_type_pq"], [85, 4, 1, "", "set_bus_type_pv"], [85, 4, 1, "", "set_bus_type_ref"], [85, 2, 1, "", "type"], [85, 4, 1, "", "update_status"], [85, 2, 1, "", "va_start"], [85, 2, 1, "", "vm_control"], [85, 2, 1, "", "vm_lb"], [85, 2, 1, "", "vm_start"], [85, 2, 1, "", "vm_ub"]], "mp.dme_bus3p": [[86, 4, 1, "", "build_params"], [86, 4, 1, "", "init_status"], [86, 4, 1, "", "label"], [86, 4, 1, "", "labels"], [86, 4, 1, "", "main_table_var_names"], [86, 4, 1, "", "name"], [86, 4, 1, "", "pp_data_row_det"], [86, 4, 1, "", "pp_get_headers_det"], [86, 4, 1, "", "pp_have_section_det"], [86, 2, 1, "", "type"], [86, 4, 1, "", "update_status"], [86, 2, 1, "", "va1_start"], [86, 2, 1, "", "va2_start"], [86, 2, 1, "", "va3_start"], [86, 2, 1, "", "vm1_start"], [86, 2, 1, "", "vm2_start"], [86, 2, 1, "", "vm3_start"], [86, 2, 1, "", "vm_control"]], "mp.dme_bus_opf": [[88, 4, 1, "", "export_vars"], [88, 4, 1, "", "export_vars_offline_val"], [88, 4, 1, "", "main_table_var_names"], [88, 4, 1, "", "pp_binding_rows_lim"], [88, 4, 1, "", "pp_data_ext"], [88, 4, 1, "", "pp_data_row_det"], [88, 4, 1, "", "pp_data_row_lim"], [88, 4, 1, "", "pp_get_headers_det"], [88, 4, 1, "", "pp_get_headers_lim"], [88, 4, 1, "", "pp_have_section_lim"]], "mp.dme_buslink": [[89, 4, 1, "", "build_params"], [89, 2, 1, "", "bus"], [89, 2, 1, "", "bus3p"], [89, 4, 1, "", "cxn_idx_prop"], [89, 4, 1, "", "cxn_type"], [89, 4, 1, "", "initialize"], [89, 4, 1, "", "label"], [89, 4, 1, "", "labels"], [89, 4, 1, "", "main_table_var_names"], [89, 4, 1, "", "name"], [89, 2, 1, "", "pg1_start"], [89, 2, 1, "", "pg2_start"], [89, 2, 1, "", "pg3_start"], [89, 4, 1, "", "pp_data_row_det"], [89, 4, 1, "", "pp_get_headers_det"], [89, 4, 1, "", "pp_have_section_det"], [89, 2, 1, "", "qg1_start"], [89, 2, 1, "", "qg2_start"], [89, 2, 1, "", "qg3_start"], [89, 4, 1, "", "update_status"]], "mp.dme_gen": [[91, 4, 1, "", "apply_vm_setpoint"], [91, 4, 1, "", "build_params"], [91, 2, 1, "", "bus"], [91, 2, 1, "", "bus_on"], [91, 4, 1, "", "cxn_idx_prop"], [91, 4, 1, "", "cxn_type"], [91, 4, 1, "", "export_vars"], [91, 4, 1, "", "export_vars_offline_val"], [91, 4, 1, "", "have_cost"], [91, 4, 1, "", "initialize"], [91, 4, 1, "", "isload"], [91, 4, 1, "", "label"], [91, 4, 1, "", "labels"], [91, 4, 1, "", "main_table_var_names"], [91, 4, 1, "", "name"], [91, 2, 1, "", "pg_lb"], [91, 2, 1, "", "pg_start"], [91, 2, 1, "", "pg_ub"], [91, 4, 1, "", "pp_data_row_det"], [91, 4, 1, "", "pp_data_sum"], [91, 4, 1, "", "pp_get_footers_det"], [91, 4, 1, "", "pp_get_headers_det"], [91, 4, 1, "", "pp_have_section_det"], [91, 4, 1, "", "pp_have_section_sum"], [91, 2, 1, "", "qg_lb"], [91, 2, 1, "", "qg_start"], [91, 2, 1, "", "qg_ub"], [91, 4, 1, "", "update_status"], [91, 4, 1, "", "violated_q_lims"], [91, 2, 1, "", "vm_setpoint"]], "mp.dme_gen3p": [[92, 4, 1, "", "apply_vm_setpoint"], [92, 4, 1, "", "build_params"], [92, 2, 1, "", "bus"], [92, 2, 1, "", "bus_on"], [92, 4, 1, "", "cxn_idx_prop"], [92, 4, 1, "", "cxn_type"], [92, 4, 1, "", "initialize"], [92, 4, 1, "", "label"], [92, 4, 1, "", "labels"], [92, 4, 1, "", "main_table_var_names"], [92, 4, 1, "", "name"], [92, 2, 1, "", "pg1_start"], [92, 2, 1, "", "pg2_start"], [92, 2, 1, "", "pg3_start"], [92, 4, 1, "", "pp_data_row_det"], [92, 4, 1, "", "pp_data_sum"], [92, 4, 1, "", "pp_get_headers_det"], [92, 4, 1, "", "pp_have_section_det"], [92, 4, 1, "", "pp_have_section_sum"], [92, 2, 1, "", "qg1_start"], [92, 2, 1, "", "qg2_start"], [92, 2, 1, "", "qg3_start"], [92, 4, 1, "", "update_status"], [92, 2, 1, "", "vm1_setpoint"], [92, 2, 1, "", "vm2_setpoint"], [92, 2, 1, "", "vm3_setpoint"]], "mp.dme_gen_opf": [[94, 4, 1, "", "build_cost_params"], [94, 4, 1, "", "export_vars"], [94, 4, 1, "", "export_vars_offline_val"], [94, 4, 1, "", "have_cost"], [94, 4, 1, "", "main_table_var_names"], [94, 4, 1, "", "max_pwl_gencost"], [94, 4, 1, "", "pp_binding_rows_lim"], [94, 4, 1, "", "pp_data_row_lim"], [94, 4, 1, "", "pp_get_headers_lim"], [94, 4, 1, "", "pp_have_section_lim"], [94, 4, 1, "", "pretty_print"]], "mp.dme_legacy_dcline": [[95, 4, 1, "", "apply_vm_setpoints"], [95, 4, 1, "", "build_params"], [95, 4, 1, "", "cxn_idx_prop"], [95, 4, 1, "", "cxn_type"], [95, 4, 1, "", "export_vars"], [95, 4, 1, "", "export_vars_offline_val"], [95, 2, 1, "", "fbus"], [95, 2, 1, "", "fbus_on"], [95, 4, 1, "", "have_cost"], [95, 4, 1, "", "initialize"], [95, 4, 1, "", "label"], [95, 4, 1, "", "labels"], [95, 2, 1, "", "loss0"], [95, 2, 1, "", "loss1"], [95, 4, 1, "", "main_table_var_names"], [95, 4, 1, "", "name"], [95, 2, 1, "", "p_fr_lb"], [95, 2, 1, "", "p_fr_start"], [95, 2, 1, "", "p_fr_ub"], [95, 2, 1, "", "p_to_start"], [95, 4, 1, "", "pp_data_row_det"], [95, 4, 1, "", "pp_data_sum"], [95, 4, 1, "", "pp_get_headers_det"], [95, 4, 1, "", "pp_have_section_det"], [95, 4, 1, "", "pp_have_section_sum"], [95, 2, 1, "", "q_fr_lb"], [95, 2, 1, "", "q_fr_start"], [95, 2, 1, "", "q_fr_ub"], [95, 2, 1, "", "q_to_lb"], [95, 2, 1, "", "q_to_start"], [95, 2, 1, "", "q_to_ub"], [95, 2, 1, "", "tbus"], [95, 2, 1, "", "tbus_on"], [95, 4, 1, "", "update_status"], [95, 2, 1, "", "vm_setpoint_fr"], [95, 2, 1, "", "vm_setpoint_to"]], "mp.dme_legacy_dcline_opf": [[96, 4, 1, "", "build_cost_params"], [96, 4, 1, "", "export_vars"], [96, 4, 1, "", "export_vars_offline_val"], [96, 4, 1, "", "have_cost"], [96, 4, 1, "", "main_table_var_names"], [96, 4, 1, "", "pp_binding_rows_lim"], [96, 4, 1, "", "pp_data_row_lim"], [96, 4, 1, "", "pp_get_headers_lim"], [96, 4, 1, "", "pp_have_section_lim"], [96, 4, 1, "", "pretty_print"]], "mp.dme_line3p": [[97, 4, 1, "", "build_params"], [97, 4, 1, "", "create_line_construction_table"], [97, 4, 1, "", "cxn_idx_prop"], [97, 4, 1, "", "cxn_type"], [97, 2, 1, "", "fbus"], [97, 2, 1, "", "freq"], [97, 4, 1, "", "initialize"], [97, 4, 1, "", "label"], [97, 4, 1, "", "labels"], [97, 2, 1, "", "lc"], [97, 2, 1, "", "lc_tab"], [97, 4, 1, "", "lc_table_var_names"], [97, 2, 1, "", "len"], [97, 4, 1, "", "main_table_var_names"], [97, 4, 1, "", "name"], [97, 4, 1, "", "pp_data_row_det"], [97, 4, 1, "", "pp_data_sum"], [97, 4, 1, "", "pp_get_headers_det"], [97, 4, 1, "", "pp_have_section_det"], [97, 4, 1, "", "pp_have_section_sum"], [97, 4, 1, "", "pretty_print"], [97, 4, 1, "", "symmat2vec"], [97, 2, 1, "", "tbus"], [97, 4, 1, "", "update_status"], [97, 4, 1, "", "vec2symmat"], [97, 2, 1, "", "yc"], [97, 2, 1, "", "ys"]], "mp.dme_load": [[99, 4, 1, "", "build_params"], [99, 2, 1, "", "bus"], [99, 4, 1, "", "count"], [99, 4, 1, "", "cxn_idx_prop"], [99, 4, 1, "", "cxn_type"], [99, 4, 1, "", "label"], [99, 4, 1, "", "labels"], [99, 4, 1, "", "main_table_var_names"], [99, 4, 1, "", "name"], [99, 2, 1, "", "pd"], [99, 2, 1, "", "pd_i"], [99, 2, 1, "", "pd_z"], [99, 4, 1, "", "pp_data_row_det"], [99, 4, 1, "", "pp_data_sum"], [99, 4, 1, "", "pp_get_footers_det"], [99, 4, 1, "", "pp_get_headers_det"], [99, 4, 1, "", "pp_have_section_det"], [99, 4, 1, "", "pp_have_section_sum"], [99, 2, 1, "", "qd"], [99, 2, 1, "", "qd_i"], [99, 2, 1, "", "qd_z"], [99, 4, 1, "", "update_status"]], "mp.dme_load3p": [[100, 4, 1, "", "build_params"], [100, 2, 1, "", "bus"], [100, 4, 1, "", "cxn_idx_prop"], [100, 4, 1, "", "cxn_type"], [100, 4, 1, "", "initialize"], [100, 4, 1, "", "label"], [100, 4, 1, "", "labels"], [100, 4, 1, "", "main_table_var_names"], [100, 4, 1, "", "name"], [100, 2, 1, "", "pd1"], [100, 2, 1, "", "pd2"], [100, 2, 1, "", "pd3"], [100, 2, 1, "", "pf1"], [100, 2, 1, "", "pf2"], [100, 2, 1, "", "pf3"], [100, 4, 1, "", "pp_data_row_det"], [100, 4, 1, "", "pp_data_sum"], [100, 4, 1, "", "pp_get_headers_det"], [100, 4, 1, "", "pp_have_section_det"], [100, 4, 1, "", "pp_have_section_sum"], [100, 4, 1, "", "update_status"]], "mp.dme_load_cpf": [[102, 4, 1, "", "export_vars"], [102, 4, 1, "", "parameterized"]], "mp.dme_reserve_gen": [[104, 4, 1, "", "build_params"], [104, 4, 1, "", "export_vars"], [104, 4, 1, "", "export_vars_offline_val"], [104, 2, 1, "", "gen"], [104, 4, 1, "", "label"], [104, 4, 1, "", "labels"], [104, 4, 1, "", "main_table_var_names"], [104, 4, 1, "", "name"], [104, 4, 1, "", "pp_binding_rows_lim"], [104, 4, 1, "", "pp_data_row_det"], [104, 4, 1, "", "pp_data_row_lim"], [104, 4, 1, "", "pp_data_sum"], [104, 4, 1, "", "pp_get_footers_det"], [104, 4, 1, "", "pp_get_headers_det"], [104, 4, 1, "", "pp_get_headers_lim"], [104, 4, 1, "", "pp_have_section_det"], [104, 4, 1, "", "pp_have_section_lim"], [104, 4, 1, "", "pp_have_section_sum"], [104, 2, 1, "", "r_ub"], [104, 4, 1, "", "update_status"]], "mp.dme_reserve_zone": [[105, 4, 1, "", "build_params"], [105, 4, 1, "", "export_vars"], [105, 4, 1, "", "export_vars_offline_val"], [105, 4, 1, "", "label"], [105, 4, 1, "", "labels"], [105, 4, 1, "", "main_table_var_names"], [105, 4, 1, "", "name"], [105, 4, 1, "", "pp_data_row_det"], [105, 4, 1, "", "pp_get_headers_det"], [105, 4, 1, "", "pp_have_section_det"], [105, 2, 1, "", "req"], [105, 4, 1, "", "update_status"], [105, 2, 1, "", "zones"]], "mp.dme_shared_opf": [[106, 2, 1, "", "ctol"], [106, 4, 1, "", "pp_binding_rows_lim"], [106, 4, 1, "", "pp_data_lim"], [106, 4, 1, "", "pp_data_other"], [106, 4, 1, "", "pp_data_row_lim"], [106, 4, 1, "", "pp_get_footers_lim"], [106, 4, 1, "", "pp_get_footers_other"], [106, 4, 1, "", "pp_get_headers_lim"], [106, 4, 1, "", "pp_get_headers_other"], [106, 4, 1, "", "pp_get_title_lim"], [106, 4, 1, "", "pp_have_section_lim"], [106, 4, 1, "", "pp_have_section_other"], [106, 4, 1, "", "pp_rows_lim"], [106, 4, 1, "", "pp_rows_other"], [106, 4, 1, "", "pp_set_tols_lim"], [106, 2, 1, "", "ptol"]], "mp.dme_shunt": [[107, 2, 1, "", "bs"], [107, 4, 1, "", "build_params"], [107, 2, 1, "", "bus"], [107, 4, 1, "", "count"], [107, 4, 1, "", "cxn_idx_prop"], [107, 4, 1, "", "cxn_type"], [107, 2, 1, "", "gs"], [107, 4, 1, "", "label"], [107, 4, 1, "", "labels"], [107, 4, 1, "", "main_table_var_names"], [107, 4, 1, "", "name"], [107, 4, 1, "", "pp_data_row_det"], [107, 4, 1, "", "pp_data_sum"], [107, 4, 1, "", "pp_get_footers_det"], [107, 4, 1, "", "pp_get_headers_det"], [107, 4, 1, "", "pp_have_section_det"], [107, 4, 1, "", "pp_have_section_sum"], [107, 4, 1, "", "update_status"]], "mp.dme_shunt_cpf": [[108, 4, 1, "", "export_vars"], [108, 4, 1, "", "parameterized"]], "mp.dme_xfmr3p": [[110, 4, 1, "", "build_params"], [110, 4, 1, "", "cxn_idx_prop"], [110, 4, 1, "", "cxn_type"], [110, 2, 1, "", "fbus"], [110, 4, 1, "", "initialize"], [110, 4, 1, "", "label"], [110, 4, 1, "", "labels"], [110, 4, 1, "", "main_table_var_names"], [110, 4, 1, "", "name"], [110, 4, 1, "", "pp_data_row_det"], [110, 4, 1, "", "pp_data_sum"], [110, 4, 1, "", "pp_get_headers_det"], [110, 4, 1, "", "pp_have_section_det"], [110, 4, 1, "", "pp_have_section_sum"], [110, 4, 1, "", "pretty_print"], [110, 2, 1, "", "r"], [110, 2, 1, "", "tbus"], [110, 4, 1, "", "update_status"], [110, 2, 1, "", "x"]], "mp.element_container": [[112, 2, 1, "", "element_classes"], [112, 2, 1, "", "elements"], [112, 4, 1, "", "modify_element_classes"]], "mp.extension": [[113, 4, 1, "", "data_model_class"], [113, 4, 1, "", "dm_converter_class"], [113, 4, 1, "", "dm_element_classes"], [113, 4, 1, "", "dmc_element_classes"], [113, 4, 1, "", "math_model_class"], [113, 4, 1, "", "mm_element_classes"], [113, 4, 1, "", "network_model_class"], [113, 4, 1, "", "nm_element_classes"], [113, 4, 1, "", "task_class"]], "mp.form": [[114, 4, 1, "", "find_form_class"], [114, 4, 1, "", "form_name"], [114, 4, 1, "", "form_tag"], [114, 4, 1, "", "get_params"], [114, 4, 1, "", "model_params"], [114, 4, 1, "", "model_vvars"], [114, 4, 1, "", "model_zvars"]], "mp.form_ac": [[115, 2, 1, "", "L"], [115, 2, 1, "", "M"], [115, 2, 1, "", "N"], [115, 2, 1, "", "Y"], [115, 4, 1, "", "aux_data_va_vm"], [115, 2, 1, "", "i"], [115, 2, 1, "", "inln"], [115, 2, 1, "", "inln_hess"], [115, 4, 1, "", "model_params"], [115, 4, 1, "", "model_zvars"], [115, 2, 1, "", "param_ncols"], [115, 4, 1, "", "port_active_power2_lim_fcn"], [115, 4, 1, "", "port_active_power2_lim_hess"], [115, 4, 1, "", "port_active_power_lim_fcn"], [115, 4, 1, "", "port_active_power_lim_hess"], [115, 4, 1, "", "port_apparent_power_lim_fcn"], [115, 4, 1, "", "port_apparent_power_lim_hess"], [115, 4, 1, "", "port_current_lim_fcn"], [115, 4, 1, "", "port_current_lim_hess"], [115, 4, 1, "", "port_inj_current"], [115, 4, 1, "", "port_inj_current_hess"], [115, 4, 1, "", "port_inj_current_hess_v"], [115, 4, 1, "", "port_inj_current_hess_vz"], [115, 4, 1, "", "port_inj_current_jac"], [115, 4, 1, "", "port_inj_power"], [115, 4, 1, "", "port_inj_power_hess"], [115, 4, 1, "", "port_inj_power_hess_v"], [115, 4, 1, "", "port_inj_power_hess_vz"], [115, 4, 1, "", "port_inj_power_jac"], [115, 2, 1, "", "s"], [115, 2, 1, "", "snln"], [115, 2, 1, "", "snln_hess"]], "mp.form_acc": [[116, 4, 1, "", "aux_data_va_vm"], [116, 4, 1, "", "form_name"], [116, 4, 1, "", "form_tag"], [116, 4, 1, "", "model_vvars"], [116, 4, 1, "", "port_inj_current_hess_v"], [116, 4, 1, "", "port_inj_current_hess_vz"], [116, 4, 1, "", "port_inj_current_jac"], [116, 4, 1, "", "port_inj_power_hess_v"], [116, 4, 1, "", "port_inj_power_hess_vz"], [116, 4, 1, "", "port_inj_power_jac"], [116, 4, 1, "", "va_fcn"], [116, 4, 1, "", "va_hess"], [116, 4, 1, "", "vm2_fcn"], [116, 4, 1, "", "vm2_hess"]], "mp.form_acp": [[117, 4, 1, "", "aux_data_va_vm"], [117, 4, 1, "", "form_name"], [117, 4, 1, "", "form_tag"], [117, 4, 1, "", "model_vvars"], [117, 4, 1, "", "port_inj_current_hess_v"], [117, 4, 1, "", "port_inj_current_hess_vz"], [117, 4, 1, "", "port_inj_current_jac"], [117, 4, 1, "", "port_inj_power_hess_v"], [117, 4, 1, "", "port_inj_power_hess_vz"], [117, 4, 1, "", "port_inj_power_jac"]], "mp.form_dc": [[118, 2, 1, "", "B"], [118, 2, 1, "", "K"], [118, 4, 1, "", "form_name"], [118, 4, 1, "", "form_tag"], [118, 4, 1, "", "model_params"], [118, 4, 1, "", "model_vvars"], [118, 4, 1, "", "model_zvars"], [118, 2, 1, "", "p"], [118, 2, 1, "", "param_ncols"], [118, 4, 1, "", "port_inj_power"]], "mp.mapped_array": [[119, 4, 1, "", "add_elements"], [119, 4, 1, "", "add_names"], [119, 4, 1, "", "copy"], [119, 4, 1, "", "delete_elements"], [119, 4, 1, "", "display"], [119, 4, 1, "", "has_name"], [119, 4, 1, "", "length"], [119, 4, 1, "", "mapped_array"], [119, 4, 1, "", "name2idx"], [119, 4, 1, "", "size"], [119, 4, 1, "", "subsasgn"], [119, 4, 1, "", "subsref"]], "mp.math_model": [[120, 4, 1, "", "add_aux_data"], [120, 4, 1, "", "add_constraints"], [120, 4, 1, "", "add_costs"], [120, 4, 1, "", "add_node_balance_constraints"], [120, 4, 1, "", "add_system_constraints"], [120, 4, 1, "", "add_system_costs"], [120, 4, 1, "", "add_system_vars"], [120, 4, 1, "", "add_vars"], [120, 2, 1, "", "aux_data"], [120, 4, 1, "", "build"], [120, 4, 1, "", "build_base_aux_data"], [120, 4, 1, "", "data_model_update"], [120, 4, 1, "", "display"], [120, 4, 1, "", "form_name"], [120, 4, 1, "", "form_tag"], [120, 4, 1, "", "network_model_x_soln"], [120, 4, 1, "", "solve_opts"], [120, 4, 1, "", "task_name"], [120, 4, 1, "", "task_tag"], [120, 4, 1, "", "update_nm_vars"]], "mp.math_model_cpf_acc": [[121, 4, 1, "", "math_model_cpf_acc"]], "mp.math_model_cpf_acci": [[122, 4, 1, "", "add_node_balance_constraints"], [122, 4, 1, "", "form_name"], [122, 4, 1, "", "form_tag"]], "mp.math_model_cpf_accs": [[123, 4, 1, "", "add_node_balance_constraints"], [123, 4, 1, "", "form_name"], [123, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acp": [[124, 4, 1, "", "callback_vlim"], [124, 4, 1, "", "event_vlim"], [124, 4, 1, "", "math_model_cpf_acp"]], "mp.math_model_cpf_acpi": [[125, 4, 1, "", "add_node_balance_constraints"], [125, 4, 1, "", "form_name"], [125, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acps": [[126, 4, 1, "", "add_node_balance_constraints"], [126, 4, 1, "", "expand_z_warmstart"], [126, 4, 1, "", "form_name"], [126, 4, 1, "", "form_tag"], [126, 4, 1, "", "solve_opts_warmstart"]], "mp.math_model_opf": [[127, 4, 1, "", "add_system_vars"], [127, 4, 1, "", "build_aux_data"], [127, 4, 1, "", "interior_va"], [127, 4, 1, "", "interior_x0"], [127, 4, 1, "", "task_name"], [127, 4, 1, "", "task_tag"]], "mp.math_model_opf_ac": [[128, 4, 1, "", "nodal_current_balance_fcn"], [128, 4, 1, "", "nodal_current_balance_hess"], [128, 4, 1, "", "nodal_power_balance_fcn"], [128, 4, 1, "", "nodal_power_balance_hess"], [128, 4, 1, "", "solve_opts"]], "mp.math_model_opf_acc": [[129, 4, 1, "", "convert_x_m2n"], [129, 4, 1, "", "interior_va"], [129, 4, 1, "", "math_model_opf_acc"]], "mp.math_model_opf_acci": [[130, 4, 1, "", "add_node_balance_constraints"], [130, 4, 1, "", "form_name"], [130, 4, 1, "", "form_tag"], [130, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acci_legacy": [[131, 4, 1, "", "add_named_set"], [131, 4, 1, "", "add_system_constraints"], [131, 4, 1, "", "add_system_costs"], [131, 4, 1, "", "add_vars"], [131, 4, 1, "", "build"], [131, 4, 1, "", "def_set_types"], [131, 4, 1, "", "init_set_types"], [131, 4, 1, "", "legacy_user_var_names"], [131, 4, 1, "", "math_model_opf_acci_legacy"]], "mp.math_model_opf_accs": [[132, 4, 1, "", "add_node_balance_constraints"], [132, 4, 1, "", "form_name"], [132, 4, 1, "", "form_tag"], [132, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_accs_legacy": [[133, 4, 1, "", "add_named_set"], [133, 4, 1, "", "add_system_constraints"], [133, 4, 1, "", "add_system_costs"], [133, 4, 1, "", "add_vars"], [133, 4, 1, "", "build"], [133, 4, 1, "", "def_set_types"], [133, 4, 1, "", "init_set_types"], [133, 4, 1, "", "legacy_user_var_names"], [133, 4, 1, "", "math_model_opf_accs_legacy"]], "mp.math_model_opf_acp": [[134, 4, 1, "", "convert_x_m2n"], [134, 4, 1, "", "math_model_opf_acp"]], "mp.math_model_opf_acpi": [[135, 4, 1, "", "add_node_balance_constraints"], [135, 4, 1, "", "form_name"], [135, 4, 1, "", "form_tag"], [135, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acpi_legacy": [[136, 4, 1, "", "add_named_set"], [136, 4, 1, "", "add_system_constraints"], [136, 4, 1, "", "add_system_costs"], [136, 4, 1, "", "add_vars"], [136, 4, 1, "", "build"], [136, 4, 1, "", "def_set_types"], [136, 4, 1, "", "init_set_types"], [136, 4, 1, "", "legacy_user_var_names"], [136, 4, 1, "", "math_model_opf_acpi_legacy"]], "mp.math_model_opf_acps": [[137, 4, 1, "", "add_node_balance_constraints"], [137, 4, 1, "", "form_name"], [137, 4, 1, "", "form_tag"], [137, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acps_legacy": [[138, 4, 1, "", "add_named_set"], [138, 4, 1, "", "add_system_constraints"], [138, 4, 1, "", "add_system_costs"], [138, 4, 1, "", "add_vars"], [138, 4, 1, "", "build"], [138, 4, 1, "", "def_set_types"], [138, 4, 1, "", "init_set_types"], [138, 4, 1, "", "legacy_user_var_names"], [138, 4, 1, "", "math_model_opf_acps_legacy"]], "mp.math_model_opf_dc": [[139, 4, 1, "", "add_node_balance_constraints"], [139, 4, 1, "", "convert_x_m2n"], [139, 4, 1, "", "form_name"], [139, 4, 1, "", "form_tag"], [139, 4, 1, "", "math_model_opf_dc"], [139, 4, 1, "", "solve_opts"]], "mp.math_model_opf_dc_legacy": [[140, 4, 1, "", "add_named_set"], [140, 4, 1, "", "add_system_constraints"], [140, 4, 1, "", "add_system_costs"], [140, 4, 1, "", "add_vars"], [140, 4, 1, "", "build"], [140, 4, 1, "", "def_set_types"], [140, 4, 1, "", "init_set_types"], [140, 4, 1, "", "legacy_user_var_names"], [140, 4, 1, "", "math_model_opf_dc_legacy"]], "mp.math_model_pf": [[141, 4, 1, "", "add_costs"], [141, 4, 1, "", "add_system_vars"], [141, 4, 1, "", "solve_opts"], [141, 4, 1, "", "task_name"], [141, 4, 1, "", "task_tag"]], "mp.math_model_pf_ac": [[142, 4, 1, "", "math_model_pf_ac"]], "mp.math_model_pf_acci": [[143, 4, 1, "", "add_node_balance_constraints"], [143, 4, 1, "", "form_name"], [143, 4, 1, "", "form_tag"]], "mp.math_model_pf_accs": [[144, 4, 1, "", "add_node_balance_constraints"], [144, 4, 1, "", "form_name"], [144, 4, 1, "", "form_tag"]], "mp.math_model_pf_acpi": [[145, 4, 1, "", "add_node_balance_constraints"], [145, 4, 1, "", "form_name"], [145, 4, 1, "", "form_tag"]], "mp.math_model_pf_acps": [[146, 4, 1, "", "add_node_balance_constraints"], [146, 4, 1, "", "fd_jac_approx"], [146, 4, 1, "", "fdpf_B_matrix_models"], [146, 4, 1, "", "form_name"], [146, 4, 1, "", "form_tag"], [146, 4, 1, "", "gs_x_update"], [146, 4, 1, "", "zg_x_update"]], "mp.math_model_pf_dc": [[147, 4, 1, "", "add_node_balance_constraints"], [147, 4, 1, "", "form_name"], [147, 4, 1, "", "form_tag"], [147, 4, 1, "", "math_model_pf_dc"], [147, 4, 1, "", "solve_opts"]], "mp.mm_element": [[148, 4, 1, "", "add_constraints"], [148, 4, 1, "", "add_costs"], [148, 4, 1, "", "add_vars"], [148, 4, 1, "", "data_model_element"], [148, 4, 1, "", "data_model_update"], [148, 4, 1, "", "data_model_update_off"], [148, 4, 1, "", "data_model_update_on"], [148, 4, 1, "", "name"], [148, 4, 1, "", "network_model_element"]], "mp.mm_shared_opf_legacy": [[149, 4, 1, "", "add_legacy_cost"], [149, 4, 1, "", "add_legacy_user_constraints"], [149, 4, 1, "", "add_legacy_user_constraints_ac"], [149, 4, 1, "", "add_legacy_user_costs"], [149, 4, 1, "", "add_legacy_user_vars"], [149, 4, 1, "", "build_legacy"], [149, 4, 1, "", "def_set_types_legacy"], [149, 4, 1, "", "eval_legacy_cost"], [149, 4, 1, "", "get_mpc"], [149, 4, 1, "", "init_set_types_legacy"], [149, 4, 1, "", "params_legacy_cost"]], "mp.mm_shared_pfcpf": [[150, 4, 1, "", "build_aux_data"]], "mp.mm_shared_pfcpf_ac": [[151, 4, 1, "", "add_system_varset_pf"], [151, 4, 1, "", "update_z"]], "mp.mm_shared_pfcpf_ac_i": [[152, 4, 1, "", "build_aux_data_i"]], "mp.mm_shared_pfcpf_acc": [[153, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acci": [[154, 4, 1, "", "add_system_vars_pf"], [154, 4, 1, "", "build_aux_data"], [154, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_accs": [[155, 4, 1, "", "add_system_vars_pf"], [155, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acp": [[156, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acpi": [[157, 4, 1, "", "add_system_vars_pf"], [157, 4, 1, "", "build_aux_data"], [157, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acps": [[158, 4, 1, "", "add_system_vars_pf"], [158, 4, 1, "", "build_aux_data"], [158, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_dc": [[159, 4, 1, "", "add_system_vars_pf"], [159, 4, 1, "", "build_aux_data"], [159, 4, 1, "", "convert_x_m2n"], [159, 4, 1, "", "update_z"]], "mp.mme_branch": [[160, 4, 1, "", "name"]], "mp.mme_branch_opf": [[161, 4, 1, "", "ang_diff_params"], [161, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_ac": [[162, 4, 1, "", "add_constraints"], [162, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_opf_acc": [[163, 4, 1, "", "add_constraints"], [163, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_acp": [[164, 4, 1, "", "add_constraints"]], "mp.mme_branch_opf_dc": [[165, 4, 1, "", "add_constraints"], [165, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_ac": [[166, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_dc": [[167, 4, 1, "", "data_model_update_on"]], "mp.mme_bus": [[168, 4, 1, "", "name"]], "mp.mme_bus3p": [[169, 4, 1, "", "data_model_update_on"], [169, 4, 1, "", "name"]], "mp.mme_bus3p_opf_acc": [[170, 4, 1, "", "interior_x0"]], "mp.mme_bus3p_opf_acp": [[171, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_ac": [[172, 4, 1, "", "interior_vm"]], "mp.mme_bus_opf_acc": [[173, 4, 1, "", "add_constraints"], [173, 4, 1, "", "data_model_update_on"], [173, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_acp": [[174, 4, 1, "", "data_model_update_on"], [174, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_dc": [[175, 4, 1, "", "data_model_update_on"], [175, 4, 1, "", "interior_x0"]], "mp.mme_bus_pf_ac": [[176, 4, 1, "", "data_model_update_on"]], "mp.mme_bus_pf_dc": [[177, 4, 1, "", "data_model_update_on"]], "mp.mme_buslink": [[178, 4, 1, "", "name"]], "mp.mme_buslink_opf": [[179, 4, 1, "", "interior_x0"]], "mp.mme_buslink_opf_acc": [[180, 4, 1, "", "add_constraints"], [180, 4, 1, "", "va_fcn"], [180, 4, 1, "", "va_hess"], [180, 4, 1, "", "vm2_fcn"], [180, 4, 1, "", "vm2_hess"]], "mp.mme_buslink_opf_acp": [[181, 4, 1, "", "add_constraints"]], "mp.mme_buslink_pf_ac": [[182, 4, 1, "", "add_constraints"], [182, 4, 1, "", "add_vars"], [182, 4, 1, "", "voltage_constraints"]], "mp.mme_buslink_pf_acc": [[183, 4, 1, "", "add_constraints"], [183, 4, 1, "", "pf_va_fcn"], [183, 4, 1, "", "pf_vm_fcn"]], "mp.mme_buslink_pf_acp": [[184, 4, 1, "", "add_constraints"]], "mp.mme_gen": [[185, 4, 1, "", "name"]], "mp.mme_gen3p": [[186, 4, 1, "", "data_model_update_on"], [186, 4, 1, "", "name"]], "mp.mme_gen3p_opf": [[187, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf": [[188, 4, 1, "", "add_costs"], [188, 4, 1, "", "add_vars"], [188, 2, 1, "", "cost"], [188, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf_ac": [[189, 4, 1, "", "add_constraints"], [189, 4, 1, "", "add_costs"], [189, 4, 1, "", "build_cost_params"], [189, 4, 1, "", "data_model_update_on"], [189, 4, 1, "", "disp_load_constant_pf_constraint"], [189, 4, 1, "", "has_pq_cap"], [189, 4, 1, "", "pq_capability_constraint"]], "mp.mme_gen_opf_dc": [[190, 4, 1, "", "add_constraints"], [190, 4, 1, "", "build_cost_params"], [190, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_ac": [[191, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_dc": [[192, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline": [[193, 4, 1, "", "name"]], "mp.mme_legacy_dcline_opf": [[194, 4, 1, "", "add_constraints"], [194, 4, 1, "", "add_costs"], [194, 4, 1, "", "add_vars"], [194, 4, 1, "", "build_cost_params"], [194, 2, 1, "", "cost"], [194, 4, 1, "", "interior_x0"]], "mp.mme_legacy_dcline_opf_ac": [[195, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_opf_dc": [[196, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_ac": [[197, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_dc": [[198, 4, 1, "", "data_model_update_on"]], "mp.mme_line3p": [[199, 4, 1, "", "data_model_update_on"], [199, 4, 1, "", "name"]], "mp.mme_line3p_opf": [[200, 4, 1, "", "interior_x0"]], "mp.mme_load": [[201, 4, 1, "", "name"]], "mp.mme_load_cpf": [[202, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_ac": [[203, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_dc": [[204, 4, 1, "", "data_model_update_on"]], "mp.mme_reserve_gen": [[205, 4, 1, "", "add_constraints"], [205, 4, 1, "", "add_costs"], [205, 4, 1, "", "add_vars"], [205, 4, 1, "", "data_model_update_on"], [205, 4, 1, "", "name"]], "mp.mme_reserve_zone": [[206, 4, 1, "", "add_constraints"], [206, 4, 1, "", "data_model_update_on"], [206, 4, 1, "", "name"]], "mp.mme_shunt": [[207, 4, 1, "", "name"]], "mp.mme_shunt_cpf": [[208, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_ac": [[209, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_dc": [[210, 4, 1, "", "data_model_update_on"]], "mp.mme_xfmr3p": [[211, 4, 1, "", "data_model_update_on"], [211, 4, 1, "", "name"]], "mp.mme_xfmr3p_opf": [[212, 4, 1, "", "interior_x0"]], "mp.net_model": [[213, 4, 1, "", "add_node"], [213, 4, 1, "", "add_nodes"], [213, 4, 1, "", "add_port"], [213, 4, 1, "", "add_state"], [213, 4, 1, "", "add_states"], [213, 4, 1, "", "add_var"], [213, 4, 1, "", "add_vvars"], [213, 4, 1, "", "add_zvars"], [213, 4, 1, "", "build"], [213, 4, 1, "", "build_params"], [213, 4, 1, "", "def_set_types"], [213, 4, 1, "", "display"], [213, 4, 1, "", "ensure_ref_node"], [213, 4, 1, "", "get_node_idx"], [213, 4, 1, "", "get_port_idx"], [213, 4, 1, "", "get_state_idx"], [213, 4, 1, "", "init_set_types"], [213, 4, 1, "", "name"], [213, 2, 1, "", "node"], [213, 4, 1, "", "node_types"], [213, 4, 1, "", "np"], [213, 2, 1, "", "nv"], [213, 4, 1, "", "nz"], [213, 4, 1, "", "params_var"], [213, 2, 1, "", "port"], [213, 4, 1, "", "set_node_type_pq"], [213, 4, 1, "", "set_node_type_pv"], [213, 4, 1, "", "set_node_type_ref"], [213, 4, 1, "", "set_type_idx_map"], [213, 4, 1, "", "set_type_label"], [213, 4, 1, "", "stack_matrix_params"], [213, 4, 1, "", "stack_vector_params"], [213, 2, 1, "", "state"], [213, 2, 1, "", "the_np"], [213, 2, 1, "", "the_nz"]], "mp.net_model_ac": [[214, 4, 1, "", "build_params"], [214, 4, 1, "", "def_set_types"], [214, 4, 1, "", "get_va"], [214, 4, 1, "", "nodal_complex_current_balance"], [214, 4, 1, "", "nodal_complex_current_balance_hess"], [214, 4, 1, "", "nodal_complex_power_balance"], [214, 4, 1, "", "nodal_complex_power_balance_hess"], [214, 4, 1, "", "port_inj_nln"], [214, 4, 1, "", "port_inj_nln_hess"], [214, 4, 1, "", "port_inj_soln"]], "mp.net_model_acc": [[215, 4, 1, "", "def_set_types"], [215, 4, 1, "", "initial_voltage_angle"], [215, 4, 1, "", "net_model_acc"]], "mp.net_model_acp": [[216, 4, 1, "", "def_set_types"], [216, 4, 1, "", "initial_voltage_angle"], [216, 4, 1, "", "net_model_acp"]], "mp.net_model_dc": [[217, 4, 1, "", "build_params"], [217, 4, 1, "", "def_set_types"], [217, 4, 1, "", "net_model_dc"], [217, 4, 1, "", "port_inj_soln"], [217, 2, 1, "", "va"], [217, 2, 1, "", "z"]], "mp.nm_element": [[218, 2, 1, "", "C"], [218, 2, 1, "", "D"], [218, 4, 1, "", "add_nodes"], [218, 4, 1, "", "add_states"], [218, 4, 1, "", "add_vvars"], [218, 4, 1, "", "add_zvars"], [218, 4, 1, "", "build_params"], [218, 4, 1, "", "count"], [218, 4, 1, "", "data_model_element"], [218, 4, 1, "", "display"], [218, 4, 1, "", "get_nv_"], [218, 4, 1, "", "incidence_matrix"], [218, 4, 1, "", "math_model_element"], [218, 4, 1, "", "name"], [218, 2, 1, "", "nk"], [218, 4, 1, "", "nn"], [218, 4, 1, "", "node_indices"], [218, 4, 1, "", "node_types"], [218, 4, 1, "", "np"], [218, 4, 1, "", "nz"], [218, 4, 1, "", "set_node_type_pq"], [218, 4, 1, "", "set_node_type_pv"], [218, 4, 1, "", "set_node_type_ref"], [218, 2, 1, "", "soln"], [218, 4, 1, "", "x2vz"]], "mp.nme_branch": [[219, 4, 1, "", "name"], [219, 4, 1, "", "np"]], "mp.nme_branch_ac": [[220, 4, 1, "", "build_params"]], "mp.nme_branch_acc": [[221, 4, 1, "", "ang_diff_fcn"], [221, 4, 1, "", "ang_diff_hess"]], "mp.nme_branch_dc": [[223, 4, 1, "", "build_params"]], "mp.nme_bus": [[224, 4, 1, "", "name"], [224, 4, 1, "", "nn"], [224, 4, 1, "", "node_types"], [224, 4, 1, "", "set_node_type_pq"], [224, 4, 1, "", "set_node_type_pv"], [224, 4, 1, "", "set_node_type_ref"]], "mp.nme_bus3p": [[225, 4, 1, "", "name"], [225, 4, 1, "", "nn"], [225, 4, 1, "", "node_types"]], "mp.nme_bus3p_acc": [[226, 4, 1, "", "add_vvars"]], "mp.nme_bus3p_acp": [[227, 4, 1, "", "add_vvars"]], "mp.nme_bus_acc": [[228, 4, 1, "", "add_vvars"]], "mp.nme_bus_acp": [[229, 4, 1, "", "add_vvars"]], "mp.nme_bus_dc": [[230, 4, 1, "", "add_vvars"]], "mp.nme_buslink": [[231, 4, 1, "", "add_zvars"], [231, 4, 1, "", "build_params"], [231, 4, 1, "", "name"], [231, 4, 1, "", "np"], [231, 4, 1, "", "nz"], [231, 4, 1, "", "voltage_constraints"]], "mp.nme_gen": [[234, 4, 1, "", "name"], [234, 4, 1, "", "np"], [234, 4, 1, "", "nz"]], "mp.nme_gen3p": [[235, 4, 1, "", "add_zvars"], [235, 4, 1, "", "build_params"], [235, 4, 1, "", "name"], [235, 4, 1, "", "np"], [235, 4, 1, "", "nz"]], "mp.nme_gen_ac": [[238, 4, 1, "", "add_zvars"], [238, 4, 1, "", "build_params"]], "mp.nme_gen_dc": [[241, 4, 1, "", "add_zvars"], [241, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline": [[242, 4, 1, "", "name"], [242, 4, 1, "", "np"], [242, 4, 1, "", "nz"]], "mp.nme_legacy_dcline_ac": [[243, 4, 1, "", "add_zvars"], [243, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline_dc": [[246, 4, 1, "", "add_zvars"], [246, 4, 1, "", "build_params"]], "mp.nme_line3p": [[247, 4, 1, "", "build_params"], [247, 4, 1, "", "name"], [247, 4, 1, "", "np"], [247, 4, 1, "", "vec2symmat_stacked"]], "mp.nme_load": [[248, 4, 1, "", "name"], [248, 4, 1, "", "np"]], "mp.nme_load3p": [[249, 4, 1, "", "build_params"], [249, 4, 1, "", "name"], [249, 4, 1, "", "np"]], "mp.nme_load_ac": [[250, 4, 1, "", "build_params"], [250, 4, 1, "", "port_inj_current_nln"], [250, 4, 1, "", "port_inj_power_nln"]], "mp.nme_load_dc": [[253, 4, 1, "", "build_params"]], "mp.nme_shunt": [[254, 4, 1, "", "name"], [254, 4, 1, "", "np"]], "mp.nme_shunt_ac": [[255, 4, 1, "", "build_params"]], "mp.nme_shunt_dc": [[258, 4, 1, "", "build_params"]], "mp.nme_xfmr3p": [[259, 4, 1, "", "build_params"], [259, 4, 1, "", "name"], [259, 4, 1, "", "np"]], "mp.task": [[260, 4, 1, "", "data_model_build"], [260, 4, 1, "", "data_model_build_post"], [260, 4, 1, "", "data_model_build_pre"], [260, 4, 1, "", "data_model_class"], [260, 4, 1, "", "data_model_class_default"], [260, 4, 1, "", "data_model_create"], [260, 2, 1, "", "dm"], [260, 4, 1, "", "dm_converter_build"], [260, 4, 1, "", "dm_converter_class"], [260, 4, 1, "", "dm_converter_class_mpc2_default"], [260, 4, 1, "", "dm_converter_create"], [260, 2, 1, "", "dmc"], [260, 2, 1, "", "et"], [260, 2, 1, "", "i_dm"], [260, 2, 1, "", "i_mm"], [260, 2, 1, "", "i_nm"], [260, 4, 1, "", "math_model_build"], [260, 4, 1, "", "math_model_class"], [260, 4, 1, "", "math_model_class_default"], [260, 4, 1, "", "math_model_create"], [260, 4, 1, "", "math_model_opt"], [260, 2, 1, "", "message"], [260, 2, 1, "", "mm"], [260, 2, 1, "", "mm_opt"], [260, 2, 1, "", "name"], [260, 4, 1, "", "network_model_build"], [260, 4, 1, "", "network_model_build_post"], [260, 4, 1, "", "network_model_build_pre"], [260, 4, 1, "", "network_model_class"], [260, 4, 1, "", "network_model_class_default"], [260, 4, 1, "", "network_model_create"], [260, 4, 1, "", "network_model_update"], [260, 4, 1, "", "network_model_x_soln"], [260, 4, 1, "", "next_dm"], [260, 4, 1, "", "next_mm"], [260, 4, 1, "", "next_nm"], [260, 2, 1, "", "nm"], [260, 4, 1, "", "print_soln"], [260, 4, 1, "", "print_soln_header"], [260, 4, 1, "", "run"], [260, 4, 1, "", "run_post"], [260, 4, 1, "", "run_pre"], [260, 4, 1, "", "save_soln"], [260, 2, 1, "", "success"], [260, 2, 1, "", "tag"]], "mp.task_cpf": [[261, 4, 1, "", "data_model_build"], [261, 4, 1, "", "data_model_class_default"], [261, 4, 1, "", "dm_converter_class"], [261, 4, 1, "", "math_model_class_default"], [261, 4, 1, "", "math_model_opt"], [261, 4, 1, "", "network_model_build"], [261, 4, 1, "", "network_model_update"], [261, 4, 1, "", "network_model_x_soln"], [261, 4, 1, "", "next_mm"], [261, 4, 1, "", "run_pre"], [261, 4, 1, "", "task_cpf"], [261, 2, 1, "", "warmstart"]], "mp.task_cpf_legacy": [[262, 4, 1, "", "legacy_post_run"], [262, 4, 1, "", "run_post"], [262, 4, 1, "", "run_pre"]], "mp.task_opf": [[263, 4, 1, "", "data_model_build_post"], [263, 4, 1, "", "data_model_class_default"], [263, 2, 1, "", "dc"], [263, 4, 1, "", "math_model_class_default"], [263, 4, 1, "", "network_model_class_default"], [263, 4, 1, "", "print_soln_header"], [263, 4, 1, "", "run_pre"]], "mp.task_opf_legacy": [[264, 4, 1, "", "data_model_build_post"], [264, 4, 1, "", "dm_converter_class_mpc2_default"], [264, 4, 1, "", "legacy_post_run"], [264, 4, 1, "", "math_model_class_default"], [264, 4, 1, "", "run_post"], [264, 4, 1, "", "run_pre"]], "mp.task_pf": [[265, 2, 1, "", "dc"], [265, 4, 1, "", "enforce_q_lims"], [265, 2, 1, "", "fixed_q_idx"], [265, 2, 1, "", "fixed_q_qty"], [265, 2, 1, "", "iterations"], [265, 4, 1, "", "math_model_class_default"], [265, 2, 1, "", "name"], [265, 4, 1, "", "network_model_build_post"], [265, 4, 1, "", "network_model_class_default"], [265, 4, 1, "", "network_model_x_soln"], [265, 4, 1, "", "next_dm"], [265, 2, 1, "", "ref"], [265, 2, 1, "", "ref0"], [265, 4, 1, "", "run_pre"], [265, 2, 1, "", "tag"], [265, 2, 1, "", "va_ref0"]], "mp.task_pf_legacy": [[266, 4, 1, "", "legacy_post_run"], [266, 4, 1, "", "run_post"], [266, 4, 1, "", "run_pre"]], "mp.task_shared_legacy": [[267, 4, 1, "", "run_pre_legacy"]], "mp.xt_3p": [[268, 4, 1, "", "dm_element_classes"], [268, 4, 1, "", "dmc_element_classes"], [268, 4, 1, "", "mm_element_classes"], [268, 4, 1, "", "nm_element_classes"]], "mp.xt_legacy_dcline": [[269, 4, 1, "", "dm_element_classes"], [269, 4, 1, "", "dmc_element_classes"], [269, 4, 1, "", "mm_element_classes"], [269, 4, 1, "", "nm_element_classes"]], "mp.xt_reserves": [[270, 4, 1, "", "dm_element_classes"], [270, 4, 1, "", "dmc_element_classes"], [270, 4, 1, "", "mm_element_classes"]], "mp_table": [[271, 4, 1, "", "display"], [271, 4, 1, "", "end"], [271, 3, 1, "", "extract_named_args"], [271, 4, 1, "", "horzcat"], [271, 4, 1, "", "isempty"], [271, 4, 1, "", "istable"], [271, 4, 1, "", "mp_table"], [271, 4, 1, "", "size"], [271, 4, 1, "", "subsasgn"], [271, 4, 1, "", "subsref"], [271, 4, 1, "", "vertcat"]], "mp_table_subclass": [[272, 4, 1, "", "get_table"], [272, 4, 1, "", "set_table"]]}, "objtypes": {"0": "mat:function", "1": "mat:class", "2": "mat:attribute", "3": "mat:staticmethod", "4": "mat:method"}, "objnames": {"0": ["mat", "function", "MATLAB function"], "1": ["mat", "class", "MATLAB class"], "2": ["mat", "attribute", "MATLAB attribute"], "3": ["mat", "staticmethod", "MATLAB static method"], "4": ["mat", "method", "MATLAB method"]}, "titleterms": {"acknowledg": [0, 55], "architectur": 1, "overview": [1, 20], "m": [1, 2, 5, 6, 20, 57, 279, 281], "span": [1, 2, 5, 6, 20, 57, 279, 281], "style": [1, 2, 5, 6, 20, 57, 279, 281], "font": [1, 2, 5, 6, 20, 57, 279, 281], "size": [1, 2, 5, 6, 20, 57, 279, 281], "smaller": [1, 2, 5, 6, 20, 57, 279, 281], "atpow": [1, 2, 5, 6, 20, 57, 279, 281], "matpow": [1, 2, 5, 6, 20, 57, 279, 281], "object": [1, 3, 4, 7, 8, 11], "instanc": 1, "class": [1, 2, 7, 57], "hierarchi": 1, "two": 1, "framework": [1, 281], "custom": [1, 2, 16], "default": 2, "determin": 2, "task": [2, 11, 16, 57, 260], "model": [2, 3, 4, 7, 8, 11, 16, 18, 39, 57], "data": [2, 3, 4, 7, 16, 18, 19, 57], "convert": [2, 4, 11, 16, 18, 57], "specif": [2, 4], "method": [2, 3, 11], "element": [2, 3, 4, 7, 8, 16, 18, 57], "modifi": 2, "via": 2, "option": 2, "extens": [2, 17, 18, 57, 113], "build": [3, 4, 7, 8, 11, 12, 16], "system": 3, "level": [3, 273], "paramet": [3, 8, 18], "print": [3, 16], "tabl": [3, 16], "properti": 3, "connect": [3, 16], "import": [4, 16], "export": [4, 16], "variabl": [4, 7, 16], "map": [4, 16], "valu": [4, 16], "develop": [5, 6], "": [5, 36, 38, 39, 55, 281], "manual": [5, 12, 20, 36, 38, 39, 55, 279, 281], "introduct": [6, 280], "environ": 6, "github": 6, "repositori": 6, "convent": 6, "mathemat": [7, 16, 18, 57], "solv": 7, "math": 7, "updat": [7, 12, 16], "network": [7, 8, 16, 18, 57], "ad": 7, "constraint": 7, "cost": 7, "share": 7, "formul": [8, 16, 18], "dc": [8, 16, 57], "ac": [8, 16, 18], "complex": 8, "power": [8, 16, 19], "inject": 8, "current": 8, "node": 8, "type": [8, 16, 18], "exampl": [8, 19, 37], "bu": 8, "gener": 8, "branch": 8, "load": 8, "aggreg": 8, "notat": 9, "refer": [10, 12, 36, 37, 56, 279], "run": [11, 19], "iter": 11, "execut": 11, "other": [11, 20, 37, 56, 273], "how": [12, 16, 17, 19, 20], "document": [12, 20, 55], "util": 12, "function": [12, 16, 37, 56, 273], "generate_autodoc_stub": 13, "generate_matpower_autodoc": 14, "generate_source_symlink": 15, "creat": [16, 17], "new": [16, 281], "transmiss": 16, "line": [16, 57], "name": 16, "main": [16, 37], "output": 16, "stage": 16, "pretti": 16, "opf": [16, 57], "subclass": 16, "field": 16, "sourc": 16, "all": [16, 18], "cartesian": [16, 18], "v": [16, 18], "polar": [16, 18], "flow": [16, 19], "optim": 16, "us": [16, 17], "see": [16, 17], "also": [16, 17], "an": 17, "A": 18, "test": [18, 37, 55, 56], "gizmo": 18, "3": 18, "port": 18, "compon": 18, "three": [19, 57], "phase": [19, 57], "format": 19, "case": 19, "To": 20, "guid": 20, "link": 20, "have_feature_lu_vec": 21, "have_feature_pardiso": 22, "have_feature_pardiso_legaci": 23, "have_feature_pardiso_object": 24, "mip": [25, 36, 37], "mips_example1": 26, "mips_example2": 27, "mipsver": 28, "mplinsolv": 29, "qps_mip": 30, "t_mip": 31, "t_mips_pardiso": 32, "t_mplinsolv": 33, "t_qps_mip": 34, "test_mip": 35, "user": [36, 38, 39, 55, 281], "privat": [37, 56], "most": 38, "mp": [39, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "opt": 39, "mpom": 39, "have_featur": 40, "have_feature_matlab": 41, "have_feature_octav": 42, "mptestver": 43, "t_begin": 44, "t_end": 45, "t_file_match": 46, "t_have_featur": 47, "t_i": 48, "t_ok": 49, "t_run_test": 50, "t_skip": 51, "t_str_match": 52, "t_test_fcn": 53, "test_mptest": 54, "instal": 55, "usag": 55, "contribut": 55, "licens": 55, "core": 57, "legaci": [57, 281], "contain": 57, "mixin": 57, "miscellan": 57, "base": 57, "fix": 57, "zonal": 57, "reserv": 57, "prototyp": 57, "node_typ": 58, "cost_tabl": 59, "cost_table_util": 60, "data_model": 61, "data_model_cpf": 62, "data_model_opf": 63, "dm_convert": 64, "dm_converter_mpc2": 65, "dm_converter_mpc2_legaci": 66, "dm_element": 67, "dmc_element": 68, "dmce_branch_mpc2": 69, "dmce_bus3p_mpc2": 70, "dmce_bus_mpc2": 71, "dmce_buslink_mpc2": 72, "dmce_gen3p_mpc2": 73, "dmce_gen_mpc2": 74, "dmce_legacy_dcline_mpc2": 75, "dmce_line3p_mpc2": 76, "dmce_load3p_mpc2": 77, "dmce_load_mpc2": 78, "dmce_reserve_gen_mpc2": 79, "dmce_reserve_zone_mpc2": 80, "dmce_shunt_mpc2": 81, "dmce_xfmr3p_mpc2": 82, "dme_branch": 83, "dme_branch_opf": 84, "dme_bu": 85, "dme_bus3p": 86, "dme_bus3p_opf": 87, "dme_bus_opf": 88, "dme_buslink": 89, "dme_buslink_opf": 90, "dme_gen": 91, "dme_gen3p": 92, "dme_gen3p_opf": 93, "dme_gen_opf": 94, "dme_legacy_dclin": 95, "dme_legacy_dcline_opf": 96, "dme_line3p": 97, "dme_line3p_opf": 98, "dme_load": 99, "dme_load3p": 100, "dme_load3p_opf": 101, "dme_load_cpf": 102, "dme_load_opf": 103, "dme_reserve_gen": 104, "dme_reserve_zon": 105, "dme_shared_opf": 106, "dme_shunt": 107, "dme_shunt_cpf": 108, "dme_shunt_opf": 109, "dme_xfmr3p": 110, "dme_xfmr3p_opf": 111, "element_contain": 112, "form": 114, "form_ac": 115, "form_acc": 116, "form_acp": 117, "form_dc": 118, "mapped_arrai": 119, "math_model": 120, "math_model_cpf_acc": [121, 123], "math_model_cpf_acci": 122, "math_model_cpf_acp": [124, 126], "math_model_cpf_acpi": 125, "math_model_opf": 127, "math_model_opf_ac": 128, "math_model_opf_acc": [129, 132], "math_model_opf_acci": 130, "math_model_opf_acci_legaci": 131, "math_model_opf_accs_legaci": 133, "math_model_opf_acp": [134, 137], "math_model_opf_acpi": 135, "math_model_opf_acpi_legaci": 136, "math_model_opf_acps_legaci": 138, "math_model_opf_dc": 139, "math_model_opf_dc_legaci": 140, "math_model_pf": 141, "math_model_pf_ac": 142, "math_model_pf_acci": 143, "math_model_pf_acc": 144, "math_model_pf_acpi": 145, "math_model_pf_acp": 146, "math_model_pf_dc": 147, "mm_element": 148, "mm_shared_opf_legaci": 149, "mm_shared_pfcpf": 150, "mm_shared_pfcpf_ac": 151, "mm_shared_pfcpf_ac_i": 152, "mm_shared_pfcpf_acc": [153, 155], "mm_shared_pfcpf_acci": 154, "mm_shared_pfcpf_acp": [156, 158], "mm_shared_pfcpf_acpi": 157, "mm_shared_pfcpf_dc": 159, "mme_branch": 160, "mme_branch_opf": 161, "mme_branch_opf_ac": 162, "mme_branch_opf_acc": 163, "mme_branch_opf_acp": 164, "mme_branch_opf_dc": 165, "mme_branch_pf_ac": 166, "mme_branch_pf_dc": 167, "mme_bu": 168, "mme_bus3p": 169, "mme_bus3p_opf_acc": 170, "mme_bus3p_opf_acp": 171, "mme_bus_opf_ac": 172, "mme_bus_opf_acc": 173, "mme_bus_opf_acp": 174, "mme_bus_opf_dc": 175, "mme_bus_pf_ac": 176, "mme_bus_pf_dc": 177, "mme_buslink": 178, "mme_buslink_opf": 179, "mme_buslink_opf_acc": 180, "mme_buslink_opf_acp": 181, "mme_buslink_pf_ac": 182, "mme_buslink_pf_acc": 183, "mme_buslink_pf_acp": 184, "mme_gen": 185, "mme_gen3p": 186, "mme_gen3p_opf": 187, "mme_gen_opf": 188, "mme_gen_opf_ac": 189, "mme_gen_opf_dc": 190, "mme_gen_pf_ac": 191, "mme_gen_pf_dc": 192, "mme_legacy_dclin": 193, "mme_legacy_dcline_opf": 194, "mme_legacy_dcline_opf_ac": 195, "mme_legacy_dcline_opf_dc": 196, "mme_legacy_dcline_pf_ac": 197, "mme_legacy_dcline_pf_dc": 198, "mme_line3p": 199, "mme_line3p_opf": 200, "mme_load": 201, "mme_load_cpf": 202, "mme_load_pf_ac": 203, "mme_load_pf_dc": 204, "mme_reserve_gen": 205, "mme_reserve_zon": 206, "mme_shunt": 207, "mme_shunt_cpf": 208, "mme_shunt_pf_ac": 209, "mme_shunt_pf_dc": 210, "mme_xfmr3p": 211, "mme_xfmr3p_opf": 212, "net_model": 213, "net_model_ac": 214, "net_model_acc": 215, "net_model_acp": 216, "net_model_dc": 217, "nm_element": 218, "nme_branch": 219, "nme_branch_ac": 220, "nme_branch_acc": 221, "nme_branch_acp": 222, "nme_branch_dc": 223, "nme_bu": 224, "nme_bus3p": 225, "nme_bus3p_acc": 226, "nme_bus3p_acp": 227, "nme_bus_acc": 228, "nme_bus_acp": 229, "nme_bus_dc": 230, "nme_buslink": 231, "nme_buslink_acc": 232, "nme_buslink_acp": 233, "nme_gen": 234, "nme_gen3p": 235, "nme_gen3p_acc": 236, "nme_gen3p_acp": 237, "nme_gen_ac": 238, "nme_gen_acc": 239, "nme_gen_acp": 240, "nme_gen_dc": 241, "nme_legacy_dclin": 242, "nme_legacy_dcline_ac": 243, "nme_legacy_dcline_acc": 244, "nme_legacy_dcline_acp": 245, "nme_legacy_dcline_dc": 246, "nme_line3p": 247, "nme_load": 248, "nme_load3p": 249, "nme_load_ac": 250, "nme_load_acc": 251, "nme_load_acp": 252, "nme_load_dc": 253, "nme_shunt": 254, "nme_shunt_ac": 255, "nme_shunt_acc": 256, "nme_shunt_acp": 257, "nme_shunt_dc": 258, "nme_xfmr3p": 259, "task_cpf": 261, "task_cpf_legaci": 262, "task_opf": 263, "task_opf_legaci": 264, "task_pf": 265, "task_pf_legaci": 266, "task_shared_legaci": 267, "xt_3p": 268, "xt_legacy_dclin": 269, "xt_reserv": 270, "mp_tabl": 271, "mp_table_subclass": 272, "limit": 272, "top": 273, "simul": 273, "mp_table_class": 274, "run_cpf": 275, "run_mp": 276, "run_opf": 277, "run_pf": 278, "flexibl": 281}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Acknowledgments": [[0, "acknowledgments"], [55, "acknowledgments"]], "Architecture Overview": [[1, "architecture-overview"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Object Instances": [[1, "matpower-object-instances"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Class Hierarchies": [[1, "matpower-class-hierarchies"]], "Two M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Frameworks": [[1, "two-matpower-frameworks"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Customization": [[1, "matpower-customization"]], "Customizing M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{}": [[2, "customizing-matpower"]], "Default Class Determination": [[2, "default-class-determination"]], "Task Class": [[2, "task-class"]], "Model and Data Converter Classes": [[2, "model-and-data-converter-classes"]], "Class Specification Methods of a Task": [[2, "id7"]], "Element Classes": [[2, "element-classes"]], "Element Class Modifiers": [[2, "id8"]], "Customization via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Options": [[2, "customization-via-matpower-options"]], "Class Customization Options": [[2, "id9"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extensions": [[2, "matpower-extensions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Methods": [[2, "id10"]], "Data Model Object": [[3, "data-model-object"]], "Data Models": [[3, "data-models"]], "Building a Data Model": [[3, "building-a-data-model"]], "System Level Parameters": [[3, "system-level-parameters"]], "Printing a Data Model": [[3, "printing-a-data-model"]], "Data Model Elements": [[3, "data-model-elements"]], "Data Tables": [[3, "data-tables"]], "Properties": [[3, "properties"]], "Data Model Element Properties": [[3, "id6"]], "Methods": [[3, "methods"]], "Connections": [[3, "connections"]], "Data Model Converter Object": [[4, "data-model-converter-object"]], "Data Model Converters": [[4, "data-model-converters"]], "Building a Data Model Converter": [[4, "building-a-data-model-converter"]], "Importing Data": [[4, "importing-data"]], "Exporting Data": [[4, "exporting-data"]], "Data Model Converter Elements": [[4, "data-model-converter-elements"]], "Data Import Specifications": [[4, "data-import-specifications"]], "Variable Map Values": [[4, "id5"]], "Data Export Specifications": [[4, "data-export-specifications"]], "Introduction": [[6, "introduction"], [280, "introduction"]], "Development Environment": [[6, "development-environment"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} GitHub Repositories": [[6, "id1"]], "Conventions": [[6, "conventions"]], "Mathematical Model Object": [[7, "mathematical-model-object"]], "Mathematical Models": [[7, "mathematical-models"]], "Building a Mathematical Model": [[7, "building-a-mathematical-model"]], "Solving a Math Model": [[7, "solving-a-math-model"]], "Updating Network and Data Models": [[7, "updating-network-and-data-models"]], "Mathematical Model Elements": [[7, "mathematical-model-elements"]], "Adding Variables, Constraints, and Costs": [[7, "adding-variables-constraints-and-costs"]], "Updating Data Model Elements": [[7, "updating-data-model-elements"]], "Shared Classes": [[7, "shared-classes"]], "Network Model Object": [[8, "network-model-object"]], "Network Model Formulations": [[8, "network-model-formulations"]], "DC Formulation": [[8, "dc-formulation"], [16, "dc-formulation"]], "AC Formulations": [[8, "ac-formulations"], [16, "ac-formulations"], [18, "ac-formulations"]], "Complex Power Injections": [[8, "complex-power-injections"]], "Complex Current Injections": [[8, "complex-current-injections"]], "Network Models": [[8, "network-models"]], "Building a Network Model": [[8, "building-a-network-model"]], "Node Types": [[8, "node-types"]], "Network Model Elements": [[8, "network-model-elements"]], "Example Elements": [[8, "example-elements"]], "Bus": [[8, "bus"]], "Generator": [[8, "generator"]], "Branch": [[8, "branch"]], "Load": [[8, "load"]], "Building Element Parameters": [[8, "building-element-parameters"]], "Aggregation": [[8, "aggregation"]], "Notation": [[9, "notation"]], "References": [[10, "references"]], "Task Object": [[11, "task-object"]], "Running a Task": [[11, "running-a-task"]], "Building Model and Converter Objects": [[11, "building-model-and-converter-objects"]], "Iterative Execution": [[11, "iterative-execution"]], "Other Methods": [[11, "other-methods"]], "How to Build the Documentation": [[12, "how-to-build-the-documentation"]], "Updating the Reference Manual": [[12, "updating-the-reference-manual"]], "Reference Manual Utility Functions": [[12, "reference-manual-utility-functions"]], "How to Create a New Element Type": [[16, "how-to-create-a-new-element-type"]], "DC Transmission Line": [[16, "dc-transmission-line"]], "Data Model Element": [[16, "data-model-element"], [18, "data-model-element"]], "DC Line Data Model": [[16, "id2"]], "Naming": [[16, "naming"]], "Connectivity": [[16, "connectivity"]], "Main Data Table": [[16, "main-data-table"]], "Output Values": [[16, "output-values"]], "Building the Element in Stages": [[16, "building-the-element-in-stages"]], "Pretty Printing": [[16, "pretty-printing"]], "OPF Subclass": [[16, "opf-subclass"]], "Data Model Converter Element": [[16, "data-model-converter-element"], [18, "data-model-converter-element"]], "Main Field in Data Source": [[16, "main-field-in-data-source"]], "Table Variable Map": [[16, "table-variable-map"]], "Custom Import/Export Functions": [[16, "custom-import-export-functions"]], "Network Model Element": [[16, "network-model-element"], [18, "network-model-element"]], "All Formulations": [[16, "all-formulations"], [18, "all-formulations"]], "AC Cartesian vs Polar Formulations": [[16, "ac-cartesian-vs-polar-formulations"], [18, "ac-cartesian-vs-polar-formulations"]], "Mathematical Model Element": [[16, "mathematical-model-element"], [18, "mathematical-model-element"]], "All Tasks and Formulations": [[16, "all-tasks-and-formulations"]], "Power Flow": [[16, "power-flow"]], "Optimal Power Flow": [[16, "optimal-power-flow"]], "Data Model Update": [[16, "data-model-update"]], "AC Optimal Power Flow": [[16, "ac-optimal-power-flow"]], "DC Optimal Power Flow": [[16, "dc-optimal-power-flow"]], "Using the New Element": [[16, "using-the-new-element"]], "See Also": [[16, "see-also"], [17, "see-also"]], "How to Create an Extension": [[17, "how-to-create-an-extension"]], "Using the Extension": [[17, "using-the-extension"]], "A Test Gizmo Element Type": [[18, "a-test-gizmo-element-type"]], "3-Port Gizmo": [[18, "port-gizmo"]], "Gizmo Components/Parameters": [[18, "id2"]], "Gizmo Data Model": [[18, "id3"]], "Gizmo Extension": [[18, "gizmo-extension"]], "How to Run a Three-Phase Power Flow": [[19, "how-to-run-a-three-phase-power-flow"]], "Data Format": [[19, "data-format"]], "Example Cases": [[19, "example-cases"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Documentation": [[20, "matpower-documentation"]], "Overview": [[20, "overview"]], "Manuals": [[20, null]], "How To Guides": [[20, null]], "Other Links": [[20, null]], "MIPS User\u2019s Manual": [[36, "mips-user-s-manual"]], "Reference": [[36, "reference"], [37, "reference"], [56, "reference"]], "Main MIPS Functions": [[37, "main-mips-functions"]], "Other Function": [[37, "other-function"]], "MIPS Examples": [[37, "mips-examples"]], "MIPS Tests": [[37, "mips-tests"]], "Private Functions": [[37, "private-functions"], [56, "private-functions"]], "MOST\\most{} User\u2019s Manual": [[38, "most-user-s-manual"]], "MP-Opt-Model\\mpom{} User\u2019s Manual": [[39, "mpom-user-s-manual"]], "MP-Test User\u2019s Manual": [[55, "mp-test-user-s-manual"]], "Installation": [[55, "installation"]], "Usage": [[55, "usage"]], "Documentation": [[55, "documentation"]], "Contributing": [[55, "contributing"]], "License": [[55, "license"]], "Testing Functions": [[56, "testing-functions"]], "Other Functions": [[56, "other-functions"], [273, "other-functions"]], "Tests of MP-Test": [[56, "tests-of-mp-test"]], "Classes": [[57, "classes"]], "Task Classes": [[57, "task-classes"]], "Core Task Classes": [[57, "core-task-classes"]], "Legacy Task Classes": [[57, "legacy-task-classes"]], "Data Model Classes": [[57, "data-model-classes"]], "Containers": [[57, "containers"], [57, "id1"], [57, "id3"], [57, "id5"]], "Elements": [[57, "elements"], [57, "id2"], [57, "id4"], [57, "id6"]], "Element Mixins": [[57, "element-mixins"]], "Data Model Converter Classes": [[57, "data-model-converter-classes"]], "Network Model Classes": [[57, "network-model-classes"]], "Mathematical Model Classes": [[57, "mathematical-model-classes"]], "Container Mixins": [[57, "container-mixins"]], "Miscellaneous Classes": [[57, "miscellaneous-classes"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Classes": [[57, "matpower-extension-classes"]], "Base": [[57, "base"]], "OPF Fixed Zonal Reserves Extension": [[57, "opf-fixed-zonal-reserves-extension"]], "Three-Phase Prototype Extension": [[57, "three-phase-prototype-extension"]], "Legacy DC Line Extension": [[57, "legacy-dc-line-extension"]], "Functions": [[273, "functions"]], "Top-Level Simulation Functions": [[273, "top-level-simulation-functions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} User\u2019s Manual": [[281, "matpower-user-s-manual"]], "Legacy Framework": [[281, "legacy-framework"]], "New Flexible Framework": [[281, "new-flexible-framework"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Developer\u2019s Manual": [[5, "matpower-developer-s-manual"]], "generate_autodoc_stubs": [[13, "generate-autodoc-stubs"]], "generate_matpower_autodoc": [[14, "generate-matpower-autodoc"]], "generate_source_symlinks": [[15, "generate-source-symlinks"]], "have_feature_lu_vec": [[21, "have-feature-lu-vec"]], "have_feature_pardiso": [[22, "have-feature-pardiso"]], "have_feature_pardiso_legacy": [[23, "have-feature-pardiso-legacy"]], "have_feature_pardiso_object": [[24, "have-feature-pardiso-object"]], "mips": [[25, "mips"]], "mips_example1": [[26, "mips-example1"]], "mips_example2": [[27, "mips-example2"]], "mipsver": [[28, "mipsver"]], "mplinsolve": [[29, "mplinsolve"]], "qps_mips": [[30, "qps-mips"]], "t_mips": [[31, "t-mips"]], "t_mips_pardiso": [[32, "t-mips-pardiso"]], "t_mplinsolve": [[33, "t-mplinsolve"]], "t_qps_mips": [[34, "t-qps-mips"]], "test_mips": [[35, "test-mips"]], "have_feature": [[40, "have-feature"]], "have_feature_matlab": [[41, "have-feature-matlab"]], "have_feature_octave": [[42, "have-feature-octave"]], "mptestver": [[43, "mptestver"]], "t_begin": [[44, "t-begin"]], "t_end": [[45, "t-end"]], "t_file_match": [[46, "t-file-match"]], "t_have_feature": [[47, "t-have-feature"]], "t_is": [[48, "t-is"]], "t_ok": [[49, "t-ok"]], "t_run_tests": [[50, "t-run-tests"]], "t_skip": [[51, "t-skip"]], "t_str_match": [[52, "t-str-match"]], "t_test_fcns": [[53, "t-test-fcns"]], "test_mptest": [[54, "test-mptest"]], "mp.NODE_TYPE": [[58, "mp-node-type"]], "mp.cost_table": [[59, "mp-cost-table"]], "mp.cost_table_utils": [[60, "mp-cost-table-utils"]], "mp.data_model": [[61, "mp-data-model"]], "mp.data_model_cpf": [[62, "mp-data-model-cpf"]], "mp.data_model_opf": [[63, "mp-data-model-opf"]], "mp.dm_converter": [[64, "mp-dm-converter"]], "mp.dm_converter_mpc2": [[65, "mp-dm-converter-mpc2"]], "mp.dm_converter_mpc2_legacy": [[66, "mp-dm-converter-mpc2-legacy"]], "mp.dm_element": [[67, "mp-dm-element"]], "mp.dmc_element": [[68, "mp-dmc-element"]], "mp.dmce_branch_mpc2": [[69, "mp-dmce-branch-mpc2"]], "mp.dmce_bus3p_mpc2": [[70, "mp-dmce-bus3p-mpc2"]], "mp.dmce_bus_mpc2": [[71, "mp-dmce-bus-mpc2"]], "mp.dmce_buslink_mpc2": [[72, "mp-dmce-buslink-mpc2"]], "mp.dmce_gen3p_mpc2": [[73, "mp-dmce-gen3p-mpc2"]], "mp.dmce_gen_mpc2": [[74, "mp-dmce-gen-mpc2"]], "mp.dmce_legacy_dcline_mpc2": [[75, "mp-dmce-legacy-dcline-mpc2"]], "mp.dmce_line3p_mpc2": [[76, "mp-dmce-line3p-mpc2"]], "mp.dmce_load3p_mpc2": [[77, "mp-dmce-load3p-mpc2"]], "mp.dmce_load_mpc2": [[78, "mp-dmce-load-mpc2"]], "mp.dmce_reserve_gen_mpc2": [[79, "mp-dmce-reserve-gen-mpc2"]], "mp.dmce_reserve_zone_mpc2": [[80, "mp-dmce-reserve-zone-mpc2"]], "mp.dmce_shunt_mpc2": [[81, "mp-dmce-shunt-mpc2"]], "mp.dmce_xfmr3p_mpc2": [[82, "mp-dmce-xfmr3p-mpc2"]], "mp.dme_branch": [[83, "mp-dme-branch"]], "mp.dme_branch_opf": [[84, "mp-dme-branch-opf"]], "mp.dme_bus": [[85, "mp-dme-bus"]], "mp.dme_bus3p": [[86, "mp-dme-bus3p"]], "mp.dme_bus3p_opf": [[87, "mp-dme-bus3p-opf"]], "mp.dme_bus_opf": [[88, "mp-dme-bus-opf"]], "mp.dme_buslink": [[89, "mp-dme-buslink"]], "mp.dme_buslink_opf": [[90, "mp-dme-buslink-opf"]], "mp.dme_gen": [[91, "mp-dme-gen"]], "mp.dme_gen3p": [[92, "mp-dme-gen3p"]], "mp.dme_gen3p_opf": [[93, "mp-dme-gen3p-opf"]], "mp.dme_gen_opf": [[94, "mp-dme-gen-opf"]], "mp.dme_legacy_dcline": [[95, "mp-dme-legacy-dcline"]], "mp.dme_legacy_dcline_opf": [[96, "mp-dme-legacy-dcline-opf"]], "mp.dme_line3p": [[97, "mp-dme-line3p"]], "mp.dme_line3p_opf": [[98, "mp-dme-line3p-opf"]], "mp.dme_load": [[99, "mp-dme-load"]], "mp.dme_load3p": [[100, "mp-dme-load3p"]], "mp.dme_load3p_opf": [[101, "mp-dme-load3p-opf"]], "mp.dme_load_cpf": [[102, "mp-dme-load-cpf"]], "mp.dme_load_opf": [[103, "mp-dme-load-opf"]], "mp.dme_reserve_gen": [[104, "mp-dme-reserve-gen"]], "mp.dme_reserve_zone": [[105, "mp-dme-reserve-zone"]], "mp.dme_shared_opf": [[106, "mp-dme-shared-opf"]], "mp.dme_shunt": [[107, "mp-dme-shunt"]], "mp.dme_shunt_cpf": [[108, "mp-dme-shunt-cpf"]], "mp.dme_shunt_opf": [[109, "mp-dme-shunt-opf"]], "mp.dme_xfmr3p": [[110, "mp-dme-xfmr3p"]], "mp.dme_xfmr3p_opf": [[111, "mp-dme-xfmr3p-opf"]], "mp.element_container": [[112, "mp-element-container"]], "mp.extension": [[113, "mp-extension"]], "mp.form": [[114, "mp-form"]], "mp.form_ac": [[115, "mp-form-ac"]], "mp.form_acc": [[116, "mp-form-acc"]], "mp.form_acp": [[117, "mp-form-acp"]], "mp.form_dc": [[118, "mp-form-dc"]], "mp.mapped_array": [[119, "mp-mapped-array"]], "mp.math_model": [[120, "mp-math-model"]], "mp.math_model_cpf_acc": [[121, "mp-math-model-cpf-acc"]], "mp.math_model_cpf_acci": [[122, "mp-math-model-cpf-acci"]], "mp.math_model_cpf_accs": [[123, "mp-math-model-cpf-accs"]], "mp.math_model_cpf_acp": [[124, "mp-math-model-cpf-acp"]], "mp.math_model_cpf_acpi": [[125, "mp-math-model-cpf-acpi"]], "mp.math_model_cpf_acps": [[126, "mp-math-model-cpf-acps"]], "mp.math_model_opf": [[127, "mp-math-model-opf"]], "mp.math_model_opf_ac": [[128, "mp-math-model-opf-ac"]], "mp.math_model_opf_acc": [[129, "mp-math-model-opf-acc"]], "mp.math_model_opf_acci": [[130, "mp-math-model-opf-acci"]], "mp.math_model_opf_acci_legacy": [[131, "mp-math-model-opf-acci-legacy"]], "mp.math_model_opf_accs": [[132, "mp-math-model-opf-accs"]], "mp.math_model_opf_accs_legacy": [[133, "mp-math-model-opf-accs-legacy"]], "mp.math_model_opf_acp": [[134, "mp-math-model-opf-acp"]], "mp.math_model_opf_acpi": [[135, "mp-math-model-opf-acpi"]], "mp.math_model_opf_acpi_legacy": [[136, "mp-math-model-opf-acpi-legacy"]], "mp.math_model_opf_acps": [[137, "mp-math-model-opf-acps"]], "mp.math_model_opf_acps_legacy": [[138, "mp-math-model-opf-acps-legacy"]], "mp.math_model_opf_dc": [[139, "mp-math-model-opf-dc"]], "mp.math_model_opf_dc_legacy": [[140, "mp-math-model-opf-dc-legacy"]], "mp.math_model_pf": [[141, "mp-math-model-pf"]], "mp.math_model_pf_ac": [[142, "mp-math-model-pf-ac"]], "mp.math_model_pf_acci": [[143, "mp-math-model-pf-acci"]], "mp.math_model_pf_accs": [[144, "mp-math-model-pf-accs"]], "mp.math_model_pf_acpi": [[145, "mp-math-model-pf-acpi"]], "mp.math_model_pf_acps": [[146, "mp-math-model-pf-acps"]], "mp.math_model_pf_dc": [[147, "mp-math-model-pf-dc"]], "mp.mm_element": [[148, "mp-mm-element"]], "mp.mm_shared_opf_legacy": [[149, "mp-mm-shared-opf-legacy"]], "mp.mm_shared_pfcpf": [[150, "mp-mm-shared-pfcpf"]], "mp.mm_shared_pfcpf_ac": [[151, "mp-mm-shared-pfcpf-ac"]], "mp.mm_shared_pfcpf_ac_i": [[152, "mp-mm-shared-pfcpf-ac-i"]], "mp.mm_shared_pfcpf_acc": [[153, "mp-mm-shared-pfcpf-acc"]], "mp.mm_shared_pfcpf_acci": [[154, "mp-mm-shared-pfcpf-acci"]], "mp.mm_shared_pfcpf_accs": [[155, "mp-mm-shared-pfcpf-accs"]], "mp.mm_shared_pfcpf_acp": [[156, "mp-mm-shared-pfcpf-acp"]], "mp.mm_shared_pfcpf_acpi": [[157, "mp-mm-shared-pfcpf-acpi"]], "mp.mm_shared_pfcpf_acps": [[158, "mp-mm-shared-pfcpf-acps"]], "mp.mm_shared_pfcpf_dc": [[159, "mp-mm-shared-pfcpf-dc"]], "mp.mme_branch": [[160, "mp-mme-branch"]], "mp.mme_branch_opf": [[161, "mp-mme-branch-opf"]], "mp.mme_branch_opf_ac": [[162, "mp-mme-branch-opf-ac"]], "mp.mme_branch_opf_acc": [[163, "mp-mme-branch-opf-acc"]], "mp.mme_branch_opf_acp": [[164, "mp-mme-branch-opf-acp"]], "mp.mme_branch_opf_dc": [[165, "mp-mme-branch-opf-dc"]], "mp.mme_branch_pf_ac": [[166, "mp-mme-branch-pf-ac"]], "mp.mme_branch_pf_dc": [[167, "mp-mme-branch-pf-dc"]], "mp.mme_bus": [[168, "mp-mme-bus"]], "mp.mme_bus3p": [[169, "mp-mme-bus3p"]], "mp.mme_bus3p_opf_acc": [[170, "mp-mme-bus3p-opf-acc"]], "mp.mme_bus3p_opf_acp": [[171, "mp-mme-bus3p-opf-acp"]], "mp.mme_bus_opf_ac": [[172, "mp-mme-bus-opf-ac"]], "mp.mme_bus_opf_acc": [[173, "mp-mme-bus-opf-acc"]], "mp.mme_bus_opf_acp": [[174, "mp-mme-bus-opf-acp"]], "mp.mme_bus_opf_dc": [[175, "mp-mme-bus-opf-dc"]], "mp.mme_bus_pf_ac": [[176, "mp-mme-bus-pf-ac"]], "mp.mme_bus_pf_dc": [[177, "mp-mme-bus-pf-dc"]], "mp.mme_buslink": [[178, "mp-mme-buslink"]], "mp.mme_buslink_opf": [[179, "mp-mme-buslink-opf"]], "mp.mme_buslink_opf_acc": [[180, "mp-mme-buslink-opf-acc"]], "mp.mme_buslink_opf_acp": [[181, "mp-mme-buslink-opf-acp"]], "mp.mme_buslink_pf_ac": [[182, "mp-mme-buslink-pf-ac"]], "mp.mme_buslink_pf_acc": [[183, "mp-mme-buslink-pf-acc"]], "mp.mme_buslink_pf_acp": [[184, "mp-mme-buslink-pf-acp"]], "mp.mme_gen": [[185, "mp-mme-gen"]], "mp.mme_gen3p": [[186, "mp-mme-gen3p"]], "mp.mme_gen3p_opf": [[187, "mp-mme-gen3p-opf"]], "mp.mme_gen_opf": [[188, "mp-mme-gen-opf"]], "mp.mme_gen_opf_ac": [[189, "mp-mme-gen-opf-ac"]], "mp.mme_gen_opf_dc": [[190, "mp-mme-gen-opf-dc"]], "mp.mme_gen_pf_ac": [[191, "mp-mme-gen-pf-ac"]], "mp.mme_gen_pf_dc": [[192, "mp-mme-gen-pf-dc"]], "mp.mme_legacy_dcline": [[193, "mp-mme-legacy-dcline"]], "mp.mme_legacy_dcline_opf": [[194, "mp-mme-legacy-dcline-opf"]], "mp.mme_legacy_dcline_opf_ac": [[195, "mp-mme-legacy-dcline-opf-ac"]], "mp.mme_legacy_dcline_opf_dc": [[196, "mp-mme-legacy-dcline-opf-dc"]], "mp.mme_legacy_dcline_pf_ac": [[197, "mp-mme-legacy-dcline-pf-ac"]], "mp.mme_legacy_dcline_pf_dc": [[198, "mp-mme-legacy-dcline-pf-dc"]], "mp.mme_line3p": [[199, "mp-mme-line3p"]], "mp.mme_line3p_opf": [[200, "mp-mme-line3p-opf"]], "mp.mme_load": [[201, "mp-mme-load"]], "mp.mme_load_cpf": [[202, "mp-mme-load-cpf"]], "mp.mme_load_pf_ac": [[203, "mp-mme-load-pf-ac"]], "mp.mme_load_pf_dc": [[204, "mp-mme-load-pf-dc"]], "mp.mme_reserve_gen": [[205, "mp-mme-reserve-gen"]], "mp.mme_reserve_zone": [[206, "mp-mme-reserve-zone"]], "mp.mme_shunt": [[207, "mp-mme-shunt"]], "mp.mme_shunt_cpf": [[208, "mp-mme-shunt-cpf"]], "mp.mme_shunt_pf_ac": [[209, "mp-mme-shunt-pf-ac"]], "mp.mme_shunt_pf_dc": [[210, "mp-mme-shunt-pf-dc"]], "mp.mme_xfmr3p": [[211, "mp-mme-xfmr3p"]], "mp.mme_xfmr3p_opf": [[212, "mp-mme-xfmr3p-opf"]], "mp.net_model": [[213, "mp-net-model"]], "mp.net_model_ac": [[214, "mp-net-model-ac"]], "mp.net_model_acc": [[215, "mp-net-model-acc"]], "mp.net_model_acp": [[216, "mp-net-model-acp"]], "mp.net_model_dc": [[217, "mp-net-model-dc"]], "mp.nm_element": [[218, "mp-nm-element"]], "mp.nme_branch": [[219, "mp-nme-branch"]], "mp.nme_branch_ac": [[220, "mp-nme-branch-ac"]], "mp.nme_branch_acc": [[221, "mp-nme-branch-acc"]], "mp.nme_branch_acp": [[222, "mp-nme-branch-acp"]], "mp.nme_branch_dc": [[223, "mp-nme-branch-dc"]], "mp.nme_bus": [[224, "mp-nme-bus"]], "mp.nme_bus3p": [[225, "mp-nme-bus3p"]], "mp.nme_bus3p_acc": [[226, "mp-nme-bus3p-acc"]], "mp.nme_bus3p_acp": [[227, "mp-nme-bus3p-acp"]], "mp.nme_bus_acc": [[228, "mp-nme-bus-acc"]], "mp.nme_bus_acp": [[229, "mp-nme-bus-acp"]], "mp.nme_bus_dc": [[230, "mp-nme-bus-dc"]], "mp.nme_buslink": [[231, "mp-nme-buslink"]], "mp.nme_buslink_acc": [[232, "mp-nme-buslink-acc"]], "mp.nme_buslink_acp": [[233, "mp-nme-buslink-acp"]], "mp.nme_gen": [[234, "mp-nme-gen"]], "mp.nme_gen3p": [[235, "mp-nme-gen3p"]], "mp.nme_gen3p_acc": [[236, "mp-nme-gen3p-acc"]], "mp.nme_gen3p_acp": [[237, "mp-nme-gen3p-acp"]], "mp.nme_gen_ac": [[238, "mp-nme-gen-ac"]], "mp.nme_gen_acc": [[239, "mp-nme-gen-acc"]], "mp.nme_gen_acp": [[240, "mp-nme-gen-acp"]], "mp.nme_gen_dc": [[241, "mp-nme-gen-dc"]], "mp.nme_legacy_dcline": [[242, "mp-nme-legacy-dcline"]], "mp.nme_legacy_dcline_ac": [[243, "mp-nme-legacy-dcline-ac"]], "mp.nme_legacy_dcline_acc": [[244, "mp-nme-legacy-dcline-acc"]], "mp.nme_legacy_dcline_acp": [[245, "mp-nme-legacy-dcline-acp"]], "mp.nme_legacy_dcline_dc": [[246, "mp-nme-legacy-dcline-dc"]], "mp.nme_line3p": [[247, "mp-nme-line3p"]], "mp.nme_load": [[248, "mp-nme-load"]], "mp.nme_load3p": [[249, "mp-nme-load3p"]], "mp.nme_load_ac": [[250, "mp-nme-load-ac"]], "mp.nme_load_acc": [[251, "mp-nme-load-acc"]], "mp.nme_load_acp": [[252, "mp-nme-load-acp"]], "mp.nme_load_dc": [[253, "mp-nme-load-dc"]], "mp.nme_shunt": [[254, "mp-nme-shunt"]], "mp.nme_shunt_ac": [[255, "mp-nme-shunt-ac"]], "mp.nme_shunt_acc": [[256, "mp-nme-shunt-acc"]], "mp.nme_shunt_acp": [[257, "mp-nme-shunt-acp"]], "mp.nme_shunt_dc": [[258, "mp-nme-shunt-dc"]], "mp.nme_xfmr3p": [[259, "mp-nme-xfmr3p"]], "mp.task": [[260, "mp-task"]], "mp.task_cpf": [[261, "mp-task-cpf"]], "mp.task_cpf_legacy": [[262, "mp-task-cpf-legacy"]], "mp.task_opf": [[263, "mp-task-opf"]], "mp.task_opf_legacy": [[264, "mp-task-opf-legacy"]], "mp.task_pf": [[265, "mp-task-pf"]], "mp.task_pf_legacy": [[266, "mp-task-pf-legacy"]], "mp.task_shared_legacy": [[267, "mp-task-shared-legacy"]], "mp.xt_3p": [[268, "mp-xt-3p"]], "mp.xt_legacy_dcline": [[269, "mp-xt-legacy-dcline"]], "mp.xt_reserves": [[270, "mp-xt-reserves"]], "mp_table": [[271, "mp-table"]], "mp_table_subclass": [[272, "mp-table-subclass"]], "Limitations": [[272, null]], "mp_table_class": [[274, "mp-table-class"]], "run_cpf": [[275, "run-cpf"]], "run_mp": [[276, "run-mp"]], "run_opf": [[277, "run-opf"]], "run_pf": [[278, "run-pf"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Reference Manual": [[279, "matpower-reference-manual"]]}, "indexentries": {"generate_autodoc_stubs() (built-in function)": [[13, "generate_autodoc_stubs"]], "generate_matpower_autodoc() (built-in function)": [[14, "generate_matpower_autodoc"]], "generate_source_symlinks() (built-in function)": [[15, "generate_source_symlinks"]], "have_feature_lu_vec() (built-in function)": [[21, "have_feature_lu_vec"]], "have_feature_pardiso() (built-in function)": [[22, "have_feature_pardiso"]], "have_feature_pardiso_legacy() (built-in function)": [[23, "have_feature_pardiso_legacy"]], "have_feature_pardiso_object() (built-in function)": [[24, "have_feature_pardiso_object"]], "mips() (in module mips)": [[25, "mips.mips"]], "mips_example1() (built-in function)": [[26, "mips_example1"]], "mips_example2() (built-in function)": [[27, "mips_example2"]], "mipsver() (built-in function)": [[28, "mipsver"]], "mplinsolve() (built-in function)": [[29, "mplinsolve"]], "qps_mips() (built-in function)": [[30, "qps_mips"]], "t_mips() (built-in function)": [[31, "t_mips"]], "t_mips_pardiso() (built-in function)": [[32, "t_mips_pardiso"]], "t_mplinsolve() (built-in function)": [[33, "t_mplinsolve"]], "t_qps_mips() (built-in function)": [[34, "t_qps_mips"]], "test_mips() (built-in function)": [[35, "test_mips"]], "have_feature() (built-in function)": [[40, "have_feature"]], "have_feature_matlab() (built-in function)": [[41, "have_feature_matlab"]], "have_feature_octave() (built-in function)": [[42, "have_feature_octave"]], "mptestver() (built-in function)": [[43, "mptestver"]], "t_begin() (built-in function)": [[44, "t_begin"]], "t_end() (built-in function)": [[45, "t_end"]], "t_file_match() (built-in function)": [[46, "t_file_match"]], "t_have_feature() (built-in function)": [[47, "t_have_feature"]], "t_is() (built-in function)": [[48, "t_is"]], "t_ok() (built-in function)": [[49, "t_ok"]], "t_run_tests() (built-in function)": [[50, "t_run_tests"]], "t_skip() (built-in function)": [[51, "t_skip"]], "t_str_match() (built-in function)": [[52, "t_str_match"]], "t_test_fcns() (built-in function)": [[53, "t_test_fcns"]], "test_mptest() (built-in function)": [[54, "test_mptest"]], "node_type (class in mp)": [[58, "mp.NODE_TYPE"]], "none (mp.node_type attribute)": [[58, "mp.NODE_TYPE.NONE"]], "pq (mp.node_type attribute)": [[58, "mp.NODE_TYPE.PQ"]], "pv (mp.node_type attribute)": [[58, "mp.NODE_TYPE.PV"]], "ref (mp.node_type attribute)": [[58, "mp.NODE_TYPE.REF"]], "is_valid() (mp.node_type static method)": [[58, "mp.NODE_TYPE.is_valid"]], "cost_table (class in mp)": [[59, "mp.cost_table"]], "cost_table() (mp.cost_table method)": [[59, "mp.cost_table.cost_table"]], "diff_poly_fcn() (mp.cost_table static method)": [[59, "mp.cost_table.diff_poly_fcn"]], "eval_poly_fcn() (mp.cost_table static method)": [[59, "mp.cost_table.eval_poly_fcn"]], "max_pwl_cost() (mp.cost_table method)": [[59, "mp.cost_table.max_pwl_cost"]], "poly_cost_fcn() (mp.cost_table static method)": [[59, "mp.cost_table.poly_cost_fcn"]], "poly_params() (mp.cost_table method)": [[59, "mp.cost_table.poly_params"]], "pwl_params() (mp.cost_table method)": [[59, "mp.cost_table.pwl_params"]], "cost_table_utils (class in mp)": [[60, "mp.cost_table_utils"]], "max_pwl_cost() (mp.cost_table_utils static method)": [[60, "mp.cost_table_utils.max_pwl_cost"]], "poly_params() (mp.cost_table_utils static method)": [[60, "mp.cost_table_utils.poly_params"]], "pwl_params() (mp.cost_table_utils static method)": [[60, "mp.cost_table_utils.pwl_params"]], "base_kva (mp.data_model attribute)": [[61, "mp.data_model.base_kva"]], "base_mva (mp.data_model attribute)": [[61, "mp.data_model.base_mva"]], "build() (mp.data_model method)": [[61, "mp.data_model.build"]], "build_params() (mp.data_model method)": [[61, "mp.data_model.build_params"]], "copy() (mp.data_model method)": [[61, "mp.data_model.copy"]], "count() (mp.data_model method)": [[61, "mp.data_model.count"]], "data_model (class in mp)": [[61, "mp.data_model"]], "data_model() (mp.data_model method)": [[61, "mp.data_model.data_model"]], "display() (mp.data_model method)": [[61, "mp.data_model.display"]], "initialize() (mp.data_model method)": [[61, "mp.data_model.initialize"]], "online() (mp.data_model method)": [[61, "mp.data_model.online"]], "pp_data() (mp.data_model method)": [[61, "mp.data_model.pp_data"]], "pp_flags() (mp.data_model method)": [[61, "mp.data_model.pp_flags"]], "pp_get_headers() (mp.data_model method)": [[61, "mp.data_model.pp_get_headers"]], "pp_get_headers_cnt() (mp.data_model method)": [[61, "mp.data_model.pp_get_headers_cnt"]], "pp_get_headers_ext() (mp.data_model method)": [[61, "mp.data_model.pp_get_headers_ext"]], "pp_get_headers_other() (mp.data_model method)": [[61, "mp.data_model.pp_get_headers_other"]], "pp_have_section() (mp.data_model method)": [[61, "mp.data_model.pp_have_section"]], "pp_section() (mp.data_model method)": [[61, "mp.data_model.pp_section"]], "pp_section_label() (mp.data_model method)": [[61, "mp.data_model.pp_section_label"]], "pp_section_list() (mp.data_model method)": [[61, "mp.data_model.pp_section_list"]], "pretty_print() (mp.data_model method)": [[61, "mp.data_model.pretty_print"]], "set_bus_v_lims_via_vg() (mp.data_model method)": [[61, "mp.data_model.set_bus_v_lims_via_vg"]], "source (mp.data_model attribute)": [[61, "mp.data_model.source"]], "update_status() (mp.data_model method)": [[61, "mp.data_model.update_status"]], "userdata (mp.data_model attribute)": [[61, "mp.data_model.userdata"]], "data_model_cpf (class in mp)": [[62, "mp.data_model_cpf"]], "data_model_cpf() (mp.data_model_cpf method)": [[62, "mp.data_model_cpf.data_model_cpf"]], "data_model_opf (class in mp)": [[63, "mp.data_model_opf"]], "data_model_opf() (mp.data_model_opf method)": [[63, "mp.data_model_opf.data_model_opf"]], "pp_flags() (mp.data_model_opf method)": [[63, "mp.data_model_opf.pp_flags"]], "pp_get_headers_other() (mp.data_model_opf method)": [[63, "mp.data_model_opf.pp_get_headers_other"]], "pp_section_list() (mp.data_model_opf method)": [[63, "mp.data_model_opf.pp_section_list"]], "build() (mp.dm_converter method)": [[64, "mp.dm_converter.build"]], "copy() (mp.dm_converter method)": [[64, "mp.dm_converter.copy"]], "display() (mp.dm_converter method)": [[64, "mp.dm_converter.display"]], "dm_converter (class in mp)": [[64, "mp.dm_converter"]], "export() (mp.dm_converter method)": [[64, "mp.dm_converter.export"]], "format_tag() (mp.dm_converter method)": [[64, "mp.dm_converter.format_tag"]], "import() (mp.dm_converter method)": [[64, "mp.dm_converter.import"]], "init_export() (mp.dm_converter method)": [[64, "mp.dm_converter.init_export"]], "save() (mp.dm_converter method)": [[64, "mp.dm_converter.save"]], "dm_converter_mpc2 (class in mp)": [[65, "mp.dm_converter_mpc2"]], "dm_converter_mpc2() (mp.dm_converter_mpc2 method)": [[65, "mp.dm_converter_mpc2.dm_converter_mpc2"]], "format_tag() (mp.dm_converter_mpc2 method)": [[65, "mp.dm_converter_mpc2.format_tag"]], "import() (mp.dm_converter_mpc2 method)": [[65, "mp.dm_converter_mpc2.import"]], "init_export() (mp.dm_converter_mpc2 method)": [[65, "mp.dm_converter_mpc2.init_export"]], "save() (mp.dm_converter_mpc2 method)": [[65, "mp.dm_converter_mpc2.save"]], "dm_converter_mpc2_legacy (class in mp)": [[66, "mp.dm_converter_mpc2_legacy"]], "legacy_user_mod_inputs() (mp.dm_converter_mpc2_legacy method)": [[66, "mp.dm_converter_mpc2_legacy.legacy_user_mod_inputs"]], "legacy_user_nln_constraints() (mp.dm_converter_mpc2_legacy method)": [[66, "mp.dm_converter_mpc2_legacy.legacy_user_nln_constraints"]], "id() (mp.dm_element method)": [[67, "mp.dm_element.ID"]], "id2i (mp.dm_element attribute)": [[67, "mp.dm_element.ID2i"]], "build_params() (mp.dm_element method)": [[67, "mp.dm_element.build_params"]], "copy() (mp.dm_element method)": [[67, "mp.dm_element.copy"]], "count() (mp.dm_element method)": [[67, "mp.dm_element.count"]], "cxn_idx_prop() (mp.dm_element method)": [[67, "mp.dm_element.cxn_idx_prop"]], "cxn_type() (mp.dm_element method)": [[67, "mp.dm_element.cxn_type"]], "cxn_type_prop() (mp.dm_element method)": [[67, "mp.dm_element.cxn_type_prop"]], "display() (mp.dm_element method)": [[67, "mp.dm_element.display"]], "dm_converter_element() (mp.dm_element method)": [[67, "mp.dm_element.dm_converter_element"]], "dm_element (class in mp)": [[67, "mp.dm_element"]], "export_vars() (mp.dm_element method)": [[67, "mp.dm_element.export_vars"]], "export_vars_offline_val() (mp.dm_element method)": [[67, "mp.dm_element.export_vars_offline_val"]], "i2on (mp.dm_element attribute)": [[67, "mp.dm_element.i2on"]], "init_status() (mp.dm_element method)": [[67, "mp.dm_element.init_status"]], "initialize() (mp.dm_element method)": [[67, "mp.dm_element.initialize"]], "label() (mp.dm_element method)": [[67, "mp.dm_element.label"]], "labels() (mp.dm_element method)": [[67, "mp.dm_element.labels"]], "main_table_var_names() (mp.dm_element method)": [[67, "mp.dm_element.main_table_var_names"]], "n (mp.dm_element attribute)": [[67, "mp.dm_element.n"]], "name() (mp.dm_element method)": [[67, "mp.dm_element.name"]], "nr (mp.dm_element attribute)": [[67, "mp.dm_element.nr"]], "off (mp.dm_element attribute)": [[67, "mp.dm_element.off"]], "on (mp.dm_element attribute)": [[67, "mp.dm_element.on"]], "pp_data() (mp.dm_element method)": [[67, "mp.dm_element.pp_data"]], "pp_data_cnt() (mp.dm_element method)": [[67, "mp.dm_element.pp_data_cnt"]], "pp_data_det() (mp.dm_element method)": [[67, "mp.dm_element.pp_data_det"]], "pp_data_ext() (mp.dm_element method)": [[67, "mp.dm_element.pp_data_ext"]], "pp_data_row_det() (mp.dm_element method)": [[67, "mp.dm_element.pp_data_row_det"]], "pp_data_sum() (mp.dm_element method)": [[67, "mp.dm_element.pp_data_sum"]], "pp_get_footers() (mp.dm_element method)": [[67, "mp.dm_element.pp_get_footers"]], "pp_get_footers_det() (mp.dm_element method)": [[67, "mp.dm_element.pp_get_footers_det"]], "pp_get_headers() (mp.dm_element method)": [[67, "mp.dm_element.pp_get_headers"]], "pp_get_headers_det() (mp.dm_element method)": [[67, "mp.dm_element.pp_get_headers_det"]], "pp_get_title_det() (mp.dm_element method)": [[67, "mp.dm_element.pp_get_title_det"]], "pp_have_section() (mp.dm_element method)": [[67, "mp.dm_element.pp_have_section"]], "pp_have_section_cnt() (mp.dm_element method)": [[67, "mp.dm_element.pp_have_section_cnt"]], "pp_have_section_det() (mp.dm_element method)": [[67, "mp.dm_element.pp_have_section_det"]], "pp_have_section_ext() (mp.dm_element method)": [[67, "mp.dm_element.pp_have_section_ext"]], "pp_have_section_sum() (mp.dm_element method)": [[67, "mp.dm_element.pp_have_section_sum"]], "pp_rows() (mp.dm_element method)": [[67, "mp.dm_element.pp_rows"]], "pretty_print() (mp.dm_element method)": [[67, "mp.dm_element.pretty_print"]], "rebuild() (mp.dm_element method)": [[67, "mp.dm_element.rebuild"]], "tab (mp.dm_element attribute)": [[67, "mp.dm_element.tab"]], "table_exists() (mp.dm_element method)": [[67, "mp.dm_element.table_exists"]], "update_status() (mp.dm_element method)": [[67, "mp.dm_element.update_status"]], "data_exists() (mp.dmc_element method)": [[68, "mp.dmc_element.data_exists"]], "data_field() (mp.dmc_element method)": [[68, "mp.dmc_element.data_field"]], "data_model_element() (mp.dmc_element method)": [[68, "mp.dmc_element.data_model_element"]], "data_subs() (mp.dmc_element method)": [[68, "mp.dmc_element.data_subs"]], "default_export_data_nrows() (mp.dmc_element method)": [[68, "mp.dmc_element.default_export_data_nrows"]], "default_export_data_table() (mp.dmc_element method)": [[68, "mp.dmc_element.default_export_data_table"]], "dmc_element (class in mp)": [[68, "mp.dmc_element"]], "export() (mp.dmc_element method)": [[68, "mp.dmc_element.export"]], "export_col() (mp.dmc_element method)": [[68, "mp.dmc_element.export_col"]], "export_table_values() (mp.dmc_element method)": [[68, "mp.dmc_element.export_table_values"]], "get_export_size() (mp.dmc_element method)": [[68, "mp.dmc_element.get_export_size"]], "get_export_spec() (mp.dmc_element method)": [[68, "mp.dmc_element.get_export_spec"]], "get_import_size() (mp.dmc_element method)": [[68, "mp.dmc_element.get_import_size"]], "get_import_spec() (mp.dmc_element method)": [[68, "mp.dmc_element.get_import_spec"]], "get_input_table_values() (mp.dmc_element method)": [[68, "mp.dmc_element.get_input_table_values"]], "import() (mp.dmc_element method)": [[68, "mp.dmc_element.import"]], "import_col() (mp.dmc_element method)": [[68, "mp.dmc_element.import_col"]], "import_table_values() (mp.dmc_element method)": [[68, "mp.dmc_element.import_table_values"]], "init_export_data() (mp.dmc_element method)": [[68, "mp.dmc_element.init_export_data"]], "name() (mp.dmc_element method)": [[68, "mp.dmc_element.name"]], "table_var_map() (mp.dmc_element method)": [[68, "mp.dmc_element.table_var_map"]], "data_field() (mp.dmce_branch_mpc2 method)": [[69, "mp.dmce_branch_mpc2.data_field"]], "default_export_data_table() (mp.dmce_branch_mpc2 method)": [[69, "mp.dmce_branch_mpc2.default_export_data_table"]], "dmce_branch_mpc2 (class in mp)": [[69, "mp.dmce_branch_mpc2"]], "name() (mp.dmce_branch_mpc2 method)": [[69, "mp.dmce_branch_mpc2.name"]], "table_var_map() (mp.dmce_branch_mpc2 method)": [[69, "mp.dmce_branch_mpc2.table_var_map"]], "bus_status_import() (mp.dmce_bus3p_mpc2 method)": [[70, "mp.dmce_bus3p_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus3p_mpc2 method)": [[70, "mp.dmce_bus3p_mpc2.data_field"]], "dmce_bus3p_mpc2 (class in mp)": [[70, "mp.dmce_bus3p_mpc2"]], "name() (mp.dmce_bus3p_mpc2 method)": [[70, "mp.dmce_bus3p_mpc2.name"]], "table_var_map() (mp.dmce_bus3p_mpc2 method)": [[70, "mp.dmce_bus3p_mpc2.table_var_map"]], "bus_name_export() (mp.dmce_bus_mpc2 method)": [[71, "mp.dmce_bus_mpc2.bus_name_export"]], "bus_name_import() (mp.dmce_bus_mpc2 method)": [[71, "mp.dmce_bus_mpc2.bus_name_import"]], "bus_status_import() (mp.dmce_bus_mpc2 method)": [[71, "mp.dmce_bus_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus_mpc2 method)": [[71, "mp.dmce_bus_mpc2.data_field"]], "default_export_data_table() (mp.dmce_bus_mpc2 method)": [[71, "mp.dmce_bus_mpc2.default_export_data_table"]], "dmce_bus_mpc2 (class in mp)": [[71, "mp.dmce_bus_mpc2"]], "init_export_data() (mp.dmce_bus_mpc2 method)": [[71, "mp.dmce_bus_mpc2.init_export_data"]], "name() (mp.dmce_bus_mpc2 method)": [[71, "mp.dmce_bus_mpc2.name"]], "table_var_map() (mp.dmce_bus_mpc2 method)": [[71, "mp.dmce_bus_mpc2.table_var_map"]], "data_field() (mp.dmce_buslink_mpc2 method)": [[72, "mp.dmce_buslink_mpc2.data_field"]], "dmce_buslink_mpc2 (class in mp)": [[72, "mp.dmce_buslink_mpc2"]], "name() (mp.dmce_buslink_mpc2 method)": [[72, "mp.dmce_buslink_mpc2.name"]], "table_var_map() (mp.dmce_buslink_mpc2 method)": [[72, "mp.dmce_buslink_mpc2.table_var_map"]], "data_field() (mp.dmce_gen3p_mpc2 method)": [[73, "mp.dmce_gen3p_mpc2.data_field"]], "dmce_gen3p_mpc2 (class in mp)": [[73, "mp.dmce_gen3p_mpc2"]], "name() (mp.dmce_gen3p_mpc2 method)": [[73, "mp.dmce_gen3p_mpc2.name"]], "table_var_map() (mp.dmce_gen3p_mpc2 method)": [[73, "mp.dmce_gen3p_mpc2.table_var_map"]], "cost_table2gencost() (mp.dmce_gen_mpc2 static method)": [[74, "mp.dmce_gen_mpc2.cost_table2gencost"]], "data_field() (mp.dmce_gen_mpc2 method)": [[74, "mp.dmce_gen_mpc2.data_field"]], "default_export_data_table() (mp.dmce_gen_mpc2 method)": [[74, "mp.dmce_gen_mpc2.default_export_data_table"]], "dmce_gen_mpc2 (class in mp)": [[74, "mp.dmce_gen_mpc2"]], "gen_cost_export() (mp.dmce_gen_mpc2 method)": [[74, "mp.dmce_gen_mpc2.gen_cost_export"]], "gen_cost_import() (mp.dmce_gen_mpc2 method)": [[74, "mp.dmce_gen_mpc2.gen_cost_import"]], "gencost2cost_table() (mp.dmce_gen_mpc2 static method)": [[74, "mp.dmce_gen_mpc2.gencost2cost_table"]], "name() (mp.dmce_gen_mpc2 method)": [[74, "mp.dmce_gen_mpc2.name"]], "pwl1 (mp.dmce_gen_mpc2 attribute)": [[74, "mp.dmce_gen_mpc2.pwl1"]], "start_cost_export() (mp.dmce_gen_mpc2 method)": [[74, "mp.dmce_gen_mpc2.start_cost_export"]], "start_cost_import() (mp.dmce_gen_mpc2 method)": [[74, "mp.dmce_gen_mpc2.start_cost_import"]], "table_var_map() (mp.dmce_gen_mpc2 method)": [[74, "mp.dmce_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_legacy_dcline_mpc2 method)": [[75, "mp.dmce_legacy_dcline_mpc2.data_field"]], "dcline_cost_export() (mp.dmce_legacy_dcline_mpc2 method)": [[75, "mp.dmce_legacy_dcline_mpc2.dcline_cost_export"]], "dcline_cost_import() (mp.dmce_legacy_dcline_mpc2 method)": [[75, "mp.dmce_legacy_dcline_mpc2.dcline_cost_import"]], "default_export_data_table() (mp.dmce_legacy_dcline_mpc2 method)": [[75, "mp.dmce_legacy_dcline_mpc2.default_export_data_table"]], "dmce_legacy_dcline_mpc2 (class in mp)": [[75, "mp.dmce_legacy_dcline_mpc2"]], "name() (mp.dmce_legacy_dcline_mpc2 method)": [[75, "mp.dmce_legacy_dcline_mpc2.name"]], "table_var_map() (mp.dmce_legacy_dcline_mpc2 method)": [[75, "mp.dmce_legacy_dcline_mpc2.table_var_map"]], "create_line_construction_table() (mp.dmce_line3p_mpc2 method)": [[76, "mp.dmce_line3p_mpc2.create_line_construction_table"]], "data_field() (mp.dmce_line3p_mpc2 method)": [[76, "mp.dmce_line3p_mpc2.data_field"]], "dmce_line3p_mpc2 (class in mp)": [[76, "mp.dmce_line3p_mpc2"]], "import() (mp.dmce_line3p_mpc2 method)": [[76, "mp.dmce_line3p_mpc2.import"]], "name() (mp.dmce_line3p_mpc2 method)": [[76, "mp.dmce_line3p_mpc2.name"]], "table_var_map() (mp.dmce_line3p_mpc2 method)": [[76, "mp.dmce_line3p_mpc2.table_var_map"]], "bus (mp.dmce_load3p_mpc2 attribute)": [[77, "mp.dmce_load3p_mpc2.bus"]], "data_field() (mp.dmce_load3p_mpc2 method)": [[77, "mp.dmce_load3p_mpc2.data_field"]], "dmce_load3p_mpc2 (class in mp)": [[77, "mp.dmce_load3p_mpc2"]], "name() (mp.dmce_load3p_mpc2 method)": [[77, "mp.dmce_load3p_mpc2.name"]], "table_var_map() (mp.dmce_load3p_mpc2 method)": [[77, "mp.dmce_load3p_mpc2.table_var_map"]], "bus (mp.dmce_load_mpc2 attribute)": [[78, "mp.dmce_load_mpc2.bus"]], "data_field() (mp.dmce_load_mpc2 method)": [[78, "mp.dmce_load_mpc2.data_field"]], "dmce_load_mpc2 (class in mp)": [[78, "mp.dmce_load_mpc2"]], "get_export_size() (mp.dmce_load_mpc2 method)": [[78, "mp.dmce_load_mpc2.get_export_size"]], "get_import_size() (mp.dmce_load_mpc2 method)": [[78, "mp.dmce_load_mpc2.get_import_size"]], "name() (mp.dmce_load_mpc2 method)": [[78, "mp.dmce_load_mpc2.name"]], "scale_factor_fcn() (mp.dmce_load_mpc2 method)": [[78, "mp.dmce_load_mpc2.scale_factor_fcn"]], "sys_wide_zip_loads() (mp.dmce_load_mpc2 method)": [[78, "mp.dmce_load_mpc2.sys_wide_zip_loads"]], "table_var_map() (mp.dmce_load_mpc2 method)": [[78, "mp.dmce_load_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.data_subs"]], "dmce_reserve_gen_mpc2 (class in mp)": [[79, "mp.dmce_reserve_gen_mpc2"]], "get_export_size() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.get_export_size"]], "get_import_size() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.get_import_size"]], "import() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.import"]], "import_cost() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.import_cost"]], "import_qty() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.import_qty"]], "import_ramp() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.import_ramp"]], "name() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.name"]], "table_var_map() (mp.dmce_reserve_gen_mpc2 method)": [[79, "mp.dmce_reserve_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_zone_mpc2 method)": [[80, "mp.dmce_reserve_zone_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_zone_mpc2 method)": [[80, "mp.dmce_reserve_zone_mpc2.data_subs"]], "dmce_reserve_zone_mpc2 (class in mp)": [[80, "mp.dmce_reserve_zone_mpc2"]], "import_req() (mp.dmce_reserve_zone_mpc2 method)": [[80, "mp.dmce_reserve_zone_mpc2.import_req"]], "import_zones() (mp.dmce_reserve_zone_mpc2 method)": [[80, "mp.dmce_reserve_zone_mpc2.import_zones"]], "name() (mp.dmce_reserve_zone_mpc2 method)": [[80, "mp.dmce_reserve_zone_mpc2.name"]], "table_var_map() (mp.dmce_reserve_zone_mpc2 method)": [[80, "mp.dmce_reserve_zone_mpc2.table_var_map"]], "bus (mp.dmce_shunt_mpc2 attribute)": [[81, "mp.dmce_shunt_mpc2.bus"]], "data_field() (mp.dmce_shunt_mpc2 method)": [[81, "mp.dmce_shunt_mpc2.data_field"]], "dmce_shunt_mpc2 (class in mp)": [[81, "mp.dmce_shunt_mpc2"]], "get_export_size() (mp.dmce_shunt_mpc2 method)": [[81, "mp.dmce_shunt_mpc2.get_export_size"]], "get_import_size() (mp.dmce_shunt_mpc2 method)": [[81, "mp.dmce_shunt_mpc2.get_import_size"]], "name() (mp.dmce_shunt_mpc2 method)": [[81, "mp.dmce_shunt_mpc2.name"]], "table_var_map() (mp.dmce_shunt_mpc2 method)": [[81, "mp.dmce_shunt_mpc2.table_var_map"]], "data_field() (mp.dmce_xfmr3p_mpc2 method)": [[82, "mp.dmce_xfmr3p_mpc2.data_field"]], "dmce_xfmr3p_mpc2 (class in mp)": [[82, "mp.dmce_xfmr3p_mpc2"]], "name() (mp.dmce_xfmr3p_mpc2 method)": [[82, "mp.dmce_xfmr3p_mpc2.name"]], "table_var_map() (mp.dmce_xfmr3p_mpc2 method)": [[82, "mp.dmce_xfmr3p_mpc2.table_var_map"]], "b_fr (mp.dme_branch attribute)": [[83, "mp.dme_branch.b_fr"]], "b_to (mp.dme_branch attribute)": [[83, "mp.dme_branch.b_to"]], "build_params() (mp.dme_branch method)": [[83, "mp.dme_branch.build_params"]], "cxn_idx_prop() (mp.dme_branch method)": [[83, "mp.dme_branch.cxn_idx_prop"]], "cxn_type() (mp.dme_branch method)": [[83, "mp.dme_branch.cxn_type"]], "dme_branch (class in mp)": [[83, "mp.dme_branch"]], "export_vars() (mp.dme_branch method)": [[83, "mp.dme_branch.export_vars"]], "export_vars_offline_val() (mp.dme_branch method)": [[83, "mp.dme_branch.export_vars_offline_val"]], "fbus (mp.dme_branch attribute)": [[83, "mp.dme_branch.fbus"]], "g_fr (mp.dme_branch attribute)": [[83, "mp.dme_branch.g_fr"]], "g_to (mp.dme_branch attribute)": [[83, "mp.dme_branch.g_to"]], "initialize() (mp.dme_branch method)": [[83, "mp.dme_branch.initialize"]], "label() (mp.dme_branch method)": [[83, "mp.dme_branch.label"]], "labels() (mp.dme_branch method)": [[83, "mp.dme_branch.labels"]], "main_table_var_names() (mp.dme_branch method)": [[83, "mp.dme_branch.main_table_var_names"]], "name() (mp.dme_branch method)": [[83, "mp.dme_branch.name"]], "pp_data_cnt() (mp.dme_branch method)": [[83, "mp.dme_branch.pp_data_cnt"]], "pp_data_row_det() (mp.dme_branch method)": [[83, "mp.dme_branch.pp_data_row_det"]], "pp_data_sum() (mp.dme_branch method)": [[83, "mp.dme_branch.pp_data_sum"]], "pp_get_headers_det() (mp.dme_branch method)": [[83, "mp.dme_branch.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_branch method)": [[83, "mp.dme_branch.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_branch method)": [[83, "mp.dme_branch.pp_have_section_sum"]], "r (mp.dme_branch attribute)": [[83, "mp.dme_branch.r"]], "rate_a (mp.dme_branch attribute)": [[83, "mp.dme_branch.rate_a"]], "ta (mp.dme_branch attribute)": [[83, "mp.dme_branch.ta"]], "tbus (mp.dme_branch attribute)": [[83, "mp.dme_branch.tbus"]], "tm (mp.dme_branch attribute)": [[83, "mp.dme_branch.tm"]], "update_status() (mp.dme_branch method)": [[83, "mp.dme_branch.update_status"]], "x (mp.dme_branch attribute)": [[83, "mp.dme_branch.x"]], "dme_branch_opf (class in mp)": [[84, "mp.dme_branch_opf"]], "export_vars() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.export_vars"]], "export_vars_offline_val() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.pp_get_headers_lim"]], "pp_get_title_lim() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_branch_opf method)": [[84, "mp.dme_branch_opf.pretty_print"]], "build_params() (mp.dme_bus method)": [[85, "mp.dme_bus.build_params"]], "dme_bus (class in mp)": [[85, "mp.dme_bus"]], "export_vars() (mp.dme_bus method)": [[85, "mp.dme_bus.export_vars"]], "export_vars_offline_val() (mp.dme_bus method)": [[85, "mp.dme_bus.export_vars_offline_val"]], "init_status() (mp.dme_bus method)": [[85, "mp.dme_bus.init_status"]], "label() (mp.dme_bus method)": [[85, "mp.dme_bus.label"]], "labels() (mp.dme_bus method)": [[85, "mp.dme_bus.labels"]], "main_table_var_names() (mp.dme_bus method)": [[85, "mp.dme_bus.main_table_var_names"]], "name() (mp.dme_bus method)": [[85, "mp.dme_bus.name"]], "pp_data_cnt() (mp.dme_bus method)": [[85, "mp.dme_bus.pp_data_cnt"]], "pp_data_ext() (mp.dme_bus method)": [[85, "mp.dme_bus.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus method)": [[85, "mp.dme_bus.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus method)": [[85, "mp.dme_bus.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus method)": [[85, "mp.dme_bus.pp_have_section_det"]], "pp_have_section_ext() (mp.dme_bus method)": [[85, "mp.dme_bus.pp_have_section_ext"]], "set_bus_type_pq() (mp.dme_bus method)": [[85, "mp.dme_bus.set_bus_type_pq"]], "set_bus_type_pv() (mp.dme_bus method)": [[85, "mp.dme_bus.set_bus_type_pv"]], "set_bus_type_ref() (mp.dme_bus method)": [[85, "mp.dme_bus.set_bus_type_ref"]], "type (mp.dme_bus attribute)": [[85, "mp.dme_bus.type"]], "update_status() (mp.dme_bus method)": [[85, "mp.dme_bus.update_status"]], "va_start (mp.dme_bus attribute)": [[85, "mp.dme_bus.va_start"]], "vm_control (mp.dme_bus attribute)": [[85, "mp.dme_bus.vm_control"]], "vm_lb (mp.dme_bus attribute)": [[85, "mp.dme_bus.vm_lb"]], "vm_start (mp.dme_bus attribute)": [[85, "mp.dme_bus.vm_start"]], "vm_ub (mp.dme_bus attribute)": [[85, "mp.dme_bus.vm_ub"]], "build_params() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.build_params"]], "dme_bus3p (class in mp)": [[86, "mp.dme_bus3p"]], "init_status() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.init_status"]], "label() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.label"]], "labels() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.labels"]], "main_table_var_names() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.main_table_var_names"]], "name() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.name"]], "pp_data_row_det() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.pp_have_section_det"]], "type (mp.dme_bus3p attribute)": [[86, "mp.dme_bus3p.type"]], "update_status() (mp.dme_bus3p method)": [[86, "mp.dme_bus3p.update_status"]], "va1_start (mp.dme_bus3p attribute)": [[86, "mp.dme_bus3p.va1_start"]], "va2_start (mp.dme_bus3p attribute)": [[86, "mp.dme_bus3p.va2_start"]], "va3_start (mp.dme_bus3p attribute)": [[86, "mp.dme_bus3p.va3_start"]], "vm1_start (mp.dme_bus3p attribute)": [[86, "mp.dme_bus3p.vm1_start"]], "vm2_start (mp.dme_bus3p attribute)": [[86, "mp.dme_bus3p.vm2_start"]], "vm3_start (mp.dme_bus3p attribute)": [[86, "mp.dme_bus3p.vm3_start"]], "vm_control (mp.dme_bus3p attribute)": [[86, "mp.dme_bus3p.vm_control"]], "dme_bus3p_opf (class in mp)": [[87, "mp.dme_bus3p_opf"]], "dme_bus_opf (class in mp)": [[88, "mp.dme_bus_opf"]], "export_vars() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.export_vars"]], "export_vars_offline_val() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.pp_binding_rows_lim"]], "pp_data_ext() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.pp_data_row_lim"]], "pp_get_headers_det() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_bus_opf method)": [[88, "mp.dme_bus_opf.pp_have_section_lim"]], "build_params() (mp.dme_buslink method)": [[89, "mp.dme_buslink.build_params"]], "bus (mp.dme_buslink attribute)": [[89, "mp.dme_buslink.bus"]], "bus3p (mp.dme_buslink attribute)": [[89, "mp.dme_buslink.bus3p"]], "cxn_idx_prop() (mp.dme_buslink method)": [[89, "mp.dme_buslink.cxn_idx_prop"]], "cxn_type() (mp.dme_buslink method)": [[89, "mp.dme_buslink.cxn_type"]], "dme_buslink (class in mp)": [[89, "mp.dme_buslink"]], "initialize() (mp.dme_buslink method)": [[89, "mp.dme_buslink.initialize"]], "label() (mp.dme_buslink method)": [[89, "mp.dme_buslink.label"]], "labels() (mp.dme_buslink method)": [[89, "mp.dme_buslink.labels"]], "main_table_var_names() (mp.dme_buslink method)": [[89, "mp.dme_buslink.main_table_var_names"]], "name() (mp.dme_buslink method)": [[89, "mp.dme_buslink.name"]], "pg1_start (mp.dme_buslink attribute)": [[89, "mp.dme_buslink.pg1_start"]], "pg2_start (mp.dme_buslink attribute)": [[89, "mp.dme_buslink.pg2_start"]], "pg3_start (mp.dme_buslink attribute)": [[89, "mp.dme_buslink.pg3_start"]], "pp_data_row_det() (mp.dme_buslink method)": [[89, "mp.dme_buslink.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_buslink method)": [[89, "mp.dme_buslink.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_buslink method)": [[89, "mp.dme_buslink.pp_have_section_det"]], "qg1_start (mp.dme_buslink attribute)": [[89, "mp.dme_buslink.qg1_start"]], "qg2_start (mp.dme_buslink attribute)": [[89, "mp.dme_buslink.qg2_start"]], "qg3_start (mp.dme_buslink attribute)": [[89, "mp.dme_buslink.qg3_start"]], "update_status() (mp.dme_buslink method)": [[89, "mp.dme_buslink.update_status"]], "dme_buslink_opf (class in mp)": [[90, "mp.dme_buslink_opf"]], "apply_vm_setpoint() (mp.dme_gen method)": [[91, "mp.dme_gen.apply_vm_setpoint"]], "build_params() (mp.dme_gen method)": [[91, "mp.dme_gen.build_params"]], "bus (mp.dme_gen attribute)": [[91, "mp.dme_gen.bus"]], "bus_on (mp.dme_gen attribute)": [[91, "mp.dme_gen.bus_on"]], "cxn_idx_prop() (mp.dme_gen method)": [[91, "mp.dme_gen.cxn_idx_prop"]], "cxn_type() (mp.dme_gen method)": [[91, "mp.dme_gen.cxn_type"]], "dme_gen (class in mp)": [[91, "mp.dme_gen"]], "export_vars() (mp.dme_gen method)": [[91, "mp.dme_gen.export_vars"]], "export_vars_offline_val() (mp.dme_gen method)": [[91, "mp.dme_gen.export_vars_offline_val"]], "have_cost() (mp.dme_gen method)": [[91, "mp.dme_gen.have_cost"]], "initialize() (mp.dme_gen method)": [[91, "mp.dme_gen.initialize"]], "isload() (mp.dme_gen method)": [[91, "mp.dme_gen.isload"]], "label() (mp.dme_gen method)": [[91, "mp.dme_gen.label"]], "labels() (mp.dme_gen method)": [[91, "mp.dme_gen.labels"]], "main_table_var_names() (mp.dme_gen method)": [[91, "mp.dme_gen.main_table_var_names"]], "name() (mp.dme_gen method)": [[91, "mp.dme_gen.name"]], "pg_lb (mp.dme_gen attribute)": [[91, "mp.dme_gen.pg_lb"]], "pg_start (mp.dme_gen attribute)": [[91, "mp.dme_gen.pg_start"]], "pg_ub (mp.dme_gen attribute)": [[91, "mp.dme_gen.pg_ub"]], "pp_data_row_det() (mp.dme_gen method)": [[91, "mp.dme_gen.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen method)": [[91, "mp.dme_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_gen method)": [[91, "mp.dme_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_gen method)": [[91, "mp.dme_gen.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen method)": [[91, "mp.dme_gen.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen method)": [[91, "mp.dme_gen.pp_have_section_sum"]], "qg_lb (mp.dme_gen attribute)": [[91, "mp.dme_gen.qg_lb"]], "qg_start (mp.dme_gen attribute)": [[91, "mp.dme_gen.qg_start"]], "qg_ub (mp.dme_gen attribute)": [[91, "mp.dme_gen.qg_ub"]], "update_status() (mp.dme_gen method)": [[91, "mp.dme_gen.update_status"]], "violated_q_lims() (mp.dme_gen method)": [[91, "mp.dme_gen.violated_q_lims"]], "vm_setpoint (mp.dme_gen attribute)": [[91, "mp.dme_gen.vm_setpoint"]], "apply_vm_setpoint() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.apply_vm_setpoint"]], "build_params() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.build_params"]], "bus (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.bus"]], "bus_on (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.bus_on"]], "cxn_idx_prop() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.cxn_idx_prop"]], "cxn_type() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.cxn_type"]], "dme_gen3p (class in mp)": [[92, "mp.dme_gen3p"]], "initialize() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.initialize"]], "label() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.label"]], "labels() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.labels"]], "main_table_var_names() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.main_table_var_names"]], "name() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.name"]], "pg1_start (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.pg1_start"]], "pg2_start (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.pg2_start"]], "pg3_start (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.pg3_start"]], "pp_data_row_det() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.pp_have_section_sum"]], "qg1_start (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.qg1_start"]], "qg2_start (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.qg2_start"]], "qg3_start (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.qg3_start"]], "update_status() (mp.dme_gen3p method)": [[92, "mp.dme_gen3p.update_status"]], "vm1_setpoint (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.vm1_setpoint"]], "vm2_setpoint (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.vm2_setpoint"]], "vm3_setpoint (mp.dme_gen3p attribute)": [[92, "mp.dme_gen3p.vm3_setpoint"]], "dme_gen3p_opf (class in mp)": [[93, "mp.dme_gen3p_opf"]], "build_cost_params() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.build_cost_params"]], "dme_gen_opf (class in mp)": [[94, "mp.dme_gen_opf"]], "export_vars() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.export_vars"]], "export_vars_offline_val() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.export_vars_offline_val"]], "have_cost() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.have_cost"]], "main_table_var_names() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.main_table_var_names"]], "max_pwl_gencost() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.max_pwl_gencost"]], "pp_binding_rows_lim() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_gen_opf method)": [[94, "mp.dme_gen_opf.pretty_print"]], "apply_vm_setpoints() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.apply_vm_setpoints"]], "build_params() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.build_params"]], "cxn_idx_prop() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.cxn_idx_prop"]], "cxn_type() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.cxn_type"]], "dme_legacy_dcline (class in mp)": [[95, "mp.dme_legacy_dcline"]], "export_vars() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.export_vars_offline_val"]], "fbus (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.fbus"]], "fbus_on (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.fbus_on"]], "have_cost() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.have_cost"]], "initialize() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.initialize"]], "label() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.label"]], "labels() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.labels"]], "loss0 (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.loss0"]], "loss1 (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.loss1"]], "main_table_var_names() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.main_table_var_names"]], "name() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.name"]], "p_fr_lb (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.p_fr_lb"]], "p_fr_start (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.p_fr_start"]], "p_fr_ub (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.p_fr_ub"]], "p_to_start (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.p_to_start"]], "pp_data_row_det() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.pp_data_row_det"]], "pp_data_sum() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.pp_data_sum"]], "pp_get_headers_det() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.pp_have_section_sum"]], "q_fr_lb (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.q_fr_lb"]], "q_fr_start (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.q_fr_start"]], "q_fr_ub (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.q_fr_ub"]], "q_to_lb (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.q_to_lb"]], "q_to_start (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.q_to_start"]], "q_to_ub (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.q_to_ub"]], "tbus (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.tbus"]], "tbus_on (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.tbus_on"]], "update_status() (mp.dme_legacy_dcline method)": [[95, "mp.dme_legacy_dcline.update_status"]], "vm_setpoint_fr (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.vm_setpoint_fr"]], "vm_setpoint_to (mp.dme_legacy_dcline attribute)": [[95, "mp.dme_legacy_dcline.vm_setpoint_to"]], "build_cost_params() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.build_cost_params"]], "dme_legacy_dcline_opf (class in mp)": [[96, "mp.dme_legacy_dcline_opf"]], "export_vars() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.export_vars_offline_val"]], "have_cost() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.have_cost"]], "main_table_var_names() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_legacy_dcline_opf method)": [[96, "mp.dme_legacy_dcline_opf.pretty_print"]], "build_params() (mp.dme_line3p method)": [[97, "mp.dme_line3p.build_params"]], "create_line_construction_table() (mp.dme_line3p method)": [[97, "mp.dme_line3p.create_line_construction_table"]], "cxn_idx_prop() (mp.dme_line3p method)": [[97, "mp.dme_line3p.cxn_idx_prop"]], "cxn_type() (mp.dme_line3p method)": [[97, "mp.dme_line3p.cxn_type"]], "dme_line3p (class in mp)": [[97, "mp.dme_line3p"]], "fbus (mp.dme_line3p attribute)": [[97, "mp.dme_line3p.fbus"]], "freq (mp.dme_line3p attribute)": [[97, "mp.dme_line3p.freq"]], "initialize() (mp.dme_line3p method)": [[97, "mp.dme_line3p.initialize"]], "label() (mp.dme_line3p method)": [[97, "mp.dme_line3p.label"]], "labels() (mp.dme_line3p method)": [[97, "mp.dme_line3p.labels"]], "lc (mp.dme_line3p attribute)": [[97, "mp.dme_line3p.lc"]], "lc_tab (mp.dme_line3p attribute)": [[97, "mp.dme_line3p.lc_tab"]], "lc_table_var_names() (mp.dme_line3p method)": [[97, "mp.dme_line3p.lc_table_var_names"]], "len (mp.dme_line3p attribute)": [[97, "mp.dme_line3p.len"]], "main_table_var_names() (mp.dme_line3p method)": [[97, "mp.dme_line3p.main_table_var_names"]], "name() (mp.dme_line3p method)": [[97, "mp.dme_line3p.name"]], "pp_data_row_det() (mp.dme_line3p method)": [[97, "mp.dme_line3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_line3p method)": [[97, "mp.dme_line3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_line3p method)": [[97, "mp.dme_line3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_line3p method)": [[97, "mp.dme_line3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_line3p method)": [[97, "mp.dme_line3p.pp_have_section_sum"]], "pretty_print() (mp.dme_line3p method)": [[97, "mp.dme_line3p.pretty_print"]], "symmat2vec() (mp.dme_line3p method)": [[97, "mp.dme_line3p.symmat2vec"]], "tbus (mp.dme_line3p attribute)": [[97, "mp.dme_line3p.tbus"]], "update_status() (mp.dme_line3p method)": [[97, "mp.dme_line3p.update_status"]], "vec2symmat() (mp.dme_line3p method)": [[97, "mp.dme_line3p.vec2symmat"]], "yc (mp.dme_line3p attribute)": [[97, "mp.dme_line3p.yc"]], "ys (mp.dme_line3p attribute)": [[97, "mp.dme_line3p.ys"]], "dme_line3p_opf (class in mp)": [[98, "mp.dme_line3p_opf"]], "build_params() (mp.dme_load method)": [[99, "mp.dme_load.build_params"]], "bus (mp.dme_load attribute)": [[99, "mp.dme_load.bus"]], "count() (mp.dme_load method)": [[99, "mp.dme_load.count"]], "cxn_idx_prop() (mp.dme_load method)": [[99, "mp.dme_load.cxn_idx_prop"]], "cxn_type() (mp.dme_load method)": [[99, "mp.dme_load.cxn_type"]], "dme_load (class in mp)": [[99, "mp.dme_load"]], "label() (mp.dme_load method)": [[99, "mp.dme_load.label"]], "labels() (mp.dme_load method)": [[99, "mp.dme_load.labels"]], "main_table_var_names() (mp.dme_load method)": [[99, "mp.dme_load.main_table_var_names"]], "name() (mp.dme_load method)": [[99, "mp.dme_load.name"]], "pd (mp.dme_load attribute)": [[99, "mp.dme_load.pd"]], "pd_i (mp.dme_load attribute)": [[99, "mp.dme_load.pd_i"]], "pd_z (mp.dme_load attribute)": [[99, "mp.dme_load.pd_z"]], "pp_data_row_det() (mp.dme_load method)": [[99, "mp.dme_load.pp_data_row_det"]], "pp_data_sum() (mp.dme_load method)": [[99, "mp.dme_load.pp_data_sum"]], "pp_get_footers_det() (mp.dme_load method)": [[99, "mp.dme_load.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_load method)": [[99, "mp.dme_load.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load method)": [[99, "mp.dme_load.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load method)": [[99, "mp.dme_load.pp_have_section_sum"]], "qd (mp.dme_load attribute)": [[99, "mp.dme_load.qd"]], "qd_i (mp.dme_load attribute)": [[99, "mp.dme_load.qd_i"]], "qd_z (mp.dme_load attribute)": [[99, "mp.dme_load.qd_z"]], "update_status() (mp.dme_load method)": [[99, "mp.dme_load.update_status"]], "build_params() (mp.dme_load3p method)": [[100, "mp.dme_load3p.build_params"]], "bus (mp.dme_load3p attribute)": [[100, "mp.dme_load3p.bus"]], "cxn_idx_prop() (mp.dme_load3p method)": [[100, "mp.dme_load3p.cxn_idx_prop"]], "cxn_type() (mp.dme_load3p method)": [[100, "mp.dme_load3p.cxn_type"]], "dme_load3p (class in mp)": [[100, "mp.dme_load3p"]], "initialize() (mp.dme_load3p method)": [[100, "mp.dme_load3p.initialize"]], "label() (mp.dme_load3p method)": [[100, "mp.dme_load3p.label"]], "labels() (mp.dme_load3p method)": [[100, "mp.dme_load3p.labels"]], "main_table_var_names() (mp.dme_load3p method)": [[100, "mp.dme_load3p.main_table_var_names"]], "name() (mp.dme_load3p method)": [[100, "mp.dme_load3p.name"]], "pd1 (mp.dme_load3p attribute)": [[100, "mp.dme_load3p.pd1"]], "pd2 (mp.dme_load3p attribute)": [[100, "mp.dme_load3p.pd2"]], "pd3 (mp.dme_load3p attribute)": [[100, "mp.dme_load3p.pd3"]], "pf1 (mp.dme_load3p attribute)": [[100, "mp.dme_load3p.pf1"]], "pf2 (mp.dme_load3p attribute)": [[100, "mp.dme_load3p.pf2"]], "pf3 (mp.dme_load3p attribute)": [[100, "mp.dme_load3p.pf3"]], "pp_data_row_det() (mp.dme_load3p method)": [[100, "mp.dme_load3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_load3p method)": [[100, "mp.dme_load3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_load3p method)": [[100, "mp.dme_load3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load3p method)": [[100, "mp.dme_load3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load3p method)": [[100, "mp.dme_load3p.pp_have_section_sum"]], "update_status() (mp.dme_load3p method)": [[100, "mp.dme_load3p.update_status"]], "dme_load3p_opf (class in mp)": [[101, "mp.dme_load3p_opf"]], "dme_load_cpf (class in mp)": [[102, "mp.dme_load_cpf"]], "export_vars() (mp.dme_load_cpf method)": [[102, "mp.dme_load_cpf.export_vars"]], "parameterized() (mp.dme_load_cpf method)": [[102, "mp.dme_load_cpf.parameterized"]], "dme_load_opf (class in mp)": [[103, "mp.dme_load_opf"]], "build_params() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.build_params"]], "dme_reserve_gen (class in mp)": [[104, "mp.dme_reserve_gen"]], "export_vars() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.export_vars_offline_val"]], "gen (mp.dme_reserve_gen attribute)": [[104, "mp.dme_reserve_gen.gen"]], "label() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.label"]], "labels() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.labels"]], "main_table_var_names() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.main_table_var_names"]], "name() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.name"]], "pp_binding_rows_lim() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_binding_rows_lim"]], "pp_data_row_det() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_data_row_lim"]], "pp_data_sum() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_get_headers_lim"]], "pp_have_section_det() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_have_section_det"]], "pp_have_section_lim() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_have_section_lim"]], "pp_have_section_sum() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.pp_have_section_sum"]], "r_ub (mp.dme_reserve_gen attribute)": [[104, "mp.dme_reserve_gen.r_ub"]], "update_status() (mp.dme_reserve_gen method)": [[104, "mp.dme_reserve_gen.update_status"]], "build_params() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.build_params"]], "dme_reserve_zone (class in mp)": [[105, "mp.dme_reserve_zone"]], "export_vars() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.export_vars_offline_val"]], "label() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.label"]], "labels() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.labels"]], "main_table_var_names() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.main_table_var_names"]], "name() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.name"]], "pp_data_row_det() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.pp_have_section_det"]], "req (mp.dme_reserve_zone attribute)": [[105, "mp.dme_reserve_zone.req"]], "update_status() (mp.dme_reserve_zone method)": [[105, "mp.dme_reserve_zone.update_status"]], "zones (mp.dme_reserve_zone attribute)": [[105, "mp.dme_reserve_zone.zones"]], "ctol (mp.dme_shared_opf attribute)": [[106, "mp.dme_shared_opf.ctol"]], "dme_shared_opf (class in mp)": [[106, "mp.dme_shared_opf"]], "pp_binding_rows_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_binding_rows_lim"]], "pp_data_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_data_lim"]], "pp_data_other() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_data_other"]], "pp_data_row_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_data_row_lim"]], "pp_get_footers_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_get_footers_lim"]], "pp_get_footers_other() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_get_footers_other"]], "pp_get_headers_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_get_headers_lim"]], "pp_get_headers_other() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_get_headers_other"]], "pp_get_title_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_have_section_lim"]], "pp_have_section_other() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_have_section_other"]], "pp_rows_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_rows_lim"]], "pp_rows_other() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_rows_other"]], "pp_set_tols_lim() (mp.dme_shared_opf method)": [[106, "mp.dme_shared_opf.pp_set_tols_lim"]], "ptol (mp.dme_shared_opf attribute)": [[106, "mp.dme_shared_opf.ptol"]], "bs (mp.dme_shunt attribute)": [[107, "mp.dme_shunt.bs"]], "build_params() (mp.dme_shunt method)": [[107, "mp.dme_shunt.build_params"]], "bus (mp.dme_shunt attribute)": [[107, "mp.dme_shunt.bus"]], "count() (mp.dme_shunt method)": [[107, "mp.dme_shunt.count"]], "cxn_idx_prop() (mp.dme_shunt method)": [[107, "mp.dme_shunt.cxn_idx_prop"]], "cxn_type() (mp.dme_shunt method)": [[107, "mp.dme_shunt.cxn_type"]], "dme_shunt (class in mp)": [[107, "mp.dme_shunt"]], "gs (mp.dme_shunt attribute)": [[107, "mp.dme_shunt.gs"]], "label() (mp.dme_shunt method)": [[107, "mp.dme_shunt.label"]], "labels() (mp.dme_shunt method)": [[107, "mp.dme_shunt.labels"]], "main_table_var_names() (mp.dme_shunt method)": [[107, "mp.dme_shunt.main_table_var_names"]], "name() (mp.dme_shunt method)": [[107, "mp.dme_shunt.name"]], "pp_data_row_det() (mp.dme_shunt method)": [[107, "mp.dme_shunt.pp_data_row_det"]], "pp_data_sum() (mp.dme_shunt method)": [[107, "mp.dme_shunt.pp_data_sum"]], "pp_get_footers_det() (mp.dme_shunt method)": [[107, "mp.dme_shunt.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_shunt method)": [[107, "mp.dme_shunt.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_shunt method)": [[107, "mp.dme_shunt.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_shunt method)": [[107, "mp.dme_shunt.pp_have_section_sum"]], "update_status() (mp.dme_shunt method)": [[107, "mp.dme_shunt.update_status"]], "dme_shunt_cpf (class in mp)": [[108, "mp.dme_shunt_cpf"]], "export_vars() (mp.dme_shunt_cpf method)": [[108, "mp.dme_shunt_cpf.export_vars"]], "parameterized() (mp.dme_shunt_cpf method)": [[108, "mp.dme_shunt_cpf.parameterized"]], "dme_shunt_opf (class in mp)": [[109, "mp.dme_shunt_opf"]], "build_params() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.build_params"]], "cxn_idx_prop() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.cxn_idx_prop"]], "cxn_type() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.cxn_type"]], "dme_xfmr3p (class in mp)": [[110, "mp.dme_xfmr3p"]], "fbus (mp.dme_xfmr3p attribute)": [[110, "mp.dme_xfmr3p.fbus"]], "initialize() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.initialize"]], "label() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.label"]], "labels() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.labels"]], "main_table_var_names() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.main_table_var_names"]], "name() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.name"]], "pp_data_row_det() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.pp_have_section_sum"]], "pretty_print() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.pretty_print"]], "r (mp.dme_xfmr3p attribute)": [[110, "mp.dme_xfmr3p.r"]], "tbus (mp.dme_xfmr3p attribute)": [[110, "mp.dme_xfmr3p.tbus"]], "update_status() (mp.dme_xfmr3p method)": [[110, "mp.dme_xfmr3p.update_status"]], "x (mp.dme_xfmr3p attribute)": [[110, "mp.dme_xfmr3p.x"]], "dme_xfmr3p_opf (class in mp)": [[111, "mp.dme_xfmr3p_opf"]], "element_classes (mp.element_container attribute)": [[112, "mp.element_container.element_classes"]], "element_container (class in mp)": [[112, "mp.element_container"]], "elements (mp.element_container attribute)": [[112, "mp.element_container.elements"]], "modify_element_classes() (mp.element_container method)": [[112, "mp.element_container.modify_element_classes"]], "data_model_class() (mp.extension method)": [[113, "mp.extension.data_model_class"]], "dm_converter_class() (mp.extension method)": [[113, "mp.extension.dm_converter_class"]], "dm_element_classes() (mp.extension method)": [[113, "mp.extension.dm_element_classes"]], "dmc_element_classes() (mp.extension method)": [[113, "mp.extension.dmc_element_classes"]], "extension (class in mp)": [[113, "mp.extension"]], "math_model_class() (mp.extension method)": [[113, "mp.extension.math_model_class"]], "mm_element_classes() (mp.extension method)": [[113, "mp.extension.mm_element_classes"]], "network_model_class() (mp.extension method)": [[113, "mp.extension.network_model_class"]], "nm_element_classes() (mp.extension method)": [[113, "mp.extension.nm_element_classes"]], "task_class() (mp.extension method)": [[113, "mp.extension.task_class"]], "find_form_class() (mp.form method)": [[114, "mp.form.find_form_class"]], "form (class in mp)": [[114, "mp.form"]], "form_name() (mp.form method)": [[114, "mp.form.form_name"]], "form_tag() (mp.form method)": [[114, "mp.form.form_tag"]], "get_params() (mp.form method)": [[114, "mp.form.get_params"]], "model_params() (mp.form method)": [[114, "mp.form.model_params"]], "model_vvars() (mp.form method)": [[114, "mp.form.model_vvars"]], "model_zvars() (mp.form method)": [[114, "mp.form.model_zvars"]], "l (mp.form_ac attribute)": [[115, "mp.form_ac.L"]], "m (mp.form_ac attribute)": [[115, "mp.form_ac.M"]], "n (mp.form_ac attribute)": [[115, "mp.form_ac.N"]], "y (mp.form_ac attribute)": [[115, "mp.form_ac.Y"]], "aux_data_va_vm() (mp.form_ac method)": [[115, "mp.form_ac.aux_data_va_vm"]], "form_ac (class in mp)": [[115, "mp.form_ac"]], "i (mp.form_ac attribute)": [[115, "mp.form_ac.i"]], "inln (mp.form_ac attribute)": [[115, "mp.form_ac.inln"]], "inln_hess (mp.form_ac attribute)": [[115, "mp.form_ac.inln_hess"]], "model_params() (mp.form_ac method)": [[115, "mp.form_ac.model_params"]], "model_zvars() (mp.form_ac method)": [[115, "mp.form_ac.model_zvars"]], "param_ncols (mp.form_ac attribute)": [[115, "mp.form_ac.param_ncols"]], "port_active_power2_lim_fcn() (mp.form_ac method)": [[115, "mp.form_ac.port_active_power2_lim_fcn"]], "port_active_power2_lim_hess() (mp.form_ac method)": [[115, "mp.form_ac.port_active_power2_lim_hess"]], "port_active_power_lim_fcn() (mp.form_ac method)": [[115, "mp.form_ac.port_active_power_lim_fcn"]], "port_active_power_lim_hess() (mp.form_ac method)": [[115, "mp.form_ac.port_active_power_lim_hess"]], "port_apparent_power_lim_fcn() (mp.form_ac method)": [[115, "mp.form_ac.port_apparent_power_lim_fcn"]], "port_apparent_power_lim_hess() (mp.form_ac method)": [[115, "mp.form_ac.port_apparent_power_lim_hess"]], "port_current_lim_fcn() (mp.form_ac method)": [[115, "mp.form_ac.port_current_lim_fcn"]], "port_current_lim_hess() (mp.form_ac method)": [[115, "mp.form_ac.port_current_lim_hess"]], "port_inj_current() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_current"]], "port_inj_current_hess() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_current_hess"]], "port_inj_current_hess_v() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_current_jac"]], "port_inj_power() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_power"]], "port_inj_power_hess() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_power_hess"]], "port_inj_power_hess_v() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_ac method)": [[115, "mp.form_ac.port_inj_power_jac"]], "s (mp.form_ac attribute)": [[115, "mp.form_ac.s"]], "snln (mp.form_ac attribute)": [[115, "mp.form_ac.snln"]], "snln_hess (mp.form_ac attribute)": [[115, "mp.form_ac.snln_hess"]], "aux_data_va_vm() (mp.form_acc method)": [[116, "mp.form_acc.aux_data_va_vm"]], "form_acc (class in mp)": [[116, "mp.form_acc"]], "form_name() (mp.form_acc method)": [[116, "mp.form_acc.form_name"]], "form_tag() (mp.form_acc method)": [[116, "mp.form_acc.form_tag"]], "model_vvars() (mp.form_acc method)": [[116, "mp.form_acc.model_vvars"]], "port_inj_current_hess_v() (mp.form_acc method)": [[116, "mp.form_acc.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acc method)": [[116, "mp.form_acc.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acc method)": [[116, "mp.form_acc.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acc method)": [[116, "mp.form_acc.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acc method)": [[116, "mp.form_acc.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acc method)": [[116, "mp.form_acc.port_inj_power_jac"]], "va_fcn() (mp.form_acc method)": [[116, "mp.form_acc.va_fcn"]], "va_hess() (mp.form_acc method)": [[116, "mp.form_acc.va_hess"]], "vm2_fcn() (mp.form_acc method)": [[116, "mp.form_acc.vm2_fcn"]], "vm2_hess() (mp.form_acc method)": [[116, "mp.form_acc.vm2_hess"]], "aux_data_va_vm() (mp.form_acp method)": [[117, "mp.form_acp.aux_data_va_vm"]], "form_acp (class in mp)": [[117, "mp.form_acp"]], "form_name() (mp.form_acp method)": [[117, "mp.form_acp.form_name"]], "form_tag() (mp.form_acp method)": [[117, "mp.form_acp.form_tag"]], "model_vvars() (mp.form_acp method)": [[117, "mp.form_acp.model_vvars"]], "port_inj_current_hess_v() (mp.form_acp method)": [[117, "mp.form_acp.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acp method)": [[117, "mp.form_acp.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acp method)": [[117, "mp.form_acp.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acp method)": [[117, "mp.form_acp.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acp method)": [[117, "mp.form_acp.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acp method)": [[117, "mp.form_acp.port_inj_power_jac"]], "b (mp.form_dc attribute)": [[118, "mp.form_dc.B"]], "k (mp.form_dc attribute)": [[118, "mp.form_dc.K"]], "form_dc (class in mp)": [[118, "mp.form_dc"]], "form_name() (mp.form_dc method)": [[118, "mp.form_dc.form_name"]], "form_tag() (mp.form_dc method)": [[118, "mp.form_dc.form_tag"]], "model_params() (mp.form_dc method)": [[118, "mp.form_dc.model_params"]], "model_vvars() (mp.form_dc method)": [[118, "mp.form_dc.model_vvars"]], "model_zvars() (mp.form_dc method)": [[118, "mp.form_dc.model_zvars"]], "p (mp.form_dc attribute)": [[118, "mp.form_dc.p"]], "param_ncols (mp.form_dc attribute)": [[118, "mp.form_dc.param_ncols"]], "port_inj_power() (mp.form_dc method)": [[118, "mp.form_dc.port_inj_power"]], "add_elements() (mp.mapped_array method)": [[119, "mp.mapped_array.add_elements"]], "add_names() (mp.mapped_array method)": [[119, "mp.mapped_array.add_names"]], "copy() (mp.mapped_array method)": [[119, "mp.mapped_array.copy"]], "delete_elements() (mp.mapped_array method)": [[119, "mp.mapped_array.delete_elements"]], "display() (mp.mapped_array method)": [[119, "mp.mapped_array.display"]], "has_name() (mp.mapped_array method)": [[119, "mp.mapped_array.has_name"]], "length() (mp.mapped_array method)": [[119, "mp.mapped_array.length"]], "mapped_array (class in mp)": [[119, "mp.mapped_array"]], "mapped_array() (mp.mapped_array method)": [[119, "mp.mapped_array.mapped_array"]], "name2idx() (mp.mapped_array method)": [[119, "mp.mapped_array.name2idx"]], "size() (mp.mapped_array method)": [[119, "mp.mapped_array.size"]], "subsasgn() (mp.mapped_array method)": [[119, "mp.mapped_array.subsasgn"]], "subsref() (mp.mapped_array method)": [[119, "mp.mapped_array.subsref"]], "add_aux_data() (mp.math_model method)": [[120, "mp.math_model.add_aux_data"]], "add_constraints() (mp.math_model method)": [[120, "mp.math_model.add_constraints"]], "add_costs() (mp.math_model method)": [[120, "mp.math_model.add_costs"]], "add_node_balance_constraints() (mp.math_model method)": [[120, "mp.math_model.add_node_balance_constraints"]], "add_system_constraints() (mp.math_model method)": [[120, "mp.math_model.add_system_constraints"]], "add_system_costs() (mp.math_model method)": [[120, "mp.math_model.add_system_costs"]], "add_system_vars() (mp.math_model method)": [[120, "mp.math_model.add_system_vars"]], "add_vars() (mp.math_model method)": [[120, "mp.math_model.add_vars"]], "aux_data (mp.math_model attribute)": [[120, "mp.math_model.aux_data"]], "build() (mp.math_model method)": [[120, "mp.math_model.build"]], "build_base_aux_data() (mp.math_model method)": [[120, "mp.math_model.build_base_aux_data"]], "data_model_update() (mp.math_model method)": [[120, "mp.math_model.data_model_update"]], "display() (mp.math_model method)": [[120, "mp.math_model.display"]], "form_name() (mp.math_model method)": [[120, "mp.math_model.form_name"]], "form_tag() (mp.math_model method)": [[120, "mp.math_model.form_tag"]], "math_model (class in mp)": [[120, "mp.math_model"]], "network_model_x_soln() (mp.math_model method)": [[120, "mp.math_model.network_model_x_soln"]], "solve_opts() (mp.math_model method)": [[120, "mp.math_model.solve_opts"]], "task_name() (mp.math_model method)": [[120, "mp.math_model.task_name"]], "task_tag() (mp.math_model method)": [[120, "mp.math_model.task_tag"]], "update_nm_vars() (mp.math_model method)": [[120, "mp.math_model.update_nm_vars"]], "math_model_cpf_acc (class in mp)": [[121, "mp.math_model_cpf_acc"]], "math_model_cpf_acc() (mp.math_model_cpf_acc method)": [[121, "mp.math_model_cpf_acc.math_model_cpf_acc"]], "add_node_balance_constraints() (mp.math_model_cpf_acci method)": [[122, "mp.math_model_cpf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acci method)": [[122, "mp.math_model_cpf_acci.form_name"]], "form_tag() (mp.math_model_cpf_acci method)": [[122, "mp.math_model_cpf_acci.form_tag"]], "math_model_cpf_acci (class in mp)": [[122, "mp.math_model_cpf_acci"]], "add_node_balance_constraints() (mp.math_model_cpf_accs method)": [[123, "mp.math_model_cpf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_accs method)": [[123, "mp.math_model_cpf_accs.form_name"]], "form_tag() (mp.math_model_cpf_accs method)": [[123, "mp.math_model_cpf_accs.form_tag"]], "math_model_cpf_accs (class in mp)": [[123, "mp.math_model_cpf_accs"]], "callback_vlim() (mp.math_model_cpf_acp method)": [[124, "mp.math_model_cpf_acp.callback_vlim"]], "event_vlim() (mp.math_model_cpf_acp method)": [[124, "mp.math_model_cpf_acp.event_vlim"]], "math_model_cpf_acp (class in mp)": [[124, "mp.math_model_cpf_acp"]], "math_model_cpf_acp() (mp.math_model_cpf_acp method)": [[124, "mp.math_model_cpf_acp.math_model_cpf_acp"]], "add_node_balance_constraints() (mp.math_model_cpf_acpi method)": [[125, "mp.math_model_cpf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acpi method)": [[125, "mp.math_model_cpf_acpi.form_name"]], "form_tag() (mp.math_model_cpf_acpi method)": [[125, "mp.math_model_cpf_acpi.form_tag"]], "math_model_cpf_acpi (class in mp)": [[125, "mp.math_model_cpf_acpi"]], "add_node_balance_constraints() (mp.math_model_cpf_acps method)": [[126, "mp.math_model_cpf_acps.add_node_balance_constraints"]], "expand_z_warmstart() (mp.math_model_cpf_acps method)": [[126, "mp.math_model_cpf_acps.expand_z_warmstart"]], "form_name() (mp.math_model_cpf_acps method)": [[126, "mp.math_model_cpf_acps.form_name"]], "form_tag() (mp.math_model_cpf_acps method)": [[126, "mp.math_model_cpf_acps.form_tag"]], "math_model_cpf_acps (class in mp)": [[126, "mp.math_model_cpf_acps"]], "solve_opts_warmstart() (mp.math_model_cpf_acps method)": [[126, "mp.math_model_cpf_acps.solve_opts_warmstart"]], "add_system_vars() (mp.math_model_opf method)": [[127, "mp.math_model_opf.add_system_vars"]], "build_aux_data() (mp.math_model_opf method)": [[127, "mp.math_model_opf.build_aux_data"]], "interior_va() (mp.math_model_opf method)": [[127, "mp.math_model_opf.interior_va"]], "interior_x0() (mp.math_model_opf method)": [[127, "mp.math_model_opf.interior_x0"]], "math_model_opf (class in mp)": [[127, "mp.math_model_opf"]], "task_name() (mp.math_model_opf method)": [[127, "mp.math_model_opf.task_name"]], "task_tag() (mp.math_model_opf method)": [[127, "mp.math_model_opf.task_tag"]], "math_model_opf_ac (class in mp)": [[128, "mp.math_model_opf_ac"]], "nodal_current_balance_fcn() (mp.math_model_opf_ac method)": [[128, "mp.math_model_opf_ac.nodal_current_balance_fcn"]], "nodal_current_balance_hess() (mp.math_model_opf_ac method)": [[128, "mp.math_model_opf_ac.nodal_current_balance_hess"]], "nodal_power_balance_fcn() (mp.math_model_opf_ac method)": [[128, "mp.math_model_opf_ac.nodal_power_balance_fcn"]], "nodal_power_balance_hess() (mp.math_model_opf_ac method)": [[128, "mp.math_model_opf_ac.nodal_power_balance_hess"]], "solve_opts() (mp.math_model_opf_ac method)": [[128, "mp.math_model_opf_ac.solve_opts"]], "convert_x_m2n() (mp.math_model_opf_acc method)": [[129, "mp.math_model_opf_acc.convert_x_m2n"]], "interior_va() (mp.math_model_opf_acc method)": [[129, "mp.math_model_opf_acc.interior_va"]], "math_model_opf_acc (class in mp)": [[129, "mp.math_model_opf_acc"]], "math_model_opf_acc() (mp.math_model_opf_acc method)": [[129, "mp.math_model_opf_acc.math_model_opf_acc"]], "add_node_balance_constraints() (mp.math_model_opf_acci method)": [[130, "mp.math_model_opf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acci method)": [[130, "mp.math_model_opf_acci.form_name"]], "form_tag() (mp.math_model_opf_acci method)": [[130, "mp.math_model_opf_acci.form_tag"]], "math_model_opf_acci (class in mp)": [[130, "mp.math_model_opf_acci"]], "node_power_balance_prices() (mp.math_model_opf_acci method)": [[130, "mp.math_model_opf_acci.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.add_vars"]], "build() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.build"]], "def_set_types() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.legacy_user_var_names"]], "math_model_opf_acci_legacy (class in mp)": [[131, "mp.math_model_opf_acci_legacy"]], "math_model_opf_acci_legacy() (mp.math_model_opf_acci_legacy method)": [[131, "mp.math_model_opf_acci_legacy.math_model_opf_acci_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_accs method)": [[132, "mp.math_model_opf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_accs method)": [[132, "mp.math_model_opf_accs.form_name"]], "form_tag() (mp.math_model_opf_accs method)": [[132, "mp.math_model_opf_accs.form_tag"]], "math_model_opf_accs (class in mp)": [[132, "mp.math_model_opf_accs"]], "node_power_balance_prices() (mp.math_model_opf_accs method)": [[132, "mp.math_model_opf_accs.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.add_vars"]], "build() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.build"]], "def_set_types() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.legacy_user_var_names"]], "math_model_opf_accs_legacy (class in mp)": [[133, "mp.math_model_opf_accs_legacy"]], "math_model_opf_accs_legacy() (mp.math_model_opf_accs_legacy method)": [[133, "mp.math_model_opf_accs_legacy.math_model_opf_accs_legacy"]], "convert_x_m2n() (mp.math_model_opf_acp method)": [[134, "mp.math_model_opf_acp.convert_x_m2n"]], "math_model_opf_acp (class in mp)": [[134, "mp.math_model_opf_acp"]], "math_model_opf_acp() (mp.math_model_opf_acp method)": [[134, "mp.math_model_opf_acp.math_model_opf_acp"]], "add_node_balance_constraints() (mp.math_model_opf_acpi method)": [[135, "mp.math_model_opf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acpi method)": [[135, "mp.math_model_opf_acpi.form_name"]], "form_tag() (mp.math_model_opf_acpi method)": [[135, "mp.math_model_opf_acpi.form_tag"]], "math_model_opf_acpi (class in mp)": [[135, "mp.math_model_opf_acpi"]], "node_power_balance_prices() (mp.math_model_opf_acpi method)": [[135, "mp.math_model_opf_acpi.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.add_vars"]], "build() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.build"]], "def_set_types() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.legacy_user_var_names"]], "math_model_opf_acpi_legacy (class in mp)": [[136, "mp.math_model_opf_acpi_legacy"]], "math_model_opf_acpi_legacy() (mp.math_model_opf_acpi_legacy method)": [[136, "mp.math_model_opf_acpi_legacy.math_model_opf_acpi_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_acps method)": [[137, "mp.math_model_opf_acps.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acps method)": [[137, "mp.math_model_opf_acps.form_name"]], "form_tag() (mp.math_model_opf_acps method)": [[137, "mp.math_model_opf_acps.form_tag"]], "math_model_opf_acps (class in mp)": [[137, "mp.math_model_opf_acps"]], "node_power_balance_prices() (mp.math_model_opf_acps method)": [[137, "mp.math_model_opf_acps.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.add_vars"]], "build() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.build"]], "def_set_types() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.legacy_user_var_names"]], "math_model_opf_acps_legacy (class in mp)": [[138, "mp.math_model_opf_acps_legacy"]], "math_model_opf_acps_legacy() (mp.math_model_opf_acps_legacy method)": [[138, "mp.math_model_opf_acps_legacy.math_model_opf_acps_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_dc method)": [[139, "mp.math_model_opf_dc.add_node_balance_constraints"]], "convert_x_m2n() (mp.math_model_opf_dc method)": [[139, "mp.math_model_opf_dc.convert_x_m2n"]], "form_name() (mp.math_model_opf_dc method)": [[139, "mp.math_model_opf_dc.form_name"]], "form_tag() (mp.math_model_opf_dc method)": [[139, "mp.math_model_opf_dc.form_tag"]], "math_model_opf_dc (class in mp)": [[139, "mp.math_model_opf_dc"]], "math_model_opf_dc() (mp.math_model_opf_dc method)": [[139, "mp.math_model_opf_dc.math_model_opf_dc"]], "solve_opts() (mp.math_model_opf_dc method)": [[139, "mp.math_model_opf_dc.solve_opts"]], "add_named_set() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.add_vars"]], "build() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.build"]], "def_set_types() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.legacy_user_var_names"]], "math_model_opf_dc_legacy (class in mp)": [[140, "mp.math_model_opf_dc_legacy"]], "math_model_opf_dc_legacy() (mp.math_model_opf_dc_legacy method)": [[140, "mp.math_model_opf_dc_legacy.math_model_opf_dc_legacy"]], "add_costs() (mp.math_model_pf method)": [[141, "mp.math_model_pf.add_costs"]], "add_system_vars() (mp.math_model_pf method)": [[141, "mp.math_model_pf.add_system_vars"]], "math_model_pf (class in mp)": [[141, "mp.math_model_pf"]], "solve_opts() (mp.math_model_pf method)": [[141, "mp.math_model_pf.solve_opts"]], "task_name() (mp.math_model_pf method)": [[141, "mp.math_model_pf.task_name"]], "task_tag() (mp.math_model_pf method)": [[141, "mp.math_model_pf.task_tag"]], "math_model_pf_ac (class in mp)": [[142, "mp.math_model_pf_ac"]], "math_model_pf_ac() (mp.math_model_pf_ac method)": [[142, "mp.math_model_pf_ac.math_model_pf_ac"]], "add_node_balance_constraints() (mp.math_model_pf_acci method)": [[143, "mp.math_model_pf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acci method)": [[143, "mp.math_model_pf_acci.form_name"]], "form_tag() (mp.math_model_pf_acci method)": [[143, "mp.math_model_pf_acci.form_tag"]], "math_model_pf_acci (class in mp)": [[143, "mp.math_model_pf_acci"]], "add_node_balance_constraints() (mp.math_model_pf_accs method)": [[144, "mp.math_model_pf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_accs method)": [[144, "mp.math_model_pf_accs.form_name"]], "form_tag() (mp.math_model_pf_accs method)": [[144, "mp.math_model_pf_accs.form_tag"]], "math_model_pf_accs (class in mp)": [[144, "mp.math_model_pf_accs"]], "add_node_balance_constraints() (mp.math_model_pf_acpi method)": [[145, "mp.math_model_pf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acpi method)": [[145, "mp.math_model_pf_acpi.form_name"]], "form_tag() (mp.math_model_pf_acpi method)": [[145, "mp.math_model_pf_acpi.form_tag"]], "math_model_pf_acpi (class in mp)": [[145, "mp.math_model_pf_acpi"]], "add_node_balance_constraints() (mp.math_model_pf_acps method)": [[146, "mp.math_model_pf_acps.add_node_balance_constraints"]], "fd_jac_approx() (mp.math_model_pf_acps method)": [[146, "mp.math_model_pf_acps.fd_jac_approx"]], "fdpf_b_matrix_models() (mp.math_model_pf_acps method)": [[146, "mp.math_model_pf_acps.fdpf_B_matrix_models"]], "form_name() (mp.math_model_pf_acps method)": [[146, "mp.math_model_pf_acps.form_name"]], "form_tag() (mp.math_model_pf_acps method)": [[146, "mp.math_model_pf_acps.form_tag"]], "gs_x_update() (mp.math_model_pf_acps method)": [[146, "mp.math_model_pf_acps.gs_x_update"]], "math_model_pf_acps (class in mp)": [[146, "mp.math_model_pf_acps"]], "zg_x_update() (mp.math_model_pf_acps method)": [[146, "mp.math_model_pf_acps.zg_x_update"]], "add_node_balance_constraints() (mp.math_model_pf_dc method)": [[147, "mp.math_model_pf_dc.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_dc method)": [[147, "mp.math_model_pf_dc.form_name"]], "form_tag() (mp.math_model_pf_dc method)": [[147, "mp.math_model_pf_dc.form_tag"]], "math_model_pf_dc (class in mp)": [[147, "mp.math_model_pf_dc"]], "math_model_pf_dc() (mp.math_model_pf_dc method)": [[147, "mp.math_model_pf_dc.math_model_pf_dc"]], "solve_opts() (mp.math_model_pf_dc method)": [[147, "mp.math_model_pf_dc.solve_opts"]], "add_constraints() (mp.mm_element method)": [[148, "mp.mm_element.add_constraints"]], "add_costs() (mp.mm_element method)": [[148, "mp.mm_element.add_costs"]], "add_vars() (mp.mm_element method)": [[148, "mp.mm_element.add_vars"]], "data_model_element() (mp.mm_element method)": [[148, "mp.mm_element.data_model_element"]], "data_model_update() (mp.mm_element method)": [[148, "mp.mm_element.data_model_update"]], "data_model_update_off() (mp.mm_element method)": [[148, "mp.mm_element.data_model_update_off"]], "data_model_update_on() (mp.mm_element method)": [[148, "mp.mm_element.data_model_update_on"]], "mm_element (class in mp)": [[148, "mp.mm_element"]], "name() (mp.mm_element method)": [[148, "mp.mm_element.name"]], "network_model_element() (mp.mm_element method)": [[148, "mp.mm_element.network_model_element"]], "add_legacy_cost() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.add_legacy_cost"]], "add_legacy_user_constraints() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.add_legacy_user_constraints"]], "add_legacy_user_constraints_ac() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.add_legacy_user_constraints_ac"]], "add_legacy_user_costs() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.add_legacy_user_costs"]], "add_legacy_user_vars() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.add_legacy_user_vars"]], "build_legacy() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.build_legacy"]], "def_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.def_set_types_legacy"]], "eval_legacy_cost() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.eval_legacy_cost"]], "get_mpc() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.get_mpc"]], "init_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.init_set_types_legacy"]], "mm_shared_opf_legacy (class in mp)": [[149, "mp.mm_shared_opf_legacy"]], "params_legacy_cost() (mp.mm_shared_opf_legacy method)": [[149, "mp.mm_shared_opf_legacy.params_legacy_cost"]], "build_aux_data() (mp.mm_shared_pfcpf method)": [[150, "mp.mm_shared_pfcpf.build_aux_data"]], "mm_shared_pfcpf (class in mp)": [[150, "mp.mm_shared_pfcpf"]], "add_system_varset_pf() (mp.mm_shared_pfcpf_ac method)": [[151, "mp.mm_shared_pfcpf_ac.add_system_varset_pf"]], "mm_shared_pfcpf_ac (class in mp)": [[151, "mp.mm_shared_pfcpf_ac"]], "update_z() (mp.mm_shared_pfcpf_ac method)": [[151, "mp.mm_shared_pfcpf_ac.update_z"]], "build_aux_data_i() (mp.mm_shared_pfcpf_ac_i method)": [[152, "mp.mm_shared_pfcpf_ac_i.build_aux_data_i"]], "mm_shared_pfcpf_ac_i (class in mp)": [[152, "mp.mm_shared_pfcpf_ac_i"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acc method)": [[153, "mp.mm_shared_pfcpf_acc.convert_x_m2n"]], "mm_shared_pfcpf_acc (class in mp)": [[153, "mp.mm_shared_pfcpf_acc"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acci method)": [[154, "mp.mm_shared_pfcpf_acci.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acci method)": [[154, "mp.mm_shared_pfcpf_acci.build_aux_data"]], "mm_shared_pfcpf_acci (class in mp)": [[154, "mp.mm_shared_pfcpf_acci"]], "node_balance_equations() (mp.mm_shared_pfcpf_acci method)": [[154, "mp.mm_shared_pfcpf_acci.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_accs method)": [[155, "mp.mm_shared_pfcpf_accs.add_system_vars_pf"]], "mm_shared_pfcpf_accs (class in mp)": [[155, "mp.mm_shared_pfcpf_accs"]], "node_balance_equations() (mp.mm_shared_pfcpf_accs method)": [[155, "mp.mm_shared_pfcpf_accs.node_balance_equations"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acp method)": [[156, "mp.mm_shared_pfcpf_acp.convert_x_m2n"]], "mm_shared_pfcpf_acp (class in mp)": [[156, "mp.mm_shared_pfcpf_acp"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acpi method)": [[157, "mp.mm_shared_pfcpf_acpi.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acpi method)": [[157, "mp.mm_shared_pfcpf_acpi.build_aux_data"]], "mm_shared_pfcpf_acpi (class in mp)": [[157, "mp.mm_shared_pfcpf_acpi"]], "node_balance_equations() (mp.mm_shared_pfcpf_acpi method)": [[157, "mp.mm_shared_pfcpf_acpi.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acps method)": [[158, "mp.mm_shared_pfcpf_acps.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acps method)": [[158, "mp.mm_shared_pfcpf_acps.build_aux_data"]], "mm_shared_pfcpf_acps (class in mp)": [[158, "mp.mm_shared_pfcpf_acps"]], "node_balance_equations() (mp.mm_shared_pfcpf_acps method)": [[158, "mp.mm_shared_pfcpf_acps.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_dc method)": [[159, "mp.mm_shared_pfcpf_dc.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_dc method)": [[159, "mp.mm_shared_pfcpf_dc.build_aux_data"]], "convert_x_m2n() (mp.mm_shared_pfcpf_dc method)": [[159, "mp.mm_shared_pfcpf_dc.convert_x_m2n"]], "mm_shared_pfcpf_dc (class in mp)": [[159, "mp.mm_shared_pfcpf_dc"]], "update_z() (mp.mm_shared_pfcpf_dc method)": [[159, "mp.mm_shared_pfcpf_dc.update_z"]], "mme_branch (class in mp)": [[160, "mp.mme_branch"]], "name() (mp.mme_branch method)": [[160, "mp.mme_branch.name"]], "ang_diff_params() (mp.mme_branch_opf method)": [[161, "mp.mme_branch_opf.ang_diff_params"]], "ang_diff_prices() (mp.mme_branch_opf method)": [[161, "mp.mme_branch_opf.ang_diff_prices"]], "mme_branch_opf (class in mp)": [[161, "mp.mme_branch_opf"]], "add_constraints() (mp.mme_branch_opf_ac method)": [[162, "mp.mme_branch_opf_ac.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_ac method)": [[162, "mp.mme_branch_opf_ac.data_model_update_on"]], "mme_branch_opf_ac (class in mp)": [[162, "mp.mme_branch_opf_ac"]], "add_constraints() (mp.mme_branch_opf_acc method)": [[163, "mp.mme_branch_opf_acc.add_constraints"]], "ang_diff_prices() (mp.mme_branch_opf_acc method)": [[163, "mp.mme_branch_opf_acc.ang_diff_prices"]], "mme_branch_opf_acc (class in mp)": [[163, "mp.mme_branch_opf_acc"]], "add_constraints() (mp.mme_branch_opf_acp method)": [[164, "mp.mme_branch_opf_acp.add_constraints"]], "mme_branch_opf_acp (class in mp)": [[164, "mp.mme_branch_opf_acp"]], "add_constraints() (mp.mme_branch_opf_dc method)": [[165, "mp.mme_branch_opf_dc.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_dc method)": [[165, "mp.mme_branch_opf_dc.data_model_update_on"]], "mme_branch_opf_dc (class in mp)": [[165, "mp.mme_branch_opf_dc"]], "data_model_update_on() (mp.mme_branch_pf_ac method)": [[166, "mp.mme_branch_pf_ac.data_model_update_on"]], "mme_branch_pf_ac (class in mp)": [[166, "mp.mme_branch_pf_ac"]], "data_model_update_on() (mp.mme_branch_pf_dc method)": [[167, "mp.mme_branch_pf_dc.data_model_update_on"]], "mme_branch_pf_dc (class in mp)": [[167, "mp.mme_branch_pf_dc"]], "mme_bus (class in mp)": [[168, "mp.mme_bus"]], "name() (mp.mme_bus method)": [[168, "mp.mme_bus.name"]], "data_model_update_on() (mp.mme_bus3p method)": [[169, "mp.mme_bus3p.data_model_update_on"]], "mme_bus3p (class in mp)": [[169, "mp.mme_bus3p"]], "name() (mp.mme_bus3p method)": [[169, "mp.mme_bus3p.name"]], "interior_x0() (mp.mme_bus3p_opf_acc method)": [[170, "mp.mme_bus3p_opf_acc.interior_x0"]], "mme_bus3p_opf_acc (class in mp)": [[170, "mp.mme_bus3p_opf_acc"]], "interior_x0() (mp.mme_bus3p_opf_acp method)": [[171, "mp.mme_bus3p_opf_acp.interior_x0"]], "mme_bus3p_opf_acp (class in mp)": [[171, "mp.mme_bus3p_opf_acp"]], "interior_vm() (mp.mme_bus_opf_ac method)": [[172, "mp.mme_bus_opf_ac.interior_vm"]], "mme_bus_opf_ac (class in mp)": [[172, "mp.mme_bus_opf_ac"]], "add_constraints() (mp.mme_bus_opf_acc method)": [[173, "mp.mme_bus_opf_acc.add_constraints"]], "data_model_update_on() (mp.mme_bus_opf_acc method)": [[173, "mp.mme_bus_opf_acc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acc method)": [[173, "mp.mme_bus_opf_acc.interior_x0"]], "mme_bus_opf_acc (class in mp)": [[173, "mp.mme_bus_opf_acc"]], "data_model_update_on() (mp.mme_bus_opf_acp method)": [[174, "mp.mme_bus_opf_acp.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acp method)": [[174, "mp.mme_bus_opf_acp.interior_x0"]], "mme_bus_opf_acp (class in mp)": [[174, "mp.mme_bus_opf_acp"]], "data_model_update_on() (mp.mme_bus_opf_dc method)": [[175, "mp.mme_bus_opf_dc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_dc method)": [[175, "mp.mme_bus_opf_dc.interior_x0"]], "mme_bus_opf_dc (class in mp)": [[175, "mp.mme_bus_opf_dc"]], "data_model_update_on() (mp.mme_bus_pf_ac method)": [[176, "mp.mme_bus_pf_ac.data_model_update_on"]], "mme_bus_pf_ac (class in mp)": [[176, "mp.mme_bus_pf_ac"]], "data_model_update_on() (mp.mme_bus_pf_dc method)": [[177, "mp.mme_bus_pf_dc.data_model_update_on"]], "mme_bus_pf_dc (class in mp)": [[177, "mp.mme_bus_pf_dc"]], "mme_buslink (class in mp)": [[178, "mp.mme_buslink"]], "name() (mp.mme_buslink method)": [[178, "mp.mme_buslink.name"]], "interior_x0() (mp.mme_buslink_opf method)": [[179, "mp.mme_buslink_opf.interior_x0"]], "mme_buslink_opf (class in mp)": [[179, "mp.mme_buslink_opf"]], "add_constraints() (mp.mme_buslink_opf_acc method)": [[180, "mp.mme_buslink_opf_acc.add_constraints"]], "mme_buslink_opf_acc (class in mp)": [[180, "mp.mme_buslink_opf_acc"]], "va_fcn() (mp.mme_buslink_opf_acc method)": [[180, "mp.mme_buslink_opf_acc.va_fcn"]], "va_hess() (mp.mme_buslink_opf_acc method)": [[180, "mp.mme_buslink_opf_acc.va_hess"]], "vm2_fcn() (mp.mme_buslink_opf_acc method)": [[180, "mp.mme_buslink_opf_acc.vm2_fcn"]], "vm2_hess() (mp.mme_buslink_opf_acc method)": [[180, "mp.mme_buslink_opf_acc.vm2_hess"]], "add_constraints() (mp.mme_buslink_opf_acp method)": [[181, "mp.mme_buslink_opf_acp.add_constraints"]], "mme_buslink_opf_acp (class in mp)": [[181, "mp.mme_buslink_opf_acp"]], "add_constraints() (mp.mme_buslink_pf_ac method)": [[182, "mp.mme_buslink_pf_ac.add_constraints"]], "add_vars() (mp.mme_buslink_pf_ac method)": [[182, "mp.mme_buslink_pf_ac.add_vars"]], "mme_buslink_pf_ac (class in mp)": [[182, "mp.mme_buslink_pf_ac"]], "voltage_constraints() (mp.mme_buslink_pf_ac method)": [[182, "mp.mme_buslink_pf_ac.voltage_constraints"]], "add_constraints() (mp.mme_buslink_pf_acc method)": [[183, "mp.mme_buslink_pf_acc.add_constraints"]], "mme_buslink_pf_acc (class in mp)": [[183, "mp.mme_buslink_pf_acc"]], "pf_va_fcn() (mp.mme_buslink_pf_acc method)": [[183, "mp.mme_buslink_pf_acc.pf_va_fcn"]], "pf_vm_fcn() (mp.mme_buslink_pf_acc method)": [[183, "mp.mme_buslink_pf_acc.pf_vm_fcn"]], "add_constraints() (mp.mme_buslink_pf_acp method)": [[184, "mp.mme_buslink_pf_acp.add_constraints"]], "mme_buslink_pf_acp (class in mp)": [[184, "mp.mme_buslink_pf_acp"]], "mme_gen (class in mp)": [[185, "mp.mme_gen"]], "name() (mp.mme_gen method)": [[185, "mp.mme_gen.name"]], "data_model_update_on() (mp.mme_gen3p method)": [[186, "mp.mme_gen3p.data_model_update_on"]], "mme_gen3p (class in mp)": [[186, "mp.mme_gen3p"]], "name() (mp.mme_gen3p method)": [[186, "mp.mme_gen3p.name"]], "interior_x0() (mp.mme_gen3p_opf method)": [[187, "mp.mme_gen3p_opf.interior_x0"]], "mme_gen3p_opf (class in mp)": [[187, "mp.mme_gen3p_opf"]], "add_costs() (mp.mme_gen_opf method)": [[188, "mp.mme_gen_opf.add_costs"]], "add_vars() (mp.mme_gen_opf method)": [[188, "mp.mme_gen_opf.add_vars"]], "cost (mp.mme_gen_opf attribute)": [[188, "mp.mme_gen_opf.cost"]], "interior_x0() (mp.mme_gen_opf method)": [[188, "mp.mme_gen_opf.interior_x0"]], "mme_gen_opf (class in mp)": [[188, "mp.mme_gen_opf"]], "add_constraints() (mp.mme_gen_opf_ac method)": [[189, "mp.mme_gen_opf_ac.add_constraints"]], "add_costs() (mp.mme_gen_opf_ac method)": [[189, "mp.mme_gen_opf_ac.add_costs"]], "build_cost_params() (mp.mme_gen_opf_ac method)": [[189, "mp.mme_gen_opf_ac.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_ac method)": [[189, "mp.mme_gen_opf_ac.data_model_update_on"]], "disp_load_constant_pf_constraint() (mp.mme_gen_opf_ac method)": [[189, "mp.mme_gen_opf_ac.disp_load_constant_pf_constraint"]], "has_pq_cap() (mp.mme_gen_opf_ac method)": [[189, "mp.mme_gen_opf_ac.has_pq_cap"]], "mme_gen_opf_ac (class in mp)": [[189, "mp.mme_gen_opf_ac"]], "pq_capability_constraint() (mp.mme_gen_opf_ac method)": [[189, "mp.mme_gen_opf_ac.pq_capability_constraint"]], "add_constraints() (mp.mme_gen_opf_dc method)": [[190, "mp.mme_gen_opf_dc.add_constraints"]], "build_cost_params() (mp.mme_gen_opf_dc method)": [[190, "mp.mme_gen_opf_dc.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_dc method)": [[190, "mp.mme_gen_opf_dc.data_model_update_on"]], "mme_gen_opf_dc (class in mp)": [[190, "mp.mme_gen_opf_dc"]], "data_model_update_on() (mp.mme_gen_pf_ac method)": [[191, "mp.mme_gen_pf_ac.data_model_update_on"]], "mme_gen_pf_ac (class in mp)": [[191, "mp.mme_gen_pf_ac"]], "data_model_update_on() (mp.mme_gen_pf_dc method)": [[192, "mp.mme_gen_pf_dc.data_model_update_on"]], "mme_gen_pf_dc (class in mp)": [[192, "mp.mme_gen_pf_dc"]], "mme_legacy_dcline (class in mp)": [[193, "mp.mme_legacy_dcline"]], "name() (mp.mme_legacy_dcline method)": [[193, "mp.mme_legacy_dcline.name"]], "add_constraints() (mp.mme_legacy_dcline_opf method)": [[194, "mp.mme_legacy_dcline_opf.add_constraints"]], "add_costs() (mp.mme_legacy_dcline_opf method)": [[194, "mp.mme_legacy_dcline_opf.add_costs"]], "add_vars() (mp.mme_legacy_dcline_opf method)": [[194, "mp.mme_legacy_dcline_opf.add_vars"]], "build_cost_params() (mp.mme_legacy_dcline_opf method)": [[194, "mp.mme_legacy_dcline_opf.build_cost_params"]], "cost (mp.mme_legacy_dcline_opf attribute)": [[194, "mp.mme_legacy_dcline_opf.cost"]], "interior_x0() (mp.mme_legacy_dcline_opf method)": [[194, "mp.mme_legacy_dcline_opf.interior_x0"]], "mme_legacy_dcline_opf (class in mp)": [[194, "mp.mme_legacy_dcline_opf"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_ac method)": [[195, "mp.mme_legacy_dcline_opf_ac.data_model_update_on"]], "mme_legacy_dcline_opf_ac (class in mp)": [[195, "mp.mme_legacy_dcline_opf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_dc method)": [[196, "mp.mme_legacy_dcline_opf_dc.data_model_update_on"]], "mme_legacy_dcline_opf_dc (class in mp)": [[196, "mp.mme_legacy_dcline_opf_dc"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_ac method)": [[197, "mp.mme_legacy_dcline_pf_ac.data_model_update_on"]], "mme_legacy_dcline_pf_ac (class in mp)": [[197, "mp.mme_legacy_dcline_pf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_dc method)": [[198, "mp.mme_legacy_dcline_pf_dc.data_model_update_on"]], "mme_legacy_dcline_pf_dc (class in mp)": [[198, "mp.mme_legacy_dcline_pf_dc"]], "data_model_update_on() (mp.mme_line3p method)": [[199, "mp.mme_line3p.data_model_update_on"]], "mme_line3p (class in mp)": [[199, "mp.mme_line3p"]], "name() (mp.mme_line3p method)": [[199, "mp.mme_line3p.name"]], "interior_x0() (mp.mme_line3p_opf method)": [[200, "mp.mme_line3p_opf.interior_x0"]], "mme_line3p_opf (class in mp)": [[200, "mp.mme_line3p_opf"]], "mme_load (class in mp)": [[201, "mp.mme_load"]], "name() (mp.mme_load method)": [[201, "mp.mme_load.name"]], "data_model_update_on() (mp.mme_load_cpf method)": [[202, "mp.mme_load_cpf.data_model_update_on"]], "mme_load_cpf (class in mp)": [[202, "mp.mme_load_cpf"]], "data_model_update_on() (mp.mme_load_pf_ac method)": [[203, "mp.mme_load_pf_ac.data_model_update_on"]], "mme_load_pf_ac (class in mp)": [[203, "mp.mme_load_pf_ac"]], "data_model_update_on() (mp.mme_load_pf_dc method)": [[204, "mp.mme_load_pf_dc.data_model_update_on"]], "mme_load_pf_dc (class in mp)": [[204, "mp.mme_load_pf_dc"]], "add_constraints() (mp.mme_reserve_gen method)": [[205, "mp.mme_reserve_gen.add_constraints"]], "add_costs() (mp.mme_reserve_gen method)": [[205, "mp.mme_reserve_gen.add_costs"]], "add_vars() (mp.mme_reserve_gen method)": [[205, "mp.mme_reserve_gen.add_vars"]], "data_model_update_on() (mp.mme_reserve_gen method)": [[205, "mp.mme_reserve_gen.data_model_update_on"]], "mme_reserve_gen (class in mp)": [[205, "mp.mme_reserve_gen"]], "name() (mp.mme_reserve_gen method)": [[205, "mp.mme_reserve_gen.name"]], "add_constraints() (mp.mme_reserve_zone method)": [[206, "mp.mme_reserve_zone.add_constraints"]], "data_model_update_on() (mp.mme_reserve_zone method)": [[206, "mp.mme_reserve_zone.data_model_update_on"]], "mme_reserve_zone (class in mp)": [[206, "mp.mme_reserve_zone"]], "name() (mp.mme_reserve_zone method)": [[206, "mp.mme_reserve_zone.name"]], "mme_shunt (class in mp)": [[207, "mp.mme_shunt"]], "name() (mp.mme_shunt method)": [[207, "mp.mme_shunt.name"]], "data_model_update_on() (mp.mme_shunt_cpf method)": [[208, "mp.mme_shunt_cpf.data_model_update_on"]], "mme_shunt_cpf (class in mp)": [[208, "mp.mme_shunt_cpf"]], "data_model_update_on() (mp.mme_shunt_pf_ac method)": [[209, "mp.mme_shunt_pf_ac.data_model_update_on"]], "mme_shunt_pf_ac (class in mp)": [[209, "mp.mme_shunt_pf_ac"]], "data_model_update_on() (mp.mme_shunt_pf_dc method)": [[210, "mp.mme_shunt_pf_dc.data_model_update_on"]], "mme_shunt_pf_dc (class in mp)": [[210, "mp.mme_shunt_pf_dc"]], "data_model_update_on() (mp.mme_xfmr3p method)": [[211, "mp.mme_xfmr3p.data_model_update_on"]], "mme_xfmr3p (class in mp)": [[211, "mp.mme_xfmr3p"]], "name() (mp.mme_xfmr3p method)": [[211, "mp.mme_xfmr3p.name"]], "interior_x0() (mp.mme_xfmr3p_opf method)": [[212, "mp.mme_xfmr3p_opf.interior_x0"]], "mme_xfmr3p_opf (class in mp)": [[212, "mp.mme_xfmr3p_opf"]], "add_node() (mp.net_model method)": [[213, "mp.net_model.add_node"]], "add_nodes() (mp.net_model method)": [[213, "mp.net_model.add_nodes"]], "add_port() (mp.net_model method)": [[213, "mp.net_model.add_port"]], "add_state() (mp.net_model method)": [[213, "mp.net_model.add_state"]], "add_states() (mp.net_model method)": [[213, "mp.net_model.add_states"]], "add_var() (mp.net_model method)": [[213, "mp.net_model.add_var"]], "add_vvars() (mp.net_model method)": [[213, "mp.net_model.add_vvars"]], "add_zvars() (mp.net_model method)": [[213, "mp.net_model.add_zvars"]], "build() (mp.net_model method)": [[213, "mp.net_model.build"]], "build_params() (mp.net_model method)": [[213, "mp.net_model.build_params"]], "def_set_types() (mp.net_model method)": [[213, "mp.net_model.def_set_types"]], "display() (mp.net_model method)": [[213, "mp.net_model.display"]], "ensure_ref_node() (mp.net_model method)": [[213, "mp.net_model.ensure_ref_node"]], "get_node_idx() (mp.net_model method)": [[213, "mp.net_model.get_node_idx"]], "get_port_idx() (mp.net_model method)": [[213, "mp.net_model.get_port_idx"]], "get_state_idx() (mp.net_model method)": [[213, "mp.net_model.get_state_idx"]], "init_set_types() (mp.net_model method)": [[213, "mp.net_model.init_set_types"]], "name() (mp.net_model method)": [[213, "mp.net_model.name"]], "net_model (class in mp)": [[213, "mp.net_model"]], "node (mp.net_model attribute)": [[213, "mp.net_model.node"]], "node_types() (mp.net_model method)": [[213, "mp.net_model.node_types"]], "np() (mp.net_model method)": [[213, "mp.net_model.np"]], "nv (mp.net_model attribute)": [[213, "mp.net_model.nv"]], "nz() (mp.net_model method)": [[213, "mp.net_model.nz"]], "params_var() (mp.net_model method)": [[213, "mp.net_model.params_var"]], "port (mp.net_model attribute)": [[213, "mp.net_model.port"]], "set_node_type_pq() (mp.net_model method)": [[213, "mp.net_model.set_node_type_pq"]], "set_node_type_pv() (mp.net_model method)": [[213, "mp.net_model.set_node_type_pv"]], "set_node_type_ref() (mp.net_model method)": [[213, "mp.net_model.set_node_type_ref"]], "set_type_idx_map() (mp.net_model method)": [[213, "mp.net_model.set_type_idx_map"]], "set_type_label() (mp.net_model method)": [[213, "mp.net_model.set_type_label"]], "stack_matrix_params() (mp.net_model method)": [[213, "mp.net_model.stack_matrix_params"]], "stack_vector_params() (mp.net_model method)": [[213, "mp.net_model.stack_vector_params"]], "state (mp.net_model attribute)": [[213, "mp.net_model.state"]], "the_np (mp.net_model attribute)": [[213, "mp.net_model.the_np"]], "the_nz (mp.net_model attribute)": [[213, "mp.net_model.the_nz"]], "build_params() (mp.net_model_ac method)": [[214, "mp.net_model_ac.build_params"]], "def_set_types() (mp.net_model_ac method)": [[214, "mp.net_model_ac.def_set_types"]], "get_va() (mp.net_model_ac method)": [[214, "mp.net_model_ac.get_va"]], "net_model_ac (class in mp)": [[214, "mp.net_model_ac"]], "nodal_complex_current_balance() (mp.net_model_ac method)": [[214, "mp.net_model_ac.nodal_complex_current_balance"]], "nodal_complex_current_balance_hess() (mp.net_model_ac method)": [[214, "mp.net_model_ac.nodal_complex_current_balance_hess"]], "nodal_complex_power_balance() (mp.net_model_ac method)": [[214, "mp.net_model_ac.nodal_complex_power_balance"]], "nodal_complex_power_balance_hess() (mp.net_model_ac method)": [[214, "mp.net_model_ac.nodal_complex_power_balance_hess"]], "port_inj_nln() (mp.net_model_ac method)": [[214, "mp.net_model_ac.port_inj_nln"]], "port_inj_nln_hess() (mp.net_model_ac method)": [[214, "mp.net_model_ac.port_inj_nln_hess"]], "port_inj_soln() (mp.net_model_ac method)": [[214, "mp.net_model_ac.port_inj_soln"]], "def_set_types() (mp.net_model_acc method)": [[215, "mp.net_model_acc.def_set_types"]], "initial_voltage_angle() (mp.net_model_acc method)": [[215, "mp.net_model_acc.initial_voltage_angle"]], "net_model_acc (class in mp)": [[215, "mp.net_model_acc"]], "net_model_acc() (mp.net_model_acc method)": [[215, "mp.net_model_acc.net_model_acc"]], "def_set_types() (mp.net_model_acp method)": [[216, "mp.net_model_acp.def_set_types"]], "initial_voltage_angle() (mp.net_model_acp method)": [[216, "mp.net_model_acp.initial_voltage_angle"]], "net_model_acp (class in mp)": [[216, "mp.net_model_acp"]], "net_model_acp() (mp.net_model_acp method)": [[216, "mp.net_model_acp.net_model_acp"]], "build_params() (mp.net_model_dc method)": [[217, "mp.net_model_dc.build_params"]], "def_set_types() (mp.net_model_dc method)": [[217, "mp.net_model_dc.def_set_types"]], "net_model_dc (class in mp)": [[217, "mp.net_model_dc"]], "net_model_dc() (mp.net_model_dc method)": [[217, "mp.net_model_dc.net_model_dc"]], "port_inj_soln() (mp.net_model_dc method)": [[217, "mp.net_model_dc.port_inj_soln"]], "va (mp.net_model_dc attribute)": [[217, "mp.net_model_dc.va"]], "z (mp.net_model_dc attribute)": [[217, "mp.net_model_dc.z"]], "c (mp.nm_element attribute)": [[218, "mp.nm_element.C"]], "d (mp.nm_element attribute)": [[218, "mp.nm_element.D"]], "add_nodes() (mp.nm_element method)": [[218, "mp.nm_element.add_nodes"]], "add_states() (mp.nm_element method)": [[218, "mp.nm_element.add_states"]], "add_vvars() (mp.nm_element method)": [[218, "mp.nm_element.add_vvars"]], "add_zvars() (mp.nm_element method)": [[218, "mp.nm_element.add_zvars"]], "build_params() (mp.nm_element method)": [[218, "mp.nm_element.build_params"]], "count() (mp.nm_element method)": [[218, "mp.nm_element.count"]], "data_model_element() (mp.nm_element method)": [[218, "mp.nm_element.data_model_element"]], "display() (mp.nm_element method)": [[218, "mp.nm_element.display"]], "get_nv_() (mp.nm_element method)": [[218, "mp.nm_element.get_nv_"]], "incidence_matrix() (mp.nm_element method)": [[218, "mp.nm_element.incidence_matrix"]], "math_model_element() (mp.nm_element method)": [[218, "mp.nm_element.math_model_element"]], "name() (mp.nm_element method)": [[218, "mp.nm_element.name"]], "nk (mp.nm_element attribute)": [[218, "mp.nm_element.nk"]], "nm_element (class in mp)": [[218, "mp.nm_element"]], "nn() (mp.nm_element method)": [[218, "mp.nm_element.nn"]], "node_indices() (mp.nm_element method)": [[218, "mp.nm_element.node_indices"]], "node_types() (mp.nm_element method)": [[218, "mp.nm_element.node_types"]], "np() (mp.nm_element method)": [[218, "mp.nm_element.np"]], "nz() (mp.nm_element method)": [[218, "mp.nm_element.nz"]], "set_node_type_pq() (mp.nm_element method)": [[218, "mp.nm_element.set_node_type_pq"]], "set_node_type_pv() (mp.nm_element method)": [[218, "mp.nm_element.set_node_type_pv"]], "set_node_type_ref() (mp.nm_element method)": [[218, "mp.nm_element.set_node_type_ref"]], "soln (mp.nm_element attribute)": [[218, "mp.nm_element.soln"]], "x2vz() (mp.nm_element method)": [[218, "mp.nm_element.x2vz"]], "name() (mp.nme_branch method)": [[219, "mp.nme_branch.name"]], "nme_branch (class in mp)": [[219, "mp.nme_branch"]], "np() (mp.nme_branch method)": [[219, "mp.nme_branch.np"]], "build_params() (mp.nme_branch_ac method)": [[220, "mp.nme_branch_ac.build_params"]], "nme_branch_ac (class in mp)": [[220, "mp.nme_branch_ac"]], "ang_diff_fcn() (mp.nme_branch_acc method)": [[221, "mp.nme_branch_acc.ang_diff_fcn"]], "ang_diff_hess() (mp.nme_branch_acc method)": [[221, "mp.nme_branch_acc.ang_diff_hess"]], "nme_branch_acc (class in mp)": [[221, "mp.nme_branch_acc"]], "nme_branch_acp (class in mp)": [[222, "mp.nme_branch_acp"]], "build_params() (mp.nme_branch_dc method)": [[223, "mp.nme_branch_dc.build_params"]], "nme_branch_dc (class in mp)": [[223, "mp.nme_branch_dc"]], "name() (mp.nme_bus method)": [[224, "mp.nme_bus.name"]], "nme_bus (class in mp)": [[224, "mp.nme_bus"]], "nn() (mp.nme_bus method)": [[224, "mp.nme_bus.nn"]], "node_types() (mp.nme_bus method)": [[224, "mp.nme_bus.node_types"]], "set_node_type_pq() (mp.nme_bus method)": [[224, "mp.nme_bus.set_node_type_pq"]], "set_node_type_pv() (mp.nme_bus method)": [[224, "mp.nme_bus.set_node_type_pv"]], "set_node_type_ref() (mp.nme_bus method)": [[224, "mp.nme_bus.set_node_type_ref"]], "name() (mp.nme_bus3p method)": [[225, "mp.nme_bus3p.name"]], "nme_bus3p (class in mp)": [[225, "mp.nme_bus3p"]], "nn() (mp.nme_bus3p method)": [[225, "mp.nme_bus3p.nn"]], "node_types() (mp.nme_bus3p method)": [[225, "mp.nme_bus3p.node_types"]], "add_vvars() (mp.nme_bus3p_acc method)": [[226, "mp.nme_bus3p_acc.add_vvars"]], "nme_bus3p_acc (class in mp)": [[226, "mp.nme_bus3p_acc"]], "add_vvars() (mp.nme_bus3p_acp method)": [[227, "mp.nme_bus3p_acp.add_vvars"]], "nme_bus3p_acp (class in mp)": [[227, "mp.nme_bus3p_acp"]], "add_vvars() (mp.nme_bus_acc method)": [[228, "mp.nme_bus_acc.add_vvars"]], "nme_bus_acc (class in mp)": [[228, "mp.nme_bus_acc"]], "add_vvars() (mp.nme_bus_acp method)": [[229, "mp.nme_bus_acp.add_vvars"]], "nme_bus_acp (class in mp)": [[229, "mp.nme_bus_acp"]], "add_vvars() (mp.nme_bus_dc method)": [[230, "mp.nme_bus_dc.add_vvars"]], "nme_bus_dc (class in mp)": [[230, "mp.nme_bus_dc"]], "add_zvars() (mp.nme_buslink method)": [[231, "mp.nme_buslink.add_zvars"]], "build_params() (mp.nme_buslink method)": [[231, "mp.nme_buslink.build_params"]], "name() (mp.nme_buslink method)": [[231, "mp.nme_buslink.name"]], "nme_buslink (class in mp)": [[231, "mp.nme_buslink"]], "np() (mp.nme_buslink method)": [[231, "mp.nme_buslink.np"]], "nz() (mp.nme_buslink method)": [[231, "mp.nme_buslink.nz"]], "voltage_constraints() (mp.nme_buslink method)": [[231, "mp.nme_buslink.voltage_constraints"]], "nme_buslink_acc (class in mp)": [[232, "mp.nme_buslink_acc"]], "nme_buslink_acp (class in mp)": [[233, "mp.nme_buslink_acp"]], "name() (mp.nme_gen method)": [[234, "mp.nme_gen.name"]], "nme_gen (class in mp)": [[234, "mp.nme_gen"]], "np() (mp.nme_gen method)": [[234, "mp.nme_gen.np"]], "nz() (mp.nme_gen method)": [[234, "mp.nme_gen.nz"]], "add_zvars() (mp.nme_gen3p method)": [[235, "mp.nme_gen3p.add_zvars"]], "build_params() (mp.nme_gen3p method)": [[235, "mp.nme_gen3p.build_params"]], "name() (mp.nme_gen3p method)": [[235, "mp.nme_gen3p.name"]], "nme_gen3p (class in mp)": [[235, "mp.nme_gen3p"]], "np() (mp.nme_gen3p method)": [[235, "mp.nme_gen3p.np"]], "nz() (mp.nme_gen3p method)": [[235, "mp.nme_gen3p.nz"]], "nme_gen3p_acc (class in mp)": [[236, "mp.nme_gen3p_acc"]], "nme_gen3p_acp (class in mp)": [[237, "mp.nme_gen3p_acp"]], "add_zvars() (mp.nme_gen_ac method)": [[238, "mp.nme_gen_ac.add_zvars"]], "build_params() (mp.nme_gen_ac method)": [[238, "mp.nme_gen_ac.build_params"]], "nme_gen_ac (class in mp)": [[238, "mp.nme_gen_ac"]], "nme_gen_acc (class in mp)": [[239, "mp.nme_gen_acc"]], "nme_gen_acp (class in mp)": [[240, "mp.nme_gen_acp"]], "add_zvars() (mp.nme_gen_dc method)": [[241, "mp.nme_gen_dc.add_zvars"]], "build_params() (mp.nme_gen_dc method)": [[241, "mp.nme_gen_dc.build_params"]], "nme_gen_dc (class in mp)": [[241, "mp.nme_gen_dc"]], "name() (mp.nme_legacy_dcline method)": [[242, "mp.nme_legacy_dcline.name"]], "nme_legacy_dcline (class in mp)": [[242, "mp.nme_legacy_dcline"]], "np() (mp.nme_legacy_dcline method)": [[242, "mp.nme_legacy_dcline.np"]], "nz() (mp.nme_legacy_dcline method)": [[242, "mp.nme_legacy_dcline.nz"]], "add_zvars() (mp.nme_legacy_dcline_ac method)": [[243, "mp.nme_legacy_dcline_ac.add_zvars"]], "build_params() (mp.nme_legacy_dcline_ac method)": [[243, "mp.nme_legacy_dcline_ac.build_params"]], "nme_legacy_dcline_ac (class in mp)": [[243, "mp.nme_legacy_dcline_ac"]], "nme_legacy_dcline_acc (class in mp)": [[244, "mp.nme_legacy_dcline_acc"]], "nme_legacy_dcline_acp (class in mp)": [[245, "mp.nme_legacy_dcline_acp"]], "add_zvars() (mp.nme_legacy_dcline_dc method)": [[246, "mp.nme_legacy_dcline_dc.add_zvars"]], "build_params() (mp.nme_legacy_dcline_dc method)": [[246, "mp.nme_legacy_dcline_dc.build_params"]], "nme_legacy_dcline_dc (class in mp)": [[246, "mp.nme_legacy_dcline_dc"]], "build_params() (mp.nme_line3p method)": [[247, "mp.nme_line3p.build_params"]], "name() (mp.nme_line3p method)": [[247, "mp.nme_line3p.name"]], "nme_line3p (class in mp)": [[247, "mp.nme_line3p"]], "np() (mp.nme_line3p method)": [[247, "mp.nme_line3p.np"]], "vec2symmat_stacked() (mp.nme_line3p method)": [[247, "mp.nme_line3p.vec2symmat_stacked"]], "name() (mp.nme_load method)": [[248, "mp.nme_load.name"]], "nme_load (class in mp)": [[248, "mp.nme_load"]], "np() (mp.nme_load method)": [[248, "mp.nme_load.np"]], "build_params() (mp.nme_load3p method)": [[249, "mp.nme_load3p.build_params"]], "name() (mp.nme_load3p method)": [[249, "mp.nme_load3p.name"]], "nme_load3p (class in mp)": [[249, "mp.nme_load3p"]], "np() (mp.nme_load3p method)": [[249, "mp.nme_load3p.np"]], "build_params() (mp.nme_load_ac method)": [[250, "mp.nme_load_ac.build_params"]], "nme_load_ac (class in mp)": [[250, "mp.nme_load_ac"]], "port_inj_current_nln() (mp.nme_load_ac method)": [[250, "mp.nme_load_ac.port_inj_current_nln"]], "port_inj_power_nln() (mp.nme_load_ac method)": [[250, "mp.nme_load_ac.port_inj_power_nln"]], "nme_load_acc (class in mp)": [[251, "mp.nme_load_acc"]], "nme_load_acp (class in mp)": [[252, "mp.nme_load_acp"]], "build_params() (mp.nme_load_dc method)": [[253, "mp.nme_load_dc.build_params"]], "nme_load_dc (class in mp)": [[253, "mp.nme_load_dc"]], "name() (mp.nme_shunt method)": [[254, "mp.nme_shunt.name"]], "nme_shunt (class in mp)": [[254, "mp.nme_shunt"]], "np() (mp.nme_shunt method)": [[254, "mp.nme_shunt.np"]], "build_params() (mp.nme_shunt_ac method)": [[255, "mp.nme_shunt_ac.build_params"]], "nme_shunt_ac (class in mp)": [[255, "mp.nme_shunt_ac"]], "nme_shunt_acc (class in mp)": [[256, "mp.nme_shunt_acc"]], "nme_shunt_acp (class in mp)": [[257, "mp.nme_shunt_acp"]], "build_params() (mp.nme_shunt_dc method)": [[258, "mp.nme_shunt_dc.build_params"]], "nme_shunt_dc (class in mp)": [[258, "mp.nme_shunt_dc"]], "build_params() (mp.nme_xfmr3p method)": [[259, "mp.nme_xfmr3p.build_params"]], "name() (mp.nme_xfmr3p method)": [[259, "mp.nme_xfmr3p.name"]], "nme_xfmr3p (class in mp)": [[259, "mp.nme_xfmr3p"]], "np() (mp.nme_xfmr3p method)": [[259, "mp.nme_xfmr3p.np"]], "data_model_build() (mp.task method)": [[260, "mp.task.data_model_build"]], "data_model_build_post() (mp.task method)": [[260, "mp.task.data_model_build_post"]], "data_model_build_pre() (mp.task method)": [[260, "mp.task.data_model_build_pre"]], "data_model_class() (mp.task method)": [[260, "mp.task.data_model_class"]], "data_model_class_default() (mp.task method)": [[260, "mp.task.data_model_class_default"]], "data_model_create() (mp.task method)": [[260, "mp.task.data_model_create"]], "dm (mp.task attribute)": [[260, "mp.task.dm"]], "dm_converter_build() (mp.task method)": [[260, "mp.task.dm_converter_build"]], "dm_converter_class() (mp.task method)": [[260, "mp.task.dm_converter_class"]], "dm_converter_class_mpc2_default() (mp.task method)": [[260, "mp.task.dm_converter_class_mpc2_default"]], "dm_converter_create() (mp.task method)": [[260, "mp.task.dm_converter_create"]], "dmc (mp.task attribute)": [[260, "mp.task.dmc"]], "et (mp.task attribute)": [[260, "mp.task.et"]], "i_dm (mp.task attribute)": [[260, "mp.task.i_dm"]], "i_mm (mp.task attribute)": [[260, "mp.task.i_mm"]], "i_nm (mp.task attribute)": [[260, "mp.task.i_nm"]], "math_model_build() (mp.task method)": [[260, "mp.task.math_model_build"]], "math_model_class() (mp.task method)": [[260, "mp.task.math_model_class"]], "math_model_class_default() (mp.task method)": [[260, "mp.task.math_model_class_default"]], "math_model_create() (mp.task method)": [[260, "mp.task.math_model_create"]], "math_model_opt() (mp.task method)": [[260, "mp.task.math_model_opt"]], "message (mp.task attribute)": [[260, "mp.task.message"]], "mm (mp.task attribute)": [[260, "mp.task.mm"]], "mm_opt (mp.task attribute)": [[260, "mp.task.mm_opt"]], "name (mp.task attribute)": [[260, "mp.task.name"]], "network_model_build() (mp.task method)": [[260, "mp.task.network_model_build"]], "network_model_build_post() (mp.task method)": [[260, "mp.task.network_model_build_post"]], "network_model_build_pre() (mp.task method)": [[260, "mp.task.network_model_build_pre"]], "network_model_class() (mp.task method)": [[260, "mp.task.network_model_class"]], "network_model_class_default() (mp.task method)": [[260, "mp.task.network_model_class_default"]], "network_model_create() (mp.task method)": [[260, "mp.task.network_model_create"]], "network_model_update() (mp.task method)": [[260, "mp.task.network_model_update"]], "network_model_x_soln() (mp.task method)": [[260, "mp.task.network_model_x_soln"]], "next_dm() (mp.task method)": [[260, "mp.task.next_dm"]], "next_mm() (mp.task method)": [[260, "mp.task.next_mm"]], "next_nm() (mp.task method)": [[260, "mp.task.next_nm"]], "nm (mp.task attribute)": [[260, "mp.task.nm"]], "print_soln() (mp.task method)": [[260, "mp.task.print_soln"]], "print_soln_header() (mp.task method)": [[260, "mp.task.print_soln_header"]], "run() (mp.task method)": [[260, "mp.task.run"]], "run_post() (mp.task method)": [[260, "mp.task.run_post"]], "run_pre() (mp.task method)": [[260, "mp.task.run_pre"]], "save_soln() (mp.task method)": [[260, "mp.task.save_soln"]], "success (mp.task attribute)": [[260, "mp.task.success"]], "tag (mp.task attribute)": [[260, "mp.task.tag"]], "task (class in mp)": [[260, "mp.task"]], "data_model_build() (mp.task_cpf method)": [[261, "mp.task_cpf.data_model_build"]], "data_model_class_default() (mp.task_cpf method)": [[261, "mp.task_cpf.data_model_class_default"]], "dm_converter_class() (mp.task_cpf method)": [[261, "mp.task_cpf.dm_converter_class"]], "math_model_class_default() (mp.task_cpf method)": [[261, "mp.task_cpf.math_model_class_default"]], "math_model_opt() (mp.task_cpf method)": [[261, "mp.task_cpf.math_model_opt"]], "network_model_build() (mp.task_cpf method)": [[261, "mp.task_cpf.network_model_build"]], "network_model_update() (mp.task_cpf method)": [[261, "mp.task_cpf.network_model_update"]], "network_model_x_soln() (mp.task_cpf method)": [[261, "mp.task_cpf.network_model_x_soln"]], "next_mm() (mp.task_cpf method)": [[261, "mp.task_cpf.next_mm"]], "run_pre() (mp.task_cpf method)": [[261, "mp.task_cpf.run_pre"]], "task_cpf (class in mp)": [[261, "mp.task_cpf"]], "task_cpf() (mp.task_cpf method)": [[261, "mp.task_cpf.task_cpf"]], "warmstart (mp.task_cpf attribute)": [[261, "mp.task_cpf.warmstart"]], "legacy_post_run() (mp.task_cpf_legacy method)": [[262, "mp.task_cpf_legacy.legacy_post_run"]], "run_post() (mp.task_cpf_legacy method)": [[262, "mp.task_cpf_legacy.run_post"]], "run_pre() (mp.task_cpf_legacy method)": [[262, "mp.task_cpf_legacy.run_pre"]], "task_cpf_legacy (class in mp)": [[262, "mp.task_cpf_legacy"]], "data_model_build_post() (mp.task_opf method)": [[263, "mp.task_opf.data_model_build_post"]], "data_model_class_default() (mp.task_opf method)": [[263, "mp.task_opf.data_model_class_default"]], "dc (mp.task_opf attribute)": [[263, "mp.task_opf.dc"]], "math_model_class_default() (mp.task_opf method)": [[263, "mp.task_opf.math_model_class_default"]], "network_model_class_default() (mp.task_opf method)": [[263, "mp.task_opf.network_model_class_default"]], "print_soln_header() (mp.task_opf method)": [[263, "mp.task_opf.print_soln_header"]], "run_pre() (mp.task_opf method)": [[263, "mp.task_opf.run_pre"]], "task_opf (class in mp)": [[263, "mp.task_opf"]], "data_model_build_post() (mp.task_opf_legacy method)": [[264, "mp.task_opf_legacy.data_model_build_post"]], "dm_converter_class_mpc2_default() (mp.task_opf_legacy method)": [[264, "mp.task_opf_legacy.dm_converter_class_mpc2_default"]], "legacy_post_run() (mp.task_opf_legacy method)": [[264, "mp.task_opf_legacy.legacy_post_run"]], "math_model_class_default() (mp.task_opf_legacy method)": [[264, "mp.task_opf_legacy.math_model_class_default"]], "run_post() (mp.task_opf_legacy method)": [[264, "mp.task_opf_legacy.run_post"]], "run_pre() (mp.task_opf_legacy method)": [[264, "mp.task_opf_legacy.run_pre"]], "task_opf_legacy (class in mp)": [[264, "mp.task_opf_legacy"]], "dc (mp.task_pf attribute)": [[265, "mp.task_pf.dc"]], "enforce_q_lims() (mp.task_pf method)": [[265, "mp.task_pf.enforce_q_lims"]], "fixed_q_idx (mp.task_pf attribute)": [[265, "mp.task_pf.fixed_q_idx"]], "fixed_q_qty (mp.task_pf attribute)": [[265, "mp.task_pf.fixed_q_qty"]], "iterations (mp.task_pf attribute)": [[265, "mp.task_pf.iterations"]], "math_model_class_default() (mp.task_pf method)": [[265, "mp.task_pf.math_model_class_default"]], "name (mp.task_pf attribute)": [[265, "mp.task_pf.name"]], "network_model_build_post() (mp.task_pf method)": [[265, "mp.task_pf.network_model_build_post"]], "network_model_class_default() (mp.task_pf method)": [[265, "mp.task_pf.network_model_class_default"]], "network_model_x_soln() (mp.task_pf method)": [[265, "mp.task_pf.network_model_x_soln"]], "next_dm() (mp.task_pf method)": [[265, "mp.task_pf.next_dm"]], "ref (mp.task_pf attribute)": [[265, "mp.task_pf.ref"]], "ref0 (mp.task_pf attribute)": [[265, "mp.task_pf.ref0"]], "run_pre() (mp.task_pf method)": [[265, "mp.task_pf.run_pre"]], "tag (mp.task_pf attribute)": [[265, "mp.task_pf.tag"]], "task_pf (class in mp)": [[265, "mp.task_pf"]], "va_ref0 (mp.task_pf attribute)": [[265, "mp.task_pf.va_ref0"]], "legacy_post_run() (mp.task_pf_legacy method)": [[266, "mp.task_pf_legacy.legacy_post_run"]], "run_post() (mp.task_pf_legacy method)": [[266, "mp.task_pf_legacy.run_post"]], "run_pre() (mp.task_pf_legacy method)": [[266, "mp.task_pf_legacy.run_pre"]], "task_pf_legacy (class in mp)": [[266, "mp.task_pf_legacy"]], "run_pre_legacy() (mp.task_shared_legacy method)": [[267, "mp.task_shared_legacy.run_pre_legacy"]], "task_shared_legacy (class in mp)": [[267, "mp.task_shared_legacy"]], "dm_element_classes() (mp.xt_3p method)": [[268, "mp.xt_3p.dm_element_classes"]], "dmc_element_classes() (mp.xt_3p method)": [[268, "mp.xt_3p.dmc_element_classes"]], "mm_element_classes() (mp.xt_3p method)": [[268, "mp.xt_3p.mm_element_classes"]], "nm_element_classes() (mp.xt_3p method)": [[268, "mp.xt_3p.nm_element_classes"]], "xt_3p (class in mp)": [[268, "mp.xt_3p"]], "dm_element_classes() (mp.xt_legacy_dcline method)": [[269, "mp.xt_legacy_dcline.dm_element_classes"]], "dmc_element_classes() (mp.xt_legacy_dcline method)": [[269, "mp.xt_legacy_dcline.dmc_element_classes"]], "mm_element_classes() (mp.xt_legacy_dcline method)": [[269, "mp.xt_legacy_dcline.mm_element_classes"]], "nm_element_classes() (mp.xt_legacy_dcline method)": [[269, "mp.xt_legacy_dcline.nm_element_classes"]], "xt_legacy_dcline (class in mp)": [[269, "mp.xt_legacy_dcline"]], "dm_element_classes() (mp.xt_reserves method)": [[270, "mp.xt_reserves.dm_element_classes"]], "dmc_element_classes() (mp.xt_reserves method)": [[270, "mp.xt_reserves.dmc_element_classes"]], "mm_element_classes() (mp.xt_reserves method)": [[270, "mp.xt_reserves.mm_element_classes"]], "xt_reserves (class in mp)": [[270, "mp.xt_reserves"]], "display() (mp_table method)": [[271, "mp_table.display"]], "end() (mp_table method)": [[271, "mp_table.end"]], "extract_named_args() (mp_table static method)": [[271, "mp_table.extract_named_args"]], "horzcat() (mp_table method)": [[271, "mp_table.horzcat"]], "isempty() (mp_table method)": [[271, "mp_table.isempty"]], "istable() (mp_table method)": [[271, "mp_table.istable"]], "mp_table (built-in class)": [[271, "mp_table"]], "mp_table() (mp_table method)": [[271, "mp_table.mp_table"]], "size() (mp_table method)": [[271, "mp_table.size"]], "subsasgn() (mp_table method)": [[271, "mp_table.subsasgn"]], "subsref() (mp_table method)": [[271, "mp_table.subsref"]], "vertcat() (mp_table method)": [[271, "mp_table.vertcat"]], "get_table() (mp_table_subclass method)": [[272, "mp_table_subclass.get_table"]], "mp_table_subclass (built-in class)": [[272, "mp_table_subclass"]], "set_table() (mp_table_subclass method)": [[272, "mp_table_subclass.set_table"]], "mp_table_class() (built-in function)": [[274, "mp_table_class"]], "run_cpf() (built-in function)": [[275, "run_cpf"]], "run_mp() (built-in function)": [[276, "run_mp"]], "run_opf() (built-in function)": [[277, "run_opf"]], "run_pf() (built-in function)": [[278, "run_pf"]]}})