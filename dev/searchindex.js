Search.setIndex({"docnames": ["dev-manual/acknowledgments", "dev-manual/architecture", "dev-manual/customizing", "dev-manual/data-model", "dev-manual/data-model-converter", "dev-manual/index", "dev-manual/introduction", "dev-manual/math-model", "dev-manual/net-model", "dev-manual/notation", "dev-manual/references", "dev-manual/task", "howto/add-constraint", "howto/builddocs", "howto/builddocs/generate_autodoc_stubs", "howto/builddocs/generate_matpower_autodoc", "howto/builddocs/generate_source_symlinks", "howto/element", "howto/extension", "howto/gizmo-element/index", "howto/three-phase", "index", "mips/functions/have_feature_lu_vec", "mips/functions/have_feature_pardiso", "mips/functions/have_feature_pardiso_legacy", "mips/functions/have_feature_pardiso_object", "mips/functions/mips", "mips/functions/mips_example1", "mips/functions/mips_example2", "mips/functions/mipsver", "mips/functions/mplinsolve", "mips/functions/qps_mips", "mips/functions/t_mips", "mips/functions/t_mips_pardiso", "mips/functions/t_mplinsolve", "mips/functions/t_qps_mips", "mips/functions/test_mips", "mips/index", "mips/reference", "most/functions/addgen2mpc", "most/functions/addstorage", "most/functions/addwind", "most/functions/apply_profile", "most/functions/c118swf", "most/functions/ex_case3a", "most/functions/ex_case3b", "most/functions/ex_contab", "most/functions/ex_load_profile", "most/functions/ex_storage", "most/functions/ex_transmat", "most/functions/ex_wind", "most/functions/ex_wind_profile", "most/functions/ex_wind_profile_d", "most/functions/ex_wind_uc", "most/functions/ex_xgd", "most/functions/ex_xgd_ramp", "most/functions/ex_xgd_res", "most/functions/ex_xgd_uc", "most/functions/filter_ramp_transitions", "most/functions/getprofiles", "most/functions/idx_profile", "most/functions/loadgenericdata", "most/functions/loadmd", "most/functions/loadstoragedata", "most/functions/loadxgendata", "most/functions/md_init", "most/functions/most", "most/functions/most_ex1_ed", "most/functions/most_ex2_dcopf", "most/functions/most_ex3_dcopf_w_uc", "most/functions/most_ex4_dcopf_ss", "most/functions/most_ex5_mpopf", "most/functions/most_ex6_uc", "most/functions/most_ex7_suc", "most/functions/most_summary", "most/functions/mostver", "most/functions/mpoption_info_most", "most/functions/plot_gen", "most/functions/plot_storage", "most/functions/plot_uc", "most/functions/plot_uc_data", "most/functions/t_case30_most", "most/functions/t_case3_most", "most/functions/t_case_tlmp", "most/functions/t_case_tlmp_storage", "most/functions/t_most_30b_1_1_0", "most/functions/t_most_30b_1_1_0_uc", "most/functions/t_most_30b_1_1_17", "most/functions/t_most_30b_3_1_0", "most/functions/t_most_30b_3_1_17", "most/functions/t_most_3b_1_1_0", "most/functions/t_most_3b_1_1_2", "most/functions/t_most_3b_3_1_0", "most/functions/t_most_3b_3_1_2", "most/functions/t_most_fixed_res", "most/functions/t_most_mpopf", "most/functions/t_most_sp", "most/functions/t_most_spuc", "most/functions/t_most_suc", "most/functions/t_most_tlmp", "most/functions/t_most_uc", "most/functions/t_most_w_ds", "most/functions/test_most", "most/functions/uniformwindprofile", "most/index", "most/reference", "mpom/classes/mp/set_manager", "mpom/classes/mp/set_manager_opt_model", "mpom/classes/mp/sm_lin_constraint", "mpom/classes/mp/sm_nln_constraint", "mpom/classes/mp/sm_nln_cost", "mpom/classes/mp/sm_quad_constraint", "mpom/classes/mp/sm_quad_cost", "mpom/classes/mp/sm_variable", "mpom/classes/mp_idx_manager", "mpom/classes/opt_model", "mpom/functions/artelys_knitro_options", "mpom/functions/convert_constraint_multipliers", "mpom/functions/convert_lin_constraint", "mpom/functions/convert_lin_constraint_multipliers", "mpom/functions/convert_quad_constraint", "mpom/functions/cplex_options", "mpom/functions/glpk_options", "mpom/functions/gurobi_options", "mpom/functions/gurobiver", "mpom/functions/have_feature_bpmpd", "mpom/functions/have_feature_catchme", "mpom/functions/have_feature_clp", "mpom/functions/have_feature_cplex", "mpom/functions/have_feature_evalc", "mpom/functions/have_feature_fmincon", "mpom/functions/have_feature_fmincon_ipm", "mpom/functions/have_feature_fsolve", "mpom/functions/have_feature_glpk", "mpom/functions/have_feature_gurobi", "mpom/functions/have_feature_intlinprog", "mpom/functions/have_feature_ipopt", "mpom/functions/have_feature_ipopt_auxdata", "mpom/functions/have_feature_isequaln", "mpom/functions/have_feature_knitro", "mpom/functions/have_feature_knitromatlab", "mpom/functions/have_feature_ktrlink", "mpom/functions/have_feature_linprog", "mpom/functions/have_feature_linprog_ds", "mpom/functions/have_feature_mosek", "mpom/functions/have_feature_opti_clp", "mpom/functions/have_feature_optim", "mpom/functions/have_feature_optimoptions", "mpom/functions/have_feature_osqp", "mpom/functions/have_feature_quadprog", "mpom/functions/have_feature_quadprog_ls", "mpom/functions/have_feature_sdpt3", "mpom/functions/have_feature_sedumi", "mpom/functions/have_feature_yalmip", "mpom/functions/ipopt_options", "mpom/functions/knitrover", "mpom/functions/miqps_cplex", "mpom/functions/miqps_glpk", "mpom/functions/miqps_gurobi", "mpom/functions/miqps_master", "mpom/functions/miqps_mosek", "mpom/functions/miqps_ot", "mpom/functions/mosek_options", "mpom/functions/mosek_symbcon", "mpom/functions/mpomver", "mpom/functions/mpopt2nleqopt", "mpom/functions/mpopt2nlpopt", "mpom/functions/mpopt2pneopt", "mpom/functions/mpopt2qcqpopt", "mpom/functions/mpopt2qpopt", "mpom/functions/nested_struct_copy", "mpom/functions/nleqs_core", "mpom/functions/nleqs_fd_newton", "mpom/functions/nleqs_fsolve", "mpom/functions/nleqs_gauss_seidel", "mpom/functions/nleqs_master", "mpom/functions/nleqs_master_ex1", "mpom/functions/nleqs_master_ex2", "mpom/functions/nleqs_newton", "mpom/functions/nlp_consfcn", "mpom/functions/nlp_costfcn", "mpom/functions/nlp_hessfcn", "mpom/functions/nlps_fmincon", "mpom/functions/nlps_ipopt", "mpom/functions/nlps_knitro", "mpom/functions/nlps_master", "mpom/functions/nlps_master_ex1", "mpom/functions/nlps_master_ex2", "mpom/functions/osqp_options", "mpom/functions/osqpver", "mpom/functions/pne_callback_default", "mpom/functions/pne_callback_nose", "mpom/functions/pne_callback_target_lam", "mpom/functions/pne_detect_events", "mpom/functions/pne_detected_event", "mpom/functions/pne_event_nose", "mpom/functions/pne_event_target_lam", "mpom/functions/pne_ex1", "mpom/functions/pne_pfcn_arc_len", "mpom/functions/pne_pfcn_natural", "mpom/functions/pne_pfcn_pseudo_arc_len", "mpom/functions/pne_register_callbacks", "mpom/functions/pne_register_events", "mpom/functions/pnes_master", "mpom/functions/qcqp_nlp_consfcn", "mpom/functions/qcqp_nlp_costfcn", "mpom/functions/qcqp_nlp_hessfcn", "mpom/functions/qcqps_gurobi", "mpom/functions/qcqps_knitro", "mpom/functions/qcqps_master", "mpom/functions/qp_ex1", "mpom/functions/qps_bpmpd", "mpom/functions/qps_clp", "mpom/functions/qps_cplex", "mpom/functions/qps_glpk", "mpom/functions/qps_gurobi", "mpom/functions/qps_ipopt", "mpom/functions/qps_knitro", "mpom/functions/qps_master", "mpom/functions/qps_mosek", "mpom/functions/qps_osqp", "mpom/functions/qps_ot", "mpom/functions/t_miqps_master", "mpom/functions/t_nested_struct_copy", "mpom/functions/t_nleqs_master", "mpom/functions/t_nlps_master", "mpom/functions/t_om_solve_leqs", "mpom/functions/t_om_solve_miqps", "mpom/functions/t_om_solve_nleqs", "mpom/functions/t_om_solve_nlps", "mpom/functions/t_om_solve_pne", "mpom/functions/t_om_solve_qcqps", "mpom/functions/t_om_solve_qps", "mpom/functions/t_opt_model", "mpom/functions/t_pnes_master", "mpom/functions/t_qcqps_master", "mpom/functions/t_qps_master", "mpom/functions/test_mp_opt_model", "mpom/index", "mpom/reference", "mptest/functions/have_feature", "mptest/functions/have_feature_matlab", "mptest/functions/have_feature_octave", "mptest/functions/mptestver", "mptest/functions/t_begin", "mptest/functions/t_end", "mptest/functions/t_file_match", "mptest/functions/t_have_feature", "mptest/functions/t_is", "mptest/functions/t_ok", "mptest/functions/t_run_tests", "mptest/functions/t_skip", "mptest/functions/t_str_match", "mptest/functions/t_test_fcns", "mptest/functions/test_mptest", "mptest/index", "mptest/reference", "ref-manual/classes/index", "ref-manual/classes/mp/NODE_TYPE", "ref-manual/classes/mp/cost_table", "ref-manual/classes/mp/cost_table_utils", "ref-manual/classes/mp/data_model", "ref-manual/classes/mp/data_model_cpf", "ref-manual/classes/mp/data_model_opf", "ref-manual/classes/mp/dm_converter", "ref-manual/classes/mp/dm_converter_mpc2", "ref-manual/classes/mp/dm_converter_mpc2_legacy", "ref-manual/classes/mp/dm_element", "ref-manual/classes/mp/dmc_element", "ref-manual/classes/mp/dmce_branch_mpc2", "ref-manual/classes/mp/dmce_bus3p_mpc2", "ref-manual/classes/mp/dmce_bus_mpc2", "ref-manual/classes/mp/dmce_buslink_mpc2", "ref-manual/classes/mp/dmce_gen3p_mpc2", "ref-manual/classes/mp/dmce_gen_mpc2", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2", "ref-manual/classes/mp/dmce_line3p_mpc2", "ref-manual/classes/mp/dmce_load3p_mpc2", "ref-manual/classes/mp/dmce_load_mpc2", "ref-manual/classes/mp/dmce_reserve_gen_mpc2", "ref-manual/classes/mp/dmce_reserve_zone_mpc2", "ref-manual/classes/mp/dmce_shunt_mpc2", "ref-manual/classes/mp/dmce_xfmr3p_mpc2", "ref-manual/classes/mp/dme_branch", "ref-manual/classes/mp/dme_branch_opf", "ref-manual/classes/mp/dme_bus", "ref-manual/classes/mp/dme_bus3p", "ref-manual/classes/mp/dme_bus3p_opf", "ref-manual/classes/mp/dme_bus_opf", "ref-manual/classes/mp/dme_buslink", "ref-manual/classes/mp/dme_buslink_opf", "ref-manual/classes/mp/dme_gen", "ref-manual/classes/mp/dme_gen3p", "ref-manual/classes/mp/dme_gen3p_opf", "ref-manual/classes/mp/dme_gen_opf", "ref-manual/classes/mp/dme_legacy_dcline", "ref-manual/classes/mp/dme_legacy_dcline_opf", "ref-manual/classes/mp/dme_line3p", "ref-manual/classes/mp/dme_line3p_opf", "ref-manual/classes/mp/dme_load", "ref-manual/classes/mp/dme_load3p", "ref-manual/classes/mp/dme_load3p_opf", "ref-manual/classes/mp/dme_load_cpf", "ref-manual/classes/mp/dme_load_opf", "ref-manual/classes/mp/dme_reserve_gen", "ref-manual/classes/mp/dme_reserve_zone", "ref-manual/classes/mp/dme_shared_opf", "ref-manual/classes/mp/dme_shunt", "ref-manual/classes/mp/dme_shunt_cpf", "ref-manual/classes/mp/dme_shunt_opf", "ref-manual/classes/mp/dme_xfmr3p", "ref-manual/classes/mp/dme_xfmr3p_opf", "ref-manual/classes/mp/element_container", "ref-manual/classes/mp/extension", "ref-manual/classes/mp/form", "ref-manual/classes/mp/form_ac", "ref-manual/classes/mp/form_acc", "ref-manual/classes/mp/form_acp", "ref-manual/classes/mp/form_dc", "ref-manual/classes/mp/mapped_array", "ref-manual/classes/mp/math_model", "ref-manual/classes/mp/math_model_cpf_acc", "ref-manual/classes/mp/math_model_cpf_acci", "ref-manual/classes/mp/math_model_cpf_accs", "ref-manual/classes/mp/math_model_cpf_acp", "ref-manual/classes/mp/math_model_cpf_acpi", "ref-manual/classes/mp/math_model_cpf_acps", "ref-manual/classes/mp/math_model_opf", "ref-manual/classes/mp/math_model_opf_ac", "ref-manual/classes/mp/math_model_opf_acc", "ref-manual/classes/mp/math_model_opf_acci", "ref-manual/classes/mp/math_model_opf_acci_legacy", "ref-manual/classes/mp/math_model_opf_accs", "ref-manual/classes/mp/math_model_opf_accs_legacy", "ref-manual/classes/mp/math_model_opf_acp", "ref-manual/classes/mp/math_model_opf_acpi", "ref-manual/classes/mp/math_model_opf_acpi_legacy", "ref-manual/classes/mp/math_model_opf_acps", "ref-manual/classes/mp/math_model_opf_acps_legacy", "ref-manual/classes/mp/math_model_opf_dc", "ref-manual/classes/mp/math_model_opf_dc_legacy", "ref-manual/classes/mp/math_model_pf", "ref-manual/classes/mp/math_model_pf_ac", "ref-manual/classes/mp/math_model_pf_acci", "ref-manual/classes/mp/math_model_pf_accs", "ref-manual/classes/mp/math_model_pf_acpi", "ref-manual/classes/mp/math_model_pf_acps", "ref-manual/classes/mp/math_model_pf_dc", "ref-manual/classes/mp/mm_element", "ref-manual/classes/mp/mm_shared_opf_legacy", "ref-manual/classes/mp/mm_shared_pfcpf", "ref-manual/classes/mp/mm_shared_pfcpf_ac", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i", "ref-manual/classes/mp/mm_shared_pfcpf_acc", "ref-manual/classes/mp/mm_shared_pfcpf_acci", "ref-manual/classes/mp/mm_shared_pfcpf_accs", "ref-manual/classes/mp/mm_shared_pfcpf_acp", "ref-manual/classes/mp/mm_shared_pfcpf_acpi", "ref-manual/classes/mp/mm_shared_pfcpf_acps", "ref-manual/classes/mp/mm_shared_pfcpf_dc", "ref-manual/classes/mp/mme_branch", "ref-manual/classes/mp/mme_branch_opf", "ref-manual/classes/mp/mme_branch_opf_ac", "ref-manual/classes/mp/mme_branch_opf_acc", "ref-manual/classes/mp/mme_branch_opf_acp", "ref-manual/classes/mp/mme_branch_opf_dc", "ref-manual/classes/mp/mme_branch_pf_ac", "ref-manual/classes/mp/mme_branch_pf_dc", "ref-manual/classes/mp/mme_bus", "ref-manual/classes/mp/mme_bus3p", "ref-manual/classes/mp/mme_bus3p_opf_acc", "ref-manual/classes/mp/mme_bus3p_opf_acp", "ref-manual/classes/mp/mme_bus_opf_ac", "ref-manual/classes/mp/mme_bus_opf_acc", "ref-manual/classes/mp/mme_bus_opf_acp", "ref-manual/classes/mp/mme_bus_opf_dc", "ref-manual/classes/mp/mme_bus_pf_ac", "ref-manual/classes/mp/mme_bus_pf_dc", "ref-manual/classes/mp/mme_buslink", "ref-manual/classes/mp/mme_buslink_opf", "ref-manual/classes/mp/mme_buslink_opf_acc", "ref-manual/classes/mp/mme_buslink_opf_acp", "ref-manual/classes/mp/mme_buslink_pf_ac", "ref-manual/classes/mp/mme_buslink_pf_acc", "ref-manual/classes/mp/mme_buslink_pf_acp", "ref-manual/classes/mp/mme_gen", "ref-manual/classes/mp/mme_gen3p", "ref-manual/classes/mp/mme_gen3p_opf", "ref-manual/classes/mp/mme_gen_opf", "ref-manual/classes/mp/mme_gen_opf_ac", "ref-manual/classes/mp/mme_gen_opf_ac_oval", "ref-manual/classes/mp/mme_gen_opf_dc", "ref-manual/classes/mp/mme_gen_pf_ac", "ref-manual/classes/mp/mme_gen_pf_dc", "ref-manual/classes/mp/mme_legacy_dcline", "ref-manual/classes/mp/mme_legacy_dcline_opf", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc", "ref-manual/classes/mp/mme_line3p", "ref-manual/classes/mp/mme_line3p_opf", "ref-manual/classes/mp/mme_load", "ref-manual/classes/mp/mme_load_cpf", "ref-manual/classes/mp/mme_load_pf_ac", "ref-manual/classes/mp/mme_load_pf_dc", "ref-manual/classes/mp/mme_reserve_gen", "ref-manual/classes/mp/mme_reserve_zone", "ref-manual/classes/mp/mme_shunt", "ref-manual/classes/mp/mme_shunt_cpf", "ref-manual/classes/mp/mme_shunt_pf_ac", "ref-manual/classes/mp/mme_shunt_pf_dc", "ref-manual/classes/mp/mme_xfmr3p", "ref-manual/classes/mp/mme_xfmr3p_opf", "ref-manual/classes/mp/net_model", "ref-manual/classes/mp/net_model_ac", "ref-manual/classes/mp/net_model_acc", "ref-manual/classes/mp/net_model_acp", "ref-manual/classes/mp/net_model_dc", "ref-manual/classes/mp/nm_element", "ref-manual/classes/mp/nme_branch", "ref-manual/classes/mp/nme_branch_ac", "ref-manual/classes/mp/nme_branch_acc", "ref-manual/classes/mp/nme_branch_acp", "ref-manual/classes/mp/nme_branch_dc", "ref-manual/classes/mp/nme_bus", "ref-manual/classes/mp/nme_bus3p", "ref-manual/classes/mp/nme_bus3p_acc", "ref-manual/classes/mp/nme_bus3p_acp", "ref-manual/classes/mp/nme_bus_acc", "ref-manual/classes/mp/nme_bus_acp", "ref-manual/classes/mp/nme_bus_dc", "ref-manual/classes/mp/nme_buslink", "ref-manual/classes/mp/nme_buslink_acc", "ref-manual/classes/mp/nme_buslink_acp", "ref-manual/classes/mp/nme_gen", "ref-manual/classes/mp/nme_gen3p", "ref-manual/classes/mp/nme_gen3p_acc", "ref-manual/classes/mp/nme_gen3p_acp", "ref-manual/classes/mp/nme_gen_ac", "ref-manual/classes/mp/nme_gen_acc", "ref-manual/classes/mp/nme_gen_acp", "ref-manual/classes/mp/nme_gen_dc", "ref-manual/classes/mp/nme_legacy_dcline", "ref-manual/classes/mp/nme_legacy_dcline_ac", "ref-manual/classes/mp/nme_legacy_dcline_acc", "ref-manual/classes/mp/nme_legacy_dcline_acp", "ref-manual/classes/mp/nme_legacy_dcline_dc", "ref-manual/classes/mp/nme_line3p", "ref-manual/classes/mp/nme_load", "ref-manual/classes/mp/nme_load3p", "ref-manual/classes/mp/nme_load_ac", "ref-manual/classes/mp/nme_load_acc", "ref-manual/classes/mp/nme_load_acp", "ref-manual/classes/mp/nme_load_dc", "ref-manual/classes/mp/nme_shunt", "ref-manual/classes/mp/nme_shunt_ac", "ref-manual/classes/mp/nme_shunt_acc", "ref-manual/classes/mp/nme_shunt_acp", "ref-manual/classes/mp/nme_shunt_dc", "ref-manual/classes/mp/nme_xfmr3p", "ref-manual/classes/mp/sm_legacy_cost", "ref-manual/classes/mp/task", "ref-manual/classes/mp/task_cpf", "ref-manual/classes/mp/task_cpf_legacy", "ref-manual/classes/mp/task_opf", "ref-manual/classes/mp/task_opf_legacy", "ref-manual/classes/mp/task_pf", "ref-manual/classes/mp/task_pf_legacy", "ref-manual/classes/mp/task_shared_legacy", "ref-manual/classes/mp/xt_3p", "ref-manual/classes/mp/xt_legacy_dcline", "ref-manual/classes/mp/xt_oval_cap_curve", "ref-manual/classes/mp/xt_reserves", "ref-manual/classes/mp_table", "ref-manual/classes/mp_table_subclass", "ref-manual/functions/index", "ref-manual/functions/install_matpower", "ref-manual/functions/mp/load_dm", "ref-manual/functions/mp_table_class", "ref-manual/functions/run_cpf", "ref-manual/functions/run_mp", "ref-manual/functions/run_opf", "ref-manual/functions/run_pf", "ref-manual/index", "ref-manual/introduction", "ref-manual/legacy/classes/opf_model", "ref-manual/legacy/functions/add_userfcn", "ref-manual/legacy/functions/apply_changes", "ref-manual/legacy/functions/bustypes", "ref-manual/legacy/functions/calc_branch_angle", "ref-manual/legacy/functions/calc_v_i_sum", "ref-manual/legacy/functions/calc_v_pq_sum", "ref-manual/legacy/functions/calc_v_y_sum", "ref-manual/legacy/functions/case_info", "ref-manual/legacy/functions/caseformat", "ref-manual/legacy/functions/cdf2mpc", "ref-manual/legacy/functions/compare_case", "ref-manual/legacy/functions/connected_components", "ref-manual/legacy/functions/cpf_corrector", "ref-manual/legacy/functions/cpf_current_mpc", "ref-manual/legacy/functions/cpf_default_callback", "ref-manual/legacy/functions/cpf_detect_events", "ref-manual/legacy/functions/cpf_flim_event", "ref-manual/legacy/functions/cpf_flim_event_cb", "ref-manual/legacy/functions/cpf_nose_event", "ref-manual/legacy/functions/cpf_nose_event_cb", "ref-manual/legacy/functions/cpf_p", "ref-manual/legacy/functions/cpf_p_jac", "ref-manual/legacy/functions/cpf_plim_event", "ref-manual/legacy/functions/cpf_plim_event_cb", "ref-manual/legacy/functions/cpf_predictor", "ref-manual/legacy/functions/cpf_qlim_event", "ref-manual/legacy/functions/cpf_qlim_event_cb", "ref-manual/legacy/functions/cpf_register_callback", "ref-manual/legacy/functions/cpf_register_event", "ref-manual/legacy/functions/cpf_tangent", "ref-manual/legacy/functions/cpf_target_lam_event", "ref-manual/legacy/functions/cpf_target_lam_event_cb", "ref-manual/legacy/functions/cpf_vlim_event", "ref-manual/legacy/functions/cpf_vlim_event_cb", "ref-manual/legacy/functions/d2Abr_dV2", "ref-manual/legacy/functions/d2Ibr_dV2", "ref-manual/legacy/functions/d2Imis_dV2", "ref-manual/legacy/functions/d2Imis_dVdSg", "ref-manual/legacy/functions/d2Sbr_dV2", "ref-manual/legacy/functions/d2Sbus_dV2", "ref-manual/legacy/functions/dAbr_dV", "ref-manual/legacy/functions/dIbr_dV", "ref-manual/legacy/functions/dImis_dV", "ref-manual/legacy/functions/dSbr_dV", "ref-manual/legacy/functions/dSbus_dV", "ref-manual/legacy/functions/dcopf", "ref-manual/legacy/functions/dcopf_solver", "ref-manual/legacy/functions/dcpf", "ref-manual/legacy/functions/define_constants", "ref-manual/legacy/functions/e2i_data", "ref-manual/legacy/functions/e2i_field", "ref-manual/legacy/functions/ext2int", "ref-manual/legacy/functions/extract_islands", "ref-manual/legacy/functions/fdpf", "ref-manual/legacy/functions/feval_w_path", "ref-manual/legacy/functions/find_bridges", "ref-manual/legacy/functions/find_islands", "ref-manual/legacy/functions/fmincopf", "ref-manual/legacy/functions/gausspf", "ref-manual/legacy/functions/genfuels", "ref-manual/legacy/functions/gentypes", "ref-manual/legacy/functions/get_losses", "ref-manual/legacy/functions/get_reorder", "ref-manual/legacy/functions/hasPQcap", "ref-manual/legacy/functions/have_feature_e4st", "ref-manual/legacy/functions/have_feature_minopf", "ref-manual/legacy/functions/have_feature_most", "ref-manual/legacy/functions/have_feature_mp_core", "ref-manual/legacy/functions/have_feature_pdipmopf", "ref-manual/legacy/functions/have_feature_regexp_split", "ref-manual/legacy/functions/have_feature_scpdipmopf", "ref-manual/legacy/functions/have_feature_sdp_pf", "ref-manual/legacy/functions/have_feature_smartmarket", "ref-manual/legacy/functions/have_feature_syngrid", "ref-manual/legacy/functions/have_feature_table", "ref-manual/legacy/functions/have_feature_tralmopf", "ref-manual/legacy/functions/i2e_data", "ref-manual/legacy/functions/i2e_field", "ref-manual/legacy/functions/idx_brch", "ref-manual/legacy/functions/idx_bus", "ref-manual/legacy/functions/idx_cost", "ref-manual/legacy/functions/idx_ct", "ref-manual/legacy/functions/idx_dcline", "ref-manual/legacy/functions/idx_gen", "ref-manual/legacy/functions/int2ext", "ref-manual/legacy/functions/isload", "ref-manual/legacy/functions/load2disp", "ref-manual/legacy/functions/loadcase", "ref-manual/legacy/functions/loadshed", "ref-manual/legacy/functions/makeAang", "ref-manual/legacy/functions/makeApq", "ref-manual/legacy/functions/makeAvl", "ref-manual/legacy/functions/makeAy", "ref-manual/legacy/functions/makeB", "ref-manual/legacy/functions/makeBdc", "ref-manual/legacy/functions/makeJac", "ref-manual/legacy/functions/makeLODF", "ref-manual/legacy/functions/makePTDF", "ref-manual/legacy/functions/makeSbus", "ref-manual/legacy/functions/makeSdzip", "ref-manual/legacy/functions/makeYbus", "ref-manual/legacy/functions/make_vcorr", "ref-manual/legacy/functions/make_zpv", "ref-manual/legacy/functions/margcost", "ref-manual/legacy/functions/miqps_matpower", "ref-manual/legacy/functions/modcost", "ref-manual/legacy/functions/mpoption", "ref-manual/legacy/functions/mpoption_info_clp", "ref-manual/legacy/functions/mpoption_info_cplex", "ref-manual/legacy/functions/mpoption_info_fmincon", "ref-manual/legacy/functions/mpoption_info_glpk", "ref-manual/legacy/functions/mpoption_info_gurobi", "ref-manual/legacy/functions/mpoption_info_intlinprog", "ref-manual/legacy/functions/mpoption_info_ipopt", "ref-manual/legacy/functions/mpoption_info_knitro", "ref-manual/legacy/functions/mpoption_info_linprog", "ref-manual/legacy/functions/mpoption_info_mips", "ref-manual/legacy/functions/mpoption_info_mosek", "ref-manual/legacy/functions/mpoption_info_osqp", "ref-manual/legacy/functions/mpoption_info_quadprog", "ref-manual/legacy/functions/mpoption_old", "ref-manual/legacy/functions/mpver", "ref-manual/legacy/functions/newtonpf", "ref-manual/legacy/functions/newtonpf_I_cart", "ref-manual/legacy/functions/newtonpf_I_hybrid", "ref-manual/legacy/functions/newtonpf_I_polar", "ref-manual/legacy/functions/newtonpf_S_cart", "ref-manual/legacy/functions/newtonpf_S_hybrid", "ref-manual/legacy/functions/nlpopf_solver", "ref-manual/legacy/functions/opf", "ref-manual/legacy/functions/opf_args", "ref-manual/legacy/functions/opf_branch_ang_fcn", "ref-manual/legacy/functions/opf_branch_ang_hess", "ref-manual/legacy/functions/opf_branch_flow_fcn", "ref-manual/legacy/functions/opf_branch_flow_hess", "ref-manual/legacy/functions/opf_current_balance_fcn", "ref-manual/legacy/functions/opf_current_balance_hess", "ref-manual/legacy/functions/opf_execute", "ref-manual/legacy/functions/opf_gen_cost_fcn", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn", "ref-manual/legacy/functions/opf_nle_fcn1", "ref-manual/legacy/functions/opf_nle_hess1", "ref-manual/legacy/functions/opf_power_balance_fcn", "ref-manual/legacy/functions/opf_power_balance_hess", "ref-manual/legacy/functions/opf_setup", "ref-manual/legacy/functions/opf_veq_fcn", "ref-manual/legacy/functions/opf_veq_hess", "ref-manual/legacy/functions/opf_vlim_fcn", "ref-manual/legacy/functions/opf_vlim_hess", "ref-manual/legacy/functions/opf_vref_fcn", "ref-manual/legacy/functions/opf_vref_hess", "ref-manual/legacy/functions/order_radial", "ref-manual/legacy/functions/pfsoln", "ref-manual/legacy/functions/poly2pwl", "ref-manual/legacy/functions/polycost", "ref-manual/legacy/functions/pqcost", "ref-manual/legacy/functions/printpf", "ref-manual/legacy/functions/psse2mpc", "ref-manual/legacy/functions/psse_convert", "ref-manual/legacy/functions/psse_convert_hvdc", "ref-manual/legacy/functions/psse_convert_xfmr", "ref-manual/legacy/functions/psse_parse", "ref-manual/legacy/functions/psse_parse_line", "ref-manual/legacy/functions/psse_parse_section", "ref-manual/legacy/functions/psse_read", "ref-manual/legacy/functions/qps_matpower", "ref-manual/legacy/functions/radial_pf", "ref-manual/legacy/functions/remove_userfcn", "ref-manual/legacy/functions/run_userfcn", "ref-manual/legacy/functions/runcpf", "ref-manual/legacy/functions/rundcopf", "ref-manual/legacy/functions/rundcpf", "ref-manual/legacy/functions/runduopf", "ref-manual/legacy/functions/runopf", "ref-manual/legacy/functions/runopf_w_res", "ref-manual/legacy/functions/runpf", "ref-manual/legacy/functions/runuopf", "ref-manual/legacy/functions/save2psse", "ref-manual/legacy/functions/savecase", "ref-manual/legacy/functions/savechgtab", "ref-manual/legacy/functions/scale_load", "ref-manual/legacy/functions/set_reorder", "ref-manual/legacy/functions/t_apply_changes", "ref-manual/legacy/functions/t_auction_case", "ref-manual/legacy/functions/t_auction_minopf", "ref-manual/legacy/functions/t_auction_mips", "ref-manual/legacy/functions/t_auction_tspopf_pdipm", "ref-manual/legacy/functions/t_case30_userfcns", "ref-manual/legacy/functions/t_case9_dcline", "ref-manual/legacy/functions/t_case9_opf", "ref-manual/legacy/functions/t_case9_opfv2", "ref-manual/legacy/functions/t_case9_pf", "ref-manual/legacy/functions/t_case9_pfv2", "ref-manual/legacy/functions/t_case9_save2psse", "ref-manual/legacy/functions/t_case_ext", "ref-manual/legacy/functions/t_case_int", "ref-manual/legacy/functions/t_chgtab", "ref-manual/legacy/functions/t_cpf", "ref-manual/legacy/functions/t_cpf_cb1", "ref-manual/legacy/functions/t_cpf_cb2", "ref-manual/legacy/functions/t_dcline", "ref-manual/legacy/functions/t_ext2int2ext", "ref-manual/legacy/functions/t_feval_w_path", "ref-manual/legacy/functions/t_get_losses", "ref-manual/legacy/functions/t_hasPQcap", "ref-manual/legacy/functions/t_hessian", "ref-manual/legacy/functions/t_islands", "ref-manual/legacy/functions/t_jacobian", "ref-manual/legacy/functions/t_load2disp", "ref-manual/legacy/functions/t_loadcase", "ref-manual/legacy/functions/t_makeLODF", "ref-manual/legacy/functions/t_makePTDF", "ref-manual/legacy/functions/t_margcost", "ref-manual/legacy/functions/t_miqps_matpower", "ref-manual/legacy/functions/t_modcost", "ref-manual/legacy/functions/t_mpoption", "ref-manual/legacy/functions/t_mpoption_ov", "ref-manual/legacy/functions/t_off2case", "ref-manual/legacy/functions/t_opf_dc_bpmpd", "ref-manual/legacy/functions/t_opf_dc_clp", "ref-manual/legacy/functions/t_opf_dc_cplex", "ref-manual/legacy/functions/t_opf_dc_default", "ref-manual/legacy/functions/t_opf_dc_glpk", "ref-manual/legacy/functions/t_opf_dc_gurobi", "ref-manual/legacy/functions/t_opf_dc_ipopt", "ref-manual/legacy/functions/t_opf_dc_mips", "ref-manual/legacy/functions/t_opf_dc_mips_sc", "ref-manual/legacy/functions/t_opf_dc_mosek", "ref-manual/legacy/functions/t_opf_dc_osqp", "ref-manual/legacy/functions/t_opf_dc_ot", "ref-manual/legacy/functions/t_opf_default", "ref-manual/legacy/functions/t_opf_fmincon", "ref-manual/legacy/functions/t_opf_ipopt", "ref-manual/legacy/functions/t_opf_knitro", "ref-manual/legacy/functions/t_opf_minopf", "ref-manual/legacy/functions/t_opf_mips", "ref-manual/legacy/functions/t_opf_model", "ref-manual/legacy/functions/t_opf_softlims", "ref-manual/legacy/functions/t_opf_tspopf_pdipm", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm", "ref-manual/legacy/functions/t_opf_tspopf_tralm", "ref-manual/legacy/functions/t_opf_userfcns", "ref-manual/legacy/functions/t_pf_ac", "ref-manual/legacy/functions/t_pf_dc", "ref-manual/legacy/functions/t_pf_radial", "ref-manual/legacy/functions/t_printpf", "ref-manual/legacy/functions/t_psse", "ref-manual/legacy/functions/t_qps_matpower", "ref-manual/legacy/functions/t_runmarket", "ref-manual/legacy/functions/t_runopf_w_res", "ref-manual/legacy/functions/t_scale_load", "ref-manual/legacy/functions/t_total_load", "ref-manual/legacy/functions/t_totcost", "ref-manual/legacy/functions/t_vdep_load", "ref-manual/legacy/functions/toggle_dcline", "ref-manual/legacy/functions/toggle_iflims", "ref-manual/legacy/functions/toggle_reserves", "ref-manual/legacy/functions/toggle_softlims", "ref-manual/legacy/functions/total_load", "ref-manual/legacy/functions/totcost", "ref-manual/legacy/functions/uopf", "ref-manual/legacy/functions/update_mupq", "ref-manual/legacy/functions/zgausspf", "ref-manual/legacy/index", "ref-manual/previous", "ref-manual/tests/index", "ref-manual/tests/mp_foo_table", "ref-manual/tests/t_case3p_a", "ref-manual/tests/t_case3p_b", "ref-manual/tests/t_case3p_c", "ref-manual/tests/t_case3p_d", "ref-manual/tests/t_case3p_e", "ref-manual/tests/t_case3p_f", "ref-manual/tests/t_case3p_g", "ref-manual/tests/t_case3p_h", "ref-manual/tests/t_case9_gizmo", "ref-manual/tests/t_dmc_element", "ref-manual/tests/t_mp_data_model", "ref-manual/tests/t_mp_dm_converter_mpc2", "ref-manual/tests/t_mp_mapped_array", "ref-manual/tests/t_mp_table", "ref-manual/tests/t_mpxt_legacy_dcline", "ref-manual/tests/t_mpxt_reserves", "ref-manual/tests/t_nm_element", "ref-manual/tests/t_node_test", "ref-manual/tests/t_port_inj_current_acc", "ref-manual/tests/t_port_inj_current_acp", "ref-manual/tests/t_port_inj_power_acc", "ref-manual/tests/t_port_inj_power_acp", "ref-manual/tests/t_pretty_print", "ref-manual/tests/t_run_mp", "ref-manual/tests/t_run_mp_3p", "ref-manual/tests/t_run_opf_default", "ref-manual/tests/test_matpower", "tech-notes", "users-manual/index"], "filenames": ["dev-manual/acknowledgments.rst", "dev-manual/architecture.rst", "dev-manual/customizing.rst", "dev-manual/data-model.rst", "dev-manual/data-model-converter.rst", "dev-manual/index.rst", "dev-manual/introduction.rst", "dev-manual/math-model.rst", "dev-manual/net-model.rst", "dev-manual/notation.rst", "dev-manual/references.rst", "dev-manual/task.rst", "howto/add-constraint.rst", "howto/builddocs.rst", "howto/builddocs/generate_autodoc_stubs.rst", "howto/builddocs/generate_matpower_autodoc.rst", "howto/builddocs/generate_source_symlinks.rst", "howto/element.rst", "howto/extension.rst", "howto/gizmo-element/index.rst", "howto/three-phase.rst", "index.rst", "mips/functions/have_feature_lu_vec.rst", "mips/functions/have_feature_pardiso.rst", "mips/functions/have_feature_pardiso_legacy.rst", "mips/functions/have_feature_pardiso_object.rst", "mips/functions/mips.rst", "mips/functions/mips_example1.rst", "mips/functions/mips_example2.rst", "mips/functions/mipsver.rst", "mips/functions/mplinsolve.rst", "mips/functions/qps_mips.rst", "mips/functions/t_mips.rst", "mips/functions/t_mips_pardiso.rst", "mips/functions/t_mplinsolve.rst", "mips/functions/t_qps_mips.rst", "mips/functions/test_mips.rst", "mips/index.rst", "mips/reference.rst", "most/functions/addgen2mpc.rst", "most/functions/addstorage.rst", "most/functions/addwind.rst", "most/functions/apply_profile.rst", "most/functions/c118swf.rst", "most/functions/ex_case3a.rst", "most/functions/ex_case3b.rst", "most/functions/ex_contab.rst", "most/functions/ex_load_profile.rst", "most/functions/ex_storage.rst", "most/functions/ex_transmat.rst", "most/functions/ex_wind.rst", "most/functions/ex_wind_profile.rst", "most/functions/ex_wind_profile_d.rst", "most/functions/ex_wind_uc.rst", "most/functions/ex_xgd.rst", "most/functions/ex_xgd_ramp.rst", "most/functions/ex_xgd_res.rst", "most/functions/ex_xgd_uc.rst", "most/functions/filter_ramp_transitions.rst", "most/functions/getprofiles.rst", "most/functions/idx_profile.rst", "most/functions/loadgenericdata.rst", "most/functions/loadmd.rst", "most/functions/loadstoragedata.rst", "most/functions/loadxgendata.rst", "most/functions/md_init.rst", "most/functions/most.rst", "most/functions/most_ex1_ed.rst", "most/functions/most_ex2_dcopf.rst", "most/functions/most_ex3_dcopf_w_uc.rst", "most/functions/most_ex4_dcopf_ss.rst", "most/functions/most_ex5_mpopf.rst", "most/functions/most_ex6_uc.rst", "most/functions/most_ex7_suc.rst", "most/functions/most_summary.rst", "most/functions/mostver.rst", "most/functions/mpoption_info_most.rst", "most/functions/plot_gen.rst", "most/functions/plot_storage.rst", "most/functions/plot_uc.rst", "most/functions/plot_uc_data.rst", "most/functions/t_case30_most.rst", "most/functions/t_case3_most.rst", "most/functions/t_case_tlmp.rst", "most/functions/t_case_tlmp_storage.rst", "most/functions/t_most_30b_1_1_0.rst", "most/functions/t_most_30b_1_1_0_uc.rst", "most/functions/t_most_30b_1_1_17.rst", "most/functions/t_most_30b_3_1_0.rst", "most/functions/t_most_30b_3_1_17.rst", "most/functions/t_most_3b_1_1_0.rst", "most/functions/t_most_3b_1_1_2.rst", "most/functions/t_most_3b_3_1_0.rst", "most/functions/t_most_3b_3_1_2.rst", "most/functions/t_most_fixed_res.rst", "most/functions/t_most_mpopf.rst", "most/functions/t_most_sp.rst", "most/functions/t_most_spuc.rst", "most/functions/t_most_suc.rst", "most/functions/t_most_tlmp.rst", "most/functions/t_most_uc.rst", "most/functions/t_most_w_ds.rst", "most/functions/test_most.rst", "most/functions/uniformwindprofile.rst", "most/index.rst", "most/reference.rst", "mpom/classes/mp/set_manager.rst", "mpom/classes/mp/set_manager_opt_model.rst", "mpom/classes/mp/sm_lin_constraint.rst", "mpom/classes/mp/sm_nln_constraint.rst", "mpom/classes/mp/sm_nln_cost.rst", "mpom/classes/mp/sm_quad_constraint.rst", "mpom/classes/mp/sm_quad_cost.rst", "mpom/classes/mp/sm_variable.rst", "mpom/classes/mp_idx_manager.rst", "mpom/classes/opt_model.rst", "mpom/functions/artelys_knitro_options.rst", "mpom/functions/convert_constraint_multipliers.rst", "mpom/functions/convert_lin_constraint.rst", "mpom/functions/convert_lin_constraint_multipliers.rst", "mpom/functions/convert_quad_constraint.rst", "mpom/functions/cplex_options.rst", "mpom/functions/glpk_options.rst", "mpom/functions/gurobi_options.rst", "mpom/functions/gurobiver.rst", "mpom/functions/have_feature_bpmpd.rst", "mpom/functions/have_feature_catchme.rst", "mpom/functions/have_feature_clp.rst", "mpom/functions/have_feature_cplex.rst", "mpom/functions/have_feature_evalc.rst", "mpom/functions/have_feature_fmincon.rst", "mpom/functions/have_feature_fmincon_ipm.rst", "mpom/functions/have_feature_fsolve.rst", "mpom/functions/have_feature_glpk.rst", "mpom/functions/have_feature_gurobi.rst", "mpom/functions/have_feature_intlinprog.rst", "mpom/functions/have_feature_ipopt.rst", "mpom/functions/have_feature_ipopt_auxdata.rst", "mpom/functions/have_feature_isequaln.rst", "mpom/functions/have_feature_knitro.rst", "mpom/functions/have_feature_knitromatlab.rst", "mpom/functions/have_feature_ktrlink.rst", "mpom/functions/have_feature_linprog.rst", "mpom/functions/have_feature_linprog_ds.rst", "mpom/functions/have_feature_mosek.rst", "mpom/functions/have_feature_opti_clp.rst", "mpom/functions/have_feature_optim.rst", "mpom/functions/have_feature_optimoptions.rst", "mpom/functions/have_feature_osqp.rst", "mpom/functions/have_feature_quadprog.rst", "mpom/functions/have_feature_quadprog_ls.rst", "mpom/functions/have_feature_sdpt3.rst", "mpom/functions/have_feature_sedumi.rst", "mpom/functions/have_feature_yalmip.rst", "mpom/functions/ipopt_options.rst", "mpom/functions/knitrover.rst", "mpom/functions/miqps_cplex.rst", "mpom/functions/miqps_glpk.rst", "mpom/functions/miqps_gurobi.rst", "mpom/functions/miqps_master.rst", "mpom/functions/miqps_mosek.rst", "mpom/functions/miqps_ot.rst", "mpom/functions/mosek_options.rst", "mpom/functions/mosek_symbcon.rst", "mpom/functions/mpomver.rst", "mpom/functions/mpopt2nleqopt.rst", "mpom/functions/mpopt2nlpopt.rst", "mpom/functions/mpopt2pneopt.rst", "mpom/functions/mpopt2qcqpopt.rst", "mpom/functions/mpopt2qpopt.rst", "mpom/functions/nested_struct_copy.rst", "mpom/functions/nleqs_core.rst", "mpom/functions/nleqs_fd_newton.rst", "mpom/functions/nleqs_fsolve.rst", "mpom/functions/nleqs_gauss_seidel.rst", "mpom/functions/nleqs_master.rst", "mpom/functions/nleqs_master_ex1.rst", "mpom/functions/nleqs_master_ex2.rst", "mpom/functions/nleqs_newton.rst", "mpom/functions/nlp_consfcn.rst", "mpom/functions/nlp_costfcn.rst", "mpom/functions/nlp_hessfcn.rst", "mpom/functions/nlps_fmincon.rst", "mpom/functions/nlps_ipopt.rst", "mpom/functions/nlps_knitro.rst", "mpom/functions/nlps_master.rst", "mpom/functions/nlps_master_ex1.rst", "mpom/functions/nlps_master_ex2.rst", "mpom/functions/osqp_options.rst", "mpom/functions/osqpver.rst", "mpom/functions/pne_callback_default.rst", "mpom/functions/pne_callback_nose.rst", "mpom/functions/pne_callback_target_lam.rst", "mpom/functions/pne_detect_events.rst", "mpom/functions/pne_detected_event.rst", "mpom/functions/pne_event_nose.rst", "mpom/functions/pne_event_target_lam.rst", "mpom/functions/pne_ex1.rst", "mpom/functions/pne_pfcn_arc_len.rst", "mpom/functions/pne_pfcn_natural.rst", "mpom/functions/pne_pfcn_pseudo_arc_len.rst", "mpom/functions/pne_register_callbacks.rst", "mpom/functions/pne_register_events.rst", "mpom/functions/pnes_master.rst", "mpom/functions/qcqp_nlp_consfcn.rst", "mpom/functions/qcqp_nlp_costfcn.rst", "mpom/functions/qcqp_nlp_hessfcn.rst", "mpom/functions/qcqps_gurobi.rst", "mpom/functions/qcqps_knitro.rst", "mpom/functions/qcqps_master.rst", "mpom/functions/qp_ex1.rst", "mpom/functions/qps_bpmpd.rst", "mpom/functions/qps_clp.rst", "mpom/functions/qps_cplex.rst", "mpom/functions/qps_glpk.rst", "mpom/functions/qps_gurobi.rst", "mpom/functions/qps_ipopt.rst", "mpom/functions/qps_knitro.rst", "mpom/functions/qps_master.rst", "mpom/functions/qps_mosek.rst", "mpom/functions/qps_osqp.rst", "mpom/functions/qps_ot.rst", "mpom/functions/t_miqps_master.rst", "mpom/functions/t_nested_struct_copy.rst", "mpom/functions/t_nleqs_master.rst", "mpom/functions/t_nlps_master.rst", "mpom/functions/t_om_solve_leqs.rst", "mpom/functions/t_om_solve_miqps.rst", "mpom/functions/t_om_solve_nleqs.rst", "mpom/functions/t_om_solve_nlps.rst", "mpom/functions/t_om_solve_pne.rst", "mpom/functions/t_om_solve_qcqps.rst", "mpom/functions/t_om_solve_qps.rst", "mpom/functions/t_opt_model.rst", "mpom/functions/t_pnes_master.rst", "mpom/functions/t_qcqps_master.rst", "mpom/functions/t_qps_master.rst", "mpom/functions/test_mp_opt_model.rst", "mpom/index.rst", "mpom/reference.rst", "mptest/functions/have_feature.rst", "mptest/functions/have_feature_matlab.rst", "mptest/functions/have_feature_octave.rst", "mptest/functions/mptestver.rst", "mptest/functions/t_begin.rst", "mptest/functions/t_end.rst", "mptest/functions/t_file_match.rst", "mptest/functions/t_have_feature.rst", "mptest/functions/t_is.rst", "mptest/functions/t_ok.rst", "mptest/functions/t_run_tests.rst", "mptest/functions/t_skip.rst", "mptest/functions/t_str_match.rst", "mptest/functions/t_test_fcns.rst", "mptest/functions/test_mptest.rst", "mptest/index.rst", "mptest/reference.rst", "ref-manual/classes/index.rst", "ref-manual/classes/mp/NODE_TYPE.rst", "ref-manual/classes/mp/cost_table.rst", "ref-manual/classes/mp/cost_table_utils.rst", "ref-manual/classes/mp/data_model.rst", "ref-manual/classes/mp/data_model_cpf.rst", "ref-manual/classes/mp/data_model_opf.rst", "ref-manual/classes/mp/dm_converter.rst", "ref-manual/classes/mp/dm_converter_mpc2.rst", "ref-manual/classes/mp/dm_converter_mpc2_legacy.rst", "ref-manual/classes/mp/dm_element.rst", "ref-manual/classes/mp/dmc_element.rst", "ref-manual/classes/mp/dmce_branch_mpc2.rst", "ref-manual/classes/mp/dmce_bus3p_mpc2.rst", "ref-manual/classes/mp/dmce_bus_mpc2.rst", "ref-manual/classes/mp/dmce_buslink_mpc2.rst", "ref-manual/classes/mp/dmce_gen3p_mpc2.rst", "ref-manual/classes/mp/dmce_gen_mpc2.rst", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2.rst", "ref-manual/classes/mp/dmce_line3p_mpc2.rst", "ref-manual/classes/mp/dmce_load3p_mpc2.rst", "ref-manual/classes/mp/dmce_load_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_gen_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_zone_mpc2.rst", "ref-manual/classes/mp/dmce_shunt_mpc2.rst", "ref-manual/classes/mp/dmce_xfmr3p_mpc2.rst", "ref-manual/classes/mp/dme_branch.rst", "ref-manual/classes/mp/dme_branch_opf.rst", "ref-manual/classes/mp/dme_bus.rst", "ref-manual/classes/mp/dme_bus3p.rst", "ref-manual/classes/mp/dme_bus3p_opf.rst", "ref-manual/classes/mp/dme_bus_opf.rst", "ref-manual/classes/mp/dme_buslink.rst", "ref-manual/classes/mp/dme_buslink_opf.rst", "ref-manual/classes/mp/dme_gen.rst", "ref-manual/classes/mp/dme_gen3p.rst", "ref-manual/classes/mp/dme_gen3p_opf.rst", "ref-manual/classes/mp/dme_gen_opf.rst", "ref-manual/classes/mp/dme_legacy_dcline.rst", "ref-manual/classes/mp/dme_legacy_dcline_opf.rst", "ref-manual/classes/mp/dme_line3p.rst", "ref-manual/classes/mp/dme_line3p_opf.rst", "ref-manual/classes/mp/dme_load.rst", "ref-manual/classes/mp/dme_load3p.rst", "ref-manual/classes/mp/dme_load3p_opf.rst", "ref-manual/classes/mp/dme_load_cpf.rst", "ref-manual/classes/mp/dme_load_opf.rst", "ref-manual/classes/mp/dme_reserve_gen.rst", "ref-manual/classes/mp/dme_reserve_zone.rst", "ref-manual/classes/mp/dme_shared_opf.rst", "ref-manual/classes/mp/dme_shunt.rst", "ref-manual/classes/mp/dme_shunt_cpf.rst", "ref-manual/classes/mp/dme_shunt_opf.rst", "ref-manual/classes/mp/dme_xfmr3p.rst", "ref-manual/classes/mp/dme_xfmr3p_opf.rst", "ref-manual/classes/mp/element_container.rst", "ref-manual/classes/mp/extension.rst", "ref-manual/classes/mp/form.rst", "ref-manual/classes/mp/form_ac.rst", "ref-manual/classes/mp/form_acc.rst", "ref-manual/classes/mp/form_acp.rst", "ref-manual/classes/mp/form_dc.rst", "ref-manual/classes/mp/mapped_array.rst", "ref-manual/classes/mp/math_model.rst", "ref-manual/classes/mp/math_model_cpf_acc.rst", "ref-manual/classes/mp/math_model_cpf_acci.rst", "ref-manual/classes/mp/math_model_cpf_accs.rst", "ref-manual/classes/mp/math_model_cpf_acp.rst", "ref-manual/classes/mp/math_model_cpf_acpi.rst", "ref-manual/classes/mp/math_model_cpf_acps.rst", "ref-manual/classes/mp/math_model_opf.rst", "ref-manual/classes/mp/math_model_opf_ac.rst", "ref-manual/classes/mp/math_model_opf_acc.rst", "ref-manual/classes/mp/math_model_opf_acci.rst", "ref-manual/classes/mp/math_model_opf_acci_legacy.rst", "ref-manual/classes/mp/math_model_opf_accs.rst", "ref-manual/classes/mp/math_model_opf_accs_legacy.rst", "ref-manual/classes/mp/math_model_opf_acp.rst", "ref-manual/classes/mp/math_model_opf_acpi.rst", "ref-manual/classes/mp/math_model_opf_acpi_legacy.rst", "ref-manual/classes/mp/math_model_opf_acps.rst", "ref-manual/classes/mp/math_model_opf_acps_legacy.rst", "ref-manual/classes/mp/math_model_opf_dc.rst", "ref-manual/classes/mp/math_model_opf_dc_legacy.rst", "ref-manual/classes/mp/math_model_pf.rst", "ref-manual/classes/mp/math_model_pf_ac.rst", "ref-manual/classes/mp/math_model_pf_acci.rst", "ref-manual/classes/mp/math_model_pf_accs.rst", "ref-manual/classes/mp/math_model_pf_acpi.rst", "ref-manual/classes/mp/math_model_pf_acps.rst", "ref-manual/classes/mp/math_model_pf_dc.rst", "ref-manual/classes/mp/mm_element.rst", "ref-manual/classes/mp/mm_shared_opf_legacy.rst", "ref-manual/classes/mp/mm_shared_pfcpf.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acc.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acci.rst", "ref-manual/classes/mp/mm_shared_pfcpf_accs.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acp.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acpi.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acps.rst", "ref-manual/classes/mp/mm_shared_pfcpf_dc.rst", "ref-manual/classes/mp/mme_branch.rst", "ref-manual/classes/mp/mme_branch_opf.rst", "ref-manual/classes/mp/mme_branch_opf_ac.rst", "ref-manual/classes/mp/mme_branch_opf_acc.rst", "ref-manual/classes/mp/mme_branch_opf_acp.rst", "ref-manual/classes/mp/mme_branch_opf_dc.rst", "ref-manual/classes/mp/mme_branch_pf_ac.rst", "ref-manual/classes/mp/mme_branch_pf_dc.rst", "ref-manual/classes/mp/mme_bus.rst", "ref-manual/classes/mp/mme_bus3p.rst", "ref-manual/classes/mp/mme_bus3p_opf_acc.rst", "ref-manual/classes/mp/mme_bus3p_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_ac.rst", "ref-manual/classes/mp/mme_bus_opf_acc.rst", "ref-manual/classes/mp/mme_bus_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_dc.rst", "ref-manual/classes/mp/mme_bus_pf_ac.rst", "ref-manual/classes/mp/mme_bus_pf_dc.rst", "ref-manual/classes/mp/mme_buslink.rst", "ref-manual/classes/mp/mme_buslink_opf.rst", "ref-manual/classes/mp/mme_buslink_opf_acc.rst", "ref-manual/classes/mp/mme_buslink_opf_acp.rst", "ref-manual/classes/mp/mme_buslink_pf_ac.rst", "ref-manual/classes/mp/mme_buslink_pf_acc.rst", "ref-manual/classes/mp/mme_buslink_pf_acp.rst", "ref-manual/classes/mp/mme_gen.rst", "ref-manual/classes/mp/mme_gen3p.rst", "ref-manual/classes/mp/mme_gen3p_opf.rst", "ref-manual/classes/mp/mme_gen_opf.rst", "ref-manual/classes/mp/mme_gen_opf_ac.rst", "ref-manual/classes/mp/mme_gen_opf_ac_oval.rst", "ref-manual/classes/mp/mme_gen_opf_dc.rst", "ref-manual/classes/mp/mme_gen_pf_ac.rst", "ref-manual/classes/mp/mme_gen_pf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc.rst", "ref-manual/classes/mp/mme_line3p.rst", "ref-manual/classes/mp/mme_line3p_opf.rst", "ref-manual/classes/mp/mme_load.rst", "ref-manual/classes/mp/mme_load_cpf.rst", "ref-manual/classes/mp/mme_load_pf_ac.rst", "ref-manual/classes/mp/mme_load_pf_dc.rst", "ref-manual/classes/mp/mme_reserve_gen.rst", "ref-manual/classes/mp/mme_reserve_zone.rst", "ref-manual/classes/mp/mme_shunt.rst", "ref-manual/classes/mp/mme_shunt_cpf.rst", "ref-manual/classes/mp/mme_shunt_pf_ac.rst", "ref-manual/classes/mp/mme_shunt_pf_dc.rst", "ref-manual/classes/mp/mme_xfmr3p.rst", "ref-manual/classes/mp/mme_xfmr3p_opf.rst", "ref-manual/classes/mp/net_model.rst", "ref-manual/classes/mp/net_model_ac.rst", "ref-manual/classes/mp/net_model_acc.rst", "ref-manual/classes/mp/net_model_acp.rst", "ref-manual/classes/mp/net_model_dc.rst", "ref-manual/classes/mp/nm_element.rst", "ref-manual/classes/mp/nme_branch.rst", "ref-manual/classes/mp/nme_branch_ac.rst", "ref-manual/classes/mp/nme_branch_acc.rst", "ref-manual/classes/mp/nme_branch_acp.rst", "ref-manual/classes/mp/nme_branch_dc.rst", "ref-manual/classes/mp/nme_bus.rst", "ref-manual/classes/mp/nme_bus3p.rst", "ref-manual/classes/mp/nme_bus3p_acc.rst", "ref-manual/classes/mp/nme_bus3p_acp.rst", "ref-manual/classes/mp/nme_bus_acc.rst", "ref-manual/classes/mp/nme_bus_acp.rst", "ref-manual/classes/mp/nme_bus_dc.rst", "ref-manual/classes/mp/nme_buslink.rst", "ref-manual/classes/mp/nme_buslink_acc.rst", "ref-manual/classes/mp/nme_buslink_acp.rst", "ref-manual/classes/mp/nme_gen.rst", "ref-manual/classes/mp/nme_gen3p.rst", "ref-manual/classes/mp/nme_gen3p_acc.rst", "ref-manual/classes/mp/nme_gen3p_acp.rst", "ref-manual/classes/mp/nme_gen_ac.rst", "ref-manual/classes/mp/nme_gen_acc.rst", "ref-manual/classes/mp/nme_gen_acp.rst", "ref-manual/classes/mp/nme_gen_dc.rst", "ref-manual/classes/mp/nme_legacy_dcline.rst", "ref-manual/classes/mp/nme_legacy_dcline_ac.rst", "ref-manual/classes/mp/nme_legacy_dcline_acc.rst", "ref-manual/classes/mp/nme_legacy_dcline_acp.rst", "ref-manual/classes/mp/nme_legacy_dcline_dc.rst", "ref-manual/classes/mp/nme_line3p.rst", "ref-manual/classes/mp/nme_load.rst", "ref-manual/classes/mp/nme_load3p.rst", "ref-manual/classes/mp/nme_load_ac.rst", "ref-manual/classes/mp/nme_load_acc.rst", "ref-manual/classes/mp/nme_load_acp.rst", "ref-manual/classes/mp/nme_load_dc.rst", "ref-manual/classes/mp/nme_shunt.rst", "ref-manual/classes/mp/nme_shunt_ac.rst", "ref-manual/classes/mp/nme_shunt_acc.rst", "ref-manual/classes/mp/nme_shunt_acp.rst", "ref-manual/classes/mp/nme_shunt_dc.rst", "ref-manual/classes/mp/nme_xfmr3p.rst", "ref-manual/classes/mp/sm_legacy_cost.rst", "ref-manual/classes/mp/task.rst", "ref-manual/classes/mp/task_cpf.rst", "ref-manual/classes/mp/task_cpf_legacy.rst", "ref-manual/classes/mp/task_opf.rst", "ref-manual/classes/mp/task_opf_legacy.rst", "ref-manual/classes/mp/task_pf.rst", "ref-manual/classes/mp/task_pf_legacy.rst", "ref-manual/classes/mp/task_shared_legacy.rst", "ref-manual/classes/mp/xt_3p.rst", "ref-manual/classes/mp/xt_legacy_dcline.rst", "ref-manual/classes/mp/xt_oval_cap_curve.rst", "ref-manual/classes/mp/xt_reserves.rst", "ref-manual/classes/mp_table.rst", "ref-manual/classes/mp_table_subclass.rst", "ref-manual/functions/index.rst", "ref-manual/functions/install_matpower.rst", "ref-manual/functions/mp/load_dm.rst", "ref-manual/functions/mp_table_class.rst", "ref-manual/functions/run_cpf.rst", "ref-manual/functions/run_mp.rst", "ref-manual/functions/run_opf.rst", "ref-manual/functions/run_pf.rst", "ref-manual/index.rst", "ref-manual/introduction.rst", "ref-manual/legacy/classes/opf_model.rst", "ref-manual/legacy/functions/add_userfcn.rst", "ref-manual/legacy/functions/apply_changes.rst", "ref-manual/legacy/functions/bustypes.rst", "ref-manual/legacy/functions/calc_branch_angle.rst", "ref-manual/legacy/functions/calc_v_i_sum.rst", "ref-manual/legacy/functions/calc_v_pq_sum.rst", "ref-manual/legacy/functions/calc_v_y_sum.rst", "ref-manual/legacy/functions/case_info.rst", "ref-manual/legacy/functions/caseformat.rst", "ref-manual/legacy/functions/cdf2mpc.rst", "ref-manual/legacy/functions/compare_case.rst", "ref-manual/legacy/functions/connected_components.rst", "ref-manual/legacy/functions/cpf_corrector.rst", "ref-manual/legacy/functions/cpf_current_mpc.rst", "ref-manual/legacy/functions/cpf_default_callback.rst", "ref-manual/legacy/functions/cpf_detect_events.rst", "ref-manual/legacy/functions/cpf_flim_event.rst", "ref-manual/legacy/functions/cpf_flim_event_cb.rst", "ref-manual/legacy/functions/cpf_nose_event.rst", "ref-manual/legacy/functions/cpf_nose_event_cb.rst", "ref-manual/legacy/functions/cpf_p.rst", "ref-manual/legacy/functions/cpf_p_jac.rst", "ref-manual/legacy/functions/cpf_plim_event.rst", "ref-manual/legacy/functions/cpf_plim_event_cb.rst", "ref-manual/legacy/functions/cpf_predictor.rst", "ref-manual/legacy/functions/cpf_qlim_event.rst", "ref-manual/legacy/functions/cpf_qlim_event_cb.rst", "ref-manual/legacy/functions/cpf_register_callback.rst", "ref-manual/legacy/functions/cpf_register_event.rst", "ref-manual/legacy/functions/cpf_tangent.rst", "ref-manual/legacy/functions/cpf_target_lam_event.rst", "ref-manual/legacy/functions/cpf_target_lam_event_cb.rst", "ref-manual/legacy/functions/cpf_vlim_event.rst", "ref-manual/legacy/functions/cpf_vlim_event_cb.rst", "ref-manual/legacy/functions/d2Abr_dV2.rst", "ref-manual/legacy/functions/d2Ibr_dV2.rst", "ref-manual/legacy/functions/d2Imis_dV2.rst", "ref-manual/legacy/functions/d2Imis_dVdSg.rst", "ref-manual/legacy/functions/d2Sbr_dV2.rst", "ref-manual/legacy/functions/d2Sbus_dV2.rst", "ref-manual/legacy/functions/dAbr_dV.rst", "ref-manual/legacy/functions/dIbr_dV.rst", "ref-manual/legacy/functions/dImis_dV.rst", "ref-manual/legacy/functions/dSbr_dV.rst", "ref-manual/legacy/functions/dSbus_dV.rst", "ref-manual/legacy/functions/dcopf.rst", "ref-manual/legacy/functions/dcopf_solver.rst", "ref-manual/legacy/functions/dcpf.rst", "ref-manual/legacy/functions/define_constants.rst", "ref-manual/legacy/functions/e2i_data.rst", "ref-manual/legacy/functions/e2i_field.rst", "ref-manual/legacy/functions/ext2int.rst", "ref-manual/legacy/functions/extract_islands.rst", "ref-manual/legacy/functions/fdpf.rst", "ref-manual/legacy/functions/feval_w_path.rst", "ref-manual/legacy/functions/find_bridges.rst", "ref-manual/legacy/functions/find_islands.rst", "ref-manual/legacy/functions/fmincopf.rst", "ref-manual/legacy/functions/gausspf.rst", "ref-manual/legacy/functions/genfuels.rst", "ref-manual/legacy/functions/gentypes.rst", "ref-manual/legacy/functions/get_losses.rst", "ref-manual/legacy/functions/get_reorder.rst", "ref-manual/legacy/functions/hasPQcap.rst", "ref-manual/legacy/functions/have_feature_e4st.rst", "ref-manual/legacy/functions/have_feature_minopf.rst", "ref-manual/legacy/functions/have_feature_most.rst", "ref-manual/legacy/functions/have_feature_mp_core.rst", "ref-manual/legacy/functions/have_feature_pdipmopf.rst", "ref-manual/legacy/functions/have_feature_regexp_split.rst", "ref-manual/legacy/functions/have_feature_scpdipmopf.rst", "ref-manual/legacy/functions/have_feature_sdp_pf.rst", "ref-manual/legacy/functions/have_feature_smartmarket.rst", "ref-manual/legacy/functions/have_feature_syngrid.rst", "ref-manual/legacy/functions/have_feature_table.rst", "ref-manual/legacy/functions/have_feature_tralmopf.rst", "ref-manual/legacy/functions/i2e_data.rst", "ref-manual/legacy/functions/i2e_field.rst", "ref-manual/legacy/functions/idx_brch.rst", "ref-manual/legacy/functions/idx_bus.rst", "ref-manual/legacy/functions/idx_cost.rst", "ref-manual/legacy/functions/idx_ct.rst", "ref-manual/legacy/functions/idx_dcline.rst", "ref-manual/legacy/functions/idx_gen.rst", "ref-manual/legacy/functions/int2ext.rst", "ref-manual/legacy/functions/isload.rst", "ref-manual/legacy/functions/load2disp.rst", "ref-manual/legacy/functions/loadcase.rst", "ref-manual/legacy/functions/loadshed.rst", "ref-manual/legacy/functions/makeAang.rst", "ref-manual/legacy/functions/makeApq.rst", "ref-manual/legacy/functions/makeAvl.rst", "ref-manual/legacy/functions/makeAy.rst", "ref-manual/legacy/functions/makeB.rst", "ref-manual/legacy/functions/makeBdc.rst", "ref-manual/legacy/functions/makeJac.rst", "ref-manual/legacy/functions/makeLODF.rst", "ref-manual/legacy/functions/makePTDF.rst", "ref-manual/legacy/functions/makeSbus.rst", "ref-manual/legacy/functions/makeSdzip.rst", "ref-manual/legacy/functions/makeYbus.rst", "ref-manual/legacy/functions/make_vcorr.rst", "ref-manual/legacy/functions/make_zpv.rst", "ref-manual/legacy/functions/margcost.rst", "ref-manual/legacy/functions/miqps_matpower.rst", "ref-manual/legacy/functions/modcost.rst", "ref-manual/legacy/functions/mpoption.rst", "ref-manual/legacy/functions/mpoption_info_clp.rst", "ref-manual/legacy/functions/mpoption_info_cplex.rst", "ref-manual/legacy/functions/mpoption_info_fmincon.rst", "ref-manual/legacy/functions/mpoption_info_glpk.rst", "ref-manual/legacy/functions/mpoption_info_gurobi.rst", "ref-manual/legacy/functions/mpoption_info_intlinprog.rst", "ref-manual/legacy/functions/mpoption_info_ipopt.rst", "ref-manual/legacy/functions/mpoption_info_knitro.rst", "ref-manual/legacy/functions/mpoption_info_linprog.rst", "ref-manual/legacy/functions/mpoption_info_mips.rst", "ref-manual/legacy/functions/mpoption_info_mosek.rst", "ref-manual/legacy/functions/mpoption_info_osqp.rst", "ref-manual/legacy/functions/mpoption_info_quadprog.rst", "ref-manual/legacy/functions/mpoption_old.rst", "ref-manual/legacy/functions/mpver.rst", "ref-manual/legacy/functions/newtonpf.rst", "ref-manual/legacy/functions/newtonpf_I_cart.rst", "ref-manual/legacy/functions/newtonpf_I_hybrid.rst", "ref-manual/legacy/functions/newtonpf_I_polar.rst", "ref-manual/legacy/functions/newtonpf_S_cart.rst", "ref-manual/legacy/functions/newtonpf_S_hybrid.rst", "ref-manual/legacy/functions/nlpopf_solver.rst", "ref-manual/legacy/functions/opf.rst", "ref-manual/legacy/functions/opf_args.rst", "ref-manual/legacy/functions/opf_branch_ang_fcn.rst", "ref-manual/legacy/functions/opf_branch_ang_hess.rst", "ref-manual/legacy/functions/opf_branch_flow_fcn.rst", "ref-manual/legacy/functions/opf_branch_flow_hess.rst", "ref-manual/legacy/functions/opf_current_balance_fcn.rst", "ref-manual/legacy/functions/opf_current_balance_hess.rst", "ref-manual/legacy/functions/opf_execute.rst", "ref-manual/legacy/functions/opf_gen_cost_fcn.rst", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn.rst", "ref-manual/legacy/functions/opf_nle_fcn1.rst", "ref-manual/legacy/functions/opf_nle_hess1.rst", "ref-manual/legacy/functions/opf_power_balance_fcn.rst", "ref-manual/legacy/functions/opf_power_balance_hess.rst", "ref-manual/legacy/functions/opf_setup.rst", "ref-manual/legacy/functions/opf_veq_fcn.rst", "ref-manual/legacy/functions/opf_veq_hess.rst", "ref-manual/legacy/functions/opf_vlim_fcn.rst", "ref-manual/legacy/functions/opf_vlim_hess.rst", "ref-manual/legacy/functions/opf_vref_fcn.rst", "ref-manual/legacy/functions/opf_vref_hess.rst", "ref-manual/legacy/functions/order_radial.rst", "ref-manual/legacy/functions/pfsoln.rst", "ref-manual/legacy/functions/poly2pwl.rst", "ref-manual/legacy/functions/polycost.rst", "ref-manual/legacy/functions/pqcost.rst", "ref-manual/legacy/functions/printpf.rst", "ref-manual/legacy/functions/psse2mpc.rst", "ref-manual/legacy/functions/psse_convert.rst", "ref-manual/legacy/functions/psse_convert_hvdc.rst", "ref-manual/legacy/functions/psse_convert_xfmr.rst", "ref-manual/legacy/functions/psse_parse.rst", "ref-manual/legacy/functions/psse_parse_line.rst", "ref-manual/legacy/functions/psse_parse_section.rst", "ref-manual/legacy/functions/psse_read.rst", "ref-manual/legacy/functions/qps_matpower.rst", "ref-manual/legacy/functions/radial_pf.rst", "ref-manual/legacy/functions/remove_userfcn.rst", "ref-manual/legacy/functions/run_userfcn.rst", "ref-manual/legacy/functions/runcpf.rst", "ref-manual/legacy/functions/rundcopf.rst", "ref-manual/legacy/functions/rundcpf.rst", "ref-manual/legacy/functions/runduopf.rst", "ref-manual/legacy/functions/runopf.rst", "ref-manual/legacy/functions/runopf_w_res.rst", "ref-manual/legacy/functions/runpf.rst", "ref-manual/legacy/functions/runuopf.rst", "ref-manual/legacy/functions/save2psse.rst", "ref-manual/legacy/functions/savecase.rst", "ref-manual/legacy/functions/savechgtab.rst", "ref-manual/legacy/functions/scale_load.rst", "ref-manual/legacy/functions/set_reorder.rst", "ref-manual/legacy/functions/t_apply_changes.rst", "ref-manual/legacy/functions/t_auction_case.rst", "ref-manual/legacy/functions/t_auction_minopf.rst", "ref-manual/legacy/functions/t_auction_mips.rst", "ref-manual/legacy/functions/t_auction_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_case30_userfcns.rst", "ref-manual/legacy/functions/t_case9_dcline.rst", "ref-manual/legacy/functions/t_case9_opf.rst", "ref-manual/legacy/functions/t_case9_opfv2.rst", "ref-manual/legacy/functions/t_case9_pf.rst", "ref-manual/legacy/functions/t_case9_pfv2.rst", "ref-manual/legacy/functions/t_case9_save2psse.rst", "ref-manual/legacy/functions/t_case_ext.rst", "ref-manual/legacy/functions/t_case_int.rst", "ref-manual/legacy/functions/t_chgtab.rst", "ref-manual/legacy/functions/t_cpf.rst", "ref-manual/legacy/functions/t_cpf_cb1.rst", "ref-manual/legacy/functions/t_cpf_cb2.rst", "ref-manual/legacy/functions/t_dcline.rst", "ref-manual/legacy/functions/t_ext2int2ext.rst", "ref-manual/legacy/functions/t_feval_w_path.rst", "ref-manual/legacy/functions/t_get_losses.rst", "ref-manual/legacy/functions/t_hasPQcap.rst", "ref-manual/legacy/functions/t_hessian.rst", "ref-manual/legacy/functions/t_islands.rst", "ref-manual/legacy/functions/t_jacobian.rst", "ref-manual/legacy/functions/t_load2disp.rst", "ref-manual/legacy/functions/t_loadcase.rst", "ref-manual/legacy/functions/t_makeLODF.rst", "ref-manual/legacy/functions/t_makePTDF.rst", "ref-manual/legacy/functions/t_margcost.rst", "ref-manual/legacy/functions/t_miqps_matpower.rst", "ref-manual/legacy/functions/t_modcost.rst", "ref-manual/legacy/functions/t_mpoption.rst", "ref-manual/legacy/functions/t_mpoption_ov.rst", "ref-manual/legacy/functions/t_off2case.rst", "ref-manual/legacy/functions/t_opf_dc_bpmpd.rst", "ref-manual/legacy/functions/t_opf_dc_clp.rst", "ref-manual/legacy/functions/t_opf_dc_cplex.rst", "ref-manual/legacy/functions/t_opf_dc_default.rst", "ref-manual/legacy/functions/t_opf_dc_glpk.rst", "ref-manual/legacy/functions/t_opf_dc_gurobi.rst", "ref-manual/legacy/functions/t_opf_dc_ipopt.rst", "ref-manual/legacy/functions/t_opf_dc_mips.rst", "ref-manual/legacy/functions/t_opf_dc_mips_sc.rst", "ref-manual/legacy/functions/t_opf_dc_mosek.rst", "ref-manual/legacy/functions/t_opf_dc_osqp.rst", "ref-manual/legacy/functions/t_opf_dc_ot.rst", "ref-manual/legacy/functions/t_opf_default.rst", "ref-manual/legacy/functions/t_opf_fmincon.rst", "ref-manual/legacy/functions/t_opf_ipopt.rst", "ref-manual/legacy/functions/t_opf_knitro.rst", "ref-manual/legacy/functions/t_opf_minopf.rst", "ref-manual/legacy/functions/t_opf_mips.rst", "ref-manual/legacy/functions/t_opf_model.rst", "ref-manual/legacy/functions/t_opf_softlims.rst", "ref-manual/legacy/functions/t_opf_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_tralm.rst", "ref-manual/legacy/functions/t_opf_userfcns.rst", "ref-manual/legacy/functions/t_pf_ac.rst", "ref-manual/legacy/functions/t_pf_dc.rst", "ref-manual/legacy/functions/t_pf_radial.rst", "ref-manual/legacy/functions/t_printpf.rst", "ref-manual/legacy/functions/t_psse.rst", "ref-manual/legacy/functions/t_qps_matpower.rst", "ref-manual/legacy/functions/t_runmarket.rst", "ref-manual/legacy/functions/t_runopf_w_res.rst", "ref-manual/legacy/functions/t_scale_load.rst", "ref-manual/legacy/functions/t_total_load.rst", "ref-manual/legacy/functions/t_totcost.rst", "ref-manual/legacy/functions/t_vdep_load.rst", "ref-manual/legacy/functions/toggle_dcline.rst", "ref-manual/legacy/functions/toggle_iflims.rst", "ref-manual/legacy/functions/toggle_reserves.rst", "ref-manual/legacy/functions/toggle_softlims.rst", "ref-manual/legacy/functions/total_load.rst", "ref-manual/legacy/functions/totcost.rst", "ref-manual/legacy/functions/uopf.rst", "ref-manual/legacy/functions/update_mupq.rst", "ref-manual/legacy/functions/zgausspf.rst", "ref-manual/legacy/index.rst", "ref-manual/previous.rst", "ref-manual/tests/index.rst", "ref-manual/tests/mp_foo_table.rst", "ref-manual/tests/t_case3p_a.rst", "ref-manual/tests/t_case3p_b.rst", "ref-manual/tests/t_case3p_c.rst", "ref-manual/tests/t_case3p_d.rst", "ref-manual/tests/t_case3p_e.rst", "ref-manual/tests/t_case3p_f.rst", "ref-manual/tests/t_case3p_g.rst", "ref-manual/tests/t_case3p_h.rst", "ref-manual/tests/t_case9_gizmo.rst", "ref-manual/tests/t_dmc_element.rst", "ref-manual/tests/t_mp_data_model.rst", "ref-manual/tests/t_mp_dm_converter_mpc2.rst", "ref-manual/tests/t_mp_mapped_array.rst", "ref-manual/tests/t_mp_table.rst", "ref-manual/tests/t_mpxt_legacy_dcline.rst", "ref-manual/tests/t_mpxt_reserves.rst", "ref-manual/tests/t_nm_element.rst", "ref-manual/tests/t_node_test.rst", "ref-manual/tests/t_port_inj_current_acc.rst", "ref-manual/tests/t_port_inj_current_acp.rst", "ref-manual/tests/t_port_inj_power_acc.rst", "ref-manual/tests/t_port_inj_power_acp.rst", "ref-manual/tests/t_pretty_print.rst", "ref-manual/tests/t_run_mp.rst", "ref-manual/tests/t_run_mp_3p.rst", "ref-manual/tests/t_run_opf_default.rst", "ref-manual/tests/test_matpower.rst", "tech-notes.rst", "users-manual/index.rst"], "titles": ["<span class=\"section-number\">10. </span>Acknowledgments", "<span class=\"section-number\">3. </span>Architecture Overview", "<span class=\"section-number\">9. </span>Customizing <span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span>", "<span class=\"section-number\">5. </span>Data Model Object", "<span class=\"section-number\">6. </span>Data Model Converter Object", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Developer\u2019s Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">8. </span>Mathematical Model Object", "<span class=\"section-number\">7. </span>Network Model Object", "<span class=\"section-number\">2. </span>Notation", "<span class=\"section-number\">11. </span>References", "<span class=\"section-number\">4. </span>Task Object", "How to Add an OPF Constraint", "How to Build the Documentation", "generate_autodoc_stubs", "generate_matpower_autodoc", "generate_source_symlinks", "How to Create a New Element Type", "How to Create an Extension", "A Test Gizmo Element Type", "How to Run a Three-Phase Power Flow", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Documentation", "have_feature_lu_vec", "have_feature_pardiso", "have_feature_pardiso_legacy", "have_feature_pardiso_object", "mips", "mips_example1", "mips_example2", "mipsver", "mplinsolve", "qps_mips", "t_mips", "t_mips_pardiso", "t_mplinsolve", "t_qps_mips", "test_mips", "MIPS User\u2019s Manual", "Reference", "addgen2mpc", "addstorage", "addwind", "apply_profile", "c118swf", "ex_case3a", "ex_case3b", "ex_contab", "ex_load_profile", "ex_storage", "ex_transmat", "ex_wind", "ex_wind_profile", "ex_wind_profile_d", "ex_wind_uc", "ex_xgd", "ex_xgd_ramp", "ex_xgd_res", "ex_xgd_uc", "filter_ramp_transitions", "getprofiles", "idx_profile", "loadgenericdata", "loadmd", "loadstoragedata", "loadxgendata", "md_init", "most", "most_ex1_ed", "most_ex2_dcopf", "most_ex3_dcopf_w_uc", "most_ex4_dcopf_ss", "most_ex5_mpopf", "most_ex6_uc", "most_ex7_suc", "most_summary", "mostver", "mpoption_info_most", "plot_gen", "plot_storage", "plot_uc", "plot_uc_data", "t_case30_most", "t_case3_most", "t_case_tlmp", "t_case_tlmp_storage", "t_most_30b_1_1_0", "t_most_30b_1_1_0_uc", "t_most_30b_1_1_17", "t_most_30b_3_1_0", "t_most_30b_3_1_17", "t_most_3b_1_1_0", "t_most_3b_1_1_2", "t_most_3b_3_1_0", "t_most_3b_3_1_2", "t_most_fixed_res", "t_most_mpopf", "t_most_sp", "t_most_spuc", "t_most_suc", "t_most_tlmp", "t_most_uc", "t_most_w_ds", "test_most", "uniformwindprofile", "MOST User\u2019s Manual", "Reference", "mp.set_manager", "mp.set_manager_opt_model", "mp.sm_lin_constraint", "mp.sm_nln_constraint", "mp.sm_nln_cost", "mp.sm_quad_constraint", "mp.sm_quad_cost", "mp.sm_variable", "mp_idx_manager", "opt_model", "artelys_knitro_options", "convert_constraint_multipliers", "convert_lin_constraint", "convert_lin_constraint_multipliers", "convert_quad_constraint", "cplex_options", "glpk_options", "gurobi_options", "gurobiver", "have_feature_bpmpd", "have_feature_catchme", "have_feature_clp", "have_feature_cplex", "have_feature_evalc", "have_feature_fmincon", "have_feature_fmincon_ipm", "have_feature_fsolve", "have_feature_glpk", "have_feature_gurobi", "have_feature_intlinprog", "have_feature_ipopt", "have_feature_ipopt_auxdata", "have_feature_isequaln", "have_feature_knitro", "have_feature_knitromatlab", "have_feature_ktrlink", "have_feature_linprog", "have_feature_linprog_ds", "have_feature_mosek", "have_feature_opti_clp", "have_feature_optim", "have_feature_optimoptions", "have_feature_osqp", "have_feature_quadprog", "have_feature_quadprog_ls", "have_feature_sdpt3", "have_feature_sedumi", "have_feature_yalmip", "ipopt_options", "knitrover", "miqps_cplex", "miqps_glpk", "miqps_gurobi", "miqps_master", "miqps_mosek", "miqps_ot", "mosek_options", "mosek_symbcon", "mpomver", "mpopt2nleqopt", "mpopt2nlpopt", "mpopt2pneopt", "mpopt2qcqpopt", "mpopt2qpopt", "nested_struct_copy", "nleqs_core", "nleqs_fd_newton", "nleqs_fsolve", "nleqs_gauss_seidel", "nleqs_master", "nleqs_master_ex1", "nleqs_master_ex2", "nleqs_newton", "nlp_consfcn", "nlp_costfcn", "nlp_hessfcn", "nlps_fmincon", "nlps_ipopt", "nlps_knitro", "nlps_master", "nlps_master_ex1", "nlps_master_ex2", "osqp_options", "osqpver", "pne_callback_default", "pne_callback_nose", "pne_callback_target_lam", "pne_detect_events", "pne_detected_event", "pne_event_nose", "pne_event_target_lam", "pne_ex1", "pne_pfcn_arc_len", "pne_pfcn_natural", "pne_pfcn_pseudo_arc_len", "pne_register_callbacks", "pne_register_events", "pnes_master", "qcqp_nlp_consfcn", "qcqp_nlp_costfcn", "qcqp_nlp_hessfcn", "qcqps_gurobi", "qcqps_knitro", "qcqps_master", "qp_ex1", "qps_bpmpd", "qps_clp", "qps_cplex", "qps_glpk", "qps_gurobi", "qps_ipopt", "qps_knitro", "qps_master", "qps_mosek", "qps_osqp", "qps_ot", "t_miqps_master", "t_nested_struct_copy", "t_nleqs_master", "t_nlps_master", "t_om_solve_leqs", "t_om_solve_miqps", "t_om_solve_nleqs", "t_om_solve_nlps", "t_om_solve_pne", "t_om_solve_qcqps", "t_om_solve_qps", "t_opt_model", "t_pnes_master", "t_qcqps_master", "t_qps_master", "test_mp_opt_model", "<span class=\"raw-html\">MP-Opt-Model</span> User\u2019s Manual", "Reference", "have_feature", "have_feature_matlab", "have_feature_octave", "mptestver", "t_begin", "t_end", "t_file_match", "t_have_feature", "t_is", "t_ok", "t_run_tests", "t_skip", "t_str_match", "t_test_fcns", "test_mptest", "MP-Test User\u2019s Manual", "Reference", "<span class=\"section-number\">3. </span>Classes", "mp.NODE_TYPE", "mp.cost_table", "mp.cost_table_utils", "mp.data_model", "mp.data_model_cpf", "mp.data_model_opf", "mp.dm_converter", "mp.dm_converter_mpc2", "mp.dm_converter_mpc2_legacy", "mp.dm_element", "mp.dmc_element", "mp.dmce_branch_mpc2", "mp.dmce_bus3p_mpc2", "mp.dmce_bus_mpc2", "mp.dmce_buslink_mpc2", "mp.dmce_gen3p_mpc2", "mp.dmce_gen_mpc2", "mp.dmce_legacy_dcline_mpc2", "mp.dmce_line3p_mpc2", "mp.dmce_load3p_mpc2", "mp.dmce_load_mpc2", "mp.dmce_reserve_gen_mpc2", "mp.dmce_reserve_zone_mpc2", "mp.dmce_shunt_mpc2", "mp.dmce_xfmr3p_mpc2", "mp.dme_branch", "mp.dme_branch_opf", "mp.dme_bus", "mp.dme_bus3p", "mp.dme_bus3p_opf", "mp.dme_bus_opf", "mp.dme_buslink", "mp.dme_buslink_opf", "mp.dme_gen", "mp.dme_gen3p", "mp.dme_gen3p_opf", "mp.dme_gen_opf", "mp.dme_legacy_dcline", "mp.dme_legacy_dcline_opf", "mp.dme_line3p", "mp.dme_line3p_opf", "mp.dme_load", "mp.dme_load3p", "mp.dme_load3p_opf", "mp.dme_load_cpf", "mp.dme_load_opf", "mp.dme_reserve_gen", "mp.dme_reserve_zone", "mp.dme_shared_opf", "mp.dme_shunt", "mp.dme_shunt_cpf", "mp.dme_shunt_opf", "mp.dme_xfmr3p", "mp.dme_xfmr3p_opf", "mp.element_container", "mp.extension", "mp.form", "mp.form_ac", "mp.form_acc", "mp.form_acp", "mp.form_dc", "mp.mapped_array", "mp.math_model", "mp.math_model_cpf_acc", "mp.math_model_cpf_acci", "mp.math_model_cpf_accs", "mp.math_model_cpf_acp", "mp.math_model_cpf_acpi", "mp.math_model_cpf_acps", "mp.math_model_opf", "mp.math_model_opf_ac", "mp.math_model_opf_acc", "mp.math_model_opf_acci", "mp.math_model_opf_acci_legacy", "mp.math_model_opf_accs", "mp.math_model_opf_accs_legacy", "mp.math_model_opf_acp", "mp.math_model_opf_acpi", "mp.math_model_opf_acpi_legacy", "mp.math_model_opf_acps", "mp.math_model_opf_acps_legacy", "mp.math_model_opf_dc", "mp.math_model_opf_dc_legacy", "mp.math_model_pf", "mp.math_model_pf_ac", "mp.math_model_pf_acci", "mp.math_model_pf_accs", "mp.math_model_pf_acpi", "mp.math_model_pf_acps", "mp.math_model_pf_dc", "mp.mm_element", "mp.mm_shared_opf_legacy", "mp.mm_shared_pfcpf", "mp.mm_shared_pfcpf_ac", "mp.mm_shared_pfcpf_ac_i", "mp.mm_shared_pfcpf_acc", "mp.mm_shared_pfcpf_acci", "mp.mm_shared_pfcpf_accs", "mp.mm_shared_pfcpf_acp", "mp.mm_shared_pfcpf_acpi", "mp.mm_shared_pfcpf_acps", "mp.mm_shared_pfcpf_dc", "mp.mme_branch", "mp.mme_branch_opf", "mp.mme_branch_opf_ac", "mp.mme_branch_opf_acc", "mp.mme_branch_opf_acp", "mp.mme_branch_opf_dc", "mp.mme_branch_pf_ac", "mp.mme_branch_pf_dc", "mp.mme_bus", "mp.mme_bus3p", "mp.mme_bus3p_opf_acc", "mp.mme_bus3p_opf_acp", "mp.mme_bus_opf_ac", "mp.mme_bus_opf_acc", "mp.mme_bus_opf_acp", "mp.mme_bus_opf_dc", "mp.mme_bus_pf_ac", "mp.mme_bus_pf_dc", "mp.mme_buslink", "mp.mme_buslink_opf", "mp.mme_buslink_opf_acc", "mp.mme_buslink_opf_acp", "mp.mme_buslink_pf_ac", "mp.mme_buslink_pf_acc", "mp.mme_buslink_pf_acp", "mp.mme_gen", "mp.mme_gen3p", "mp.mme_gen3p_opf", "mp.mme_gen_opf", "mp.mme_gen_opf_ac", "mp.mme_gen_opf_ac_oval", "mp.mme_gen_opf_dc", "mp.mme_gen_pf_ac", "mp.mme_gen_pf_dc", "mp.mme_legacy_dcline", "mp.mme_legacy_dcline_opf", "mp.mme_legacy_dcline_opf_ac", "mp.mme_legacy_dcline_opf_dc", "mp.mme_legacy_dcline_pf_ac", "mp.mme_legacy_dcline_pf_dc", "mp.mme_line3p", "mp.mme_line3p_opf", "mp.mme_load", "mp.mme_load_cpf", "mp.mme_load_pf_ac", "mp.mme_load_pf_dc", "mp.mme_reserve_gen", "mp.mme_reserve_zone", "mp.mme_shunt", "mp.mme_shunt_cpf", "mp.mme_shunt_pf_ac", "mp.mme_shunt_pf_dc", "mp.mme_xfmr3p", "mp.mme_xfmr3p_opf", "mp.net_model", "mp.net_model_ac", "mp.net_model_acc", "mp.net_model_acp", "mp.net_model_dc", "mp.nm_element", "mp.nme_branch", "mp.nme_branch_ac", "mp.nme_branch_acc", "mp.nme_branch_acp", "mp.nme_branch_dc", "mp.nme_bus", "mp.nme_bus3p", "mp.nme_bus3p_acc", "mp.nme_bus3p_acp", "mp.nme_bus_acc", "mp.nme_bus_acp", "mp.nme_bus_dc", "mp.nme_buslink", "mp.nme_buslink_acc", "mp.nme_buslink_acp", "mp.nme_gen", "mp.nme_gen3p", "mp.nme_gen3p_acc", "mp.nme_gen3p_acp", "mp.nme_gen_ac", "mp.nme_gen_acc", "mp.nme_gen_acp", "mp.nme_gen_dc", "mp.nme_legacy_dcline", "mp.nme_legacy_dcline_ac", "mp.nme_legacy_dcline_acc", "mp.nme_legacy_dcline_acp", "mp.nme_legacy_dcline_dc", "mp.nme_line3p", "mp.nme_load", "mp.nme_load3p", "mp.nme_load_ac", "mp.nme_load_acc", "mp.nme_load_acp", "mp.nme_load_dc", "mp.nme_shunt", "mp.nme_shunt_ac", "mp.nme_shunt_acc", "mp.nme_shunt_acp", "mp.nme_shunt_dc", "mp.nme_xfmr3p", "mp.sm_legacy_cost", "mp.task", "mp.task_cpf", "mp.task_cpf_legacy", "mp.task_opf", "mp.task_opf_legacy", "mp.task_pf", "mp.task_pf_legacy", "mp.task_shared_legacy", "mp.xt_3p", "mp.xt_legacy_dcline", "mp.xt_oval_cap_curve", "mp.xt_reserves", "mp_table", "mp_table_subclass", "<span class=\"section-number\">2. </span>Functions", "install_matpower", "mp.load_dm", "mp_table_class", "run_cpf", "run_mp", "run_opf", "run_pf", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Reference Manual", "<span class=\"section-number\">1. </span>Introduction", "opf_model", "add_userfcn", "apply_changes", "bustypes", "calc_branch_angle", "calc_v_i_sum", "calc_v_pq_sum", "calc_v_y_sum", "case_info", "caseformat", "cdf2mpc", "compare_case", "connected_components", "cpf_corrector", "cpf_current_mpc", "cpf_default_callback", "cpf_detect_events", "cpf_flim_event", "cpf_flim_event_cb", "cpf_nose_event", "cpf_nose_event_cb", "cpf_p", "cpf_p_jac", "cpf_plim_event", "cpf_plim_event_cb", "cpf_predictor", "cpf_qlim_event", "cpf_qlim_event_cb", "cpf_register_callback", "cpf_register_event", "cpf_tangent", "cpf_target_lam_event", "cpf_target_lam_event_cb", "cpf_vlim_event", "cpf_vlim_event_cb", "d2Abr_dV2", "d2Ibr_dV2", "d2Imis_dV2", "d2Imis_dVdSg", "d2Sbr_dV2", "d2Sbus_dV2", "dAbr_dV", "dIbr_dV", "dImis_dV", "dSbr_dV", "dSbus_dV", "dcopf", "dcopf_solver", "dcpf", "define_constants", "e2i_data", "e2i_field", "ext2int", "extract_islands", "fdpf", "feval_w_path", "find_bridges", "find_islands", "fmincopf", "gausspf", "genfuels", "gentypes", "get_losses", "get_reorder", "hasPQcap", "have_feature_e4st", "have_feature_minopf", "have_feature_most", "have_feature_mp_core", "have_feature_pdipmopf", "have_feature_regexp_split", "have_feature_scpdipmopf", "have_feature_sdp_pf", "have_feature_smartmarket", "have_feature_syngrid", "have_feature_table", "have_feature_tralmopf", "i2e_data", "i2e_field", "idx_brch", "idx_bus", "idx_cost", "idx_ct", "idx_dcline", "idx_gen", "int2ext", "isload", "load2disp", "loadcase", "loadshed", "makeAang", "makeApq", "makeAvl", "makeAy", "makeB", "makeBdc", "makeJac", "makeLODF", "makePTDF", "makeSbus", "makeSdzip", "makeYbus", "make_vcorr", "make_zpv", "margcost", "miqps_matpower", "modcost", "mpoption", "mpoption_info_clp", "mpoption_info_cplex", "mpoption_info_fmincon", "mpoption_info_glpk", "mpoption_info_gurobi", "mpoption_info_intlinprog", "mpoption_info_ipopt", "mpoption_info_knitro", "mpoption_info_linprog", "mpoption_info_mips", "mpoption_info_mosek", "mpoption_info_osqp", "mpoption_info_quadprog", "mpoption_old", "mpver", "newtonpf", "newtonpf_I_cart", "newtonpf_I_hybrid", "newtonpf_I_polar", "newtonpf_S_cart", "newtonpf_S_hybrid", "nlpopf_solver", "opf", "opf_args", "opf_branch_ang_fcn", "opf_branch_ang_hess", "opf_branch_flow_fcn", "opf_branch_flow_hess", "opf_current_balance_fcn", "opf_current_balance_hess", "opf_execute", "opf_gen_cost_fcn", "opf_legacy_user_cost_fcn", "opf_nle_fcn1", "opf_nle_hess1", "opf_power_balance_fcn", "opf_power_balance_hess", "opf_setup", "opf_veq_fcn", "opf_veq_hess", "opf_vlim_fcn", "opf_vlim_hess", "opf_vref_fcn", "opf_vref_hess", "order_radial", "pfsoln", "poly2pwl", "polycost", "pqcost", "printpf", "psse2mpc", "psse_convert", "psse_convert_hvdc", "psse_convert_xfmr", "psse_parse", "psse_parse_line", "psse_parse_section", "psse_read", "qps_matpower", "radial_pf", "remove_userfcn", "run_userfcn", "runcpf", "rundcopf", "rundcpf", "runduopf", "runopf", "runopf_w_res", "runpf", "runuopf", "save2psse", "savecase", "savechgtab", "scale_load", "set_reorder", "t_apply_changes", "t_auction_case", "t_auction_minopf", "t_auction_mips", "t_auction_tspopf_pdipm", "t_case30_userfcns", "t_case9_dcline", "t_case9_opf", "t_case9_opfv2", "t_case9_pf", "t_case9_pfv2", "t_case9_save2psse", "t_case_ext", "t_case_int", "t_chgtab", "t_cpf", "t_cpf_cb1", "t_cpf_cb2", "t_dcline", "t_ext2int2ext", "t_feval_w_path", "t_get_losses", "t_hasPQcap", "t_hessian", "t_islands", "t_jacobian", "t_load2disp", "t_loadcase", "t_makeLODF", "t_makePTDF", "t_margcost", "t_miqps_matpower", "t_modcost", "t_mpoption", "t_mpoption_ov", "t_off2case", "t_opf_dc_bpmpd", "t_opf_dc_clp", "t_opf_dc_cplex", "t_opf_dc_default", "t_opf_dc_glpk", "t_opf_dc_gurobi", "t_opf_dc_ipopt", "t_opf_dc_mips", "t_opf_dc_mips_sc", "t_opf_dc_mosek", "t_opf_dc_osqp", "t_opf_dc_ot", "t_opf_default", "t_opf_fmincon", "t_opf_ipopt", "t_opf_knitro", "t_opf_minopf", "t_opf_mips", "t_opf_model", "t_opf_softlims", "t_opf_tspopf_pdipm", "t_opf_tspopf_scpdipm", "t_opf_tspopf_tralm", "t_opf_userfcns", "t_pf_ac", "t_pf_dc", "t_pf_radial", "t_printpf", "t_psse", "t_qps_matpower", "t_runmarket", "t_runopf_w_res", "t_scale_load", "t_total_load", "t_totcost", "t_vdep_load", "toggle_dcline", "toggle_iflims", "toggle_reserves", "toggle_softlims", "total_load", "totcost", "uopf", "update_mupq", "zgausspf", "<span class=\"section-number\">5. </span>Legacy", "<span class=\"section-number\">6. </span>Previous Versions", "<span class=\"section-number\">4. </span>Tests", "mp_foo_table", "t_case3p_a", "t_case3p_b", "t_case3p_c", "t_case3p_d", "t_case3p_e", "t_case3p_f", "t_case3p_g", "t_case3p_h", "t_case9_gizmo", "t_dmc_element", "t_mp_data_model", "t_mp_dm_converter_mpc2", "t_mp_mapped_array", "t_mp_table", "t_mpxt_legacy_dcline", "t_mpxt_reserves", "t_nm_element", "t_node_test", "t_port_inj_current_acc", "t_port_inj_current_acp", "t_port_inj_power_acc", "t_port_inj_power_acp", "t_pretty_print", "t_run_mp", "t_run_mp_3p", "t_run_opf_default", "test_matpower", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Technical Notes", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> User\u2019s Manual"], "terms": {"matpow": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "github": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "user": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781], "": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781], "manual": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781], "extra": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "matlab": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "reg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "gnu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "octav": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "pserc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "power": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "system": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "engin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "research": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "center": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "cert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "consortium": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "electr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "reliabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "technologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "solut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "mip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "interior": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "solver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "mp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782], "test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "readm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "opt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "model": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "most": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "schedul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "tool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "technic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782], "note": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "develop": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "The": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 17, 18, 19, 20, 21, 26, 30, 31, 37, 38, 42, 43, 60, 61, 62, 66, 77, 78, 79, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 190, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 239, 240, 246, 248, 252, 255, 256, 261, 262, 263, 268, 294, 297, 313, 314, 315, 318, 319, 320, 414, 419, 462, 470, 471, 473, 475, 476, 478, 485, 486, 487, 491, 492, 493, 495, 496, 498, 501, 510, 513, 514, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 540, 542, 543, 545, 550, 563, 564, 565, 566, 567, 569, 570, 572, 576, 579, 581, 582, 583, 584, 586, 588, 589, 590, 593, 607, 609, 610, 611, 612, 613, 614, 616, 617, 618, 638, 643, 644, 662, 664, 665, 674, 741, 742, 743, 744, 746, 749, 782], "team": 0, "would": [0, 2, 3, 4, 6, 7, 8, 12, 17, 19, 64, 114, 163, 170, 190, 260, 267, 419, 501, 744], "like": [0, 4, 6, 8, 12, 17, 42, 114, 115, 116, 121, 122, 123, 154, 162, 188, 190, 193, 246, 255, 267, 319, 419, 475, 501, 502], "support": [0, 6, 22, 24, 25, 121, 126, 129, 137, 138, 143, 147, 150, 255, 466, 479, 556], "numer": [0, 4, 6, 12, 17, 19, 20, 26, 31, 42, 60, 64, 115, 159, 170, 196, 203, 218, 240, 248, 319, 466, 501, 514, 515, 537, 564, 593, 648, 650, 668, 692, 694], "grant": [0, 255], "contract": [0, 77], "have": [0, 2, 3, 4, 6, 8, 13, 17, 19, 43, 60, 62, 81, 106, 111, 114, 115, 117, 119, 193, 255, 259, 390, 419, 477, 486, 489, 490, 498, 501, 539, 543, 550, 568, 616, 649, 650, 656, 667, 745, 749], "contribut": [0, 6, 17, 21], "directli": [0, 2, 3, 4, 7, 12, 17, 38, 115, 170, 173, 182, 184, 197, 210, 239, 246, 252, 255, 256, 268, 475, 478, 495, 535, 616, 617, 644, 649, 651], "indirectli": [0, 314, 315, 316, 317, 318, 462], "over": [0, 43, 66, 106, 462], "year": 0, "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 26, 30, 37, 38, 40, 41, 43, 59, 60, 62, 63, 64, 74, 76, 81, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 154, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 191, 192, 195, 196, 198, 199, 200, 203, 212, 238, 240, 246, 248, 249, 251, 252, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 283, 312, 313, 314, 315, 318, 319, 320, 348, 352, 414, 416, 417, 418, 419, 462, 463, 464, 466, 467, 468, 472, 473, 474, 475, 477, 480, 481, 482, 483, 485, 486, 487, 495, 496, 501, 504, 506, 510, 513, 514, 518, 520, 532, 533, 535, 536, 537, 538, 539, 540, 545, 546, 547, 550, 561, 563, 564, 567, 568, 571, 572, 580, 582, 584, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 615, 616, 641, 644, 648, 654, 656, 662, 667, 741, 745, 749, 750, 754, 782], "includ": [0, 1, 3, 4, 6, 8, 12, 13, 15, 17, 18, 19, 20, 21, 30, 45, 58, 63, 64, 66, 74, 77, 78, 79, 81, 109, 115, 154, 190, 203, 207, 208, 209, 240, 255, 261, 262, 263, 266, 267, 283, 305, 312, 316, 320, 346, 360, 361, 362, 363, 364, 365, 366, 367, 388, 390, 395, 415, 416, 417, 419, 420, 462, 463, 467, 478, 480, 481, 482, 483, 485, 486, 494, 495, 496, 535, 538, 539, 540, 545, 547, 550, 555, 557, 561, 562, 565, 566, 569, 570, 571, 593, 607, 609, 610, 611, 612, 613, 614, 616, 617, 640, 644, 650, 651, 664, 666, 667, 688, 724, 728, 744, 745, 749], "fund": [0, 255], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 37, 40, 41, 43, 58, 59, 61, 62, 63, 64, 66, 83, 84, 95, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 135, 136, 142, 143, 149, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 190, 193, 198, 200, 203, 204, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 239, 249, 255, 259, 260, 261, 264, 265, 267, 268, 283, 284, 295, 296, 297, 310, 312, 314, 315, 316, 317, 318, 319, 320, 329, 334, 339, 341, 343, 344, 345, 346, 348, 361, 362, 363, 365, 366, 367, 369, 373, 374, 375, 376, 377, 386, 389, 391, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422, 423, 424, 427, 428, 429, 430, 431, 433, 434, 437, 438, 440, 441, 442, 445, 446, 448, 450, 452, 453, 454, 457, 458, 459, 460, 462, 463, 465, 466, 467, 469, 470, 471, 475, 477, 479, 481, 485, 486, 487, 490, 491, 492, 493, 495, 501, 502, 507, 508, 510, 511, 513, 516, 527, 528, 530, 536, 537, 538, 539, 547, 548, 563, 564, 565, 569, 571, 574, 579, 581, 582, 584, 587, 589, 593, 607, 616, 620, 621, 631, 638, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 703, 750, 754], "u": [0, 3, 7, 13, 17, 18, 20, 26, 30, 31, 74, 106, 108, 111, 114, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 255, 261, 266, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 299, 300, 304, 305, 307, 310, 486, 495, 496, 499, 501, 516, 533, 550, 565, 566, 567, 569, 570, 580, 581, 585, 586, 587, 593, 607, 615, 616, 617, 641, 661, 742, 743, 747], "depart": [0, 255], "energi": [0, 77, 78, 255, 546, 547, 559], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 26, 30, 31, 36, 42, 43, 60, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91, 96, 97, 98, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 143, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 188, 190, 193, 194, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 237, 240, 246, 250, 252, 254, 255, 258, 259, 261, 267, 268, 272, 283, 284, 285, 286, 288, 289, 290, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 312, 315, 316, 318, 319, 378, 379, 380, 381, 382, 383, 384, 387, 390, 414, 415, 419, 425, 432, 433, 434, 435, 449, 455, 462, 464, 466, 468, 474, 477, 486, 487, 488, 490, 495, 496, 498, 499, 501, 502, 516, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 536, 538, 539, 541, 547, 548, 550, 563, 565, 566, 567, 569, 570, 571, 572, 574, 575, 580, 581, 582, 583, 584, 585, 586, 587, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 615, 616, 617, 640, 641, 642, 643, 644, 645, 647, 648, 650, 651, 653, 656, 657, 658, 659, 660, 661, 662, 663, 665, 667, 685, 742, 743, 744, 745, 747, 751, 754, 758, 780, 781, 782], "nation": [0, 255], "scienc": [0, 255], "foundat": [0, 255], "2": [0, 1, 2, 3, 4, 7, 8, 9, 12, 13, 17, 18, 19, 20, 26, 28, 30, 31, 62, 64, 76, 79, 80, 83, 91, 93, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 188, 190, 197, 198, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 244, 245, 248, 249, 251, 255, 258, 259, 261, 264, 265, 267, 268, 283, 285, 286, 289, 292, 295, 297, 299, 300, 310, 312, 315, 316, 318, 319, 390, 414, 420, 443, 462, 474, 486, 487, 488, 491, 492, 493, 495, 497, 501, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 541, 544, 547, 548, 550, 563, 564, 565, 566, 567, 569, 570, 571, 574, 580, 588, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 615, 616, 617, 620, 638, 641, 642, 667, 686, 742, 744, 755, 756, 757, 781], "arpa": 0, "e": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 17, 18, 19, 26, 29, 30, 42, 60, 62, 66, 75, 76, 96, 97, 98, 100, 106, 109, 114, 115, 124, 155, 159, 164, 170, 171, 182, 183, 184, 185, 189, 190, 193, 201, 202, 203, 218, 240, 243, 258, 261, 264, 267, 268, 284, 288, 294, 296, 304, 305, 312, 313, 314, 315, 316, 317, 318, 320, 348, 414, 419, 462, 463, 469, 475, 481, 486, 487, 495, 501, 502, 503, 509, 512, 515, 519, 527, 538, 547, 580, 581, 582, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 644, 645, 646, 647, 648, 649, 650, 651, 656, 657, 658, 659, 660, 662, 663, 664, 667, 744, 745], "3": [0, 1, 2, 3, 7, 8, 9, 11, 12, 17, 18, 20, 26, 30, 31, 42, 43, 60, 62, 76, 79, 80, 88, 89, 90, 91, 92, 93, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 121, 122, 123, 137, 147, 154, 156, 157, 158, 159, 160, 161, 162, 172, 174, 177, 178, 182, 183, 184, 185, 188, 190, 193, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 244, 245, 248, 249, 251, 255, 258, 259, 261, 270, 272, 273, 276, 277, 282, 285, 286, 287, 289, 290, 292, 293, 297, 298, 300, 301, 310, 311, 312, 315, 316, 318, 319, 369, 370, 371, 378, 379, 380, 381, 382, 383, 384, 386, 387, 390, 400, 401, 412, 413, 414, 415, 426, 427, 428, 432, 433, 434, 436, 437, 438, 448, 450, 460, 462, 470, 477, 486, 487, 488, 491, 495, 501, 502, 521, 523, 524, 529, 536, 537, 539, 547, 563, 564, 565, 566, 567, 569, 570, 580, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 616, 617, 676, 677, 678, 679, 742, 754, 755, 756, 757, 758, 759, 760, 761, 762, 778, 781], "other": [0, 1, 2, 3, 5, 6, 7, 8, 17, 19, 37, 42, 60, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 175, 182, 184, 185, 190, 203, 207, 208, 209, 214, 218, 248, 255, 257, 261, 267, 320, 466, 474, 477, 484, 485, 487, 495, 501, 536, 537, 546, 547, 550, 563, 564, 593, 616, 620, 621, 644, 649, 650, 656, 741, 760, 761], "part": [0, 9, 17, 19, 20, 106, 107, 108, 109, 111, 113, 114, 255, 315, 316, 415, 416, 419, 495, 522, 523, 524, 525, 526, 528, 529, 530, 531, 542, 547, 589, 593, 632, 634, 636], "offic": [0, 255], "deliveri": [0, 255, 492, 547, 588, 638], "transmiss": [0, 1, 3, 8, 10, 19, 255, 283, 360, 361, 362, 363, 364, 365, 366, 367, 420, 491, 495], "program": [0, 6, 7, 21, 26, 31, 38, 115, 122, 127, 133, 136, 139, 145, 156, 157, 158, 159, 160, 161, 166, 168, 169, 182, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 239, 255, 558, 747], "under": [0, 3, 6, 30, 43, 240, 241, 242, 255, 475, 559], "laboratori": [0, 255], "cooper": [0, 255], "agreement": [0, 255], "No": [0, 26, 255, 470, 471, 656], "de": [0, 255], "fc26": [0, 255], "09nt43321": [0, 255], "materi": [0, 255], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 26, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 58, 59, 60, 61, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 81, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 182, 183, 184, 185, 188, 190, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 285, 286, 288, 297, 299, 312, 314, 315, 316, 317, 318, 319, 320, 348, 388, 395, 414, 415, 419, 462, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 501, 503, 504, 509, 510, 512, 513, 514, 515, 518, 519, 520, 521, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 631, 638, 640, 641, 642, 643, 644, 648, 649, 650, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 674, 741, 742, 743, 744, 745, 746, 747, 749, 755, 756, 757, 758, 780, 782], "base": [0, 1, 3, 7, 9, 11, 14, 16, 17, 19, 20, 26, 31, 37, 43, 64, 79, 80, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 160, 161, 172, 173, 174, 178, 182, 183, 184, 193, 195, 203, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 238, 255, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 479, 480, 484, 486, 491, 495, 499, 500, 501, 504, 505, 516, 520, 521, 527, 552, 562, 566, 570, 585, 593, 607, 616, 625, 647, 656, 718, 719, 720, 721, 722, 725, 726, 727, 742, 748, 753, 782], "upon": [0, 3, 203, 255, 261, 593], "work": [0, 10, 17, 154, 163, 255, 260, 415, 418, 475, 476, 477, 479, 541, 593, 641, 696, 741], "Nos": [0, 255], "0532744": [0, 255], "1642341": [0, 255], "1931421": [0, 255], "ani": [0, 1, 2, 6, 7, 8, 11, 17, 19, 59, 63, 74, 106, 114, 115, 154, 165, 166, 167, 168, 169, 170, 190, 193, 246, 255, 259, 260, 261, 267, 312, 313, 319, 348, 415, 462, 474, 477, 481, 487, 497, 501, 502, 504, 514, 520, 536, 538, 541, 550, 563, 568, 579, 585, 593, 608, 616, 651, 656, 662, 667, 668, 744, 748], "opinion": [0, 255], "find": [0, 1, 4, 9, 13, 17, 111, 255, 466, 542, 543, 616, 741, 742, 743, 744], "conclus": [0, 255], "recommend": [0, 13, 163, 255], "express": [0, 8, 111, 249, 255, 527, 528, 529, 530, 531, 579, 585, 620], "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 37, 38, 42, 43, 59, 60, 61, 62, 63, 64, 66, 78, 79, 80, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 190, 193, 194, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 239, 246, 248, 250, 252, 255, 256, 258, 259, 261, 262, 264, 267, 268, 283, 285, 286, 289, 291, 292, 294, 297, 299, 300, 304, 307, 310, 313, 314, 315, 318, 319, 320, 348, 390, 414, 416, 417, 418, 419, 462, 464, 466, 468, 470, 471, 474, 475, 476, 477, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 501, 504, 514, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 533, 535, 536, 537, 538, 539, 542, 547, 550, 563, 564, 565, 566, 567, 569, 570, 573, 576, 577, 579, 581, 582, 583, 584, 585, 588, 589, 593, 607, 615, 616, 617, 618, 620, 621, 624, 638, 642, 644, 648, 649, 650, 656, 657, 658, 659, 660, 661, 662, 663, 665, 667, 668, 744, 745, 747, 759, 760, 761], "those": [0, 1, 2, 3, 6, 7, 13, 17, 43, 109, 110, 115, 163, 255, 262, 267, 475, 495, 536, 547, 550, 563, 583, 649, 650, 661, 666, 744], "author": [0, 255], "do": [0, 1, 12, 17, 66, 77, 78, 79, 80, 170, 171, 203, 255, 258, 260, 313, 415, 418, 462, 466, 477, 539, 593, 607, 667, 668, 744], "necessarili": [0, 42, 163, 255], "reflect": [0, 255], "view": [0, 255], "synthet": [0, 560], "data": [0, 1, 5, 8, 11, 12, 18, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 74, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 190, 239, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 326, 348, 361, 362, 365, 366, 367, 369, 373, 374, 375, 376, 377, 386, 389, 391, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 418, 419, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 478, 480, 481, 482, 483, 484, 486, 487, 491, 492, 493, 495, 496, 501, 503, 505, 509, 512, 517, 519, 535, 536, 537, 538, 539, 563, 564, 567, 568, 574, 577, 616, 617, 639, 643, 644, 645, 646, 647, 648, 649, 650, 651, 656, 657, 658, 659, 660, 662, 663, 665, 670, 674, 675, 676, 677, 678, 679, 680, 681, 682, 747, 748, 754, 762], "grid": [0, 560], "r": [0, 9, 10, 20, 26, 30, 64, 106, 108, 111, 113, 114, 115, 160, 171, 173, 175, 178, 203, 219, 268, 283, 297, 304, 310, 315, 415, 486, 492, 495, 499, 501, 508, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 548, 550, 565, 582, 588, 616, 617, 638, 661, 667, 743, 781], "d": [0, 4, 8, 10, 17, 19, 26, 76, 106, 170, 203, 248, 261, 264, 265, 268, 271, 319, 419, 462, 463, 464, 465, 466, 467, 468, 469, 478, 480, 481, 482, 483, 491, 492, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 588, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 638, 649, 650, 781], "project": [0, 6, 10, 21, 23, 207, 208, 209, 255, 607], "A": [1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 20, 21, 26, 30, 31, 60, 61, 106, 108, 111, 114, 115, 118, 119, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 261, 264, 266, 267, 268, 312, 320, 348, 380, 383, 388, 395, 414, 419, 486, 487, 491, 495, 536, 538, 539, 542, 549, 563, 565, 568, 579, 589, 593, 616, 617, 654, 668, 747, 781], "new": [1, 2, 3, 8, 11, 13, 18, 19, 21, 37, 39, 40, 41, 60, 66, 104, 107, 108, 109, 110, 111, 112, 113, 115, 159, 190, 218, 238, 257, 264, 414, 462, 470, 471, 485, 488, 510, 513, 538, 571, 593, 607, 651, 656, 661], "orient": [1, 2, 6, 25, 259, 474, 475, 491, 492, 493, 638, 742], "core": [1, 2, 20, 171, 175, 484, 485, 554, 593, 782], "design": [1, 6, 8, 495, 547], "around": [1, 2, 43, 475, 480, 482, 483, 532], "concept": 1, "gener": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 42, 43, 45, 59, 63, 64, 66, 74, 77, 79, 80, 81, 96, 97, 98, 100, 103, 106, 107, 109, 110, 114, 115, 116, 121, 123, 154, 162, 193, 255, 261, 267, 273, 274, 279, 291, 292, 293, 294, 304, 305, 385, 386, 387, 388, 389, 390, 391, 392, 393, 406, 415, 435, 436, 437, 438, 439, 440, 441, 442, 465, 467, 470, 472, 473, 475, 476, 477, 480, 481, 482, 483, 485, 486, 488, 489, 491, 492, 493, 495, 501, 502, 509, 510, 512, 513, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 545, 546, 547, 550, 563, 564, 567, 568, 570, 571, 575, 577, 578, 579, 585, 588, 590, 592, 593, 607, 609, 610, 611, 612, 613, 614, 616, 617, 625, 626, 641, 642, 644, 653, 656, 659, 661, 662, 663, 676, 677, 678, 679, 741, 743, 744, 746, 747, 748, 749, 762, 781], "element": [1, 5, 9, 10, 11, 12, 18, 20, 21, 26, 42, 60, 62, 77, 78, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 193, 198, 199, 200, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 248, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 329, 334, 339, 342, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 470, 471, 472, 473, 480, 481, 482, 483, 484, 502, 536, 539, 548, 563, 592, 593, 616, 617, 625, 649, 656, 667, 668, 744, 745, 771], "wa": [1, 9, 43, 108, 109, 110, 114, 115, 190, 203, 248, 249, 251, 255, 486, 501, 564, 616, 656], "introduc": [1, 2, 9, 19], "8": [1, 7, 8, 12, 17, 18, 19, 20, 26, 31, 78, 106, 156, 157, 158, 160, 161, 171, 172, 174, 178, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 475, 495, 565, 566, 569, 570, 593, 607], "0": [1, 3, 7, 12, 13, 14, 16, 17, 18, 19, 20, 26, 28, 30, 31, 43, 60, 62, 64, 66, 74, 78, 80, 96, 97, 98, 100, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 123, 135, 140, 141, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 190, 193, 194, 196, 197, 201, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 244, 245, 246, 248, 249, 250, 251, 252, 255, 261, 267, 307, 315, 318, 414, 415, 419, 462, 464, 466, 468, 475, 477, 486, 488, 490, 495, 496, 501, 502, 514, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 550, 565, 566, 567, 568, 569, 570, 572, 593, 607, 615, 616, 640, 643, 644, 645, 647, 648, 650, 651, 653, 656, 657, 658, 659, 660, 661, 662, 663, 667, 743, 744, 745, 747, 751, 782], "along": [1, 6, 17, 37, 104, 108, 112, 113, 193, 204, 238, 315, 414, 486, 533, 537, 538, 564, 615, 616], "emploi": 1, "chapter": [1, 26], "give": [1, 114, 115], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 17, 19, 20, 21, 29, 40, 41, 59, 60, 61, 62, 63, 64, 65, 75, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 124, 154, 155, 164, 165, 166, 167, 168, 169, 170, 171, 184, 189, 190, 193, 194, 198, 203, 207, 208, 209, 240, 243, 257, 258, 259, 261, 262, 263, 264, 267, 268, 312, 314, 315, 316, 317, 319, 320, 327, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 370, 371, 372, 373, 374, 375, 379, 387, 388, 390, 395, 401, 413, 414, 419, 462, 474, 475, 482, 486, 487, 488, 494, 495, 496, 501, 510, 513, 520, 533, 536, 538, 539, 540, 544, 545, 546, 547, 559, 563, 567, 568, 571, 574, 584, 586, 592, 593, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 624, 631, 643, 647, 656, 660, 661, 663, 665, 666, 667, 741, 742, 744, 747, 749, 782], "primari": [1, 4, 37, 104, 238, 255], "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 37, 40, 41, 43, 61, 64, 66, 74, 76, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 240, 241, 242, 244, 245, 247, 253, 255, 258, 259, 261, 267, 268, 284, 288, 294, 295, 296, 304, 305, 306, 312, 313, 315, 316, 318, 320, 324, 328, 390, 414, 415, 422, 451, 462, 464, 465, 466, 468, 469, 474, 475, 477, 478, 480, 481, 482, 483, 484, 485, 487, 495, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 532, 533, 535, 536, 537, 538, 541, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 582, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 627, 630, 633, 635, 637, 641, 643, 654, 656, 666, 667, 685, 686, 688, 733, 747, 751, 782], "solv": [1, 6, 11, 17, 18, 20, 21, 24, 26, 28, 30, 31, 38, 43, 66, 105, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 197, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 228, 229, 230, 231, 232, 239, 320, 348, 415, 418, 419, 462, 463, 478, 480, 481, 482, 483, 491, 492, 493, 496, 499, 532, 533, 534, 540, 544, 545, 593, 609, 610, 611, 612, 613, 614, 615, 616, 653, 656, 657, 658, 659, 660, 662, 663, 747, 749, 777], "steadi": [1, 6, 21, 656], "state": [1, 3, 6, 7, 8, 9, 17, 19, 21, 58, 106, 190, 203, 240, 261, 267, 314, 315, 316, 317, 318, 320, 329, 334, 339, 353, 356, 359, 414, 415, 416, 417, 418, 419, 432, 435, 436, 439, 442, 443, 444, 447, 462, 501, 538, 593, 656], "simul": [1, 3, 21, 481, 484, 487, 551, 654], "problem": [1, 2, 3, 6, 7, 8, 11, 12, 17, 18, 21, 26, 28, 31, 43, 66, 70, 71, 72, 73, 95, 105, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 187, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 261, 320, 331, 333, 336, 338, 340, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 403, 404, 405, 409, 410, 411, 413, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 480, 482, 483, 486, 501, 593, 616, 617, 656, 741, 749], "flow": [1, 3, 7, 8, 11, 12, 18, 19, 21, 26, 43, 66, 68, 69, 74, 108, 109, 111, 267, 283, 284, 295, 296, 315, 320, 327, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 365, 366, 367, 376, 377, 382, 383, 384, 392, 393, 398, 399, 404, 405, 410, 411, 462, 463, 464, 465, 466, 467, 468, 470, 471, 476, 480, 481, 482, 483, 484, 491, 492, 493, 495, 496, 499, 501, 503, 504, 508, 511, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 540, 544, 545, 547, 548, 552, 555, 557, 558, 562, 565, 569, 580, 581, 582, 588, 593, 607, 609, 610, 611, 612, 613, 614, 615, 616, 620, 621, 622, 629, 632, 634, 636, 638, 639, 643, 653, 656, 657, 658, 659, 660, 661, 662, 663, 670, 674, 676, 677, 678, 679, 680, 684, 685, 686, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 729, 730, 731, 741, 742, 744, 747, 749, 762, 779], "continu": [1, 7, 17, 18, 20, 37, 96, 104, 113, 115, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 190, 191, 192, 195, 196, 198, 199, 200, 203, 238, 262, 302, 308, 350, 351, 352, 353, 354, 355, 356, 357, 358, 414, 462, 463, 464, 470, 471, 476, 480, 484, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 512, 516, 517, 518, 519, 520, 593, 607, 656, 684, 685, 686, 747, 782], "At": [1, 255, 490], "top": [1, 2, 79, 106, 170, 484, 593], "level": [1, 2, 26, 43, 106, 115, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 250, 475, 484, 502, 535, 590, 593, 724, 728, 746], "task": [1, 3, 5, 6, 7, 12, 18, 261, 262, 263, 264, 313, 320, 348, 414, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 480, 481, 482, 483, 484, 537], "construct": [1, 2, 8, 11, 17, 19, 20, 21, 62, 114, 126, 259, 261, 263, 297, 313, 414, 419, 432, 474, 475, 500, 576, 577, 578, 579, 631], "variou": [1, 2, 6, 17, 19, 21, 105, 106, 114, 159, 171, 175, 185, 190, 209, 218, 487, 654], "layer": [1, 2, 11, 12, 17, 18, 19, 462], "desir": [1, 3, 4, 7, 8, 43, 61, 108, 109, 110, 111, 112, 113, 115, 196, 319, 481, 584, 656, 667], "type": [1, 2, 3, 4, 7, 13, 18, 20, 21, 30, 37, 39, 42, 60, 61, 62, 104, 106, 107, 113, 114, 115, 122, 165, 166, 167, 168, 169, 238, 240, 255, 257, 258, 259, 261, 264, 267, 268, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 312, 313, 314, 315, 318, 320, 348, 414, 415, 416, 417, 418, 419, 425, 462, 470, 471, 473, 474, 475, 481, 486, 488, 489, 495, 501, 513, 514, 546, 547, 566, 568, 593, 607, 649, 650, 744, 745], "formul": [1, 2, 5, 7, 18, 20, 115, 259, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 352, 414, 416, 417, 418, 419, 421, 422, 423, 424, 427, 428, 429, 430, 431, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 451, 452, 453, 454, 456, 457, 458, 459, 470, 471, 486, 487, 495, 579, 593, 607, 616, 617, 655], "propog": 1, "back": [1, 3, 4, 17, 30, 66, 81, 106, 114, 117, 119, 170, 178, 190, 193, 196, 261, 267, 314, 320, 414, 462, 464, 466, 468, 487, 501, 537, 571, 593], "through": [1, 2, 3, 4, 7, 8, 19, 20, 194, 200, 239, 260, 261, 475, 747], "explicit": [1, 2, 13, 19, 30, 178, 260, 495, 574, 593], "three": [1, 2, 3, 8, 11, 17, 18, 19, 21, 44, 45, 79, 82, 107, 108, 109, 110, 111, 112, 113, 115, 190, 240, 267, 299, 313, 470, 484, 486, 495, 501, 536, 563, 586, 616, 617, 647, 667, 755, 756, 757, 758, 759, 760, 761], "structur": [1, 3, 4, 8, 17, 26, 31, 40, 41, 42, 61, 62, 65, 66, 74, 76, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 190, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 267, 319, 414, 486, 501, 536, 537, 538, 539, 563, 564, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 639, 744], "decoupl": [1, 115, 172, 175, 346, 540, 580, 593, 607, 749], "one": [1, 2, 3, 4, 6, 8, 11, 17, 19, 40, 41, 42, 43, 59, 63, 64, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 163, 165, 166, 167, 168, 169, 170, 190, 194, 203, 239, 240, 261, 267, 312, 315, 316, 319, 414, 415, 419, 475, 481, 487, 488, 495, 501, 536, 549, 563, 568, 589, 592, 593, 607, 616, 617, 651, 654, 661, 668, 743, 744, 747, 760, 761], "anoth": [1, 7, 8, 17, 19, 109, 115, 170, 196, 239, 267, 475, 517, 539], "visibl": [1, 3, 17, 19, 78, 171, 267], "paramet": [1, 4, 7, 9, 12, 17, 20, 26, 30, 60, 63, 107, 108, 109, 110, 111, 112, 113, 115, 116, 120, 121, 123, 162, 171, 175, 198, 199, 200, 203, 204, 259, 260, 261, 262, 267, 297, 302, 308, 314, 315, 318, 349, 388, 391, 395, 414, 415, 418, 419, 421, 424, 432, 436, 439, 442, 444, 447, 448, 450, 451, 454, 456, 459, 460, 461, 463, 473, 486, 494, 495, 499, 508, 511, 536, 537, 540, 545, 548, 563, 564, 565, 567, 576, 577, 578, 579, 593, 607, 616, 617, 626, 664, 665, 749], "quantiti": [1, 17, 74, 203, 259, 304, 419, 473, 582, 593, 661, 667, 743], "network": [1, 2, 3, 5, 11, 12, 18, 20, 66, 267, 313, 314, 315, 316, 317, 318, 320, 321, 324, 329, 334, 339, 348, 353, 356, 359, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 478, 480, 481, 482, 483, 484, 491, 493, 494, 539, 542, 543, 593, 607, 771], "connect": [1, 8, 19, 20, 261, 267, 414, 419, 488, 498, 524, 525, 528, 530, 538, 539, 543, 550, 563, 585], "mathemat": [1, 5, 6, 8, 9, 12, 21, 115, 239, 267, 313, 320, 327, 348, 406, 407, 462, 463, 465, 467, 470, 471, 472, 473, 478, 480, 481, 482, 483, 484, 495], "being": [1, 3, 8, 17, 40, 41, 42, 58, 60, 114, 115, 156, 157, 158, 159, 160, 161, 190, 267, 312, 462, 480, 501, 571, 579, 655, 662, 782], "resepect": 1, "mathshown": [1, 3, 4, 8, 11, 12, 17, 19, 26, 30, 77, 78, 79, 80, 111, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 577], "figur": [1, 2, 3, 4, 7, 8, 11, 12, 17, 19, 77, 78, 79, 80], "further": [1, 7, 8, 60, 348, 419, 656], "particular": [1, 2, 3, 4, 8, 17, 18, 37, 42, 43, 59, 104, 106, 114, 115, 194, 238, 255, 267, 268, 314, 348, 414, 419, 462, 546, 547, 563], "format": [1, 2, 3, 4, 5, 17, 19, 21, 40, 41, 43, 44, 45, 62, 81, 82, 83, 84, 107, 115, 261, 264, 265, 268, 313, 470, 471, 473, 484, 488, 495, 496, 550, 574, 590, 646, 647, 656, 657, 658, 659, 660, 662, 663, 664, 665, 670, 674, 675, 676, 677, 678, 679, 680, 681, 682, 746, 762], "legaci": [1, 2, 3, 17, 18, 24, 37, 104, 238, 261, 266, 275, 295, 296, 331, 333, 336, 338, 340, 349, 389, 394, 395, 396, 397, 398, 399, 443, 444, 445, 446, 447, 461, 464, 466, 468, 469, 471, 484, 485, 486, 593, 626, 684, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 729, 730, 731, 740, 768], "case": [1, 3, 4, 7, 8, 11, 12, 17, 18, 19, 39, 40, 41, 42, 43, 44, 45, 59, 61, 62, 63, 64, 77, 78, 79, 80, 81, 82, 83, 84, 95, 106, 109, 114, 115, 165, 166, 167, 168, 169, 170, 246, 252, 261, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 320, 414, 419, 462, 464, 466, 467, 468, 469, 478, 480, 481, 482, 483, 486, 487, 488, 490, 494, 495, 496, 497, 499, 500, 501, 504, 516, 520, 533, 536, 537, 538, 539, 546, 547, 548, 550, 563, 564, 565, 566, 569, 570, 571, 573, 574, 582, 584, 587, 589, 593, 615, 616, 617, 620, 621, 622, 623, 629, 630, 631, 632, 633, 634, 635, 636, 637, 644, 645, 646, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 670, 674, 675, 676, 677, 678, 679, 680, 681, 682, 696, 744, 745, 747, 754, 755, 756, 757, 758, 759, 760, 761, 762, 778, 782], "struct": [1, 2, 3, 4, 7, 11, 12, 14, 16, 17, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 188, 189, 190, 193, 194, 195, 196, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 239, 240, 243, 259, 260, 261, 264, 265, 267, 268, 313, 315, 316, 317, 318, 319, 320, 341, 348, 388, 395, 414, 419, 461, 462, 463, 464, 466, 468, 469, 478, 480, 481, 482, 483, 486, 487, 488, 490, 495, 496, 499, 500, 501, 502, 503, 505, 509, 512, 514, 515, 517, 519, 533, 536, 537, 538, 539, 545, 546, 547, 548, 563, 564, 571, 573, 574, 582, 586, 587, 593, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 620, 621, 622, 623, 625, 626, 629, 630, 631, 632, 633, 634, 635, 636, 637, 643, 644, 645, 646, 648, 650, 651, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 696, 742, 743, 744, 745, 747, 748, 749], "mpc": [1, 2, 3, 4, 17, 20, 39, 40, 41, 48, 50, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 261, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 340, 462, 464, 466, 468, 469, 478, 480, 481, 482, 483, 486, 487, 488, 490, 494, 495, 496, 500, 533, 536, 537, 538, 539, 542, 543, 546, 547, 563, 564, 569, 571, 573, 574, 575, 578, 580, 581, 582, 583, 584, 587, 615, 616, 617, 620, 621, 622, 623, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 643, 644, 645, 653, 654, 655, 664, 667, 674, 741, 742, 743, 744, 745, 747], "file": [1, 3, 6, 11, 13, 14, 15, 16, 21, 24, 37, 40, 41, 43, 44, 45, 47, 48, 50, 53, 59, 61, 62, 63, 64, 77, 78, 79, 80, 81, 82, 83, 84, 104, 107, 108, 109, 110, 111, 112, 113, 154, 184, 238, 246, 255, 261, 264, 265, 267, 462, 477, 480, 481, 482, 483, 485, 487, 488, 494, 495, 496, 539, 541, 559, 565, 566, 569, 570, 573, 574, 593, 607, 616, 617, 643, 644, 645, 646, 647, 648, 649, 650, 651, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 674, 675, 676, 677, 678, 679, 680, 696, 703, 762], "convers": [1, 3, 4, 17, 43, 261, 267, 484, 538, 580, 581, 587, 593, 607, 649, 650, 656, 657, 658, 659, 660, 662, 663], "servic": [1, 8, 17, 19, 20, 295, 362, 365, 366, 367, 369, 373, 374, 375, 376, 377, 386, 389, 391, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 488, 489, 490, 495, 565, 569, 570, 579, 624, 631], "convert": [1, 3, 5, 43, 63, 64, 81, 113, 115, 117, 118, 119, 120, 239, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 312, 313, 320, 329, 334, 339, 353, 356, 359, 414, 462, 463, 466, 469, 470, 471, 473, 484, 487, 489, 496, 536, 537, 538, 563, 564, 571, 573, 574, 593, 640, 644, 645, 646, 647, 649, 650, 656, 662], "between": [1, 2, 3, 4, 7, 8, 17, 19, 43, 111, 199, 246, 248, 249, 251, 252, 261, 264, 352, 414, 462, 490, 589, 593, 640], "specif": [1, 3, 7, 8, 11, 14, 16, 17, 19, 38, 60, 66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 159, 171, 172, 173, 174, 175, 178, 184, 185, 207, 208, 209, 218, 239, 240, 255, 256, 261, 262, 263, 264, 266, 267, 268, 313, 314, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 414, 416, 417, 418, 419, 462, 464, 466, 468, 469, 470, 471, 472, 473, 478, 480, 481, 482, 483, 533, 547, 572, 584, 593, 615, 616, 667, 744, 782], "extern": [1, 17, 414, 487, 490, 536, 537, 538, 563, 564, 571, 656, 657, 658, 659, 660, 662, 663, 681, 744], "each": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 18, 19, 21, 42, 43, 60, 64, 77, 78, 80, 106, 107, 108, 109, 111, 113, 114, 115, 165, 166, 167, 168, 169, 170, 190, 203, 240, 246, 248, 250, 252, 261, 263, 264, 267, 268, 299, 305, 312, 313, 314, 315, 316, 317, 318, 319, 320, 348, 380, 381, 383, 384, 414, 415, 418, 419, 462, 470, 471, 472, 485, 486, 487, 488, 489, 490, 495, 497, 498, 501, 514, 527, 528, 530, 539, 542, 543, 548, 565, 566, 567, 569, 570, 575, 584, 586, 587, 589, 590, 592, 593, 616, 617, 648, 650, 651, 656, 661, 667, 742, 743, 744, 745, 746, 747], "plu": [1, 250], "organ": [1, 3, 6, 42, 106, 261], "collect": [1, 6, 17, 19, 74, 109, 115, 190, 315, 318, 501], "enclos": [1, 312, 649, 650], "contain": [1, 2, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 26, 30, 31, 40, 41, 42, 60, 61, 62, 63, 64, 66, 76, 106, 111, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 182, 183, 184, 185, 188, 190, 193, 195, 196, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 246, 260, 261, 264, 267, 268, 312, 313, 320, 348, 414, 419, 462, 470, 471, 473, 475, 478, 480, 481, 482, 483, 484, 486, 495, 496, 501, 502, 503, 505, 509, 512, 514, 515, 517, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 537, 539, 540, 541, 545, 546, 547, 564, 574, 584, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 616, 617, 620, 621, 641, 644, 645, 647, 648, 649, 650, 656, 657, 658, 659, 660, 661, 662, 663, 664, 749, 750], "correspond": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 26, 31, 39, 40, 41, 59, 60, 63, 64, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 170, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 193, 194, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 248, 259, 261, 264, 267, 268, 304, 314, 315, 316, 317, 318, 319, 320, 348, 362, 365, 366, 367, 369, 373, 374, 375, 376, 377, 386, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 419, 462, 464, 466, 468, 469, 470, 471, 485, 486, 487, 488, 495, 501, 521, 522, 523, 524, 525, 526, 536, 537, 539, 548, 550, 563, 564, 572, 575, 580, 583, 584, 586, 590, 592, 593, 607, 620, 621, 625, 642, 647, 648, 649, 650, 651, 656, 662, 667, 668, 744, 745, 746, 751], "devic": [1, 17], "g": [1, 2, 3, 7, 8, 14, 16, 17, 18, 19, 26, 29, 30, 60, 66, 75, 96, 97, 98, 100, 106, 108, 109, 111, 114, 115, 117, 124, 155, 164, 170, 171, 174, 175, 177, 179, 182, 183, 184, 185, 189, 190, 201, 204, 240, 243, 258, 261, 264, 267, 268, 284, 288, 294, 296, 304, 305, 307, 313, 314, 315, 316, 320, 348, 414, 415, 419, 462, 463, 466, 469, 475, 481, 486, 487, 491, 495, 501, 527, 535, 539, 566, 584, 593, 607, 608, 616, 622, 629, 649, 650, 656, 744, 747], "bu": [1, 3, 4, 12, 17, 18, 19, 20, 43, 44, 45, 60, 62, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 261, 267, 268, 270, 271, 277, 278, 281, 283, 285, 286, 287, 288, 289, 291, 292, 295, 296, 297, 299, 300, 307, 310, 348, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 419, 425, 426, 427, 428, 429, 430, 431, 465, 470, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 507, 508, 510, 511, 513, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 542, 543, 545, 548, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 576, 580, 581, 582, 584, 585, 586, 587, 588, 589, 593, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 622, 623, 629, 630, 639, 643, 644, 646, 647, 648, 653, 656, 657, 658, 659, 660, 662, 663, 665, 667, 674, 676, 677, 678, 679, 744, 745, 747, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 782], "line": [1, 2, 3, 8, 18, 19, 20, 43, 77, 78, 106, 114, 115, 200, 246, 250, 261, 263, 264, 267, 275, 276, 283, 286, 295, 296, 297, 298, 319, 320, 360, 361, 362, 363, 364, 365, 366, 367, 394, 395, 396, 397, 398, 399, 400, 401, 414, 419, 420, 443, 444, 445, 446, 447, 448, 470, 471, 474, 484, 486, 490, 495, 528, 530, 538, 539, 548, 550, 563, 565, 566, 567, 569, 570, 571, 581, 583, 587, 593, 607, 620, 642, 644, 646, 648, 649, 651, 656, 665, 675, 687, 741, 742, 768], "some": [1, 6, 7, 8, 12, 17, 18, 19, 20, 21, 26, 43, 45, 59, 60, 105, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 248, 259, 260, 267, 316, 317, 464, 466, 468, 496, 547, 565, 566, 567, 569, 570, 593, 642, 655, 657, 658, 659, 660, 662, 663, 749, 782], "attribut": 1, "interfac": [1, 2, 6, 7, 24, 25, 31, 109, 110, 115, 156, 157, 158, 160, 161, 171, 172, 173, 174, 178, 182, 183, 184, 185, 188, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 593, 607, 674, 742, 782], "reserv": [1, 2, 18, 56, 58, 64, 66, 74, 77, 94, 279, 280, 304, 305, 313, 406, 407, 473, 484, 487, 495, 537, 564, 570, 661, 674, 728, 743], "requir": [1, 3, 6, 8, 13, 17, 18, 20, 21, 26, 42, 43, 60, 61, 62, 63, 64, 65, 66, 94, 115, 137, 141, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 174, 175, 182, 183, 184, 185, 193, 209, 218, 255, 267, 305, 361, 470, 471, 473, 477, 488, 502, 550, 571, 574, 593, 607, 655, 661, 743, 744], "provid": [1, 2, 3, 4, 6, 7, 8, 12, 17, 19, 26, 30, 31, 40, 41, 42, 61, 63, 64, 79, 80, 106, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 160, 161, 162, 171, 172, 173, 174, 178, 182, 183, 184, 185, 188, 196, 203, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 239, 260, 261, 262, 264, 267, 268, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 326, 327, 328, 329, 331, 333, 334, 336, 338, 339, 340, 342, 347, 348, 415, 419, 462, 463, 465, 467, 469, 477, 478, 480, 481, 482, 483, 485, 486, 539, 547, 571, 579, 584, 585, 593, 625, 661, 667, 743, 745, 782], "extraordinari": 1, "flexibl": [1, 2, 8, 12, 480, 481, 482, 483, 485], "allow": [1, 2, 7, 8, 11, 12, 17, 42, 43, 60, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 188, 203, 240, 260, 267, 320, 486, 487, 488, 495, 572, 593, 607, 659, 663], "environ": [1, 5, 13], "ad": [1, 2, 8, 12, 13, 17, 18, 19, 39, 40, 41, 43, 59, 106, 108, 109, 110, 111, 112, 114, 115, 190, 261, 264, 315, 316, 317, 319, 320, 326, 327, 351, 352, 359, 362, 363, 364, 365, 373, 380, 381, 382, 383, 384, 389, 391, 406, 407, 414, 486, 487, 491, 492, 493, 495, 535, 550, 565, 566, 569, 570, 647, 664, 665, 666, 745], "modifi": [1, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 42, 43, 59, 60, 76, 81, 103, 107, 108, 109, 110, 111, 112, 113, 115, 116, 121, 122, 123, 154, 162, 165, 166, 167, 168, 169, 188, 193, 255, 261, 264, 267, 268, 312, 313, 319, 414, 419, 470, 471, 472, 473, 477, 488, 496, 501, 502, 568, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 656, 665, 667, 741, 744, 754], "exist": [1, 2, 3, 8, 12, 18, 40, 41, 66, 107, 108, 109, 110, 111, 112, 113, 114, 115, 194, 201, 202, 240, 246, 261, 267, 268, 312, 319, 477, 496, 574, 593], "independ": [1, 7, 584], "rest": [1, 8, 563, 750], "In": [1, 2, 3, 4, 6, 7, 8, 11, 13, 17, 18, 19, 42, 43, 106, 114, 115, 203, 267, 320, 419, 462, 475, 535, 563, 584, 616, 661, 745, 747], "given": [1, 3, 4, 7, 8, 9, 12, 17, 18, 26, 40, 41, 42, 58, 62, 106, 108, 109, 110, 111, 112, 114, 115, 117, 119, 182, 183, 184, 185, 190, 246, 250, 261, 267, 268, 299, 414, 419, 486, 488, 495, 501, 527, 534, 536, 537, 540, 545, 565, 566, 567, 569, 570, 576, 583, 584, 590, 609, 610, 611, 612, 613, 614, 642, 643, 654, 655, 665, 746, 749], "run": [1, 2, 3, 5, 6, 12, 13, 17, 18, 19, 21, 36, 66, 102, 105, 190, 200, 201, 203, 214, 219, 237, 240, 241, 242, 244, 245, 250, 254, 255, 313, 462, 467, 476, 477, 478, 480, 481, 482, 483, 496, 514, 559, 643, 655, 656, 657, 658, 659, 660, 661, 662, 663, 780, 782], "set": [1, 2, 3, 4, 7, 8, 11, 12, 14, 16, 17, 19, 26, 30, 39, 42, 43, 59, 60, 62, 63, 64, 66, 76, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 147, 154, 162, 176, 177, 182, 188, 190, 191, 192, 193, 195, 196, 197, 203, 204, 239, 244, 250, 251, 255, 259, 261, 267, 312, 313, 314, 341, 348, 349, 390, 414, 415, 416, 417, 418, 419, 461, 465, 466, 467, 470, 471, 477, 480, 482, 483, 486, 488, 495, 501, 502, 504, 506, 510, 513, 518, 520, 532, 540, 545, 566, 567, 568, 570, 588, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 616, 617, 656, 661, 662, 741, 742, 743, 744, 749], "creat": [1, 2, 3, 4, 7, 8, 12, 13, 15, 19, 21, 58, 60, 64, 65, 66, 77, 78, 79, 80, 103, 106, 108, 111, 112, 115, 165, 166, 167, 168, 169, 204, 255, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 319, 320, 327, 414, 419, 462, 466, 481, 486, 496, 571, 593, 645, 664, 665, 771], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 19, 20, 21, 26, 30, 31, 33, 37, 38, 42, 43, 59, 60, 62, 63, 64, 66, 76, 79, 80, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 239, 244, 246, 255, 256, 257, 259, 260, 261, 264, 266, 267, 268, 299, 312, 313, 314, 315, 316, 317, 318, 320, 348, 352, 353, 354, 355, 356, 357, 358, 414, 419, 462, 463, 465, 466, 467, 470, 471, 474, 475, 477, 478, 479, 480, 482, 483, 486, 487, 488, 489, 491, 492, 493, 495, 496, 499, 501, 511, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 535, 536, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 579, 580, 582, 584, 585, 588, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 632, 634, 636, 644, 650, 651, 652, 653, 656, 657, 658, 659, 660, 662, 663, 665, 666, 667, 671, 672, 673, 681, 682, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 741, 744, 745, 746, 747, 749, 779, 781, 782], "show": [1, 2, 3, 4, 7, 8, 17, 18, 19, 43], "mai": [1, 3, 8, 9, 17, 20, 26, 42, 60, 66, 106, 108, 109, 111, 113, 115, 162, 190, 212, 255, 261, 487, 491, 495, 496, 501, 572, 593, 662, 745], "sourc": [1, 3, 4, 6, 12, 13, 14, 15, 16, 18, 19, 21, 37, 104, 170, 238, 255, 261, 264, 265, 267, 268, 462, 464, 466, 468, 469, 478, 480, 481, 482, 483, 485, 547, 579], "individu": [1, 3, 7, 8, 11, 17, 19, 20, 24, 36, 77, 78, 79, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 237, 239, 244, 245, 250, 253, 254, 261, 267, 312, 349, 486, 488, 495, 538, 548, 571, 574, 582, 584, 587, 593, 607, 616, 617, 643, 657, 658, 659, 660, 662, 663, 747, 780], "4": [1, 2, 8, 9, 11, 12, 17, 18, 20, 26, 30, 31, 42, 106, 110, 112, 114, 115, 131, 156, 157, 158, 159, 160, 161, 163, 178, 182, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 244, 245, 248, 249, 251, 255, 258, 283, 285, 286, 313, 414, 432, 468, 475, 487, 488, 491, 493, 495, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 547, 563, 565, 566, 567, 569, 570, 592, 593, 607, 745, 751, 754, 755, 756, 757, 758, 781], "label": [1, 3, 8, 17, 19, 42, 60, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 172, 203, 261, 267, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310, 314, 316, 317, 318, 414, 461, 488, 539, 568, 650], "white": 1, "circl": 1, "convent": [1, 3, 4, 5, 7, 8, 106, 107, 108, 109, 110, 111, 112, 113, 261, 264, 267, 268, 313, 320, 348, 414, 419, 487], "throughout": [1, 3, 9, 62, 261], "codebas": [1, 750], "variabl": [1, 3, 6, 8, 9, 12, 19, 26, 31, 42, 61, 66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 261, 264, 266, 267, 268, 314, 315, 316, 317, 318, 319, 320, 327, 348, 382, 388, 395, 406, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 432, 436, 439, 442, 444, 447, 473, 474, 475, 486, 487, 495, 496, 533, 541, 578, 579, 589, 593, 607, 615, 616, 617, 626, 640, 642, 666], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 26, 29, 31, 37, 39, 40, 41, 43, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 80, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 162, 164, 170, 171, 188, 189, 193, 194, 202, 203, 238, 240, 243, 246, 250, 255, 259, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 348, 349, 360, 368, 369, 378, 385, 386, 394, 400, 402, 406, 407, 408, 412, 414, 419, 420, 425, 426, 432, 435, 436, 443, 448, 449, 450, 455, 460, 462, 464, 465, 466, 467, 468, 469, 474, 477, 478, 480, 481, 482, 483, 486, 487, 488, 495, 496, 501, 502, 514, 515, 535, 539, 541, 565, 566, 567, 568, 569, 570, 573, 574, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 616, 617, 644, 647, 648, 650, 651, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 744, 782], "singl": [1, 2, 3, 8, 17, 18, 19, 20, 21, 26, 31, 42, 61, 79, 81, 83, 84, 96, 97, 106, 109, 114, 115, 118, 120, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 201, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 250, 259, 261, 267, 274, 289, 312, 313, 315, 318, 319, 414, 419, 470, 477, 486, 495, 536, 538, 539, 547, 563, 571, 584, 616, 625, 643, 649, 650, 665, 667, 745, 747, 755, 756, 757, 758, 759, 760, 761], "manag": [1, 11, 106, 107, 108, 109, 110, 111, 112, 113, 114, 461], "overal": [1, 6, 43, 488], "process": [1, 2, 4, 6, 11, 21, 264, 266, 267, 462, 464, 466, 468, 469, 582], "pf": [1, 2, 3, 7, 11, 17, 18, 20, 74, 165, 313, 320, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 382, 383, 384, 462, 463, 467, 468, 469, 470, 471, 476, 483, 527, 535, 565, 569, 580, 581, 593, 616, 662, 740], "cpf": [1, 2, 3, 7, 11, 17, 18, 20, 262, 302, 308, 313, 320, 321, 322, 323, 324, 325, 326, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 382, 383, 384, 403, 409, 462, 463, 464, 469, 470, 471, 476, 480, 481, 499, 501, 502, 503, 505, 507, 508, 509, 512, 514, 515, 516, 517, 519, 593, 656, 740], "opf": [1, 2, 3, 6, 7, 11, 18, 19, 20, 21, 43, 50, 54, 55, 56, 70, 71, 81, 95, 115, 116, 121, 123, 154, 162, 163, 166, 168, 169, 188, 261, 263, 284, 287, 288, 290, 293, 294, 296, 298, 301, 303, 306, 309, 311, 313, 320, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 349, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 379, 380, 381, 387, 388, 389, 390, 391, 395, 396, 397, 401, 413, 462, 465, 466, 469, 470, 471, 472, 473, 476, 481, 482, 484, 486, 487, 495, 496, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 544, 550, 552, 555, 557, 562, 563, 565, 566, 569, 570, 593, 607, 615, 617, 620, 624, 627, 628, 631, 643, 657, 659, 660, 661, 663, 676, 677, 678, 679, 724, 728, 740, 741, 742, 743, 744, 747, 782], "ha": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 60, 103, 114, 115, 191, 192, 193, 203, 259, 267, 299, 312, 348, 414, 467, 474, 475, 487, 495, 501, 502, 506, 518, 536, 537, 538, 539, 547, 550, 563, 565, 566, 568, 569, 570, 571, 574, 584, 590, 593, 616, 617, 642, 667, 746, 747, 761], "method": [1, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 26, 30, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 143, 171, 172, 173, 174, 175, 178, 185, 203, 209, 218, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 302, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 439, 442, 443, 444, 447, 448, 449, 450, 451, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 485, 486, 491, 492, 493, 499, 540, 545, 555, 557, 589, 593, 607, 609, 610, 611, 612, 613, 614, 616, 653, 662, 749], "up": [1, 8, 12, 13, 17, 18, 19, 20, 42, 43, 66, 108, 109, 110, 111, 112, 114, 115, 239, 244, 255, 341, 390, 475, 477, 485, 495, 584, 607, 667, 741, 742, 743, 744], "correspnd": 1, "For": [1, 2, 3, 4, 6, 7, 8, 12, 17, 18, 19, 21, 43, 60, 62, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 163, 203, 240, 257, 259, 267, 306, 314, 315, 316, 317, 318, 414, 419, 470, 471, 472, 473, 480, 481, 482, 483, 497, 504, 506, 510, 513, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 536, 563, 564, 568, 580, 584, 592, 593, 616, 617, 744, 745, 782], "exampl": [1, 2, 3, 4, 6, 7, 11, 14, 16, 17, 18, 19, 26, 27, 28, 31, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 67, 68, 69, 70, 71, 72, 73, 82, 83, 84, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 197, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 240, 244, 245, 246, 248, 249, 250, 251, 252, 264, 267, 313, 319, 414, 419, 477, 480, 481, 482, 483, 484, 486, 487, 488, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 541, 546, 547, 548, 563, 564, 565, 566, 567, 569, 570, 571, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 593, 607, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 643, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 703, 741, 745, 747, 782], "follow": [1, 3, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 26, 28, 30, 31, 37, 38, 39, 40, 41, 42, 43, 45, 60, 62, 63, 64, 74, 77, 78, 79, 80, 81, 104, 105, 106, 109, 110, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 188, 190, 193, 197, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 239, 240, 246, 248, 249, 251, 252, 255, 256, 259, 261, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 312, 414, 415, 416, 417, 418, 478, 480, 481, 482, 483, 486, 487, 495, 496, 501, 514, 527, 528, 529, 530, 531, 533, 536, 538, 539, 546, 547, 548, 563, 567, 568, 570, 571, 573, 576, 577, 578, 593, 607, 609, 610, 611, 612, 613, 614, 615, 616, 648, 649, 650, 651, 656, 657, 658, 659, 660, 661, 662, 663, 667, 742, 743, 744, 745, 782], "9": [1, 2, 12, 17, 18, 20, 31, 43, 116, 123, 140, 141, 156, 157, 158, 160, 161, 162, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 255, 312, 414, 492, 495, 565, 566, 569, 570, 588, 593, 607, 638, 676, 677, 678, 679, 759, 760, 761, 762], "mpopt": [1, 2, 7, 12, 17, 18, 20, 66, 116, 121, 122, 123, 154, 162, 163, 165, 166, 167, 168, 169, 188, 261, 263, 266, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 306, 307, 310, 313, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 357, 358, 359, 362, 363, 364, 365, 366, 367, 369, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 480, 481, 482, 483, 487, 491, 492, 493, 499, 500, 501, 533, 538, 540, 545, 571, 576, 580, 585, 586, 593, 609, 610, 611, 612, 613, 614, 615, 616, 617, 620, 621, 622, 623, 624, 625, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 643, 653, 656, 657, 658, 659, 660, 661, 662, 663, 744, 745, 747, 749, 782], "mpoption": [1, 2, 12, 18, 20, 66, 76, 116, 121, 122, 123, 154, 162, 163, 165, 166, 167, 168, 169, 170, 188, 484, 540, 545, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 616, 617, 643, 653, 656, 657, 658, 659, 660, 662, 663, 702, 747, 749, 750, 782], "verbos": [1, 12, 18, 20, 26, 30, 31, 36, 66, 74, 101, 102, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 237, 250, 254, 255, 477, 496, 502, 593, 607, 644, 645, 647, 648, 650, 651, 747, 780], "option": [1, 3, 4, 5, 6, 7, 8, 11, 13, 17, 18, 19, 26, 30, 31, 38, 39, 40, 41, 59, 61, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 147, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 240, 244, 246, 248, 249, 250, 252, 255, 256, 259, 261, 266, 267, 268, 313, 314, 315, 316, 318, 319, 320, 328, 339, 341, 348, 390, 414, 415, 419, 462, 463, 464, 466, 467, 468, 469, 477, 478, 480, 481, 482, 483, 486, 487, 494, 495, 496, 499, 501, 507, 508, 514, 516, 528, 530, 532, 533, 536, 537, 538, 539, 540, 543, 545, 546, 547, 548, 550, 563, 564, 571, 573, 574, 575, 580, 582, 583, 584, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 629, 630, 632, 633, 634, 635, 636, 637, 643, 644, 647, 648, 649, 650, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 703, 743, 744, 745, 747, 749, 782], "task_opf": [1, 11, 257, 466, 478, 481, 482, 484], "case9": [1, 3, 4, 20, 480, 481, 482, 483, 656, 657, 658, 659, 660, 662, 663, 782], "step": [1, 3, 4, 7, 8, 11, 13, 17, 26, 115, 174, 178, 185, 190, 192, 193, 198, 199, 200, 202, 203, 209, 218, 255, 475, 495, 499, 500, 501, 502, 507, 508, 510, 511, 513, 515, 516, 518, 557, 593, 607, 656], "list": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 61, 63, 64, 107, 108, 109, 110, 111, 112, 113, 115, 165, 166, 167, 168, 169, 178, 190, 261, 263, 267, 268, 312, 414, 475, 487, 488, 489, 501, 502, 534, 535, 540, 545, 546, 547, 593, 642, 649, 650, 654, 665, 747, 749], "roughli": [1, 3, 261], "equival": [1, 17, 19, 117, 119, 252, 283, 319, 495], "perform": [1, 7, 26, 30, 31, 66, 171, 172, 173, 174, 178, 183, 184, 203, 216, 261, 511, 535, 537, 538, 540, 545, 582, 593, 609, 610, 611, 612, 613, 614, 638, 656, 668, 749], "when": [1, 2, 3, 4, 6, 8, 9, 12, 13, 17, 19, 29, 42, 43, 61, 66, 75, 77, 78, 106, 109, 110, 114, 115, 124, 155, 164, 170, 175, 189, 191, 192, 203, 240, 243, 244, 255, 257, 261, 264, 267, 319, 320, 414, 419, 462, 463, 474, 475, 486, 487, 496, 501, 504, 506, 510, 513, 518, 520, 536, 537, 584, 587, 589, 593, 608, 616, 617, 620, 656, 665, 741, 744], "It": [1, 3, 4, 6, 8, 17, 19, 20, 21, 42, 74, 108, 111, 112, 115, 246, 255, 261, 264, 475, 481, 486, 488, 491, 492, 493, 501, 510, 513, 528, 535, 536, 539, 550, 563, 651, 747], "defin": [1, 3, 4, 6, 7, 8, 11, 12, 17, 19, 20, 26, 31, 42, 43, 59, 60, 64, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 182, 183, 184, 185, 188, 190, 198, 199, 200, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 248, 258, 259, 261, 262, 266, 267, 268, 294, 297, 305, 315, 318, 320, 349, 414, 415, 419, 486, 487, 488, 495, 501, 514, 535, 541, 546, 547, 550, 565, 566, 567, 568, 569, 570, 574, 584, 589, 593, 607, 616, 617, 626, 627, 628, 656, 661, 667, 674, 741, 742, 745], "well": [1, 2, 3, 8, 17, 19, 77, 78, 106, 115, 239, 319, 414, 415, 462, 466, 473, 478, 491, 492, 493, 528, 530, 535, 536, 537, 539, 540, 545, 563, 564, 568, 593, 609, 610, 611, 612, 613, 614, 616, 651, 696, 741, 749], "explicitli": [1, 8, 13, 17, 203, 415, 593, 616], "actual": [1, 6, 11, 26, 109, 182, 183, 184, 185, 246, 248, 249, 252, 268, 419, 568, 742, 745], "code": [1, 7, 13, 17, 18, 19, 20, 26, 107, 108, 109, 110, 111, 112, 113, 115, 117, 159, 160, 163, 170, 171, 172, 173, 174, 175, 178, 182, 184, 185, 207, 208, 209, 218, 219, 240, 241, 242, 255, 259, 343, 344, 345, 346, 352, 466, 479, 496, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 547, 568, 582, 593, 615, 616, 670, 671, 672, 673, 692, 694, 701, 754, 782], "thei": [1, 2, 4, 7, 8, 11, 12, 13, 17, 19, 38, 106, 109, 114, 115, 239, 248, 255, 256, 313, 315, 320, 486, 536, 537, 563, 564, 565, 566, 569, 570, 584], "return": [1, 2, 3, 4, 8, 11, 17, 19, 26, 29, 36, 40, 41, 59, 61, 63, 64, 75, 76, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 124, 154, 155, 160, 163, 164, 170, 172, 184, 189, 190, 193, 194, 202, 203, 211, 219, 237, 240, 243, 254, 258, 261, 264, 265, 267, 268, 313, 314, 315, 316, 317, 318, 319, 320, 348, 349, 372, 388, 414, 415, 419, 462, 464, 466, 468, 474, 475, 478, 479, 480, 481, 482, 483, 486, 494, 495, 498, 499, 501, 515, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 563, 564, 571, 572, 573, 574, 575, 580, 581, 582, 583, 584, 585, 586, 587, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 624, 626, 641, 642, 646, 647, 649, 650, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 683, 744, 745, 746, 747, 748, 749, 780], "call": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 26, 29, 30, 31, 38, 61, 75, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 189, 190, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 239, 240, 243, 244, 245, 246, 248, 249, 251, 252, 256, 257, 259, 260, 261, 264, 266, 267, 268, 315, 316, 317, 319, 320, 348, 414, 415, 418, 419, 426, 462, 463, 464, 465, 466, 467, 468, 469, 474, 475, 477, 480, 481, 482, 483, 486, 487, 501, 514, 515, 532, 535, 536, 537, 541, 563, 564, 579, 608, 616, 617, 654, 656, 657, 658, 659, 660, 661, 662, 663, 747], "them": [1, 2, 3, 8, 17, 19, 20, 43, 77, 78, 96, 97, 98, 100, 114, 115, 116, 117, 119, 121, 122, 123, 154, 162, 188, 255, 261, 267, 313, 415, 418, 477, 574, 741, 742, 743, 744, 747], "overridden": [1, 2, 3, 11, 17, 18, 19, 63, 114, 182, 259, 313, 470, 471, 593], "subclass": [1, 2, 3, 4, 7, 8, 11, 12, 19, 106, 107, 114, 261, 262, 263, 264, 267, 268, 312, 314, 315, 320, 321, 324, 329, 334, 339, 342, 347, 348, 414, 415, 419, 462, 466, 475, 486, 753], "main": [1, 2, 3, 4, 6, 19, 26, 31, 37, 104, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 261, 267, 268, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 477, 480, 481, 482, 483], "specifi": [1, 2, 8, 11, 12, 17, 19, 26, 30, 31, 39, 40, 41, 59, 60, 61, 62, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 170, 179, 181, 182, 183, 184, 185, 190, 194, 201, 202, 203, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 246, 252, 259, 260, 265, 267, 268, 307, 314, 315, 318, 319, 414, 419, 462, 481, 486, 488, 491, 492, 493, 494, 498, 501, 514, 536, 537, 539, 541, 548, 550, 563, 564, 568, 573, 580, 584, 590, 593, 607, 616, 617, 624, 642, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 742, 744, 745, 746], "help": [1, 6, 21, 30, 37, 66, 104, 106, 114, 115, 122, 238, 255, 485, 486, 488, 496, 533, 593, 615, 616], "both": [1, 3, 6, 7, 8, 11, 17, 18, 19, 43, 65, 66, 78, 79, 80, 109, 115, 246, 252, 314, 315, 316, 317, 318, 319, 320, 464, 470, 471, 479, 495, 536, 548, 550, 563, 565, 572, 576, 656, 667, 744, 745], "after": [1, 2, 13, 17, 114, 116, 121, 122, 123, 154, 162, 188, 190, 261, 264, 267, 462, 463, 465, 466, 467, 487, 501, 565, 566, 567, 569, 570, 579, 662, 667, 668], "itself": [1, 8, 60, 170, 267, 320, 414, 667, 744], "also": [1, 3, 4, 6, 7, 8, 9, 11, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 40, 41, 42, 43, 59, 62, 66, 75, 76, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 237, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 294, 312, 313, 314, 315, 316, 317, 318, 319, 320, 346, 348, 414, 415, 416, 417, 418, 419, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 491, 492, 493, 495, 499, 501, 504, 506, 507, 508, 510, 513, 514, 518, 520, 521, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 580, 581, 582, 583, 584, 585, 587, 588, 589, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 642, 645, 646, 647, 648, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 668, 675, 741, 742, 743, 744, 745, 747, 748, 749, 780], "updat": [1, 3, 4, 6, 8, 11, 19, 26, 43, 59, 66, 171, 174, 175, 178, 190, 193, 201, 202, 203, 245, 261, 264, 267, 268, 302, 308, 313, 320, 326, 348, 351, 359, 362, 365, 366, 367, 369, 373, 374, 375, 376, 377, 386, 389, 391, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 462, 463, 464, 466, 468, 469, 487, 501, 502, 510, 513, 514, 515, 537, 564, 582, 593, 611, 614, 639, 645, 647, 650, 664, 748, 749], "basic": [1, 255, 474], "dmc_class": [1, 18, 313, 462, 466, 470, 471, 473], "dm_converter_mpc2": [1, 3, 4, 257, 261, 264, 266, 268, 484, 765], "v2": [1, 17, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 527], "dm_class": [1, 18, 313, 462, 470, 471, 473], "data_model_opf": [1, 3, 257, 306, 484], "nm_class": [1, 18, 313, 462, 470, 471], "net_model_acp": [1, 8, 257, 484], "ac": [1, 6, 7, 9, 12, 18, 20, 43, 166, 168, 259, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 366, 370, 371, 372, 373, 374, 376, 380, 381, 382, 383, 384, 389, 390, 392, 396, 398, 403, 404, 409, 410, 415, 416, 417, 419, 421, 422, 423, 427, 428, 429, 430, 433, 434, 437, 438, 439, 440, 441, 444, 445, 446, 451, 452, 453, 456, 457, 458, 465, 467, 470, 471, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 544, 593, 607, 615, 616, 620, 621, 622, 623, 629, 630, 632, 634, 636, 656, 660, 662, 663, 717, 719, 722, 729, 779, 781, 782], "polar": [1, 2, 7, 8, 18, 20, 314, 315, 317, 320, 324, 325, 326, 334, 335, 336, 337, 338, 345, 346, 352, 356, 357, 358, 364, 371, 374, 381, 384, 417, 419, 423, 428, 430, 434, 438, 441, 446, 453, 458, 470, 471, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 593, 609, 611, 612, 614, 773, 775], "mm_class": [1, 12, 18, 313, 462, 470, 471, 472, 473], "math_model_opf_acp": [1, 7, 17, 257, 335, 338, 484], "dmc": [1, 3, 4, 261, 264, 267, 462, 463, 465, 466], "build": [1, 2, 5, 6, 19, 20, 21, 66, 108, 111, 112, 115, 212, 239, 261, 264, 267, 320, 331, 333, 336, 338, 340, 348, 414, 415, 418, 419, 421, 424, 432, 436, 439, 442, 444, 447, 448, 450, 451, 454, 456, 459, 460, 462, 463, 484, 486, 489, 580, 581, 582, 583, 584, 585, 586, 587, 593], "dm": [1, 3, 4, 7, 8, 12, 17, 19, 43, 261, 262, 263, 264, 265, 266, 267, 268, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 302, 304, 305, 306, 307, 308, 310, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 442, 444, 447, 448, 450, 451, 454, 456, 459, 460, 462, 463, 464, 465, 466, 467, 468, 478, 480, 481, 482, 483], "nm": [1, 7, 8, 12, 17, 19, 315, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 442, 444, 447, 448, 450, 451, 454, 456, 459, 460, 462, 463, 464, 465, 466, 467, 468], "mm": [1, 7, 8, 9, 12, 17, 19, 315, 320, 321, 324, 327, 348, 349, 353, 356, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 419, 462, 463, 464, 466, 467, 468, 486], "solve_opt": [1, 7, 320, 328, 339, 341, 347], "get": [1, 2, 4, 12, 14, 16, 17, 19, 37, 43, 61, 62, 104, 114, 115, 238, 255, 259, 260, 261, 267, 268, 314, 315, 316, 317, 318, 348, 414, 415, 416, 417, 419, 462, 466, 496, 566, 567, 570, 643, 782], "network_model_x_soln": [1, 7, 320, 462, 463, 467], "soln": [1, 17, 107, 108, 109, 110, 111, 112, 113, 115, 195, 196, 415, 418, 419, 462, 503, 505, 509, 512, 517, 519, 639], "port_inj_soln": [1, 415, 418], "comput": [1, 6, 8, 12, 26, 66, 109, 111, 115, 156, 157, 158, 159, 160, 161, 171, 179, 180, 182, 183, 184, 185, 204, 205, 259, 315, 316, 317, 318, 390, 415, 418, 486, 499, 507, 508, 511, 516, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 548, 565, 584, 585, 590, 593, 611, 614, 618, 620, 622, 629, 632, 634, 636, 643, 745, 746, 747], "data_model_upd": [1, 7, 19, 267, 320, 348], "four": [1, 2, 17, 20, 43, 115, 527, 528, 530, 754], "consist": [1, 2, 3, 8, 9, 11, 17, 19, 39, 43, 106, 108, 111, 112, 115, 419, 464, 466, 468, 486, 491, 492, 493, 501, 535, 667], "hold": [1, 17, 19, 111, 120, 203, 312, 495], "That": [1, 7, 8, 12, 13, 17, 19, 20, 111, 117, 119, 170, 260, 265, 267, 268, 314, 315, 316, 317, 318, 320, 419, 475], "etc": [1, 3, 13, 17, 18, 19, 20, 24, 66, 74, 106, 114, 171, 179, 180, 181, 190, 204, 205, 206, 261, 267, 314, 320, 462, 474, 495, 501, 535, 536, 563, 593, 624, 631, 656, 657, 658, 659, 660, 662, 663, 744], "associ": [1, 6, 7, 8, 18, 106, 547, 736], "valid": [1, 3, 61, 63, 64, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 165, 166, 167, 168, 169, 170, 240, 258, 267, 268, 319, 348, 414, 419, 548, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 649, 650], "field": [1, 2, 4, 14, 16, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 202, 203, 204, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 243, 259, 266, 267, 268, 320, 348, 388, 395, 414, 419, 463, 466, 486, 487, 488, 495, 501, 502, 504, 506, 514, 518, 520, 533, 537, 538, 539, 546, 547, 548, 564, 571, 574, 586, 593, 603, 607, 608, 615, 616, 617, 648, 650, 651, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 674, 741, 742, 743, 744, 745], "identifi": [1, 3, 17, 30, 106, 114, 115, 240, 261, 264, 265, 267, 414, 462, 488, 494, 495], "can": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 26, 31, 37, 42, 60, 62, 63, 64, 66, 77, 78, 79, 80, 96, 97, 98, 100, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 156, 157, 158, 159, 160, 161, 170, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 193, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 240, 246, 248, 255, 261, 267, 268, 312, 313, 315, 316, 318, 319, 320, 414, 419, 462, 474, 475, 478, 480, 481, 482, 483, 486, 487, 490, 495, 496, 501, 502, 514, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 536, 537, 538, 539, 540, 541, 545, 548, 563, 564, 568, 580, 582, 584, 587, 588, 592, 593, 616, 617, 620, 641, 643, 653, 654, 656, 657, 658, 659, 660, 662, 663, 744, 745, 747, 749, 751, 782], "befor": [1, 2, 3, 4, 7, 8, 17, 19, 106, 114, 115, 170, 190, 246, 252, 259, 261, 462, 464, 466, 468, 487, 501, 532, 563, 579, 665, 668], "its": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 21, 26, 43, 109, 110, 112, 114, 115, 171, 173, 175, 178, 182, 183, 184, 185, 190, 203, 261, 263, 264, 267, 268, 314, 348, 414, 416, 417, 418, 419, 477, 480, 481, 482, 483, 504, 520, 549, 568, 656], "simpli": [1, 2, 3, 4, 6, 8, 9, 11, 17, 18, 20, 62, 108, 111, 112, 115, 268, 317, 320, 486, 535, 537, 538, 539, 564, 620], "loop": [1, 3, 4, 7, 8, 190, 462, 501, 588, 589], "possibli": [1, 4, 17, 19, 31, 106, 108, 109, 110, 111, 112, 113, 115, 118, 156, 157, 158, 159, 160, 161, 193, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 264, 414, 419, 538, 649, 650, 664], "access": [1, 6, 8, 18, 20, 21, 115, 239, 259, 260, 268, 474, 475, 486], "respect": [1, 3, 4, 7, 8, 9, 11, 17, 19, 20, 26, 30, 31, 108, 111, 115, 156, 157, 158, 159, 160, 161, 169, 182, 183, 184, 185, 196, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 267, 315, 414, 462, 490, 495, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 536, 539, 540, 545, 548, 550, 563, 585, 586, 587, 593, 649, 650, 666, 742, 744, 749], "nme": [1, 8, 17, 314, 315, 316, 317, 318, 348, 361, 363, 380, 382, 383, 419, 426], "pull": [1, 17], "dme": [1, 3, 4, 12, 17, 19, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 348, 389, 419], "describ": [1, 2, 3, 6, 7, 12, 17, 18, 19, 20, 26, 31, 43, 62, 106, 109, 110, 114, 115, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 419, 461, 486, 495, 536, 563, 616, 656], "more": [1, 3, 6, 7, 8, 9, 12, 17, 19, 40, 41, 43, 106, 108, 109, 111, 113, 114, 115, 158, 203, 207, 208, 215, 217, 220, 257, 259, 261, 264, 267, 268, 312, 313, 314, 315, 316, 317, 318, 320, 348, 414, 419, 462, 466, 470, 471, 472, 473, 474, 487, 488, 513, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 616, 617, 641, 653, 656, 657, 658, 659, 660, 662, 663, 747, 781], "detail": [1, 3, 4, 8, 9, 17, 19, 20, 21, 26, 30, 31, 36, 42, 43, 44, 45, 59, 60, 62, 66, 74, 81, 82, 83, 84, 102, 106, 109, 110, 114, 115, 116, 121, 123, 154, 156, 158, 161, 162, 175, 182, 184, 190, 191, 192, 194, 201, 203, 213, 215, 217, 220, 221, 237, 250, 254, 255, 257, 260, 261, 264, 267, 268, 313, 314, 315, 316, 317, 318, 320, 414, 419, 470, 471, 472, 473, 486, 494, 495, 496, 501, 504, 506, 510, 513, 514, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 544, 545, 547, 588, 593, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 643, 645, 656, 657, 659, 660, 663, 670, 674, 675, 676, 677, 678, 679, 680, 749, 762, 780], "summari": [1, 3, 17, 18, 20, 74, 79, 80, 96, 97, 98, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 244, 245, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 302, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 439, 442, 443, 444, 447, 448, 449, 450, 451, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 486, 497, 593, 607], "inherit": [1, 2, 3, 4, 7, 8, 17, 18, 19, 260, 267, 268, 314, 315, 316, 317, 318, 320, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 414, 416, 417, 418, 419, 422, 423, 424, 427, 428, 429, 430, 431, 433, 434, 437, 438, 440, 441, 442, 445, 446, 448, 450, 452, 453, 454, 457, 458, 459, 460, 462, 463, 466, 470, 471, 475, 750], "repres": [1, 6, 8, 12, 17, 20, 42, 60, 106, 115, 120, 315, 414, 419, 547, 548, 572, 578, 593, 616, 617], "abstract": [1, 7, 17, 19, 107, 114, 264, 267, 268, 313, 314, 315, 320, 321, 324, 327, 328, 329, 334, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 368, 372, 378, 379, 382, 385, 388, 394, 395, 402, 408, 414, 415, 419, 420, 421, 425, 426, 432, 435, 436, 439, 443, 444, 449, 451, 455, 456, 462], "displai": [1, 3, 17, 19, 26, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 246, 248, 249, 251, 252, 261, 264, 267, 283, 319, 320, 414, 419, 462, 474, 475, 477, 486, 496, 644, 645, 647, 648, 650, 651], "border": 1, "concret": [1, 3, 7, 8, 17, 19, 261, 264, 268, 314, 315, 316, 317, 318, 320, 414, 416, 417, 418], "doubl": [1, 26, 30, 31, 43, 62, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 240, 248, 259, 261, 268, 283, 284, 285, 286, 288, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 315, 316, 317, 318, 320, 390, 414, 415, 416, 417, 418, 419, 462, 467, 540, 580, 649, 650, 749], "signific": [1, 108, 115, 539], "portion": [1, 4, 20, 267, 315, 586, 616, 748, 760, 761], "implement": [1, 2, 3, 4, 6, 7, 8, 11, 14, 16, 17, 18, 19, 22, 23, 24, 25, 38, 42, 105, 106, 107, 109, 110, 114, 115, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 170, 174, 185, 190, 203, 209, 218, 238, 241, 242, 255, 256, 259, 260, 261, 264, 265, 267, 268, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310, 312, 314, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 337, 339, 341, 343, 344, 345, 346, 347, 348, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 419, 420, 421, 422, 424, 425, 426, 432, 435, 436, 443, 448, 449, 450, 455, 460, 462, 463, 464, 465, 466, 467, 468, 474, 479, 486, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 577, 593, 616, 641, 661, 724, 728, 741, 742, 743, 744], "greatli": 1, "reduc": [1, 7, 26, 582, 593], "effort": 1, "involv": [1, 2, 7, 8, 17, 19], "distinguish": [1, 190, 501], "pss": [1, 4, 264, 644, 645, 646, 647, 648, 649, 650, 651, 664], "raw": [1, 4, 212, 264, 466, 533, 593, 607, 615, 616, 624, 644, 645, 646, 647, 648, 649, 650, 651, 664], "dc": [1, 7, 9, 18, 43, 55, 66, 68, 69, 70, 71, 95, 163, 169, 259, 260, 266, 275, 294, 295, 296, 314, 318, 320, 339, 340, 347, 349, 359, 365, 367, 375, 377, 391, 393, 394, 395, 396, 397, 398, 399, 405, 411, 418, 424, 431, 442, 443, 444, 445, 446, 447, 454, 459, 465, 467, 471, 484, 532, 533, 534, 539, 547, 581, 583, 584, 593, 607, 616, 646, 657, 658, 659, 675, 687, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 730, 741, 742, 744, 768], "cartesian": [1, 2, 7, 8, 18, 21, 314, 315, 316, 321, 322, 323, 329, 330, 331, 332, 333, 343, 344, 352, 353, 354, 355, 363, 370, 373, 380, 383, 416, 422, 427, 429, 430, 433, 437, 440, 445, 452, 457, 470, 471, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 593, 610, 611, 612, 613, 614, 618, 619, 772, 774], "goe": [1, 106, 114], "which": [1, 2, 3, 4, 6, 7, 8, 12, 13, 17, 18, 19, 21, 26, 30, 40, 41, 42, 59, 60, 62, 63, 64, 79, 80, 108, 109, 111, 114, 115, 141, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 246, 252, 258, 262, 267, 312, 314, 315, 318, 320, 348, 414, 415, 419, 479, 486, 487, 488, 495, 496, 501, 504, 510, 513, 514, 520, 535, 536, 538, 539, 540, 541, 545, 547, 549, 550, 563, 572, 587, 593, 607, 609, 610, 611, 612, 613, 614, 616, 617, 620, 642, 643, 649, 650, 656, 657, 658, 659, 660, 661, 662, 663, 665, 667, 668, 744, 745, 749, 782], "element_contain": [1, 2, 3, 4, 7, 8, 257, 261, 264, 320, 414, 484], "mixin": [1, 306, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 484], "share": [1, 3, 5, 6, 8, 17, 19, 306, 320, 343, 344, 345, 346, 352, 469, 547], "mention": [1, 11, 12, 475, 744], "abov": [1, 2, 11, 12, 13, 17, 19, 20, 26, 31, 42, 43, 63, 106, 114, 115, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 239, 240, 256, 259, 475, 495, 550, 565, 566, 567, 569, 570, 576, 593, 607, 744, 745], "address": [1, 170, 475], "index": [1, 3, 4, 8, 9, 12, 13, 17, 19, 30, 59, 62, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 193, 194, 203, 259, 261, 267, 268, 283, 289, 291, 292, 295, 297, 299, 300, 304, 307, 310, 316, 319, 320, 390, 414, 415, 416, 417, 419, 474, 475, 486, 487, 488, 489, 491, 492, 493, 495, 501, 502, 535, 536, 537, 538, 539, 549, 563, 564, 565, 566, 567, 568, 569, 570, 579, 593, 609, 610, 611, 612, 613, 614, 624, 631, 632, 633, 634, 635, 638, 648, 650, 651, 656, 667, 668, 742, 744, 745], "suppli": [1, 26, 31, 79, 80, 106, 108, 109, 110, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 487, 536, 563, 573, 584, 593, 607, 643], "properti": [1, 2, 4, 6, 7, 8, 17, 19, 106, 107, 108, 109, 111, 112, 113, 114, 115, 258, 261, 264, 267, 274, 277, 278, 281, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 306, 307, 310, 312, 314, 315, 318, 320, 388, 395, 414, 415, 416, 417, 418, 419, 461, 462, 463, 464, 465, 466, 467, 468, 475, 485, 486], "element_class": [1, 2, 3, 4, 7, 8, 17, 19, 261, 264, 312], "sometim": [1, 3, 7, 108, 320], "certain": [1, 4, 8, 11, 30, 463], "across": [1, 7, 8, 42, 60, 62, 320, 380, 381, 383, 384, 469, 490, 576, 742], "wai": [1, 2, 6, 12, 17, 116, 121, 122, 123, 154, 162, 163, 188, 313, 474, 593, 616, 617, 741], "match": [1, 2, 4, 42, 60, 61, 66, 115, 156, 157, 158, 159, 160, 161, 179, 181, 246, 248, 250, 252, 255, 267, 319, 380, 381, 383, 384, 537, 564, 573, 639, 755, 756, 757, 758, 760, 761], "path": [1, 13, 14, 15, 16, 61, 77, 78, 79, 80, 246, 255, 314, 476, 477, 541, 589], "current": [1, 2, 7, 9, 14, 16, 19, 20, 21, 26, 29, 30, 43, 74, 75, 77, 78, 79, 80, 110, 115, 124, 154, 155, 162, 164, 175, 185, 189, 190, 192, 193, 195, 196, 198, 199, 200, 203, 207, 208, 209, 243, 283, 299, 315, 316, 317, 319, 322, 325, 328, 330, 331, 335, 336, 343, 345, 352, 354, 357, 379, 387, 401, 413, 414, 415, 462, 464, 466, 467, 468, 469, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 491, 495, 500, 501, 502, 503, 505, 507, 508, 509, 511, 512, 516, 517, 518, 519, 521, 522, 523, 524, 527, 528, 529, 541, 572, 586, 587, 588, 589, 593, 607, 608, 610, 611, 612, 620, 622, 623, 644, 664, 782], "approach": [1, 2, 17, 477], "util": [1, 21, 115, 238, 484], "first": [1, 2, 3, 4, 7, 8, 12, 17, 19, 26, 31, 43, 61, 62, 63, 64, 77, 78, 79, 80, 111, 112, 115, 118, 120, 154, 159, 165, 166, 168, 169, 184, 197, 201, 209, 210, 218, 240, 259, 313, 319, 414, 419, 474, 477, 480, 482, 483, 495, 501, 514, 521, 538, 539, 541, 574, 585, 616, 617, 641, 642, 648, 651, 656, 662, 667, 742], "we": [1, 3, 6, 8, 12, 13, 17, 18, 19, 106, 111, 114, 115, 117, 119, 255, 496, 589], "wrap": 1, "insid": [1, 312, 475], "inher": 1, "limit": [1, 3, 7, 11, 12, 17, 18, 19, 26, 31, 43, 74, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 191, 195, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 261, 283, 284, 288, 294, 296, 315, 316, 324, 361, 372, 373, 390, 422, 463, 465, 467, 473, 501, 503, 504, 509, 510, 512, 513, 519, 520, 565, 566, 569, 570, 576, 593, 607, 616, 617, 620, 621, 656, 661, 662, 674, 724, 742, 743, 744, 747, 748], "order": [1, 2, 7, 11, 17, 19, 26, 30, 31, 42, 43, 60, 61, 62, 81, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 162, 184, 188, 201, 259, 312, 314, 419, 466, 486, 487, 491, 492, 493, 495, 514, 533, 536, 537, 538, 539, 563, 564, 567, 571, 580, 581, 582, 584, 587, 593, 607, 615, 616, 638, 656, 657, 658, 659, 660, 662, 663], "backward": [1, 20, 62, 116, 121, 123, 154, 162, 538, 571, 580, 589, 593, 616, 617, 653, 745], "compat": [1, 20, 62, 111, 116, 121, 123, 154, 162, 466, 474, 479, 538, 571, 580, 593, 616, 617, 657, 658, 659, 660, 662, 663, 745, 782], "mechan": [1, 6, 18, 349, 741], "intern": [1, 3, 6, 17, 19, 62, 109, 114, 115, 170, 414, 419, 486, 487, 489, 495, 501, 533, 535, 536, 537, 538, 547, 563, 564, 571, 580, 581, 582, 584, 587, 615, 616, 624, 631, 653, 656, 657, 658, 659, 660, 662, 663, 682, 782], "all": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 26, 29, 31, 36, 42, 43, 60, 62, 63, 64, 65, 75, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 189, 190, 203, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 237, 240, 243, 248, 250, 254, 255, 258, 259, 261, 267, 268, 274, 283, 289, 291, 292, 295, 297, 299, 300, 306, 307, 310, 314, 315, 316, 317, 318, 320, 348, 350, 351, 352, 353, 356, 390, 414, 415, 416, 417, 418, 419, 462, 473, 477, 486, 487, 488, 490, 501, 504, 510, 514, 520, 522, 527, 528, 529, 530, 531, 534, 538, 539, 540, 545, 566, 568, 570, 571, 573, 574, 575, 579, 582, 587, 589, 593, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 620, 621, 624, 631, 646, 647, 650, 653, 656, 657, 658, 659, 660, 662, 663, 667, 744, 745, 749, 780], "even": [1, 2, 20, 21, 42, 43, 79, 80, 158, 190, 207, 208, 215, 217, 220, 501, 593, 607], "importantli": 1, "extens": [1, 5, 11, 14, 16, 17, 20, 21, 61, 240, 264, 331, 333, 336, 338, 340, 462, 470, 471, 472, 473, 478, 480, 481, 482, 483, 484, 558, 574, 664, 665, 666, 687, 741, 768, 769, 782], "suit": [1, 255], "second": [1, 3, 4, 7, 8, 12, 17, 18, 19, 20, 43, 63, 64, 79, 80, 111, 112, 116, 121, 122, 123, 154, 162, 188, 214, 219, 240, 255, 319, 419, 462, 480, 494, 498, 539, 543, 616, 641, 643, 656, 657, 658, 659, 660, 662, 663], "abl": [1, 42, 262, 477, 495], "make": [1, 7, 8, 13, 18, 19, 21, 59, 106, 114, 115, 240, 259, 261, 264, 297, 414, 419, 469, 477, 485, 495, 579], "full": [1, 7, 8, 12, 30, 42, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 170, 175, 192, 196, 203, 250, 314, 315, 316, 318, 349, 390, 414, 415, 419, 486, 499, 518, 534, 540, 545, 582, 584, 587, 593, 609, 610, 611, 612, 613, 614, 617, 656, 662, 749, 782], "scope": 1, "end": [1, 2, 8, 9, 12, 17, 18, 19, 26, 43, 66, 78, 106, 108, 109, 110, 111, 112, 113, 114, 115, 171, 173, 175, 176, 177, 178, 182, 183, 184, 185, 197, 203, 210, 240, 246, 250, 255, 267, 283, 284, 295, 296, 297, 310, 315, 318, 319, 320, 462, 474, 475, 486, 487, 490, 495, 498, 501, 527, 528, 530, 546, 547, 548, 565, 567, 569, 581, 616, 620, 621, 648, 649, 650, 651, 656, 657, 658, 659, 660, 662, 663, 665, 666], "take": [1, 4, 7, 8, 9, 12, 17, 18, 19, 43, 62, 108, 109, 110, 111, 112, 115, 190, 201, 202, 240, 320, 415, 418, 488, 501, 514, 521, 522, 523, 524, 525, 526, 528, 529, 541, 565, 568, 569, 573, 580, 592, 745], "advantag": [1, 17, 19], "capabl": [1, 19, 38, 239, 256, 291, 389, 390, 472, 495, 550, 570, 577, 616, 748], "add": [1, 2, 3, 4, 6, 7, 8, 13, 17, 18, 19, 21, 30, 39, 40, 41, 42, 59, 60, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 190, 255, 257, 261, 263, 264, 266, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 319, 320, 348, 349, 388, 395, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 431, 432, 436, 439, 442, 444, 447, 463, 464, 465, 466, 468, 470, 471, 473, 477, 486, 487, 488, 501, 568, 744], "multiphas": 1, "unbalanc": [1, 2, 3, 20, 261, 313, 470, 754], "hybrid": [1, 20, 593, 611, 614, 755, 756, 757, 758, 759, 760, 761, 778], "own": [1, 2, 3, 4, 6, 7, 8, 21, 173, 175, 190, 201, 202, 255, 256, 261, 267, 268, 348, 419, 501, 514, 539], "version": [1, 4, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 37, 38, 43, 75, 104, 114, 115, 116, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 163, 164, 189, 190, 238, 240, 241, 242, 243, 255, 256, 259, 262, 264, 265, 314, 462, 477, 484, 495, 501, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 574, 580, 582, 593, 607, 608, 645, 657, 658, 659, 660, 662, 663, 665, 745, 754, 782], "run_pf": [1, 2, 17, 18, 20, 476, 478, 481, 484, 778], "run_cpf": [1, 2, 17, 18, 20, 476, 478, 481, 484, 778], "run_opf": [1, 2, 12, 17, 18, 20, 476, 478, 481, 484, 778, 779, 782], "underscor": [1, 782], "One": [1, 8, 755, 756, 757, 758], "differ": [1, 2, 4, 7, 17, 19, 20, 26, 31, 42, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 190, 199, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 246, 248, 267, 283, 284, 320, 361, 363, 364, 365, 422, 469, 474, 487, 490, 495, 497, 501, 537, 565, 576, 588, 593, 607, 618, 619, 745], "remov": [1, 3, 13, 17, 19, 43, 261, 312, 477, 538, 542, 571, 580, 583, 593, 654, 744, 745], "offlin": [1, 3, 7, 17, 19, 261, 267, 348, 579], "equip": [1, 624, 631], "renumb": [1, 538], "buse": [1, 2, 3, 4, 8, 17, 18, 19, 20, 43, 60, 74, 261, 267, 285, 286, 291, 292, 295, 369, 373, 374, 375, 376, 377, 488, 489, 491, 492, 493, 494, 499, 501, 507, 508, 511, 513, 516, 527, 528, 529, 530, 531, 534, 538, 539, 540, 543, 545, 563, 566, 571, 576, 584, 587, 588, 589, 593, 609, 610, 611, 612, 613, 614, 632, 633, 634, 635, 638, 647, 656, 667, 744, 745, 749, 755, 756, 757, 758, 759, 760, 761], "consecut": [1, 4, 17, 62, 489, 538, 571, 580, 581, 582, 584, 587], "ext2int": [1, 484, 487, 533, 536, 537, 564, 571, 582, 587, 615, 616, 631, 681, 682, 688, 750], "int2ext": [1, 484, 487, 538, 563, 564, 681, 682, 688, 741, 742, 743, 744, 750], "result": [1, 2, 3, 8, 11, 59, 74, 77, 78, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 160, 179, 181, 190, 193, 219, 220, 244, 245, 246, 248, 249, 252, 255, 261, 264, 315, 320, 414, 415, 462, 464, 466, 468, 475, 477, 478, 480, 481, 482, 483, 487, 495, 496, 501, 502, 504, 506, 510, 513, 518, 520, 533, 539, 548, 573, 579, 583, 593, 607, 615, 616, 617, 624, 643, 644, 653, 656, 657, 658, 659, 660, 661, 662, 663, 685, 686, 741, 742, 743, 744, 747], "callback": [1, 2, 190, 191, 192, 193, 201, 203, 324, 466, 484, 487, 495, 501, 502, 503, 504, 505, 506, 509, 510, 512, 513, 514, 517, 518, 519, 520, 538, 593, 654, 655, 656, 685, 686, 724, 728, 736, 741, 742, 743, 744], "necessari": [1, 3, 7, 17, 113, 115, 261, 267, 348, 467, 495, 510, 513, 665, 666], "so": [1, 2, 3, 4, 7, 8, 12, 13, 17, 18, 20, 21, 26, 59, 170, 255, 258, 260, 268, 419, 470, 471, 475, 496, 642, 667], "motiv": 1, "behind": [1, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "facilit": [1, 21], "who": [1, 6, 107, 108, 109, 111, 113, 246], "want": [1, 6, 17, 77, 78, 79, 80, 162, 582], "possibl": [1, 3, 19, 30, 43, 60, 77, 78, 79, 114, 592, 616, 617, 649, 656, 667, 744, 747], "overrid": [1, 2, 11, 12, 17, 18, 19, 106, 115, 116, 121, 122, 123, 154, 156, 157, 158, 160, 161, 162, 173, 182, 183, 184, 188, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 302, 308, 347, 363, 462, 474, 585, 593, 607, 653, 656, 657, 658, 659, 660, 662, 663, 703, 744], "behavior": [1, 2, 76, 170, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 667, 744], "complet": [1, 3, 7, 11, 12, 17, 18, 19, 21, 60, 108, 109, 111, 113, 115, 178, 196, 203, 261, 462, 488, 517, 538, 571, 593, 744, 782], "often": [1, 9, 74], "see": [1, 2, 3, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 40, 41, 42, 43, 44, 45, 59, 60, 62, 66, 74, 75, 76, 81, 82, 83, 84, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 237, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 294, 312, 313, 314, 315, 316, 317, 318, 319, 320, 348, 414, 415, 416, 417, 418, 419, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 491, 492, 493, 495, 496, 499, 501, 504, 506, 507, 508, 510, 513, 514, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 580, 581, 582, 583, 584, 585, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 643, 645, 646, 647, 648, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 668, 670, 674, 675, 676, 677, 678, 679, 680, 741, 742, 743, 744, 745, 747, 748, 749, 750, 762, 780, 782], "essenti": [1, 3, 19, 313, 414], "modif": [1, 2, 6, 12, 60, 81, 313, 462, 568, 744], "addit": [1, 2, 3, 8, 12, 17, 18, 19, 20, 21, 30, 39, 42, 43, 62, 64, 105, 106, 109, 114, 261, 267, 313, 414, 478, 480, 481, 482, 483, 487, 488, 495, 533, 536, 537, 539, 547, 550, 563, 564, 566, 567, 568, 577, 615, 616, 617, 647, 655, 657, 659, 660, 661, 663, 675, 747, 782], "made": [1, 3, 58, 60, 62, 108, 109, 110, 111, 112, 115, 240, 538, 568], "default": [1, 3, 4, 5, 6, 11, 12, 17, 18, 19, 26, 30, 31, 36, 40, 41, 61, 62, 63, 64, 66, 76, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 188, 190, 194, 201, 203, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 237, 244, 246, 250, 254, 259, 261, 262, 263, 267, 268, 313, 315, 318, 321, 324, 347, 348, 414, 415, 416, 417, 418, 419, 462, 463, 465, 467, 474, 477, 478, 481, 486, 495, 496, 501, 514, 536, 540, 545, 563, 570, 573, 575, 584, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 616, 617, 643, 644, 645, 647, 648, 650, 651, 653, 656, 657, 658, 659, 660, 662, 663, 667, 708, 717, 744, 745, 749, 779, 780, 782], "henc": [1, 43], "earli": 1, "cycl": [1, 7, 547], "should": [1, 6, 11, 13, 17, 19, 61, 109, 110, 115, 163, 165, 166, 168, 169, 179, 181, 190, 255, 261, 267, 320, 419, 487, 496, 501, 537, 539, 564, 579, 584, 607, 616, 617, 632, 633, 634, 635, 667, 755, 756, 757, 758, 760, 761], "execut": [1, 5, 116, 121, 122, 123, 154, 162, 188, 201, 244, 462, 477, 514, 624, 655], "successfulli": [1, 533, 615, 616], "command": [1, 6, 21, 37, 104, 114, 115, 238, 255, 476, 477, 486, 782], "without": [1, 3, 4, 6, 7, 8, 9, 29, 43, 75, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 155, 164, 189, 243, 267, 501, 539, 608], "With": [2, 29, 43, 75, 108, 111, 112, 115, 116, 121, 122, 123, 124, 154, 155, 162, 164, 188, 189, 243, 477, 486, 495, 585, 608, 744], "object": [2, 5, 6, 12, 17, 18, 19, 25, 26, 31, 66, 74, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 179, 180, 181, 182, 183, 184, 185, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 261, 262, 263, 264, 267, 268, 284, 288, 294, 296, 304, 305, 306, 312, 313, 314, 315, 319, 320, 321, 324, 327, 328, 329, 334, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 414, 415, 416, 417, 418, 419, 462, 464, 465, 466, 468, 469, 474, 475, 478, 480, 481, 482, 483, 486, 487, 533, 565, 566, 569, 570, 615, 616, 624, 631, 643, 747], "architectur": [2, 5], "outlin": [2, 3], "section": [2, 3, 6, 7, 8, 9, 12, 17, 18, 19, 116, 121, 123, 154, 159, 250, 255, 261, 263, 264, 267, 268, 284, 287, 288, 290, 293, 294, 296, 297, 298, 301, 303, 306, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 348, 414, 419, 462, 470, 471, 472, 473, 593, 644, 648, 650, 651, 750, 782], "customiz": 2, "increas": [2, 43, 203, 516], "dramat": 2, "ones": [2, 9, 17, 19, 486, 521, 525, 528, 529, 530, 531, 593], "import": [2, 3, 6, 19, 43, 261, 264, 265, 268, 276, 279], "understand": [2, 6], "how": [2, 3, 4, 8, 19, 60, 114, 170, 255, 257, 267, 477, 487, 584, 649, 650], "select": [2, 9, 18, 30, 43, 115, 163, 165, 166, 167, 168, 169, 175, 314, 315, 316, 318, 415, 416, 417, 419, 463, 465, 467, 477, 499, 584, 656, 747], "instanti": [2, 3, 4, 7, 8, 261, 264, 462], "There": [2, 3, 8, 11, 12, 17, 42, 108, 116, 121, 122, 123, 154, 162, 188, 255, 477, 495], "sever": [2, 6, 17, 255, 495, 537], "below": [2, 3, 12, 17, 19, 20, 37, 59, 62, 63, 64, 104, 108, 109, 110, 111, 113, 115, 182, 203, 238, 475, 486, 495, 501, 521, 527, 535, 536, 550, 563, 565, 566, 567, 569, 570, 576, 577, 616, 617, 747], "illustr": [2, 4, 7, 8, 11, 19, 114, 487], "invok": [2, 7, 190, 501, 514, 538], "fact": [2, 17, 19], "simpl": [2, 3, 7, 8, 17, 20, 66, 79, 80, 106, 109, 115, 480, 482, 483, 532, 643, 741, 777], "wrapper": [2, 6, 31, 38, 156, 157, 158, 159, 160, 161, 173, 175, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 480, 481, 482, 483, 484, 532], "run_mp": [2, 6, 476, 480, 482, 483, 484, 777], "onli": [2, 4, 7, 8, 12, 13, 17, 18, 21, 58, 59, 64, 106, 108, 109, 110, 111, 112, 114, 115, 116, 121, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 190, 194, 203, 218, 244, 246, 252, 255, 267, 268, 319, 348, 414, 419, 464, 466, 468, 470, 471, 474, 475, 485, 501, 521, 538, 547, 548, 550, 568, 571, 584, 585, 593, 607, 616, 617, 620, 621, 641, 642, 667, 745], "valu": [2, 3, 7, 8, 18, 19, 26, 29, 30, 31, 42, 45, 58, 59, 60, 61, 62, 63, 64, 66, 74, 75, 76, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 243, 248, 258, 259, 261, 267, 268, 283, 297, 302, 308, 314, 319, 320, 414, 415, 419, 462, 464, 465, 466, 468, 469, 477, 486, 487, 488, 489, 495, 496, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 511, 512, 514, 515, 516, 517, 518, 519, 529, 531, 533, 536, 537, 539, 542, 543, 546, 547, 550, 563, 564, 566, 567, 568, 573, 580, 582, 585, 587, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 615, 616, 617, 620, 622, 629, 643, 656, 662, 667, 744, 745, 746, 747, 748], "task_class": [2, 313, 478, 481], "argument": [2, 3, 4, 7, 8, 18, 26, 29, 31, 61, 63, 64, 66, 75, 76, 77, 78, 79, 107, 109, 110, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 189, 190, 191, 192, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 243, 246, 252, 267, 268, 319, 474, 477, 480, 482, 483, 486, 487, 494, 501, 504, 506, 510, 513, 514, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 536, 537, 538, 539, 541, 544, 550, 556, 563, 564, 579, 582, 583, 585, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 616, 617, 643, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 747], "handl": [2, 4, 7, 8, 17, 19, 26, 77, 78, 79, 80, 106, 107, 109, 110, 114, 115, 157, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 191, 192, 201, 202, 203, 214, 238, 263, 265, 266, 267, 268, 306, 312, 313, 314, 315, 319, 324, 331, 333, 336, 338, 340, 348, 349, 350, 352, 419, 462, 463, 467, 469, 473, 477, 478, 479, 481, 495, 496, 499, 501, 504, 506, 510, 513, 516, 518, 520, 521, 539, 584, 607, 609, 610, 611, 612, 613, 614, 654], "constructor": [2, 3, 4, 7, 8, 17, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 259, 261, 262, 263, 265, 312, 313, 319, 321, 324, 329, 331, 333, 334, 336, 338, 339, 340, 342, 347, 416, 417, 418, 461, 462, 463, 465, 467, 474, 478, 479, 481, 486], "pass": [2, 3, 4, 7, 8, 11, 12, 15, 17, 18, 20, 26, 61, 63, 64, 116, 121, 122, 123, 154, 162, 170, 173, 178, 182, 183, 184, 185, 188, 190, 203, 240, 246, 248, 249, 250, 252, 255, 267, 320, 462, 472, 474, 478, 487, 501, 514, 536, 537, 538, 541, 563, 564, 593, 616, 617, 649, 782], "mean": [2, 3, 17, 19, 20, 42, 60, 108, 114, 115, 173, 175, 203, 299, 307, 419, 535, 565, 566, 567, 568, 569, 570, 593, 616, 617], "either": [2, 3, 6, 8, 17, 26, 42, 61, 66, 106, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 123, 154, 159, 162, 188, 192, 218, 261, 320, 414, 475, 527, 537, 539, 550, 564, 574, 580, 593, 616, 617, 643, 649, 656, 657, 658, 659, 660, 662, 663, 665, 667, 745, 747], "two": [2, 3, 4, 5, 6, 7, 8, 12, 17, 19, 43, 79, 80, 109, 110, 111, 112, 115, 169, 246, 248, 252, 261, 267, 319, 473, 475, 477, 480, 493, 495, 497, 529, 531, 538, 547, 550, 571, 580, 585, 589, 642, 646, 647, 648, 650, 750], "descript": [2, 3, 4, 6, 8, 12, 17, 19, 20, 21, 30, 74, 114, 115, 203, 240, 259, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 487, 488, 547, 593, 607, 656, 661], "dm_converter_class": [2, 313, 462, 463], "final": [2, 17, 19, 20, 26, 31, 60, 66, 106, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 264, 414, 462, 501, 533, 536, 539, 540, 545, 563, 609, 610, 611, 612, 613, 614, 615, 616, 745, 749], "data_model_class": [2, 313, 462], "network_model_class": [2, 313, 462], "math_model_class": [2, 313, 462], "dm_converter_class_mpc2_default": [2, 462, 466], "data_model_class_default": [2, 462, 463, 465], "network_model_class_default": [2, 462, 465, 467], "math_model_class_default": [2, 462, 463, 465, 466, 467], "tabl": [2, 4, 6, 12, 13, 18, 19, 20, 39, 40, 41, 42, 54, 55, 56, 57, 60, 62, 63, 64, 259, 260, 261, 267, 268, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 312, 313, 319, 464, 466, 468, 470, 471, 472, 473, 474, 475, 479, 488, 535, 547, 561, 568, 666, 683, 767], "last": [2, 7, 108, 111, 115, 190, 198, 199, 200, 203, 313, 414, 474, 475, 501, 579, 642, 648, 651, 654], "cell": [2, 3, 4, 11, 12, 13, 14, 16, 17, 39, 42, 61, 62, 63, 64, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 170, 172, 190, 193, 201, 202, 203, 204, 207, 208, 209, 246, 250, 252, 259, 261, 267, 268, 297, 312, 313, 314, 315, 316, 317, 318, 319, 320, 390, 414, 419, 462, 474, 478, 480, 481, 482, 483, 486, 496, 498, 501, 502, 514, 536, 537, 539, 542, 543, 546, 547, 563, 564, 593, 625, 626, 644, 645, 647, 648, 649, 650, 651, 665, 666, 668], "arrai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 39, 42, 60, 61, 62, 63, 64, 75, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 124, 155, 164, 170, 171, 172, 174, 176, 177, 178, 189, 190, 193, 194, 197, 201, 202, 203, 204, 207, 208, 209, 210, 240, 243, 246, 248, 249, 250, 251, 252, 259, 261, 264, 265, 267, 268, 297, 312, 313, 314, 315, 316, 317, 318, 319, 320, 348, 390, 414, 419, 462, 474, 478, 480, 481, 482, 483, 486, 496, 498, 501, 502, 514, 536, 537, 539, 542, 543, 546, 547, 563, 564, 593, 608, 625, 626, 644, 645, 647, 648, 649, 650, 651, 656, 665, 666, 668], "popul": [2, 17, 19, 466, 487, 655], "parent": [2, 12, 17, 19, 170, 267, 284, 287, 288, 290, 293, 294, 296, 298, 301, 302, 303, 308, 309, 311, 314, 415, 418, 419, 464, 466, 468], "runtim": [2, 214, 219], "done": [2, 3, 7, 8, 17, 19, 81, 170, 190, 191, 192, 260, 475, 501, 504, 506, 510, 513, 518, 520, 641, 685, 686], "delet": [2, 13, 246, 319], "replac": [2, 17, 19, 60, 79, 80, 114, 115, 246, 252, 312, 472, 488, 501, 568, 583, 593, 744], "entri": [2, 3, 4, 17, 42, 60, 106, 114, 194, 267, 268, 312, 320, 414, 649, 650], "action": [2, 11], "new_class": 2, "append": [2, 39, 40, 41, 59, 116, 121, 123, 154, 162, 263, 267, 312, 319, 487, 656, 657, 658, 659, 660, 662, 663], "old_class": 2, "isa": [2, 312], "true": [2, 17, 30, 36, 66, 77, 78, 102, 106, 107, 108, 109, 111, 113, 114, 115, 190, 193, 237, 240, 244, 246, 248, 249, 250, 251, 252, 254, 258, 259, 261, 267, 268, 285, 286, 312, 319, 414, 419, 465, 467, 474, 475, 477, 487, 501, 550, 582, 583, 616, 643, 656, 662, 667, 744, 745, 747, 780], "typic": [2, 3, 4, 7, 8, 11, 17, 19, 261, 267, 268, 348, 419, 481, 487, 565, 566, 569, 570, 650, 651], "multipl": [2, 116, 121, 122, 123, 154, 162, 188, 201, 203, 239, 267, 419, 475, 477, 488, 501, 514, 536, 542, 563, 593, 607], "sequenti": [2, 3, 7, 8, 11, 246, 252], "modify_element_class": [2, 312], "previous": [2, 66, 115], "avail": [2, 10, 17, 19, 21, 22, 23, 24, 25, 26, 37, 104, 107, 115, 116, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 162, 168, 169, 209, 218, 238, 240, 241, 242, 256, 259, 304, 415, 462, 463, 469, 475, 477, 479, 480, 481, 482, 483, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 541, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 593, 607, 616, 651, 667, 781, 782], "affect": [2, 12, 42, 60, 475, 477, 568, 744], "v": [2, 8, 9, 29, 45, 75, 76, 106, 108, 109, 110, 111, 112, 113, 115, 124, 155, 164, 172, 174, 189, 243, 297, 299, 307, 315, 349, 353, 356, 359, 414, 419, 486, 491, 492, 493, 495, 499, 500, 501, 507, 508, 511, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 540, 545, 566, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 639, 656, 749, 772, 773, 774, 775], "voltag": [2, 3, 8, 9, 17, 18, 19, 20, 43, 261, 267, 283, 284, 285, 286, 288, 291, 292, 295, 299, 307, 314, 315, 316, 317, 318, 324, 353, 354, 355, 356, 357, 358, 363, 364, 370, 371, 372, 373, 374, 380, 381, 382, 383, 384, 414, 415, 416, 417, 418, 419, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 452, 453, 457, 458, 463, 465, 467, 470, 471, 480, 483, 490, 491, 492, 493, 495, 499, 501, 507, 508, 511, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 536, 540, 545, 548, 563, 565, 566, 569, 570, 576, 581, 582, 585, 586, 587, 588, 589, 593, 607, 609, 610, 611, 612, 613, 614, 616, 618, 619, 632, 633, 634, 635, 636, 637, 638, 653, 656, 657, 658, 659, 660, 662, 663, 740, 745, 749, 781], "represent": [2, 3, 8, 17, 18, 19, 419, 470, 471, 593, 609, 610, 611, 612, 613, 614], "balanc": [2, 3, 7, 66, 74, 261, 288, 320, 322, 323, 325, 326, 328, 330, 332, 335, 337, 339, 343, 344, 345, 346, 347, 352, 354, 355, 357, 358, 415, 523, 524, 529, 593, 609, 610, 611, 612, 613, 614, 622, 623, 629, 630, 633, 635, 637, 781], "experiment": [2, 74, 469, 593], "come": [2, 17, 20, 415, 495, 754], "These": [2, 3, 7, 17, 19, 38, 42, 60, 105, 106, 190, 201, 202, 239, 256, 419, 476, 486, 501, 514, 741, 742, 743, 744], "summar": [2, 4, 6, 9, 17, 18, 19, 20, 21, 42, 117], "assign": [2, 4, 8, 17, 29, 75, 114, 124, 155, 164, 170, 189, 243, 261, 262, 263, 267, 268, 319, 320, 321, 324, 416, 417, 418, 474, 475, 501, 514, 566, 567, 608, 668], "exp": [2, 12, 469, 593, 782], "must": [2, 8, 12, 17, 19, 31, 39, 42, 60, 62, 66, 106, 107, 110, 111, 114, 115, 116, 121, 122, 123, 154, 162, 188, 207, 208, 209, 248, 259, 260, 261, 264, 267, 268, 314, 315, 316, 317, 318, 319, 348, 414, 419, 462, 474, 475, 477, 486, 547, 565, 566, 569, 570, 573, 579, 580, 581, 582, 584, 587, 641, 661, 741], "sinc": [2, 7, 8, 12, 17, 19, 26, 43, 114, 115, 119, 163, 182, 183, 184, 185, 259, 474, 475, 496], "doe": [2, 6, 7, 8, 19, 42, 114, 157, 214, 267, 320, 348, 462, 474, 479, 496, 547, 574, 580, 581, 587, 593, 640, 642, 664, 749], "recogn": [2, 495], "dmc_element_class": [2, 18, 313, 470, 471, 473], "dm_element_class": [2, 18, 313, 470, 471, 473], "nm_element_class": [2, 18, 313, 470, 471], "mm_element_class": [2, 12, 18, 313, 470, 471, 472, 473], "exclude_el": 2, "exclud": [2, 744], "char": [2, 14, 15, 16, 17, 29, 30, 75, 106, 107, 108, 109, 110, 111, 112, 113, 115, 124, 155, 164, 189, 190, 202, 240, 243, 246, 248, 249, 251, 252, 261, 264, 265, 267, 268, 312, 313, 314, 316, 317, 318, 319, 348, 414, 419, 462, 608, 650], "framework": [2, 5, 6, 12, 21, 257, 313, 464, 466, 468, 480, 481, 482, 483, 485, 750], "api": [2, 17, 38, 313, 538, 571, 616, 617], "bundl": [2, 43, 313], "togeth": [2, 17, 19, 109, 115, 313, 486], "packag": [2, 6, 15, 17, 18, 21, 255, 313, 464, 466, 468, 485, 593, 607, 608, 616, 741, 742, 743, 744], "xt_reserv": [2, 18, 257, 313, 484, 769], "co": [2, 145, 743], "fix": [2, 17, 18, 66, 94, 114, 179, 181, 313, 373, 467, 473, 484, 488, 501, 568, 573, 632, 633, 634, 635, 644, 656, 661, 667, 674, 743, 745], "zonal": [2, 18, 66, 305, 313, 473, 484, 661, 743], "standard": [2, 7, 17, 19, 20, 31, 39, 62, 63, 64, 66, 107, 108, 109, 110, 111, 112, 113, 156, 157, 158, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 201, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 259, 261, 267, 462, 487, 495, 514, 546, 547, 625, 667, 745], "toggle_reserv": [2, 484, 487, 654, 655, 661, 750], "run_opf_w_r": 2, "7": [2, 8, 12, 17, 18, 20, 30, 31, 42, 66, 106, 115, 135, 143, 156, 157, 158, 159, 160, 161, 172, 203, 255, 320, 495, 565, 566, 569, 570, 593, 607, 750, 751, 782], "earlier": [2, 114, 495, 750, 782], "To": [2, 12, 13, 17, 18, 20, 43, 114, 115, 170, 284, 287, 288, 290, 293, 294, 296, 298, 301, 302, 303, 308, 309, 311, 475, 782], "you": [2, 3, 6, 9, 13, 17, 19, 37, 58, 60, 77, 78, 79, 80, 104, 106, 114, 115, 162, 238, 255, 259, 474, 475, 476, 477, 496, 582, 782], "mpx": [2, 12, 17, 18, 20, 313, 462, 463, 467, 478, 480, 481, 482, 483], "veri": [2, 74, 474, 539], "nine": [2, 782], "five": [2, 20, 470, 758], "someth": [2, 17, 77, 78, 79, 80, 114, 115, 116, 121, 122, 123, 154, 162, 188, 193, 255, 267, 502, 747], "complex": [2, 9, 17, 19, 248, 315, 316, 414, 415, 416, 417, 419, 463, 499, 501, 507, 508, 511, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 540, 545, 548, 585, 586, 587, 593, 609, 610, 611, 612, 613, 614, 632, 634, 636, 656, 749, 781], "phase": [2, 3, 18, 21, 261, 270, 272, 273, 276, 277, 282, 283, 286, 287, 289, 290, 292, 293, 297, 298, 300, 301, 310, 311, 313, 369, 370, 371, 378, 379, 380, 381, 382, 383, 384, 386, 387, 400, 401, 412, 413, 426, 427, 428, 432, 433, 434, 436, 437, 438, 448, 450, 460, 470, 484, 495, 565, 581, 754, 755, 756, 757, 758, 759, 760, 761, 778], "load": [2, 3, 4, 17, 18, 19, 20, 43, 47, 59, 60, 61, 62, 63, 64, 74, 81, 105, 261, 262, 267, 277, 278, 299, 300, 301, 302, 303, 389, 402, 403, 404, 405, 414, 449, 450, 451, 452, 453, 454, 462, 469, 470, 478, 488, 491, 492, 493, 495, 523, 546, 547, 568, 570, 572, 573, 574, 575, 578, 585, 586, 593, 616, 648, 656, 667, 740, 744, 745, 754], "term": [2, 8, 12, 17, 19, 26, 108, 109, 110, 111, 112, 114, 115, 120, 204, 207, 208, 209, 259, 283, 295, 315, 316, 317, 415, 495, 565, 569, 742], "pleas": [2, 17, 19, 21, 26, 37, 43, 44, 45, 81, 82, 83, 84, 104, 114, 115, 119, 154, 238, 255, 544, 591, 652, 670, 674, 675, 676, 677, 678, 679, 680, 762, 782], "xt_3p": [2, 18, 20, 257, 313, 484], "input": [3, 4, 6, 11, 12, 14, 15, 16, 17, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 239, 240, 243, 244, 246, 248, 249, 250, 251, 252, 258, 259, 261, 264, 266, 267, 268, 312, 313, 314, 315, 316, 317, 318, 319, 320, 348, 390, 414, 415, 416, 417, 418, 419, 462, 463, 464, 466, 468, 469, 477, 478, 480, 481, 482, 483, 484, 486, 487, 490, 491, 492, 493, 496, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 532, 533, 535, 538, 539, 541, 544, 548, 565, 566, 569, 570, 571, 573, 574, 575, 582, 587, 589, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 629, 630, 632, 633, 634, 635, 636, 637, 644, 645, 646, 647, 648, 649, 650, 651, 653, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 741, 742, 743, 744, 747], "output": [3, 4, 6, 13, 14, 16, 19, 26, 29, 30, 31, 39, 40, 41, 42, 59, 61, 62, 63, 64, 65, 66, 74, 75, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 243, 246, 248, 249, 250, 252, 253, 255, 258, 259, 261, 263, 264, 267, 268, 291, 292, 294, 313, 314, 315, 316, 317, 318, 320, 348, 362, 365, 366, 367, 369, 373, 374, 375, 376, 377, 386, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 462, 464, 466, 467, 468, 469, 472, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 490, 495, 496, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 532, 533, 535, 540, 541, 544, 545, 548, 570, 575, 585, 590, 593, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 629, 630, 632, 633, 634, 635, 636, 637, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 656, 657, 658, 659, 660, 661, 662, 663, 666, 742, 743, 744, 746, 747, 749, 776], "present": [3, 17, 64, 66, 113, 115, 246, 252, 261, 486, 565, 566, 569, 570, 582, 585, 744], "encapsul": [3, 8, 115, 261, 267, 419, 486], "primarili": [3, 4, 7, 8, 261, 264, 414, 535], "class": [3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 238, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 481, 484, 485, 486, 753], "data_model": [3, 257, 262, 263, 264, 267, 268, 313, 320, 348, 414, 415, 418, 419, 462, 464, 466, 468, 478, 484, 764], "therefor": [3, 4, 7, 8, 43, 267, 320, 414, 416, 417, 418, 546, 547], "data_model_cpf": [3, 257, 484], "target": [3, 66, 192, 196, 203, 463, 480, 499, 501, 516, 517, 518, 593, 656, 667], "cost": [3, 17, 19, 26, 31, 39, 40, 41, 45, 56, 66, 81, 106, 109, 110, 112, 114, 115, 156, 157, 158, 159, 160, 161, 181, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 260, 266, 274, 291, 294, 296, 304, 320, 348, 349, 388, 389, 391, 395, 406, 461, 466, 473, 486, 487, 495, 496, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 535, 536, 537, 563, 564, 567, 568, 579, 590, 592, 593, 616, 617, 625, 626, 640, 641, 642, 661, 667, 743, 744, 746, 747, 781], "nodal": [3, 7, 17, 261, 288, 328, 339, 415, 481, 482, 523, 524, 529, 593, 609, 610, 611, 612, 613, 614, 781], "price": [3, 7, 17, 66, 74, 107, 108, 109, 110, 111, 112, 113, 115, 156, 157, 158, 159, 160, 161, 261, 284, 288, 294, 296, 304, 305, 306, 330, 332, 335, 337, 361, 363, 473, 481, 482, 533, 593, 607, 615, 616, 661, 742, 743, 744, 748, 781], "shadow": [3, 7, 17, 74, 107, 108, 109, 110, 111, 112, 113, 115, 284, 288, 294, 296, 304, 306, 361, 363, 533, 615, 616, 661, 742, 743, 744, 748], "contraint": [3, 19, 111], "By": [3, 4, 7, 8, 11, 17, 106, 107, 108, 109, 110, 111, 112, 113, 261, 264, 267, 268, 313, 320, 348, 414, 419, 474, 782], "begin": [3, 4, 7, 8, 9, 17, 19, 26, 62, 66, 78, 114, 115, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 197, 203, 210, 244, 261, 264, 267, 268, 313, 315, 318, 320, 348, 414, 419, 462, 498, 538, 567, 580, 581, 582, 584, 587, 648, 651], "initi": [3, 4, 7, 8, 17, 19, 26, 43, 65, 66, 106, 113, 114, 115, 190, 203, 244, 255, 261, 264, 265, 267, 268, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 307, 310, 320, 370, 371, 372, 373, 374, 375, 379, 387, 388, 395, 401, 413, 414, 415, 416, 417, 467, 486, 487, 495, 501, 534, 540, 545, 563, 565, 569, 573, 593, 609, 610, 611, 612, 613, 614, 616, 617, 749], "proce": [3, 7, 8, 261, 747], "stage": [3, 4, 7, 8, 62, 66, 115, 156, 157, 158, 159, 160, 161, 203, 261, 264, 267, 487, 547, 654, 655, 747], "everi": 3, "read": [3, 644, 645, 646, 647, 648, 649, 650, 651], "count": [3, 7, 8, 17, 20, 190, 248, 249, 251, 261, 267, 419, 499, 501], "determin": [3, 5, 7, 8, 11, 17, 19, 30, 107, 108, 109, 110, 111, 112, 115, 159, 175, 185, 193, 201, 203, 209, 218, 240, 261, 267, 320, 462, 475, 477, 514, 549, 575, 593, 644, 648, 667, 668, 744], "number": [3, 4, 6, 7, 8, 9, 17, 19, 26, 29, 30, 31, 42, 60, 62, 74, 75, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 171, 172, 173, 174, 175, 178, 182, 183, 184, 189, 201, 203, 212, 216, 219, 240, 243, 244, 250, 251, 259, 261, 267, 268, 285, 315, 318, 319, 414, 419, 467, 486, 488, 489, 490, 495, 514, 538, 540, 541, 545, 548, 564, 565, 566, 567, 568, 569, 570, 571, 576, 579, 580, 581, 582, 583, 584, 587, 593, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 644, 648, 649, 650, 653, 656, 661, 741, 743, 744, 749], "instanc": [3, 5, 8, 11, 17, 19, 258, 261, 267, 419, 654], "store": [3, 7, 8, 17, 19, 60, 66, 78, 107, 108, 109, 111, 113, 114, 115, 261, 267, 312, 315, 316, 317, 319, 419, 474, 475, 486, 537, 538, 564, 568, 741, 742, 743, 744], "nr": [3, 17, 19, 42, 267, 268, 593], "onlin": [3, 7, 8, 17, 19, 261, 267, 291, 292, 295, 304, 305, 348, 419, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 744], "statu": [3, 17, 18, 19, 20, 36, 74, 80, 102, 157, 183, 212, 214, 216, 220, 237, 254, 261, 267, 489, 495, 538, 565, 569, 570, 593, 607, 616, 741, 742, 743, 744, 780], "map": [3, 8, 19, 59, 106, 114, 203, 261, 267, 268, 305, 312, 319, 320, 414, 473, 571, 742], "id": [3, 4, 9, 17, 18, 19, 20, 60, 261, 267, 283, 289, 291, 292, 295, 297, 299, 300, 304, 307, 310, 414, 648, 649], "row": [3, 4, 8, 9, 17, 19, 30, 40, 41, 42, 59, 60, 79, 80, 108, 111, 112, 115, 120, 171, 172, 173, 175, 178, 203, 259, 261, 267, 268, 283, 285, 288, 291, 292, 295, 297, 299, 300, 304, 306, 307, 310, 414, 419, 474, 475, 486, 488, 495, 536, 537, 550, 563, 564, 568, 572, 584, 590, 592, 593, 607, 620, 621, 642, 656, 667, 741, 742, 744, 745, 746], "id2i": [3, 17, 19, 267], "criteria": [3, 261, 267, 656], "indic": [3, 4, 9, 11, 17, 19, 39, 40, 41, 42, 60, 63, 66, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 165, 166, 168, 169, 190, 191, 192, 193, 202, 203, 259, 261, 267, 268, 274, 291, 292, 295, 312, 314, 315, 318, 319, 320, 414, 415, 419, 467, 477, 486, 491, 492, 493, 495, 498, 499, 501, 502, 504, 506, 507, 508, 510, 511, 513, 515, 516, 518, 520, 534, 535, 536, 538, 539, 540, 542, 543, 545, 563, 565, 566, 567, 568, 569, 570, 573, 575, 576, 577, 578, 584, 607, 609, 610, 611, 612, 613, 614, 620, 621, 625, 642, 648, 649, 650, 651, 742, 744, 749], "n": [3, 4, 9, 12, 17, 19, 30, 42, 59, 60, 63, 64, 103, 106, 109, 110, 111, 113, 114, 115, 118, 120, 156, 158, 159, 171, 173, 175, 178, 203, 259, 261, 266, 267, 315, 316, 317, 319, 388, 395, 414, 419, 474, 486, 495, 528, 529, 530, 531, 536, 538, 563, 567, 593, 607, 616, 617, 742, 747], "off": [3, 17, 18, 19, 20, 240, 267, 283, 488, 495, 538, 563, 565, 571, 662, 741, 742, 743, 744], "i2on": [3, 17, 267], "extract": [3, 4, 7, 17, 61, 114, 115, 255, 261, 267, 268, 297, 348, 361, 363, 419, 464, 466, 468, 474, 539, 648, 651], "calcul": [3, 261, 267, 490, 588, 589], "origin": [3, 4, 16, 17, 43, 246, 252, 261, 267, 537, 538, 571, 744], "p": [3, 9, 12, 17, 18, 20, 30, 107, 108, 109, 111, 113, 115, 159, 198, 199, 200, 259, 260, 261, 267, 283, 285, 286, 288, 289, 291, 292, 295, 299, 300, 304, 305, 307, 310, 318, 390, 419, 495, 496, 499, 501, 507, 516, 547, 550, 565, 566, 567, 569, 570, 580, 581, 585, 586, 587, 593, 607, 620, 641, 667, 742, 754], "few": [3, 4, 7, 8, 17, 20], "per": [3, 7, 8, 12, 17, 19, 20, 64, 74, 259, 261, 283, 295, 297, 348, 382, 406, 419, 420, 425, 426, 432, 435, 436, 443, 448, 449, 450, 455, 460, 473, 488, 548, 573, 582, 585, 593, 607, 625], "unit": [3, 6, 7, 9, 17, 20, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 57, 59, 63, 66, 72, 73, 77, 78, 79, 80, 97, 98, 100, 255, 259, 261, 283, 284, 288, 294, 295, 296, 304, 305, 495, 547, 565, 566, 569, 570, 572, 582, 585, 593, 607, 625, 659, 663, 747], "mva": [3, 18, 20, 261, 283, 284, 495, 503, 565, 570, 593, 607, 647, 656], "found": [3, 12, 17, 19, 20, 21, 61, 106, 108, 109, 110, 111, 112, 113, 114, 115, 191, 192, 259, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 506, 518, 559, 650, 651, 751, 782], "base_mva": [3, 17, 261, 389], "distribut": [3, 17, 145, 255, 297, 470, 491, 583, 588, 593, 731], "kva": [3, 20, 261, 310], "base_kva": [3, 20, 261, 310], "pretty_print": [3, 17, 261, 267, 284, 294, 296, 297, 310], "pretti": [3, 11, 19, 261, 263, 267, 284, 287, 288, 290, 293, 294, 296, 298, 301, 303, 306, 309, 311, 462, 480, 481, 482, 483, 487, 593, 607, 656, 657, 658, 659, 660, 662, 663, 776], "text": [3, 21, 203, 246, 261, 485, 648, 656], "consol": [3, 11, 74, 261, 267], "control": [3, 17, 26, 74, 115, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 261, 267, 285, 286, 462, 495, 557, 593, 607, 643], "cnt": [3, 17, 251, 261, 267], "total": [3, 8, 17, 18, 20, 42, 66, 106, 113, 114, 115, 203, 261, 267, 299, 304, 307, 414, 419, 467, 486, 495, 547, 548, 565, 567, 570, 661, 667, 743, 744, 745, 746], "sum": [3, 17, 77, 78, 172, 259, 261, 267, 548, 584, 625, 626, 745], "amount": [3, 106, 261, 539, 593, 607, 667, 744], "capac": [3, 18, 43, 103, 261, 304, 473], "loss": [3, 17, 18, 20, 261, 283, 285, 295, 495, 548, 565, 566, 569], "ext": [3, 17, 261, 267, 538, 564], "extrem": [3, 17, 260, 261, 267], "min": [3, 7, 12, 17, 18, 26, 31, 64, 66, 77, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 261, 495, 566, 570], "max": [3, 7, 12, 17, 18, 20, 26, 31, 62, 74, 77, 210, 212, 261, 267, 488, 503, 575, 593, 607, 661, 667, 743, 745], "det": [3, 17, 261, 267], "dispatch": [3, 12, 17, 43, 67, 74, 77, 78, 81, 261, 389, 480, 481, 482, 483, 488, 546, 547, 568, 572, 573, 575, 578, 625, 667, 744, 745], "dm_element": [3, 17, 18, 19, 257, 261, 268, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310, 313, 348, 419, 484], "where": [3, 4, 6, 7, 8, 9, 13, 17, 19, 26, 31, 42, 43, 58, 60, 62, 63, 64, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 198, 199, 200, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 246, 252, 255, 259, 261, 299, 312, 315, 318, 319, 320, 348, 414, 419, 475, 476, 477, 486, 488, 490, 495, 498, 501, 514, 528, 530, 535, 536, 538, 539, 546, 547, 548, 549, 563, 564, 567, 568, 571, 576, 577, 579, 583, 584, 592, 593, 611, 614, 618, 620, 643, 656, 661, 667, 668, 741, 742, 743, 744, 745, 747], "relationship": [3, 4, 6, 7, 8, 117, 414], "here": [3, 4, 6, 7, 8, 17, 18, 26, 42, 43, 60, 111, 115, 162, 182, 183, 184, 185, 190, 284, 288, 294, 296, 304, 305, 414, 495, 501, 521, 522, 523, 524, 525, 526, 538, 568, 571, 574], "dme_bu": [3, 19, 257, 288, 484], "dme_gen": [3, 19, 257, 294, 484], "dme_load": [3, 19, 257, 302, 303, 484], "while": [3, 8, 17, 19, 475, 495, 741], "least": [3, 6, 43, 314, 315, 316, 317, 318, 414, 475, 488, 661, 743, 747], "tab": [3, 12, 13, 17, 19, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 475, 480, 481, 482, 483], "column": [3, 4, 9, 17, 19, 26, 30, 42, 60, 62, 63, 64, 80, 108, 111, 112, 113, 115, 172, 179, 180, 182, 183, 184, 185, 204, 205, 259, 267, 268, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310, 315, 318, 414, 419, 474, 475, 488, 495, 497, 534, 535, 536, 537, 540, 545, 550, 563, 564, 565, 566, 567, 568, 569, 570, 572, 574, 575, 576, 583, 584, 585, 590, 616, 617, 619, 620, 621, 623, 625, 626, 630, 633, 635, 637, 649, 650, 667, 741, 742, 744, 745, 746, 749], "attempt": [3, 61, 240, 475, 644, 648], "common": [3, 6, 8, 10, 17, 19, 43, 159, 175, 185, 203, 209, 218, 267, 496], "ctm": [3, 10], "uid": [3, 17, 19, 267, 283, 289, 291, 292, 295, 297, 299, 300, 304, 307, 310], "posit": [3, 20, 196, 495, 546, 547, 566, 573, 744], "integ": [3, 6, 14, 16, 17, 20, 26, 30, 31, 62, 66, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 166, 169, 239, 244, 250, 251, 258, 259, 261, 267, 268, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310, 314, 315, 316, 318, 319, 390, 414, 415, 416, 417, 419, 462, 464, 466, 467, 468, 477, 488, 495, 566, 593, 607, 649, 650], "serv": [3, 8, 17, 313], "uniqu": [3, 8, 17, 20, 106, 114, 202, 267, 297, 414], "string": [3, 17, 19, 39, 42, 60, 61, 62, 79, 80, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 172, 188, 212, 218, 240, 252, 267, 268, 477, 496, 501, 514, 515, 536, 537, 539, 541, 546, 547, 563, 564, 574, 593, 616, 617, 644, 645, 647, 648, 649, 650, 651, 656, 657, 658, 659, 660, 662, 663, 664, 665, 745], "source_uid": [3, 17, 19, 267], "record": [3, 20, 648, 650, 651], "besid": [3, 20], "vector": [3, 4, 7, 8, 9, 12, 17, 19, 22, 26, 30, 31, 39, 42, 59, 60, 62, 63, 64, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 190, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 248, 259, 267, 268, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 307, 310, 314, 315, 316, 317, 318, 319, 320, 390, 414, 415, 416, 417, 418, 419, 463, 486, 490, 491, 492, 493, 498, 499, 501, 505, 507, 508, 511, 515, 516, 521, 522, 523, 524, 525, 526, 528, 530, 534, 536, 538, 539, 540, 542, 543, 545, 548, 550, 563, 565, 571, 572, 573, 575, 576, 578, 579, 581, 584, 585, 586, 587, 589, 590, 592, 593, 607, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 629, 630, 632, 633, 634, 635, 636, 637, 641, 656, 667, 744, 745, 746, 749], "m": [3, 9, 13, 14, 16, 17, 18, 19, 20, 37, 40, 41, 59, 61, 62, 63, 74, 81, 104, 111, 116, 118, 121, 122, 123, 154, 162, 188, 238, 255, 297, 315, 316, 317, 319, 414, 419, 474, 477, 487, 488, 495, 507, 541, 548, 574, 656, 657, 658, 659, 660, 662, 663, 665, 666, 671, 672, 673, 674], "time": [3, 8, 9, 17, 19, 26, 42, 60, 62, 66, 74, 106, 108, 109, 110, 111, 112, 113, 115, 118, 120, 212, 214, 219, 255, 315, 318, 419, 462, 501, 514, 539, 593, 607, 616, 643, 656, 657, 658, 659, 660, 662, 663, 747], "largest": [3, 539], "n_r": 3, "enter": [3, 568], "gen": [3, 8, 12, 17, 18, 20, 39, 40, 41, 42, 60, 63, 64, 77, 79, 83, 84, 110, 112, 261, 267, 268, 274, 291, 292, 304, 305, 348, 389, 390, 414, 419, 467, 472, 480, 481, 482, 483, 486, 488, 489, 495, 496, 497, 509, 512, 523, 524, 529, 533, 535, 536, 537, 538, 539, 550, 563, 564, 568, 570, 571, 572, 574, 575, 577, 578, 582, 585, 593, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 639, 643, 648, 656, 657, 658, 659, 660, 661, 662, 663, 665, 667, 674, 741, 743, 744, 745, 747, 748], "singular": [3, 17, 19, 267], "plural": [3, 17, 19, 267], "charact": [3, 156, 157, 158, 159, 160, 161, 246, 268, 547, 649, 650, 651], "might": [3, 114, 487], "seem": [3, 749], "logic": 3, "constant": [3, 8, 9, 17, 19, 26, 60, 64, 77, 112, 115, 162, 163, 204, 258, 259, 295, 299, 491, 492, 493, 495, 535, 565, 566, 567, 568, 569, 570, 578, 586, 593, 616], "instead": [3, 17, 26, 30, 31, 60, 109, 113, 114, 115, 119, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 568, 591, 593, 607, 652, 744], "prevent": [3, 244], "effect": 3, "preclud": 3, "main_table_var_nam": [3, 17, 19, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 307, 310], "init_statu": [3, 267, 285, 286], "update_statu": [3, 17, 19, 261, 267, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310], "build_param": [3, 17, 19, 261, 267, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310, 414, 415, 418, 419, 421, 424, 432, 436, 439, 442, 444, 447, 448, 450, 451, 454, 456, 459, 460], "As": [3, 11, 12, 17, 18, 37, 104, 238, 255], "node": [3, 7, 9, 17, 258, 267, 285, 286, 320, 322, 323, 325, 326, 330, 332, 335, 337, 343, 344, 345, 346, 347, 351, 359, 414, 415, 416, 417, 419, 425, 426, 467, 491, 492, 493, 498, 638, 771], "port": [3, 7, 8, 9, 17, 26, 267, 283, 295, 314, 315, 318, 414, 415, 418, 419, 420, 432, 435, 436, 443, 448, 449, 450, 455, 460, 463], "hand": [3, 6, 7, 11, 17, 26, 31, 108, 111, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "inform": [3, 6, 8, 26, 40, 41, 106, 114, 182, 183, 184, 185, 190, 193, 203, 238, 240, 256, 261, 264, 267, 268, 312, 313, 315, 316, 317, 320, 348, 414, 419, 462, 470, 471, 472, 473, 488, 494, 495, 496, 501, 502, 521, 522, 525, 527, 528, 529, 531, 533, 538, 577, 585, 615, 616, 642, 747, 782], "link": [3, 13, 17, 19, 20, 267, 470, 485, 741], "branch": [3, 6, 7, 17, 18, 20, 43, 60, 74, 267, 269, 283, 284, 360, 361, 362, 363, 364, 365, 366, 367, 414, 420, 421, 422, 423, 424, 485, 486, 488, 490, 491, 492, 493, 495, 497, 498, 501, 503, 504, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 538, 539, 542, 543, 548, 563, 565, 568, 571, 574, 576, 580, 581, 582, 583, 584, 587, 589, 593, 607, 615, 616, 617, 618, 619, 620, 621, 638, 639, 643, 644, 647, 648, 656, 657, 658, 659, 660, 662, 663, 665, 742, 744, 747], "pair": [3, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 414, 478, 480, 481, 482, 483, 593, 741], "context": [3, 9, 108, 109, 110, 111, 112, 113, 115, 190, 201, 501, 514], "b": [3, 7, 9, 12, 17, 19, 20, 26, 30, 31, 113, 115, 117, 118, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 307, 312, 318, 319, 380, 383, 388, 395, 414, 474, 495, 522, 523, 524, 525, 526, 528, 529, 530, 531, 534, 535, 539, 540, 549, 565, 566, 580, 581, 593, 667, 668, 745, 749, 781], "junction": [3, 267, 419], "could": [3, 17, 106, 114, 116, 121, 122, 123, 154, 162, 188, 521, 527, 656], "coupl": 3, "cxn_type": [3, 17, 19, 267, 283, 289, 291, 292, 295, 297, 299, 300, 307, 310, 419], "cxn_idx_prop": [3, 17, 19, 267, 283, 289, 291, 292, 295, 297, 299, 300, 307, 310, 419], "fbu": [3, 17, 20, 267, 283, 295, 297, 310, 419], "tbu": [3, 17, 20, 267, 283, 295, 297, 310, 419], "automat": [3, 4, 8, 11, 13, 17, 19, 81, 106, 114, 115, 159, 175, 185, 203, 209, 218, 261, 264, 267, 274, 319, 320, 414, 419, 462, 474, 485, 487, 495, 538, 539, 593, 607, 654], "had": [3, 43], "cxn_type_prop": [3, 267, 419], "built": [3, 7, 17, 19, 21, 26, 30, 37, 66, 104, 115, 178, 238, 255, 259, 268, 474, 486, 541, 593, 641], "mp_tabl": [3, 17, 19, 257, 475, 479, 484, 767], "mp_table_class": [3, 475, 476, 484], "abil": [4, 6, 264, 266, 474], "dure": [4, 17, 43, 264, 267, 656], "dm_convert": [4, 257, 261, 265, 266, 267, 268, 313, 462, 464, 466, 468, 484], "6": [4, 12, 17, 18, 20, 26, 30, 31, 43, 78, 147, 150, 156, 157, 158, 159, 160, 161, 182, 197, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 268, 297, 414, 448, 460, 466, 488, 495, 565, 566, 569, 570, 593, 607, 674, 751], "yet": [4, 14, 16, 19, 37, 42, 104, 109, 110, 114, 115, 166, 238, 244, 245, 248, 249, 251, 479, 616, 782], "been": [4, 7, 17, 19, 81, 115, 117, 119, 191, 192, 193, 348, 467, 487, 489, 495, 501, 502, 506, 518, 536, 537, 593], "onc": [4, 7, 17, 19, 255, 348, 419, 487, 667], "readi": [4, 462], "loadcas": [4, 59, 484, 495, 653, 656, 657, 658, 659, 660, 662, 663, 696, 741, 750], "same": [4, 8, 17, 19, 26, 30, 43, 45, 62, 63, 64, 106, 111, 114, 163, 170, 172, 178, 190, 201, 202, 203, 261, 262, 268, 319, 388, 414, 419, 487, 495, 496, 501, 514, 515, 539, 548, 584, 590, 593, 607, 661, 674, 675, 742, 745, 746, 761], "again": [4, 17, 19, 43, 745], "scratch": [4, 582], "need": [4, 8, 12, 17, 19, 42, 60, 64, 108, 109, 110, 111, 112, 114, 115, 192, 203, 255, 262, 267, 268, 316, 317, 349, 464, 466, 468, 487, 496, 518, 538, 539, 541, 572, 581, 782], "dmc_element": [4, 17, 18, 257, 264, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 313, 484, 763], "dmce": [4, 267, 268], "get_import_spec": [4, 268], "import_table_valu": [4, 268], "thing": [4, 17, 19], "interest": [4, 9, 11, 14, 16, 194, 259, 261, 314, 315, 316, 318, 390, 414, 415, 416, 417, 419, 488, 575, 625], "vmap": [4, 17, 268], "table_var_map": [4, 17, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "vn": [4, 17, 268, 270, 271, 274, 275, 278, 279, 280], "start": [4, 6, 13, 17, 26, 31, 106, 108, 111, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 319, 320, 326, 327, 463, 486, 495, 538, 567, 579, 593, 747, 782], "col": [4, 17, 20, 42, 60, 171, 173, 175, 178, 203, 259, 268, 414, 488, 742], "c": [4, 7, 8, 17, 19, 20, 26, 31, 64, 110, 111, 112, 113, 115, 120, 156, 157, 158, 159, 160, 161, 176, 177, 197, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 268, 270, 271, 297, 388, 395, 414, 419, 486, 495, 498, 547, 565, 569, 649, 650], "sf": [4, 268, 491, 492, 493, 503, 521, 527, 530, 615, 616], "sf_fcn": 4, "copi": [4, 17, 20, 76, 106, 114, 115, 170, 239, 261, 264, 267, 319, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "scale": [4, 9, 26, 30, 77, 78, 79, 80, 103, 150, 168, 169, 178, 181, 193, 203, 206, 259, 268, 488, 502, 568, 592, 593, 667, 744, 749], "factor": [4, 20, 24, 30, 43, 60, 103, 181, 193, 203, 206, 268, 300, 389, 488, 495, 502, 568, 570, 578, 583, 593, 616, 667], "val": [4, 12, 17, 107, 108, 109, 110, 111, 112, 113, 114, 115, 202, 258, 268, 319, 474, 478, 480, 481, 482, 483, 515, 536, 563, 616], "num": [4, 17, 19, 646, 647, 648, 650], "scalar": [4, 9, 17, 19, 42, 60, 61, 63, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 202, 248, 259, 319, 414, 495, 499, 501, 507, 508, 511, 515, 516, 539, 573, 584, 592, 593, 667, 745], "fcn": [4, 12, 17, 106, 109, 110, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 190, 193, 201, 202, 203, 486, 487, 501, 502, 514, 515, 567, 654], "ifn": 4, "efn": 4, "spec": [4, 12, 17, 201, 203, 246, 252, 268, 269, 270, 271, 274, 275, 279, 280, 348, 390], "ridx": [4, 17, 268, 271, 274, 275], "get_export_spec": [4, 268], "export_table_valu": [4, 268], "init_export_data": [4, 268, 271], "relev": [4, 7, 8, 12, 17, 20, 43, 66, 107, 108, 109, 110, 111, 112, 113, 115, 193, 320, 348, 477, 744], "data_exist": [4, 268], "fals": [4, 17, 30, 36, 77, 78, 79, 80, 102, 106, 108, 109, 115, 190, 237, 240, 244, 246, 248, 249, 250, 252, 254, 267, 414, 501, 643, 656, 662, 780], "matrix": [4, 8, 9, 11, 17, 19, 20, 26, 30, 31, 39, 40, 41, 42, 49, 62, 63, 64, 80, 108, 109, 110, 111, 112, 114, 115, 118, 120, 156, 157, 158, 159, 160, 161, 171, 172, 173, 175, 178, 179, 180, 181, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 248, 259, 297, 305, 314, 315, 316, 318, 390, 414, 415, 419, 462, 484, 486, 495, 497, 498, 499, 501, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 536, 538, 540, 545, 550, 563, 565, 566, 567, 569, 570, 572, 574, 575, 576, 579, 582, 583, 584, 585, 587, 590, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 625, 629, 630, 646, 647, 650, 667, 741, 745, 746, 749, 781], "pdf": [5, 6, 10, 13, 37, 77, 78, 79, 80, 96, 97, 98, 100, 104, 238, 484, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 547, 781, 782], "introduct": [5, 484], "notat": [5, 12, 117, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 781], "overview": [5, 6, 17, 19], "hierarchi": [5, 7, 17, 19], "custom": [5, 6, 12, 18, 19, 203, 266, 313, 331, 333, 336, 338, 340, 349, 470, 471, 472, 473, 476, 539], "iter": [5, 20, 23, 26, 31, 160, 171, 172, 173, 174, 175, 178, 182, 183, 184, 190, 203, 212, 216, 219, 462, 463, 467, 491, 492, 493, 499, 501, 540, 545, 593, 607, 609, 610, 611, 612, 613, 614, 653, 656, 662, 749], "via": [5, 17, 20, 21, 59, 109, 110, 115, 170, 182, 184, 190, 201, 202, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 260, 480, 482, 483, 487, 501, 514, 593, 607, 649, 650, 700, 734], "acknowledg": 5, "purpos": [6, 17, 114, 260, 262, 263, 485], "wish": [6, 63, 64], "your": [6, 12, 18, 19, 21, 96, 97, 98, 100, 154, 163, 239, 255, 256, 475, 476, 477], "document": [6, 17, 18, 19, 20, 30, 37, 104, 121, 122, 123, 154, 156, 158, 161, 182, 183, 184, 213, 215, 216, 217, 220, 221, 238, 259, 485, 750, 751, 782], "languag": [6, 21], "scientif": 6, "commerci": 6, "product": [6, 111, 521, 522, 523, 524, 525, 526], "mathwork": [6, 26, 31, 156, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 211, 213, 215, 216, 217, 218, 219, 220, 221], "free": [6, 21], "open": [6, 21, 107, 108, 109, 110, 111, 112, 113, 494, 644, 651], "relat": [6, 7, 8, 11, 12, 21, 106, 114, 266, 315, 316, 317, 462, 538, 559, 581, 688, 733], "softwar": [6, 21, 593], "git": 6, "subrepo": 6, "except": [6, 9, 17, 26, 31, 42, 66, 76, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 262, 319, 495, 501, 541, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 620, 661, 744, 761], "howev": [6, 7, 11, 17, 19, 43, 475, 782], "download": [6, 21, 96, 97, 98, 100, 255], "zip": [6, 255, 299, 469, 585, 586, 740, 745], "releas": [6, 21, 29, 75, 124, 155, 164, 189, 240, 243, 608], "depend": [6, 7, 8, 18, 60, 66, 76, 107, 111, 113, 115, 175, 203, 212, 255, 261, 264, 268, 315, 320, 419, 463, 465, 467, 470, 471, 487, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 537, 541, 579, 585, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 620, 649, 656, 740, 745], "mptest": [6, 255], "doc": [6, 10, 13, 14, 16, 21, 116, 122, 159, 162, 184, 188, 207, 208, 209, 214, 220, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 781], "have_featur": [6, 22, 23, 24, 25, 38, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 239, 241, 242, 247, 255, 256, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 782], "nonlinear": [6, 7, 8, 12, 17, 19, 21, 26, 27, 28, 38, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 136, 139, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 197, 203, 239, 266, 315, 390, 415, 451, 486, 593, 615, 616, 627, 628], "primal": [6, 26, 66, 115, 156, 157, 158, 159, 160, 161, 163, 185, 209, 211, 218, 219, 555, 557, 593, 607, 616], "dual": [6, 26, 115, 122, 143, 160, 163, 185, 209, 211, 218, 219, 316, 555, 557, 593, 607, 616], "linear": [6, 7, 8, 9, 17, 23, 26, 30, 31, 33, 34, 38, 45, 66, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 122, 127, 133, 145, 156, 157, 158, 159, 160, 161, 168, 169, 171, 173, 175, 178, 182, 183, 184, 185, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 239, 259, 260, 266, 274, 295, 315, 318, 388, 391, 395, 486, 495, 533, 550, 567, 569, 576, 577, 578, 579, 592, 593, 607, 615, 616, 617, 618, 640, 744], "equat": [6, 7, 17, 19, 30, 115, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 197, 203, 239, 558, 593, 609, 610, 611, 612, 613, 614, 616], "easi": [6, 17, 59], "unifi": [6, 8, 10, 239, 781], "lp": [6, 115, 125, 133, 142, 144, 168, 169, 214, 218, 236, 238, 484, 593, 607], "qp": [6, 7, 12, 31, 35, 38, 66, 74, 115, 125, 144, 148, 149, 157, 161, 168, 169, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 232, 236, 238, 484, 593, 607, 734], "mix": [6, 7, 66, 115, 156, 157, 158, 159, 160, 161, 166, 169, 239, 312, 314, 315, 316, 317, 318, 320, 592], "switch": [6, 12, 17, 18, 19, 644], "chang": [6, 12, 18, 20, 21, 42, 43, 45, 60, 62, 113, 115, 193, 467, 470, 471, 476, 477, 488, 501, 502, 510, 513, 515, 535, 538, 546, 547, 568, 666, 683, 744], "unsupport": [6, 465], "separ": [6, 17, 19, 78, 111, 255, 477], "resourc": 6, "sphinx": [6, 13, 14, 16, 21], "perman": [6, 477], "master": [6, 14, 16, 42, 60, 62, 238, 485], "latest": [6, 122, 162], "stabl": 6, "unreleas": [6, 21], "hopefulli": 6, "tag": [6, 22, 23, 24, 25, 106, 108, 109, 110, 111, 112, 113, 115, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 240, 241, 242, 261, 263, 264, 265, 313, 314, 320, 419, 462, 465, 467, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "becaus": [6, 17, 19, 43, 74, 475, 571, 741], "intend": [6, 38, 109, 114, 115, 193, 239, 246, 248, 249, 251, 252, 256, 267, 476, 486, 502], "unmodifi": 6, "stick": 6, "syntax": [6, 22, 26, 31, 116, 121, 122, 123, 126, 154, 156, 157, 158, 159, 160, 161, 162, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 201, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 260, 474, 475, 616, 617, 656, 657, 658, 659, 660, 661, 662, 663, 747], "classdef": [6, 12, 17, 18, 19], "obj": [6, 12, 17, 18, 19, 26, 31, 106, 113, 114, 259, 267, 312, 319, 348, 414, 475, 616], "namespac": 6, "produc": [6, 42, 495], "html": [6, 13, 21, 116, 122, 159, 162, 183, 184, 188, 207, 208, 209, 216, 220], "what": [6, 9, 109, 115, 192, 518, 593, 607, 641, 643], "hint": 6, "click": 6, "icon": [6, 485], "upper": [6, 12, 17, 18, 26, 31, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 283, 284, 285, 288, 291, 294, 295, 296, 304, 316, 414, 485, 495, 510, 513, 520, 533, 550, 565, 566, 569, 570, 577, 593, 615, 616, 618, 619, 661, 742, 743, 744, 748], "right": [6, 8, 9, 13, 17, 19, 26, 31, 108, 111, 115, 156, 157, 158, 159, 160, 161, 176, 177, 182, 183, 184, 185, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 315, 318, 485], "corner": 6, "page": [6, 188, 255, 485, 493], "cover": 6, "autom": 6, "contributor": 6, "guid": [6, 12, 17, 18, 19, 20, 159], "form": [7, 8, 9, 12, 17, 18, 30, 62, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 178, 190, 201, 202, 204, 206, 246, 252, 255, 257, 297, 315, 316, 317, 318, 320, 370, 371, 372, 373, 374, 375, 379, 382, 387, 388, 395, 401, 413, 414, 415, 416, 417, 418, 419, 461, 484, 486, 501, 514, 527, 528, 529, 530, 531, 533, 538, 547, 571, 582, 593, 615, 616, 617, 618, 745, 747], "x": [7, 8, 9, 17, 19, 20, 24, 25, 26, 30, 31, 42, 63, 64, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 150, 156, 157, 158, 159, 160, 161, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 251, 259, 267, 283, 297, 310, 315, 316, 318, 320, 328, 346, 349, 353, 354, 355, 356, 357, 358, 359, 390, 414, 415, 419, 451, 466, 475, 486, 490, 491, 495, 499, 501, 516, 521, 522, 523, 524, 525, 526, 533, 544, 548, 565, 575, 579, 583, 584, 585, 586, 592, 593, 607, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 656, 661, 741, 742, 743, 744, 745, 782], "rvec": [7, 9, 12, 26, 31, 112, 117, 176, 177, 197, 210], "f": [7, 8, 9, 26, 31, 74, 108, 110, 111, 112, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 197, 203, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 267, 346, 349, 466, 486, 491, 492, 493, 495, 521, 525, 528, 530, 533, 541, 548, 565, 567, 569, 588, 589, 592, 593, 607, 615, 616, 625, 626, 641, 643, 649, 650, 657, 659, 660, 663, 747], "param": [7, 9, 12, 17, 19, 26, 31, 43, 107, 108, 109, 110, 111, 112, 113, 115, 122, 162, 210, 295, 314], "rmat": [7, 9, 12, 26, 111, 210], "trace": [7, 192, 196, 197, 203, 239, 518, 593, 656], "curv": [7, 190, 191, 192, 195, 196, 200, 203, 259, 291, 390, 472, 495, 496, 501, 505, 506, 517, 518, 550, 570, 577, 593, 607, 616, 656, 748], "parameter": [7, 115, 190, 192, 197, 198, 199, 200, 203, 239, 262, 302, 308, 499, 501, 507, 508, 516, 518, 593, 656], "lambda": [7, 17, 18, 26, 31, 107, 108, 109, 110, 111, 112, 113, 115, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 192, 195, 196, 197, 198, 199, 200, 203, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 262, 302, 308, 422, 463, 496, 499, 501, 505, 507, 508, 511, 516, 517, 518, 593, 616, 619, 621, 623, 628, 630, 633, 635, 637, 656], "vari": [7, 115, 267, 487], "constrain": [7, 17, 26, 28, 66, 81, 115, 156, 157, 158, 159, 160, 161, 187, 200, 207, 208, 209, 239, 616, 617, 620, 621], "min_": [7, 26, 28, 31, 187, 210], "textrm": [7, 111], "qquad": 7, "h": [7, 12, 17, 21, 26, 31, 77, 78, 79, 80, 109, 115, 156, 157, 158, 159, 160, 161, 179, 181, 182, 183, 184, 185, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 261, 267, 315, 390, 415, 486, 491, 495, 577, 583, 584, 616, 617, 620, 747], "le": [7, 12, 17, 19, 26, 28, 31, 108, 109, 111, 117, 187, 210], "_": [7, 8, 12, 26, 31, 111, 210, 415], "quadrat": [7, 17, 31, 45, 106, 111, 112, 114, 115, 120, 156, 157, 158, 159, 160, 161, 168, 169, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 239, 259, 486, 496, 593, 616, 617], "tran": [7, 9, 12, 31, 108, 109, 110, 111, 112, 210], "q": [7, 9, 12, 17, 18, 30, 111, 112, 115, 120, 207, 208, 209, 210, 259, 299, 307, 388, 390, 395, 467, 550, 593, 607, 651, 749], "k": [7, 9, 17, 19, 112, 113, 114, 115, 172, 190, 191, 192, 203, 259, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 306, 307, 310, 318, 324, 388, 395, 414, 419, 474, 486, 501, 504, 506, 510, 513, 518, 520, 539, 546, 547, 584, 656, 667, 685, 686, 745], "l": [7, 17, 19, 26, 30, 31, 106, 108, 111, 114, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 266, 295, 315, 316, 317, 486, 495, 533, 550, 577, 615, 616, 617, 661, 742, 743, 747], "math_model": [7, 257, 261, 313, 327, 341, 348, 414, 419, 462, 464, 466, 468, 484], "opt_model": [7, 66, 107, 114, 197, 210, 226, 227, 228, 229, 230, 231, 232, 233, 238, 239, 320, 414, 486, 533, 626], "mp_idx_manag": [7, 8, 106, 115, 238, 239, 314, 320, 414, 415, 416, 417, 418], "nonzero": [7, 8], "auxiliari": [7, 315, 316, 317, 320], "appropri": [7, 9, 13, 17, 19, 26, 115, 240, 264, 314, 315, 495, 539, 574, 580, 581, 587, 667, 741], "characterist": 7, "mm_element": [7, 12, 17, 18, 257, 267, 313, 320, 360, 368, 369, 378, 385, 386, 394, 400, 402, 406, 407, 408, 412, 419, 484], "mme": [7, 348, 390, 419], "nme_bus_pf_acp": 7, "nme_bus_opf_acp": 7, "And": [7, 12, 19, 20, 470, 471], "similar": [7, 17, 43, 495, 527, 528, 530, 747], "mme_gen": [7, 257, 388, 392, 393, 484], "similarli": [7, 8, 12, 106, 109], "inject": [7, 9, 12, 17, 18, 19, 20, 283, 295, 296, 297, 307, 310, 315, 316, 317, 318, 351, 359, 390, 414, 415, 418, 463, 495, 499, 501, 516, 523, 526, 531, 534, 536, 540, 545, 548, 563, 565, 566, 569, 577, 581, 582, 584, 585, 587, 589, 609, 610, 611, 612, 613, 614, 616, 749], "aggreg": [7, 43, 77, 78, 108, 111, 112, 113, 115, 315, 318, 415, 418, 419, 461, 486], "piecewis": [7, 17, 259, 260, 274, 388, 391, 395, 495, 567, 592, 593, 607, 640], "angl": [7, 8, 9, 18, 20, 283, 284, 285, 286, 315, 316, 317, 318, 361, 363, 364, 365, 373, 415, 416, 417, 418, 419, 422, 467, 483, 490, 495, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 536, 540, 545, 548, 563, 565, 566, 576, 581, 582, 593, 607, 609, 610, 611, 612, 613, 614, 616, 618, 619, 636, 637, 749], "mme_branch": [7, 257, 361, 366, 367, 484], "sens": 7, "respons": [7, 17, 267], "data_model_update_off": [7, 348], "zero": [7, 8, 9, 17, 19, 26, 31, 40, 41, 45, 59, 108, 111, 112, 115, 116, 121, 123, 154, 156, 157, 158, 160, 161, 162, 179, 181, 193, 194, 202, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 261, 314, 419, 486, 489, 495, 496, 497, 498, 501, 502, 510, 513, 515, 522, 565, 570, 576, 584, 585, 588, 593, 607, 667, 668, 745], "out": [7, 12, 17, 20, 31, 105, 156, 157, 158, 159, 160, 161, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 245, 261, 263, 465, 488, 489, 490, 494, 495, 496, 510, 513, 542, 565, 569, 570, 574, 593, 643], "data_model_update_on": [7, 17, 348, 362, 365, 366, 367, 369, 373, 374, 375, 376, 377, 386, 389, 391, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412], "differnt": 7, "avoid": [7, 13, 66, 115, 156, 157, 158, 159, 160, 161, 193, 539], "duplic": [7, 106, 114, 115, 261, 264, 267, 319], "mm_shared_": 7, "evalu": [7, 12, 26, 108, 109, 110, 111, 112, 113, 115, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 203, 204, 205, 206, 249, 259, 316, 317, 349, 463, 486, 521, 585, 590, 618, 619, 620, 621, 622, 623, 625, 626, 629, 630, 632, 633, 634, 635, 636, 637, 640, 641, 746], "jacobian": [7, 9, 12, 26, 109, 111, 115, 171, 172, 173, 175, 178, 179, 182, 183, 184, 185, 198, 199, 200, 203, 204, 315, 316, 317, 390, 415, 582, 593, 611, 614, 616, 620], "put": [7, 17, 19], "kei": [8, 114, 267, 268], "modular": [8, 240], "deriv": [8, 21, 109, 110, 112, 115, 171, 173, 175, 178, 203, 259, 314, 315, 316, 317, 318, 328, 422, 484, 486, 499, 501, 508, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 548, 585, 593, 607, 616, 625, 626, 641, 692, 694, 772, 773, 774, 775], "featur": [8, 11, 22, 23, 24, 25, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 203, 240, 241, 242, 474, 484, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 593, 782], "fulli": [8, 114, 782], "captur": 8, "oper": [8, 9, 17, 26, 30, 62, 111, 115, 148, 178, 255, 419, 538, 571, 593], "condit": [8, 26, 31, 43, 58, 62, 66, 249, 255, 593, 607], "non": [8, 9, 17, 19, 26, 45, 59, 64, 66, 77, 115, 116, 121, 123, 154, 162, 171, 173, 175, 178, 179, 181, 203, 207, 208, 266, 314, 315, 316, 317, 318, 414, 415, 418, 419, 432, 435, 436, 439, 442, 443, 444, 447, 467, 487, 495, 496, 497, 538, 542, 593, 607, 618, 650], "z": [8, 9, 17, 19, 26, 110, 112, 113, 114, 115, 190, 203, 315, 318, 353, 356, 359, 414, 418, 419, 486, 495, 499, 501, 507, 508, 511, 516, 586, 593, 616, 617, 749], "track": [8, 106, 114, 115, 314, 320, 414, 486], "n_p": [8, 9, 315, 318], "n_z": [8, 62, 318], "tn5": [8, 9, 10, 21], "lot": [8, 108, 111, 112, 115, 593, 607], "especi": [8, 255], "real": [8, 9, 17, 19, 26, 30, 74, 248, 315, 316, 414, 415, 416, 419, 488, 495, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 536, 548, 563, 565, 566, 568, 570, 573, 577, 581, 592, 616, 620, 622, 623, 632, 634, 636, 656, 662, 667], "predefin": [8, 17, 19], "activ": [8, 9, 12, 13, 17, 18, 20, 182, 267, 283, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 305, 307, 310, 315, 318, 351, 359, 382, 388, 390, 395, 480, 481, 482, 483, 490, 491, 492, 493, 495, 509, 510, 579, 593, 607, 625, 629, 630, 633, 635, 637, 653, 656, 667, 745], "va": [8, 9, 17, 113, 267, 285, 315, 316, 317, 318, 320, 415, 416, 417, 418, 430, 431, 483, 495, 527, 534, 535, 566, 576, 581, 616, 618], "n_": [8, 9, 259, 315], "left": [8, 9, 17, 19, 26, 31, 108, 111, 115, 156, 157, 158, 159, 160, 161, 176, 177, 182, 183, 184, 185, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 315, 318, 744], "bb": [8, 9, 17, 204, 318, 424], "kk": [8, 9, 17, 112, 318, 419, 442, 447, 486], "pv": [8, 9, 17, 20, 258, 285, 286, 318, 351, 414, 419, 424, 426, 454, 459, 463, 489, 491, 492, 493, 495, 499, 500, 501, 507, 508, 511, 513, 516, 534, 535, 540, 545, 547, 566, 588, 589, 609, 610, 611, 612, 613, 614, 639, 656, 662, 749, 756, 757, 760, 761], "suscept": [8, 9, 283, 297, 307, 495, 565, 566], "coeffici": [8, 9, 17, 31, 108, 111, 112, 115, 156, 157, 158, 159, 160, 161, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 295, 315, 318, 495, 567], "gp": [8, 17, 318, 418], "cc": [8, 9, 17, 19, 111, 204, 315, 318, 547], "gi": [8, 315], "compon": [8, 17, 115, 195, 259, 260, 299, 315, 498, 505, 521, 527], "ilin": [8, 17, 19, 315], "slin": [8, 17, 19, 315], "arbitrari": [8, 17, 19, 114, 171, 175, 261, 267, 315, 501, 514], "snln": [8, 17, 19, 315, 415, 451], "inln": [8, 17, 19, 315, 415, 451], "six": [8, 17, 19, 20, 470, 755, 756, 757], "yy": [8, 9, 17, 19, 20, 315, 421, 448, 451, 456, 460, 754], "ll": [8, 9, 17, 19, 114, 115, 315], "nn": [8, 9, 17, 19, 111, 315, 419, 425, 426, 432, 436, 439, 444], "iv": [8, 9, 17, 19, 315], "sv": [8, 9, 17, 19, 315, 450, 451, 547], "admitt": [8, 9, 297, 421, 448, 460, 491, 492, 493, 499, 501, 516, 522, 523, 525, 526, 540, 545, 582, 587, 593, 609, 610, 611, 612, 613, 614, 620, 621, 622, 623, 629, 630, 749], "matric": [8, 9, 17, 19, 30, 42, 62, 63, 64, 111, 118, 120, 172, 204, 206, 207, 208, 209, 248, 297, 315, 414, 415, 418, 419, 495, 497, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 535, 538, 540, 571, 574, 580, 581, 582, 587, 616, 617, 665, 668, 741, 744, 747], "rather": [8, 17, 38, 42, 108, 115, 163, 239, 256, 259, 315, 316, 390, 415, 475, 495, 535, 539, 568, 584], "dv": [8, 315, 528, 529, 530, 531], "conj": [8, 9, 315, 527, 529, 530, 531], "Then": [8, 13, 255, 261, 414, 477, 538, 616, 617], "written": [8, 21, 26, 244, 245, 248, 249, 251], "cdiag": [8, 315], "invc": [8, 315], "assum": [8, 17, 42, 43, 108, 109, 110, 111, 112, 115, 117, 119, 267, 297, 390, 415, 462, 464, 466, 468, 469, 478, 480, 481, 482, 483, 491, 492, 493, 496, 539, 541, 565, 566, 569, 570, 574, 576, 585, 620, 621, 631, 643, 644, 648, 656, 657, 658, 659, 660, 662, 663, 667, 745], "net_model": [8, 257, 261, 313, 315, 320, 348, 415, 416, 417, 418, 419, 426, 462, 464, 466, 468, 484], "nm_element": [8, 17, 18, 19, 257, 313, 314, 315, 316, 317, 318, 348, 414, 415, 416, 417, 418, 420, 425, 426, 432, 435, 436, 443, 448, 449, 450, 455, 460, 484, 770], "special": [8, 60, 109, 114, 474, 568], "treatment": 8, "pq": [8, 12, 20, 258, 285, 286, 291, 389, 390, 414, 419, 426, 472, 489, 495, 499, 500, 501, 507, 508, 511, 513, 516, 534, 535, 540, 545, 566, 570, 577, 609, 610, 611, 612, 613, 614, 616, 639, 656, 662, 667, 749, 755, 759, 760, 761], "node_typ": [8, 17, 257, 414, 419, 425, 426, 484], "about": [8, 193, 195, 196, 240, 488, 494, 502, 503, 505, 509, 512, 514, 515, 517, 519], "assembl": [8, 106, 108, 111, 112, 115, 415, 486], "set_node_type_ref": [8, 414, 419, 425], "set_node_type_pv": [8, 414, 419, 425], "set_node_type_pq": [8, 414, 419, 425], "1000": [8, 20, 174, 593, 607, 744], "2000": [8, 20, 203], "nme_bus_acp": [8, 257, 484], "nme_gen_acp": [8, 257, 484], "brief": 8, "rel": [8, 14, 16, 66, 115, 156, 157, 158, 159, 160, 161, 488, 541, 593, 607], "nme_bu": [8, 257, 429, 430, 431, 484], "nme_gen": [8, 257, 439, 442, 484], "neg": [8, 107, 108, 109, 110, 111, 112, 113, 115, 158, 159, 160, 171, 172, 173, 174, 175, 178, 184, 185, 207, 208, 209, 215, 218, 219, 220, 501, 568, 742, 744], "ident": [8, 9, 17, 26, 31, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 248, 414, 486, 501, 541, 593, 656], "nme_branch": [8, 257, 421, 424, 484], "nme_load": [8, 257, 451, 454, 484], "equal": [8, 17, 26, 42, 58, 59, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 179, 181, 182, 183, 184, 185, 204, 206, 244, 245, 248, 249, 251, 255, 316, 372, 414, 415, 491, 492, 493, 593, 607, 615, 616, 622, 629, 632, 633, 638, 661, 667, 742, 743, 744], "consum": 8, "stack": [8, 17, 19, 109, 111, 113, 115, 118, 120, 206, 315, 318, 414, 419], "seri": [8, 250, 283, 297, 310, 548], "t": [8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 58, 62, 66, 78, 114, 115, 171, 173, 175, 178, 193, 203, 255, 259, 315, 415, 462, 474, 475, 477, 479, 495, 499, 501, 502, 508, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 548, 550, 565, 569, 574, 582, 649], "cscal": [8, 9, 17, 19, 299], "y": [8, 19, 108, 109, 110, 111, 112, 113, 115, 251, 297, 315, 316, 317, 414, 541, 579, 616], "i_": 8, "i_f": 8, "i_t": 8, "n_k": [8, 9, 17, 19, 315, 318], "cmat": [8, 9, 26, 31], "cccc": [8, 210], "1_": 8, "2_": 8, "ddot": 8, "cvec": [8, 9, 17, 19], "_f": 8, "1_f": 8, "2_f": 8, "vdot": 8, "_t": 8, "1_t": 8, "2_t": 8, "incid": [8, 9, 17, 19, 414, 415, 418, 419, 498], "character": 8, "style": [9, 159, 218, 593, 607], "theta": 9, "uptheta": 9, "cvecg": 9, "rmatg": 9, "cmatg": 9, "hat": 9, "diag": [9, 12, 111, 112, 486, 527, 528, 529, 530, 531], "diagon": [9, 17, 19, 111, 204, 414], "conjug": 9, "transpos": [9, 26, 30, 108, 109, 110, 115, 182, 183, 184, 185, 198, 199, 200, 315, 316, 390, 415], "re": [9, 11, 13, 19, 115, 156, 157, 158, 159, 160, 161, 193, 219, 246, 252, 539, 662], "im": [9, 19], "imaginari": [9, 17, 19, 315, 316, 415, 416, 419, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 622, 623, 632, 634, 636], "wise": [9, 81, 640, 745], "expon": 9, "f_": [9, 110, 259], "gradient": [9, 26, 109, 110, 112, 115, 179, 180, 182, 183, 184, 185, 198, 199, 200, 204, 205, 259, 593, 607, 618, 620, 622, 625, 626, 629, 632, 634, 636], "w": [9, 14, 16, 43, 56, 131, 143, 150, 171, 173, 175, 178, 182, 203, 314, 315, 316, 317, 318, 326, 331, 333, 336, 338, 340, 390, 415, 486, 491, 499, 501, 508, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 547, 550, 582, 593, 607, 616, 617, 674, 724, 728, 779], "lam": [9, 12, 26, 109, 115, 117, 119, 159, 182, 183, 184, 185, 203, 302, 308, 315, 316, 317, 328, 380, 390, 415, 499, 500, 501, 507, 508, 511, 516, 523, 524, 526, 637, 656], "hessian": [9, 12, 26, 109, 110, 115, 180, 181, 182, 183, 184, 185, 205, 206, 259, 315, 316, 317, 390, 415, 593, 607, 619, 621, 623, 625, 626, 628, 630, 633, 635, 637], "dimens": [9, 17, 39, 42, 60, 62, 106, 109, 110, 111, 112, 113, 114, 115, 172, 202, 203, 267, 268, 319, 390, 414, 419, 474, 475, 515, 536, 539, 549, 563, 573, 579, 590, 667, 668, 745, 746], "j": [9, 17, 26, 62, 106, 108, 109, 110, 111, 112, 113, 114, 115, 120, 171, 172, 173, 175, 178, 179, 203, 204, 259, 299, 414, 419, 474, 486, 498, 528, 529, 530, 531, 548, 582, 584, 620, 661, 743], "natur": [9, 192, 199, 203, 518, 546, 593], "log": [9, 21, 190, 193, 194, 203, 501, 502], "approx": [9, 182, 593, 607], "71828": 9, "sqrt": [9, 174], "n_n": [9, 315, 318], "size": [9, 17, 26, 43, 77, 78, 79, 80, 108, 111, 114, 115, 190, 192, 193, 198, 199, 200, 203, 244, 245, 248, 249, 251, 255, 314, 319, 474, 475, 486, 499, 501, 502, 507, 510, 513, 518, 584, 593, 656, 667], "vvi": 9, "vri": 9, "vii": 9, "vmi": 9, "vai": 9, "magnitud": [9, 17, 18, 20, 283, 285, 286, 288, 291, 292, 295, 315, 316, 317, 372, 373, 417, 419, 465, 480, 495, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 536, 540, 545, 548, 563, 566, 570, 582, 585, 586, 593, 607, 609, 610, 611, 612, 613, 614, 616, 632, 633, 634, 635, 656, 662, 749], "vr": [9, 315, 316, 414, 415, 416, 429, 527, 618], "vi": [9, 315, 316, 415, 416, 429, 527, 618], "vm": [9, 18, 110, 112, 115, 267, 285, 315, 316, 317, 320, 372, 415, 417, 430, 480, 486, 495, 519, 527, 535, 566, 585, 616], "dvm": [9, 522, 523, 524, 525, 526, 528, 529, 530, 531], "inv": 9, "invers": 9, "frac": [9, 12, 31, 111, 112, 210], "z_i": 9, "_i": [9, 117, 299], "zr": [9, 17, 19, 315, 320, 414, 415], "zi": [9, 17, 19, 315, 320, 414, 415], "j_": 9, "affin": 9, "dd": [9, 486, 588], "aa": [9, 108, 111], "combin": [9, 115, 170, 315, 318, 419, 486, 547, 747], "ccc": [9, 19], "underlin": 9, "obtain": [9, 43, 115, 315, 316, 390, 415, 419], "multipli": [9, 17, 26, 31, 58, 60, 109, 111, 114, 115, 117, 119, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 315, 316, 390, 415, 486, 488, 521, 522, 523, 524, 525, 526, 533, 565, 566, 568, 569, 570, 587, 593, 615, 616, 619, 621, 623, 630, 633, 635, 637, 742], "superscript": 9, "subscript": [9, 259, 260, 268], "carleton": 10, "coffrin": 10, "et": [10, 13, 115, 462, 616, 643, 656, 657, 658, 659, 660, 662, 663, 747], "al": [10, 13], "progress": [10, 26, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 496, 593, 607, 644, 645, 647, 648, 650, 651, 747], "www": [10, 115, 116, 121, 123, 134, 139, 144, 145, 154, 171, 172, 173, 174, 175, 178, 184, 185, 203, 209, 211, 547, 555, 557, 562, 593, 607], "overleaf": 10, "5d94e3765cb3ba000129df3c": 10, "zimmerman": [10, 26, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 781], "octob": [10, 781], "2020": [10, 781], "org": [10, 13, 21, 23, 26, 114, 115, 122, 148, 154, 182, 183, 184, 185, 188, 218, 220, 475, 491, 492, 493, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 588, 593, 607, 781], "much": [11, 268], "task_pf": [11, 257, 463, 464, 466, 468, 469, 481, 483, 484], "task_cpf": [11, 257, 464, 480, 481, 484], "usag": [11, 319, 565, 566, 567, 569, 570, 580], "pattern": 11, "occur": [11, 60], "flowchart": 11, "satisfi": [11, 26, 30, 31, 656, 662], "reactiv": [11, 12, 17, 18, 20, 43, 66, 267, 283, 288, 289, 291, 292, 294, 295, 296, 297, 299, 307, 310, 351, 382, 388, 390, 467, 488, 491, 492, 493, 495, 512, 513, 524, 527, 536, 548, 563, 565, 566, 568, 570, 577, 579, 592, 593, 607, 616, 625, 629, 630, 633, 635, 637, 642, 653, 656, 662, 667, 745], "mark": [11, 495, 648], "star": [11, 647], "sub": [11, 21, 77, 78, 79, 80, 109, 110, 113, 114, 115, 267, 268, 466, 541, 648], "accomplish": 11, "next_dm": [11, 462, 467], "next_nm": [11, 462], "next_mm": [11, 462, 463], "empti": [11, 12, 17, 26, 31, 42, 62, 64, 65, 66, 77, 78, 79, 80, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 159, 162, 188, 193, 194, 203, 218, 240, 259, 262, 263, 264, 267, 268, 314, 315, 316, 318, 320, 379, 387, 390, 401, 413, 415, 416, 417, 462, 467, 502, 573, 585, 593, 642, 649, 650, 667, 668, 744, 745], "termin": [11, 17, 26, 66, 115, 160, 175, 182, 184, 190, 195, 196, 203, 219, 501, 504, 510, 513, 520, 533, 540, 545, 593, 607, 609, 610, 611, 612, 613, 614, 615, 616, 646, 651, 653, 656, 657, 658, 659, 660, 662, 663, 749], "On": [11, 26], "trigger": [11, 191, 192, 195, 196, 504, 506, 510, 513, 518, 520, 656], "enforc": [11, 463, 467, 578, 593, 607], "constraint": [11, 17, 18, 21, 26, 31, 66, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 179, 181, 182, 183, 184, 185, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 239, 259, 266, 284, 288, 304, 306, 315, 316, 320, 322, 323, 325, 326, 330, 332, 335, 337, 339, 343, 344, 345, 346, 347, 348, 361, 362, 363, 364, 365, 373, 380, 381, 382, 383, 384, 389, 390, 391, 406, 407, 415, 432, 473, 484, 486, 487, 533, 536, 550, 563, 576, 577, 578, 579, 593, 607, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 661, 743, 744, 748], "print_soln": [11, 462], "print": [11, 19, 29, 36, 74, 75, 102, 105, 114, 124, 155, 164, 189, 237, 243, 244, 245, 248, 249, 250, 251, 254, 261, 263, 267, 284, 287, 288, 290, 293, 294, 296, 298, 301, 303, 306, 309, 311, 462, 465, 477, 480, 481, 482, 483, 487, 494, 496, 497, 593, 607, 608, 643, 656, 657, 658, 659, 660, 662, 663, 747, 776, 780], "save_soln": [11, 462], "save": [11, 26, 77, 78, 79, 80, 96, 97, 98, 100, 108, 114, 115, 264, 265, 415, 418, 462, 464, 466, 468, 477, 480, 481, 482, 483, 487, 495, 496, 537, 539, 573, 644, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666], "shape": [12, 472], "_0": [12, 17, 295], "lower": [12, 17, 26, 31, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 259, 283, 284, 285, 288, 291, 294, 295, 296, 304, 414, 495, 513, 520, 533, 550, 565, 566, 569, 570, 577, 593, 615, 616, 618, 619, 661, 742, 743, 744, 748], "bound": [12, 17, 19, 26, 31, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 261, 283, 284, 285, 288, 291, 294, 295, 296, 304, 316, 414, 533, 550, 593, 615, 616, 618, 619], "mathrm": [12, 17, 26, 31, 210, 259, 295, 315, 415], "belong": [12, 257, 260, 352, 661, 667, 743, 745], "mme_gen_opf_ac": [12, 257, 390, 484], "mme_gen_opf_ac_ov": [12, 257, 472, 484], "If": [12, 13, 17, 26, 36, 61, 62, 63, 64, 77, 78, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 162, 171, 173, 175, 178, 182, 183, 184, 185, 188, 192, 193, 237, 240, 244, 246, 248, 254, 255, 267, 314, 319, 475, 477, 486, 495, 496, 518, 528, 529, 530, 531, 536, 537, 538, 539, 550, 563, 564, 565, 568, 571, 573, 574, 576, 582, 583, 584, 585, 593, 616, 617, 640, 642, 643, 656, 662, 664, 665, 666, 667, 668, 744, 745, 747, 780], "write": [12, 107, 108, 109, 110, 111, 112, 113, 255, 487, 561, 665, 666], "h_": [12, 315, 390], "der": [12, 109, 110, 111, 112, 641], "pp": [12, 17, 26, 491, 492, 588, 638], "muv": [12, 26, 315, 390], "qq": [12, 111, 112, 115, 204], "add_nln_constraint": [12, 114, 115, 486], "xx": [12, 17, 111, 113, 115, 259, 316, 380, 383, 390, 422, 486], "furthermor": [12, 43], "subset": [12, 42, 60, 76, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 259, 315, 316, 318, 390, 415, 416, 417, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "idx": [12, 17, 19, 39, 40, 41, 42, 59, 77, 78, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 193, 203, 259, 260, 267, 285, 291, 314, 315, 316, 317, 318, 319, 320, 349, 351, 390, 414, 415, 416, 417, 419, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 442, 444, 447, 451, 486, 502, 549, 573, 607, 632, 633, 634, 635, 656, 668, 744], "57": [12, 172, 174, 177], "59": [12, 18, 20, 491], "dh": [12, 26, 109, 115, 179, 182, 183, 184, 185, 204, 315, 390, 620], "oval_pq_capability_fcn": [12, 390], "p0": [12, 390], "q0": [12, 390, 472], "a2": [12, 390], "b2": [12, 390], "deal": [12, 115, 741], "ng": [12, 64, 74, 259, 260, 495, 524, 536, 546, 547, 563, 579, 585, 592, 593, 607, 642, 661, 667, 743, 745], "length": [12, 20, 42, 60, 156, 157, 158, 159, 160, 161, 172, 193, 198, 200, 297, 319, 499, 501, 511, 593], "isempti": [12, 17, 474, 475], "nargout": [12, 26, 171, 173, 175, 178, 182, 183, 184, 185, 203], "dhdp": 12, "spdiag": [12, 17], "dhdq": 12, "60": [12, 18, 20, 319, 607], "63": [12, 607], "d2h": [12, 115, 315, 390, 621], "oval_pq_capability_hess": [12, 390], "zz": [12, 19], "spars": [12, 19, 23, 30, 31, 111, 115, 118, 120, 156, 157, 158, 159, 160, 161, 179, 180, 181, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 314, 315, 316, 390, 415, 419, 486, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 585, 616, 617], "d2h_pp": 12, "d2h_qq": 12, "now": [12, 17, 37, 104, 238, 495, 782], "add_constraint": [12, 17, 320, 348, 362, 363, 364, 365, 373, 380, 381, 382, 383, 384, 389, 390, 391, 395, 406, 407], "pqoval": 12, "pg": [12, 17, 18, 64, 74, 108, 110, 112, 113, 114, 115, 291, 414, 439, 442, 480, 481, 482, 483, 486, 489, 491, 492, 493, 495, 496, 509, 535, 567, 570, 577, 578, 579, 585, 590, 593, 616, 641, 661, 667, 743, 745, 746], "qg": [12, 18, 66, 108, 110, 115, 291, 439, 486, 489, 495, 512, 535, 570, 577, 578, 579, 585, 593, 616, 641, 642, 662, 667, 745], "data_model_el": [12, 17, 19, 268, 348, 419], "p_lb": 12, "pg_lb": [12, 291, 414], "p_ub": 12, "pg_ub": [12, 291, 414], "q_lb": 12, "qg_lb": [12, 291], "q_ub": 12, "qg_ub": [12, 291], "squar": [12, 315, 316, 390, 521, 527], "horizont": [12, 79, 80, 203, 390, 419, 474, 475, 568], "radiu": 12, "vertic": [12, 77, 78, 79, 80, 111, 115, 203, 206, 390, 414, 474, 475, 568], "hess": [12, 106, 109, 114, 115, 486], "let": [12, 17, 19, 111, 486, 527, 592, 593, 607], "know": [12, 351], "our": [12, 17, 19, 255, 496], "place": [12, 115, 487, 549, 571, 588, 668, 744], "xt_oval_cap_curv": [12, 257, 484], "task_tag": [12, 18, 313, 320, 327, 341, 470, 471, 472, 473], "otherwis": [12, 14, 16, 18, 63, 64, 106, 108, 109, 110, 111, 112, 114, 115, 193, 203, 240, 248, 249, 250, 259, 267, 414, 415, 419, 477, 479, 486, 496, 498, 502, 504, 516, 520, 533, 615, 616, 642, 643, 644, 645, 647, 648, 650, 651, 661, 665, 666, 743, 744, 745], "39": [12, 18, 607], "bind": [12, 17, 26, 593, 607, 744], "expect": [12, 17, 19, 20, 38, 66, 105, 106, 109, 115, 203, 239, 244, 246, 248, 250, 252, 256, 265, 466, 489, 496, 504, 520, 741, 742, 743, 744], "restrict": [12, 66, 472], "case39": 12, "10": [12, 13, 17, 18, 20, 26, 28, 31, 43, 156, 157, 158, 160, 161, 171, 172, 174, 177, 178, 182, 183, 184, 185, 187, 203, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 246, 248, 252, 304, 474, 488, 491, 492, 493, 495, 496, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 565, 566, 569, 570, 588, 593, 607, 667, 744, 745, 781], "______": 12, "_______": 12, "671": 12, "140": [12, 159], "646": 12, "300": [12, 18, 159, 218, 607], "16": [12, 19, 20, 112, 495, 565, 566, 569, 570, 607], "299": 12, "99": [12, 18, 211], "652": 12, "115": [12, 18, 607], "12": [12, 17, 18, 20, 108, 210, 244, 245, 248, 249, 251, 255, 495, 565, 566, 569, 570, 759, 760, 761], "508": [12, 18], "139": 12, "61": [12, 18, 492, 588, 607], "661": 12, "45": 12, "222": 12, "93": [12, 43, 106, 114, 414, 607], "580": [12, 607], "645": 12, "564": 12, "8208": 12, "654": 12, "03": [12, 18, 20], "32": [12, 18, 607], "735": 12, "689": [12, 20], "81": [12, 18, 607], "886": 12, "682": 12, "74": 12, "171": 12, "94": [12, 496], "639": 12, "42": [12, 20, 214, 607], "128": 12, "46": 12, "672": 12, "253": 12, "14": [12, 18, 20, 495, 565, 566, 569, 570], "641": 12, "75": [12, 18], "147": 12, "08": [12, 43], "507": 12, "89": [12, 17, 18, 43, 607], "85": [12, 18, 20, 607], "223": 12, "649": 12, "87": [12, 18, 106, 114, 414, 493, 607], "164": 12, "86": [12, 607], "579": 12, "41": [12, 17, 20, 514, 607], "125": [12, 18], "563": 12, "73": [12, 607], "121": [12, 607], "662": 12, "51": [12, 18, 19, 201, 514], "8392": 12, "701": 12, "248": 12, "notic": [12, 17, 19], "display_soln": [12, 107, 108, 109, 110, 111, 112, 113, 115], "nli": [12, 109, 114, 115, 266, 466, 486, 615, 616], "nonlin": [12, 115], "ineq": [12, 117, 119], "ub": [12, 17, 18], "mu_ub": [12, 17, 304], "3e": 12, "06": [12, 18, 20, 496], "90806": 12, "07": 12, "270": [12, 18], "778": 12, "9e": 12, "28": 12, "8787": 12, "7e": 12, "117": 12, "1e": [12, 26, 66, 78, 115, 116, 123, 156, 157, 158, 159, 160, 161, 162, 171, 172, 174, 178, 182, 203, 283, 593, 607], "779": 12, "782": 12, "8e": 12, "103": 12, "48": [12, 18, 493], "459": 12, "163": 12, "4e": 12, "566": [12, 18], "547": 12, "31337": 12, "03857": 12, "lib": [12, 13, 14, 16, 17, 18, 19, 20, 255], "instal": [13, 15, 29, 38, 75, 105, 124, 155, 164, 189, 239, 243, 256, 477, 484, 608, 616, 782], "python": 13, "virtual": 13, "unix": [13, 246, 252], "maco": 13, "window": [13, 77, 78, 79, 80, 246, 252], "python3": 13, "venv": 13, "env": 13, "bin": 13, "script": [13, 250, 496, 535], "confirm": 13, "leav": [13, 585, 642], "finish": [13, 170, 245, 462], "deactiv": 13, "sphinxcontrib": 13, "matlabdomain": 13, "md": [13, 21, 58, 59, 62, 65, 77, 78, 79], "rtd": 13, "theme": 13, "pip": 13, "texliv": 13, "latex": [13, 21], "directori": [13, 14, 15, 16, 77, 78, 79, 80, 96, 97, 98, 100, 154, 255, 476, 477, 541], "latexpdf": 13, "twice": [13, 419, 667, 744], "pick": 13, "ensur": [13, 414, 501], "content": [13, 17, 60, 116, 121, 122, 123, 154, 162, 188, 246, 474, 475, 649, 656], "cross": 13, "date": [13, 29, 75, 124, 155, 164, 189, 240, 243, 608], "everyth": [13, 244, 593, 607, 782], "properli": [13, 108, 111, 112, 255], "creation": [13, 17, 560, 777], "rst": [13, 14, 15, 16], "stub": [13, 14, 15, 16], "mani": [13, 20, 108, 255, 656, 749], "pars": [13, 107, 108, 109, 111, 113, 115, 617, 648, 649, 650], "analyz": 13, "symlink": [13, 14, 15, 16], "subdirectori": 13, "generate_matpower_autodoc": 13, "hard": [13, 19, 744], "prompt": [13, 255, 477], "rebuild": [13, 261, 267, 582], "ref": [13, 14, 15, 17, 20, 258, 285, 286, 319, 414, 419, 426, 467, 489, 499, 500, 501, 513, 534, 535, 540, 545, 566, 609, 610, 611, 612, 613, 614, 636, 637, 639, 656, 749, 758, 760, 761], "generate_autodoc_stub": [13, 15], "generate_source_symlink": [13, 15], "j\u00f8rgen": 13, "cederberg": 13, "2024": [13, 20, 240, 561], "contrib": 13, "21": [13, 20, 495, 565, 569, 570, 574, 759, 760, 761], "zenodo": [13, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 781], "doi": [13, 26, 491, 492, 493, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 588, 781], "5281": [13, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 781], "7746009": 13, "dest": [14, 16], "success": [14, 16, 20, 36, 102, 107, 108, 109, 110, 111, 112, 113, 160, 190, 219, 237, 254, 255, 462, 464, 466, 468, 477, 491, 492, 493, 501, 533, 534, 593, 607, 615, 616, 624, 643, 653, 656, 657, 658, 659, 660, 661, 662, 663, 747, 780], "err_list": [14, 16], "stub_typ": [14, 16], "destdir": [14, 16], "prepend": [14, 16], "dir": [14, 16], "gh_base_url": [14, 16], "url": [14, 16], "mod": [14, 16], "modul": [14, 16], "pkg": [14, 16], "src_path": [14, 16], "o": [14, 16], "error": [14, 16, 61, 115, 170, 261, 267, 475, 546, 547, 574, 642, 667], "fatal": [14, 16, 170], "blob": [14, 16], "class1": [14, 16], "class2": [14, 16], "class3": [14, 16], "class4": [14, 16], "func1": [14, 16], "func2": [14, 16], "func3": [14, 16], "func4": [14, 16], "install_dir": 15, "src": 16, "demonstr": [17, 18], "transform": [17, 18, 19, 20, 43, 282, 283, 310, 311, 360, 361, 362, 363, 364, 365, 366, 367, 412, 413, 420, 460, 470, 495, 496, 565, 616, 617, 644, 647, 754], "discuss": [17, 19], "exactli": [17, 192, 193, 496, 518], "p_": [17, 295], "p_1": 17, "_1": [17, 19, 295], "diagram": [17, 19], "_2": [17, 19], "_k": [17, 19], "p_k": 17, "q_k": 17, "p_2": 17, "q_1": 17, "q_2": 17, "setpoint": [17, 20, 261, 291, 292, 295, 495, 569, 570, 656], "appli": [17, 42, 43, 59, 60, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 181, 188, 203, 206, 246, 252, 267, 475, 478, 480, 481, 482, 483, 488, 491, 492, 493, 568, 584, 592, 593, 616, 617], "implmement": [17, 19], "legacy_dclin": [17, 18, 471], "whose": [17, 60, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 172, 190, 250, 419, 477, 494, 537, 542, 564, 574, 583, 584, 593, 632, 633, 634, 635, 649, 656, 742, 744], "role": 17, "piec": [17, 81, 267, 640, 642], "flag": [17, 26, 31, 66, 74, 77, 78, 79, 80, 107, 108, 109, 110, 111, 112, 113, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 191, 192, 193, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 261, 263, 267, 462, 501, 502, 504, 506, 515, 518, 520, 533, 540, 545, 593, 607, 609, 610, 611, 612, 613, 614, 615, 616, 653, 656, 657, 658, 659, 660, 662, 663, 667, 747, 749], "physic": [17, 19], "dme_dclin": 17, "extend": [17, 38, 239, 256, 495], "dme_dcline_opf": 17, "bus_fr": [17, 283, 295, 297, 310], "bus_to": [17, 283, 295, 297, 310], "loss0": [17, 295, 569], "loss1": [17, 295, 569], "vm_setpoint_fr": [17, 295], "vm_setpoint_to": [17, 295], "p_fr_lb": [17, 295], "p_fr_ub": [17, 295], "q_fr_lb": [17, 295], "q_fr_ub": [17, 295], "q_to_lb": [17, 295], "q_to_ub": [17, 295], "p_fr": [17, 18, 295], "q_fr": [17, 295], "p_to": [17, 295], "q_to": [17, 295], "dme_legacy_dclin": [17, 18, 257, 296, 471, 484], "fbus_on": [17, 295], "tbus_on": [17, 295], "p_fr_start": [17, 295], "p_to_start": [17, 295], "q_fr_start": [17, 295], "q_to_start": [17, 295], "th": [17, 111, 259, 414, 419, 495, 567, 584], "_start": 17, "horzcat": [17, 19, 267, 474, 475], "export_var": [17, 267, 283, 284, 285, 288, 291, 294, 295, 296, 302, 304, 305, 308], "var": [17, 60, 61, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 203, 267, 415, 416, 417, 418, 466, 486, 487, 495, 533, 547, 569, 578, 615, 616, 656], "export_vars_offline_v": [17, 267, 283, 284, 285, 288, 291, 294, 295, 296, 304, 305, 348], "info": [17, 19, 22, 23, 24, 25, 29, 39, 75, 76, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 164, 170, 183, 189, 193, 195, 196, 216, 240, 241, 242, 243, 267, 419, 496, 502, 503, 505, 509, 512, 514, 515, 517, 519, 533, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 615, 616, 644, 645, 647, 648, 650, 651, 656, 657, 658, 659, 660, 662, 663, 747], "b2i": [17, 19], "alreadi": [17, 19, 40, 41, 66, 114, 115, 536, 537, 538], "turn": [17, 19, 240, 283, 488, 495, 565], "bus_dm": 17, "isol": [17, 19, 258, 285, 286, 494, 495, 498, 538, 539, 543, 563, 566, 571], "fill": [17, 19, 39, 312, 617], "set_bus_type_pv": [17, 285], "vm_control": [17, 285, 286], "reli": [17, 19], "global": [17, 244, 245, 248, 249, 251, 258, 782], "apply_vm_setpoint": [17, 291, 292, 295], "i_fr": 17, "i_to": 17, "vm_start": [17, 285], "pp_have_section_sum": [17, 267, 283, 291, 292, 295, 297, 299, 300, 304, 307, 310], "pp_data_sum": [17, 267, 283, 291, 292, 295, 297, 299, 300, 304, 307, 310], "torf": [17, 107, 115, 240, 258, 261, 267, 268, 319, 474, 550, 572], "pp_arg": [17, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 306, 307, 310], "out_": [17, 261, 263, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 306, 307, 310], "fd": [17, 115, 172, 175, 177, 261, 267, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 304, 305, 306, 307, 310, 462, 465, 487, 494, 593, 643], "fprintf": 17, "29": [17, 240, 255], "2f": 17, "mw": [17, 18, 74, 288, 291, 294, 295, 296, 299, 304, 305, 307, 488, 495, 496, 548, 565, 566, 569, 570, 575, 593, 607, 641, 661, 667, 742, 743, 744], "mvar": [17, 18, 43, 288, 291, 294, 295, 296, 299, 304, 307, 495, 548, 565, 566, 569, 570, 593, 744], "pp_have_section_det": [17, 267, 283, 285, 286, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310], "pp_get_headers_det": [17, 267, 283, 285, 286, 288, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310], "pp_data_det": [17, 267], "header": [17, 106, 261, 263, 267, 462], "third": [17, 42, 43], "inj": [17, 18], "1234567": 17, "123456789": 17, "90": [17, 18, 607], "123456": 17, "str": [17, 114, 267, 474, 649], "pp_data_row_det": [17, 267, 283, 285, 286, 288, 289, 291, 292, 295, 297, 299, 300, 304, 305, 307, 310], "sprintf": [17, 19], "7d": 17, "9d": 17, "6d": 17, "themselv": [17, 106, 114, 115, 312, 528, 530, 616, 617], "chose": 17, "keep": [17, 20, 106, 114, 115, 312, 486], "check": [17, 38, 61, 76, 114, 170, 239, 240, 245, 253, 256, 258, 267, 268, 319, 465, 550, 572, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 642, 741, 742, 743, 744], "against": 17, "dme_legacy_dcline_opf": [17, 18, 257, 471, 484], "mu_p_fr_lb": [17, 296], "mu_p_fr_ub": [17, 296], "mu_q_fr_lb": [17, 296], "mu_q_fr_ub": [17, 296], "mu_q_to_lb": [17, 296], "mu_q_to_ub": [17, 296], "polynomi": [17, 81, 259, 260, 388, 389, 395, 495, 535, 567, 592, 625, 626, 640, 641], "breakpoint": [17, 259], "appear": [17, 106, 114, 115, 486], "cost_tabl": [17, 257, 260, 294, 296, 388, 475, 484], "have_cost": [17, 291, 294, 295, 296], "routin": [17, 37, 104, 180, 205, 238, 255, 538, 574], "whether": [17, 66, 77, 78, 79, 80, 108, 114, 115, 156, 157, 158, 159, 160, 161, 193, 202, 203, 241, 242, 246, 249, 252, 470, 471, 477, 502, 515, 536, 540, 545, 563, 609, 610, 611, 612, 613, 614, 642, 749], "build_cost_param": [17, 294, 296, 389, 391, 395], "conveni": [17, 535, 584], "cost_table_util": [17, 257, 259, 484], "ismemb": [17, 546, 547], "variablenam": [17, 474], "poli": [17, 259, 395], "poly_param": [17, 259, 260, 388], "pwl": [17, 259, 260, 388, 395, 616], "pwl_param": [17, 259, 260, 388], "els": [17, 18, 240, 255, 667], "lim": [17, 261, 263, 284, 287, 288, 290, 293, 294, 296, 298, 301, 303, 306, 309, 311, 316, 569, 593, 742, 744], "lb": [17, 18, 319], "pp_have_section_lim": [17, 284, 288, 294, 296, 304, 306], "pp_binding_rows_lim": [17, 284, 288, 294, 296, 304, 306], "pp_get_headers_lim": [17, 284, 288, 294, 296, 304, 306], "pp_data_row_lim": [17, 284, 288, 294, 296, 304, 306], "ctol": [17, 306], "ptol": [17, 306], "dme_shared_opf": [17, 257, 284, 287, 288, 290, 293, 294, 296, 298, 301, 303, 304, 305, 309, 311, 484], "mu": [17, 18, 26, 109, 115, 117, 119, 182, 183, 184, 185, 466, 521, 522, 525, 533, 615, 616, 661, 742, 743], "890": 17, "12345": 17, "78": 17, "mu_lb": [17, 304], "3f": 17, "dcline": [17, 539, 569, 646, 741], "dclinecost": 17, "dmce_legacy_dcline_mpc2": [17, 18, 257, 471, 484], "data_field": [17, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "df": [17, 26, 110, 112, 115, 180, 182, 183, 184, 185, 205, 259, 268, 349, 486, 593, 607, 616, 625, 626, 641], "default_export_data_t": [17, 268, 269, 271, 274, 275], "retriev": [17, 114, 319, 474, 475, 593, 607], "default_export_data_nrow": [17, 268], "dt": [17, 268], "idx_dclin": [17, 484, 675, 741, 750], "qmaxt": [17, 569], "major": [17, 593, 607], "directi": 17, "gcip_fcn": 17, "ob": 17, "dcline_cost_import": [17, 275], "gcep_fcn": 17, "dcline_cost_export": [17, 275], "br_statu": [17, 488, 535, 565, 569], "f_bu": [17, 521, 525, 535, 565, 569], "t_bu": [17, 535, 565, 569], "vf": [17, 495, 528, 530, 548, 565, 569], "vt": [17, 106, 113, 114, 115, 414, 486, 495, 548, 565, 569], "pmin": [17, 45, 64, 77, 113, 115, 472, 495, 496, 535, 569, 570, 572, 640, 667, 744, 745, 747], "pmax": [17, 43, 64, 77, 103, 113, 115, 472, 488, 495, 496, 501, 509, 510, 535, 569, 570, 572, 640, 656, 661, 743, 744], "qminf": [17, 569], "qmaxf": [17, 569], "qmint": [17, 569], "qf": [17, 111, 527, 535, 565, 569], "pt": [17, 131, 535, 565, 569, 593, 616], "qt": [17, 535, 565, 569], "isfield": 17, "mu_pmin": [17, 535, 569, 570, 748], "mu_pmax": [17, 535, 569, 570, 748], "mu_qminf": [17, 569], "mu_qmaxf": [17, 569], "mu_qmint": [17, 569], "mu_qmaxt": [17, 569], "static": [17, 111, 113, 258, 259, 260, 274, 474, 501, 547], "dmce_gen_mpc2": [17, 257, 484], "gencost": [17, 20, 39, 40, 41, 60, 63, 64, 274, 486, 495, 533, 535, 536, 538, 563, 567, 574, 579, 590, 592, 615, 616, 617, 625, 641, 642, 657, 659, 660, 663, 665, 667, 741, 746, 747], "gencost2cost_t": [17, 274], "cost_table2gencost": [17, 274], "next": [17, 19, 63, 64, 114, 115, 163, 190, 192, 193, 462, 475, 501, 510, 511, 513, 518, 662, 667, 747], "nme_legacy_dclin": [17, 257, 444, 447, 484], "np": [17, 19, 414, 419, 420, 432, 435, 436, 443, 448, 449, 450, 455, 460, 547], "nz": [17, 19, 145, 414, 419, 432, 435, 436, 443, 667], "anyth": [17, 19, 244, 593, 607], "nme_legacy_dcline_ac": [17, 257, 445, 446, 484], "form_ac": [17, 19, 257, 316, 317, 318, 415, 416, 417, 484, 772, 773, 774, 775], "add_zvar": [17, 19, 414, 419, 432, 436, 439, 442, 444, 447], "ndc": [17, 741], "nk": [17, 19, 419], "add_var": [17, 19, 114, 115, 320, 331, 333, 336, 338, 340, 348, 382, 388, 395, 406, 414, 419, 486], "pdcf": [17, 444, 447], "qdcf": [17, 444], "pdct": [17, 444, 447], "inf": [17, 31, 64, 108, 111, 113, 115, 156, 157, 158, 159, 160, 161, 171, 172, 174, 178, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 248, 414, 593, 607, 744], "qdct": [17, 444], "spey": 17, "add_vvar": [17, 19, 414, 419, 427, 428, 429, 430, 431], "defer": [17, 19], "recal": [17, 19], "omit": [17, 19, 106, 114, 115, 261, 264, 267, 319, 320, 414, 419, 474, 486], "40": [17, 18, 159, 319, 496, 514, 593, 607], "proper": [17, 62, 477], "becom": [17, 19, 26, 43, 260, 593], "identii": 17, "nme_legacy_dcline_acc": [17, 18, 257, 471, 484], "form_acc": [17, 19, 257, 315, 317, 416, 422, 427, 429, 433, 437, 440, 445, 452, 457, 484], "nme_legacy_dcline_acp": [17, 18, 257, 471, 484], "form_acp": [17, 19, 257, 315, 316, 417, 423, 428, 430, 434, 438, 441, 446, 448, 450, 453, 458, 460, 484], "nme_legacy_dcline_dc": [17, 18, 257, 471, 484], "form_dc": [17, 257, 315, 316, 317, 418, 424, 431, 442, 447, 454, 459, 484], "z_1": 17, "z_2": 17, "analog": 17, "incorpor": [17, 19, 43], "impli": 17, "beyond": [17, 43, 536, 563, 649, 650], "mme_legacy_dclin": [17, 257, 395, 398, 399, 484], "slightli": [17, 662], "mme_legacy_dcline_pf_ac": [17, 18, 257, 471, 484], "get_idx": [17, 114, 115], "s_fr": 17, "gs_": [17, 315, 415], "i1": [17, 106, 108, 111, 114, 115, 259, 320, 349, 388, 395, 414, 474, 486], "iN": [17, 106, 108, 111, 114, 115, 320, 349, 414, 474, 486], "s_to": 17, "imag": [17, 415, 416, 548], "mme_legacy_dcline_pf_dc": [17, 18, 257, 471, 484], "mme_legacy_dcline_opf": [17, 257, 396, 397, 484], "ccv": [17, 259, 579, 616], "just": [17, 267, 462, 475], "ydc": 17, "dimenion": 17, "add_lin_constraint": [17, 114, 115, 486], "dcline_legaci": 17, "ycondc": 17, "add_cost": [17, 320, 341, 348, 388, 389, 395, 406], "kind": [17, 267], "less": [17, 30, 248, 259, 535], "than": [17, 26, 58, 74, 108, 109, 115, 163, 248, 259, 315, 316, 390, 415, 474, 487, 495, 535, 539, 568, 574, 584, 593, 616, 617, 638, 649, 650, 668], "greater": [17, 58, 116, 123], "have_quad_cost": [17, 259, 388, 395], "add_quad_cost": [17, 114, 115, 486], "polpdcf": 17, "higher": [17, 201, 248, 259, 514], "i3": [17, 259, 388, 395], "cost_pdcf": 17, "poly_cost_fcn": [17, 259], "poly_coef": [17, 259], "add_nln_cost": [17, 114, 115, 486], "pwldc": 17, "interior_x0": [17, 327, 370, 371, 373, 374, 375, 379, 387, 388, 395, 401, 413], "x0": [17, 26, 31, 113, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 327, 370, 371, 373, 374, 375, 379, 387, 388, 395, 401, 413], "feasibl": [17, 26, 43, 121, 593, 607], "vv": [17, 114, 115, 448], "maxc": [17, 259, 260], "max_pwl_cost": [17, 259, 260], "ab": [17, 202, 515, 527, 528, 529, 530, 531, 548], "mathmat": [17, 348, 462, 464, 466, 468], "mme_legacy_dcline_opf_ac": [17, 18, 257, 471, 484], "network_model_el": [17, 348], "vm_setpoint": [17, 291, 465], "sign": [17, 195, 203, 505, 515], "swap": 17, "mme_legacy_dcline_opf_dc": [17, 18, 257, 471, 484], "were": [17, 43, 109, 115, 245, 495, 571], "side": [17, 20, 108, 111, 115, 756, 757, 758, 761], "net_model_dc": [17, 257, 484], "mme_legacy_opf_dcline_ac": 17, "math_model_opf_acc": [17, 257, 330, 333, 484], "inclus": [17, 646], "explain": [17, 527, 528, 529, 530, 531], "xt_legacy_dclin": [17, 18, 257, 484, 768], "t_case9_dclin": [17, 18, 484, 741, 750], "go": [17, 589], "gizmo": [17, 762], "entir": [18, 62, 109, 115, 315, 318, 538, 571, 745], "20": [18, 26, 43, 106, 201, 214, 319, 414, 488, 495, 496, 501, 514, 565, 569, 570, 593, 607, 667, 745], "_element_class": [18, 470, 471], "fmt": [18, 313, 470, 471, 473], "mpc2": [18, 264, 265, 313, 470, 471, 473, 497, 539], "v_cartesian": [18, 463, 465, 467, 593], "immedi": [18, 487], "succeed": [18, 20, 203, 464, 466, 468, 477, 653, 656, 657, 658, 659, 660, 662, 663], "27": [18, 20, 172], "23": [18, 111, 569, 570], "setup": [18, 20, 328, 339], "04": [18, 593, 607], "6518": 18, "hr": [18, 495, 744], "area": [18, 43, 60, 285, 488, 495, 538, 550, 566, 568, 570, 571, 574, 593, 607, 616, 617, 644, 648, 665, 667, 745, 747], "zone": [18, 43, 62, 280, 285, 305, 407, 473, 495, 535, 537, 564, 566, 661, 667, 743, 745], "319": 18, "820": 18, "900": 18, "110": [18, 43], "315": 18, "00": [18, 20, 255], "124": [18, 607], "minimum": [18, 178, 203, 495, 565, 566, 570, 593, 656], "maximum": [18, 26, 31, 43, 160, 171, 172, 173, 174, 175, 178, 182, 184, 203, 219, 248, 259, 260, 495, 497, 535, 540, 545, 565, 566, 570, 593, 607, 609, 610, 611, 612, 613, 614, 656, 661, 743, 744, 749], "066": 18, "30": [18, 43, 85, 86, 87, 88, 89, 172, 214, 319, 495, 567, 570, 593, 607, 674], "100": [18, 20, 43, 218, 488, 607, 667, 744], "deg": [18, 20, 744], "11": [18, 20, 30, 31, 43, 111, 137, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 240, 495, 565, 566, 569, 570, 607, 667], "lmp": 18, "mwh": [18, 74, 496, 573], "24": [18, 103, 117, 570, 607], "62": [18, 20, 607], "mvarh": 18, "43": 18, "mag": [18, 417], "pu": [18, 593, 744], "ang": [18, 417, 609, 610, 611, 612, 613, 614], "000": 18, "15": [18, 19, 20, 43, 112, 414, 493, 495, 565, 566, 569, 570], "954": 18, "107": 18, "035": 18, "277": 18, "047": 18, "623": 18, "094": 18, "470": 18, "967": 18, "298": 18, "078": [18, 20], "952": 18, "085": 18, "992": 18, "600": [18, 159, 218, 607], "081": 18, "160": 18, "476": 18, "427": 18, "097": 18, "205": 18, "043": 18, "112": [18, 607], "067": 18, "079": 18, "consumpt": 18, "35": [18, 20, 607], "50": [18, 19, 43, 201, 319, 514, 667], "19": [18, 20, 111, 495, 565, 569, 570, 607], "47": [18, 20], "54": [18, 43], "31": [18, 607], "18": [18, 20, 31, 111, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 255, 495, 565, 569, 570, 607], "49": [18, 106, 114, 414], "68": [18, 114, 607], "25": [18, 43, 117, 319, 474, 570, 607, 744], "88": [18, 607], "02": [18, 20], "65": [18, 607], "37": [18, 172, 607], "38": [18, 43, 106, 114, 414, 607], "69": [18, 607], "64": [18, 20, 607], "13": [18, 20, 43, 116, 159, 246, 252, 495, 565, 566, 569, 570], "70": [18, 43, 607], "01": [18, 20, 496, 593], "58": [18, 607], "131": 18, "95": [18, 20, 26, 566, 593, 607], "34": [18, 20, 43, 607], "36": [18, 607], "97": [18, 20, 607], "92": [18, 607], "84": [18, 20, 607], "231": 18, "197": 18, "010": 18, "046": 18, "250": [18, 43, 209, 218, 607], "98": [18, 20, 493], "22": [18, 26, 43, 111, 569, 570], "mu_sm_fr": 18, "sm_fr": 18, "sm_ub": 18, "sm_to": 18, "mu_sm_to": 18, "762": [18, 491], "375": 18, "760": 18, "prototyp": [18, 20, 313, 484], "wider": 19, "rang": [19, 43, 640], "fictiti": 19, "wide": [19, 60, 469, 568, 667], "verifi": [19, 255], "facil": 19, "sai": 19, "_g": 19, "proport": [19, 584], "imped": [19, 20, 297, 299, 491, 492, 493, 495, 548, 586, 588, 589, 593], "_3": 19, "_4": 19, "_5": 19, "_6": 19, "_7": 19, "_8": 19, "dme_gizmo": 19, "bus_1": 19, "bus_2": 19, "bus_3": 19, "y1r": 19, "y1i": 19, "y2r": 19, "y2i": 19, "m1r": 19, "m1i": 19, "m2r": 19, "m2i": 19, "lr": 19, "li": 19, "ir": 19, "ii": [19, 60], "ni": 19, "sr": 19, "si": [19, 415], "zr1": 19, "zi1": 19, "zr2": 19, "zi2": 19, "bus1": 19, "bus2": 19, "bus3": 19, "until": [19, 474, 593, 747], "look": [19, 20, 170, 255, 574], "dme_branch": [19, 257, 284, 484], "focu": 19, "assumpt": [19, 579], "nme_gizmo": 19, "nme_gizmo_ac": 19, "17": [19, 20, 31, 43, 87, 89, 106, 111, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 495, 565, 566, 569, 570, 607, 741], "zmax": 19, "vname_r": 19, "d_gizmo": 19, "vname_i": 19, "y1": [19, 541], "1j": 19, "y2": 19, "m1": 19, "m2": 19, "ss": 19, "j1": [19, 58, 474], "j2": [19, 58], "j3": 19, "arbitrarili": 19, "obei": 19, "zr1_gizmo": 19, "nme_gizmo_acc": 19, "nme_gizmo_acp": 19, "xt_gizmo": 19, "mind": 20, "enhanc": 20, "plan": [20, 74, 547], "futur": [20, 64, 115, 477, 580, 593, 745], "don": [20, 193, 477, 502, 582], "t_run_mp_3p": [20, 484, 752], "t_case3p_a": [20, 484, 752, 755, 756, 757, 758, 760, 761], "residu": [20, 546], "375e": 20, "042e": 20, "287e": 20, "179e": 20, "961e": 20, "570e": 20, "967e": 20, "405e": 20, "05": [20, 26, 203, 488, 593], "400e": 20, "090e": 20, "908e": 20, "newton": [20, 26, 115, 165, 167, 171, 172, 173, 175, 176, 177, 178, 499, 582, 593, 607, 609, 610, 611, 612, 613, 614, 662], "converg": [20, 115, 158, 159, 171, 172, 173, 174, 175, 178, 183, 184, 185, 207, 208, 209, 215, 216, 217, 218, 220, 499, 533, 540, 545, 609, 610, 611, 612, 613, 614, 615, 616, 643, 656, 749], "ph": [20, 26], "6109": 20, "kw": [20, 292, 297, 300, 310], "4206": 20, "kvar": [20, 292, 297, 310], "5450": 20, "2442": 20, "561": 20, "1173": 20, "590": 20, "kv": [20, 43, 285, 286, 310, 495, 566], "1996": 20, "120": 20, "1637": 20, "1105": 20, "0821": 20, "119": 20, "26": [20, 117, 607], "3055": 20, "2547": 20, "123": [20, 607], "2028": 20, "114": [20, 607], "79": [20, 493], "1750": 20, "9298": 20, "126": 20, "80": [20, 43], "8327": 20, "102": 20, "1341": 20, "970": 20, "52": [20, 514, 607], "2096": 20, "2672": 20, "1894": 20, "1275": 20, "8500": 20, "1800": 20, "9000": 20, "2375": 20, "9500": 20, "229": 20, "345": 20, "66": [20, 607], "152": 20, "455": 20, "1036": 20, "1364": 20, "230": 20, "144": 20, "72": [20, 607], "1323": 20, "881": 20, "2043": 20, "1133": 20, "2598": 20, "1508": 20, "1337": 20, "963": 20, "2074": 20, "1319": 20, "2652": 20, "1830": 20, "790": 20, "871": 20, "780": 20, "xfrm": 20, "xfmr": [20, 647], "substat": 20, "4bu": [20, 754], "unb": [20, 754], "dss": [20, 754], "bal": [20, 754], "opendss": [20, 754], "ieee": [20, 26, 43, 491, 492, 496, 588, 638, 754], "ground": [20, 754], "wye": [20, 754], "sourceforg": [20, 754], "net": [20, 462, 754], "electricdss": [20, 754], "head": [20, 754], "tree": [20, 754], "trunk": [20, 754], "distrib": [20, 754], "ieeetestcas": [20, 754], "basemva": [20, 486, 495, 496, 521, 522, 523, 525, 526, 528, 529, 530, 531, 533, 548, 570, 574, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 615, 616, 617, 625, 639, 643, 647, 657, 658, 659, 660, 662, 663, 665, 747, 748], "freq": [20, 297], "frequenc": [20, 297], "hz": [20, 297], "basekva": 20, "busid": 20, "basekv": [20, 43, 495, 566], "vm1": [20, 286], "vm2": [20, 286], "vm3": [20, 286, 428], "va1": [20, 286], "va2": [20, 286], "va3": [20, 286, 428], "brid": 20, "lcid": 20, "len": [20, 203, 297], "5280": 20, "2500": [20, 593, 607], "xfid": 20, "6000": 20, "ldid": 20, "ldbu": 20, "pd1": [20, 300], "pd2": [20, 300], "pd3": [20, 300], "ldpf1": 20, "ldpf2": 20, "ldpf3": 20, "genid": 20, "gbu": 20, "vg1": 20, "vg2": 20, "vg3": 20, "pg1": [20, 292], "pg2": [20, 292], "pg3": [20, 292, 436], "qg1": [20, 292], "qg2": [20, 292], "qg3": [20, 292, 436], "r11": 20, "r21": 20, "r31": 20, "r22": 20, "r32": 20, "r33": 20, "x11": 20, "x21": 20, "x31": 20, "x22": 20, "x32": 20, "x33": 20, "c11": 20, "c21": 20, "c31": 20, "c22": 20, "c32": 20, "c33": 20, "457541": 20, "15594": 20, "153474": 20, "466617": 20, "157996": 20, "461462": 20, "501648": 20, "384909": 20, "04813": 20, "423624": 20, "06502": 20, "0671": 20, "86241": 20, "85323": 20, "875": 20, "09098": 20, "3254": 20, "xfrm3p": 20, "mile": [20, 297], "configur": 20, "referenc": [20, 114, 115, 297, 616, 617], "hertz": 20, "dme_bus3p": [20, 257, 287, 470, 484], "slack": [20, 26, 351, 359, 491, 492, 493, 584, 588, 589, 593, 609, 610, 611, 612, 613, 614, 656, 662], "nomin": [20, 283, 299, 307, 495, 565, 585, 586, 745], "degre": [20, 178, 283, 284, 285, 286, 296, 490, 495, 565, 566, 593], "dme_line3p": [20, 257, 298, 470, 484], "dme_xfmr3p": [20, 257, 311, 470, 484], "resist": [20, 283, 297, 310, 495, 565], "reactanc": [20, 283, 297, 310, 495, 565], "dme_load3p": [20, 257, 301, 470, 484], "demand": [20, 66, 299, 300, 307, 491, 492, 493, 495, 566, 572, 573, 586, 745], "lpf1": 20, "lpf2": 20, "lpf3": 20, "dme_gen3p": [20, 257, 293, 470, 484], "3x3": [20, 297], "capacit": 20, "nf": [20, 297], "dme_buslink": [20, 257, 290, 470, 484], "linid": 20, "bus3pid": 20, "t_case3p_b": [20, 484, 752], "t_case3p_c": [20, 484, 752], "t_case3p_d": [20, 484, 752], "t_case3p_": [20, 484, 752], "t_case3p_f": [20, 484, 752], "t_case3p_g": [20, 484, 752, 761], "t_case3p_h": [20, 484, 752], "nlp": [21, 26, 32, 33, 38, 115, 166, 179, 180, 181, 182, 183, 184, 185, 204, 205, 206, 225, 229, 238], "site": [21, 43, 62], "consult": 21, "relnot": 21, "appendix": [21, 593], "goal": [21, 106], "restructur": 21, "still": [21, 109, 115, 244, 245, 248, 249, 251, 255, 495, 744], "tn1": 21, "auction": [21, 559, 670, 671, 672, 673, 735], "tn2": [21, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "tn3": [21, 523, 524, 529], "tn4": [21, 522, 523, 524, 525, 526, 528, 529, 530, 531], "cite": 21, "donat": 21, "detect": [22, 23, 24, 25, 38, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 190, 193, 194, 195, 196, 202, 203, 239, 240, 241, 242, 255, 256, 484, 501, 502, 503, 505, 509, 512, 515, 517, 519, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 593, 651], "lu": [22, 30, 178, 593], "privat": [22, 23, 24, 25, 37, 104, 114, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 238, 241, 242, 255, 484, 486, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "lu_vec": 22, "pardiso": [23, 24, 25, 26, 30, 33, 593], "parallel": [23, 43], "direct": [23, 30, 170, 203, 498, 516, 667, 742], "have_feature_pardiso_legaci": [23, 25, 37, 38], "have_feature_pardiso_object": [23, 24, 37, 38], "pardiso_legaci": 24, "v5": 24, "mex": [24, 115, 154, 185, 209, 218, 593, 607], "have_feature_pardiso": [24, 25, 37, 38], "pardiso_object": 25, "v6": [25, 114, 163], "later": [25, 114, 131, 135, 137, 140, 143, 147, 150, 319, 478, 537, 544, 593, 607], "f_fcn": [26, 182, 183, 184, 185], "xmin": [26, 31, 113, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "xmax": [26, 31, 113, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "gh_fcn": [26, 182, 183, 184, 185], "hess_fcn": [26, 182, 183, 184, 185], "exitflag": [26, 31, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "minim": [26, 27, 182, 183, 184, 185, 186], "subject": [26, 28, 31, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 187, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 546, 547], "inequ": [26, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 179, 181, 182, 183, 184, 185, 204, 206, 486, 593, 607, 615, 616, 620, 744], "9th": [26, 182, 183, 184, 185], "d2f": [26, 110, 112, 115, 180, 182, 183, 184, 185, 205, 259, 349, 486, 593, 607, 616, 625, 626, 641], "infti": [26, 31, 210], "dg": [26, 109, 115, 179, 182, 183, 184, 185, 204, 316, 466, 593, 607, 616, 622, 629], "lagrangian": [26, 181, 182, 183, 184, 185, 206], "lxx": [26, 181, 182, 183, 184, 185, 206], "eqnonlin": [26, 107, 108, 109, 110, 111, 112, 113, 115, 181, 182, 183, 184, 185, 206], "ineqnonlin": [26, 107, 108, 109, 110, 111, 112, 113, 115, 181, 182, 183, 184, 185, 206], "parenthes": [26, 115, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "linsolv": [26, 593], "feastol": [26, 116, 593], "toler": [26, 66, 115, 121, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 202, 203, 248, 306, 515, 540, 545, 593, 607, 609, 610, 611, 612, 613, 614, 653, 657, 658, 659, 660, 662, 663, 749], "gradtol": [26, 593], "comptol": [26, 593], "complementar": 26, "costtol": [26, 593], "max_it": [26, 154, 162, 171, 172, 173, 174, 175, 178, 182, 188, 203, 593], "150": [26, 593, 607], "step_control": [26, 115, 185, 209, 218, 593], "enabl": [26, 203, 593, 741, 742, 743, 744], "sc": [26, 115, 163, 185, 209, 218, 547, 593, 607, 713], "red_it": [26, 593], "reduct": [26, 593, 607], "cost_mult": [26, 181, 182, 183, 184, 185, 206], "improv": [26, 43, 747], "3rd": [26, 42, 115, 246, 252, 486, 488, 529, 531, 536, 537, 539, 563, 564, 742], "xi": [26, 593], "99995": [26, 593], "alpha": [26, 66, 188, 259, 592, 593], "sigma": [26, 593], "z0": [26, 266, 495, 593, 616, 617, 747], "alpha_min": [26, 593], "alpha_p": 26, "alpha_d": 26, "smaller": [26, 42, 491, 492, 493, 593, 638, 668], "rho_min": [26, 593], "rho_t": [26, 593], "rho_max": [26, 593], "mu_threshold": [26, 593], "kt": [26, 593], "forc": [26, 115, 593], "max_steps": [26, 593], "1e10": [26, 593], "norm": [26, 171, 172, 174, 178, 198, 593], "exce": [26, 593, 656], "full_hist": 26, "hist": [26, 31, 171, 172, 174, 178], "trajectori": [26, 31, 62, 171, 172, 174, 178], "altern": [26, 30, 31, 62, 115, 118, 120, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 657, 658, 659, 660, 662, 663], "algorithm": [26, 30, 115, 159, 163, 171, 172, 173, 174, 175, 178, 182, 185, 207, 208, 209, 218, 542, 544, 580, 593, 607, 616, 653, 657, 658, 659, 660, 662, 663, 747], "exit": [26, 31, 36, 102, 107, 108, 109, 110, 111, 112, 113, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 237, 254, 501, 780], "reach": [26, 31, 191, 192, 193, 203, 501, 502, 504, 510, 513, 518, 520, 593, 656], "fail": [26, 31, 183, 203, 216, 246, 248, 249, 252, 253, 464, 466, 468, 593, 653, 656, 657, 658, 659, 660, 662, 663], "feascond": [26, 31], "gradcond": [26, 31], "compcond": [26, 31], "costcond": [26, 31], "gamma": [26, 31], "stepsiz": [26, 31, 203, 656], "alphap": [26, 31], "alphad": [26, 31], "messag": [26, 31, 66, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 178, 193, 203, 211, 246, 248, 249, 251, 252, 462, 496, 502, 574, 593, 607, 644, 645, 647, 648, 650, 656, 666], "langrang": [26, 31, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "kuhn": [26, 31, 115, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 565, 566, 569, 570, 621], "tucker": [26, 31, 115, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 565, 566, 569, 570, 621], "mu_l": [26, 31, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "mu_u": [26, 31, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "almost": [26, 31, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "fmincon": [26, 115, 130, 131, 166, 179, 180, 181, 182, 183, 184, 185, 187, 204, 205, 206, 544, 593, 596, 607, 718], "toolbox": [26, 31, 37, 104, 115, 130, 131, 132, 135, 141, 142, 143, 145, 146, 147, 149, 150, 156, 158, 159, 160, 161, 162, 172, 173, 174, 175, 178, 182, 183, 184, 185, 211, 213, 215, 216, 217, 218, 219, 220, 221, 238, 255, 593, 607, 608], "aeq": [26, 31, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "beq": [26, 31, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "en": [26, 182, 183, 184, 185, 207, 208, 209], "wikipedia": [26, 182, 183, 184, 185], "wiki": [26, 182, 183, 184, 185], "nonlinear_program": [26, 182, 183, 184, 185], "f2": [26, 172, 174, 182, 183, 184, 185, 495, 567], "gh2": [26, 182, 183, 184, 185], "hess2": [26, 182, 183, 184, 185], "nargin": [26, 182, 183, 184, 185, 255], "rai": 26, "wang": 26, "hi": 26, "phd": 26, "dissert": 26, "applic": [26, 116, 121, 122, 123, 154, 162, 188, 547, 558], "multi": [26, 170, 475, 593], "period": [26, 42, 58, 60, 62, 66, 74, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 103, 593, 747], "secur": [26, 43, 62, 70, 73, 81], "market": 26, "thesi": 26, "cornel": [26, 211, 555, 557, 562, 593, 607], "univers": 26, "2007": 26, "murillo": 26, "sanchez": 26, "thoma": 26, "issu": [26, 255, 475, 493], "transact": [26, 491, 492, 588, 638], "vol": [26, 491, 492, 588, 638], "aug": [26, 43], "1185": 26, "1193": 26, "1109": [26, 491, 492, 588], "tpwr": 26, "901301": 26, "unconstrain": [27, 186, 495, 565, 576, 620, 621], "banana": [27, 186], "x_1": [28, 176, 177, 187, 197, 259], "x_2": [28, 176, 177, 187, 197, 259], "x_3": [28, 187], "varargin": [29, 75, 77, 78, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 155, 164, 174, 178, 189, 243, 259, 276, 279, 319, 326, 331, 333, 336, 338, 340, 349, 414, 419, 461, 474, 478, 480, 481, 482, 483, 486, 532, 539, 541, 544, 591, 593, 607, 608, 616, 652, 655, 661, 665, 747], "mpver": [29, 75, 124, 155, 164, 189, 484, 750], "previou": [30, 190, 198, 199, 200, 203, 484, 499, 501, 502, 507, 508, 511, 516, 593, 657, 658, 659, 660, 662, 663], "qa": 30, "gilbert": [30, 178, 593], "peierl": [30, 178, 593], "permut": 30, "umfpack": [30, 178, 593], "rh": [30, 118, 120, 259, 486, 579], "alwai": [30, 42, 66, 115, 190, 501, 541], "backslash": [30, 115, 178, 593], "decomposit": [30, 593], "substitut": [30, 593], "short": [30, 172, 264, 283, 314, 316, 317, 318, 495, 565], "cut": 30, "overhead": 30, "thu": [30, 42], "better": [30, 74, 593], "small": [30, 178, 593], "nout": 30, "vec": 30, "thresh": [30, 115], "lu3": [30, 178, 593], "lu3a": 30, "lu4": [30, 178, 593], "lu5": [30, 178, 593], "lu3m": 30, "lu3am": 30, "lu4m": 30, "lu5m": 30, "paren": [30, 66, 115], "arg": [30, 61, 115, 157, 178, 203, 214, 414, 474, 487, 501, 514, 521, 593], "amd": [30, 178, 593], "pivot": 30, "threshold": [30, 58, 115], "mtype": 30, "nonsymmetr": 30, "iparm": 30, "1st": [30, 42, 60, 61, 108, 111, 190, 315, 415, 488, 501, 521, 522, 523, 524, 525, 526, 616, 742], "2nd": [30, 42, 246, 252, 315, 414, 415, 486, 488, 521, 522, 523, 524, 525, 526, 536, 537, 539, 550, 563, 564, 616, 692, 742], "dparm": 30, "tr": [30, 108, 115], "miss": [31, 39, 61, 109, 110, 113, 115, 314, 315, 318, 415, 416, 417, 617], "quadprog": [31, 115, 149, 150, 156, 158, 159, 160, 161, 211, 213, 215, 216, 217, 218, 219, 220, 221, 593, 606, 607], "v8doc": [31, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "sa": [31, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "sashtml": [31, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "iml": [31, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "chap8": [31, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "sect12": [31, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "htm": [31, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "1003": [31, 156, 157, 158, 160, 161, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "quiet": [32, 33, 34, 35, 67, 68, 69, 70, 71, 72, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 669, 671, 672, 673, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779], "mplinsolv": [34, 37, 38, 115, 178, 593], "qps_mip": [35, 37, 38, 218], "exit_on_fail": [36, 102, 237, 254, 780], "unless": [36, 63, 102, 170, 237, 246, 248, 249, 251, 252, 254, 320, 414, 476, 477, 616, 656, 657, 658, 659, 660, 662, 663, 780], "t_run_test": [36, 102, 237, 244, 245, 246, 248, 249, 251, 252, 254, 255, 256, 780], "all_ok": [36, 102, 237, 250, 254, 780], "web": [37, 104, 238, 782], "asid": [37, 104, 238], "mipsver": [37, 38], "mips_example1": [37, 38], "mips_example2": [37, 38], "test_mip": [37, 38], "t_mip": [37, 38], "t_mips_pardiso": [37, 38], "t_mplinsolv": [37, 38], "t_qps_mip": [37, 38], "have_feature_lu_vec": [37, 38], "mpci": [39, 62], "fuel": [39, 546, 547], "new_mpc": [39, 40, 41], "gen_typ": 39, "insert": [39, 267, 268, 665], "bottom": [39, 79, 674], "genfuel": [39, 40, 41, 62, 484, 495, 539, 547, 750], "unknown": [39, 546, 547], "newli": [39, 40, 41, 59, 267, 462], "storag": [40, 42, 48, 60, 63, 66, 74, 77, 78, 79, 84, 99, 546, 547, 572], "xgd": [40, 41, 42, 59, 60, 62, 64], "sd": [40, 42, 62, 63, 451, 491, 492, 493, 586], "xgen": 40, "storagedata": [40, 42, 60, 62, 63], "new_xgd": [40, 41], "new_sd": 40, "storageunitdata": 40, "xgendata": [40, 41, 42, 54, 55, 56, 57, 60, 62, 63, 64], "mat": [40, 41, 59, 61, 62, 63, 64, 495, 574, 656, 657, 658, 659, 660, 662, 663, 665, 666], "xgd_tabl": [40, 41, 64], "filenam": [40, 41, 664, 665, 666], "loadstoragedata": [40, 62, 104, 105], "sd_tabl": [40, 63], "ess": [40, 546], "loadxgendata": [40, 41, 59, 62, 104, 105], "wind": [41, 50, 51, 52, 53, 59, 62, 103, 546, 547, 647], "windunitdata": 41, "profil": [42, 47, 51, 52, 59, 60, 62, 103], "argin": 42, "dim": [42, 60, 62, 319, 474, 536, 537, 539, 549, 563, 564, 668], "chgtab": [42, 488, 666], "chgtabsi": 42, "xgdi": [42, 62], "sdi": 42, "ctset": 42, "dimension": [42, 59, 62, 63, 64, 106, 109, 114, 315, 316, 390, 414, 415, 536, 563], "chgtype": [42, 60], "nt": [42, 49, 60, 62, 74, 103], "nj_max": [42, 60, 74], "idx_profil": [42, 59, 62, 103, 104, 105], "chgtabi": 42, "storagei": [42, 62], "ctsetsi": 42, "contingencydata": [42, 60], "nor": 42, "scenario": [42, 60, 62, 74, 103], "conting": [42, 43, 46, 60, 62, 66, 74, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93], "expand": [42, 62, 108, 111], "singleton": [42, 60], "ignor": [42, 60, 115, 170, 214, 246, 361, 538, 571, 593, 607, 644, 744], "mpcdata": [42, 60], "mandatori": 42, "oppos": [42, 66, 240, 259, 390, 474, 475, 495, 582], "nj": [42, 103], "unspecifi": [42, 546, 744], "probabl": [42, 49, 58, 62, 488, 568, 582], "correctli": 42, "inconsist": 42, "resp": 42, "ie": [42, 152, 593], "dedic": 42, "binari": [42, 113, 115, 156, 157, 158, 159, 160, 161, 414, 547], "span": 42, "cghtype": 42, "118": 43, "caseformat": [43, 44, 45, 81, 82, 83, 84, 484, 496, 535, 616, 653, 656, 657, 658, 659, 660, 662, 663, 670, 674, 675, 676, 677, 678, 679, 680, 750, 762], "ieee118cdf": 43, "txt": [43, 246, 252, 495, 593, 607, 648, 650], "sep": 43, "2004": 43, "cdf2matp": 43, "rev": [43, 644, 648, 664], "warn": [43, 66, 115, 156, 157, 158, 159, 160, 161, 496, 644, 645, 647, 648, 650, 666], "cdf": [43, 496], "lab": [43, 495], "ec": [43, 495], "uw": [43, 495], "edu": [43, 152, 211, 495, 555, 557, 562, 593, 607], "pstca": [43, 495], "psap": 43, "mar": [43, 561], "2006": 43, "archiv": 43, "1961": 43, "2010": [43, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 781], "cm": 43, "cz": 43, "group": [43, 59, 162, 494, 498, 539, 543], "thermal": 43, "cabl": 43, "safe": 43, "config": 43, "345kv": 43, "circuit": [43, 495], "161": 43, "138kv": 43, "split": [43, 148, 556, 642], "ramp_agc": [43, 535, 570], "ramp_10": [43, 535, 570], "ramp_30": [43, 535, 570], "c118": 43, "2012": 43, "consider": 43, "compromis": 43, "procedur": [43, 593], "synchron": [43, 546, 547], "capacitor": 43, "decreas": 43, "104": 43, "hydro": [43, 546], "close": [43, 496], "geograph": 43, "locat": [43, 108, 109, 110, 111, 112, 202, 203, 255, 476, 477, 515, 539, 541, 656], "retir": 43, "yield": [43, 496, 587], "minu": [43, 585], "chosen": [43, 60], "impact": 43, "deviat": [43, 656, 662], "criterion": [43, 203, 593], "wors": 43, "worst": 43, "upgrad": 43, "76": 43, "caus": [43, 203, 240, 656], "infeas": [43, 157, 160, 211, 212, 214, 219, 496, 656], "exceed": [43, 212, 744], "appar": [43, 283, 315, 527, 593, 607, 620], "enough": [43, 211, 550], "77": 43, "addition": [43, 656, 657, 658, 659, 660, 662, 663], "330": 43, "defici": 43, "difficult": 43, "resort": 43, "wherea": 43, "stochast": [45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 66, 70, 73, 98], "commit": [45, 46, 47, 48, 51, 52, 53, 57, 60, 66, 72, 73, 74, 79, 80, 97, 98, 100], "ex_case3a": [45, 104, 105], "startup": [45, 291, 477, 495, 535, 567], "shutdown": [45, 495, 535, 567], "transit": [49, 58, 62, 78], "definit": [49, 267, 558], "determinist": [52, 62, 67, 68, 69, 71, 72, 95, 593, 607], "multiperiod": [55, 66, 71, 95], "ramp": [55, 58, 74, 77, 99, 304, 495, 570], "md0": 58, "mask": [58, 583], "taken": [58, 95, 115, 165, 166, 168, 169, 203, 491, 492, 493, 495, 530, 531, 563, 564, 565, 576, 584, 638, 650, 656, 741], "transmat": [58, 62], "ve": 58, "profilesi": [59, 62], "profiles0": 59, "mycas": [59, 548], "myxgendata": 59, "iwind": 59, "addwind": [59, 104, 105], "mywindunit": 59, "mywindprofil": 59, "loadmd": [59, 60, 66, 104, 105], "mytransmat": 59, "apply_profil": [59, 62, 104, 105], "pr_rep": 60, "pr_rel": 60, "pr_add": 60, "pr_tcont": 60, "pr_type": 60, "pr_tmpcd": 60, "pr_txgd": 60, "pr_tctd": 60, "pr_tstgd": 60, "pr_chgtype": 60, "question": [60, 240, 744], "offer": [60, 64], "ct_tbu": [60, 535, 568], "ct_tgen": [60, 488, 535, 568], "ct_tbrch": [60, 488, 535, 568], "ct_tareabu": [60, 535, 568], "ct_tareagen": [60, 535, 568], "ct_tareabrch": [60, 535, 568], "ct_tload": [60, 535, 568], "ct_tareaload": [60, 488, 535, 568], "ct_tgencost": [60, 535, 568], "ct_tareagencost": [60, 535, 568], "commitsch": [60, 64], "initialpg": [60, 64], "rampwearcostcoeff": [60, 64], "positiveactivereservepric": [60, 64], "positiveactivereservequant": [60, 64], "negativeactivereservepric": [60, 64], "negativeactivereservequant": [60, 64], "positiveactivedeltapric": [60, 64], "negativeactivedeltapric": [60, 64], "positiveloadfollowreservepric": [60, 64], "positiveloadfollowreservequant": [60, 64], "negativeloadfollowreservepric": [60, 64], "negativeloadfollowreservequant": [60, 64], "minstoragelevel": [60, 63], "maxstoragelevel": [60, 63], "outeff": [60, 63], "ineff": [60, 63], "lossfactor": [60, 63], "rho": [60, 63], "usual": [60, 533, 593, 607, 615, 616], "idx_ct": [60, 484, 488, 535, 750], "ct_col": [60, 535, 568], "old": [60, 116, 121, 123, 154, 159, 162, 218, 538, 568, 571, 580, 593, 607], "vale": 60, "pre": [60, 114, 259, 266, 464, 466, 468, 469], "iii": 60, "interpret": [60, 312, 649, 650], "whenev": 60, "expans": 60, "within": [60, 106, 108, 111, 114, 115, 259, 260, 414, 472, 475, 486, 504, 520, 579], "varfil": 61, "vartyp": 61, "varnam": 61, "prioriti": [61, 190, 201, 501, 514, 593], "throw": [61, 115], "regardless": [61, 163, 489], "transmati": 62, "contabi": 62, "trajdatai": 62, "contab": 62, "trajdata": 62, "n_t": [62, 74], "n_j": [62, 74], "horizon": [62, 66, 74], "older": [62, 474], "centroid": 62, "n_w": 62, "colnam": [63, 64], "correpsond": 63, "md_init": [63, 104, 105], "unitidx": 63, "expectedterminalstorageaim": 63, "expectedterminalstoragemin": 63, "expectedterminalstoragemax": 63, "initialstorag": 63, "initialstoragelowerbound": 63, "initialstorageupperbound": 63, "initialstoragecost": 63, "terminalstoragepric": 63, "terminalchargingprice0": 63, "terminaldischargingprice0": 63, "terminalchargingpricek": 63, "terminaldischargingpricek": 63, "terminalpg": 64, "commitkei": [64, 66], "initialst": 64, "minup": 64, "mindown": 64, "potenti": [64, 462, 501, 656], "fueltyp": 64, "gen_statu": [64, 488, 535, 570], "mdi": 66, "mdo": [66, 74], "func": [66, 170, 553], "cplex": [66, 115, 121, 128, 156, 159, 168, 169, 213, 218, 593, 595, 607, 707], "gurobi": [66, 115, 116, 123, 124, 134, 158, 159, 168, 169, 207, 208, 209, 215, 218, 239, 593, 598, 607, 710], "build_model": 66, "miqp": [66, 115, 144, 156, 158, 159, 160, 169, 222, 227, 238, 484, 700], "coordin": [66, 203, 259, 462, 495, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 539, 567, 593, 609, 610, 612, 613, 618, 619, 781], "solve_model": 66, "resolve_new_cost": 66, "unchang": [66, 538], "dc_model": 66, "fixed_r": 66, "contstraint": 66, "never": 66, "q_coordin": 66, "security_constraint": 66, "terminal_target": 66, "cyclic": 66, "simultan": [66, 109, 115, 419, 593, 607], "uc": [66, 69, 79, 80, 86], "down": [66, 659, 663, 747], "roll": [66, 190, 193, 501], "happen": 66, "alg": [66, 115, 159, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 187, 203, 207, 208, 209, 218, 346, 580, 593, 616], "miqps_mast": [66, 115, 128, 133, 134, 135, 144, 156, 157, 158, 160, 161, 169, 222, 238, 239, 591], "qps_master": [66, 115, 125, 127, 128, 133, 134, 136, 137, 142, 143, 144, 145, 148, 149, 150, 169, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 236, 238, 239, 652], "skip_pric": [66, 115, 156, 157, 158, 159, 160, 161], "skip": [66, 115, 156, 157, 158, 159, 160, 161, 170, 251, 255], "price_stage_warn_tol": [66, 115, 156, 157, 158, 159, 160, 161], "mi": [66, 115, 156, 157, 158, 159, 160, 161], "econom": [67, 551], "consid": [74, 248, 419, 546, 547], "noth": [74, 261, 267, 313, 320, 462, 593, 607], "though": [74, 472], "incomplet": 74, "nb": [74, 109, 113, 115, 491, 492, 493, 499, 501, 516, 521, 523, 524, 525, 526, 547, 576, 584, 586, 588, 589, 593, 607, 615, 656, 667, 745], "n_b": 74, "n_g": 74, "nl": [74, 490, 491, 492, 493, 521, 522, 525, 528, 530, 548, 588, 589, 615], "n_l": 74, "nc_max": 74, "n_c": 74, "rup": 74, "upward": 74, "rdn": 74, "downward": 74, "lamp": 74, "muf": 74, "selector": [76, 463, 465, 467, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "default_opt": [76, 116, 121, 122, 123, 154, 162, 188, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "valid_opt": [76, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "nested_struct_copi": [76, 223, 238, 239, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "plot": [77, 78, 79, 80, 96, 97, 98, 100, 105, 190, 203, 501, 593], "option1_nam": [77, 78, 79], "option1_valu": [77, 78, 79], "parenthesi": [77, 78, 79, 80], "saveit": [77, 78, 79, 80], "saveal": [77, 78, 79], "savepath": [77, 78, 79, 80, 477], "savenam": [77, 78, 79, 80], "placehold": [77, 78, 79, 80, 109, 115, 203], "size_factor": [77, 78, 79, 80], "font": [77, 78, 79, 80], "marker": [77, 78, 79, 80], "show_pc": 77, "pc": 77, "show_variable_pmax": 77, "show_limit": 77, "show_conting": 77, "show_reserv": 77, "show_grid": [77, 78], "divid": [77, 78], "staircas": 78, "evenli": [78, 103, 640], "align": 78, "smooth": [78, 593, 607], "displac": 78, "sort_tol": 78, "round": 78, "nearest": 78, "sort": 78, "show_expected_initi": 78, "show_expected_fin": 78, "show_adjusted_dispatch": 78, "show_dispatch": 78, "md2": 79, "titl": [79, 80, 203, 267], "subtitl": [79, 80], "legend": [79, 80, 203], "uc1": [79, 80], "uc2": [79, 80], "xlabel": [79, 80, 203], "axi": [79, 80, 203, 667], "ylabel": [79, 80, 203], "rowlabel": [79, 80], "pff": 79, "optin": 80, "red": [80, 319], "status": [80, 261], "grai": 80, "case30": [81, 657, 658, 659, 660, 662, 663, 674], "case30v19": 81, "segment": [81, 495, 567], "tlmp": [83, 84, 99], "cong": [83, 84], "chen": [83, 84], "most_ex5_mpopf": [95, 104, 105], "create_plot": [96, 97, 98, 100], "create_pdf": [96, 97, 98, 100], "savedir": [96, 97, 98, 100], "choic": [96, 97, 98, 100, 203, 255, 584, 593], "sp_plot": 96, "spuc_plot": 97, "suc_plot": 98, "deteminist": 100, "uc_plot": 100, "dynam": [101, 747], "space": [103, 640], "getprofil": [103, 104, 105], "most_summari": [104, 105], "plot_gen": [104, 105], "plot_storag": [104, 105], "plot_uc": [104, 105], "plot_uc_data": [104, 105], "mostver": [104, 105], "addgen2mpc": [104, 105], "addstorag": [104, 105], "filter_ramp_transit": [104, 105], "uniformwindprofil": [104, 105], "most_ex1_": [104, 105], "most_ex2_dcopf": [104, 105], "most_ex3_dcopf_w_uc": [104, 105], "most_ex4_dcopf_ss": [104, 105], "most_ex6_uc": [104, 105], "most_ex7_suc": [104, 105], "ex_case3b": [104, 105], "ex_contab": [104, 105], "ex_load_profil": [104, 105], "ex_storag": [104, 105], "ex_transmat": [104, 105], "ex_wind": [104, 105], "ex_wind_profil": [104, 105], "ex_wind_profile_d": [104, 105], "ex_wind_uc": [104, 105], "ex_xgd": [104, 105], "ex_xgd_ramp": [104, 105], "ex_xgd_r": [104, 105], "ex_xgd_uc": [104, 105], "test_most": [104, 105], "t_most_3b_1_1_0": [104, 105], "t_most_3b_1_1_2": [104, 105], "t_most_3b_3_1_0": [104, 105], "t_most_3b_3_1_2": [104, 105], "t_most_30b_1_1_0": [104, 105], "t_most_30b_1_1_17": [104, 105], "t_most_30b_3_1_0": [104, 105], "t_most_30b_3_1_17": [104, 105], "t_most_fixed_r": [104, 105], "t_most_30b_1_1_0_uc": [104, 105], "t_most_sp": [104, 105], "t_most_spuc": [104, 105], "t_most_mpopf": [104, 105], "t_most_uc": [104, 105], "t_most_suc": [104, 105], "t_most_tlmp": [104, 105], "t_most_w_d": [104, 105], "c118swf": [104, 105], "t_case30_most": [104, 105], "t_case3_most": [104, 105], "t_case_tlmp": [104, 105], "t_case_tlmp_storag": [104, 105], "loadgenericdata": [104, 105], "mpoption_info_most": [104, 105], "sm": [106, 107, 461], "block": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 172, 204, 274, 414, 486, 536, 563, 616], "entiti": [106, 107], "shallow": [106, 114, 115], "describe_idx": [106, 114, 115], "get_n": [106, 114], "init_indexed_nam": [106, 108, 109, 110, 111, 112, 113, 114, 115, 486], "set_type_idx_map": [106, 114, 414], "foo": [106, 114, 115, 170, 255], "bar": [106, 114, 115, 255], "suppos": [106, 114], "charg": [106, 495, 547, 548, 565], "fleet": 106, "vehicl": 106, "week": 106, "daili": 106, "discharg": 106, "drive": 106, "batteri": [106, 547], "dai": 106, "battery_st": 106, "new_sm": 106, "idx_list": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 349, 414, 486], "sm_var": 106, "v0": [106, 113, 114, 115, 414, 486, 540, 545, 609, 610, 611, 612, 613, 614, 749], "vl": [106, 108, 113, 114, 115, 414, 486, 616], "vu": [106, 113, 114, 115, 414, 486], "sm_lin": 106, "varset": [106, 109, 110, 114, 115, 349, 486], "sm_nle": 106, "computed_bi": [106, 114, 486], "sm_nli": 106, "sm_qdc": 106, "cp": [106, 114, 349, 486, 547, 626], "sm_nlc": 106, "tell": 106, "361": [106, 114], "semicolon": [106, 114, 115, 261, 264, 267, 319, 320, 414, 419, 474, 486], "retun": [106, 261, 264, 267, 319, 320, 414, 419, 474], "dim_list": [106, 114, 115], "group_by_nam": [106, 114, 414], "boolean": [106, 107, 108, 109, 111, 113, 240, 244, 246, 248, 249, 250, 252, 258, 259, 261, 267, 268, 414, 419, 477], "consolid": [106, 114, 414], "lin": [106, 108, 114, 115, 466, 486, 533, 615, 616], "set_manag": [107, 108, 109, 110, 111, 112, 113, 114, 115, 238, 239, 461], "set_param": [107, 108, 109, 110, 111, 112, 113, 115], "has_parsed_soln": [107, 115], "fid": [107, 108, 109, 110, 111, 112, 113, 115, 649], "sm_variabl": [107, 108, 109, 110, 111, 112, 115, 238, 239], "among": [107, 108, 109, 110, 111, 112, 113, 255], "eflag": [107, 108, 109, 110, 111, 112, 113, 115], "failur": [107, 108, 109, 110, 111, 112, 113, 115, 159, 171, 172, 173, 174, 175, 178, 184, 185, 207, 208, 209, 218, 462], "fileid": [107, 108, 109, 110, 111, 112, 113], "parse_soln": [107, 108, 109, 111, 113, 115], "stash": [107, 108, 109, 111, 113, 115], "set_manager_opt_model": [108, 109, 110, 111, 112, 113, 238, 239, 461], "cach": [108, 111, 112, 113, 115, 240, 461, 465, 467, 486], "eval": [108, 109, 110, 111, 112, 115, 183, 216], "get_soln": [108, 109, 110, 111, 112, 113, 115], "fetch": [108, 109, 110, 111, 112, 113, 115], "memori": [108, 115, 211, 593, 607], "avl": [108, 115, 578], "lvl": [108, 115, 578], "uvl": [108, 115, 578], "subsequ": [108, 111, 112, 113, 115, 190, 240, 486, 510, 513, 538], "pmi": [108, 109, 111, 115, 615, 616], "ax_u": [108, 115], "l_ax": [108, 115], "n_x": [108, 109, 110, 111, 112], "mu_l_pmis_5_3": 108, "effici": [108, 109, 111, 113, 115, 491, 535, 579], "nln": [109, 615, 616], "nle": [109, 114, 115, 266, 466, 486, 615, 616], "eval_hess": [109, 115], "account": [109, 110], "g_": [109, 307, 316], "implment": [109, 110], "nlps_master": [109, 115, 130, 131, 136, 137, 139, 166, 182, 183, 184, 186, 187, 225, 238, 239], "friend": [109, 115, 165, 166, 167, 168, 169], "d2g": [109, 115, 316, 415, 623, 630], "likewis": [109, 115, 486], "qmi": [109, 115, 615, 616], "iseq": [109, 115], "dg_pmis_5_3": 109, "nlc": [110, 114, 115, 486], "fcn1": [110, 115], "my_cost_function1": [110, 115], "other_arg": [110, 115], "fcn2": [110, 115], "my_cost_function2": [110, 115], "mycost1": [110, 115], "mycost2": [110, 115], "df_pg_2_4": [110, 112], "qcn": [111, 115], "l_i": 111, "qq_i": 111, "c_i": 111, "u_i": 111, "n_q": [111, 120], "qq_1": 111, "dot": [111, 259, 474, 475], "qq_": 111, "denot": [111, 255, 284, 288, 294, 296, 304, 305, 592], "repeat": [111, 204], "mathcal": 111, "aa_i": 111, "a_": 111, "xblk": [111, 204], "qblk": 111, "blkprod2vertcat": 111, "my_quad": 111, "q1": [111, 112, 115], "c1": [111, 112, 115, 495, 496, 567], "l1": 111, "u1": 111, "my_var1": 111, "my_var2": 111, "my_set": 111, "isblk": 111, "qfx_u": 111, "jqf": 111, "qfx": 111, "l_qfx": 111, "g_i": [111, 117], "mu_l_quad": [111, 207, 208, 209], "mu_u_quad": [111, 207, 208, 209], "mu_l_quad_pmis_5_3": 111, "blk1": 111, "blk2": 111, "m_1": 111, "m_2": 111, "blkdiag": 111, "repmat": 111, "mxn": 111, "nxn": 111, "qdc": [112, 114, 115, 486], "conform": [112, 115, 579], "quad_cost1": [112, 115], "lin_cost2": [112, 115], "c2": [112, 115, 496], "k2": [112, 115], "varsets_idx": [113, 115], "varsets_len": [113, 115], "varsets_x": [113, 115], "varsets_cell2struct": [113, 115], "accept": [113, 115, 312], "vmin": [113, 115, 496, 519, 535, 566, 593, 744], "vmax": [113, 115, 496, 519, 535, 566, 593, 744], "nx": [113, 115, 156, 157, 158, 159, 160, 161, 190, 191, 192, 203, 324, 486, 501, 504, 506, 510, 513, 518, 520, 685, 686], "pg0": [113, 115, 414], "zij0": [113, 115, 414], "zijmin": [113, 115], "zijmax": [113, 115], "ztype": [113, 115, 414], "yl": 113, "yu": 113, "va0": [113, 534], "vau": 113, "vat": 113, "mupmin": [113, 115], "mupmax": [113, 115], "murmin_2_3": 113, "nv": [113, 115, 414], "return_vector": 113, "presenc": 113, "def_set_typ": [114, 115, 331, 333, 336, 338, 340, 414, 415, 416, 417, 418, 486], "set_typ": [114, 115, 414, 486], "userdata": [114, 115, 261], "add_named_set": [114, 331, 333, 336, 338, 340, 414, 486], "declar": 114, "init_set_typ": [114, 331, 333, 336, 338, 340, 414, 486], "ideal": [114, 260, 487], "due": [114, 115], "bug": [114, 211, 475], "alter": 114, "savannah": [114, 475], "52614": 114, "workaround": 114, "sure": 114, "add_": [114, 115], "valid_named_set_typ": 114, "public": [114, 486], "display_set": 114, "screen": [114, 496, 593, 607], "get_userdata": [114, 115], "retreiv": [114, 115, 486], "getn": [114, 115], "params_": 114, "a_struct": [114, 115], "an_obj": 114, "stype": 114, "sname": 114, "deprec": [114, 115, 119, 495, 578, 580, 591, 593, 615, 652, 700, 734, 745], "field1": 114, "field2": 114, "var_ord": 114, "unpack": 114, "pmismatch": [114, 115], "idx1": [114, 115, 419], "idx2": [114, 115, 419], "set_type1": [114, 115], "set_type2": [114, 115], "mu_l_foo": [114, 115], "mu_u_foo": [114, 115], "nbar": [114, 115], "prefer": [114, 115, 535], "haven": [114, 115], "om": [115, 179, 180, 181, 349, 466, 486, 487, 533, 615, 616, 620, 621, 622, 623, 624, 629, 630, 631, 655], "intial": 115, "params_var": [115, 414], "params_lin_constraint": 115, "params_nln_constraint": 115, "eval_nln_constraint": 115, "eval_nln_constraint_hess": 115, "params_nln_cost": 115, "params_quad_cost": 115, "eval_nln_cost": 115, "eval_quad_cost": 115, "problem_typ": 115, "is_solv": 115, "indentifi": 115, "ghne": 115, "ghni": 115, "ghl": 115, "prob_typ": 115, "jac": [115, 171, 172, 173, 175, 178, 203, 616, 747], "leq": [115, 226], "nleq": [115, 165, 224, 228, 238], "prob": [115, 178], "lagrang": [115, 181, 206, 566, 619, 623, 630, 633, 635, 637], "an_om": 115, "sm_nln_cost": [115, 238, 239], "sm_quad_cost": [115, 238, 239], "4th": [115, 414, 486, 488, 522, 524, 526, 536, 537, 563, 564], "is_mixed_integ": 115, "sm_nln_constraint": [115, 238, 239], "sm_lin_constraint": [115, 238, 239], "IN": [115, 486], "5th": [115, 488, 523, 525, 528, 530, 563], "6th": [115, 488], "pgcost": 115, "lin_con_1": 115, "nle_con_b": 115, "eval_lin_constraint": 115, "dg_b_2_3": 115, "unbound": [115, 157, 212, 214, 495, 565, 576, 744], "nleqs_mast": [115, 132, 165, 171, 172, 173, 174, 176, 177, 178, 203, 224, 238, 239], "mosek": [115, 144, 159, 160, 162, 163, 168, 169, 218, 219, 593, 604, 607, 714], "linprog": [115, 142, 143, 159, 161, 214, 218, 221, 593, 602, 607], "glpk": [115, 122, 133, 157, 159, 168, 169, 214, 218, 593, 597, 709], "bpmpd": [115, 125, 168, 169, 211, 218, 593, 607], "milp": [115, 133, 135, 144, 156, 157, 158, 159, 160, 169, 222, 239, 484], "tbx": [115, 159, 218, 544, 716], "intlingprog": 115, "minlp": [115, 166], "art": [115, 116, 139, 140, 141, 155, 166, 184, 185, 208, 209, 217, 593, 601, 607, 720], "knitro": [115, 116, 139, 140, 141, 155, 166, 184, 185, 187, 208, 209, 217, 218, 593, 601, 607, 720], "bpmpd_mex": [115, 125, 211, 218, 593, 607, 705], "clp": [115, 127, 145, 212, 218, 593, 594, 706], "fast": [115, 172, 175, 346, 540, 580, 593, 607, 749], "newon": 115, "fsolv": [115, 132, 165, 167, 172, 173, 174, 175, 178], "gauss": [115, 171, 174, 175, 545, 593, 607, 749], "seidel": [115, 171, 174, 175, 545, 593, 607], "ipopt": [115, 136, 137, 154, 166, 168, 183, 185, 187, 209, 216, 218, 593, 600, 607, 719], "coin": [115, 127, 136, 145, 154, 183, 185, 209, 212, 216, 218, 593, 607], "pure": [115, 185, 209, 218, 593, 607], "mips_opt": [115, 185, 209, 218], "variant": [115, 185, 209, 218, 607], "osqp": [115, 148, 188, 189, 218, 220, 239, 593, 605, 715], "ot": [115, 159, 168, 169, 218, 547, 593], "intlinprog": [115, 135, 159, 161, 599], "bp_opt": [115, 211, 218], "bp": [115, 125, 211, 218, 540, 580], "clp_opt": [115, 212, 218], "cplex_opt": [115, 156, 159, 213, 218, 238, 239, 593, 607], "fd_opt": [115, 172, 175], "nleqs_fd_newton": [115, 175, 238, 239], "fmincon_opt": [115, 182, 185], "fsolve_opt": [115, 173, 175], "glpk_opt": [115, 157, 159, 214, 218], "grb_opt": [115, 123, 158, 159, 207, 208, 209, 215, 218, 607], "gs_opt": [115, 174, 175], "nleqs_gauss_seidel": [115, 171, 175, 238, 239], "intlinprog_opt": [115, 159, 161], "ipopt_opt": [115, 183, 185, 209, 216, 218, 238, 239, 593, 607], "knitro_opt": [115, 116, 184, 185, 209, 217, 218, 593, 607], "leq_opt": 115, "absolut": [115, 488, 541], "linprog_opt": [115, 159, 161, 218, 221], "mosek_opt": [115, 159, 160, 218, 219, 238, 239, 593, 607], "newton_opt": [115, 175, 178], "nleqs_newton": [115, 171, 175, 238, 239], "osqp_opt": [115, 218, 220, 238, 239, 593], "quadprog_opt": [115, 218, 221], "relax_integ": 115, "relax": [115, 558, 593, 744], "elaps": [115, 255, 462, 616, 643, 656, 657, 658, 659, 660, 662, 663], "sec": [115, 261, 495, 570], "pnes_mast": [115, 167, 190, 195, 196, 197, 201, 202, 234, 238, 239], "mp_linsolv": 115, "constrainst": 115, "recheck": 115, "pne": [115, 167, 190, 198, 199, 200, 201, 202, 230, 234, 238], "dx": 115, "nne": 115, "nni": 115, "nnc": 115, "st": [115, 491, 492, 493, 503, 521, 530, 547, 615, 616], "fname": [116, 121, 122, 123, 154, 162, 188, 264, 265, 462, 541, 573, 593, 643, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "normal": [116, 121, 122, 123, 154, 162, 188, 190, 198, 199, 200, 260, 499, 501, 507, 508, 511, 516, 620, 656, 661, 742, 744], "modified_opt": [116, 121, 122, 123, 154, 162, 188], "violat": [116, 121, 123, 154, 162, 184, 188, 306, 503, 504, 509, 510, 512, 513, 519, 520, 593, 607, 662, 744], "feasibilitytol": [116, 123], "displayinterv": [116, 123], "outputflag": [116, 123], "logtoconsol": [116, 123], "tol_x": [116, 182, 184, 593], "xtol": [116, 593], "tol_f": [116, 182, 184, 593], "ftol": 116, "maxit": [116, 184, 593], "opt_fnam": [116, 121, 122, 123, 154, 162, 188, 593], "knitro_user_options_": 116, "Their": [116, 121, 122, 123, 154, 162, 188, 588], "preced": [116, 121, 122, 123, 154, 162, 165, 166, 167, 168, 169, 188], "knitro_user_options_3": 116, "3000": [116, 123], "app": 116, "ieq": [117, 118, 119, 120], "igt": [117, 118, 119, 120], "ilt": [117, 118, 119, 120], "eq": [117, 119], "convert_lin_constraint": [117, 119, 238, 239], "convert_quad_constraint": [117, 238, 239], "g_e": 117, "_e": 117, "b_e": 117, "b_i": 117, "ae": [118, 119, 120], "ai": [118, 119, 120, 579], "bi": [118, 119, 120, 204], "convert_constraint_multipli": [118, 119, 120, 238, 239], "qe": 120, "ce": [120, 204, 547], "qi": 120, "ci": [120, 204], "nq": [120, 207, 208, 209], "nqe": [120, 204], "nqi": [120, 204], "symmetr": [120, 297, 616, 617], "cplexoptimset": 121, "simplex": [121, 143, 163, 593, 607], "barrier": [121, 593, 607], "conflict": 121, "sift": [121, 593, 607], "tune": 121, "lpmethod": [121, 593], "qpmethod": [121, 593], "cplex_user_options_": 121, "cplex_user_options_3": 121, "thread": [121, 123, 593, 607], "refactor": 121, "timelimit": [121, 123, 593, 607], "10000": 121, "ibm": [121, 128, 593], "knowledgecent": 121, "sssa5p": 121, "cplexlp": [121, 128, 156, 213], "cplexqp": [121, 128, 156, 213], "msglev": 122, "glpk_user_options_3": 122, "lpsolver": 122, "gurobi_user_options_": 123, "gurobi_user_options_3": 123, "optimalitytol": 123, "barconvtol": 123, "iterationlimit": 123, "bariterlimit": 123, "200": [123, 218, 593, 607], "crossov": 123, "presolv": 123, "bpopt": 125, "catch": 126, "me": 126, "catchm": 126, "try": 126, "OR": [127, 136, 145, 212], "ilog": 128, "evalc": 129, "ver": [131, 143], "int": [131, 538], "mtd": 131, "fmincon_ipm": 131, "kit": [133, 157, 214], "r2014a": 135, "ipopt_auxdata": 137, "isequaln": 138, "knitromatlab": [139, 140, 184], "knitro_nlp": [140, 184], "have_feature_knitro": [140, 141, 238, 239], "ktrlink": 141, "prior": [141, 190, 501], "have_feature_linprog_d": [142, 238, 239], "availblti": 143, "linprog_d": 143, "r2014b": 143, "have_feature_linprog": [143, 238, 239], "mosekopt": [144, 160, 162, 219], "opti_clp": 145, "opti": 145, "inverseproblem": 145, "have_feature_clp": [145, 238, 239], "optimopt": [147, 173, 182, 593], "have_feature_optim": [147, 238, 239], "have_feature_quadprog_l": [149, 238, 239], "larg": [150, 168, 169, 182, 491, 539, 593], "quadprog_l": 150, "convex": [150, 207, 208], "have_feature_quadprog": [150, 238, 239], "sdpt3": 151, "sdp": [151, 152, 593], "sqlp": 151, "sedumi": [152, 593], "lehigh": [152, 593], "yalmip": [153, 593], "platform": 153, "io": [153, 183, 216, 593], "constr_viol_tol": 154, "print_level": 154, "ipopt_user_options_": 154, "ipopt_user_options_3": 154, "nlp_scaling_method": 154, "none": [154, 193, 203, 240, 258, 502, 535, 566, 744], "500": [154, 159, 218, 593, 607], "derivative_test": 154, "knitro_solv": 155, "vtype": [156, 157, 158, 159, 160, 161, 314, 414], "semi": [156, 158, 159, 558], "cplexmiqp": 156, "cplexmilp": 156, "glkp": 157, "dummi": [157, 214], "NOT": [157, 212, 214, 541, 593, 607], "errnum": [157, 214], "700": [159, 218, 607], "tour": 159, "node009": 159, "195": 159, "273": 159, "1365": 159, "msk_dpar_intpnt_tol_pfea": 162, "lp_alg": [162, 593], "msk_ipar_optim": [162, 593, 607], "msk_ipar_intpnt_max_iter": [162, 593, 607], "gap_tol": [162, 593], "msk_dpar_intpnt_tol_rel_gap": [162, 593, 607], "max_tim": [162, 593], "msk_dpar_optimizer_max_tim": [162, 593, 607], "num_thread": [162, 593], "msk_ipar_intpnt_num_thread": [162, 593, 607], "mosek_user_options_": 162, "mosek_user_options_3": 162, "msk_dpar_intpnt_tol_dfea": 162, "msk_ipar_sim_max_iter": 162, "5000000": 162, "manaul": 162, "symbol": [162, 163], "mosek_symbcon": [162, 238, 239, 593], "stuct": 163, "safer": 163, "mosek_lp_alg": [163, 607], "v7": 163, "msk_optimizer_dual_simplex": 163, "nleqopt": 165, "nlpopt": 166, "pneopt": 167, "qcqps_master": [168, 204, 205, 206, 207, 208, 235, 238, 239], "qcqpopt": 168, "qcqp": [168, 205, 206, 207, 208, 209, 231, 235, 238], "qpopt": 169, "nest": [170, 474, 475, 537, 539, 564], "destin": 170, "recurs": 170, "manner": 170, "valid_field": 170, "invalid": 170, "copy_mod": 170, "pointer": 170, "heirarchi": 170, "home": 170, "t_nested_struct_copi": [170, 238, 239], "sp": [171, 593], "default_max_it": 171, "need_jac": 171, "update_fcn": 171, "partial": [171, 173, 175, 178, 203, 315, 508, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 548, 585, 694], "tol": [171, 172, 173, 174, 175, 178, 182, 184, 202, 491, 492, 493, 515, 593, 607], "normf": [171, 172, 174, 178], "normdx": 171, "chilimath": [171, 173, 175, 178, 203], "lesson": [171, 173, 175, 178, 203], "advanc": [171, 173, 175, 178, 203], "algebra": [171, 173, 175, 178, 203], "f1": [171, 173, 175, 178, 495, 567], "newton_update_fcn": 171, "jac_approx_fcn": 172, "jj": 172, "approxim": [172, 178, 511, 593], "christi": [172, 174], "patton": [172, 174], "luk": [172, 174], "youtub": [172, 174], "watch": [172, 174], "pjg4yhtgerg": [172, 174], "jac_approx_fcn2": 172, "optimset": [173, 182, 593], "nleqs_cor": [174, 175, 178, 238, 239], "x_update_fcn": 174, "x_update_fcn2": 174, "core_sp": 175, "nleqs_fsolv": [175, 238, 239], "lin_solv": [178, 593], "larger": [178, 593, 668], "decomp": 178, "substitutn": 178, "reorder": [178, 487, 536, 537, 563, 564, 593], "suitabl": [179, 180, 181, 182, 204, 205, 206, 593, 646, 666], "tini": [179, 181], "sparsiti": [179, 181], "nlp_costfcn": [179, 181, 238, 239], "nlp_hessfcn": [179, 180, 238, 239], "nlp_consfcn": [180, 181, 238, 239], "bfg": [182, 593, 607], "lbfg": [182, 593, 607], "exact": [182, 593, 607], "finit": [182, 593, 607], "sqp": [182, 593], "ipreturncodes__inc_8h_sourc": [183, 216], "cpu": [183, 216], "aret": 184, "3_referencemanu": 184, "knitromatlabrefer": 184, "funccount": 184, "constrviol": 184, "firstorderopt": 184, "measur": 184, "nlps_fmincon": [185, 238, 239], "nlps_ipopt": [185, 238, 239], "nlps_knitro": [185, 238, 239], "eps_prim_inf": 188, "osqp_user_options_3": 188, "polish": 188, "5000": [188, 573], "solver_set": [188, 220], "cx": [190, 191, 192, 195, 196, 324, 501, 503, 504, 505, 506, 509, 510, 512, 513, 517, 518, 519, 520, 685, 686], "px": [190, 191, 192, 324, 501, 504, 506, 510, 513, 518, 520, 685, 686], "regist": [190, 193, 201, 202, 501, 502, 514, 515, 538], "pne_register_callback": [190, 203, 238, 239], "cb": [190, 203, 501], "recent": [190, 501], "x_hat": [190, 203], "predictor": [190, 203, 463, 501, 511, 516, 656], "corrector": [190, 203, 463, 499, 501, 656], "tangent": [190, 195, 198, 199, 200, 203, 499, 501, 505, 507, 508, 511, 516, 656], "default_step": [190, 203, 501], "default_parm": [190, 203, 501], "this_step": [190, 501], "this_parm": [190, 501], "parm": [190, 203, 501], "event": [190, 191, 192, 193, 194, 195, 196, 202, 203, 324, 501, 502, 503, 504, 505, 506, 509, 510, 512, 513, 515, 517, 518, 519, 520, 656], "pne_detect_ev": [190, 194, 238, 239], "care": [190, 501], "efv": [190, 195, 196], "propos": [190, 193, 501], "done_msg": [190, 191, 192, 203, 656], "reason": [190, 259, 501], "warmstart": [190, 203, 463], "warm": [190, 203, 326, 463], "rollback": [190, 193, 202, 501, 502, 504, 506, 510, 513, 515, 518, 520, 656, 685, 686], "retri": [190, 501], "request": [190, 193, 202, 465, 467, 501, 502, 510, 513, 515], "msg": [190, 191, 192, 193, 203, 246, 248, 249, 251, 252, 501, 502, 504, 506, 510, 513, 518, 520, 643, 656], "negat": [190, 501], "my_cback": [190, 201, 203], "nose": [191, 195, 203, 501, 505, 506, 593, 656], "pne_event_nos": [191, 196, 202, 238, 239], "rais": [191, 192, 504, 506, 518, 520], "pne_callback_default": [191, 192, 201, 203, 238, 239], "target_lam": [192, 193, 502, 518], "pne_event_target_lam": [192, 195, 202, 238, 239], "predict": [192, 200, 203, 499, 507, 508, 511, 516, 518, 656], "overshoot": [192, 518], "adjust": [192, 302, 308, 465, 518], "reg_ev": [193, 202], "nefv": 193, "cefv": 193, "critical_ev": [193, 502], "eidx": [193, 502], "interv": [193, 194, 502], "critic": [193, 203, 502, 582, 656], "step_scal": [193, 502], "linearli": [193, 502, 616, 617], "interpol": [193, 261, 463, 502], "estim": [193, 502, 593], "qlim": [193, 502, 513], "event_log": 194, "ev": 194, "search": [194, 574], "detec": 194, "pne_mast": 195, "stop_at": [195, 196, 203, 593, 656], "pne_register_ev": [195, 196, 203, 238, 239], "xp": [198, 199, 200, 203], "zp": [198, 199, 200, 203], "arc": [198, 200, 203, 593], "dp": [198, 199, 200], "distanc": 198, "paramer": [198, 199, 200], "pne_pfcn_natur": [198, 200, 238, 239], "pne_pfcn_pseudo_arc_len": [198, 199, 238, 239], "pne_pfcn_arc_len": [199, 200, 238, 239], "pseudo": [200, 203, 593], "lie": [200, 472], "hyperplan": 200, "orthogon": 200, "correct": [200, 203, 467, 492, 588, 593, 638, 656], "reg_cb": 201, "pne_callback_nos": [201, 238, 239], "pne_callback_target_lam": [201, 238, 239], "my_ev": [202, 203], "default_event_tol": [202, 203], "nleqs_opt": 203, "solve_bas": 203, "stop": [203, 593], "lam_stop": [203, 593], "adapt_step": [203, 593, 656], "toggl": [203, 240, 593], "adapt": [203, 593, 656], "disabl": [203, 593, 741, 742, 743, 744, 782], "adapt_step_damp": [203, 593], "damp": [203, 593, 607], "adapt_step_tol": [203, 593], "adapt_step_w": 203, "step_min": [203, 593], "step_max": [203, 593], "target_lam_tol": [203, 593], "nose_tol": [203, 593], "output_fcn": 203, "increment": [203, 248, 249, 251, 593], "paus": [203, 593], "yfcn": 203, "idx_default": 203, "xname": 203, "yname": 203, "xfcn": 203, "title2": 203, "ne": [203, 261], "lam_hat": [203, 499, 501, 511, 656], "max_lam": [203, 656], "cont_step": 203, "counter": [203, 244, 245, 462], "opposit": [203, 742], "dir_from_jac_eig": 203, "smallest": 203, "eigenvalu": 203, "pnes_callback_default": 203, "f1p": 203, "blkqe": 204, "blkqi": 204, "inequalii": 204, "equalii": 204, "qcqp_nlp_costfcn": [204, 206, 238, 239], "qcqp_nlp_hessfcn": [204, 205, 238, 239], "qcqp_nlp_consfcn": [205, 206, 238, 239], "qqi": 206, "qqe": 206, "lqcn": [207, 208, 209], "uqcn": [207, 208, 209], "qcp": [207, 208, 209], "gurobi_opt": [207, 238, 239, 593, 607], "artelys_knitro_opt": [208, 238, 239], "qcqp_knitro": 208, "qcqps_mip": 209, "suboptim": 211, "explan": [212, 616, 617], "gkpk": 214, "knitro_qp": 217, "knitro_lp": 217, "400": [218, 593, 607], "sm_quad_constraint": [238, 239], "convert_lin_constraint_multipli": [238, 239], "glpk_option": [238, 239], "mpopt2nleqopt": [238, 239], "mpopt2nlpopt": [238, 239], "mpopt2pneopt": [238, 239], "mpopt2qcqpopt": [238, 239], "mpopt2qpopt": [238, 239], "gurobiv": [238, 239], "knitrov": [238, 239], "mpomver": [238, 239], "osqpver": [238, 239], "miqps_cplex": [238, 239], "miqps_glpk": [238, 239], "miqps_gurobi": [238, 239], "miqps_mosek": [238, 239], "miqps_ot": [238, 239], "pne_detected_ev": [238, 239], "qps_bpmpd": [238, 239], "qps_clp": [238, 239], "qps_cplex": [238, 239], "qps_glpk": [238, 239], "qps_gurobi": [238, 239], "qps_ipopt": [238, 239], "qps_knitro": [238, 239], "qps_mosek": [238, 239], "qps_osqp": [238, 239], "qps_ot": [238, 239], "qcqps_gurobi": [238, 239], "qcqps_knitro": [238, 239], "nleqs_master_ex1": [238, 239], "nleqs_master_ex2": [238, 239], "nlps_master_ex1": [238, 239], "nlps_master_ex2": [238, 239], "pne_ex1": [238, 239], "qp_ex1": [238, 239], "test_mp_opt_model": [238, 239], "t_miqps_mast": [238, 239], "t_nleqs_mast": [238, 239], "t_nlps_master": [238, 239], "t_om_solve_leq": [238, 239], "t_om_solve_miqp": [238, 239], "t_om_solve_nleq": [238, 239], "t_om_solve_nlp": [238, 239], "t_om_solve_pn": [238, 239], "t_om_solve_qcqp": [238, 239], "t_om_solve_qp": [238, 239], "t_opt_model": [238, 239], "t_pnes_mast": [238, 239], "t_qcqps_master": [238, 239], "t_qps_master": [238, 239], "have_feature_bpmpd": [238, 239], "have_feature_catchm": [238, 239], "have_feature_cplex": [238, 239], "have_feature_evalc": [238, 239], "have_feature_fmincon_ipm": [238, 239], "have_feature_fmincon": [238, 239], "have_feature_fsolv": [238, 239], "have_feature_glpk": [238, 239], "have_feature_gurobi": [238, 239], "have_feature_intlinprog": [238, 239], "have_feature_ipopt_auxdata": [238, 239], "have_feature_ipopt": [238, 239], "have_feature_isequaln": [238, 239], "have_feature_knitromatlab": [238, 239], "have_feature_ktrlink": [238, 239], "have_feature_mosek": [238, 239], "have_feature_opti_clp": [238, 239], "have_feature_optimopt": [238, 239], "have_feature_osqp": [238, 239], "have_feature_sdpt3": [238, 239], "have_feature_sedumi": [238, 239], "have_feature_yalmip": [238, 239], "rtype": 240, "ver_str": 240, "vstr": 240, "ver_num": 240, "vnum": 240, "rdate": 240, "all_info": 240, "clear_cach": 240, "availabl": 240, "clear": 240, "011004": 240, "feb": 240, "av": 240, "have_feature_": 240, "disp": [240, 319], "have_feature_matlab": [240, 255, 256], "have_feature_octav": [240, 255, 256], "num_of_test": 244, "t_ok": [244, 245, 246, 248, 251, 252, 253, 255, 256], "t_i": [244, 245, 246, 249, 251, 252, 253, 255, 256], "t_file_match": [244, 245, 248, 249, 251, 252, 253, 255, 256], "t_str_match": [244, 245, 246, 248, 249, 251, 253, 255, 256], "t_skip": [244, 245, 246, 248, 249, 252, 255, 256], "t_end": [244, 246, 248, 249, 250, 251, 252, 255, 256], "pi": [244, 245, 248, 249, 251, 255, 548], "statist": 245, "t_begin": [245, 246, 248, 249, 250, 251, 252, 255, 256], "got_fnam": 246, "exp_fnam": 246, "rep": [246, 252], "del_got_fnam": 246, "ok": [246, 248, 249, 252, 255], "compar": [246, 252, 497, 566, 567, 650], "regexprep": [246, 252], "strrep": [246, 252], "eol": [246, 252], "test_generated_output": [246, 252], "expected_output": [246, 252], "mytest": [246, 252], "got": [248, 252], "prec": 248, "nan": [248, 583, 649, 650], "cond": 249, "expr": 249, "test_nam": 250, "t_loadcas": [250, 484, 750], "t_jacobian": [250, 484, 750], "t_hessian": [250, 484, 750], "strcmp": 252, "fileread": [252, 644, 651], "familiar": 255, "clone": 255, "repositori": 255, "mptestxxx": 255, "xxx": 255, "kept": [255, 501], "test_mptest": [255, 256], "resembl": 255, "t_test_fcn": [255, 256], "t_have_featur": [255, 256], "mptest_ex1": 255, "test_everything_ex1": 255, "09": 255, "mptestver": [255, 256], "guidelin": 255, "report": [255, 547, 593, 607], "claus": 255, "bsd": 255, "agenc": 255, "task_pf_legaci": [257, 484], "task_cpf_legaci": [257, 484], "task_opf_legaci": [257, 266, 484], "task_shared_legaci": [257, 464, 466, 468, 484], "dme_branch_opf": [257, 484], "dme_bus_opf": [257, 484], "dme_gen_opf": [257, 484], "dme_load_cpf": [257, 484], "dme_load_opf": [257, 484], "dme_shunt_cpf": [257, 484], "dme_shunt": [257, 308, 309, 484], "dme_shunt_opf": [257, 484], "dm_converter_mpc2_legaci": [257, 466, 484], "dmce_branch_mpc2": [257, 484], "dmce_bus_mpc2": [257, 484], "dmce_load_mpc2": [257, 469, 484], "dmce_shunt_mpc2": [257, 484], "net_model_ac": [257, 416, 417, 484], "net_model_acc": [257, 484], "nme_branch_ac": [257, 422, 423, 484], "nme_branch_acc": [257, 484], "nme_branch_acp": [257, 484], "nme_branch_dc": [257, 484], "nme_bus_acc": [257, 484], "nme_bus_dc": [257, 484], "nme_gen_ac": [257, 440, 441, 484], "nme_gen_acc": [257, 484], "nme_gen_dc": [257, 484], "nme_load_ac": [257, 452, 453, 484], "nme_load_acc": [257, 484], "nme_load_acp": [257, 484], "nme_load_dc": [257, 484], "nme_shunt": [257, 456, 459, 484], "nme_shunt_ac": [257, 457, 458, 484], "nme_shunt_acc": [257, 484], "nme_shunt_acp": [257, 484], "nme_shunt_dc": [257, 484], "math_model_pf": [257, 342, 347, 484], "math_model_pf_ac": [257, 343, 344, 345, 346, 484], "math_model_pf_acci": [257, 484], "math_model_pf_acc": [257, 484], "math_model_pf_acpi": [257, 484], "math_model_pf_acp": [257, 484], "math_model_pf_dc": [257, 484], "math_model_cpf_acc": [257, 322, 484], "math_model_cpf_acci": [257, 484], "math_model_cpf_acp": [257, 325, 484], "math_model_cpf_acpi": [257, 484], "math_model_opf": [257, 320, 328, 339, 484], "math_model_opf_ac": [257, 329, 334, 484], "math_model_opf_acci": [257, 331, 484], "math_model_opf_acci_legaci": [257, 484], "math_model_opf_accs_legaci": [257, 484], "math_model_opf_acpi": [257, 336, 484], "math_model_opf_acpi_legaci": [257, 484], "math_model_opf_acps_legaci": [257, 484], "math_model_opf_dc": [257, 340, 484], "math_model_opf_dc_legaci": [257, 484], "mm_shared_pfcpf": [257, 320, 351, 359, 484], "mm_shared_pfcpf_ac": [257, 353, 356, 484], "mm_shared_pfcpf_ac_i": [257, 354, 357, 484], "mm_shared_pfcpf_acc": [257, 323, 344, 354, 484], "mm_shared_pfcpf_acci": [257, 322, 343, 484], "mm_shared_pfcpf_acp": [257, 326, 346, 357, 484], "mm_shared_pfcpf_acpi": [257, 325, 345, 484], "mm_shared_pfcpf_dc": [257, 347, 484], "mm_shared_opf_legaci": [257, 331, 333, 336, 338, 340, 466, 484], "mme_branch_pf_ac": [257, 484], "mme_branch_pf_dc": [257, 484], "mme_branch_opf": [257, 362, 365, 484], "mme_branch_opf_ac": [257, 363, 364, 484], "mme_branch_opf_acc": [257, 484], "mme_branch_opf_acp": [257, 484], "mme_branch_opf_dc": [257, 484], "mme_bu": [257, 372, 375, 376, 377, 484], "mme_bus_pf_ac": [257, 484], "mme_bus_pf_dc": [257, 484], "mme_bus_opf_ac": [257, 373, 374, 484], "mme_bus_opf_acc": [257, 484], "mme_bus_opf_acp": [257, 484], "mme_bus_opf_dc": [257, 484], "mme_gen_pf_ac": [257, 484], "mme_gen_pf_dc": [257, 484], "mme_gen_opf": [257, 389, 391, 484], "mme_gen_opf_dc": [257, 484], "mme_load": [257, 404, 405, 484], "mme_load_pf_ac": [257, 403, 484], "mme_load_pf_dc": [257, 484], "mme_load_cpf": [257, 484], "mme_shunt": [257, 410, 411, 484], "mme_shunt_pf_ac": [257, 409, 484], "mme_shunt_pf_dc": [257, 484], "mme_shunt_cpf": [257, 484], "mp_table_subclass": [257, 259, 260, 484, 753], "mapped_arrai": [257, 312, 484, 766], "sm_legacy_cost": [257, 484], "dmce_reserve_gen_mpc2": [257, 473, 484], "dmce_reserve_zone_mpc2": [257, 473, 484], "dme_reserve_gen": [257, 473, 484], "dme_reserve_zon": [257, 473, 484], "mme_reserve_gen": [257, 473, 484], "mme_reserve_zon": [257, 473, 484], "dmce_bus3p_mpc2": [257, 470, 484], "dmce_gen3p_mpc2": [257, 470, 484], "dmce_load3p_mpc2": [257, 470, 484], "dmce_line3p_mpc2": [257, 470, 484], "dmce_xfmr3p_mpc2": [257, 470, 484], "dmce_buslink_mpc2": [257, 470, 484], "dme_bus3p_opf": [257, 470, 484], "dme_gen3p_opf": [257, 470, 484], "dme_load3p_opf": [257, 470, 484], "dme_line3p_opf": [257, 470, 484], "dme_xfmr3p_opf": [257, 470, 484], "dme_buslink_opf": [257, 470, 484], "nme_bus3p": [257, 427, 428, 484], "nme_bus3p_acc": [257, 470, 484], "nme_bus3p_acp": [257, 470, 484], "nme_gen3p": [257, 437, 438, 484], "nme_gen3p_acc": [257, 470, 484], "nme_gen3p_acp": [257, 470, 484], "nme_load3p": [257, 470, 484], "nme_line3p": [257, 470, 484], "nme_xfmr3p": [257, 470, 484], "nme_buslink": [257, 433, 434, 484], "nme_buslink_acc": [257, 470, 484], "nme_buslink_acp": [257, 470, 484], "mme_bus3p": [257, 370, 371, 470, 484], "mme_gen3p": [257, 387, 470, 484], "mme_line3p": [257, 401, 470, 484], "mme_xfmr3p": [257, 413, 470, 484], "mme_buslink": [257, 379, 382, 484], "mme_buslink_pf_ac": [257, 383, 384, 484], "mme_buslink_pf_acc": [257, 470, 484], "mme_buslink_pf_acp": [257, 470, 484], "mme_bus3p_opf_acc": [257, 470, 484], "mme_bus3p_opf_acp": [257, 470, 484], "mme_gen3p_opf": [257, 470, 484], "mme_line3p_opf": [257, 470, 484], "mme_xfmr3p_opf": [257, 470, 484], "mme_buslink_opf": [257, 380, 381, 484], "mme_buslink_opf_acc": [257, 470, 484], "mme_buslink_opf_acp": [257, 470, 484], "enumer": 258, "is_valid": 258, "seal": [258, 475], "poly_n": 259, "pwl_n": 259, "pwl_qty": 259, "pwl_cost": 259, "var_nam": [259, 268, 474, 475], "subsref": [259, 260, 268, 319, 474, 475], "subsasgn": [259, 260, 319, 474, 475], "deleg": [259, 315, 475], "readabl": [259, 314, 316, 317, 318, 414], "c_0": 259, "c_1": 259, "c_n": 259, "c_j": 259, "f_1": 259, "f_2": 259, "x_n": 259, "f_n": 259, "quantii": 259, "x_j": 259, "piecwis": 259, "f_j": 259, "pu_bas": [259, 260], "polynmi": 259, "i0": [259, 319, 388, 395], "i2": [259, 388, 395, 538, 571], "x_scale": 259, "ccm": 259, "sum_": 259, "f_i": 259, "x_i": 259, "eval_poly_fcn": 259, "diff_poly_fcn": 259, "cumbersom": 260, "pp_flag": [261, 263], "pp_section_label": 261, "pp_section_list": [261, 263], "pp_have_sect": [261, 267], "pp_section": 261, "pp_get_head": [261, 267], "pp_get_headers_cnt": 261, "pp_get_headers_ext": 261, "pp_data": [261, 267], "set_bus_v_lims_via_vg": 261, "bus3p": [261, 289, 470], "new_dm": [261, 267], "elm": 261, "s0": 261, "s1": 261, "suppress": [261, 593], "blank_lin": 261, "blank": 261, "pp_get_headers_oth": [261, 263, 306], "use_vg": [261, 593], "fraction": [261, 593], "shunt": [262, 281, 283, 297, 307, 308, 309, 408, 409, 410, 411, 455, 456, 457, 458, 459, 491, 492, 493, 495, 548, 566, 644, 648], "format_tag": [264, 265], "export": [264, 265, 267, 268, 302, 308, 348, 464, 466, 468, 664], "init_export": [264, 265], "new_dmc": 264, "prepar": [264, 267, 361], "fname_out": 264, "classic": 265, "legacy_user_mod_input": 266, "legacy_user_nln_constraint": 266, "fparm": [266, 486, 495, 616, 617, 747], "h1": 266, "cw": [266, 486, 495, 616, 617, 747], "zl": [266, 495, 616, 617, 747], "zu": [266, 495, 616, 617, 747], "user_constraint": 266, "undefin": 267, "table_exist": 267, "dm_converter_el": 267, "pp_row": 267, "pp_get_foot": 267, "footer": 267, "pp_have_section_cnt": 267, "pp_data_cnt": [267, 283, 285], "pp_have_section_ext": [267, 285], "pp_data_ext": [267, 285, 288], "pp_get_title_det": 267, "pp_get_footers_det": [267, 283, 291, 299, 304, 307], "nc": [267, 268], "sole": 267, "subclass_var1": 267, "subclass_var2": 267, "pp_have_section_oth": [267, 306], "pp_data_oth": [267, 306], "newlin": 267, "data_sub": [268, 279, 280], "get_import_s": [268, 278, 279, 281], "get_export_s": [268, 278, 279, 281], "get_input_table_valu": 268, "import_col": 268, "export_col": 268, "bus_status_import": [270, 271], "bus_name_import": 271, "bus_name_export": 271, "buslink": [272, 289, 290, 378, 379, 380, 381, 382, 383, 384, 432, 433, 434, 470], "pwl1": 274, "start_cost_import": 274, "start_cost_export": 274, "gen_cost_import": 274, "p_or_q": 274, "gen_cost_export": 274, "gencost0": 274, "create_line_construction_t": [276, 297], "lc": [276, 297], "scale_factor_fcn": 278, "zip_sf": 278, "sys_wide_zip_load": [278, 469, 593], "import_cost": 279, "import_qti": 279, "import_ramp": 279, "import_req": 280, "import_zon": 280, "g_fr": 283, "conduct": [283, 307, 495, 566], "b_fr": 283, "g_to": 283, "b_to": 283, "sm_ub_a": 283, "long": [283, 495, 565], "rate": [283, 304, 495, 539, 565, 570], "sm_ub_b": 283, "sm_ub_c": 283, "emerg": [283, 495, 565], "cm_ub_a": 283, "cm_ub_b": 283, "cm_ub_c": 283, "vad_lb": 283, "vad_ub": 283, "tm": 283, "ratio": [283, 495, 565, 593, 607, 667], "ta": 283, "shift": [283, 495, 535, 565, 568, 581, 592, 744], "pl_fr": 283, "ql_fr": 283, "pl_to": 283, "ql_to": 283, "psh_fr": 283, "qsh_fr": 283, "psh_to": 283, "qsh_to": 283, "xformer": 283, "radian": [283, 285, 286, 534, 582], "rate_a": [283, 535, 565, 744], "loss_tol": 283, "mu_flow_fr_ub": 284, "mu_flow_to_ub": 284, "mu_vad_lb": 284, "mu_vad_ub": 284, "usd": [284, 288, 291, 294, 296, 304, 305], "pp_get_title_lim": [284, 306], "base_kv": [285, 286, 310, 535, 566], "vm_lb": 285, "vm_ub": 285, "va_start": 285, "set_bus_type_ref": 285, "set_bus_type_pq": 285, "vm1_start": 286, "vm2_start": 286, "vm3_start": 286, "va1_start": 286, "va2_start": 286, "va3_start": 286, "lam_p": [288, 481, 482, 535, 566], "lam_q": [288, 535, 566], "mu_vm_lb": 288, "mu_vm_ub": 288, "pg1_start": [289, 292], "pg2_start": [289, 292], "pg3_start": [289, 292], "qg1_start": [289, 292], "qg2_start": [289, 292], "qg3_start": [289, 292], "startup_cost_cold": 291, "cold": 291, "pc1": [291, 495, 535, 550, 570, 577], "pc2": [291, 495, 535, 550, 570, 577], "qc1_lb": 291, "qc1_ub": 291, "qc2_lb": 291, "qc2_ub": 291, "bus_on": [291, 292], "pg_start": 291, "qg_start": 291, "violated_q_lim": 291, "isload": [291, 484, 575, 667, 744, 745, 750], "vm1_setpoint": 292, "vm2_setpoint": 292, "vm3_setpoint": 292, "cost_pg": [294, 296], "cost_qg": 294, "mu_pg_lb": 294, "mu_pg_ub": [294, 304], "mu_qg_lb": 294, "mu_qg_ub": 294, "max_pwl_gencost": 294, "fr": 295, "pl1_fr": [297, 310], "ql1_fr": [297, 310], "pl2_fr": [297, 310], "ql2_fr": [297, 310], "pl3_fr": [297, 310], "ql3_fr": [297, 310], "pl1_to": [297, 310], "ql1_to": [297, 310], "pl2_to": [297, 310], "ql2_to": [297, 310], "pl3_to": [297, 310], "ql3_to": [297, 310], "lc_tab": 297, "ohm": 297, "lc_y_idx": 297, "yc": 297, "lc_table_var_nam": 297, "vec2symmat": 297, "symmat2vec": 297, "pd": [299, 495, 535, 566, 667, 745], "p_p": 299, "qd": [299, 495, 535, 566, 667, 745], "q_p": 299, "pd_i": 299, "p_i": 299, "qd_i": 299, "q_i": 299, "pd_z": 299, "p_z": 299, "qd_z": 299, "q_z": 299, "_p": 299, "_z": 299, "pf1": 300, "pf2": 300, "pf3": 300, "dmb": [302, 308], "dmt": [302, 308], "qty": [304, 607, 661, 743], "ramp10": 304, "minut": [304, 495, 570], "alloc": [304, 351, 359, 593, 607], "r_lb": 304, "r_ub": 304, "total_cost": 304, "prc": [304, 305, 661, 743], "req": [305, 661, 743], "pp_set_tols_lim": 306, "pp_rows_oth": 306, "pp_get_footers_oth": 306, "pp_rows_lim": 306, "pp_get_footers_lim": 306, "pp_data_lim": 306, "b_": 307, "absorb": 307, "class_list": 312, "aspect": [313, 473], "xt": 313, "form_nam": [314, 316, 317, 318, 320, 322, 323, 325, 326, 330, 332, 335, 337, 339, 343, 344, 345, 346, 347], "form_tag": [314, 316, 317, 318, 320, 322, 323, 325, 326, 330, 332, 335, 337, 339, 343, 344, 345, 346, 347], "model_param": [314, 315, 318], "model_vvar": [314, 316, 317, 318], "model_zvar": [314, 315, 318], "get_param": 314, "find_form_class": 314, "acc": [314, 316], "acp": [314, 317, 320], "properi": 314, "p1": [314, 495, 567], "p2": [314, 495, 567], "pn": [314, 495, 567], "pa": 314, "namea": 314, "pb": 314, "nameb": 314, "canon": 314, "form_class": 314, "netork": 314, "longest": 314, "params_ncol": [315, 318], "inln_hess": 315, "snln_hess": 315, "port_inj_curr": [315, 316, 317, 415, 772, 773], "port_inj_pow": [315, 316, 317, 318, 415, 774, 775], "port_inj_current_hess": [315, 316, 317, 415], "port_inj_power_hess": [315, 316, 317, 415], "port_inj_current_jac": [315, 316, 317], "port_inj_current_hess_v": [315, 316, 317], "port_inj_current_hess_vz": [315, 316, 317], "port_inj_power_jac": [315, 316, 317], "port_inj_power_hess_v": [315, 316, 317], "port_inj_power_hess_vz": [315, 316, 317], "port_apparent_power_lim_fcn": 315, "port_active_power_lim_fcn": 315, "port_active_power2_lim_fcn": 315, "port_current_lim_fcn": 315, "port_apparent_power_lim_hess": 315, "port_active_power_lim_hess": 315, "port_active_power2_lim_hess": 315, "port_current_lim_hess": 315, "aux_data_va_vm": [315, 316, 317], "param_ncol": [315, 318], "x_": [315, 316, 317, 415, 419, 451], "sysx": [315, 316, 317, 318, 415, 419, 451], "iv1": 315, "iv2": 315, "izr": 315, "izi": 315, "gi_": 315, "formula": [315, 548], "sv1": 315, "sv2": 315, "szr": 315, "szi": 315, "mulipli": [315, 316, 390, 415], "v_": [315, 316, 317, 351, 419], "invdiagv": [315, 316, 317], "diagslincj": [315, 316, 317], "z_": [315, 316, 317, 351, 419], "diaginv": [315, 316, 317], "dlamj": [315, 316, 317], "diagv": [315, 316, 317], "diagvi": [315, 316, 317], "diagilincj": [315, 316, 317], "hmax": 315, "repesent": [316, 317], "va_fcn": [316, 380], "va_hess": [316, 380], "vm2_fcn": [316, 380], "vm2_hess": [316, 380], "iu": 316, "iw": 316, "iuu": 316, "iuw": 316, "iww": 316, "iuzr": 316, "iuzi": 316, "iwzr": 316, "iwzi": 316, "su": 316, "sw": 316, "suu": 316, "suw": 316, "sww": 316, "suzr": 316, "suzi": 316, "swzr": 316, "swzi": 316, "connvert": 316, "va_lb": 316, "va_ub": 316, "vm2_lb": 316, "vm2_ub": 316, "iva": 317, "ivm": 317, "ivava": 317, "ivavm": 317, "ivmvm": 317, "ivazr": 317, "ivazi": 317, "ivmzr": 317, "ivmzi": 317, "sva": 317, "svm": 317, "svava": 317, "svavm": 317, "svmvm": 317, "svazr": 317, "svazi": 317, "svmzr": 317, "svmzi": 317, "ma": 319, "width": 319, "height": 319, "depth": 319, "treat": [319, 489, 491, 492, 493], "add_el": 319, "color": 319, "weight": [319, 584, 593], "delete_el": 319, "has_nam": 319, "add_nam": 319, "name2idx": 319, "new_obj": 319, "num_el": 319, "overwrit": 319, "corrspond": 319, "aux_data": 320, "task_nam": [320, 327, 341], "add_aux_data": 320, "build_base_aux_data": 320, "add_system_var": [320, 327, 341], "add_system_constraint": [320, 331, 333, 336, 338, 340], "add_node_balance_constraint": [320, 322, 323, 325, 326, 330, 332, 335, 337, 339, 343, 344, 345, 346, 347], "add_system_cost": [320, 331, 333, 336, 338, 340], "update_nm_var": 320, "build_aux_data": [320, 327, 350, 354, 357, 358, 359], "mmx": [320, 329, 334, 339, 353, 356, 359], "nm_var": 320, "var_map": 320, "nm_var_typ": 320, "nm_i1": 320, "nm_in": 320, "nm_idx": 320, "mm_i1": 320, "mm_in": 320, "mm_idx": 320, "convert_x_m2n": [320, 329, 334, 339, 353, 356, 359], "math_model_cpf": [321, 324], "event_vlim": 324, "callback_vlim": 324, "expand_z_warmstart": 326, "solve_opts_warmstart": 326, "interior_va": [327, 329], "nodal_current_balance_fcn": 328, "nodal_power_balance_fcn": 328, "nodal_current_balance_hess": 328, "nodal_power_balance_hess": 328, "node_power_balance_pric": [330, 332, 335, 337], "formluat": [331, 333, 336, 338, 340], "legacy_user_var_nam": [331, 333, 336, 338, 340], "gs_x_updat": 346, "zg_x_updat": 346, "fd_jac_approx": 346, "fdpf_b_matrix_model": 346, "accordingli": [348, 510, 513], "mod_set_types_legaci": 349, "init_set_types_legaci": 349, "get_mpc": [349, 486, 655], "build_legaci": 349, "add_legacy_user_var": 349, "add_legacy_user_cost": 349, "add_legacy_user_constraint": 349, "add_legacy_user_constraints_ac": 349, "add_legacy_cost": [349, 461, 486], "eval_legacy_cost": [349, 486], "params_legacy_cost": [349, 486], "add_system_varset_pf": 351, "vvar": 351, "typ": 351, "update_z": [351, 359], "sinj": 351, "formuat": [352, 353, 354, 355, 356, 357, 358], "build_aux_data_i": 352, "only_v": [353, 356, 359], "pf_convert": [353, 356, 359], "add_system_vars_pf": [354, 355, 357, 358, 359], "node_balance_equ": [354, 355, 357, 358], "fdpf": [358, 484, 580, 750], "ang_diff_param": 361, "ang_diff_pric": [361, 363], "interior_vm": 372, "avg": 372, "clip": 372, "voltage_constraint": [382, 432], "pf_va_fcn": 383, "pf_vm_fcn": 383, "poly_p": 388, "poly_q": 388, "actv": [388, 395], "bulid": [389, 391], "pq_capability_constraint": 389, "makeapq": [389, 484, 748, 750], "has_pq_cap": 389, "upper_low": 389, "haspqcap": [389, 484, 691, 750], "disp_load_constant_pf_constraint": 389, "makeavl": [389, 484, 750], "oval": [390, 472], "cap": [390, 577], "rectangular": 390, "radii": 390, "the_np": 414, "the_nz": 414, "add_nod": [414, 419], "add_stat": [414, 419], "stack_matrix_param": 414, "stack_vector_param": 414, "add_port": 414, "set_type_label": 414, "get_node_idx": 414, "get_port_idx": 414, "get_state_idx": 414, "ensure_ref_nod": 414, "vnotz": 414, "unus": [414, 495], "vr0": 414, "vrmin": 414, "vrmax": 414, "zij_lb": 414, "zij_ub": 414, "nidx": [414, 419], "pidx": 414, "sidx": [414, 650], "skip_ensure_ref": 414, "ntv": [414, 419, 426], "by_elm": 414, "implicitli": 415, "port_inj_nln": 415, "port_inj_nln_hess": 415, "nodal_complex_current_bal": 415, "nodal_complex_power_bal": 415, "nodal_complex_current_balance_hess": 415, "nodal_complex_power_balance_hess": 415, "get_va": 415, "gv1": 415, "gv2": 415, "gzr": 415, "gzi": 415, "snln_": 415, "inln_": 415, "kcl": 415, "initial_voltage_angl": [416, 417], "math_model_el": 419, "get_nv_": 419, "x2vz": 419, "node_indic": 419, "incidence_matrix": 419, "nv_": 419, "vi_": 419, "cd": 419, "ang_diff_fcn": 422, "aang": [422, 576, 618, 619], "lang": [422, 576, 618, 619], "uang": [422, 576, 618, 619], "ang_diff_hess": 422, "vr3": 427, "vi3": 427, "plink": 432, "qlink": 432, "vec2symmat_stack": 448, "port_inj_current_nln": 451, "port_inj_power_nln": 451, "opf_model": [461, 466, 484, 616, 723, 750], "interact": [462, 477, 535], "mm_opt": 462, "i_dm": 462, "i_nm": 462, "i_mm": 462, "didn": 462, "load_dm": [462, 476, 484], "run_pr": [462, 463, 464, 465, 466, 467, 468, 469], "run_post": [462, 464, 466, 468], "print_soln_head": [462, 465], "dm_converter_cr": 462, "data_model_cr": 462, "data_model_build": [462, 463], "data_model_build_pr": 462, "data_model_build_post": [462, 465, 466], "network_model_cr": 462, "network_model_build": [462, 463], "network_model_build_pr": 462, "network_model_build_post": [462, 467], "network_model_upd": [462, 463], "math_model_cr": 462, "math_model_build": 462, "math_model_opt": [462, 463], "propag": 462, "mpoopt": 462, "handel": 462, "dm_converter_build": 462, "restart": 463, "superclass": [463, 465, 466, 467], "clam": 463, "plam": 463, "cv": 463, "current_bal": [463, 465, 467, 593], "legacy_post_run": [464, 466, 468], "post": [464, 466, 468], "run_pre_legaci": [464, 466, 468, 469], "printout": 465, "variat": 466, "opf_execut": [466, 484, 631, 750], "dcopf_solv": [466, 484, 750], "nlpopf_solv": [466, 484, 750], "ref0": 467, "va_ref0": 467, "fixed_q_idx": 467, "fixed_q_qti": 467, "enforce_q_lim": [467, 593, 607, 656, 662], "move": 469, "optimi": [470, 471], "gen3p": 470, "load3p": 470, "line3p": 470, "xfmr3p": 470, "half": [472, 550], "region": [472, 562, 593, 607], "qmin": [472, 495, 512, 535, 570, 667, 744, 745], "qmax": [472, 495, 512, 535, 570, 667, 744, 745], "gen_opf_ac": 472, "gen_opf_ac_ov": 472, "reserve_gen": 473, "reserve_zon": 473, "var1": [474, 479], "var2": [474, 479], "name1": [474, 593, 607], "name2": [474, 593, 607], "rownam": 474, "dimensionnam": 474, "focus": 474, "join": 474, "istabl": [474, 475], "concaten": [474, 475], "vertcat": [474, 475], "unfortun": 474, "realli": 474, "last_var": 474, "last_row": 474, "sub_t": 474, "jn": 474, "var_": 474, "t1": [474, 475], "t2": [474, 475], "extract_named_arg": 474, "row_nam": 474, "dim_nam": 474, "act": 475, "isn": 475, "cannot": [475, 547], "fine": 475, "php": 475, "65037": 475, "emul": 475, "get_tabl": 475, "set_tabl": 475, "install_matpow": [476, 484], "save_it": 477, "rm_oldpath": 477, "assist": 477, "session": [477, 782], "addpath": 477, "silent": 477, "mode": [477, 656, 782], "my": 477, "temporarili": 477, "matpower8": 477, "uninstal": 477, "nativ": [479, 593], "tablici": [479, 561], "table_class": 479, "print_fnam": [480, 481, 482, 483], "soln_fnam": [480, 481, 482, 483], "case9target": [480, 656], "miscellan": 484, "test_matpow": [484, 752], "t_mp_mapped_arrai": [484, 752], "t_mp_tabl": [484, 752], "t_mp_data_model": [484, 752], "t_dmc_element": [484, 752], "t_mp_dm_converter_mpc2": [484, 752], "t_nm_element": [484, 752], "t_port_inj_current_acc": [484, 752], "t_port_inj_current_acp": [484, 752], "t_port_inj_power_acc": [484, 752], "t_port_inj_power_acp": [484, 752], "t_node_test": [484, 752], "t_run_mp": [484, 752], "t_run_opf_default": [484, 752], "t_pretty_print": [484, 752], "t_mpxt_legacy_dclin": [484, 752], "t_mpxt_reserv": [484, 752], "mp_foo_tabl": [484, 752], "t_case9_gizmo": [484, 752], "runpf": [484, 534, 540, 545, 548, 593, 609, 610, 611, 612, 613, 614, 656, 658, 741, 749, 750], "runcpf": [484, 499, 501, 514, 515, 593, 750], "runopf": [484, 593, 616, 643, 657, 661, 663, 741, 750, 782], "runuopf": [484, 659, 660, 747, 750], "rundcpf": [484, 534, 662, 750], "rundcopf": [484, 532, 659, 660, 750], "runduopf": [484, 657, 663, 750], "runopf_w_r": [484, 487, 654, 655, 736, 743, 750], "cdf2mpc": [484, 750], "printpf": [484, 487, 732, 750], "psse2mpc": [484, 648, 650, 651, 733, 750], "save2pss": [484, 680, 750], "savecas": [484, 487, 495, 546, 547, 750], "savechgtab": [484, 750], "e2i_data": [484, 537, 538, 563, 688, 750], "e2i_field": [484, 536, 538, 564, 688, 750], "i2e_data": [484, 536, 564, 571, 688, 750], "i2e_field": [484, 537, 563, 571, 688, 750], "get_reord": [484, 668, 688, 750], "set_reord": [484, 549, 688, 750], "calc_v_i_sum": [484, 750], "calc_v_pq_sum": [484, 589, 750], "calc_v_y_sum": [484, 750], "dcpf": [484, 581, 750], "gausspf": [484, 750], "make_vcorr": [484, 750], "make_zpv": [484, 750], "newtonpf": [484, 610, 611, 612, 613, 614, 750], "newtonpf_i_cart": [484, 609, 612, 613, 614, 750], "newtonpf_i_hybrid": [484, 750], "newtonpf_i_polar": [484, 609, 610, 611, 613, 614, 750], "newtonpf_s_cart": [484, 609, 610, 611, 612, 750], "newtonpf_s_hybrid": [484, 750], "order_radi": [484, 750], "pfsoln": [484, 750], "radial_pf": [484, 491, 492, 493, 588, 638, 750], "zgausspf": [484, 750], "cpf_corrector": [484, 507, 508, 750], "cpf_current_mpc": [484, 750], "cpf_default_callback": [484, 504, 506, 510, 513, 514, 518, 520, 593, 750], "cpf_detect_ev": [484, 501, 750], "cpf_flim_ev": [484, 504, 750], "cpf_flim_event_cb": [484, 514, 750], "cpf_nose_ev": [484, 506, 750], "cpf_nose_event_cb": [484, 504, 514, 750], "cpf_p": [484, 750], "cpf_p_jac": [484, 750], "cpf_plim_ev": [484, 510, 750], "cpf_plim_event_cb": [484, 514, 750], "cpf_predictor": [484, 507, 508, 750], "cpf_qlim_ev": [484, 513, 750], "cpf_qlim_event_cb": [484, 514, 750], "cpf_register_callback": [484, 501, 750], "cpf_register_ev": [484, 750], "cpf_tangent": [484, 750], "cpf_target_lam_ev": [484, 518, 750], "cpf_target_lam_event_cb": [484, 514, 750], "cpf_vlim_ev": [484, 520, 750], "cpf_vlim_event_cb": [484, 514, 750], "dcopf": [484, 616, 750], "fmincopf": [484, 750], "uopf": [484, 616, 750], "makeaang": [484, 618, 619, 750], "makeai": [484, 750], "margcost": [484, 699, 750], "opf_arg": [484, 750], "opf_setup": [484, 624, 750], "opf_branch_ang_fcn": [484, 619, 750], "opf_branch_ang_hess": [484, 618, 750], "opf_branch_flow_fcn": [484, 621, 750], "opf_branch_flow_hess": [484, 620, 750], "opf_current_balance_fcn": [484, 623, 750], "opf_current_balance_hess": [484, 750], "opf_gen_cost_fcn": [484, 750], "opf_legacy_user_cost_fcn": [484, 750], "opf_power_balance_fcn": [484, 630, 750], "opf_power_balance_hess": [484, 622, 629, 750], "opf_veq_fcn": [484, 633, 750], "opf_veq_hess": [484, 632, 750], "opf_vlim_fcn": [484, 635, 750], "opf_vlim_hess": [484, 634, 750], "opf_vref_fcn": [484, 637, 750], "opf_vref_hess": [484, 636, 750], "totcost": [484, 739, 750], "update_mupq": [484, 750], "add_userfcn": [484, 495, 654, 655, 741, 742, 743, 744, 750], "remove_userfcn": [484, 487, 655, 741, 742, 743, 744, 750], "run_userfcn": [484, 487, 654, 741, 742, 743, 744, 750], "toggle_dclin": [484, 487, 569, 675, 687, 750], "toggle_iflim": [484, 487, 654, 655, 750], "toggle_softlim": [484, 487, 490, 750], "dibr_dv": [484, 521, 527, 750], "dsbr_dv": [484, 521, 527, 750], "dabr_dv": [484, 521, 750], "dimis_dv": [484, 750], "dsbus_dv": [484, 750], "d2ibr_dv2": [484, 750], "d2sbr_dv2": [484, 521, 750], "d2abr_dv2": [484, 750], "d2imis_dv2": [484, 750], "d2imis_dvdsg": [484, 750], "d2sbus_dv2": [484, 750], "miqps_matpow": [484, 700, 750], "qps_matpow": [484, 734, 750], "makeb": [484, 750], "makebdc": [484, 750], "makejac": [484, 587, 750], "makelodf": [484, 584, 697, 750], "makeptdf": [484, 583, 698, 750], "makesbu": [484, 523, 529, 587, 750], "makesdzip": [484, 750], "makeybu": [484, 521, 522, 523, 525, 526, 528, 529, 530, 531, 582, 585, 750], "apply_chang": [484, 535, 568, 666, 669, 683, 750], "bustyp": [484, 750], "calc_branch_angl": [484, 750], "case_info": [484, 539, 693, 750], "compare_cas": [484, 750], "define_const": [484, 565, 566, 567, 570, 750], "extract_island": [484, 543, 693, 750], "feval_w_path": [484, 689, 750], "find_bridg": [484, 583, 750], "find_island": [484, 494, 539, 693, 750], "gentyp": [484, 495, 539, 546, 750], "get_loss": [484, 690, 750], "idx_brch": [484, 495, 535, 750], "idx_bu": [484, 488, 495, 535, 750], "idx_cost": [484, 488, 495, 535, 750], "idx_gen": [484, 488, 495, 535, 750], "load2disp": [484, 695, 750], "loadsh": [484, 750], "modcost": [484, 568, 667, 701, 750], "poly2pwl": [484, 750], "polycost": [484, 640, 750], "pqcost": [484, 750], "scale_load": [484, 737, 745, 750], "total_load": [484, 667, 738, 750], "have_feature_e4st": [484, 750], "have_feature_minopf": [484, 750], "have_feature_most": [484, 750], "have_feature_mp_cor": [484, 750], "have_feature_pdipmopf": [484, 750], "have_feature_regexp_split": [484, 750], "have_feature_scpdipmopf": [484, 750], "have_feature_sdp_pf": [484, 750], "have_feature_smartmarket": [484, 750], "have_feature_syngrid": [484, 750], "have_feature_t": [484, 750], "have_feature_tralmopf": [484, 750], "connected_compon": [484, 539, 543, 693, 750], "mpoption_info_clp": [484, 750], "mpoption_info_cplex": [484, 750], "mpoption_info_fmincon": [484, 750], "mpoption_info_glpk": [484, 750], "mpoption_info_gurobi": [484, 750], "mpoption_info_intlinprog": [484, 750], "mpoption_info_ipopt": [484, 750], "mpoption_info_knitro": [484, 750], "mpoption_info_linprog": [484, 750], "mpoption_info_mip": [484, 750], "mpoption_info_mosek": [484, 750], "mpoption_info_osqp": [484, 750], "mpoption_info_quadprog": [484, 750], "mpoption_old": [484, 750], "psse_convert": [484, 646, 647, 750], "psse_convert_hvdc": [484, 750], "psse_convert_xfmr": [484, 750], "psse_pars": [484, 650, 750], "psse_parse_lin": [484, 648, 750], "psse_parse_sect": [484, 648, 750], "psse_read": [484, 645, 646, 647, 648, 650, 750], "t_apply_chang": [484, 750], "t_auction_minopf": [484, 750], "t_auction_mip": [484, 750], "t_auction_tspopf_pdipm": [484, 750], "t_chgtab": [484, 750], "t_cpf": [484, 750], "t_dcline": [484, 750], "t_ext2int2ext": [484, 750], "t_feval_w_path": [484, 750], "t_get_loss": [484, 750], "t_haspqcap": [484, 750], "t_island": [484, 750], "t_load2disp": [484, 750], "t_makelodf": [484, 750], "t_makeptdf": [484, 750], "t_margcost": [484, 750], "t_miqps_matpow": [484, 750], "t_modcost": [484, 750], "t_mpoption": [484, 750], "t_mpoption_ov": [484, 750], "t_off2cas": [484, 750], "t_opf_dc_bpmpd": [484, 750], "t_opf_dc_clp": [484, 750], "t_opf_dc_cplex": [484, 750], "t_opf_dc_default": [484, 750], "t_opf_dc_glpk": [484, 750], "t_opf_dc_gurobi": [484, 750], "t_opf_dc_ipopt": [484, 750], "t_opf_dc_mip": [484, 750], "t_opf_dc_mips_sc": [484, 750], "t_opf_dc_mosek": [484, 750], "t_opf_dc_osqp": [484, 750], "t_opf_dc_ot": [484, 750], "t_opf_default": [484, 750], "t_opf_fmincon": [484, 750], "t_opf_ipopt": [484, 750], "t_opf_knitro": [484, 750], "t_opf_minopf": [484, 750], "t_opf_mip": [484, 750], "t_opf_model": [484, 750], "t_opf_softlim": [484, 744, 750], "t_opf_tspopf_pdipm": [484, 750], "t_opf_tspopf_scpdipm": [484, 750], "t_opf_tspopf_tralm": [484, 750], "t_opf_userfcn": [484, 750], "t_pf_ac": [484, 750], "t_pf_dc": [484, 750], "t_pf_radial": [484, 750], "t_printpf": [484, 750], "t_psse": [484, 750], "t_qps_matpow": [484, 750], "t_runmarket": [484, 750], "t_runopf_w_r": [484, 750], "t_scale_load": [484, 750], "t_total_load": [484, 750], "t_totcost": [484, 750], "t_vdep_load": [484, 750], "opf_nle_fcn1": [484, 750], "opf_nle_hess1": [484, 750], "t_auction_cas": [484, 750], "t_case30_userfcn": [484, 661, 742, 743, 750], "t_case9_opf": [484, 750], "t_case9_opfv2": [484, 675, 750], "t_case9_pf": [484, 750], "t_case9_pfv2": [484, 750], "t_case9_save2pss": [484, 750], "t_case_ext": [484, 750], "t_case_int": [484, 750], "t_cpf_cb1": [484, 750], "t_cpf_cb2": [484, 750], "rr": 486, "set_mpc": 486, "f_u": 486, "nw": 486, "ddl": 486, "ddq": 486, "dl": [486, 546, 547], "dq": 486, "buld_cost_param": 486, "get_cost_param": [486, 626], "cp1": 486, "n1": 486, "cw1": 486, "cp2": 486, "n2": 486, "cw2": 486, "usr1": 486, "usr2": 486, "allow_multipl": 487, "userfcn": [487, 616, 617, 654, 655, 724, 728, 741, 742, 743, 744, 747], "freshli": 487, "presum": 487, "userfcn_reserves_ext2int": 487, "userfcn_reserves_formul": 487, "userfcn_reserves_int2ext": 487, "descriptor": [487, 643], "userfcn_reserves_printpf": 487, "prefix": 487, "mpc_modifi": 488, "mpc_origin": 488, "best": 488, "idx_branch": 488, "7th": 488, "ct_rep": [488, 535, 568], "ct_load_all_p": [488, 535, 568], "ct_rel": [488, 535, 568], "delta": 490, "TO": 490, "af": [490, 527], "vslack": [491, 492, 493], "zb": [491, 492, 493, 588, 589], "ybf": [491, 492, 493], "ybt": [491, 492, 493], "yd": [491, 492, 493, 589], "vg": [491, 492, 493, 495, 535, 570, 593], "summat": [491, 492, 493, 593], "qpv": [491, 492, 493], "sslack": [491, 492, 493], "iter_max": [491, 492, 493], "indici": [491, 492, 493, 589, 638], "principl": [491, 492, 493, 638], "send": [491, 492, 493, 638], "receiv": [491, 492, 493, 638], "addmitt": [491, 492, 493], "shirmohammadi": 491, "hong": 491, "semlyen": 491, "luo": 491, "compens": [491, 547], "weakli": [491, 493], "mesh": [491, 493], "753": 491, "1988": 491, "192932": 491, "1309": 491, "1316": 491, "nov": 491, "1990": 491, "99382": 491, "vcpf": 492, "rajic": [492, 588, 638], "ackovski": [492, 588, 638], "taleski": [492, 493, 588, 638], "1056": [492, 588, 638], "1062": [492, 588, 638], "apr": [492, 588, 638], "1994": [492, 588, 638], "296308": [492, 588], "dragoslav": 493, "raji\u010di\u0107": 493, "rubin": 493, "novel": 493, "radial": [493, 593], "analysi": 493, "volum": 493, "decemb": 493, "1998": 493, "1016": 493, "s0378": 493, "7796": 493, "00067": 493, "island": [494, 539, 542, 543, 583], "fopen": [494, 643], "pti": 495, "item": 495, "idx_area": 495, "regard": 495, "bus_nam": [495, 539, 647], "maxvm": [495, 566], "minvm": [495, 566], "machin": [495, 570], "remot": 495, "mbase": [495, 535, 570], "qc1min": [495, 535, 550, 570, 577], "qc1max": [495, 535, 550, 570, 577], "qc2min": [495, 535, 550, 570, 577], "qc2max": [495, 535, 550, 570, 577], "agc": [495, 570], "timescal": [495, 570], "apf": [495, 535, 570], "particip": [495, 570], "ratea": [495, 565, 656], "unlimit": 495, "rateb": [495, 565], "ratec": [495, 565], "tap": [495, 496, 535, 565], "delai": 495, "gf": [495, 546], "bf": [495, 581], "gt": [495, 547], "bt": [495, 547], "angmin": [495, 535, 565, 576, 744], "360": [495, 565, 576], "angmax": [495, 535, 565, 576, 744], "dollar": [495, 567], "fn": [495, 567], "break": [495, 542, 567, 588], "cn": [495, 567], "c0": [495, 496, 567], "highest": [495, 567], "longer": 495, "price_ref_bu": 495, "cdf_file_nam": 496, "mpc_name": [496, 644], "comment": [496, 644, 648, 649, 650, 651, 665, 666], "ieee300": 496, "mpc1": [497, 539], "unvisit": 498, "graph": 498, "ybu": [499, 500, 501, 516, 521, 522, 523, 525, 526, 528, 529, 530, 531, 540, 545, 582, 587, 609, 610, 611, 612, 613, 614, 622, 623, 629, 630, 639, 749], "sbusb": [499, 501, 516], "v_hat": [499, 501, 511, 656], "sbust": [499, 501, 516], "vprv": [499, 507, 508, 516], "lamprv": [499, 507, 508, 516], "lprv": 499, "scheme": [499, 656], "mpct": 500, "yf": [500, 501, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 582, 587, 620, 621, 639], "yt": [500, 501, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 582, 587, 620, 621, 639], "mpc_base": [500, 501], "mpc_target": [500, 501], "evnt": [501, 504, 506, 510, 513, 518, 520, 685, 686], "cb_data": [501, 503, 504, 505, 506, 509, 510, 512, 513, 517, 518, 519, 520, 685, 686], "cb_arg": [501, 504, 506, 510, 513, 514, 518, 520, 685, 686], "paramter": 501, "cb_state": 501, "ef": [501, 503, 505, 509, 512, 517, 519], "idx_pmax": 501, "underli": [501, 782], "job": 501, "user_callback": [501, 514, 593], "cpf_event": [502, 515], "cef": 502, "pef": 502, "sratea": 503, "flim": 504, "dp_dv": 508, "dp_dlam": 508, "plim": 510, "encount": [510, 513], "transfer": [510, 513, 584, 656], "choos": [510, 513, 593, 607], "remain": [513, 540, 545, 609, 610, 611, 612, 613, 614, 656, 662, 744, 749], "cpf_callback": 514, "53": 514, "zprv": 516, "postiv": 516, "vlim": [520, 634], "d2f_dv2": 521, "df_dv1": 521, "df_dv2": 521, "h11": 521, "h12": 521, "h21": 521, "h22": 521, "cf": [521, 525, 528, 530], "dsf_dv1": 521, "dsf_dv2": 521, "dst_dv1": 521, "dst_dv2": 521, "dv1": [521, 527], "daf_dv1": [521, 527], "dv2": [521, 527], "daf_dv2": [521, 527], "februari": [521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 781], "3237866": [521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 781], "ybr": [522, 525], "vcart": [522, 523, 524, 525, 526, 528, 529, 530, 531], "haa": [522, 525], "hav": [522, 525], "hva": [522, 525], "hvv": [522, 525], "hrr": [522, 525], "hri": [522, 525], "hir": [522, 525], "hii": [522, 525], "dva": [522, 523, 524, 525, 526, 528, 529, 530, 531], "dibr_dva": 522, "dibr_dvm": 522, "dvr": [522, 523, 524, 525, 526, 528, 529, 530, 531], "dibr_dvr": 522, "dvi": [522, 523, 524, 525, 526, 528, 529, 530, 531], "dibr_dvi": 522, "sereet": [522, 523, 524, 525, 526, 528, 529, 530, 531, 781], "april": [522, 523, 524, 525, 526, 528, 529, 530, 531, 781], "2018": [522, 523, 524, 525, 526, 528, 529, 530, 531, 781], "3237909": [522, 523, 524, 525, 526, 528, 529, 530, 531, 781], "sbu": [523, 529, 540, 545, 585, 609, 610, 611, 612, 613, 614, 749], "gaa": [523, 526], "gav": [523, 526], "gva": [523, 526], "gvv": [523, 526], "grr": [523, 524, 526], "gir": [523, 524, 526], "gii": [523, 524, 526], "dimis_dva": [523, 529], "dimis_dvm": [523, 529], "gri": [523, 524, 526], "dimis_dvr": [523, 529], "dimis_dvi": [523, 529], "addendum": [523, 524, 529, 781], "3237900": [523, 524, 529, 781], "cg": 524, "sg": [524, 585], "gsv": 524, "gen_bu": [524, 535, 570], "gpa": 524, "gpv": 524, "gqa": 524, "gqv": 524, "dimis_dpg": 524, "dimis_dqg": 524, "gpr": 524, "gpi": 524, "gqr": 524, "gqi": 524, "cbr": 525, "brch": 525, "dsbr_dva": 525, "dsbr_dvm": 525, "dsbr_dvr": 525, "dsbr_dvi": 525, "dsbus_dva": [526, 531], "dsbus_dvm": [526, 531, 585], "dsbus_dvr": [526, 531], "dsbus_dvi": [526, 531], "dff_dv1": 527, "dff_dv2": 527, "dft_dv1": 527, "dft_dv2": 527, "ff": 527, "ft": 527, "dat_dv1": 527, "dat_dv2": 527, "sensit": [527, 535, 582], "daf": 527, "dpf": 527, "dqf": 527, "v1": 527, "il": [527, 620, 621], "dif_dva": 528, "dif_dvm": 528, "dit_dva": 528, "dit_dvm": 528, "IF": 528, "IT": [528, 547], "dif_dvr": 528, "dif_dvi": 528, "dit_dvr": 528, "dit_dvi": 528, "dvf": [528, 530], "dif": [528, 530], "imi": 529, "ibu": [529, 531], "idg": 529, "di": [529, 531], "dimi": 529, "dsf_dva": 530, "dsf_dvm": 530, "dst_dva": 530, "dst_dvm": 530, "dsf_dvr": 530, "dsf_dvi": 530, "dst_dvr": 530, "dst_dvi": 530, "dsf": 530, "mino": [533, 552, 593, 607, 615, 616, 721], "xr": [533, 615, 616, 747], "pimul": [533, 615, 616, 747], "pbu": 534, "swing": [534, 540, 545, 609, 610, 611, 612, 613, 614, 749], "bus_i": [535, 566], "bus_typ": [535, 566], "bus_area": [535, 566, 667, 745], "mu_vmax": [535, 566, 744], "mu_vmin": [535, 566], "br_r": [535, 565], "br_x": [535, 565], "br_b": [535, 565], "rate_b": [535, 565], "rate_c": [535, 565], "mu_sf": [535, 565, 744], "mu_st": [535, 565, 744], "mu_angmin": [535, 565], "mu_angmax": [535, 565], "mu_qmax": [535, 570, 748], "mu_qmin": [535, 570, 748], "ramp_q": [535, 570], "pw_linear": [535, 567], "ncost": [535, 567], "ct_label": [535, 568], "ct_prob": [535, 568], "ct_tabl": [535, 568], "ct_row": [535, 568], "ct_chgtype": [535, 568], "ct_add": [535, 568], "ct_newval": [535, 568], "ct_load_all_pq": [535, 568], "ct_load_fix_pq": [535, 568], "ct_load_dis_pq": [535, 568], "ct_load_fix_p": [535, 568], "ct_load_dis_p": [535, 568], "ct_modcost_f": [535, 568], "ct_modcost_x": [535, 568], "frequent": 535, "high": [535, 547, 724, 728], "concern": 535, "accord": [536, 563, 649, 667, 744], "disturb": [536, 563], "a_int": [536, 563], "a_ext": [536, 563], "gencost_int": [536, 563], "gencost_ext": [536, 563], "revers": [538, 547], "external_bus_numb": [538, 571], "internal_bus_numb": [538, 571], "matow": [538, 571], "e2i": 538, "mpc_arrai": 539, "mpc_k": 539, "travers": 539, "elimin": [539, 656], "mpc_list": 539, "traver": 539, "mpc3": 539, "bus_label": 539, "gen_nam": 539, "emiss": 539, "genloc": 539, "bpp": [540, 580, 749], "prime": [540, 547, 580, 749], "guess": [540, 545, 609, 610, 611, 612, 613, 614, 749], "fpath": 541, "x1": 541, "xn": 541, "yn": 541, "feval": 541, "caller": 541, "testfunct": 541, "mytestfcn": 541, "x2": 541, "bridg": [542, 583], "nonbridg": 542, "filter": [542, 579], "tarjan": 542, "520": [544, 607], "unord": [546, 547], "biomass": 546, "coal": [546, 547], "dfo": 546, "distil": 546, "oil": 546, "diesel": [546, 547], "fo1": 546, "fo2": 546, "fo4": 546, "geotherm": [546, 547], "hydrop": 546, "pump": [546, 547, 572], "jetfuel": 546, "jet": [546, 547], "lng": 546, "liquefi": 546, "ga": [546, 547], "nuclear": [546, 547], "refus": 546, "municip": 546, "solid": [546, 547], "wast": 546, "rfo": 546, "fo5": 546, "fo6": 546, "solar": [546, 547], "syncgen": 546, "condensor": 546, "wasteheat": 546, "heat": 546, "wood": 546, "eia": 547, "860": 547, "instruct": [547, 616, 617], "mover": 547, "gov": 547, "survei": 547, "eia_860": 547, "ba": 547, "compress": 547, "air": 547, "concentr": 547, "fw": 547, "flywheel": 547, "hydraul": 547, "turbin": 547, "steam": 547, "combust": 547, "ic": [547, 593], "piston": 547, "reciproc": 547, "ca": 547, "ct": 547, "integr": 547, "gasif": 547, "shaft": 547, "plant": 547, "hydrokinet": 547, "axial": 547, "hb": 547, "wave": 547, "buoi": 547, "hk": 547, "hy": 547, "hydroelectr": 547, "water": 547, "pipelin": 547, "photovolta": 547, "wt": 547, "onshor": 547, "offshor": 547, "fc": 547, "powerworld": 547, "un": 547, "je": 547, "boil": 547, "reactor": 547, "graphit": 547, "nh": 547, "temperatur": 547, "pressur": 547, "turbo": 547, "condens": 547, "ti": 547, "motor": 547, "w1": 547, "w2": 547, "w3": 547, "w4": 547, "chg": 548, "fchg": 548, "tchg": 548, "dloss_dv": 548, "dchg_dvm": 548, "tau": 548, "bc": 548, "total_system_real_loss": 548, "total_system_reac_loss": 548, "hilo": 550, "slope": [550, 748], "intersect": 550, "plane": 550, "box": 550, "smart": 550, "redund": 550, "e4st": 551, "environment": 551, "minopf": [552, 593, 607, 671], "mp_core": [554, 782], "pdipmopf": [555, 673], "tspopf": [555, 557, 562, 593, 607, 616], "regexp": 556, "regexp_split": 556, "scpdipmopf": 557, "sdp_pf": [558, 593], "mx": [558, 560], "smartmarket": 559, "runmarket": 559, "syngrid": 560, "r2013b": 561, "apjank": 561, "tralmopf": 562, "trust": [562, 593, 607], "augment": [562, 593, 607], "langrangian": [562, 593, 607], "oldval": [563, 564], "a_orig": 563, "gencost_orig": 563, "ploss": 565, "mismatch": [566, 593, 607, 616], "restor": 571, "revert": 571, "AND": [572, 744], "revis": [572, 644, 648], "sensibl": 572, "elast": 572, "mpc0": 573, "voll": 573, "lost": 573, "casefil": 574, "doesn": 574, "abort": 574, "fewer": 574, "ild": 575, "curtail": 575, "shed": 575, "nld": 575, "total_load_sh": 575, "iang": 576, "apqh": 577, "ubpqh": 577, "apql": 577, "ubpql": 577, "trapezoid": 577, "constain": 577, "ipqh": 577, "ipql": 577, "ivl": 578, "pgba": 579, "qgba": 579, "yba": 579, "BY": 579, "basin": [579, 616], "fdxb": [580, 593], "fdbx": [580, 593], "pf_alg": [580, 607], "bbu": 581, "pbusinj": 581, "pfinj": 581, "fulljac": 582, "ptdf": [583, 584], "mask_bridg": 583, "outag": 583, "lodf": 583, "nbr": [583, 584], "bus_idx": 584, "txfr": 584, "rand": 584, "v_corr": 588, "seen": 588, "zpv": 589, "mutual": 589, "joint": 589, "forward": [589, 653], "sweep": [589, 653], "margin": [590, 667, 744], "marginalcost": 590, "modtyp": [592, 667], "newgencost": 592, "f_alpha": 592, "scale_f": [592, 667], "scale_x": [592, 667], "shift_f": 592, "shift_x": 592, "value1": [593, 607], "value2": [593, 607], "embed": 593, "opt0": 593, "opt_vector": 593, "uppercas": 593, "permit": 593, "sh": 593, "ip": 593, "ih": 593, "xb": [593, 607], "bx": [593, 607], "zg": 593, "implicit": [593, 749], "pqsum": 593, "isum": 593, "ysum": 593, "vcorr": 593, "expens": [593, 607, 659, 663], "enforce_p_lim": [593, 656], "enforce_v_lim": [593, 656], "enforce_flow_lim": [593, 656], "p_lims_tol": 593, "q_lims_tol": 593, "v_lims_tol": 593, "flow_lims_tol": 593, "pdipm": [593, 607, 616, 725], "sdpopf": 593, "semidefinit": 593, "tralm": [593, 607, 727], "op": 593, "analyt": 593, "5e": [593, 607], "setpt": 593, "averag": 593, "flow_lim": [593, 620], "ignore_angle_lim": 593, "diff": 593, "softlim": [593, 724, 744], "soft": [593, 724, 744], "strategi": 593, "decid": [593, 607], "return_raw_d": [593, 607], "littl": [593, 607], "sys_sum": 593, "area_sum": 593, "out_line_lim": [593, 607], "out_pg_lim": [593, 607], "out_qg_lim": [593, 607], "pwr": 593, "suppress_detail": 593, "complementari": [593, 607], "cntrl": 593, "concurr": [593, 607], "auto": [593, 607], "knitro_user_options_n": [593, 607], "rowtol": 593, "majdamp": 593, "mindamp": 593, "minor": [593, 607], "penalti": [593, 607], "major_it": 593, "minor_it": 593, "fort": [593, 607], "1200": [593, 607], "supbasic_lim": 593, "superbas": [593, 607], "mult_pric": 593, "gap": [593, 607], "smooth_ratio": 593, "primaltol": 593, "dualtol": 593, "use_legacy_cor": [593, 782], "bypass": [593, 782], "pw": 593, "qw": 593, "pf_tol": 607, "opf_alg": 607, "565": 607, "pf_max_it": 607, "pf_max_it_fd": 607, "pf_max_it_g": 607, "pf_dc": 607, "540": 607, "560": 607, "545": 607, "550": 607, "opf_viol": 607, "constr_tol_x": 607, "constr_tol_f": 607, "constr_max_it": 607, "opf_flow_lim": 607, "opf_ignore_ang_lim": 607, "opf_alg_dc": 607, "out_al": 607, "33": [607, 664], "out_sys_sum": 607, "out_area_sum": 607, "out_bu": 607, "out_branch": 607, "out_gen": 607, "out_all_lim": 607, "out_v_lim": 607, "44": 607, "out_forc": 607, "55": 607, "fmc_alg": 607, "mns_feastol": 607, "mns_rowtol": 607, "mns_xtol": 607, "mns_majdamp": 607, "mns_mindamp": 607, "mns_penalty_parm": 607, "67": 607, "mns_major_it": 607, "mns_minor_it": 607, "mns_max_it": 607, "mns_verbos": 607, "71": 607, "mns_core": 607, "mns_supbasic_lim": 607, "mns_mult_pric": 607, "pdipm_feastol": 607, "82": 607, "pdipm_gradtol": 607, "83": 607, "pdipm_comptol": 607, "pdipm_costtol": 607, "pdipm_max_it": 607, "scpdipm_red_it": 607, "tralm_feastol": 607, "tralm_primetol": 607, "tralm_dualtol": 607, "tralm_costtol": 607, "91": 607, "tralm_major_it": 607, "tralm_minor_it": 607, "smoothing_ratio": 607, "cplex_lpmethod": 607, "96": 607, "cplex_qpmethod": 607, "111": 607, "mosek_max_it": 607, "113": 607, "mosek_gap_tol": 607, "mosek_max_tim": 607, "mosek_num_thread": 607, "116": 607, "grb_method": 607, "122": 607, "grb_timelimit": 607, "grb_thread": 607, "raphson": [609, 610, 611, 612, 613, 614], "latter": [616, 747], "encod": [616, 617], "fun": 616, "mistmatch": 616, "pqh": 616, "pql": 616, "ycon": 616, "au": 617, "lbu": 617, "ubu": 617, "vadif": 618, "dvadif": 618, "d2vadif": 619, "ig": 625, "veq": 632, "dveq": 632, "d2veq": 633, "dvlim": 634, "d2vlim": 635, "vref": 636, "dvref": 636, "d2vref": 637, "bus0": 639, "gen0": 639, "branch0": 639, "npt": 640, "pwlcost": 640, "too": [641, 656], "effeci": 641, "polyv": 641, "polyd": 641, "pcost": 642, "qcost": 642, "ON": 642, "stdout": 643, "fclose": 643, "rawfile_nam": [644, 651], "identif": 644, "hvdc": [644, 646], "accumul": [645, 647, 648, 650], "twodc": [646, 648], "trans2": [647, 648], "trans3": [647, 648], "OF": [648, 650, 651], "swshunt": 648, "templat": [649, 650], "float": [649, 650], "sscanf": [649, 650], "quot": [649, 650], "strip": [649, 650], "rv": 655, "basecasedata": 656, "targetcasedata": 656, "solvedcas": [656, 657, 658, 659, 660, 661, 662, 663], "nstep": 656, "nevent": 656, "fal": 656, "induc": 656, "bifurc": 656, "target_lam_v": 656, "did": 656, "event_nam": 656, "casedata": [657, 658, 659, 660, 661, 662, 663], "decommit": [659, 663, 747], "heurist": [659, 663], "shut": [659, 663, 747], "nrz": [661, 743], "ngr": [661, 743], "rmin": [661, 743], "rmax": [661, 743], "rawver": 664, "overwritten": [664, 665], "casestruct": 665, "pssecon2chgtab": 666, "extent": 666, "dmd": 667, "load_zon": [667, 745], "ONES": 667, "benefit": 667, "untouch": 668, "pad": 668, "iflim": [674, 728], "off2cas": 704, "scpdipm": 726, "runmkt": 735, "smartmkt": 735, "on_off": [741, 742, 743, 744], "t_f": [741, 742, 743, 744], "caution": 741, "results1": 741, "results2": 741, "nif": 742, "busnum": 744, "base_cost": 744, "hl_mod": 744, "hl": 744, "hl_val": 744, "overload": 744, "ovl_cost": 744, "reativ": 745, "realiz": 745, "totalcost": 746, "sequenc": 747, "candid": 747, "gain": 747, "mu_pqh": 748, "mu_pql": 748, "seriou": 749, "out_ac": 770, "multip": 771, "wrt": [772, 773, 774, 775], "uniform": 781, "3237850": 781, "tech": 781, "4110676": 781, "decrib": 782, "Or": 782, "mainli": 782}, "objects": {"": [[487, 0, 1, "", "add_userfcn"], [488, 0, 1, "", "apply_changes"], [42, 0, 1, "", "apply_profile"], [116, 0, 1, "", "artelys_knitro_options"], [490, 0, 1, "", "calc_branch_angle"], [491, 0, 1, "", "calc_v_i_sum"], [492, 0, 1, "", "calc_v_pq_sum"], [493, 0, 1, "", "calc_v_y_sum"], [494, 0, 1, "", "case_info"], [497, 0, 1, "", "compare_case"], [498, 0, 1, "", "connected_components"], [117, 0, 1, "", "convert_constraint_multipliers"], [118, 0, 1, "", "convert_lin_constraint"], [119, 0, 1, "", "convert_lin_constraint_multipliers"], [120, 0, 1, "", "convert_quad_constraint"], [499, 0, 1, "", "cpf_corrector"], [500, 0, 1, "", "cpf_current_mpc"], [501, 0, 1, "", "cpf_default_callback"], [502, 0, 1, "", "cpf_detect_events"], [503, 0, 1, "", "cpf_flim_event"], [504, 0, 1, "", "cpf_flim_event_cb"], [505, 0, 1, "", "cpf_nose_event"], [506, 0, 1, "", "cpf_nose_event_cb"], [507, 0, 1, "", "cpf_p"], [508, 0, 1, "", "cpf_p_jac"], [509, 0, 1, "", "cpf_plim_event"], [510, 0, 1, "", "cpf_plim_event_cb"], [511, 0, 1, "", "cpf_predictor"], [512, 0, 1, "", "cpf_qlim_event"], [513, 0, 1, "", "cpf_qlim_event_cb"], [514, 0, 1, "", "cpf_register_callback"], [515, 0, 1, "", "cpf_register_event"], [516, 0, 1, "", "cpf_tangent"], [517, 0, 1, "", "cpf_target_lam_event"], [518, 0, 1, "", "cpf_target_lam_event_cb"], [519, 0, 1, "", "cpf_vlim_event"], [520, 0, 1, "", "cpf_vlim_event_cb"], [121, 0, 1, "", "cplex_options"], [521, 0, 1, "", "d2Abr_dV2"], [522, 0, 1, "", "d2Ibr_dV2"], [523, 0, 1, "", "d2Imis_dV2"], [524, 0, 1, "", "d2Imis_dVdSg"], [525, 0, 1, "", "d2Sbr_dV2"], [526, 0, 1, "", "d2Sbus_dV2"], [527, 0, 1, "", "dAbr_dV"], [528, 0, 1, "", "dIbr_dV"], [529, 0, 1, "", "dImis_dV"], [530, 0, 1, "", "dSbr_dV"], [531, 0, 1, "", "dSbus_dV"], [533, 0, 1, "", "dcopf_solver"], [535, 0, 1, "", "define_constants"], [536, 0, 1, "", "e2i_data"], [537, 0, 1, "", "e2i_field"], [44, 0, 1, "", "ex_case3a"], [45, 0, 1, "", "ex_case3b"], [46, 0, 1, "", "ex_contab"], [47, 0, 1, "", "ex_load_profile"], [48, 0, 1, "", "ex_storage"], [49, 0, 1, "", "ex_transmat"], [50, 0, 1, "", "ex_wind"], [51, 0, 1, "", "ex_wind_profile"], [52, 0, 1, "", "ex_wind_profile_d"], [53, 0, 1, "", "ex_wind_uc"], [54, 0, 1, "", "ex_xgd"], [55, 0, 1, "", "ex_xgd_ramp"], [56, 0, 1, "", "ex_xgd_res"], [57, 0, 1, "", "ex_xgd_uc"], [539, 0, 1, "", "extract_islands"], [541, 0, 1, "", "feval_w_path"], [58, 0, 1, "", "filter_ramp_transitions"], [542, 0, 1, "", "find_bridges"], [543, 0, 1, "", "find_islands"], [14, 0, 1, "", "generate_autodoc_stubs"], [15, 0, 1, "", "generate_matpower_autodoc"], [16, 0, 1, "", "generate_source_symlinks"], [548, 0, 1, "", "get_losses"], [549, 0, 1, "", "get_reorder"], [122, 0, 1, "", "glpk_options"], [123, 0, 1, "", "gurobi_options"], [550, 0, 1, "", "hasPQcap"], [240, 0, 1, "", "have_feature"], [125, 0, 1, "", "have_feature_bpmpd"], [126, 0, 1, "", "have_feature_catchme"], [127, 0, 1, "", "have_feature_clp"], [128, 0, 1, "", "have_feature_cplex"], [551, 0, 1, "", "have_feature_e4st"], [129, 0, 1, "", "have_feature_evalc"], [130, 0, 1, "", "have_feature_fmincon"], [131, 0, 1, "", "have_feature_fmincon_ipm"], [132, 0, 1, "", "have_feature_fsolve"], [133, 0, 1, "", "have_feature_glpk"], [134, 0, 1, "", "have_feature_gurobi"], [135, 0, 1, "", "have_feature_intlinprog"], [136, 0, 1, "", "have_feature_ipopt"], [137, 0, 1, "", "have_feature_ipopt_auxdata"], [138, 0, 1, "", "have_feature_isequaln"], [139, 0, 1, "", "have_feature_knitro"], [140, 0, 1, "", "have_feature_knitromatlab"], [141, 0, 1, "", "have_feature_ktrlink"], [142, 0, 1, "", "have_feature_linprog"], [143, 0, 1, "", "have_feature_linprog_ds"], [22, 0, 1, "", "have_feature_lu_vec"], [241, 0, 1, "", "have_feature_matlab"], [552, 0, 1, "", "have_feature_minopf"], [144, 0, 1, "", "have_feature_mosek"], [553, 0, 1, "", "have_feature_most"], [554, 0, 1, "", "have_feature_mp_core"], [242, 0, 1, "", "have_feature_octave"], [145, 0, 1, "", "have_feature_opti_clp"], [146, 0, 1, "", "have_feature_optim"], [147, 0, 1, "", "have_feature_optimoptions"], [148, 0, 1, "", "have_feature_osqp"], [23, 0, 1, "", "have_feature_pardiso"], [24, 0, 1, "", "have_feature_pardiso_legacy"], [25, 0, 1, "", "have_feature_pardiso_object"], [555, 0, 1, "", "have_feature_pdipmopf"], [149, 0, 1, "", "have_feature_quadprog"], [150, 0, 1, "", "have_feature_quadprog_ls"], [556, 0, 1, "", "have_feature_regexp_split"], [557, 0, 1, "", "have_feature_scpdipmopf"], [558, 0, 1, "", "have_feature_sdp_pf"], [151, 0, 1, "", "have_feature_sdpt3"], [152, 0, 1, "", "have_feature_sedumi"], [559, 0, 1, "", "have_feature_smartmarket"], [560, 0, 1, "", "have_feature_syngrid"], [561, 0, 1, "", "have_feature_table"], [562, 0, 1, "", "have_feature_tralmopf"], [153, 0, 1, "", "have_feature_yalmip"], [563, 0, 1, "", "i2e_data"], [564, 0, 1, "", "i2e_field"], [565, 0, 1, "", "idx_brch"], [566, 0, 1, "", "idx_bus"], [567, 0, 1, "", "idx_cost"], [568, 0, 1, "", "idx_ct"], [569, 0, 1, "", "idx_dcline"], [570, 0, 1, "", "idx_gen"], [60, 0, 1, "", "idx_profile"], [477, 0, 1, "", "install_matpower"], [154, 0, 1, "", "ipopt_options"], [576, 0, 1, "", "makeAang"], [577, 0, 1, "", "makeApq"], [578, 0, 1, "", "makeAvl"], [579, 0, 1, "", "makeAy"], [580, 0, 1, "", "makeB"], [581, 0, 1, "", "makeBdc"], [582, 0, 1, "", "makeJac"], [583, 0, 1, "", "makeLODF"], [584, 0, 1, "", "makePTDF"], [585, 0, 1, "", "makeSbus"], [586, 0, 1, "", "makeSdzip"], [587, 0, 1, "", "makeYbus"], [588, 0, 1, "", "make_vcorr"], [589, 0, 1, "", "make_zpv"], [65, 0, 1, "", "md_init"], [27, 0, 1, "", "mips_example1"], [28, 0, 1, "", "mips_example2"], [156, 0, 1, "", "miqps_cplex"], [157, 0, 1, "", "miqps_glpk"], [158, 0, 1, "", "miqps_gurobi"], [159, 0, 1, "", "miqps_master"], [591, 0, 1, "", "miqps_matpower"], [160, 0, 1, "", "miqps_mosek"], [161, 0, 1, "", "miqps_ot"], [162, 0, 1, "", "mosek_options"], [163, 0, 1, "", "mosek_symbcon"], [67, 0, 1, "", "most_ex1_ed"], [68, 0, 1, "", "most_ex2_dcopf"], [69, 0, 1, "", "most_ex3_dcopf_w_uc"], [70, 0, 1, "", "most_ex4_dcopf_ss"], [71, 0, 1, "", "most_ex5_mpopf"], [72, 0, 1, "", "most_ex6_uc"], [73, 0, 1, "", "most_ex7_suc"], [74, 0, 1, "", "most_summary"], [753, 1, 1, "", "mp_foo_table"], [114, 1, 1, "", "mp_idx_manager"], [474, 1, 1, "", "mp_table"], [479, 0, 1, "", "mp_table_class"], [475, 1, 1, "", "mp_table_subclass"], [594, 0, 1, "", "mpoption_info_clp"], [595, 0, 1, "", "mpoption_info_cplex"], [596, 0, 1, "", "mpoption_info_fmincon"], [597, 0, 1, "", "mpoption_info_glpk"], [598, 0, 1, "", "mpoption_info_gurobi"], [599, 0, 1, "", "mpoption_info_intlinprog"], [600, 0, 1, "", "mpoption_info_ipopt"], [601, 0, 1, "", "mpoption_info_knitro"], [602, 0, 1, "", "mpoption_info_linprog"], [603, 0, 1, "", "mpoption_info_mips"], [604, 0, 1, "", "mpoption_info_mosek"], [76, 0, 1, "", "mpoption_info_most"], [605, 0, 1, "", "mpoption_info_osqp"], [606, 0, 1, "", "mpoption_info_quadprog"], [607, 0, 1, "", "mpoption_old"], [170, 0, 1, "", "nested_struct_copy"], [610, 0, 1, "", "newtonpf_I_cart"], [611, 0, 1, "", "newtonpf_I_hybrid"], [612, 0, 1, "", "newtonpf_I_polar"], [613, 0, 1, "", "newtonpf_S_cart"], [614, 0, 1, "", "newtonpf_S_hybrid"], [171, 0, 1, "", "nleqs_core"], [172, 0, 1, "", "nleqs_fd_newton"], [173, 0, 1, "", "nleqs_fsolve"], [174, 0, 1, "", "nleqs_gauss_seidel"], [175, 0, 1, "", "nleqs_master"], [176, 0, 1, "", "nleqs_master_ex1"], [177, 0, 1, "", "nleqs_master_ex2"], [178, 0, 1, "", "nleqs_newton"], [179, 0, 1, "", "nlp_consfcn"], [180, 0, 1, "", "nlp_costfcn"], [181, 0, 1, "", "nlp_hessfcn"], [615, 0, 1, "", "nlpopf_solver"], [182, 0, 1, "", "nlps_fmincon"], [183, 0, 1, "", "nlps_ipopt"], [184, 0, 1, "", "nlps_knitro"], [185, 0, 1, "", "nlps_master"], [186, 0, 1, "", "nlps_master_ex1"], [187, 0, 1, "", "nlps_master_ex2"], [617, 0, 1, "", "opf_args"], [618, 0, 1, "", "opf_branch_ang_fcn"], [619, 0, 1, "", "opf_branch_ang_hess"], [620, 0, 1, "", "opf_branch_flow_fcn"], [621, 0, 1, "", "opf_branch_flow_hess"], [622, 0, 1, "", "opf_current_balance_fcn"], [623, 0, 1, "", "opf_current_balance_hess"], [624, 0, 1, "", "opf_execute"], [625, 0, 1, "", "opf_gen_cost_fcn"], [626, 0, 1, "", "opf_legacy_user_cost_fcn"], [486, 1, 1, "", "opf_model"], [627, 0, 1, "", "opf_nle_fcn1"], [628, 0, 1, "", "opf_nle_hess1"], [629, 0, 1, "", "opf_power_balance_fcn"], [630, 0, 1, "", "opf_power_balance_hess"], [631, 0, 1, "", "opf_setup"], [632, 0, 1, "", "opf_veq_fcn"], [633, 0, 1, "", "opf_veq_hess"], [634, 0, 1, "", "opf_vlim_fcn"], [635, 0, 1, "", "opf_vlim_hess"], [636, 0, 1, "", "opf_vref_fcn"], [637, 0, 1, "", "opf_vref_hess"], [115, 1, 1, "", "opt_model"], [638, 0, 1, "", "order_radial"], [188, 0, 1, "", "osqp_options"], [77, 0, 1, "", "plot_gen"], [78, 0, 1, "", "plot_storage"], [79, 0, 1, "", "plot_uc"], [80, 0, 1, "", "plot_uc_data"], [190, 0, 1, "", "pne_callback_default"], [191, 0, 1, "", "pne_callback_nose"], [192, 0, 1, "", "pne_callback_target_lam"], [193, 0, 1, "", "pne_detect_events"], [194, 0, 1, "", "pne_detected_event"], [195, 0, 1, "", "pne_event_nose"], [196, 0, 1, "", "pne_event_target_lam"], [197, 0, 1, "", "pne_ex1"], [198, 0, 1, "", "pne_pfcn_arc_len"], [199, 0, 1, "", "pne_pfcn_natural"], [200, 0, 1, "", "pne_pfcn_pseudo_arc_len"], [201, 0, 1, "", "pne_register_callbacks"], [202, 0, 1, "", "pne_register_events"], [203, 0, 1, "", "pnes_master"], [645, 0, 1, "", "psse_convert"], [646, 0, 1, "", "psse_convert_hvdc"], [647, 0, 1, "", "psse_convert_xfmr"], [648, 0, 1, "", "psse_parse"], [649, 0, 1, "", "psse_parse_line"], [650, 0, 1, "", "psse_parse_section"], [651, 0, 1, "", "psse_read"], [204, 0, 1, "", "qcqp_nlp_consfcn"], [205, 0, 1, "", "qcqp_nlp_costfcn"], [206, 0, 1, "", "qcqp_nlp_hessfcn"], [207, 0, 1, "", "qcqps_gurobi"], [208, 0, 1, "", "qcqps_knitro"], [209, 0, 1, "", "qcqps_master"], [210, 0, 1, "", "qp_ex1"], [211, 0, 1, "", "qps_bpmpd"], [212, 0, 1, "", "qps_clp"], [213, 0, 1, "", "qps_cplex"], [214, 0, 1, "", "qps_glpk"], [215, 0, 1, "", "qps_gurobi"], [216, 0, 1, "", "qps_ipopt"], [217, 0, 1, "", "qps_knitro"], [218, 0, 1, "", "qps_master"], [652, 0, 1, "", "qps_matpower"], [31, 0, 1, "", "qps_mips"], [219, 0, 1, "", "qps_mosek"], [220, 0, 1, "", "qps_osqp"], [221, 0, 1, "", "qps_ot"], [653, 0, 1, "", "radial_pf"], [654, 0, 1, "", "remove_userfcn"], [480, 0, 1, "", "run_cpf"], [481, 0, 1, "", "run_mp"], [482, 0, 1, "", "run_opf"], [483, 0, 1, "", "run_pf"], [655, 0, 1, "", "run_userfcn"], [661, 0, 1, "", "runopf_w_res"], [667, 0, 1, "", "scale_load"], [668, 0, 1, "", "set_reorder"], [669, 0, 1, "", "t_apply_changes"], [670, 0, 1, "", "t_auction_case"], [671, 0, 1, "", "t_auction_minopf"], [672, 0, 1, "", "t_auction_mips"], [673, 0, 1, "", "t_auction_tspopf_pdipm"], [244, 0, 1, "", "t_begin"], [81, 0, 1, "", "t_case30_most"], [674, 0, 1, "", "t_case30_userfcns"], [82, 0, 1, "", "t_case3_most"], [754, 0, 1, "", "t_case3p_a"], [755, 0, 1, "", "t_case3p_b"], [756, 0, 1, "", "t_case3p_c"], [757, 0, 1, "", "t_case3p_d"], [758, 0, 1, "", "t_case3p_e"], [759, 0, 1, "", "t_case3p_f"], [760, 0, 1, "", "t_case3p_g"], [761, 0, 1, "", "t_case3p_h"], [675, 0, 1, "", "t_case9_dcline"], [762, 0, 1, "", "t_case9_gizmo"], [676, 0, 1, "", "t_case9_opf"], [677, 0, 1, "", "t_case9_opfv2"], [678, 0, 1, "", "t_case9_pf"], [679, 0, 1, "", "t_case9_pfv2"], [680, 0, 1, "", "t_case9_save2psse"], [681, 0, 1, "", "t_case_ext"], [682, 0, 1, "", "t_case_int"], [83, 0, 1, "", "t_case_tlmp"], [84, 0, 1, "", "t_case_tlmp_storage"], [683, 0, 1, "", "t_chgtab"], [684, 0, 1, "", "t_cpf"], [685, 0, 1, "", "t_cpf_cb1"], [686, 0, 1, "", "t_cpf_cb2"], [687, 0, 1, "", "t_dcline"], [763, 0, 1, "", "t_dmc_element"], [245, 0, 1, "", "t_end"], [688, 0, 1, "", "t_ext2int2ext"], [689, 0, 1, "", "t_feval_w_path"], [246, 0, 1, "", "t_file_match"], [690, 0, 1, "", "t_get_losses"], [691, 0, 1, "", "t_hasPQcap"], [247, 0, 1, "", "t_have_feature"], [692, 0, 1, "", "t_hessian"], [248, 0, 1, "", "t_is"], [693, 0, 1, "", "t_islands"], [694, 0, 1, "", "t_jacobian"], [695, 0, 1, "", "t_load2disp"], [696, 0, 1, "", "t_loadcase"], [697, 0, 1, "", "t_makeLODF"], [698, 0, 1, "", "t_makePTDF"], [699, 0, 1, "", "t_margcost"], [32, 0, 1, "", "t_mips"], [33, 0, 1, "", "t_mips_pardiso"], [222, 0, 1, "", "t_miqps_master"], [700, 0, 1, "", "t_miqps_matpower"], [701, 0, 1, "", "t_modcost"], [85, 0, 1, "", "t_most_30b_1_1_0"], [86, 0, 1, "", "t_most_30b_1_1_0_uc"], [87, 0, 1, "", "t_most_30b_1_1_17"], [88, 0, 1, "", "t_most_30b_3_1_0"], [89, 0, 1, "", "t_most_30b_3_1_17"], [90, 0, 1, "", "t_most_3b_1_1_0"], [91, 0, 1, "", "t_most_3b_1_1_2"], [92, 0, 1, "", "t_most_3b_3_1_0"], [93, 0, 1, "", "t_most_3b_3_1_2"], [94, 0, 1, "", "t_most_fixed_res"], [95, 0, 1, "", "t_most_mpopf"], [96, 0, 1, "", "t_most_sp"], [97, 0, 1, "", "t_most_spuc"], [98, 0, 1, "", "t_most_suc"], [99, 0, 1, "", "t_most_tlmp"], [100, 0, 1, "", "t_most_uc"], [101, 0, 1, "", "t_most_w_ds"], [764, 0, 1, "", "t_mp_data_model"], [765, 0, 1, "", "t_mp_dm_converter_mpc2"], [766, 0, 1, "", "t_mp_mapped_array"], [767, 0, 1, "", "t_mp_table"], [34, 0, 1, "", "t_mplinsolve"], [702, 0, 1, "", "t_mpoption"], [703, 0, 1, "", "t_mpoption_ov"], [768, 0, 1, "", "t_mpxt_legacy_dcline"], [769, 0, 1, "", "t_mpxt_reserves"], [223, 0, 1, "", "t_nested_struct_copy"], [224, 0, 1, "", "t_nleqs_master"], [225, 0, 1, "", "t_nlps_master"], [770, 0, 1, "", "t_nm_element"], [771, 0, 1, "", "t_node_test"], [704, 0, 1, "", "t_off2case"], [249, 0, 1, "", "t_ok"], [226, 0, 1, "", "t_om_solve_leqs"], [227, 0, 1, "", "t_om_solve_miqps"], [228, 0, 1, "", "t_om_solve_nleqs"], [229, 0, 1, "", "t_om_solve_nlps"], [230, 0, 1, "", "t_om_solve_pne"], [231, 0, 1, "", "t_om_solve_qcqps"], [232, 0, 1, "", "t_om_solve_qps"], [705, 0, 1, "", "t_opf_dc_bpmpd"], [706, 0, 1, "", "t_opf_dc_clp"], [707, 0, 1, "", "t_opf_dc_cplex"], [708, 0, 1, "", "t_opf_dc_default"], [709, 0, 1, "", "t_opf_dc_glpk"], [710, 0, 1, "", "t_opf_dc_gurobi"], [711, 0, 1, "", "t_opf_dc_ipopt"], [712, 0, 1, "", "t_opf_dc_mips"], [713, 0, 1, "", "t_opf_dc_mips_sc"], [714, 0, 1, "", "t_opf_dc_mosek"], [715, 0, 1, "", "t_opf_dc_osqp"], [716, 0, 1, "", "t_opf_dc_ot"], [717, 0, 1, "", "t_opf_default"], [718, 0, 1, "", "t_opf_fmincon"], [719, 0, 1, "", "t_opf_ipopt"], [720, 0, 1, "", "t_opf_knitro"], [721, 0, 1, "", "t_opf_minopf"], [722, 0, 1, "", "t_opf_mips"], [723, 0, 1, "", "t_opf_model"], [724, 0, 1, "", "t_opf_softlims"], [725, 0, 1, "", "t_opf_tspopf_pdipm"], [726, 0, 1, "", "t_opf_tspopf_scpdipm"], [727, 0, 1, "", "t_opf_tspopf_tralm"], [728, 0, 1, "", "t_opf_userfcns"], [233, 0, 1, "", "t_opt_model"], [729, 0, 1, "", "t_pf_ac"], [730, 0, 1, "", "t_pf_dc"], [731, 0, 1, "", "t_pf_radial"], [234, 0, 1, "", "t_pnes_master"], [772, 0, 1, "", "t_port_inj_current_acc"], [773, 0, 1, "", "t_port_inj_current_acp"], [774, 0, 1, "", "t_port_inj_power_acc"], [775, 0, 1, "", "t_port_inj_power_acp"], [776, 0, 1, "", "t_pretty_print"], [732, 0, 1, "", "t_printpf"], [733, 0, 1, "", "t_psse"], [235, 0, 1, "", "t_qcqps_master"], [236, 0, 1, "", "t_qps_master"], [734, 0, 1, "", "t_qps_matpower"], [35, 0, 1, "", "t_qps_mips"], [777, 0, 1, "", "t_run_mp"], [778, 0, 1, "", "t_run_mp_3p"], [779, 0, 1, "", "t_run_opf_default"], [250, 0, 1, "", "t_run_tests"], [735, 0, 1, "", "t_runmarket"], [736, 0, 1, "", "t_runopf_w_res"], [737, 0, 1, "", "t_scale_load"], [251, 0, 1, "", "t_skip"], [252, 0, 1, "", "t_str_match"], [253, 0, 1, "", "t_test_fcns"], [738, 0, 1, "", "t_total_load"], [739, 0, 1, "", "t_totcost"], [740, 0, 1, "", "t_vdep_load"], [780, 0, 1, "", "test_matpower"], [36, 0, 1, "", "test_mips"], [102, 0, 1, "", "test_most"], [237, 0, 1, "", "test_mp_opt_model"], [254, 0, 1, "", "test_mptest"], [741, 0, 1, "", "toggle_dcline"], [742, 0, 1, "", "toggle_iflims"], [743, 0, 1, "", "toggle_reserves"], [744, 0, 1, "", "toggle_softlims"], [745, 0, 1, "", "total_load"], [748, 0, 1, "", "update_mupq"]], "mips": [[26, 0, 1, "", "mips"]], "most": [[66, 0, 1, "", "most"]], "mp": [[258, 1, 1, "", "NODE_TYPE"], [259, 1, 1, "", "cost_table"], [260, 1, 1, "", "cost_table_utils"], [261, 1, 1, "", "data_model"], [262, 1, 1, "", "data_model_cpf"], [263, 1, 1, "", "data_model_opf"], [264, 1, 1, "", "dm_converter"], [265, 1, 1, "", "dm_converter_mpc2"], [266, 1, 1, "", "dm_converter_mpc2_legacy"], [267, 1, 1, "", "dm_element"], [268, 1, 1, "", "dmc_element"], [269, 1, 1, "", "dmce_branch_mpc2"], [270, 1, 1, "", "dmce_bus3p_mpc2"], [271, 1, 1, "", "dmce_bus_mpc2"], [272, 1, 1, "", "dmce_buslink_mpc2"], [273, 1, 1, "", "dmce_gen3p_mpc2"], [274, 1, 1, "", "dmce_gen_mpc2"], [275, 1, 1, "", "dmce_legacy_dcline_mpc2"], [276, 1, 1, "", "dmce_line3p_mpc2"], [277, 1, 1, "", "dmce_load3p_mpc2"], [278, 1, 1, "", "dmce_load_mpc2"], [279, 1, 1, "", "dmce_reserve_gen_mpc2"], [280, 1, 1, "", "dmce_reserve_zone_mpc2"], [281, 1, 1, "", "dmce_shunt_mpc2"], [282, 1, 1, "", "dmce_xfmr3p_mpc2"], [283, 1, 1, "", "dme_branch"], [284, 1, 1, "", "dme_branch_opf"], [285, 1, 1, "", "dme_bus"], [286, 1, 1, "", "dme_bus3p"], [287, 1, 1, "", "dme_bus3p_opf"], [288, 1, 1, "", "dme_bus_opf"], [289, 1, 1, "", "dme_buslink"], [290, 1, 1, "", "dme_buslink_opf"], [291, 1, 1, "", "dme_gen"], [292, 1, 1, "", "dme_gen3p"], [293, 1, 1, "", "dme_gen3p_opf"], [294, 1, 1, "", "dme_gen_opf"], [295, 1, 1, "", "dme_legacy_dcline"], [296, 1, 1, "", "dme_legacy_dcline_opf"], [297, 1, 1, "", "dme_line3p"], [298, 1, 1, "", "dme_line3p_opf"], [299, 1, 1, "", "dme_load"], [300, 1, 1, "", "dme_load3p"], [301, 1, 1, "", "dme_load3p_opf"], [302, 1, 1, "", "dme_load_cpf"], [303, 1, 1, "", "dme_load_opf"], [304, 1, 1, "", "dme_reserve_gen"], [305, 1, 1, "", "dme_reserve_zone"], [306, 1, 1, "", "dme_shared_opf"], [307, 1, 1, "", "dme_shunt"], [308, 1, 1, "", "dme_shunt_cpf"], [309, 1, 1, "", "dme_shunt_opf"], [310, 1, 1, "", "dme_xfmr3p"], [311, 1, 1, "", "dme_xfmr3p_opf"], [312, 1, 1, "", "element_container"], [313, 1, 1, "", "extension"], [314, 1, 1, "", "form"], [315, 1, 1, "", "form_ac"], [316, 1, 1, "", "form_acc"], [317, 1, 1, "", "form_acp"], [318, 1, 1, "", "form_dc"], [478, 0, 1, "", "load_dm"], [319, 1, 1, "", "mapped_array"], [320, 1, 1, "", "math_model"], [321, 1, 1, "", "math_model_cpf_acc"], [322, 1, 1, "", "math_model_cpf_acci"], [323, 1, 1, "", "math_model_cpf_accs"], [324, 1, 1, "", "math_model_cpf_acp"], [325, 1, 1, "", "math_model_cpf_acpi"], [326, 1, 1, "", "math_model_cpf_acps"], [327, 1, 1, "", "math_model_opf"], [328, 1, 1, "", "math_model_opf_ac"], [329, 1, 1, "", "math_model_opf_acc"], [330, 1, 1, "", "math_model_opf_acci"], [331, 1, 1, "", "math_model_opf_acci_legacy"], [332, 1, 1, "", "math_model_opf_accs"], [333, 1, 1, "", "math_model_opf_accs_legacy"], [334, 1, 1, "", "math_model_opf_acp"], [335, 1, 1, "", "math_model_opf_acpi"], [336, 1, 1, "", "math_model_opf_acpi_legacy"], [337, 1, 1, "", "math_model_opf_acps"], [338, 1, 1, "", "math_model_opf_acps_legacy"], [339, 1, 1, "", "math_model_opf_dc"], [340, 1, 1, "", "math_model_opf_dc_legacy"], [341, 1, 1, "", "math_model_pf"], [342, 1, 1, "", "math_model_pf_ac"], [343, 1, 1, "", "math_model_pf_acci"], [344, 1, 1, "", "math_model_pf_accs"], [345, 1, 1, "", "math_model_pf_acpi"], [346, 1, 1, "", "math_model_pf_acps"], [347, 1, 1, "", "math_model_pf_dc"], [348, 1, 1, "", "mm_element"], [349, 1, 1, "", "mm_shared_opf_legacy"], [350, 1, 1, "", "mm_shared_pfcpf"], [351, 1, 1, "", "mm_shared_pfcpf_ac"], [352, 1, 1, "", "mm_shared_pfcpf_ac_i"], [353, 1, 1, "", "mm_shared_pfcpf_acc"], [354, 1, 1, "", "mm_shared_pfcpf_acci"], [355, 1, 1, "", "mm_shared_pfcpf_accs"], [356, 1, 1, "", "mm_shared_pfcpf_acp"], [357, 1, 1, "", "mm_shared_pfcpf_acpi"], [358, 1, 1, "", "mm_shared_pfcpf_acps"], [359, 1, 1, "", "mm_shared_pfcpf_dc"], [360, 1, 1, "", "mme_branch"], [361, 1, 1, "", "mme_branch_opf"], [362, 1, 1, "", "mme_branch_opf_ac"], [363, 1, 1, "", "mme_branch_opf_acc"], [364, 1, 1, "", "mme_branch_opf_acp"], [365, 1, 1, "", "mme_branch_opf_dc"], [366, 1, 1, "", "mme_branch_pf_ac"], [367, 1, 1, "", "mme_branch_pf_dc"], [368, 1, 1, "", "mme_bus"], [369, 1, 1, "", "mme_bus3p"], [370, 1, 1, "", "mme_bus3p_opf_acc"], [371, 1, 1, "", "mme_bus3p_opf_acp"], [372, 1, 1, "", "mme_bus_opf_ac"], [373, 1, 1, "", "mme_bus_opf_acc"], [374, 1, 1, "", "mme_bus_opf_acp"], [375, 1, 1, "", "mme_bus_opf_dc"], [376, 1, 1, "", "mme_bus_pf_ac"], [377, 1, 1, "", "mme_bus_pf_dc"], [378, 1, 1, "", "mme_buslink"], [379, 1, 1, "", "mme_buslink_opf"], [380, 1, 1, "", "mme_buslink_opf_acc"], [381, 1, 1, "", "mme_buslink_opf_acp"], [382, 1, 1, "", "mme_buslink_pf_ac"], [383, 1, 1, "", "mme_buslink_pf_acc"], [384, 1, 1, "", "mme_buslink_pf_acp"], [385, 1, 1, "", "mme_gen"], [386, 1, 1, "", "mme_gen3p"], [387, 1, 1, "", "mme_gen3p_opf"], [388, 1, 1, "", "mme_gen_opf"], [389, 1, 1, "", "mme_gen_opf_ac"], [390, 1, 1, "", "mme_gen_opf_ac_oval"], [391, 1, 1, "", "mme_gen_opf_dc"], [392, 1, 1, "", "mme_gen_pf_ac"], [393, 1, 1, "", "mme_gen_pf_dc"], [394, 1, 1, "", "mme_legacy_dcline"], [395, 1, 1, "", "mme_legacy_dcline_opf"], [396, 1, 1, "", "mme_legacy_dcline_opf_ac"], [397, 1, 1, "", "mme_legacy_dcline_opf_dc"], [398, 1, 1, "", "mme_legacy_dcline_pf_ac"], [399, 1, 1, "", "mme_legacy_dcline_pf_dc"], [400, 1, 1, "", "mme_line3p"], [401, 1, 1, "", "mme_line3p_opf"], [402, 1, 1, "", "mme_load"], [403, 1, 1, "", "mme_load_cpf"], [404, 1, 1, "", "mme_load_pf_ac"], [405, 1, 1, "", "mme_load_pf_dc"], [406, 1, 1, "", "mme_reserve_gen"], [407, 1, 1, "", "mme_reserve_zone"], [408, 1, 1, "", "mme_shunt"], [409, 1, 1, "", "mme_shunt_cpf"], [410, 1, 1, "", "mme_shunt_pf_ac"], [411, 1, 1, "", "mme_shunt_pf_dc"], [412, 1, 1, "", "mme_xfmr3p"], [413, 1, 1, "", "mme_xfmr3p_opf"], [414, 1, 1, "", "net_model"], [415, 1, 1, "", "net_model_ac"], [416, 1, 1, "", "net_model_acc"], [417, 1, 1, "", "net_model_acp"], [418, 1, 1, "", "net_model_dc"], [419, 1, 1, "", "nm_element"], [420, 1, 1, "", "nme_branch"], [421, 1, 1, "", "nme_branch_ac"], [422, 1, 1, "", "nme_branch_acc"], [423, 1, 1, "", "nme_branch_acp"], [424, 1, 1, "", "nme_branch_dc"], [425, 1, 1, "", "nme_bus"], [426, 1, 1, "", "nme_bus3p"], [427, 1, 1, "", "nme_bus3p_acc"], [428, 1, 1, "", "nme_bus3p_acp"], [429, 1, 1, "", "nme_bus_acc"], [430, 1, 1, "", "nme_bus_acp"], [431, 1, 1, "", "nme_bus_dc"], [432, 1, 1, "", "nme_buslink"], [433, 1, 1, "", "nme_buslink_acc"], [434, 1, 1, "", "nme_buslink_acp"], [435, 1, 1, "", "nme_gen"], [436, 1, 1, "", "nme_gen3p"], [437, 1, 1, "", "nme_gen3p_acc"], [438, 1, 1, "", "nme_gen3p_acp"], [439, 1, 1, "", "nme_gen_ac"], [440, 1, 1, "", "nme_gen_acc"], [441, 1, 1, "", "nme_gen_acp"], [442, 1, 1, "", "nme_gen_dc"], [443, 1, 1, "", "nme_legacy_dcline"], [444, 1, 1, "", "nme_legacy_dcline_ac"], [445, 1, 1, "", "nme_legacy_dcline_acc"], [446, 1, 1, "", "nme_legacy_dcline_acp"], [447, 1, 1, "", "nme_legacy_dcline_dc"], [448, 1, 1, "", "nme_line3p"], [449, 1, 1, "", "nme_load"], [450, 1, 1, "", "nme_load3p"], [451, 1, 1, "", "nme_load_ac"], [452, 1, 1, "", "nme_load_acc"], [453, 1, 1, "", "nme_load_acp"], [454, 1, 1, "", "nme_load_dc"], [455, 1, 1, "", "nme_shunt"], [456, 1, 1, "", "nme_shunt_ac"], [457, 1, 1, "", "nme_shunt_acc"], [458, 1, 1, "", "nme_shunt_acp"], [459, 1, 1, "", "nme_shunt_dc"], [460, 1, 1, "", "nme_xfmr3p"], [106, 1, 1, "", "set_manager"], [107, 1, 1, "", "set_manager_opt_model"], [461, 1, 1, "", "sm_legacy_cost"], [108, 1, 1, "", "sm_lin_constraint"], [109, 1, 1, "", "sm_nln_constraint"], [110, 1, 1, "", "sm_nln_cost"], [111, 1, 1, "", "sm_quad_constraint"], [112, 1, 1, "", "sm_quad_cost"], [113, 1, 1, "", "sm_variable"], [462, 1, 1, "", "task"], [463, 1, 1, "", "task_cpf"], [464, 1, 1, "", "task_cpf_legacy"], [465, 1, 1, "", "task_opf"], [466, 1, 1, "", "task_opf_legacy"], [467, 1, 1, "", "task_pf"], [468, 1, 1, "", "task_pf_legacy"], [469, 1, 1, "", "task_shared_legacy"], [470, 1, 1, "", "xt_3p"], [471, 1, 1, "", "xt_legacy_dcline"], [472, 1, 1, "", "xt_oval_cap_curve"], [473, 1, 1, "", "xt_reserves"]], "mp.NODE_TYPE": [[258, 2, 1, "", "NONE"], [258, 2, 1, "", "PQ"], [258, 2, 1, "", "PV"], [258, 2, 1, "", "REF"], [258, 3, 1, "", "is_valid"]], "mp.cost_table": [[259, 4, 1, "", "cost_table"], [259, 3, 1, "", "diff_poly_fcn"], [259, 3, 1, "", "eval_poly_fcn"], [259, 4, 1, "", "max_pwl_cost"], [259, 3, 1, "", "poly_cost_fcn"], [259, 4, 1, "", "poly_params"], [259, 4, 1, "", "pwl_params"]], "mp.cost_table_utils": [[260, 3, 1, "", "max_pwl_cost"], [260, 3, 1, "", "poly_params"], [260, 3, 1, "", "pwl_params"]], "mp.data_model": [[261, 2, 1, "", "base_kva"], [261, 2, 1, "", "base_mva"], [261, 4, 1, "", "build"], [261, 4, 1, "", "build_params"], [261, 4, 1, "", "copy"], [261, 4, 1, "", "count"], [261, 4, 1, "", "data_model"], [261, 4, 1, "", "display"], [261, 4, 1, "", "initialize"], [261, 4, 1, "", "online"], [261, 4, 1, "", "pp_data"], [261, 4, 1, "", "pp_flags"], [261, 4, 1, "", "pp_get_headers"], [261, 4, 1, "", "pp_get_headers_cnt"], [261, 4, 1, "", "pp_get_headers_ext"], [261, 4, 1, "", "pp_get_headers_other"], [261, 4, 1, "", "pp_have_section"], [261, 4, 1, "", "pp_section"], [261, 4, 1, "", "pp_section_label"], [261, 4, 1, "", "pp_section_list"], [261, 4, 1, "", "pretty_print"], [261, 4, 1, "", "rebuild"], [261, 4, 1, "", "set_bus_v_lims_via_vg"], [261, 2, 1, "", "source"], [261, 4, 1, "", "update_status"], [261, 2, 1, "", "userdata"]], "mp.data_model_cpf": [[262, 4, 1, "", "data_model_cpf"]], "mp.data_model_opf": [[263, 4, 1, "", "data_model_opf"], [263, 4, 1, "", "pp_flags"], [263, 4, 1, "", "pp_get_headers_other"], [263, 4, 1, "", "pp_section_list"]], "mp.dm_converter": [[264, 4, 1, "", "build"], [264, 4, 1, "", "copy"], [264, 4, 1, "", "display"], [264, 4, 1, "", "export"], [264, 4, 1, "", "format_tag"], [264, 4, 1, "", "import"], [264, 4, 1, "", "init_export"], [264, 4, 1, "", "save"]], "mp.dm_converter_mpc2": [[265, 4, 1, "", "dm_converter_mpc2"], [265, 4, 1, "", "format_tag"], [265, 4, 1, "", "import"], [265, 4, 1, "", "init_export"], [265, 4, 1, "", "save"]], "mp.dm_converter_mpc2_legacy": [[266, 4, 1, "", "legacy_user_mod_inputs"], [266, 4, 1, "", "legacy_user_nln_constraints"]], "mp.dm_element": [[267, 4, 1, "", "ID"], [267, 2, 1, "", "ID2i"], [267, 4, 1, "", "build_params"], [267, 4, 1, "", "copy"], [267, 4, 1, "", "count"], [267, 4, 1, "", "cxn_idx_prop"], [267, 4, 1, "", "cxn_type"], [267, 4, 1, "", "cxn_type_prop"], [267, 4, 1, "", "display"], [267, 4, 1, "", "dm_converter_element"], [267, 4, 1, "", "export_vars"], [267, 4, 1, "", "export_vars_offline_val"], [267, 2, 1, "", "i2on"], [267, 4, 1, "", "init_status"], [267, 4, 1, "", "initialize"], [267, 4, 1, "", "label"], [267, 4, 1, "", "labels"], [267, 4, 1, "", "main_table_var_names"], [267, 2, 1, "", "n"], [267, 4, 1, "", "name"], [267, 2, 1, "", "nr"], [267, 2, 1, "", "off"], [267, 2, 1, "", "on"], [267, 4, 1, "", "pp_data"], [267, 4, 1, "", "pp_data_cnt"], [267, 4, 1, "", "pp_data_det"], [267, 4, 1, "", "pp_data_ext"], [267, 4, 1, "", "pp_data_row_det"], [267, 4, 1, "", "pp_data_sum"], [267, 4, 1, "", "pp_get_footers"], [267, 4, 1, "", "pp_get_footers_det"], [267, 4, 1, "", "pp_get_headers"], [267, 4, 1, "", "pp_get_headers_det"], [267, 4, 1, "", "pp_get_title_det"], [267, 4, 1, "", "pp_have_section"], [267, 4, 1, "", "pp_have_section_cnt"], [267, 4, 1, "", "pp_have_section_det"], [267, 4, 1, "", "pp_have_section_ext"], [267, 4, 1, "", "pp_have_section_sum"], [267, 4, 1, "", "pp_rows"], [267, 4, 1, "", "pretty_print"], [267, 4, 1, "", "rebuild"], [267, 2, 1, "", "tab"], [267, 4, 1, "", "table_exists"], [267, 4, 1, "", "update_status"]], "mp.dmc_element": [[268, 4, 1, "", "data_exists"], [268, 4, 1, "", "data_field"], [268, 4, 1, "", "data_model_element"], [268, 4, 1, "", "data_subs"], [268, 4, 1, "", "default_export_data_nrows"], [268, 4, 1, "", "default_export_data_table"], [268, 4, 1, "", "export"], [268, 4, 1, "", "export_col"], [268, 4, 1, "", "export_table_values"], [268, 4, 1, "", "get_export_size"], [268, 4, 1, "", "get_export_spec"], [268, 4, 1, "", "get_import_size"], [268, 4, 1, "", "get_import_spec"], [268, 4, 1, "", "get_input_table_values"], [268, 4, 1, "", "import"], [268, 4, 1, "", "import_col"], [268, 4, 1, "", "import_table_values"], [268, 4, 1, "", "init_export_data"], [268, 4, 1, "", "name"], [268, 4, 1, "", "table_var_map"]], "mp.dmce_branch_mpc2": [[269, 4, 1, "", "data_field"], [269, 4, 1, "", "default_export_data_table"], [269, 4, 1, "", "name"], [269, 4, 1, "", "table_var_map"]], "mp.dmce_bus3p_mpc2": [[270, 4, 1, "", "bus_status_import"], [270, 4, 1, "", "data_field"], [270, 4, 1, "", "name"], [270, 4, 1, "", "table_var_map"]], "mp.dmce_bus_mpc2": [[271, 4, 1, "", "bus_name_export"], [271, 4, 1, "", "bus_name_import"], [271, 4, 1, "", "bus_status_import"], [271, 4, 1, "", "data_field"], [271, 4, 1, "", "default_export_data_table"], [271, 4, 1, "", "init_export_data"], [271, 4, 1, "", "name"], [271, 4, 1, "", "table_var_map"]], "mp.dmce_buslink_mpc2": [[272, 4, 1, "", "data_field"], [272, 4, 1, "", "name"], [272, 4, 1, "", "table_var_map"]], "mp.dmce_gen3p_mpc2": [[273, 4, 1, "", "data_field"], [273, 4, 1, "", "name"], [273, 4, 1, "", "table_var_map"]], "mp.dmce_gen_mpc2": [[274, 3, 1, "", "cost_table2gencost"], [274, 4, 1, "", "data_field"], [274, 4, 1, "", "default_export_data_table"], [274, 4, 1, "", "gen_cost_export"], [274, 4, 1, "", "gen_cost_import"], [274, 3, 1, "", "gencost2cost_table"], [274, 4, 1, "", "name"], [274, 2, 1, "", "pwl1"], [274, 4, 1, "", "start_cost_export"], [274, 4, 1, "", "start_cost_import"], [274, 4, 1, "", "table_var_map"]], "mp.dmce_legacy_dcline_mpc2": [[275, 4, 1, "", "data_field"], [275, 4, 1, "", "dcline_cost_export"], [275, 4, 1, "", "dcline_cost_import"], [275, 4, 1, "", "default_export_data_table"], [275, 4, 1, "", "name"], [275, 4, 1, "", "table_var_map"]], "mp.dmce_line3p_mpc2": [[276, 4, 1, "", "create_line_construction_table"], [276, 4, 1, "", "data_field"], [276, 4, 1, "", "import"], [276, 4, 1, "", "name"], [276, 4, 1, "", "table_var_map"]], "mp.dmce_load3p_mpc2": [[277, 2, 1, "", "bus"], [277, 4, 1, "", "data_field"], [277, 4, 1, "", "name"], [277, 4, 1, "", "table_var_map"]], "mp.dmce_load_mpc2": [[278, 2, 1, "", "bus"], [278, 4, 1, "", "data_field"], [278, 4, 1, "", "get_export_size"], [278, 4, 1, "", "get_import_size"], [278, 4, 1, "", "name"], [278, 4, 1, "", "scale_factor_fcn"], [278, 4, 1, "", "sys_wide_zip_loads"], [278, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_gen_mpc2": [[279, 4, 1, "", "data_field"], [279, 4, 1, "", "data_subs"], [279, 4, 1, "", "get_export_size"], [279, 4, 1, "", "get_import_size"], [279, 4, 1, "", "import"], [279, 4, 1, "", "import_cost"], [279, 4, 1, "", "import_qty"], [279, 4, 1, "", "import_ramp"], [279, 4, 1, "", "name"], [279, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_zone_mpc2": [[280, 4, 1, "", "data_field"], [280, 4, 1, "", "data_subs"], [280, 4, 1, "", "import_req"], [280, 4, 1, "", "import_zones"], [280, 4, 1, "", "name"], [280, 4, 1, "", "table_var_map"]], "mp.dmce_shunt_mpc2": [[281, 2, 1, "", "bus"], [281, 4, 1, "", "data_field"], [281, 4, 1, "", "get_export_size"], [281, 4, 1, "", "get_import_size"], [281, 4, 1, "", "name"], [281, 4, 1, "", "table_var_map"]], "mp.dmce_xfmr3p_mpc2": [[282, 4, 1, "", "data_field"], [282, 4, 1, "", "name"], [282, 4, 1, "", "table_var_map"]], "mp.dme_branch": [[283, 2, 1, "", "b_fr"], [283, 2, 1, "", "b_to"], [283, 4, 1, "", "build_params"], [283, 4, 1, "", "cxn_idx_prop"], [283, 4, 1, "", "cxn_type"], [283, 4, 1, "", "export_vars"], [283, 4, 1, "", "export_vars_offline_val"], [283, 2, 1, "", "fbus"], [283, 2, 1, "", "g_fr"], [283, 2, 1, "", "g_to"], [283, 4, 1, "", "initialize"], [283, 4, 1, "", "label"], [283, 4, 1, "", "labels"], [283, 2, 1, "", "loss_tol"], [283, 4, 1, "", "main_table_var_names"], [283, 4, 1, "", "name"], [283, 4, 1, "", "pp_data_cnt"], [283, 4, 1, "", "pp_data_row_det"], [283, 4, 1, "", "pp_data_sum"], [283, 4, 1, "", "pp_get_footers_det"], [283, 4, 1, "", "pp_get_headers_det"], [283, 4, 1, "", "pp_have_section_det"], [283, 4, 1, "", "pp_have_section_sum"], [283, 2, 1, "", "r"], [283, 2, 1, "", "rate_a"], [283, 2, 1, "", "ta"], [283, 2, 1, "", "tbus"], [283, 2, 1, "", "tm"], [283, 4, 1, "", "update_status"], [283, 2, 1, "", "x"]], "mp.dme_branch_opf": [[284, 4, 1, "", "export_vars"], [284, 4, 1, "", "export_vars_offline_val"], [284, 4, 1, "", "main_table_var_names"], [284, 4, 1, "", "pp_binding_rows_lim"], [284, 4, 1, "", "pp_data_row_lim"], [284, 4, 1, "", "pp_get_headers_lim"], [284, 4, 1, "", "pp_get_title_lim"], [284, 4, 1, "", "pp_have_section_lim"], [284, 4, 1, "", "pretty_print"]], "mp.dme_bus": [[285, 4, 1, "", "build_params"], [285, 4, 1, "", "export_vars"], [285, 4, 1, "", "export_vars_offline_val"], [285, 4, 1, "", "init_status"], [285, 4, 1, "", "label"], [285, 4, 1, "", "labels"], [285, 4, 1, "", "main_table_var_names"], [285, 4, 1, "", "name"], [285, 4, 1, "", "pp_data_cnt"], [285, 4, 1, "", "pp_data_ext"], [285, 4, 1, "", "pp_data_row_det"], [285, 4, 1, "", "pp_get_headers_det"], [285, 4, 1, "", "pp_have_section_det"], [285, 4, 1, "", "pp_have_section_ext"], [285, 4, 1, "", "set_bus_type_pq"], [285, 4, 1, "", "set_bus_type_pv"], [285, 4, 1, "", "set_bus_type_ref"], [285, 2, 1, "", "type"], [285, 4, 1, "", "update_status"], [285, 2, 1, "", "va_start"], [285, 2, 1, "", "vm_control"], [285, 2, 1, "", "vm_lb"], [285, 2, 1, "", "vm_start"], [285, 2, 1, "", "vm_ub"]], "mp.dme_bus3p": [[286, 4, 1, "", "build_params"], [286, 4, 1, "", "init_status"], [286, 4, 1, "", "label"], [286, 4, 1, "", "labels"], [286, 4, 1, "", "main_table_var_names"], [286, 4, 1, "", "name"], [286, 4, 1, "", "pp_data_row_det"], [286, 4, 1, "", "pp_get_headers_det"], [286, 4, 1, "", "pp_have_section_det"], [286, 2, 1, "", "type"], [286, 4, 1, "", "update_status"], [286, 2, 1, "", "va1_start"], [286, 2, 1, "", "va2_start"], [286, 2, 1, "", "va3_start"], [286, 2, 1, "", "vm1_start"], [286, 2, 1, "", "vm2_start"], [286, 2, 1, "", "vm3_start"], [286, 2, 1, "", "vm_control"]], "mp.dme_bus_opf": [[288, 4, 1, "", "export_vars"], [288, 4, 1, "", "export_vars_offline_val"], [288, 4, 1, "", "main_table_var_names"], [288, 4, 1, "", "pp_binding_rows_lim"], [288, 4, 1, "", "pp_data_ext"], [288, 4, 1, "", "pp_data_row_det"], [288, 4, 1, "", "pp_data_row_lim"], [288, 4, 1, "", "pp_get_headers_det"], [288, 4, 1, "", "pp_get_headers_lim"], [288, 4, 1, "", "pp_have_section_lim"]], "mp.dme_buslink": [[289, 4, 1, "", "build_params"], [289, 2, 1, "", "bus"], [289, 2, 1, "", "bus3p"], [289, 4, 1, "", "cxn_idx_prop"], [289, 4, 1, "", "cxn_type"], [289, 4, 1, "", "initialize"], [289, 4, 1, "", "label"], [289, 4, 1, "", "labels"], [289, 4, 1, "", "main_table_var_names"], [289, 4, 1, "", "name"], [289, 2, 1, "", "pg1_start"], [289, 2, 1, "", "pg2_start"], [289, 2, 1, "", "pg3_start"], [289, 4, 1, "", "pp_data_row_det"], [289, 4, 1, "", "pp_get_headers_det"], [289, 4, 1, "", "pp_have_section_det"], [289, 2, 1, "", "qg1_start"], [289, 2, 1, "", "qg2_start"], [289, 2, 1, "", "qg3_start"], [289, 4, 1, "", "update_status"]], "mp.dme_gen": [[291, 4, 1, "", "apply_vm_setpoint"], [291, 4, 1, "", "build_params"], [291, 2, 1, "", "bus"], [291, 2, 1, "", "bus_on"], [291, 4, 1, "", "cxn_idx_prop"], [291, 4, 1, "", "cxn_type"], [291, 4, 1, "", "export_vars"], [291, 4, 1, "", "export_vars_offline_val"], [291, 4, 1, "", "have_cost"], [291, 4, 1, "", "initialize"], [291, 4, 1, "", "isload"], [291, 4, 1, "", "label"], [291, 4, 1, "", "labels"], [291, 4, 1, "", "main_table_var_names"], [291, 4, 1, "", "name"], [291, 2, 1, "", "pg_lb"], [291, 2, 1, "", "pg_start"], [291, 2, 1, "", "pg_ub"], [291, 4, 1, "", "pp_data_row_det"], [291, 4, 1, "", "pp_data_sum"], [291, 4, 1, "", "pp_get_footers_det"], [291, 4, 1, "", "pp_get_headers_det"], [291, 4, 1, "", "pp_have_section_det"], [291, 4, 1, "", "pp_have_section_sum"], [291, 2, 1, "", "qg_lb"], [291, 2, 1, "", "qg_start"], [291, 2, 1, "", "qg_ub"], [291, 4, 1, "", "update_status"], [291, 4, 1, "", "violated_q_lims"], [291, 2, 1, "", "vm_setpoint"]], "mp.dme_gen3p": [[292, 4, 1, "", "apply_vm_setpoint"], [292, 4, 1, "", "build_params"], [292, 2, 1, "", "bus"], [292, 2, 1, "", "bus_on"], [292, 4, 1, "", "cxn_idx_prop"], [292, 4, 1, "", "cxn_type"], [292, 4, 1, "", "initialize"], [292, 4, 1, "", "label"], [292, 4, 1, "", "labels"], [292, 4, 1, "", "main_table_var_names"], [292, 4, 1, "", "name"], [292, 2, 1, "", "pg1_start"], [292, 2, 1, "", "pg2_start"], [292, 2, 1, "", "pg3_start"], [292, 4, 1, "", "pp_data_row_det"], [292, 4, 1, "", "pp_data_sum"], [292, 4, 1, "", "pp_get_headers_det"], [292, 4, 1, "", "pp_have_section_det"], [292, 4, 1, "", "pp_have_section_sum"], [292, 2, 1, "", "qg1_start"], [292, 2, 1, "", "qg2_start"], [292, 2, 1, "", "qg3_start"], [292, 4, 1, "", "update_status"], [292, 2, 1, "", "vm1_setpoint"], [292, 2, 1, "", "vm2_setpoint"], [292, 2, 1, "", "vm3_setpoint"]], "mp.dme_gen_opf": [[294, 4, 1, "", "build_cost_params"], [294, 4, 1, "", "export_vars"], [294, 4, 1, "", "export_vars_offline_val"], [294, 4, 1, "", "have_cost"], [294, 4, 1, "", "main_table_var_names"], [294, 4, 1, "", "max_pwl_gencost"], [294, 4, 1, "", "pp_binding_rows_lim"], [294, 4, 1, "", "pp_data_row_lim"], [294, 4, 1, "", "pp_get_headers_lim"], [294, 4, 1, "", "pp_have_section_lim"], [294, 4, 1, "", "pretty_print"]], "mp.dme_legacy_dcline": [[295, 4, 1, "", "apply_vm_setpoints"], [295, 4, 1, "", "build_params"], [295, 4, 1, "", "cxn_idx_prop"], [295, 4, 1, "", "cxn_type"], [295, 4, 1, "", "export_vars"], [295, 4, 1, "", "export_vars_offline_val"], [295, 2, 1, "", "fbus"], [295, 2, 1, "", "fbus_on"], [295, 4, 1, "", "have_cost"], [295, 4, 1, "", "initialize"], [295, 4, 1, "", "label"], [295, 4, 1, "", "labels"], [295, 2, 1, "", "loss0"], [295, 2, 1, "", "loss1"], [295, 4, 1, "", "main_table_var_names"], [295, 4, 1, "", "name"], [295, 2, 1, "", "p_fr_lb"], [295, 2, 1, "", "p_fr_start"], [295, 2, 1, "", "p_fr_ub"], [295, 2, 1, "", "p_to_start"], [295, 4, 1, "", "pp_data_row_det"], [295, 4, 1, "", "pp_data_sum"], [295, 4, 1, "", "pp_get_headers_det"], [295, 4, 1, "", "pp_have_section_det"], [295, 4, 1, "", "pp_have_section_sum"], [295, 2, 1, "", "q_fr_lb"], [295, 2, 1, "", "q_fr_start"], [295, 2, 1, "", "q_fr_ub"], [295, 2, 1, "", "q_to_lb"], [295, 2, 1, "", "q_to_start"], [295, 2, 1, "", "q_to_ub"], [295, 2, 1, "", "tbus"], [295, 2, 1, "", "tbus_on"], [295, 4, 1, "", "update_status"], [295, 2, 1, "", "vm_setpoint_fr"], [295, 2, 1, "", "vm_setpoint_to"]], "mp.dme_legacy_dcline_opf": [[296, 4, 1, "", "build_cost_params"], [296, 4, 1, "", "export_vars"], [296, 4, 1, "", "export_vars_offline_val"], [296, 4, 1, "", "have_cost"], [296, 4, 1, "", "main_table_var_names"], [296, 4, 1, "", "pp_binding_rows_lim"], [296, 4, 1, "", "pp_data_row_lim"], [296, 4, 1, "", "pp_get_headers_lim"], [296, 4, 1, "", "pp_have_section_lim"], [296, 4, 1, "", "pretty_print"]], "mp.dme_line3p": [[297, 4, 1, "", "build_params"], [297, 4, 1, "", "create_line_construction_table"], [297, 4, 1, "", "cxn_idx_prop"], [297, 4, 1, "", "cxn_type"], [297, 2, 1, "", "fbus"], [297, 2, 1, "", "freq"], [297, 4, 1, "", "initialize"], [297, 4, 1, "", "label"], [297, 4, 1, "", "labels"], [297, 2, 1, "", "lc"], [297, 2, 1, "", "lc_tab"], [297, 4, 1, "", "lc_table_var_names"], [297, 2, 1, "", "lc_y_idx"], [297, 2, 1, "", "len"], [297, 4, 1, "", "main_table_var_names"], [297, 4, 1, "", "name"], [297, 4, 1, "", "pp_data_row_det"], [297, 4, 1, "", "pp_data_sum"], [297, 4, 1, "", "pp_get_headers_det"], [297, 4, 1, "", "pp_have_section_det"], [297, 4, 1, "", "pp_have_section_sum"], [297, 4, 1, "", "pretty_print"], [297, 4, 1, "", "symmat2vec"], [297, 2, 1, "", "tbus"], [297, 4, 1, "", "update_status"], [297, 4, 1, "", "vec2symmat"], [297, 2, 1, "", "yc"], [297, 2, 1, "", "ys"]], "mp.dme_load": [[299, 4, 1, "", "build_params"], [299, 2, 1, "", "bus"], [299, 4, 1, "", "cxn_idx_prop"], [299, 4, 1, "", "cxn_type"], [299, 4, 1, "", "initialize"], [299, 4, 1, "", "label"], [299, 4, 1, "", "labels"], [299, 4, 1, "", "main_table_var_names"], [299, 4, 1, "", "name"], [299, 2, 1, "", "pd"], [299, 2, 1, "", "pd_i"], [299, 2, 1, "", "pd_z"], [299, 4, 1, "", "pp_data_row_det"], [299, 4, 1, "", "pp_data_sum"], [299, 4, 1, "", "pp_get_footers_det"], [299, 4, 1, "", "pp_get_headers_det"], [299, 4, 1, "", "pp_have_section_det"], [299, 4, 1, "", "pp_have_section_sum"], [299, 2, 1, "", "qd"], [299, 2, 1, "", "qd_i"], [299, 2, 1, "", "qd_z"], [299, 4, 1, "", "update_status"]], "mp.dme_load3p": [[300, 4, 1, "", "build_params"], [300, 2, 1, "", "bus"], [300, 4, 1, "", "cxn_idx_prop"], [300, 4, 1, "", "cxn_type"], [300, 4, 1, "", "initialize"], [300, 4, 1, "", "label"], [300, 4, 1, "", "labels"], [300, 4, 1, "", "main_table_var_names"], [300, 4, 1, "", "name"], [300, 2, 1, "", "pd1"], [300, 2, 1, "", "pd2"], [300, 2, 1, "", "pd3"], [300, 2, 1, "", "pf1"], [300, 2, 1, "", "pf2"], [300, 2, 1, "", "pf3"], [300, 4, 1, "", "pp_data_row_det"], [300, 4, 1, "", "pp_data_sum"], [300, 4, 1, "", "pp_get_headers_det"], [300, 4, 1, "", "pp_have_section_det"], [300, 4, 1, "", "pp_have_section_sum"], [300, 4, 1, "", "update_status"]], "mp.dme_load_cpf": [[302, 4, 1, "", "export_vars"], [302, 4, 1, "", "parameterized"]], "mp.dme_reserve_gen": [[304, 4, 1, "", "build_params"], [304, 4, 1, "", "export_vars"], [304, 4, 1, "", "export_vars_offline_val"], [304, 2, 1, "", "gen"], [304, 4, 1, "", "label"], [304, 4, 1, "", "labels"], [304, 4, 1, "", "main_table_var_names"], [304, 4, 1, "", "name"], [304, 4, 1, "", "pp_binding_rows_lim"], [304, 4, 1, "", "pp_data_row_det"], [304, 4, 1, "", "pp_data_row_lim"], [304, 4, 1, "", "pp_data_sum"], [304, 4, 1, "", "pp_get_footers_det"], [304, 4, 1, "", "pp_get_headers_det"], [304, 4, 1, "", "pp_get_headers_lim"], [304, 4, 1, "", "pp_have_section_det"], [304, 4, 1, "", "pp_have_section_lim"], [304, 4, 1, "", "pp_have_section_sum"], [304, 2, 1, "", "r_ub"], [304, 4, 1, "", "update_status"]], "mp.dme_reserve_zone": [[305, 4, 1, "", "build_params"], [305, 4, 1, "", "export_vars"], [305, 4, 1, "", "export_vars_offline_val"], [305, 4, 1, "", "label"], [305, 4, 1, "", "labels"], [305, 4, 1, "", "main_table_var_names"], [305, 4, 1, "", "name"], [305, 4, 1, "", "pp_data_row_det"], [305, 4, 1, "", "pp_get_headers_det"], [305, 4, 1, "", "pp_have_section_det"], [305, 2, 1, "", "req"], [305, 4, 1, "", "update_status"], [305, 2, 1, "", "zones"]], "mp.dme_shared_opf": [[306, 2, 1, "", "ctol"], [306, 4, 1, "", "pp_binding_rows_lim"], [306, 4, 1, "", "pp_data_lim"], [306, 4, 1, "", "pp_data_other"], [306, 4, 1, "", "pp_data_row_lim"], [306, 4, 1, "", "pp_get_footers_lim"], [306, 4, 1, "", "pp_get_footers_other"], [306, 4, 1, "", "pp_get_headers_lim"], [306, 4, 1, "", "pp_get_headers_other"], [306, 4, 1, "", "pp_get_title_lim"], [306, 4, 1, "", "pp_have_section_lim"], [306, 4, 1, "", "pp_have_section_other"], [306, 4, 1, "", "pp_rows_lim"], [306, 4, 1, "", "pp_rows_other"], [306, 4, 1, "", "pp_set_tols_lim"], [306, 2, 1, "", "ptol"]], "mp.dme_shunt": [[307, 2, 1, "", "bs"], [307, 4, 1, "", "build_params"], [307, 2, 1, "", "bus"], [307, 4, 1, "", "cxn_idx_prop"], [307, 4, 1, "", "cxn_type"], [307, 2, 1, "", "gs"], [307, 4, 1, "", "initialize"], [307, 4, 1, "", "label"], [307, 4, 1, "", "labels"], [307, 4, 1, "", "main_table_var_names"], [307, 4, 1, "", "name"], [307, 4, 1, "", "pp_data_row_det"], [307, 4, 1, "", "pp_data_sum"], [307, 4, 1, "", "pp_get_footers_det"], [307, 4, 1, "", "pp_get_headers_det"], [307, 4, 1, "", "pp_have_section_det"], [307, 4, 1, "", "pp_have_section_sum"], [307, 4, 1, "", "update_status"]], "mp.dme_shunt_cpf": [[308, 4, 1, "", "export_vars"], [308, 4, 1, "", "parameterized"]], "mp.dme_xfmr3p": [[310, 4, 1, "", "build_params"], [310, 4, 1, "", "cxn_idx_prop"], [310, 4, 1, "", "cxn_type"], [310, 2, 1, "", "fbus"], [310, 4, 1, "", "initialize"], [310, 4, 1, "", "label"], [310, 4, 1, "", "labels"], [310, 4, 1, "", "main_table_var_names"], [310, 4, 1, "", "name"], [310, 4, 1, "", "pp_data_row_det"], [310, 4, 1, "", "pp_data_sum"], [310, 4, 1, "", "pp_get_headers_det"], [310, 4, 1, "", "pp_have_section_det"], [310, 4, 1, "", "pp_have_section_sum"], [310, 4, 1, "", "pretty_print"], [310, 2, 1, "", "r"], [310, 2, 1, "", "tbus"], [310, 4, 1, "", "update_status"], [310, 2, 1, "", "x"]], "mp.element_container": [[312, 2, 1, "", "element_classes"], [312, 2, 1, "", "elements"], [312, 4, 1, "", "modify_element_classes"]], "mp.extension": [[313, 4, 1, "", "data_model_class"], [313, 4, 1, "", "dm_converter_class"], [313, 4, 1, "", "dm_element_classes"], [313, 4, 1, "", "dmc_element_classes"], [313, 4, 1, "", "math_model_class"], [313, 4, 1, "", "mm_element_classes"], [313, 4, 1, "", "network_model_class"], [313, 4, 1, "", "nm_element_classes"], [313, 4, 1, "", "task_class"]], "mp.form": [[314, 4, 1, "", "find_form_class"], [314, 4, 1, "", "form_name"], [314, 4, 1, "", "form_tag"], [314, 4, 1, "", "get_params"], [314, 4, 1, "", "model_params"], [314, 4, 1, "", "model_vvars"], [314, 4, 1, "", "model_zvars"]], "mp.form_ac": [[315, 2, 1, "", "L"], [315, 2, 1, "", "M"], [315, 2, 1, "", "N"], [315, 2, 1, "", "Y"], [315, 4, 1, "", "aux_data_va_vm"], [315, 2, 1, "", "i"], [315, 2, 1, "", "inln"], [315, 2, 1, "", "inln_hess"], [315, 4, 1, "", "model_params"], [315, 4, 1, "", "model_zvars"], [315, 2, 1, "", "param_ncols"], [315, 4, 1, "", "port_active_power2_lim_fcn"], [315, 4, 1, "", "port_active_power2_lim_hess"], [315, 4, 1, "", "port_active_power_lim_fcn"], [315, 4, 1, "", "port_active_power_lim_hess"], [315, 4, 1, "", "port_apparent_power_lim_fcn"], [315, 4, 1, "", "port_apparent_power_lim_hess"], [315, 4, 1, "", "port_current_lim_fcn"], [315, 4, 1, "", "port_current_lim_hess"], [315, 4, 1, "", "port_inj_current"], [315, 4, 1, "", "port_inj_current_hess"], [315, 4, 1, "", "port_inj_current_hess_v"], [315, 4, 1, "", "port_inj_current_hess_vz"], [315, 4, 1, "", "port_inj_current_jac"], [315, 4, 1, "", "port_inj_power"], [315, 4, 1, "", "port_inj_power_hess"], [315, 4, 1, "", "port_inj_power_hess_v"], [315, 4, 1, "", "port_inj_power_hess_vz"], [315, 4, 1, "", "port_inj_power_jac"], [315, 2, 1, "", "s"], [315, 2, 1, "", "snln"], [315, 2, 1, "", "snln_hess"]], "mp.form_acc": [[316, 4, 1, "", "aux_data_va_vm"], [316, 4, 1, "", "form_name"], [316, 4, 1, "", "form_tag"], [316, 4, 1, "", "model_vvars"], [316, 4, 1, "", "port_inj_current_hess_v"], [316, 4, 1, "", "port_inj_current_hess_vz"], [316, 4, 1, "", "port_inj_current_jac"], [316, 4, 1, "", "port_inj_power_hess_v"], [316, 4, 1, "", "port_inj_power_hess_vz"], [316, 4, 1, "", "port_inj_power_jac"], [316, 4, 1, "", "va_fcn"], [316, 4, 1, "", "va_hess"], [316, 4, 1, "", "vm2_fcn"], [316, 4, 1, "", "vm2_hess"]], "mp.form_acp": [[317, 4, 1, "", "aux_data_va_vm"], [317, 4, 1, "", "form_name"], [317, 4, 1, "", "form_tag"], [317, 4, 1, "", "model_vvars"], [317, 4, 1, "", "port_inj_current_hess_v"], [317, 4, 1, "", "port_inj_current_hess_vz"], [317, 4, 1, "", "port_inj_current_jac"], [317, 4, 1, "", "port_inj_power_hess_v"], [317, 4, 1, "", "port_inj_power_hess_vz"], [317, 4, 1, "", "port_inj_power_jac"]], "mp.form_dc": [[318, 2, 1, "", "B"], [318, 2, 1, "", "K"], [318, 4, 1, "", "form_name"], [318, 4, 1, "", "form_tag"], [318, 4, 1, "", "model_params"], [318, 4, 1, "", "model_vvars"], [318, 4, 1, "", "model_zvars"], [318, 2, 1, "", "p"], [318, 2, 1, "", "param_ncols"], [318, 4, 1, "", "port_inj_power"]], "mp.mapped_array": [[319, 4, 1, "", "add_elements"], [319, 4, 1, "", "add_names"], [319, 4, 1, "", "copy"], [319, 4, 1, "", "delete_elements"], [319, 4, 1, "", "display"], [319, 4, 1, "", "has_name"], [319, 4, 1, "", "length"], [319, 4, 1, "", "mapped_array"], [319, 4, 1, "", "name2idx"], [319, 4, 1, "", "size"], [319, 4, 1, "", "subsasgn"], [319, 4, 1, "", "subsref"]], "mp.math_model": [[320, 4, 1, "", "add_aux_data"], [320, 4, 1, "", "add_constraints"], [320, 4, 1, "", "add_costs"], [320, 4, 1, "", "add_node_balance_constraints"], [320, 4, 1, "", "add_system_constraints"], [320, 4, 1, "", "add_system_costs"], [320, 4, 1, "", "add_system_vars"], [320, 4, 1, "", "add_vars"], [320, 2, 1, "", "aux_data"], [320, 4, 1, "", "build"], [320, 4, 1, "", "build_base_aux_data"], [320, 4, 1, "", "data_model_update"], [320, 4, 1, "", "display"], [320, 4, 1, "", "form_name"], [320, 4, 1, "", "form_tag"], [320, 4, 1, "", "network_model_x_soln"], [320, 4, 1, "", "solve_opts"], [320, 4, 1, "", "task_name"], [320, 4, 1, "", "task_tag"], [320, 4, 1, "", "update_nm_vars"]], "mp.math_model_cpf_acc": [[321, 4, 1, "", "math_model_cpf_acc"]], "mp.math_model_cpf_acci": [[322, 4, 1, "", "add_node_balance_constraints"], [322, 4, 1, "", "form_name"], [322, 4, 1, "", "form_tag"]], "mp.math_model_cpf_accs": [[323, 4, 1, "", "add_node_balance_constraints"], [323, 4, 1, "", "form_name"], [323, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acp": [[324, 4, 1, "", "callback_vlim"], [324, 4, 1, "", "event_vlim"], [324, 4, 1, "", "math_model_cpf_acp"]], "mp.math_model_cpf_acpi": [[325, 4, 1, "", "add_node_balance_constraints"], [325, 4, 1, "", "form_name"], [325, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acps": [[326, 4, 1, "", "add_node_balance_constraints"], [326, 4, 1, "", "expand_z_warmstart"], [326, 4, 1, "", "form_name"], [326, 4, 1, "", "form_tag"], [326, 4, 1, "", "solve_opts_warmstart"]], "mp.math_model_opf": [[327, 4, 1, "", "add_system_vars"], [327, 4, 1, "", "build_aux_data"], [327, 4, 1, "", "interior_va"], [327, 4, 1, "", "interior_x0"], [327, 4, 1, "", "task_name"], [327, 4, 1, "", "task_tag"]], "mp.math_model_opf_ac": [[328, 4, 1, "", "nodal_current_balance_fcn"], [328, 4, 1, "", "nodal_current_balance_hess"], [328, 4, 1, "", "nodal_power_balance_fcn"], [328, 4, 1, "", "nodal_power_balance_hess"], [328, 4, 1, "", "solve_opts"]], "mp.math_model_opf_acc": [[329, 4, 1, "", "convert_x_m2n"], [329, 4, 1, "", "interior_va"], [329, 4, 1, "", "math_model_opf_acc"]], "mp.math_model_opf_acci": [[330, 4, 1, "", "add_node_balance_constraints"], [330, 4, 1, "", "form_name"], [330, 4, 1, "", "form_tag"], [330, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acci_legacy": [[331, 4, 1, "", "add_named_set"], [331, 4, 1, "", "add_system_constraints"], [331, 4, 1, "", "add_system_costs"], [331, 4, 1, "", "add_vars"], [331, 4, 1, "", "build"], [331, 4, 1, "", "def_set_types"], [331, 4, 1, "", "init_set_types"], [331, 4, 1, "", "legacy_user_var_names"], [331, 4, 1, "", "math_model_opf_acci_legacy"]], "mp.math_model_opf_accs": [[332, 4, 1, "", "add_node_balance_constraints"], [332, 4, 1, "", "form_name"], [332, 4, 1, "", "form_tag"], [332, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_accs_legacy": [[333, 4, 1, "", "add_named_set"], [333, 4, 1, "", "add_system_constraints"], [333, 4, 1, "", "add_system_costs"], [333, 4, 1, "", "add_vars"], [333, 4, 1, "", "build"], [333, 4, 1, "", "def_set_types"], [333, 4, 1, "", "init_set_types"], [333, 4, 1, "", "legacy_user_var_names"], [333, 4, 1, "", "math_model_opf_accs_legacy"]], "mp.math_model_opf_acp": [[334, 4, 1, "", "convert_x_m2n"], [334, 4, 1, "", "math_model_opf_acp"]], "mp.math_model_opf_acpi": [[335, 4, 1, "", "add_node_balance_constraints"], [335, 4, 1, "", "form_name"], [335, 4, 1, "", "form_tag"], [335, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acpi_legacy": [[336, 4, 1, "", "add_named_set"], [336, 4, 1, "", "add_system_constraints"], [336, 4, 1, "", "add_system_costs"], [336, 4, 1, "", "add_vars"], [336, 4, 1, "", "build"], [336, 4, 1, "", "def_set_types"], [336, 4, 1, "", "init_set_types"], [336, 4, 1, "", "legacy_user_var_names"], [336, 4, 1, "", "math_model_opf_acpi_legacy"]], "mp.math_model_opf_acps": [[337, 4, 1, "", "add_node_balance_constraints"], [337, 4, 1, "", "form_name"], [337, 4, 1, "", "form_tag"], [337, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acps_legacy": [[338, 4, 1, "", "add_named_set"], [338, 4, 1, "", "add_system_constraints"], [338, 4, 1, "", "add_system_costs"], [338, 4, 1, "", "add_vars"], [338, 4, 1, "", "build"], [338, 4, 1, "", "def_set_types"], [338, 4, 1, "", "init_set_types"], [338, 4, 1, "", "legacy_user_var_names"], [338, 4, 1, "", "math_model_opf_acps_legacy"]], "mp.math_model_opf_dc": [[339, 4, 1, "", "add_node_balance_constraints"], [339, 4, 1, "", "convert_x_m2n"], [339, 4, 1, "", "form_name"], [339, 4, 1, "", "form_tag"], [339, 4, 1, "", "math_model_opf_dc"], [339, 4, 1, "", "solve_opts"]], "mp.math_model_opf_dc_legacy": [[340, 4, 1, "", "add_named_set"], [340, 4, 1, "", "add_system_constraints"], [340, 4, 1, "", "add_system_costs"], [340, 4, 1, "", "add_vars"], [340, 4, 1, "", "build"], [340, 4, 1, "", "def_set_types"], [340, 4, 1, "", "init_set_types"], [340, 4, 1, "", "legacy_user_var_names"], [340, 4, 1, "", "math_model_opf_dc_legacy"]], "mp.math_model_pf": [[341, 4, 1, "", "add_costs"], [341, 4, 1, "", "add_system_vars"], [341, 4, 1, "", "solve_opts"], [341, 4, 1, "", "task_name"], [341, 4, 1, "", "task_tag"]], "mp.math_model_pf_ac": [[342, 4, 1, "", "math_model_pf_ac"]], "mp.math_model_pf_acci": [[343, 4, 1, "", "add_node_balance_constraints"], [343, 4, 1, "", "form_name"], [343, 4, 1, "", "form_tag"]], "mp.math_model_pf_accs": [[344, 4, 1, "", "add_node_balance_constraints"], [344, 4, 1, "", "form_name"], [344, 4, 1, "", "form_tag"]], "mp.math_model_pf_acpi": [[345, 4, 1, "", "add_node_balance_constraints"], [345, 4, 1, "", "form_name"], [345, 4, 1, "", "form_tag"]], "mp.math_model_pf_acps": [[346, 4, 1, "", "add_node_balance_constraints"], [346, 4, 1, "", "fd_jac_approx"], [346, 4, 1, "", "fdpf_B_matrix_models"], [346, 4, 1, "", "form_name"], [346, 4, 1, "", "form_tag"], [346, 4, 1, "", "gs_x_update"], [346, 4, 1, "", "zg_x_update"]], "mp.math_model_pf_dc": [[347, 4, 1, "", "add_node_balance_constraints"], [347, 4, 1, "", "form_name"], [347, 4, 1, "", "form_tag"], [347, 4, 1, "", "math_model_pf_dc"], [347, 4, 1, "", "solve_opts"]], "mp.mm_element": [[348, 4, 1, "", "add_constraints"], [348, 4, 1, "", "add_costs"], [348, 4, 1, "", "add_vars"], [348, 4, 1, "", "data_model_element"], [348, 4, 1, "", "data_model_update"], [348, 4, 1, "", "data_model_update_off"], [348, 4, 1, "", "data_model_update_on"], [348, 4, 1, "", "name"], [348, 4, 1, "", "network_model_element"]], "mp.mm_shared_opf_legacy": [[349, 4, 1, "", "add_legacy_cost"], [349, 4, 1, "", "add_legacy_user_constraints"], [349, 4, 1, "", "add_legacy_user_constraints_ac"], [349, 4, 1, "", "add_legacy_user_costs"], [349, 4, 1, "", "add_legacy_user_vars"], [349, 4, 1, "", "build_legacy"], [349, 4, 1, "", "eval_legacy_cost"], [349, 4, 1, "", "get_mpc"], [349, 4, 1, "", "init_set_types_legacy"], [349, 4, 1, "", "mod_set_types_legacy"], [349, 4, 1, "", "params_legacy_cost"]], "mp.mm_shared_pfcpf": [[350, 4, 1, "", "build_aux_data"]], "mp.mm_shared_pfcpf_ac": [[351, 4, 1, "", "add_system_varset_pf"], [351, 4, 1, "", "update_z"]], "mp.mm_shared_pfcpf_ac_i": [[352, 4, 1, "", "build_aux_data_i"]], "mp.mm_shared_pfcpf_acc": [[353, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acci": [[354, 4, 1, "", "add_system_vars_pf"], [354, 4, 1, "", "build_aux_data"], [354, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_accs": [[355, 4, 1, "", "add_system_vars_pf"], [355, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acp": [[356, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acpi": [[357, 4, 1, "", "add_system_vars_pf"], [357, 4, 1, "", "build_aux_data"], [357, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acps": [[358, 4, 1, "", "add_system_vars_pf"], [358, 4, 1, "", "build_aux_data"], [358, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_dc": [[359, 4, 1, "", "add_system_vars_pf"], [359, 4, 1, "", "build_aux_data"], [359, 4, 1, "", "convert_x_m2n"], [359, 4, 1, "", "update_z"]], "mp.mme_branch": [[360, 4, 1, "", "name"]], "mp.mme_branch_opf": [[361, 4, 1, "", "ang_diff_params"], [361, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_ac": [[362, 4, 1, "", "add_constraints"], [362, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_opf_acc": [[363, 4, 1, "", "add_constraints"], [363, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_acp": [[364, 4, 1, "", "add_constraints"]], "mp.mme_branch_opf_dc": [[365, 4, 1, "", "add_constraints"], [365, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_ac": [[366, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_dc": [[367, 4, 1, "", "data_model_update_on"]], "mp.mme_bus": [[368, 4, 1, "", "name"]], "mp.mme_bus3p": [[369, 4, 1, "", "data_model_update_on"], [369, 4, 1, "", "name"]], "mp.mme_bus3p_opf_acc": [[370, 4, 1, "", "interior_x0"]], "mp.mme_bus3p_opf_acp": [[371, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_ac": [[372, 4, 1, "", "interior_vm"]], "mp.mme_bus_opf_acc": [[373, 4, 1, "", "add_constraints"], [373, 4, 1, "", "data_model_update_on"], [373, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_acp": [[374, 4, 1, "", "data_model_update_on"], [374, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_dc": [[375, 4, 1, "", "data_model_update_on"], [375, 4, 1, "", "interior_x0"]], "mp.mme_bus_pf_ac": [[376, 4, 1, "", "data_model_update_on"]], "mp.mme_bus_pf_dc": [[377, 4, 1, "", "data_model_update_on"]], "mp.mme_buslink": [[378, 4, 1, "", "name"]], "mp.mme_buslink_opf": [[379, 4, 1, "", "interior_x0"]], "mp.mme_buslink_opf_acc": [[380, 4, 1, "", "add_constraints"], [380, 4, 1, "", "va_fcn"], [380, 4, 1, "", "va_hess"], [380, 4, 1, "", "vm2_fcn"], [380, 4, 1, "", "vm2_hess"]], "mp.mme_buslink_opf_acp": [[381, 4, 1, "", "add_constraints"]], "mp.mme_buslink_pf_ac": [[382, 4, 1, "", "add_constraints"], [382, 4, 1, "", "add_vars"], [382, 4, 1, "", "voltage_constraints"]], "mp.mme_buslink_pf_acc": [[383, 4, 1, "", "add_constraints"], [383, 4, 1, "", "pf_va_fcn"], [383, 4, 1, "", "pf_vm_fcn"]], "mp.mme_buslink_pf_acp": [[384, 4, 1, "", "add_constraints"]], "mp.mme_gen": [[385, 4, 1, "", "name"]], "mp.mme_gen3p": [[386, 4, 1, "", "data_model_update_on"], [386, 4, 1, "", "name"]], "mp.mme_gen3p_opf": [[387, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf": [[388, 4, 1, "", "add_costs"], [388, 4, 1, "", "add_vars"], [388, 2, 1, "", "cost"], [388, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf_ac": [[389, 4, 1, "", "add_constraints"], [389, 4, 1, "", "add_costs"], [389, 4, 1, "", "build_cost_params"], [389, 4, 1, "", "data_model_update_on"], [389, 4, 1, "", "disp_load_constant_pf_constraint"], [389, 4, 1, "", "has_pq_cap"], [389, 4, 1, "", "pq_capability_constraint"]], "mp.mme_gen_opf_ac_oval": [[390, 4, 1, "", "add_constraints"], [390, 4, 1, "", "oval_pq_capability_fcn"], [390, 4, 1, "", "oval_pq_capability_hess"]], "mp.mme_gen_opf_dc": [[391, 4, 1, "", "add_constraints"], [391, 4, 1, "", "build_cost_params"], [391, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_ac": [[392, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_dc": [[393, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline": [[394, 4, 1, "", "name"]], "mp.mme_legacy_dcline_opf": [[395, 4, 1, "", "add_constraints"], [395, 4, 1, "", "add_costs"], [395, 4, 1, "", "add_vars"], [395, 4, 1, "", "build_cost_params"], [395, 2, 1, "", "cost"], [395, 4, 1, "", "interior_x0"]], "mp.mme_legacy_dcline_opf_ac": [[396, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_opf_dc": [[397, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_ac": [[398, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_dc": [[399, 4, 1, "", "data_model_update_on"]], "mp.mme_line3p": [[400, 4, 1, "", "data_model_update_on"], [400, 4, 1, "", "name"]], "mp.mme_line3p_opf": [[401, 4, 1, "", "interior_x0"]], "mp.mme_load": [[402, 4, 1, "", "name"]], "mp.mme_load_cpf": [[403, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_ac": [[404, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_dc": [[405, 4, 1, "", "data_model_update_on"]], "mp.mme_reserve_gen": [[406, 4, 1, "", "add_constraints"], [406, 4, 1, "", "add_costs"], [406, 4, 1, "", "add_vars"], [406, 4, 1, "", "data_model_update_on"], [406, 4, 1, "", "name"]], "mp.mme_reserve_zone": [[407, 4, 1, "", "add_constraints"], [407, 4, 1, "", "data_model_update_on"], [407, 4, 1, "", "name"]], "mp.mme_shunt": [[408, 4, 1, "", "name"]], "mp.mme_shunt_cpf": [[409, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_ac": [[410, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_dc": [[411, 4, 1, "", "data_model_update_on"]], "mp.mme_xfmr3p": [[412, 4, 1, "", "data_model_update_on"], [412, 4, 1, "", "name"]], "mp.mme_xfmr3p_opf": [[413, 4, 1, "", "interior_x0"]], "mp.net_model": [[414, 4, 1, "", "add_node"], [414, 4, 1, "", "add_nodes"], [414, 4, 1, "", "add_port"], [414, 4, 1, "", "add_state"], [414, 4, 1, "", "add_states"], [414, 4, 1, "", "add_var"], [414, 4, 1, "", "add_vvars"], [414, 4, 1, "", "add_zvars"], [414, 4, 1, "", "build"], [414, 4, 1, "", "build_params"], [414, 4, 1, "", "def_set_types"], [414, 4, 1, "", "display"], [414, 4, 1, "", "ensure_ref_node"], [414, 4, 1, "", "get_node_idx"], [414, 4, 1, "", "get_port_idx"], [414, 4, 1, "", "get_state_idx"], [414, 4, 1, "", "init_set_types"], [414, 4, 1, "", "name"], [414, 2, 1, "", "node"], [414, 4, 1, "", "node_types"], [414, 4, 1, "", "np"], [414, 2, 1, "", "nv"], [414, 4, 1, "", "nz"], [414, 4, 1, "", "params_var"], [414, 2, 1, "", "port"], [414, 4, 1, "", "set_node_type_pq"], [414, 4, 1, "", "set_node_type_pv"], [414, 4, 1, "", "set_node_type_ref"], [414, 4, 1, "", "set_type_idx_map"], [414, 4, 1, "", "set_type_label"], [414, 4, 1, "", "stack_matrix_params"], [414, 4, 1, "", "stack_vector_params"], [414, 2, 1, "", "state"], [414, 2, 1, "", "the_np"], [414, 2, 1, "", "the_nz"]], "mp.net_model_ac": [[415, 4, 1, "", "build_params"], [415, 4, 1, "", "def_set_types"], [415, 4, 1, "", "get_va"], [415, 4, 1, "", "nodal_complex_current_balance"], [415, 4, 1, "", "nodal_complex_current_balance_hess"], [415, 4, 1, "", "nodal_complex_power_balance"], [415, 4, 1, "", "nodal_complex_power_balance_hess"], [415, 4, 1, "", "port_inj_nln"], [415, 4, 1, "", "port_inj_nln_hess"], [415, 4, 1, "", "port_inj_soln"]], "mp.net_model_acc": [[416, 4, 1, "", "def_set_types"], [416, 4, 1, "", "initial_voltage_angle"], [416, 4, 1, "", "net_model_acc"]], "mp.net_model_acp": [[417, 4, 1, "", "def_set_types"], [417, 4, 1, "", "initial_voltage_angle"], [417, 4, 1, "", "net_model_acp"]], "mp.net_model_dc": [[418, 4, 1, "", "build_params"], [418, 4, 1, "", "def_set_types"], [418, 4, 1, "", "net_model_dc"], [418, 4, 1, "", "port_inj_soln"], [418, 2, 1, "", "va"], [418, 2, 1, "", "z"]], "mp.nm_element": [[419, 2, 1, "", "C"], [419, 2, 1, "", "D"], [419, 4, 1, "", "add_nodes"], [419, 4, 1, "", "add_states"], [419, 4, 1, "", "add_vvars"], [419, 4, 1, "", "add_zvars"], [419, 4, 1, "", "build_params"], [419, 4, 1, "", "count"], [419, 4, 1, "", "data_model_element"], [419, 4, 1, "", "display"], [419, 4, 1, "", "get_nv_"], [419, 4, 1, "", "incidence_matrix"], [419, 4, 1, "", "math_model_element"], [419, 4, 1, "", "name"], [419, 2, 1, "", "nk"], [419, 4, 1, "", "nn"], [419, 4, 1, "", "node_indices"], [419, 4, 1, "", "node_types"], [419, 4, 1, "", "np"], [419, 4, 1, "", "nz"], [419, 4, 1, "", "set_node_type_pq"], [419, 4, 1, "", "set_node_type_pv"], [419, 4, 1, "", "set_node_type_ref"], [419, 2, 1, "", "soln"], [419, 4, 1, "", "x2vz"]], "mp.nme_branch": [[420, 4, 1, "", "name"], [420, 4, 1, "", "np"]], "mp.nme_branch_ac": [[421, 4, 1, "", "build_params"]], "mp.nme_branch_acc": [[422, 4, 1, "", "ang_diff_fcn"], [422, 4, 1, "", "ang_diff_hess"]], "mp.nme_branch_dc": [[424, 4, 1, "", "build_params"]], "mp.nme_bus": [[425, 4, 1, "", "name"], [425, 4, 1, "", "nn"], [425, 4, 1, "", "node_types"], [425, 4, 1, "", "set_node_type_pq"], [425, 4, 1, "", "set_node_type_pv"], [425, 4, 1, "", "set_node_type_ref"]], "mp.nme_bus3p": [[426, 4, 1, "", "name"], [426, 4, 1, "", "nn"], [426, 4, 1, "", "node_types"]], "mp.nme_bus3p_acc": [[427, 4, 1, "", "add_vvars"]], "mp.nme_bus3p_acp": [[428, 4, 1, "", "add_vvars"]], "mp.nme_bus_acc": [[429, 4, 1, "", "add_vvars"]], "mp.nme_bus_acp": [[430, 4, 1, "", "add_vvars"]], "mp.nme_bus_dc": [[431, 4, 1, "", "add_vvars"]], "mp.nme_buslink": [[432, 4, 1, "", "add_zvars"], [432, 4, 1, "", "build_params"], [432, 4, 1, "", "name"], [432, 4, 1, "", "np"], [432, 4, 1, "", "nz"], [432, 4, 1, "", "voltage_constraints"]], "mp.nme_gen": [[435, 4, 1, "", "name"], [435, 4, 1, "", "np"], [435, 4, 1, "", "nz"]], "mp.nme_gen3p": [[436, 4, 1, "", "add_zvars"], [436, 4, 1, "", "build_params"], [436, 4, 1, "", "name"], [436, 4, 1, "", "np"], [436, 4, 1, "", "nz"]], "mp.nme_gen_ac": [[439, 4, 1, "", "add_zvars"], [439, 4, 1, "", "build_params"]], "mp.nme_gen_dc": [[442, 4, 1, "", "add_zvars"], [442, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline": [[443, 4, 1, "", "name"], [443, 4, 1, "", "np"], [443, 4, 1, "", "nz"]], "mp.nme_legacy_dcline_ac": [[444, 4, 1, "", "add_zvars"], [444, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline_dc": [[447, 4, 1, "", "add_zvars"], [447, 4, 1, "", "build_params"]], "mp.nme_line3p": [[448, 4, 1, "", "build_params"], [448, 4, 1, "", "name"], [448, 4, 1, "", "np"], [448, 4, 1, "", "vec2symmat_stacked"]], "mp.nme_load": [[449, 4, 1, "", "name"], [449, 4, 1, "", "np"]], "mp.nme_load3p": [[450, 4, 1, "", "build_params"], [450, 4, 1, "", "name"], [450, 4, 1, "", "np"]], "mp.nme_load_ac": [[451, 4, 1, "", "build_params"], [451, 4, 1, "", "port_inj_current_nln"], [451, 4, 1, "", "port_inj_power_nln"]], "mp.nme_load_dc": [[454, 4, 1, "", "build_params"]], "mp.nme_shunt": [[455, 4, 1, "", "name"], [455, 4, 1, "", "np"]], "mp.nme_shunt_ac": [[456, 4, 1, "", "build_params"]], "mp.nme_shunt_dc": [[459, 4, 1, "", "build_params"]], "mp.nme_xfmr3p": [[460, 4, 1, "", "build_params"], [460, 4, 1, "", "name"], [460, 4, 1, "", "np"]], "mp.set_manager": [[106, 2, 1, "", "N"], [106, 2, 1, "", "NS"], [106, 4, 1, "", "add"], [106, 4, 1, "", "copy"], [106, 2, 1, "", "data"], [106, 4, 1, "", "describe_idx"], [106, 4, 1, "", "display"], [106, 4, 1, "", "get_N"], [106, 2, 1, "", "idx"], [106, 4, 1, "", "init_indexed_name"], [106, 2, 1, "", "label"], [106, 2, 1, "", "order"], [106, 4, 1, "", "set_manager"], [106, 4, 1, "", "set_type_idx_map"]], "mp.set_manager_opt_model": [[107, 4, 1, "", "display_soln"], [107, 4, 1, "", "has_parsed_soln"], [107, 4, 1, "", "params"], [107, 4, 1, "", "parse_soln"], [107, 4, 1, "", "set_manager_opt_model"], [107, 4, 1, "", "set_params"], [107, 2, 1, "", "soln"]], "mp.sm_legacy_cost": [[461, 2, 1, "", "cache"], [461, 4, 1, "", "sm_legacy_cost"]], "mp.sm_lin_constraint": [[108, 4, 1, "", "add"], [108, 2, 1, "", "cache"], [108, 4, 1, "", "display_soln"], [108, 4, 1, "", "eval"], [108, 4, 1, "", "get_soln"], [108, 4, 1, "", "params"], [108, 4, 1, "", "parse_soln"], [108, 4, 1, "", "set_params"], [108, 4, 1, "", "sm_lin_constraint"]], "mp.sm_nln_constraint": [[109, 4, 1, "", "add"], [109, 4, 1, "", "display_soln"], [109, 4, 1, "", "eval"], [109, 4, 1, "", "eval_hess"], [109, 4, 1, "", "get_soln"], [109, 4, 1, "", "params"], [109, 4, 1, "", "parse_soln"], [109, 4, 1, "", "set_params"], [109, 4, 1, "", "sm_nln_constraint"]], "mp.sm_nln_cost": [[110, 4, 1, "", "add"], [110, 4, 1, "", "display_soln"], [110, 4, 1, "", "eval"], [110, 4, 1, "", "get_soln"], [110, 4, 1, "", "params"], [110, 4, 1, "", "set_params"], [110, 4, 1, "", "sm_nln_cost"]], "mp.sm_quad_constraint": [[111, 4, 1, "", "add"], [111, 3, 1, "", "blkprod2vertcat"], [111, 2, 1, "", "cache"], [111, 4, 1, "", "display_soln"], [111, 4, 1, "", "eval"], [111, 4, 1, "", "get_soln"], [111, 4, 1, "", "params"], [111, 4, 1, "", "parse_soln"], [111, 4, 1, "", "set_params"], [111, 4, 1, "", "sm_quad_constraint"]], "mp.sm_quad_cost": [[112, 4, 1, "", "add"], [112, 2, 1, "", "cache"], [112, 4, 1, "", "display_soln"], [112, 4, 1, "", "eval"], [112, 4, 1, "", "get_soln"], [112, 4, 1, "", "params"], [112, 4, 1, "", "set_params"], [112, 4, 1, "", "sm_quad_cost"]], "mp.sm_variable": [[113, 4, 1, "", "add"], [113, 2, 1, "", "cache"], [113, 4, 1, "", "display_soln"], [113, 4, 1, "", "get_soln"], [113, 4, 1, "", "params"], [113, 4, 1, "", "parse_soln"], [113, 4, 1, "", "set_params"], [113, 4, 1, "", "sm_variable"], [113, 3, 1, "", "varsets_cell2struct"], [113, 4, 1, "", "varsets_idx"], [113, 4, 1, "", "varsets_len"], [113, 4, 1, "", "varsets_x"]], "mp.task": [[462, 4, 1, "", "data_model_build"], [462, 4, 1, "", "data_model_build_post"], [462, 4, 1, "", "data_model_build_pre"], [462, 4, 1, "", "data_model_class"], [462, 4, 1, "", "data_model_class_default"], [462, 4, 1, "", "data_model_create"], [462, 2, 1, "", "dm"], [462, 4, 1, "", "dm_converter_build"], [462, 4, 1, "", "dm_converter_class"], [462, 4, 1, "", "dm_converter_class_mpc2_default"], [462, 4, 1, "", "dm_converter_create"], [462, 2, 1, "", "dmc"], [462, 2, 1, "", "et"], [462, 2, 1, "", "i_dm"], [462, 2, 1, "", "i_mm"], [462, 2, 1, "", "i_nm"], [462, 4, 1, "", "load_dm"], [462, 4, 1, "", "math_model_build"], [462, 4, 1, "", "math_model_class"], [462, 4, 1, "", "math_model_class_default"], [462, 4, 1, "", "math_model_create"], [462, 4, 1, "", "math_model_opt"], [462, 2, 1, "", "message"], [462, 2, 1, "", "mm"], [462, 2, 1, "", "mm_opt"], [462, 2, 1, "", "name"], [462, 4, 1, "", "network_model_build"], [462, 4, 1, "", "network_model_build_post"], [462, 4, 1, "", "network_model_build_pre"], [462, 4, 1, "", "network_model_class"], [462, 4, 1, "", "network_model_class_default"], [462, 4, 1, "", "network_model_create"], [462, 4, 1, "", "network_model_update"], [462, 4, 1, "", "network_model_x_soln"], [462, 4, 1, "", "next_dm"], [462, 4, 1, "", "next_mm"], [462, 4, 1, "", "next_nm"], [462, 2, 1, "", "nm"], [462, 4, 1, "", "print_soln"], [462, 4, 1, "", "print_soln_header"], [462, 4, 1, "", "run"], [462, 4, 1, "", "run_post"], [462, 4, 1, "", "run_pre"], [462, 4, 1, "", "save_soln"], [462, 2, 1, "", "success"], [462, 2, 1, "", "tag"]], "mp.task_cpf": [[463, 4, 1, "", "data_model_build"], [463, 4, 1, "", "data_model_class_default"], [463, 4, 1, "", "dm_converter_class"], [463, 4, 1, "", "math_model_class_default"], [463, 4, 1, "", "math_model_opt"], [463, 4, 1, "", "network_model_build"], [463, 4, 1, "", "network_model_update"], [463, 4, 1, "", "network_model_x_soln"], [463, 4, 1, "", "next_mm"], [463, 4, 1, "", "run_pre"], [463, 4, 1, "", "task_cpf"], [463, 2, 1, "", "warmstart"]], "mp.task_cpf_legacy": [[464, 4, 1, "", "legacy_post_run"], [464, 4, 1, "", "run_post"], [464, 4, 1, "", "run_pre"]], "mp.task_opf": [[465, 4, 1, "", "data_model_build_post"], [465, 4, 1, "", "data_model_class_default"], [465, 2, 1, "", "dc"], [465, 4, 1, "", "math_model_class_default"], [465, 4, 1, "", "network_model_class_default"], [465, 4, 1, "", "print_soln_header"], [465, 4, 1, "", "run_pre"]], "mp.task_opf_legacy": [[466, 4, 1, "", "data_model_build_post"], [466, 4, 1, "", "dm_converter_class_mpc2_default"], [466, 4, 1, "", "legacy_post_run"], [466, 4, 1, "", "math_model_class_default"], [466, 4, 1, "", "run_post"], [466, 4, 1, "", "run_pre"]], "mp.task_pf": [[467, 2, 1, "", "dc"], [467, 4, 1, "", "enforce_q_lims"], [467, 2, 1, "", "fixed_q_idx"], [467, 2, 1, "", "fixed_q_qty"], [467, 2, 1, "", "iterations"], [467, 4, 1, "", "math_model_class_default"], [467, 2, 1, "", "name"], [467, 4, 1, "", "network_model_build_post"], [467, 4, 1, "", "network_model_class_default"], [467, 4, 1, "", "network_model_x_soln"], [467, 4, 1, "", "next_dm"], [467, 2, 1, "", "ref"], [467, 2, 1, "", "ref0"], [467, 4, 1, "", "run_pre"], [467, 2, 1, "", "tag"], [467, 2, 1, "", "va_ref0"]], "mp.task_pf_legacy": [[468, 4, 1, "", "legacy_post_run"], [468, 4, 1, "", "run_post"], [468, 4, 1, "", "run_pre"]], "mp.task_shared_legacy": [[469, 4, 1, "", "run_pre_legacy"]], "mp.xt_3p": [[470, 4, 1, "", "dm_element_classes"], [470, 4, 1, "", "dmc_element_classes"], [470, 4, 1, "", "mm_element_classes"], [470, 4, 1, "", "nm_element_classes"]], "mp.xt_legacy_dcline": [[471, 4, 1, "", "dm_element_classes"], [471, 4, 1, "", "dmc_element_classes"], [471, 4, 1, "", "mm_element_classes"], [471, 4, 1, "", "nm_element_classes"]], "mp.xt_oval_cap_curve": [[472, 4, 1, "", "mm_element_classes"]], "mp.xt_reserves": [[473, 4, 1, "", "dm_element_classes"], [473, 4, 1, "", "dmc_element_classes"], [473, 4, 1, "", "mm_element_classes"]], "mp_idx_manager": [[114, 4, 1, "", "add_named_set"], [114, 4, 1, "", "copy"], [114, 4, 1, "", "describe_idx"], [114, 4, 1, "", "display_set"], [114, 4, 1, "", "get"], [114, 4, 1, "", "getN"], [114, 4, 1, "", "get_idx"], [114, 4, 1, "", "get_userdata"], [114, 4, 1, "", "init_indexed_name"], [114, 4, 1, "", "init_set_types"], [114, 4, 1, "", "mp_idx_manager"], [114, 4, 1, "", "set_type_idx_map"], [114, 4, 1, "", "valid_named_set_type"]], "mp_table": [[474, 4, 1, "", "display"], [474, 4, 1, "", "end"], [474, 3, 1, "", "extract_named_args"], [474, 4, 1, "", "horzcat"], [474, 4, 1, "", "isempty"], [474, 4, 1, "", "istable"], [474, 4, 1, "", "mp_table"], [474, 4, 1, "", "size"], [474, 4, 1, "", "subsasgn"], [474, 4, 1, "", "subsref"], [474, 4, 1, "", "vertcat"]], "mp_table_subclass": [[475, 4, 1, "", "get_table"], [475, 4, 1, "", "set_table"]], "opf_model": [[486, 4, 1, "", "add_legacy_cost"], [486, 4, 1, "", "add_named_set"], [486, 2, 1, "", "cost"], [486, 4, 1, "", "def_set_types"], [486, 4, 1, "", "display"], [486, 4, 1, "", "eval_legacy_cost"], [486, 4, 1, "", "get_mpc"], [486, 4, 1, "", "init_set_types"], [486, 2, 1, "", "mpc"], [486, 4, 1, "", "opf_model"], [486, 4, 1, "", "params_legacy_cost"], [486, 4, 1, "", "set_mpc"]], "opt_model": [[115, 4, 1, "", "add_lin_constraint"], [115, 4, 1, "", "add_nln_constraint"], [115, 4, 1, "", "add_nln_cost"], [115, 4, 1, "", "add_quad_cost"], [115, 4, 1, "", "add_var"], [115, 4, 1, "", "copy"], [115, 4, 1, "", "def_set_types"], [115, 4, 1, "", "display"], [115, 4, 1, "", "display_soln"], [115, 4, 1, "", "eval_lin_constraint"], [115, 4, 1, "", "eval_nln_constraint"], [115, 4, 1, "", "eval_nln_constraint_hess"], [115, 4, 1, "", "eval_nln_cost"], [115, 4, 1, "", "eval_quad_cost"], [115, 4, 1, "", "get_idx"], [115, 4, 1, "", "get_soln"], [115, 4, 1, "", "has_parsed_soln"], [115, 4, 1, "", "init_indexed_name"], [115, 4, 1, "", "is_mixed_integer"], [115, 4, 1, "", "is_solved"], [115, 2, 1, "", "lin"], [115, 2, 1, "", "nlc"], [115, 2, 1, "", "nle"], [115, 2, 1, "", "nli"], [115, 4, 1, "", "opt_model"], [115, 4, 1, "", "params_lin_constraint"], [115, 4, 1, "", "params_nln_constraint"], [115, 4, 1, "", "params_nln_cost"], [115, 4, 1, "", "params_quad_cost"], [115, 4, 1, "", "params_var"], [115, 4, 1, "", "parse_soln"], [115, 2, 1, "", "prob_type"], [115, 4, 1, "", "problem_type"], [115, 2, 1, "", "qcn"], [115, 2, 1, "", "qdc"], [115, 4, 1, "", "set_params"], [115, 2, 1, "", "soln"], [115, 4, 1, "", "solve"], [115, 2, 1, "", "var"], [115, 4, 1, "", "varsets_cell2struct"], [115, 4, 1, "", "varsets_idx"], [115, 4, 1, "", "varsets_len"], [115, 4, 1, "", "varsets_x"]]}, "objtypes": {"0": "mat:function", "1": "mat:class", "2": "mat:attribute", "3": "mat:staticmethod", "4": "mat:method"}, "objnames": {"0": ["mat", "function", "MATLAB function"], "1": ["mat", "class", "MATLAB class"], "2": ["mat", "attribute", "MATLAB attribute"], "3": ["mat", "staticmethod", "MATLAB static method"], "4": ["mat", "method", "MATLAB method"]}, "titleterms": {"acknowledg": [0, 255], "architectur": 1, "overview": [1, 21], "m": [1, 2, 5, 6, 12, 21, 257, 476, 484, 750, 752, 781, 782], "span": [1, 2, 5, 6, 12, 21, 257, 476, 484, 750, 752, 781, 782], "style": [1, 2, 5, 6, 12, 21, 257, 476, 484, 750, 752, 781, 782], "font": [1, 2, 5, 6, 12, 21, 257, 476, 484, 750, 752, 781, 782], "size": [1, 2, 5, 6, 12, 21, 257, 476, 484, 750, 752, 781, 782], "smaller": [1, 2, 5, 6, 12, 21, 257, 476, 484, 750, 752, 781, 782], "atpow": [1, 2, 5, 6, 12, 21, 257, 476, 484, 750, 752, 781, 782], "matpow": [1, 2, 5, 6, 12, 21, 257, 476, 484, 750, 752, 781, 782], "object": [1, 3, 4, 7, 8, 11], "instanc": 1, "class": [1, 2, 7, 239, 257, 750], "hierarchi": 1, "two": 1, "framework": [1, 782], "custom": [1, 2, 17], "default": 2, "determin": 2, "task": [2, 11, 17, 257, 462], "model": [2, 3, 4, 7, 8, 11, 17, 19, 238, 239, 257], "data": [2, 3, 4, 7, 17, 19, 20, 257, 750, 752], "convert": [2, 4, 11, 17, 19, 257], "specif": [2, 4], "method": [2, 3, 11], "element": [2, 3, 4, 7, 8, 17, 19, 257, 781], "modifi": 2, "via": [2, 12], "option": [2, 12, 239], "extens": [2, 12, 18, 19, 257, 313], "build": [3, 4, 7, 8, 11, 13, 17, 750], "system": 3, "level": [3, 476, 750], "paramet": [3, 8, 19], "print": [3, 17], "tabl": [3, 17], "properti": 3, "connect": [3, 17], "import": [4, 17], "export": [4, 17], "variabl": [4, 7, 17], "map": [4, 17], "valu": [4, 17], "develop": [5, 6], "": [5, 37, 104, 238, 255, 782], "manual": [5, 13, 21, 37, 104, 238, 255, 484, 782], "introduct": [6, 485], "environ": 6, "github": 6, "repositori": 6, "convent": 6, "mathemat": [7, 17, 19, 257], "solv": 7, "math": 7, "updat": [7, 13, 17], "network": [7, 8, 17, 19, 257], "ad": 7, "constraint": [7, 12, 257], "cost": 7, "share": 7, "formul": [8, 17, 19], "dc": [8, 17, 257], "ac": [8, 17, 19], "complex": 8, "power": [8, 17, 20, 750], "inject": 8, "current": [8, 781], "node": 8, "type": [8, 17, 19], "exampl": [8, 12, 20, 38, 105, 239, 257], "bu": 8, "gener": 8, "branch": 8, "load": 8, "aggreg": 8, "notat": 9, "refer": [10, 13, 37, 38, 104, 105, 238, 239, 256, 484], "run": [11, 20], "iter": 11, "execut": 11, "other": [11, 21, 38, 105, 256, 476, 750], "how": [12, 13, 17, 18, 20, 21], "add": 12, "an": [12, 18], "opf": [12, 17, 257, 616, 750, 781], "function": [12, 13, 17, 38, 105, 239, 256, 476, 750], "deriv": [12, 750, 781], "implement": [12, 239], "us": [12, 17, 18], "new": [12, 17, 782], "origin": 12, "box": 12, "capabl": 12, "curv": 12, "oval": 12, "see": [12, 17, 18], "also": [12, 17, 18], "document": [13, 21, 255], "util": [13, 239, 750], "generate_autodoc_stub": 14, "generate_matpower_autodoc": 15, "generate_source_symlink": 16, "creat": [17, 18], "transmiss": 17, "line": [17, 257], "name": 17, "main": [17, 38, 105], "output": [17, 750], "stage": 17, "pretti": 17, "subclass": 17, "field": 17, "sourc": 17, "all": [17, 19, 21], "cartesian": [17, 19, 781], "v": [17, 19], "polar": [17, 19], "flow": [17, 20, 750, 781], "optim": 17, "A": 19, "test": [19, 38, 105, 239, 255, 256, 750, 752], "gizmo": 19, "3": 19, "port": 19, "compon": 19, "three": [20, 257], "phase": [20, 257], "format": 20, "bus3p": 20, "line3p": 20, "xfmr3p": 20, "load3p": 20, "gen3p": 20, "lc": 20, "buslink": 20, "case": 20, "home": 21, "get": 21, "start": 21, "more": 21, "legaci": [21, 257, 750, 782], "pdf": 21, "To": 21, "guid": 21, "tech": 21, "note": [21, 781], "public": 21, "link": 21, "have_feature_lu_vec": 22, "have_feature_pardiso": 23, "have_feature_pardiso_legaci": 24, "have_feature_pardiso_object": 25, "mip": [26, 37, 38], "mips_example1": 27, "mips_example2": 28, "mipsver": 29, "mplinsolv": 30, "qps_mip": 31, "t_mip": 32, "t_mips_pardiso": 33, "t_mplinsolv": 34, "t_qps_mip": 35, "test_mip": 36, "user": [37, 104, 238, 255, 257, 750, 782], "privat": [38, 105, 239, 256, 750], "addgen2mpc": 39, "addstorag": 40, "addwind": 41, "apply_profil": 42, "c118swf": 43, "ex_case3a": 44, "ex_case3b": 45, "ex_contab": 46, "ex_load_profil": 47, "ex_storag": 48, "ex_transmat": 49, "ex_wind": 50, "ex_wind_profil": 51, "ex_wind_profile_d": 52, "ex_wind_uc": 53, "ex_xgd": 54, "ex_xgd_ramp": 55, "ex_xgd_r": 56, "ex_xgd_uc": 57, "filter_ramp_transit": 58, "getprofil": 59, "idx_profil": 60, "loadgenericdata": 61, "loadmd": 62, "loadstoragedata": 63, "loadxgendata": 64, "md_init": 65, "most": [66, 104, 105], "most_ex1_": 67, "most_ex2_dcopf": 68, "most_ex3_dcopf_w_uc": 69, "most_ex4_dcopf_ss": 70, "most_ex5_mpopf": 71, "most_ex6_uc": 72, "most_ex7_suc": 73, "most_summari": 74, "mostver": 75, "mpoption_info_most": 76, "plot_gen": 77, "plot_storag": 78, "plot_uc": 79, "plot_uc_data": 80, "t_case30_most": 81, "t_case3_most": 82, "t_case_tlmp": 83, "t_case_tlmp_storag": 84, "t_most_30b_1_1_0": 85, "t_most_30b_1_1_0_uc": 86, "t_most_30b_1_1_17": 87, "t_most_30b_3_1_0": 88, "t_most_30b_3_1_17": 89, "t_most_3b_1_1_0": 90, "t_most_3b_1_1_2": 91, "t_most_3b_3_1_0": 92, "t_most_3b_3_1_2": 93, "t_most_fixed_r": 94, "t_most_mpopf": 95, "t_most_sp": 96, "t_most_spuc": 97, "t_most_suc": 98, "t_most_tlmp": 99, "t_most_uc": 100, "t_most_w_d": 101, "test_most": 102, "uniformwindprofil": 103, "mp": [106, 107, 108, 109, 110, 111, 112, 113, 238, 239, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 781], "set_manag": 106, "set_manager_opt_model": 107, "sm_lin_constraint": 108, "sm_nln_constraint": 109, "sm_nln_cost": 110, "sm_quad_constraint": 111, "sm_quad_cost": 112, "sm_variabl": 113, "mp_idx_manag": 114, "opt_model": 115, "artelys_knitro_opt": 116, "convert_constraint_multipli": 117, "convert_lin_constraint": 118, "convert_lin_constraint_multipli": 119, "convert_quad_constraint": 120, "cplex_opt": 121, "glpk_option": 122, "gurobi_opt": 123, "gurobiv": 124, "have_feature_bpmpd": 125, "have_feature_catchm": 126, "have_feature_clp": 127, "have_feature_cplex": 128, "have_feature_evalc": 129, "have_feature_fmincon": 130, "have_feature_fmincon_ipm": 131, "have_feature_fsolv": 132, "have_feature_glpk": 133, "have_feature_gurobi": 134, "have_feature_intlinprog": 135, "have_feature_ipopt": 136, "have_feature_ipopt_auxdata": 137, "have_feature_isequaln": 138, "have_feature_knitro": 139, "have_feature_knitromatlab": 140, "have_feature_ktrlink": 141, "have_feature_linprog": 142, "have_feature_linprog_d": 143, "have_feature_mosek": 144, "have_feature_opti_clp": 145, "have_feature_optim": 146, "have_feature_optimopt": 147, "have_feature_osqp": 148, "have_feature_quadprog": 149, "have_feature_quadprog_l": 150, "have_feature_sdpt3": 151, "have_feature_sedumi": 152, "have_feature_yalmip": 153, "ipopt_opt": 154, "knitrov": 155, "miqps_cplex": 156, "miqps_glpk": 157, "miqps_gurobi": 158, "miqps_mast": 159, "miqps_mosek": 160, "miqps_ot": 161, "mosek_opt": 162, "mosek_symbcon": 163, "mpomver": 164, "mpopt2nleqopt": 165, "mpopt2nlpopt": 166, "mpopt2pneopt": 167, "mpopt2qcqpopt": 168, "mpopt2qpopt": 169, "nested_struct_copi": 170, "nleqs_cor": 171, "nleqs_fd_newton": 172, "nleqs_fsolv": 173, "nleqs_gauss_seidel": 174, "nleqs_mast": 175, "nleqs_master_ex1": 176, "nleqs_master_ex2": 177, "nleqs_newton": 178, "nlp_consfcn": 179, "nlp_costfcn": 180, "nlp_hessfcn": 181, "nlps_fmincon": 182, "nlps_ipopt": 183, "nlps_knitro": 184, "nlps_master": 185, "nlps_master_ex1": 186, "nlps_master_ex2": 187, "osqp_opt": 188, "osqpver": 189, "pne_callback_default": 190, "pne_callback_nos": 191, "pne_callback_target_lam": 192, "pne_detect_ev": 193, "pne_detected_ev": 194, "pne_event_nos": 195, "pne_event_target_lam": 196, "pne_ex1": 197, "pne_pfcn_arc_len": 198, "pne_pfcn_natur": 199, "pne_pfcn_pseudo_arc_len": 200, "pne_register_callback": 201, "pne_register_ev": 202, "pnes_mast": 203, "qcqp_nlp_consfcn": 204, "qcqp_nlp_costfcn": 205, "qcqp_nlp_hessfcn": 206, "qcqps_gurobi": 207, "qcqps_knitro": 208, "qcqps_master": 209, "qp_ex1": 210, "qps_bpmpd": 211, "qps_clp": 212, "qps_cplex": 213, "qps_glpk": 214, "qps_gurobi": 215, "qps_ipopt": 216, "qps_knitro": 217, "qps_master": 218, "qps_mosek": 219, "qps_osqp": 220, "qps_ot": 221, "t_miqps_mast": 222, "t_nested_struct_copi": 223, "t_nleqs_mast": 224, "t_nlps_master": 225, "t_om_solve_leq": 226, "t_om_solve_miqp": 227, "t_om_solve_nleq": 228, "t_om_solve_nlp": 229, "t_om_solve_pn": 230, "t_om_solve_qcqp": 231, "t_om_solve_qp": 232, "t_opt_model": 233, "t_pnes_mast": 234, "t_qcqps_master": 235, "t_qps_master": 236, "test_mp_opt_model": 237, "opt": [238, 239], "mpom": [238, 239], "master": 239, "handl": 239, "version": [239, 751], "inform": 239, "solver": [239, 750], "interfac": 239, "miqp": [239, 750], "nleq": 239, "nlp": 239, "pne": 239, "lp": [239, 750], "qp": [239, 750], "qcqp": 239, "have_featur": 240, "have_feature_matlab": 241, "have_feature_octav": 242, "mptestver": 243, "t_begin": 244, "t_end": 245, "t_file_match": 246, "t_have_featur": 247, "t_i": 248, "t_ok": 249, "t_run_test": 250, "t_skip": 251, "t_str_match": 252, "t_test_fcn": 253, "test_mptest": 254, "instal": [255, 476], "usag": 255, "contribut": 255, "licens": 255, "core": 257, "contain": 257, "mixin": 257, "miscellan": 257, "base": 257, "fix": 257, "zonal": 257, "reserv": 257, "prototyp": 257, "node_typ": 258, "cost_tabl": 259, "cost_table_util": 260, "data_model": 261, "data_model_cpf": 262, "data_model_opf": 263, "dm_convert": 264, "dm_converter_mpc2": 265, "dm_converter_mpc2_legaci": 266, "dm_element": 267, "dmc_element": 268, "dmce_branch_mpc2": 269, "dmce_bus3p_mpc2": 270, "dmce_bus_mpc2": 271, "dmce_buslink_mpc2": 272, "dmce_gen3p_mpc2": 273, "dmce_gen_mpc2": 274, "dmce_legacy_dcline_mpc2": 275, "dmce_line3p_mpc2": 276, "dmce_load3p_mpc2": 277, "dmce_load_mpc2": 278, "dmce_reserve_gen_mpc2": 279, "dmce_reserve_zone_mpc2": 280, "dmce_shunt_mpc2": 281, "dmce_xfmr3p_mpc2": 282, "dme_branch": 283, "dme_branch_opf": 284, "dme_bu": 285, "dme_bus3p": 286, "dme_bus3p_opf": 287, "dme_bus_opf": 288, "dme_buslink": 289, "dme_buslink_opf": 290, "dme_gen": 291, "dme_gen3p": 292, "dme_gen3p_opf": 293, "dme_gen_opf": 294, "dme_legacy_dclin": 295, "dme_legacy_dcline_opf": 296, "dme_line3p": 297, "dme_line3p_opf": 298, "dme_load": 299, "dme_load3p": 300, "dme_load3p_opf": 301, "dme_load_cpf": 302, "dme_load_opf": 303, "dme_reserve_gen": 304, "dme_reserve_zon": 305, "dme_shared_opf": 306, "dme_shunt": 307, "dme_shunt_cpf": 308, "dme_shunt_opf": 309, "dme_xfmr3p": 310, "dme_xfmr3p_opf": 311, "element_contain": 312, "form": 314, "form_ac": 315, "form_acc": 316, "form_acp": 317, "form_dc": 318, "mapped_arrai": 319, "math_model": 320, "math_model_cpf_acc": [321, 323], "math_model_cpf_acci": 322, "math_model_cpf_acp": [324, 326], "math_model_cpf_acpi": 325, "math_model_opf": 327, "math_model_opf_ac": 328, "math_model_opf_acc": [329, 332], "math_model_opf_acci": 330, "math_model_opf_acci_legaci": 331, "math_model_opf_accs_legaci": 333, "math_model_opf_acp": [334, 337], "math_model_opf_acpi": 335, "math_model_opf_acpi_legaci": 336, "math_model_opf_acps_legaci": 338, "math_model_opf_dc": 339, "math_model_opf_dc_legaci": 340, "math_model_pf": 341, "math_model_pf_ac": 342, "math_model_pf_acci": 343, "math_model_pf_acc": 344, "math_model_pf_acpi": 345, "math_model_pf_acp": 346, "math_model_pf_dc": 347, "mm_element": 348, "mm_shared_opf_legaci": 349, "mm_shared_pfcpf": 350, "mm_shared_pfcpf_ac": 351, "mm_shared_pfcpf_ac_i": 352, "mm_shared_pfcpf_acc": [353, 355], "mm_shared_pfcpf_acci": 354, "mm_shared_pfcpf_acp": [356, 358], "mm_shared_pfcpf_acpi": 357, "mm_shared_pfcpf_dc": 359, "mme_branch": 360, "mme_branch_opf": 361, "mme_branch_opf_ac": 362, "mme_branch_opf_acc": 363, "mme_branch_opf_acp": 364, "mme_branch_opf_dc": 365, "mme_branch_pf_ac": 366, "mme_branch_pf_dc": 367, "mme_bu": 368, "mme_bus3p": 369, "mme_bus3p_opf_acc": 370, "mme_bus3p_opf_acp": 371, "mme_bus_opf_ac": 372, "mme_bus_opf_acc": 373, "mme_bus_opf_acp": 374, "mme_bus_opf_dc": 375, "mme_bus_pf_ac": 376, "mme_bus_pf_dc": 377, "mme_buslink": 378, "mme_buslink_opf": 379, "mme_buslink_opf_acc": 380, "mme_buslink_opf_acp": 381, "mme_buslink_pf_ac": 382, "mme_buslink_pf_acc": 383, "mme_buslink_pf_acp": 384, "mme_gen": 385, "mme_gen3p": 386, "mme_gen3p_opf": 387, "mme_gen_opf": 388, "mme_gen_opf_ac": 389, "mme_gen_opf_ac_ov": 390, "mme_gen_opf_dc": 391, "mme_gen_pf_ac": 392, "mme_gen_pf_dc": 393, "mme_legacy_dclin": 394, "mme_legacy_dcline_opf": 395, "mme_legacy_dcline_opf_ac": 396, "mme_legacy_dcline_opf_dc": 397, "mme_legacy_dcline_pf_ac": 398, "mme_legacy_dcline_pf_dc": 399, "mme_line3p": 400, "mme_line3p_opf": 401, "mme_load": 402, "mme_load_cpf": 403, "mme_load_pf_ac": 404, "mme_load_pf_dc": 405, "mme_reserve_gen": 406, "mme_reserve_zon": 407, "mme_shunt": 408, "mme_shunt_cpf": 409, "mme_shunt_pf_ac": 410, "mme_shunt_pf_dc": 411, "mme_xfmr3p": 412, "mme_xfmr3p_opf": 413, "net_model": 414, "net_model_ac": 415, "net_model_acc": 416, "net_model_acp": 417, "net_model_dc": 418, "nm_element": 419, "nme_branch": 420, "nme_branch_ac": 421, "nme_branch_acc": 422, "nme_branch_acp": 423, "nme_branch_dc": 424, "nme_bu": 425, "nme_bus3p": 426, "nme_bus3p_acc": 427, "nme_bus3p_acp": 428, "nme_bus_acc": 429, "nme_bus_acp": 430, "nme_bus_dc": 431, "nme_buslink": 432, "nme_buslink_acc": 433, "nme_buslink_acp": 434, "nme_gen": 435, "nme_gen3p": 436, "nme_gen3p_acc": 437, "nme_gen3p_acp": 438, "nme_gen_ac": 439, "nme_gen_acc": 440, "nme_gen_acp": 441, "nme_gen_dc": 442, "nme_legacy_dclin": 443, "nme_legacy_dcline_ac": 444, "nme_legacy_dcline_acc": 445, "nme_legacy_dcline_acp": 446, "nme_legacy_dcline_dc": 447, "nme_line3p": 448, "nme_load": 449, "nme_load3p": 450, "nme_load_ac": 451, "nme_load_acc": 452, "nme_load_acp": 453, "nme_load_dc": 454, "nme_shunt": 455, "nme_shunt_ac": 456, "nme_shunt_acc": 457, "nme_shunt_acp": 458, "nme_shunt_dc": 459, "nme_xfmr3p": 460, "sm_legacy_cost": 461, "task_cpf": 463, "task_cpf_legaci": 464, "task_opf": 465, "task_opf_legaci": 466, "task_pf": 467, "task_pf_legaci": 468, "task_shared_legaci": 469, "xt_3p": 470, "xt_legacy_dclin": 471, "xt_oval_cap_curv": 472, "xt_reserv": 473, "mp_tabl": 474, "mp_table_subclass": 475, "limit": 475, "top": [476, 750], "simul": [476, 750], "install_matpow": 477, "load_dm": 478, "mp_table_class": 479, "run_cpf": 480, "run_mp": 481, "run_opf": 482, "run_pf": 483, "opf_model": 486, "add_userfcn": 487, "apply_chang": 488, "bustyp": 489, "calc_branch_angl": 490, "calc_v_i_sum": 491, "calc_v_pq_sum": 492, "calc_v_y_sum": 493, "case_info": 494, "caseformat": 495, "cdf2mpc": 496, "compare_cas": 497, "connected_compon": 498, "cpf_corrector": 499, "cpf_current_mpc": 500, "cpf_default_callback": 501, "cpf_detect_ev": 502, "cpf_flim_ev": 503, "cpf_flim_event_cb": 504, "cpf_nose_ev": 505, "cpf_nose_event_cb": 506, "cpf_p": 507, "cpf_p_jac": 508, "cpf_plim_ev": 509, "cpf_plim_event_cb": 510, "cpf_predictor": 511, "cpf_qlim_ev": 512, "cpf_qlim_event_cb": 513, "cpf_register_callback": 514, "cpf_register_ev": 515, "cpf_tangent": 516, "cpf_target_lam_ev": 517, "cpf_target_lam_event_cb": 518, "cpf_vlim_ev": 519, "cpf_vlim_event_cb": 520, "d2abr_dv2": 521, "d2ibr_dv2": 522, "d2imis_dv2": 523, "d2imis_dvdsg": 524, "d2sbr_dv2": 525, "d2sbus_dv2": 526, "dabr_dv": 527, "dibr_dv": 528, "dimis_dv": 529, "dsbr_dv": 530, "dsbus_dv": 531, "dcopf": 532, "dcopf_solv": 533, "dcpf": 534, "define_const": 535, "e2i_data": 536, "e2i_field": 537, "ext2int": 538, "extract_island": 539, "fdpf": 540, "feval_w_path": 541, "find_bridg": 542, "find_island": 543, "fmincopf": 544, "gausspf": 545, "genfuel": 546, "gentyp": 547, "get_loss": 548, "get_reord": 549, "haspqcap": 550, "have_feature_e4st": 551, "have_feature_minopf": 552, "have_feature_most": 553, "have_feature_mp_cor": 554, "have_feature_pdipmopf": 555, "have_feature_regexp_split": 556, "have_feature_scpdipmopf": 557, "have_feature_sdp_pf": 558, "have_feature_smartmarket": 559, "have_feature_syngrid": 560, "have_feature_t": 561, "have_feature_tralmopf": 562, "i2e_data": 563, "i2e_field": 564, "idx_brch": 565, "idx_bu": 566, "idx_cost": 567, "idx_ct": 568, "idx_dclin": 569, "idx_gen": 570, "int2ext": 571, "isload": 572, "load2disp": 573, "loadcas": 574, "loadsh": 575, "makeaang": 576, "makeapq": 577, "makeavl": 578, "makeai": 579, "makeb": 580, "makebdc": 581, "makejac": 582, "makelodf": 583, "makeptdf": 584, "makesbu": 585, "makesdzip": 586, "makeybu": 587, "make_vcorr": 588, "make_zpv": 589, "margcost": 590, "miqps_matpow": 591, "modcost": 592, "mpoption": 593, "mpoption_info_clp": 594, "mpoption_info_cplex": 595, "mpoption_info_fmincon": 596, "mpoption_info_glpk": 597, "mpoption_info_gurobi": 598, "mpoption_info_intlinprog": 599, "mpoption_info_ipopt": 600, "mpoption_info_knitro": 601, "mpoption_info_linprog": 602, "mpoption_info_mip": 603, "mpoption_info_mosek": 604, "mpoption_info_osqp": 605, "mpoption_info_quadprog": 606, "mpoption_old": 607, "mpver": 608, "newtonpf": 609, "newtonpf_i_cart": 610, "newtonpf_i_hybrid": 611, "newtonpf_i_polar": 612, "newtonpf_s_cart": 613, "newtonpf_s_hybrid": 614, "nlpopf_solv": 615, "opf_arg": 617, "opf_branch_ang_fcn": 618, "opf_branch_ang_hess": 619, "opf_branch_flow_fcn": 620, "opf_branch_flow_hess": 621, "opf_current_balance_fcn": 622, "opf_current_balance_hess": 623, "opf_execut": 624, "opf_gen_cost_fcn": 625, "opf_legacy_user_cost_fcn": 626, "opf_nle_fcn1": 627, "opf_nle_hess1": 628, "opf_power_balance_fcn": 629, "opf_power_balance_hess": 630, "opf_setup": 631, "opf_veq_fcn": 632, "opf_veq_hess": 633, "opf_vlim_fcn": 634, "opf_vlim_hess": 635, "opf_vref_fcn": 636, "opf_vref_hess": 637, "order_radi": 638, "pfsoln": 639, "poly2pwl": 640, "polycost": 641, "pqcost": 642, "printpf": 643, "psse2mpc": 644, "psse_convert": 645, "psse_convert_hvdc": 646, "psse_convert_xfmr": 647, "psse_pars": 648, "psse_parse_lin": 649, "psse_parse_sect": 650, "psse_read": 651, "qps_matpow": 652, "radial_pf": 653, "remove_userfcn": 654, "run_userfcn": 655, "runcpf": 656, "rundcopf": 657, "rundcpf": 658, "runduopf": 659, "runopf": 660, "runopf_w_r": 661, "runpf": 662, "runuopf": 663, "save2pss": 664, "savecas": 665, "savechgtab": 666, "scale_load": 667, "set_reord": 668, "t_apply_chang": 669, "t_auction_cas": 670, "t_auction_minopf": 671, "t_auction_mip": 672, "t_auction_tspopf_pdipm": 673, "t_case30_userfcn": 674, "t_case9_dclin": 675, "t_case9_opf": 676, "t_case9_opfv2": 677, "t_case9_pf": 678, "t_case9_pfv2": 679, "t_case9_save2pss": 680, "t_case_ext": 681, "t_case_int": 682, "t_chgtab": 683, "t_cpf": 684, "t_cpf_cb1": 685, "t_cpf_cb2": 686, "t_dcline": 687, "t_ext2int2ext": 688, "t_feval_w_path": 689, "t_get_loss": 690, "t_haspqcap": 691, "t_hessian": 692, "t_island": 693, "t_jacobian": 694, "t_load2disp": 695, "t_loadcas": 696, "t_makelodf": 697, "t_makeptdf": 698, "t_margcost": 699, "t_miqps_matpow": 700, "t_modcost": 701, "t_mpoption": 702, "t_mpoption_ov": 703, "t_off2cas": 704, "t_opf_dc_bpmpd": 705, "t_opf_dc_clp": 706, "t_opf_dc_cplex": 707, "t_opf_dc_default": 708, "t_opf_dc_glpk": 709, "t_opf_dc_gurobi": 710, "t_opf_dc_ipopt": 711, "t_opf_dc_mip": 712, "t_opf_dc_mips_sc": 713, "t_opf_dc_mosek": 714, "t_opf_dc_osqp": 715, "t_opf_dc_ot": 716, "t_opf_default": 717, "t_opf_fmincon": 718, "t_opf_ipopt": 719, "t_opf_knitro": 720, "t_opf_minopf": 721, "t_opf_mip": 722, "t_opf_model": 723, "t_opf_softlim": 724, "t_opf_tspopf_pdipm": 725, "t_opf_tspopf_scpdipm": 726, "t_opf_tspopf_tralm": 727, "t_opf_userfcn": 728, "t_pf_ac": 729, "t_pf_dc": 730, "t_pf_radial": 731, "t_printpf": 732, "t_psse": 733, "t_qps_matpow": 734, "t_runmarket": 735, "t_runopf_w_r": 736, "t_scale_load": 737, "t_total_load": 738, "t_totcost": 739, "t_vdep_load": 740, "toggle_dclin": 741, "toggle_iflim": 742, "toggle_reserv": 743, "toggle_softlim": 744, "total_load": 745, "totcost": 746, "uopf": 747, "update_mupq": 748, "zgausspf": 749, "input": 750, "convers": 750, "continu": 750, "wrapper": 750, "callback": 750, "milp": 750, "matrix": 750, "featur": 750, "detect": 750, "previou": 751, "mp_foo_tabl": 753, "t_case3p_a": 754, "t_case3p_b": 755, "t_case3p_c": 756, "t_case3p_d": 757, "t_case3p_": 758, "t_case3p_f": 759, "t_case3p_g": 760, "t_case3p_h": 761, "t_case9_gizmo": 762, "t_dmc_element": 763, "t_mp_data_model": 764, "t_mp_dm_converter_mpc2": 765, "t_mp_mapped_arrai": 766, "t_mp_tabl": 767, "t_mpxt_legacy_dclin": 768, "t_mpxt_reserv": 769, "t_nm_element": 770, "t_node_test": 771, "t_port_inj_current_acc": 772, "t_port_inj_current_acp": 773, "t_port_inj_power_acc": 774, "t_port_inj_power_acp": 775, "t_pretty_print": 776, "t_run_mp": 777, "t_run_mp_3p": 778, "t_run_opf_default": 779, "test_matpow": 780, "technic": 781, "tn1": 781, "auction": 781, "tn2": 781, "tn3": 781, "tn4": 781, "tn5": 781, "flexibl": 782}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Acknowledgments": [[0, "acknowledgments"], [255, "acknowledgments"]], "Architecture Overview": [[1, "architecture-overview"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Object Instances": [[1, "matpower-object-instances"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Class Hierarchies": [[1, "matpower-class-hierarchies"]], "Two M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Frameworks": [[1, "two-matpower-frameworks"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Customization": [[1, "matpower-customization"]], "Customizing M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{}": [[2, "customizing-matpower"]], "Default Class Determination": [[2, "default-class-determination"]], "Task Class": [[2, "task-class"]], "Model and Data Converter Classes": [[2, "model-and-data-converter-classes"]], "Class Specification Methods of a Task": [[2, "id7"]], "Element Classes": [[2, "element-classes"]], "Element Class Modifiers": [[2, "id8"]], "Customization via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Options": [[2, "customization-via-matpower-options"]], "Class Customization Options": [[2, "id9"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extensions": [[2, "matpower-extensions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Methods": [[2, "id10"]], "Data Model Object": [[3, "data-model-object"]], "Data Models": [[3, "data-models"]], "Building a Data Model": [[3, "building-a-data-model"]], "System Level Parameters": [[3, "system-level-parameters"]], "Printing a Data Model": [[3, "printing-a-data-model"]], "Data Model Elements": [[3, "data-model-elements"]], "Data Tables": [[3, "data-tables"]], "Properties": [[3, "properties"]], "Data Model Element Properties": [[3, "id6"]], "Methods": [[3, "methods"]], "Connections": [[3, "connections"]], "Data Model Converter Object": [[4, "data-model-converter-object"]], "Data Model Converters": [[4, "data-model-converters"]], "Building a Data Model Converter": [[4, "building-a-data-model-converter"]], "Importing Data": [[4, "importing-data"]], "Exporting Data": [[4, "exporting-data"]], "Data Model Converter Elements": [[4, "data-model-converter-elements"]], "Data Import Specifications": [[4, "data-import-specifications"]], "Variable Map Values": [[4, "id5"]], "Data Export Specifications": [[4, "data-export-specifications"]], "Introduction": [[6, "introduction"], [485, "introduction"]], "Development Environment": [[6, "development-environment"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} GitHub Repositories": [[6, "id1"]], "Conventions": [[6, "conventions"]], "Mathematical Model Object": [[7, "mathematical-model-object"]], "Mathematical Models": [[7, "mathematical-models"]], "Building a Mathematical Model": [[7, "building-a-mathematical-model"]], "Solving a Math Model": [[7, "solving-a-math-model"]], "Updating Network and Data Models": [[7, "updating-network-and-data-models"]], "Mathematical Model Elements": [[7, "mathematical-model-elements"]], "Adding Variables, Constraints, and Costs": [[7, "adding-variables-constraints-and-costs"]], "Updating Data Model Elements": [[7, "updating-data-model-elements"]], "Shared Classes": [[7, "shared-classes"]], "Network Model Object": [[8, "network-model-object"]], "Network Model Formulations": [[8, "network-model-formulations"]], "DC Formulation": [[8, "dc-formulation"], [17, "dc-formulation"]], "AC Formulations": [[8, "ac-formulations"], [17, "ac-formulations"], [19, "ac-formulations"]], "Complex Power Injections": [[8, "complex-power-injections"]], "Complex Current Injections": [[8, "complex-current-injections"]], "Network Models": [[8, "network-models"]], "Building a Network Model": [[8, "building-a-network-model"]], "Node Types": [[8, "node-types"]], "Network Model Elements": [[8, "network-model-elements"]], "Example Elements": [[8, "example-elements"]], "Bus": [[8, "bus"]], "Generator": [[8, "generator"]], "Branch": [[8, "branch"]], "Load": [[8, "load"]], "Building Element Parameters": [[8, "building-element-parameters"]], "Aggregation": [[8, "aggregation"]], "Notation": [[9, "notation"]], "References": [[10, "references"]], "Task Object": [[11, "task-object"]], "Running a Task": [[11, "running-a-task"]], "Building Model and Converter Objects": [[11, "building-model-and-converter-objects"]], "Iterative Execution": [[11, "iterative-execution"]], "Other Methods": [[11, "other-methods"]], "How to Add an OPF Constraint": [[12, "how-to-add-an-opf-constraint"]], "Function and Derivatives": [[12, "function-and-derivatives"]], "Implementation": [[12, "implementation"]], "Using the New Constraint": [[12, "using-the-new-constraint"]], "Example": [[12, "example"]], "Original \u201cbox\u201d capability curves": [[12, "original-box-capability-curves"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} options": [[12, "oval-capability-curves-via-matpower-options"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} extension": [[12, "oval-capability-curves-via-matpower-extension"]], "See Also": [[12, "see-also"], [17, "see-also"], [18, "see-also"]], "How to Build the Documentation": [[13, "how-to-build-the-documentation"]], "Updating the Reference Manual": [[13, "updating-the-reference-manual"]], "Reference Manual Utility Functions": [[13, "reference-manual-utility-functions"]], "How to Create a New Element Type": [[17, "how-to-create-a-new-element-type"]], "DC Transmission Line": [[17, "dc-transmission-line"]], "Data Model Element": [[17, "data-model-element"], [19, "data-model-element"]], "DC Line Data Model": [[17, "id2"]], "Naming": [[17, "naming"]], "Connectivity": [[17, "connectivity"]], "Main Data Table": [[17, "main-data-table"]], "Output Values": [[17, "output-values"]], "Building the Element in Stages": [[17, "building-the-element-in-stages"]], "Pretty Printing": [[17, "pretty-printing"]], "OPF Subclass": [[17, "opf-subclass"]], "Data Model Converter Element": [[17, "data-model-converter-element"], [19, "data-model-converter-element"]], "Main Field in Data Source": [[17, "main-field-in-data-source"]], "Table Variable Map": [[17, "table-variable-map"]], "Custom Import/Export Functions": [[17, "custom-import-export-functions"]], "Network Model Element": [[17, "network-model-element"], [19, "network-model-element"]], "All Formulations": [[17, "all-formulations"], [19, "all-formulations"]], "AC Cartesian vs Polar Formulations": [[17, "ac-cartesian-vs-polar-formulations"], [19, "ac-cartesian-vs-polar-formulations"]], "Mathematical Model Element": [[17, "mathematical-model-element"], [19, "mathematical-model-element"]], "All Tasks and Formulations": [[17, "all-tasks-and-formulations"]], "Power Flow": [[17, "power-flow"]], "Optimal Power Flow": [[17, "optimal-power-flow"]], "Data Model Update": [[17, "data-model-update"]], "AC Optimal Power Flow": [[17, "ac-optimal-power-flow"]], "DC Optimal Power Flow": [[17, "dc-optimal-power-flow"]], "Using the New Element": [[17, "using-the-new-element"]], "How to Create an Extension": [[18, "how-to-create-an-extension"]], "Using the Extension": [[18, "using-the-extension"]], "A Test Gizmo Element Type": [[19, "a-test-gizmo-element-type"]], "3-Port Gizmo": [[19, "port-gizmo"]], "Gizmo Components/Parameters": [[19, "id2"]], "Gizmo Data Model": [[19, "id3"]], "Gizmo Extension": [[19, "gizmo-extension"]], "How to Run a Three-Phase Power Flow": [[20, "how-to-run-a-three-phase-power-flow"]], "Data Format": [[20, "data-format"]], "bus3p": [[20, "bus3p"]], "line3p": [[20, "line3p"]], "xfmr3p": [[20, "xfmr3p"]], "load3p": [[20, "load3p"]], "gen3p": [[20, "gen3p"]], "lc": [[20, "lc"]], "buslink": [[20, "buslink"]], "Example Cases": [[20, "example-cases"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Documentation": [[21, "matpower-documentation"]], "Home": [[21, null]], "Get Started": [[21, null]], "Overview": [[21, "overview"]], "Manuals": [[21, null]], "More Manuals": [[21, "more-manuals"]], "All Legacy PDF Manuals": [[21, "all-legacy-pdf-manuals"]], "How To Guides": [[21, null]], "Tech Notes": [[21, null]], "Publications": [[21, "publications"]], "Other Links": [[21, null]], "MIPS User\u2019s Manual": [[37, "mips-user-s-manual"]], "Reference": [[37, "reference"], [38, "reference"], [104, "reference"], [105, "reference"], [238, "reference"], [239, "reference"], [256, "reference"]], "Main MIPS Functions": [[38, "main-mips-functions"]], "Other Function": [[38, "other-function"]], "MIPS Examples": [[38, "mips-examples"]], "MIPS Tests": [[38, "mips-tests"]], "Private Functions": [[38, "private-functions"], [105, "private-functions"], [239, "private-functions"], [256, "private-functions"]], "MOST User\u2019s Manual": [[104, "most-user-s-manual"]], "Main MOST Functions": [[105, "main-most-functions"]], "Other Functions": [[105, "other-functions"], [256, "other-functions"], [476, "other-functions"], [750, "other-functions"]], "MOST Examples": [[105, "most-examples"]], "MOST Tests": [[105, "most-tests"]], "MP-Opt-Model\\mpom{} User\u2019s Manual": [[238, "mpom-user-s-manual"]], "MP-Opt-Model\\mpom{} Classes": [[239, "mpom-classes"]], "MP-Opt-Model\\mpom{} Functions": [[239, "mpom-functions"]], "Master Functions": [[239, "master-functions"]], "Utility Functions": [[239, "utility-functions"], [750, "utility-functions"]], "Options Handling Functions": [[239, "options-handling-functions"]], "Version Information Functions": [[239, "version-information-functions"]], "Solver Interfaces & Implementations": [[239, "solver-interfaces-implementations"]], "MIQP Solver": [[239, "miqp-solver"]], "NLEQ Solver": [[239, "nleq-solver"]], "NLP Solver": [[239, "nlp-solver"]], "PNE Solver": [[239, "pne-solver"]], "LP/QP Solver": [[239, "lp-qp-solver"]], "QCQP Solver": [[239, "qcqp-solver"]], "MP-Opt-Model\\mpom{} Examples": [[239, "mpom-examples"]], "MP-Opt-Model\\mpom{} Tests": [[239, "mpom-tests"]], "MP-Test User\u2019s Manual": [[255, "mp-test-user-s-manual"]], "Installation": [[255, "installation"]], "Usage": [[255, "usage"]], "Documentation": [[255, "documentation"]], "Contributing": [[255, "contributing"]], "License": [[255, "license"]], "Testing Functions": [[256, "testing-functions"]], "Tests of MP-Test": [[256, "tests-of-mp-test"]], "Classes": [[257, "classes"]], "Task Classes": [[257, "task-classes"]], "Core Task Classes": [[257, "core-task-classes"]], "Legacy Task Classes": [[257, "legacy-task-classes"]], "Data Model Classes": [[257, "data-model-classes"]], "Containers": [[257, "containers"], [257, "id1"], [257, "id3"], [257, "id5"]], "Elements": [[257, "elements"], [257, "id2"], [257, "id4"], [257, "id6"]], "Element Mixins": [[257, "element-mixins"]], "Data Model Converter Classes": [[257, "data-model-converter-classes"]], "Network Model Classes": [[257, "network-model-classes"]], "Mathematical Model Classes": [[257, "mathematical-model-classes"]], "Container Mixins": [[257, "container-mixins"]], "Miscellaneous Classes": [[257, "miscellaneous-classes"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Classes": [[257, "matpower-extension-classes"]], "Base": [[257, "base"]], "OPF Fixed Zonal Reserves Extension": [[257, "opf-fixed-zonal-reserves-extension"]], "Three-Phase Prototype Extension": [[257, "three-phase-prototype-extension"]], "Legacy DC Line Extension": [[257, "legacy-dc-line-extension"]], "Example User Constraint Extension": [[257, "example-user-constraint-extension"]], "Functions": [[476, "functions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Installer": [[476, "matpower-installer"]], "Top-Level Simulation Functions": [[476, "top-level-simulation-functions"], [750, "top-level-simulation-functions"]], "Legacy": [[750, "legacy"]], "Legacy Class": [[750, "legacy-class"]], "Legacy Functions": [[750, "legacy-functions"]], "Input/Output Functions": [[750, "input-output-functions"]], "Data Conversion Functions": [[750, "data-conversion-functions"]], "Power Flow Functions": [[750, "power-flow-functions"]], "Continuation Power Flow Functions": [[750, "continuation-power-flow-functions"]], "OPF and Wrapper Functions": [[750, "opf-and-wrapper-functions"]], "Other OPF Functions": [[750, "other-opf-functions"]], "OPF User Callback Functions": [[750, "opf-user-callback-functions"]], "Power Flow Derivative Functions": [[750, "power-flow-derivative-functions"]], "LP, QP, MILP & MIQP Solver Functions": [[750, "lp-qp-milp-miqp-solver-functions"]], "Matrix Building Functions": [[750, "matrix-building-functions"]], "Private Feature Detection Functions": [[750, "private-feature-detection-functions"]], "Legacy Tests": [[750, "legacy-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[750, "legacy-matpower-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[750, "legacy-matpower-test-data"]], "Previous Versions": [[751, "previous-versions"]], "Tests": [[752, "tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[752, "matpower-tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[752, "matpower-test-data"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Technical Notes": [[781, "matpower-technical-notes"]], "[TN1] Auctions and OPFs": [[781, "tn1-auctions-and-opfs"]], "[TN2] Flows/Derivatives": [[781, "tn2-flows-derivatives"]], "[TN3] Flows/Derivatives, Current": [[781, "tn3-flows-derivatives-current"]], "[TN4] Flows/Derivatives, Cartesian": [[781, "tn4-flows-derivatives-cartesian"]], "[TN5] MP-Element": [[781, "tn5-mp-element"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} User\u2019s Manual": [[782, "matpower-user-s-manual"]], "Legacy Framework": [[782, "legacy-framework"]], "New Flexible Framework": [[782, "new-flexible-framework"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Developer\u2019s Manual": [[5, "matpower-developer-s-manual"]], "generate_autodoc_stubs": [[14, "generate-autodoc-stubs"]], "generate_matpower_autodoc": [[15, "generate-matpower-autodoc"]], "generate_source_symlinks": [[16, "generate-source-symlinks"]], "have_feature_lu_vec": [[22, "have-feature-lu-vec"]], "have_feature_pardiso": [[23, "have-feature-pardiso"]], "have_feature_pardiso_legacy": [[24, "have-feature-pardiso-legacy"]], "have_feature_pardiso_object": [[25, "have-feature-pardiso-object"]], "mips": [[26, "mips"]], "mips_example1": [[27, "mips-example1"]], "mips_example2": [[28, "mips-example2"]], "mipsver": [[29, "mipsver"]], "mplinsolve": [[30, "mplinsolve"]], "qps_mips": [[31, "qps-mips"]], "t_mips": [[32, "t-mips"]], "t_mips_pardiso": [[33, "t-mips-pardiso"]], "t_mplinsolve": [[34, "t-mplinsolve"]], "t_qps_mips": [[35, "t-qps-mips"]], "test_mips": [[36, "test-mips"]], "addgen2mpc": [[39, "addgen2mpc"]], "addstorage": [[40, "addstorage"]], "addwind": [[41, "addwind"]], "apply_profile": [[42, "apply-profile"]], "c118swf": [[43, "c118swf"]], "ex_case3a": [[44, "ex-case3a"]], "ex_case3b": [[45, "ex-case3b"]], "ex_contab": [[46, "ex-contab"]], "ex_load_profile": [[47, "ex-load-profile"]], "ex_storage": [[48, "ex-storage"]], "ex_transmat": [[49, "ex-transmat"]], "ex_wind": [[50, "ex-wind"]], "ex_wind_profile": [[51, "ex-wind-profile"]], "ex_wind_profile_d": [[52, "ex-wind-profile-d"]], "ex_wind_uc": [[53, "ex-wind-uc"]], "ex_xgd": [[54, "ex-xgd"]], "ex_xgd_ramp": [[55, "ex-xgd-ramp"]], "ex_xgd_res": [[56, "ex-xgd-res"]], "ex_xgd_uc": [[57, "ex-xgd-uc"]], "filter_ramp_transitions": [[58, "filter-ramp-transitions"]], "getprofiles": [[59, "getprofiles"]], "idx_profile": [[60, "idx-profile"]], "loadgenericdata": [[61, "loadgenericdata"]], "loadmd": [[62, "loadmd"]], "loadstoragedata": [[63, "loadstoragedata"]], "loadxgendata": [[64, "loadxgendata"]], "md_init": [[65, "md-init"]], "most": [[66, "most"]], "most_ex1_ed": [[67, "most-ex1-ed"]], "most_ex2_dcopf": [[68, "most-ex2-dcopf"]], "most_ex3_dcopf_w_uc": [[69, "most-ex3-dcopf-w-uc"]], "most_ex4_dcopf_ss": [[70, "most-ex4-dcopf-ss"]], "most_ex5_mpopf": [[71, "most-ex5-mpopf"]], "most_ex6_uc": [[72, "most-ex6-uc"]], "most_ex7_suc": [[73, "most-ex7-suc"]], "most_summary": [[74, "most-summary"]], "mostver": [[75, "mostver"]], "mpoption_info_most": [[76, "mpoption-info-most"]], "plot_gen": [[77, "plot-gen"]], "plot_storage": [[78, "plot-storage"]], "plot_uc": [[79, "plot-uc"]], "plot_uc_data": [[80, "plot-uc-data"]], "t_case30_most": [[81, "t-case30-most"]], "t_case3_most": [[82, "t-case3-most"]], "t_case_tlmp": [[83, "t-case-tlmp"]], "t_case_tlmp_storage": [[84, "t-case-tlmp-storage"]], "t_most_30b_1_1_0": [[85, "t-most-30b-1-1-0"]], "t_most_30b_1_1_0_uc": [[86, "t-most-30b-1-1-0-uc"]], "t_most_30b_1_1_17": [[87, "t-most-30b-1-1-17"]], "t_most_30b_3_1_0": [[88, "t-most-30b-3-1-0"]], "t_most_30b_3_1_17": [[89, "t-most-30b-3-1-17"]], "t_most_3b_1_1_0": [[90, "t-most-3b-1-1-0"]], "t_most_3b_1_1_2": [[91, "t-most-3b-1-1-2"]], "t_most_3b_3_1_0": [[92, "t-most-3b-3-1-0"]], "t_most_3b_3_1_2": [[93, "t-most-3b-3-1-2"]], "t_most_fixed_res": [[94, "t-most-fixed-res"]], "t_most_mpopf": [[95, "t-most-mpopf"]], "t_most_sp": [[96, "t-most-sp"]], "t_most_spuc": [[97, "t-most-spuc"]], "t_most_suc": [[98, "t-most-suc"]], "t_most_tlmp": [[99, "t-most-tlmp"]], "t_most_uc": [[100, "t-most-uc"]], "t_most_w_ds": [[101, "t-most-w-ds"]], "test_most": [[102, "test-most"]], "uniformwindprofile": [[103, "uniformwindprofile"]], "mp.set_manager": [[106, "mp-set-manager"]], "mp.set_manager_opt_model": [[107, "mp-set-manager-opt-model"]], "mp.sm_lin_constraint": [[108, "mp-sm-lin-constraint"]], "mp.sm_nln_constraint": [[109, "mp-sm-nln-constraint"]], "mp.sm_nln_cost": [[110, "mp-sm-nln-cost"]], "mp.sm_quad_constraint": [[111, "mp-sm-quad-constraint"]], "mp.sm_quad_cost": [[112, "mp-sm-quad-cost"]], "mp.sm_variable": [[113, "mp-sm-variable"]], "mp_idx_manager": [[114, "mp-idx-manager"]], "opt_model": [[115, "opt-model"]], "artelys_knitro_options": [[116, "artelys-knitro-options"]], "convert_constraint_multipliers": [[117, "convert-constraint-multipliers"]], "convert_lin_constraint": [[118, "convert-lin-constraint"]], "convert_lin_constraint_multipliers": [[119, "convert-lin-constraint-multipliers"]], "convert_quad_constraint": [[120, "convert-quad-constraint"]], "cplex_options": [[121, "cplex-options"]], "glpk_options": [[122, "glpk-options"]], "gurobi_options": [[123, "gurobi-options"]], "gurobiver": [[124, "gurobiver"]], "have_feature_bpmpd": [[125, "have-feature-bpmpd"]], "have_feature_catchme": [[126, "have-feature-catchme"]], "have_feature_clp": [[127, "have-feature-clp"]], "have_feature_cplex": [[128, "have-feature-cplex"]], "have_feature_evalc": [[129, "have-feature-evalc"]], "have_feature_fmincon": [[130, "have-feature-fmincon"]], "have_feature_fmincon_ipm": [[131, "have-feature-fmincon-ipm"]], "have_feature_fsolve": [[132, "have-feature-fsolve"]], "have_feature_glpk": [[133, "have-feature-glpk"]], "have_feature_gurobi": [[134, "have-feature-gurobi"]], "have_feature_intlinprog": [[135, "have-feature-intlinprog"]], "have_feature_ipopt": [[136, "have-feature-ipopt"]], "have_feature_ipopt_auxdata": [[137, "have-feature-ipopt-auxdata"]], "have_feature_isequaln": [[138, "have-feature-isequaln"]], "have_feature_knitro": [[139, "have-feature-knitro"]], "have_feature_knitromatlab": [[140, "have-feature-knitromatlab"]], "have_feature_ktrlink": [[141, "have-feature-ktrlink"]], "have_feature_linprog": [[142, "have-feature-linprog"]], "have_feature_linprog_ds": [[143, "have-feature-linprog-ds"]], "have_feature_mosek": [[144, "have-feature-mosek"]], "have_feature_opti_clp": [[145, "have-feature-opti-clp"]], "have_feature_optim": [[146, "have-feature-optim"]], "have_feature_optimoptions": [[147, "have-feature-optimoptions"]], "have_feature_osqp": [[148, "have-feature-osqp"]], "have_feature_quadprog": [[149, "have-feature-quadprog"]], "have_feature_quadprog_ls": [[150, "have-feature-quadprog-ls"]], "have_feature_sdpt3": [[151, "have-feature-sdpt3"]], "have_feature_sedumi": [[152, "have-feature-sedumi"]], "have_feature_yalmip": [[153, "have-feature-yalmip"]], "ipopt_options": [[154, "ipopt-options"]], "knitrover": [[155, "knitrover"]], "miqps_cplex": [[156, "miqps-cplex"]], "miqps_glpk": [[157, "miqps-glpk"]], "miqps_gurobi": [[158, "miqps-gurobi"]], "miqps_master": [[159, "miqps-master"]], "miqps_mosek": [[160, "miqps-mosek"]], "miqps_ot": [[161, "miqps-ot"]], "mosek_options": [[162, "mosek-options"]], "mosek_symbcon": [[163, "mosek-symbcon"]], "mpomver": [[164, "mpomver"]], "mpopt2nleqopt": [[165, "mpopt2nleqopt"]], "mpopt2nlpopt": [[166, "mpopt2nlpopt"]], "mpopt2pneopt": [[167, "mpopt2pneopt"]], "mpopt2qcqpopt": [[168, "mpopt2qcqpopt"]], "mpopt2qpopt": [[169, "mpopt2qpopt"]], "nested_struct_copy": [[170, "nested-struct-copy"]], "nleqs_core": [[171, "nleqs-core"]], "nleqs_fd_newton": [[172, "nleqs-fd-newton"]], "nleqs_fsolve": [[173, "nleqs-fsolve"]], "nleqs_gauss_seidel": [[174, "nleqs-gauss-seidel"]], "nleqs_master": [[175, "nleqs-master"]], "nleqs_master_ex1": [[176, "nleqs-master-ex1"]], "nleqs_master_ex2": [[177, "nleqs-master-ex2"]], "nleqs_newton": [[178, "nleqs-newton"]], "nlp_consfcn": [[179, "nlp-consfcn"]], "nlp_costfcn": [[180, "nlp-costfcn"]], "nlp_hessfcn": [[181, "nlp-hessfcn"]], "nlps_fmincon": [[182, "nlps-fmincon"]], "nlps_ipopt": [[183, "nlps-ipopt"]], "nlps_knitro": [[184, "nlps-knitro"]], "nlps_master": [[185, "nlps-master"]], "nlps_master_ex1": [[186, "nlps-master-ex1"]], "nlps_master_ex2": [[187, "nlps-master-ex2"]], "osqp_options": [[188, "osqp-options"]], "osqpver": [[189, "osqpver"]], "pne_callback_default": [[190, "pne-callback-default"]], "pne_callback_nose": [[191, "pne-callback-nose"]], "pne_callback_target_lam": [[192, "pne-callback-target-lam"]], "pne_detect_events": [[193, "pne-detect-events"]], "pne_detected_event": [[194, "pne-detected-event"]], "pne_event_nose": [[195, "pne-event-nose"]], "pne_event_target_lam": [[196, "pne-event-target-lam"]], "pne_ex1": [[197, "pne-ex1"]], "pne_pfcn_arc_len": [[198, "pne-pfcn-arc-len"]], "pne_pfcn_natural": [[199, "pne-pfcn-natural"]], "pne_pfcn_pseudo_arc_len": [[200, "pne-pfcn-pseudo-arc-len"]], "pne_register_callbacks": [[201, "pne-register-callbacks"]], "pne_register_events": [[202, "pne-register-events"]], "pnes_master": [[203, "pnes-master"]], "qcqp_nlp_consfcn": [[204, "qcqp-nlp-consfcn"]], "qcqp_nlp_costfcn": [[205, "qcqp-nlp-costfcn"]], "qcqp_nlp_hessfcn": [[206, "qcqp-nlp-hessfcn"]], "qcqps_gurobi": [[207, "qcqps-gurobi"]], "qcqps_knitro": [[208, "qcqps-knitro"]], "qcqps_master": [[209, "qcqps-master"]], "qp_ex1": [[210, "qp-ex1"]], "qps_bpmpd": [[211, "qps-bpmpd"]], "qps_clp": [[212, "qps-clp"]], "qps_cplex": [[213, "qps-cplex"]], "qps_glpk": [[214, "qps-glpk"]], "qps_gurobi": [[215, "qps-gurobi"]], "qps_ipopt": [[216, "qps-ipopt"]], "qps_knitro": [[217, "qps-knitro"]], "qps_master": [[218, "qps-master"]], "qps_mosek": [[219, "qps-mosek"]], "qps_osqp": [[220, "qps-osqp"]], "qps_ot": [[221, "qps-ot"]], "t_miqps_master": [[222, "t-miqps-master"]], "t_nested_struct_copy": [[223, "t-nested-struct-copy"]], "t_nleqs_master": [[224, "t-nleqs-master"]], "t_nlps_master": [[225, "t-nlps-master"]], "t_om_solve_leqs": [[226, "t-om-solve-leqs"]], "t_om_solve_miqps": [[227, "t-om-solve-miqps"]], "t_om_solve_nleqs": [[228, "t-om-solve-nleqs"]], "t_om_solve_nlps": [[229, "t-om-solve-nlps"]], "t_om_solve_pne": [[230, "t-om-solve-pne"]], "t_om_solve_qcqps": [[231, "t-om-solve-qcqps"]], "t_om_solve_qps": [[232, "t-om-solve-qps"]], "t_opt_model": [[233, "t-opt-model"]], "t_pnes_master": [[234, "t-pnes-master"]], "t_qcqps_master": [[235, "t-qcqps-master"]], "t_qps_master": [[236, "t-qps-master"]], "test_mp_opt_model": [[237, "test-mp-opt-model"]], "have_feature": [[240, "have-feature"]], "have_feature_matlab": [[241, "have-feature-matlab"]], "have_feature_octave": [[242, "have-feature-octave"]], "mptestver": [[243, "mptestver"]], "t_begin": [[244, "t-begin"]], "t_end": [[245, "t-end"]], "t_file_match": [[246, "t-file-match"]], "t_have_feature": [[247, "t-have-feature"]], "t_is": [[248, "t-is"]], "t_ok": [[249, "t-ok"]], "t_run_tests": [[250, "t-run-tests"]], "t_skip": [[251, "t-skip"]], "t_str_match": [[252, "t-str-match"]], "t_test_fcns": [[253, "t-test-fcns"]], "test_mptest": [[254, "test-mptest"]], "mp.NODE_TYPE": [[258, "mp-node-type"]], "mp.cost_table": [[259, "mp-cost-table"]], "mp.cost_table_utils": [[260, "mp-cost-table-utils"]], "mp.data_model": [[261, "mp-data-model"]], "mp.data_model_cpf": [[262, "mp-data-model-cpf"]], "mp.data_model_opf": [[263, "mp-data-model-opf"]], "mp.dm_converter": [[264, "mp-dm-converter"]], "mp.dm_converter_mpc2": [[265, "mp-dm-converter-mpc2"]], "mp.dm_converter_mpc2_legacy": [[266, "mp-dm-converter-mpc2-legacy"]], "mp.dm_element": [[267, "mp-dm-element"]], "mp.dmc_element": [[268, "mp-dmc-element"]], "mp.dmce_branch_mpc2": [[269, "mp-dmce-branch-mpc2"]], "mp.dmce_bus3p_mpc2": [[270, "mp-dmce-bus3p-mpc2"]], "mp.dmce_bus_mpc2": [[271, "mp-dmce-bus-mpc2"]], "mp.dmce_buslink_mpc2": [[272, "mp-dmce-buslink-mpc2"]], "mp.dmce_gen3p_mpc2": [[273, "mp-dmce-gen3p-mpc2"]], "mp.dmce_gen_mpc2": [[274, "mp-dmce-gen-mpc2"]], "mp.dmce_legacy_dcline_mpc2": [[275, "mp-dmce-legacy-dcline-mpc2"]], "mp.dmce_line3p_mpc2": [[276, "mp-dmce-line3p-mpc2"]], "mp.dmce_load3p_mpc2": [[277, "mp-dmce-load3p-mpc2"]], "mp.dmce_load_mpc2": [[278, "mp-dmce-load-mpc2"]], "mp.dmce_reserve_gen_mpc2": [[279, "mp-dmce-reserve-gen-mpc2"]], "mp.dmce_reserve_zone_mpc2": [[280, "mp-dmce-reserve-zone-mpc2"]], "mp.dmce_shunt_mpc2": [[281, "mp-dmce-shunt-mpc2"]], "mp.dmce_xfmr3p_mpc2": [[282, "mp-dmce-xfmr3p-mpc2"]], "mp.dme_branch": [[283, "mp-dme-branch"]], "mp.dme_branch_opf": [[284, "mp-dme-branch-opf"]], "mp.dme_bus": [[285, "mp-dme-bus"]], "mp.dme_bus3p": [[286, "mp-dme-bus3p"]], "mp.dme_bus3p_opf": [[287, "mp-dme-bus3p-opf"]], "mp.dme_bus_opf": [[288, "mp-dme-bus-opf"]], "mp.dme_buslink": [[289, "mp-dme-buslink"]], "mp.dme_buslink_opf": [[290, "mp-dme-buslink-opf"]], "mp.dme_gen": [[291, "mp-dme-gen"]], "mp.dme_gen3p": [[292, "mp-dme-gen3p"]], "mp.dme_gen3p_opf": [[293, "mp-dme-gen3p-opf"]], "mp.dme_gen_opf": [[294, "mp-dme-gen-opf"]], "mp.dme_legacy_dcline": [[295, "mp-dme-legacy-dcline"]], "mp.dme_legacy_dcline_opf": [[296, "mp-dme-legacy-dcline-opf"]], "mp.dme_line3p": [[297, "mp-dme-line3p"]], "mp.dme_line3p_opf": [[298, "mp-dme-line3p-opf"]], "mp.dme_load": [[299, "mp-dme-load"]], "mp.dme_load3p": [[300, "mp-dme-load3p"]], "mp.dme_load3p_opf": [[301, "mp-dme-load3p-opf"]], "mp.dme_load_cpf": [[302, "mp-dme-load-cpf"]], "mp.dme_load_opf": [[303, "mp-dme-load-opf"]], "mp.dme_reserve_gen": [[304, "mp-dme-reserve-gen"]], "mp.dme_reserve_zone": [[305, "mp-dme-reserve-zone"]], "mp.dme_shared_opf": [[306, "mp-dme-shared-opf"]], "mp.dme_shunt": [[307, "mp-dme-shunt"]], "mp.dme_shunt_cpf": [[308, "mp-dme-shunt-cpf"]], "mp.dme_shunt_opf": [[309, "mp-dme-shunt-opf"]], "mp.dme_xfmr3p": [[310, "mp-dme-xfmr3p"]], "mp.dme_xfmr3p_opf": [[311, "mp-dme-xfmr3p-opf"]], "mp.element_container": [[312, "mp-element-container"]], "mp.extension": [[313, "mp-extension"]], "mp.form": [[314, "mp-form"]], "mp.form_ac": [[315, "mp-form-ac"]], "mp.form_acc": [[316, "mp-form-acc"]], "mp.form_acp": [[317, "mp-form-acp"]], "mp.form_dc": [[318, "mp-form-dc"]], "mp.mapped_array": [[319, "mp-mapped-array"]], "mp.math_model": [[320, "mp-math-model"]], "mp.math_model_cpf_acc": [[321, "mp-math-model-cpf-acc"]], "mp.math_model_cpf_acci": [[322, "mp-math-model-cpf-acci"]], "mp.math_model_cpf_accs": [[323, "mp-math-model-cpf-accs"]], "mp.math_model_cpf_acp": [[324, "mp-math-model-cpf-acp"]], "mp.math_model_cpf_acpi": [[325, "mp-math-model-cpf-acpi"]], "mp.math_model_cpf_acps": [[326, "mp-math-model-cpf-acps"]], "mp.math_model_opf": [[327, "mp-math-model-opf"]], "mp.math_model_opf_ac": [[328, "mp-math-model-opf-ac"]], "mp.math_model_opf_acc": [[329, "mp-math-model-opf-acc"]], "mp.math_model_opf_acci": [[330, "mp-math-model-opf-acci"]], "mp.math_model_opf_acci_legacy": [[331, "mp-math-model-opf-acci-legacy"]], "mp.math_model_opf_accs": [[332, "mp-math-model-opf-accs"]], "mp.math_model_opf_accs_legacy": [[333, "mp-math-model-opf-accs-legacy"]], "mp.math_model_opf_acp": [[334, "mp-math-model-opf-acp"]], "mp.math_model_opf_acpi": [[335, "mp-math-model-opf-acpi"]], "mp.math_model_opf_acpi_legacy": [[336, "mp-math-model-opf-acpi-legacy"]], "mp.math_model_opf_acps": [[337, "mp-math-model-opf-acps"]], "mp.math_model_opf_acps_legacy": [[338, "mp-math-model-opf-acps-legacy"]], "mp.math_model_opf_dc": [[339, "mp-math-model-opf-dc"]], "mp.math_model_opf_dc_legacy": [[340, "mp-math-model-opf-dc-legacy"]], "mp.math_model_pf": [[341, "mp-math-model-pf"]], "mp.math_model_pf_ac": [[342, "mp-math-model-pf-ac"]], "mp.math_model_pf_acci": [[343, "mp-math-model-pf-acci"]], "mp.math_model_pf_accs": [[344, "mp-math-model-pf-accs"]], "mp.math_model_pf_acpi": [[345, "mp-math-model-pf-acpi"]], "mp.math_model_pf_acps": [[346, "mp-math-model-pf-acps"]], "mp.math_model_pf_dc": [[347, "mp-math-model-pf-dc"]], "mp.mm_element": [[348, "mp-mm-element"]], "mp.mm_shared_opf_legacy": [[349, "mp-mm-shared-opf-legacy"]], "mp.mm_shared_pfcpf": [[350, "mp-mm-shared-pfcpf"]], "mp.mm_shared_pfcpf_ac": [[351, "mp-mm-shared-pfcpf-ac"]], "mp.mm_shared_pfcpf_ac_i": [[352, "mp-mm-shared-pfcpf-ac-i"]], "mp.mm_shared_pfcpf_acc": [[353, "mp-mm-shared-pfcpf-acc"]], "mp.mm_shared_pfcpf_acci": [[354, "mp-mm-shared-pfcpf-acci"]], "mp.mm_shared_pfcpf_accs": [[355, "mp-mm-shared-pfcpf-accs"]], "mp.mm_shared_pfcpf_acp": [[356, "mp-mm-shared-pfcpf-acp"]], "mp.mm_shared_pfcpf_acpi": [[357, "mp-mm-shared-pfcpf-acpi"]], "mp.mm_shared_pfcpf_acps": [[358, "mp-mm-shared-pfcpf-acps"]], "mp.mm_shared_pfcpf_dc": [[359, "mp-mm-shared-pfcpf-dc"]], "mp.mme_branch": [[360, "mp-mme-branch"]], "mp.mme_branch_opf": [[361, "mp-mme-branch-opf"]], "mp.mme_branch_opf_ac": [[362, "mp-mme-branch-opf-ac"]], "mp.mme_branch_opf_acc": [[363, "mp-mme-branch-opf-acc"]], "mp.mme_branch_opf_acp": [[364, "mp-mme-branch-opf-acp"]], "mp.mme_branch_opf_dc": [[365, "mp-mme-branch-opf-dc"]], "mp.mme_branch_pf_ac": [[366, "mp-mme-branch-pf-ac"]], "mp.mme_branch_pf_dc": [[367, "mp-mme-branch-pf-dc"]], "mp.mme_bus": [[368, "mp-mme-bus"]], "mp.mme_bus3p": [[369, "mp-mme-bus3p"]], "mp.mme_bus3p_opf_acc": [[370, "mp-mme-bus3p-opf-acc"]], "mp.mme_bus3p_opf_acp": [[371, "mp-mme-bus3p-opf-acp"]], "mp.mme_bus_opf_ac": [[372, "mp-mme-bus-opf-ac"]], "mp.mme_bus_opf_acc": [[373, "mp-mme-bus-opf-acc"]], "mp.mme_bus_opf_acp": [[374, "mp-mme-bus-opf-acp"]], "mp.mme_bus_opf_dc": [[375, "mp-mme-bus-opf-dc"]], "mp.mme_bus_pf_ac": [[376, "mp-mme-bus-pf-ac"]], "mp.mme_bus_pf_dc": [[377, "mp-mme-bus-pf-dc"]], "mp.mme_buslink": [[378, "mp-mme-buslink"]], "mp.mme_buslink_opf": [[379, "mp-mme-buslink-opf"]], "mp.mme_buslink_opf_acc": [[380, "mp-mme-buslink-opf-acc"]], "mp.mme_buslink_opf_acp": [[381, "mp-mme-buslink-opf-acp"]], "mp.mme_buslink_pf_ac": [[382, "mp-mme-buslink-pf-ac"]], "mp.mme_buslink_pf_acc": [[383, "mp-mme-buslink-pf-acc"]], "mp.mme_buslink_pf_acp": [[384, "mp-mme-buslink-pf-acp"]], "mp.mme_gen": [[385, "mp-mme-gen"]], "mp.mme_gen3p": [[386, "mp-mme-gen3p"]], "mp.mme_gen3p_opf": [[387, "mp-mme-gen3p-opf"]], "mp.mme_gen_opf": [[388, "mp-mme-gen-opf"]], "mp.mme_gen_opf_ac": [[389, "mp-mme-gen-opf-ac"]], "mp.mme_gen_opf_ac_oval": [[390, "mp-mme-gen-opf-ac-oval"]], "mp.mme_gen_opf_dc": [[391, "mp-mme-gen-opf-dc"]], "mp.mme_gen_pf_ac": [[392, "mp-mme-gen-pf-ac"]], "mp.mme_gen_pf_dc": [[393, "mp-mme-gen-pf-dc"]], "mp.mme_legacy_dcline": [[394, "mp-mme-legacy-dcline"]], "mp.mme_legacy_dcline_opf": [[395, "mp-mme-legacy-dcline-opf"]], "mp.mme_legacy_dcline_opf_ac": [[396, "mp-mme-legacy-dcline-opf-ac"]], "mp.mme_legacy_dcline_opf_dc": [[397, "mp-mme-legacy-dcline-opf-dc"]], "mp.mme_legacy_dcline_pf_ac": [[398, "mp-mme-legacy-dcline-pf-ac"]], "mp.mme_legacy_dcline_pf_dc": [[399, "mp-mme-legacy-dcline-pf-dc"]], "mp.mme_line3p": [[400, "mp-mme-line3p"]], "mp.mme_line3p_opf": [[401, "mp-mme-line3p-opf"]], "mp.mme_load": [[402, "mp-mme-load"]], "mp.mme_load_cpf": [[403, "mp-mme-load-cpf"]], "mp.mme_load_pf_ac": [[404, "mp-mme-load-pf-ac"]], "mp.mme_load_pf_dc": [[405, "mp-mme-load-pf-dc"]], "mp.mme_reserve_gen": [[406, "mp-mme-reserve-gen"]], "mp.mme_reserve_zone": [[407, "mp-mme-reserve-zone"]], "mp.mme_shunt": [[408, "mp-mme-shunt"]], "mp.mme_shunt_cpf": [[409, "mp-mme-shunt-cpf"]], "mp.mme_shunt_pf_ac": [[410, "mp-mme-shunt-pf-ac"]], "mp.mme_shunt_pf_dc": [[411, "mp-mme-shunt-pf-dc"]], "mp.mme_xfmr3p": [[412, "mp-mme-xfmr3p"]], "mp.mme_xfmr3p_opf": [[413, "mp-mme-xfmr3p-opf"]], "mp.net_model": [[414, "mp-net-model"]], "mp.net_model_ac": [[415, "mp-net-model-ac"]], "mp.net_model_acc": [[416, "mp-net-model-acc"]], "mp.net_model_acp": [[417, "mp-net-model-acp"]], "mp.net_model_dc": [[418, "mp-net-model-dc"]], "mp.nm_element": [[419, "mp-nm-element"]], "mp.nme_branch": [[420, "mp-nme-branch"]], "mp.nme_branch_ac": [[421, "mp-nme-branch-ac"]], "mp.nme_branch_acc": [[422, "mp-nme-branch-acc"]], "mp.nme_branch_acp": [[423, "mp-nme-branch-acp"]], "mp.nme_branch_dc": [[424, "mp-nme-branch-dc"]], "mp.nme_bus": [[425, "mp-nme-bus"]], "mp.nme_bus3p": [[426, "mp-nme-bus3p"]], "mp.nme_bus3p_acc": [[427, "mp-nme-bus3p-acc"]], "mp.nme_bus3p_acp": [[428, "mp-nme-bus3p-acp"]], "mp.nme_bus_acc": [[429, "mp-nme-bus-acc"]], "mp.nme_bus_acp": [[430, "mp-nme-bus-acp"]], "mp.nme_bus_dc": [[431, "mp-nme-bus-dc"]], "mp.nme_buslink": [[432, "mp-nme-buslink"]], "mp.nme_buslink_acc": [[433, "mp-nme-buslink-acc"]], "mp.nme_buslink_acp": [[434, "mp-nme-buslink-acp"]], "mp.nme_gen": [[435, "mp-nme-gen"]], "mp.nme_gen3p": [[436, "mp-nme-gen3p"]], "mp.nme_gen3p_acc": [[437, "mp-nme-gen3p-acc"]], "mp.nme_gen3p_acp": [[438, "mp-nme-gen3p-acp"]], "mp.nme_gen_ac": [[439, "mp-nme-gen-ac"]], "mp.nme_gen_acc": [[440, "mp-nme-gen-acc"]], "mp.nme_gen_acp": [[441, "mp-nme-gen-acp"]], "mp.nme_gen_dc": [[442, "mp-nme-gen-dc"]], "mp.nme_legacy_dcline": [[443, "mp-nme-legacy-dcline"]], "mp.nme_legacy_dcline_ac": [[444, "mp-nme-legacy-dcline-ac"]], "mp.nme_legacy_dcline_acc": [[445, "mp-nme-legacy-dcline-acc"]], "mp.nme_legacy_dcline_acp": [[446, "mp-nme-legacy-dcline-acp"]], "mp.nme_legacy_dcline_dc": [[447, "mp-nme-legacy-dcline-dc"]], "mp.nme_line3p": [[448, "mp-nme-line3p"]], "mp.nme_load": [[449, "mp-nme-load"]], "mp.nme_load3p": [[450, "mp-nme-load3p"]], "mp.nme_load_ac": [[451, "mp-nme-load-ac"]], "mp.nme_load_acc": [[452, "mp-nme-load-acc"]], "mp.nme_load_acp": [[453, "mp-nme-load-acp"]], "mp.nme_load_dc": [[454, "mp-nme-load-dc"]], "mp.nme_shunt": [[455, "mp-nme-shunt"]], "mp.nme_shunt_ac": [[456, "mp-nme-shunt-ac"]], "mp.nme_shunt_acc": [[457, "mp-nme-shunt-acc"]], "mp.nme_shunt_acp": [[458, "mp-nme-shunt-acp"]], "mp.nme_shunt_dc": [[459, "mp-nme-shunt-dc"]], "mp.nme_xfmr3p": [[460, "mp-nme-xfmr3p"]], "mp.sm_legacy_cost": [[461, "mp-sm-legacy-cost"]], "mp.task": [[462, "mp-task"]], "mp.task_cpf": [[463, "mp-task-cpf"]], "mp.task_cpf_legacy": [[464, "mp-task-cpf-legacy"]], "mp.task_opf": [[465, "mp-task-opf"]], "mp.task_opf_legacy": [[466, "mp-task-opf-legacy"]], "mp.task_pf": [[467, "mp-task-pf"]], "mp.task_pf_legacy": [[468, "mp-task-pf-legacy"]], "mp.task_shared_legacy": [[469, "mp-task-shared-legacy"]], "mp.xt_3p": [[470, "mp-xt-3p"]], "mp.xt_legacy_dcline": [[471, "mp-xt-legacy-dcline"]], "mp.xt_oval_cap_curve": [[472, "mp-xt-oval-cap-curve"]], "mp.xt_reserves": [[473, "mp-xt-reserves"]], "mp_table": [[474, "mp-table"]], "mp_table_subclass": [[475, "mp-table-subclass"]], "Limitations": [[475, null]], "install_matpower": [[477, "install-matpower"]], "mp.load_dm": [[478, "mp-load-dm"]], "mp_table_class": [[479, "mp-table-class"]], "run_cpf": [[480, "run-cpf"]], "run_mp": [[481, "run-mp"]], "run_opf": [[482, "run-opf"]], "run_pf": [[483, "run-pf"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Reference Manual": [[484, "matpower-reference-manual"]], "opf_model": [[486, "opf-model"]], "add_userfcn": [[487, "add-userfcn"]], "apply_changes": [[488, "apply-changes"]], "bustypes": [[489, "bustypes"]], "calc_branch_angle": [[490, "calc-branch-angle"]], "calc_v_i_sum": [[491, "calc-v-i-sum"]], "calc_v_pq_sum": [[492, "calc-v-pq-sum"]], "calc_v_y_sum": [[493, "calc-v-y-sum"]], "case_info": [[494, "case-info"]], "caseformat": [[495, "caseformat"]], "cdf2mpc": [[496, "cdf2mpc"]], "compare_case": [[497, "compare-case"]], "connected_components": [[498, "connected-components"]], "cpf_corrector": [[499, "cpf-corrector"]], "cpf_current_mpc": [[500, "cpf-current-mpc"]], "cpf_default_callback": [[501, "cpf-default-callback"]], "cpf_detect_events": [[502, "cpf-detect-events"]], "cpf_flim_event": [[503, "cpf-flim-event"]], "cpf_flim_event_cb": [[504, "cpf-flim-event-cb"]], "cpf_nose_event": [[505, "cpf-nose-event"]], "cpf_nose_event_cb": [[506, "cpf-nose-event-cb"]], "cpf_p": [[507, "cpf-p"]], "cpf_p_jac": [[508, "cpf-p-jac"]], "cpf_plim_event": [[509, "cpf-plim-event"]], "cpf_plim_event_cb": [[510, "cpf-plim-event-cb"]], "cpf_predictor": [[511, "cpf-predictor"]], "cpf_qlim_event": [[512, "cpf-qlim-event"]], "cpf_qlim_event_cb": [[513, "cpf-qlim-event-cb"]], "cpf_register_callback": [[514, "cpf-register-callback"]], "cpf_register_event": [[515, "cpf-register-event"]], "cpf_tangent": [[516, "cpf-tangent"]], "cpf_target_lam_event": [[517, "cpf-target-lam-event"]], "cpf_target_lam_event_cb": [[518, "cpf-target-lam-event-cb"]], "cpf_vlim_event": [[519, "cpf-vlim-event"]], "cpf_vlim_event_cb": [[520, "cpf-vlim-event-cb"]], "d2Abr_dV2": [[521, "d2abr-dv2"]], "d2Ibr_dV2": [[522, "d2ibr-dv2"]], "d2Imis_dV2": [[523, "d2imis-dv2"]], "d2Imis_dVdSg": [[524, "d2imis-dvdsg"]], "d2Sbr_dV2": [[525, "d2sbr-dv2"]], "d2Sbus_dV2": [[526, "d2sbus-dv2"]], "dAbr_dV": [[527, "dabr-dv"]], "dIbr_dV": [[528, "dibr-dv"]], "dImis_dV": [[529, "dimis-dv"]], "dSbr_dV": [[530, "dsbr-dv"]], "dSbus_dV": [[531, "dsbus-dv"]], "dcopf": [[532, "dcopf"]], "dcopf_solver": [[533, "dcopf-solver"]], "dcpf": [[534, "dcpf"]], "define_constants": [[535, "define-constants"]], "e2i_data": [[536, "e2i-data"]], "e2i_field": [[537, "e2i-field"]], "ext2int": [[538, "ext2int"]], "extract_islands": [[539, "extract-islands"]], "fdpf": [[540, "fdpf"]], "feval_w_path": [[541, "feval-w-path"]], "find_bridges": [[542, "find-bridges"]], "find_islands": [[543, "find-islands"]], "fmincopf": [[544, "fmincopf"]], "gausspf": [[545, "gausspf"]], "genfuels": [[546, "genfuels"]], "gentypes": [[547, "gentypes"]], "get_losses": [[548, "get-losses"]], "get_reorder": [[549, "get-reorder"]], "hasPQcap": [[550, "haspqcap"]], "have_feature_e4st": [[551, "have-feature-e4st"]], "have_feature_minopf": [[552, "have-feature-minopf"]], "have_feature_most": [[553, "have-feature-most"]], "have_feature_mp_core": [[554, "have-feature-mp-core"]], "have_feature_pdipmopf": [[555, "have-feature-pdipmopf"]], "have_feature_regexp_split": [[556, "have-feature-regexp-split"]], "have_feature_scpdipmopf": [[557, "have-feature-scpdipmopf"]], "have_feature_sdp_pf": [[558, "have-feature-sdp-pf"]], "have_feature_smartmarket": [[559, "have-feature-smartmarket"]], "have_feature_syngrid": [[560, "have-feature-syngrid"]], "have_feature_table": [[561, "have-feature-table"]], "have_feature_tralmopf": [[562, "have-feature-tralmopf"]], "i2e_data": [[563, "i2e-data"]], "i2e_field": [[564, "i2e-field"]], "idx_brch": [[565, "idx-brch"]], "idx_bus": [[566, "idx-bus"]], "idx_cost": [[567, "idx-cost"]], "idx_ct": [[568, "idx-ct"]], "idx_dcline": [[569, "idx-dcline"]], "idx_gen": [[570, "idx-gen"]], "int2ext": [[571, "int2ext"]], "isload": [[572, "isload"]], "load2disp": [[573, "load2disp"]], "loadcase": [[574, "loadcase"]], "loadshed": [[575, "loadshed"]], "makeAang": [[576, "makeaang"]], "makeApq": [[577, "makeapq"]], "makeAvl": [[578, "makeavl"]], "makeAy": [[579, "makeay"]], "makeB": [[580, "makeb"]], "makeBdc": [[581, "makebdc"]], "makeJac": [[582, "makejac"]], "makeLODF": [[583, "makelodf"]], "makePTDF": [[584, "makeptdf"]], "makeSbus": [[585, "makesbus"]], "makeSdzip": [[586, "makesdzip"]], "makeYbus": [[587, "makeybus"]], "make_vcorr": [[588, "make-vcorr"]], "make_zpv": [[589, "make-zpv"]], "margcost": [[590, "margcost"]], "miqps_matpower": [[591, "miqps-matpower"]], "modcost": [[592, "modcost"]], "mpoption": [[593, "mpoption"]], "mpoption_info_clp": [[594, "mpoption-info-clp"]], "mpoption_info_cplex": [[595, "mpoption-info-cplex"]], "mpoption_info_fmincon": [[596, "mpoption-info-fmincon"]], "mpoption_info_glpk": [[597, "mpoption-info-glpk"]], "mpoption_info_gurobi": [[598, "mpoption-info-gurobi"]], "mpoption_info_intlinprog": [[599, "mpoption-info-intlinprog"]], "mpoption_info_ipopt": [[600, "mpoption-info-ipopt"]], "mpoption_info_knitro": [[601, "mpoption-info-knitro"]], "mpoption_info_linprog": [[602, "mpoption-info-linprog"]], "mpoption_info_mips": [[603, "mpoption-info-mips"]], "mpoption_info_mosek": [[604, "mpoption-info-mosek"]], "mpoption_info_osqp": [[605, "mpoption-info-osqp"]], "mpoption_info_quadprog": [[606, "mpoption-info-quadprog"]], "mpoption_old": [[607, "mpoption-old"]], "mpver": [[608, "mpver"]], "newtonpf": [[609, "newtonpf"]], "newtonpf_I_cart": [[610, "newtonpf-i-cart"]], "newtonpf_I_hybrid": [[611, "newtonpf-i-hybrid"]], "newtonpf_I_polar": [[612, "newtonpf-i-polar"]], "newtonpf_S_cart": [[613, "newtonpf-s-cart"]], "newtonpf_S_hybrid": [[614, "newtonpf-s-hybrid"]], "nlpopf_solver": [[615, "nlpopf-solver"]], "opf": [[616, "opf"]], "opf_args": [[617, "opf-args"]], "opf_branch_ang_fcn": [[618, "opf-branch-ang-fcn"]], "opf_branch_ang_hess": [[619, "opf-branch-ang-hess"]], "opf_branch_flow_fcn": [[620, "opf-branch-flow-fcn"]], "opf_branch_flow_hess": [[621, "opf-branch-flow-hess"]], "opf_current_balance_fcn": [[622, "opf-current-balance-fcn"]], "opf_current_balance_hess": [[623, "opf-current-balance-hess"]], "opf_execute": [[624, "opf-execute"]], "opf_gen_cost_fcn": [[625, "opf-gen-cost-fcn"]], "opf_legacy_user_cost_fcn": [[626, "opf-legacy-user-cost-fcn"]], "opf_nle_fcn1": [[627, "opf-nle-fcn1"]], "opf_nle_hess1": [[628, "opf-nle-hess1"]], "opf_power_balance_fcn": [[629, "opf-power-balance-fcn"]], "opf_power_balance_hess": [[630, "opf-power-balance-hess"]], "opf_setup": [[631, "opf-setup"]], "opf_veq_fcn": [[632, "opf-veq-fcn"]], "opf_veq_hess": [[633, "opf-veq-hess"]], "opf_vlim_fcn": [[634, "opf-vlim-fcn"]], "opf_vlim_hess": [[635, "opf-vlim-hess"]], "opf_vref_fcn": [[636, "opf-vref-fcn"]], "opf_vref_hess": [[637, "opf-vref-hess"]], "order_radial": [[638, "order-radial"]], "pfsoln": [[639, "pfsoln"]], "poly2pwl": [[640, "poly2pwl"]], "polycost": [[641, "polycost"]], "pqcost": [[642, "pqcost"]], "printpf": [[643, "printpf"]], "psse2mpc": [[644, "psse2mpc"]], "psse_convert": [[645, "psse-convert"]], "psse_convert_hvdc": [[646, "psse-convert-hvdc"]], "psse_convert_xfmr": [[647, "psse-convert-xfmr"]], "psse_parse": [[648, "psse-parse"]], "psse_parse_line": [[649, "psse-parse-line"]], "psse_parse_section": [[650, "psse-parse-section"]], "psse_read": [[651, "psse-read"]], "qps_matpower": [[652, "qps-matpower"]], "radial_pf": [[653, "radial-pf"]], "remove_userfcn": [[654, "remove-userfcn"]], "run_userfcn": [[655, "run-userfcn"]], "runcpf": [[656, "runcpf"]], "rundcopf": [[657, "rundcopf"]], "rundcpf": [[658, "rundcpf"]], "runduopf": [[659, "runduopf"]], "runopf": [[660, "runopf"]], "runopf_w_res": [[661, "runopf-w-res"]], "runpf": [[662, "runpf"]], "runuopf": [[663, "runuopf"]], "save2psse": [[664, "save2psse"]], "savecase": [[665, "savecase"]], "savechgtab": [[666, "savechgtab"]], "scale_load": [[667, "scale-load"]], "set_reorder": [[668, "set-reorder"]], "t_apply_changes": [[669, "t-apply-changes"]], "t_auction_case": [[670, "t-auction-case"]], "t_auction_minopf": [[671, "t-auction-minopf"]], "t_auction_mips": [[672, "t-auction-mips"]], "t_auction_tspopf_pdipm": [[673, "t-auction-tspopf-pdipm"]], "t_case30_userfcns": [[674, "t-case30-userfcns"]], "t_case9_dcline": [[675, "t-case9-dcline"]], "t_case9_opf": [[676, "t-case9-opf"]], "t_case9_opfv2": [[677, "t-case9-opfv2"]], "t_case9_pf": [[678, "t-case9-pf"]], "t_case9_pfv2": [[679, "t-case9-pfv2"]], "t_case9_save2psse": [[680, "t-case9-save2psse"]], "t_case_ext": [[681, "t-case-ext"]], "t_case_int": [[682, "t-case-int"]], "t_chgtab": [[683, "t-chgtab"]], "t_cpf": [[684, "t-cpf"]], "t_cpf_cb1": [[685, "t-cpf-cb1"]], "t_cpf_cb2": [[686, "t-cpf-cb2"]], "t_dcline": [[687, "t-dcline"]], "t_ext2int2ext": [[688, "t-ext2int2ext"]], "t_feval_w_path": [[689, "t-feval-w-path"]], "t_get_losses": [[690, "t-get-losses"]], "t_hasPQcap": [[691, "t-haspqcap"]], "t_hessian": [[692, "t-hessian"]], "t_islands": [[693, "t-islands"]], "t_jacobian": [[694, "t-jacobian"]], "t_load2disp": [[695, "t-load2disp"]], "t_loadcase": [[696, "t-loadcase"]], "t_makeLODF": [[697, "t-makelodf"]], "t_makePTDF": [[698, "t-makeptdf"]], "t_margcost": [[699, "t-margcost"]], "t_miqps_matpower": [[700, "t-miqps-matpower"]], "t_modcost": [[701, "t-modcost"]], "t_mpoption": [[702, "t-mpoption"]], "t_mpoption_ov": [[703, "t-mpoption-ov"]], "t_off2case": [[704, "t-off2case"]], "t_opf_dc_bpmpd": [[705, "t-opf-dc-bpmpd"]], "t_opf_dc_clp": [[706, "t-opf-dc-clp"]], "t_opf_dc_cplex": [[707, "t-opf-dc-cplex"]], "t_opf_dc_default": [[708, "t-opf-dc-default"]], "t_opf_dc_glpk": [[709, "t-opf-dc-glpk"]], "t_opf_dc_gurobi": [[710, "t-opf-dc-gurobi"]], "t_opf_dc_ipopt": [[711, "t-opf-dc-ipopt"]], "t_opf_dc_mips": [[712, "t-opf-dc-mips"]], "t_opf_dc_mips_sc": [[713, "t-opf-dc-mips-sc"]], "t_opf_dc_mosek": [[714, "t-opf-dc-mosek"]], "t_opf_dc_osqp": [[715, "t-opf-dc-osqp"]], "t_opf_dc_ot": [[716, "t-opf-dc-ot"]], "t_opf_default": [[717, "t-opf-default"]], "t_opf_fmincon": [[718, "t-opf-fmincon"]], "t_opf_ipopt": [[719, "t-opf-ipopt"]], "t_opf_knitro": [[720, "t-opf-knitro"]], "t_opf_minopf": [[721, "t-opf-minopf"]], "t_opf_mips": [[722, "t-opf-mips"]], "t_opf_model": [[723, "t-opf-model"]], "t_opf_softlims": [[724, "t-opf-softlims"]], "t_opf_tspopf_pdipm": [[725, "t-opf-tspopf-pdipm"]], "t_opf_tspopf_scpdipm": [[726, "t-opf-tspopf-scpdipm"]], "t_opf_tspopf_tralm": [[727, "t-opf-tspopf-tralm"]], "t_opf_userfcns": [[728, "t-opf-userfcns"]], "t_pf_ac": [[729, "t-pf-ac"]], "t_pf_dc": [[730, "t-pf-dc"]], "t_pf_radial": [[731, "t-pf-radial"]], "t_printpf": [[732, "t-printpf"]], "t_psse": [[733, "t-psse"]], "t_qps_matpower": [[734, "t-qps-matpower"]], "t_runmarket": [[735, "t-runmarket"]], "t_runopf_w_res": [[736, "t-runopf-w-res"]], "t_scale_load": [[737, "t-scale-load"]], "t_total_load": [[738, "t-total-load"]], "t_totcost": [[739, "t-totcost"]], "t_vdep_load": [[740, "t-vdep-load"]], "toggle_dcline": [[741, "toggle-dcline"]], "toggle_iflims": [[742, "toggle-iflims"]], "toggle_reserves": [[743, "toggle-reserves"]], "toggle_softlims": [[744, "toggle-softlims"]], "total_load": [[745, "total-load"]], "totcost": [[746, "totcost"]], "uopf": [[747, "uopf"]], "update_mupq": [[748, "update-mupq"]], "zgausspf": [[749, "zgausspf"]], "mp_foo_table": [[753, "mp-foo-table"]], "t_case3p_a": [[754, "t-case3p-a"]], "t_case3p_b": [[755, "t-case3p-b"]], "t_case3p_c": [[756, "t-case3p-c"]], "t_case3p_d": [[757, "t-case3p-d"]], "t_case3p_e": [[758, "t-case3p-e"]], "t_case3p_f": [[759, "t-case3p-f"]], "t_case3p_g": [[760, "t-case3p-g"]], "t_case3p_h": [[761, "t-case3p-h"]], "t_case9_gizmo": [[762, "t-case9-gizmo"]], "t_dmc_element": [[763, "t-dmc-element"]], "t_mp_data_model": [[764, "t-mp-data-model"]], "t_mp_dm_converter_mpc2": [[765, "t-mp-dm-converter-mpc2"]], "t_mp_mapped_array": [[766, "t-mp-mapped-array"]], "t_mp_table": [[767, "t-mp-table"]], "t_mpxt_legacy_dcline": [[768, "t-mpxt-legacy-dcline"]], "t_mpxt_reserves": [[769, "t-mpxt-reserves"]], "t_nm_element": [[770, "t-nm-element"]], "t_node_test": [[771, "t-node-test"]], "t_port_inj_current_acc": [[772, "t-port-inj-current-acc"]], "t_port_inj_current_acp": [[773, "t-port-inj-current-acp"]], "t_port_inj_power_acc": [[774, "t-port-inj-power-acc"]], "t_port_inj_power_acp": [[775, "t-port-inj-power-acp"]], "t_pretty_print": [[776, "t-pretty-print"]], "t_run_mp": [[777, "t-run-mp"]], "t_run_mp_3p": [[778, "t-run-mp-3p"]], "t_run_opf_default": [[779, "t-run-opf-default"]], "test_matpower": [[780, "test-matpower"]]}, "indexentries": {"generate_autodoc_stubs() (built-in function)": [[14, "generate_autodoc_stubs"]], "generate_matpower_autodoc() (built-in function)": [[15, "generate_matpower_autodoc"]], "generate_source_symlinks() (built-in function)": [[16, "generate_source_symlinks"]], "have_feature_lu_vec() (built-in function)": [[22, "have_feature_lu_vec"]], "have_feature_pardiso() (built-in function)": [[23, "have_feature_pardiso"]], "have_feature_pardiso_legacy() (built-in function)": [[24, "have_feature_pardiso_legacy"]], "have_feature_pardiso_object() (built-in function)": [[25, "have_feature_pardiso_object"]], "mips() (in module mips)": [[26, "mips.mips"]], "mips_example1() (built-in function)": [[27, "mips_example1"]], "mips_example2() (built-in function)": [[28, "mips_example2"]], "mipsver() (built-in function)": [[29, "mipsver"]], "mplinsolve() (built-in function)": [[30, "mplinsolve"]], "qps_mips() (built-in function)": [[31, "qps_mips"]], "t_mips() (built-in function)": [[32, "t_mips"]], "t_mips_pardiso() (built-in function)": [[33, "t_mips_pardiso"]], "t_mplinsolve() (built-in function)": [[34, "t_mplinsolve"]], "t_qps_mips() (built-in function)": [[35, "t_qps_mips"]], "test_mips() (built-in function)": [[36, "test_mips"]], "addgen2mpc() (built-in function)": [[39, "addgen2mpc"]], "addstorage() (built-in function)": [[40, "addstorage"]], "addwind() (built-in function)": [[41, "addwind"]], "apply_profile() (built-in function)": [[42, "apply_profile"]], "c118swf() (built-in function)": [[43, "c118swf"]], "ex_case3a() (built-in function)": [[44, "ex_case3a"]], "ex_case3b() (built-in function)": [[45, "ex_case3b"]], "ex_contab() (built-in function)": [[46, "ex_contab"]], "ex_load_profile() (built-in function)": [[47, "ex_load_profile"]], "ex_storage() (built-in function)": [[48, "ex_storage"]], "ex_transmat() (built-in function)": [[49, "ex_transmat"]], "ex_wind() (built-in function)": [[50, "ex_wind"]], "ex_wind_profile() (built-in function)": [[51, "ex_wind_profile"]], "ex_wind_profile_d() (built-in function)": [[52, "ex_wind_profile_d"]], "ex_wind_uc() (built-in function)": [[53, "ex_wind_uc"]], "ex_xgd() (built-in function)": [[54, "ex_xgd"]], "ex_xgd_ramp() (built-in function)": [[55, "ex_xgd_ramp"]], "ex_xgd_res() (built-in function)": [[56, "ex_xgd_res"]], "ex_xgd_uc() (built-in function)": [[57, "ex_xgd_uc"]], "filter_ramp_transitions() (built-in function)": [[58, "filter_ramp_transitions"]], "getprofiles() (built-in function)": [[59, "getprofiles"]], "idx_profile() (built-in function)": [[60, "idx_profile"]], "loadgenericdata() (built-in function)": [[61, "loadgenericdata"]], "loadmd() (built-in function)": [[62, "loadmd"]], "loadstoragedata() (built-in function)": [[63, "loadstoragedata"]], "loadxgendata() (built-in function)": [[64, "loadxgendata"]], "md_init() (built-in function)": [[65, "md_init"]], "most() (in module most)": [[66, "most.most"]], "most_ex1_ed() (built-in function)": [[67, "most_ex1_ed"]], "most_ex2_dcopf() (built-in function)": [[68, "most_ex2_dcopf"]], "most_ex3_dcopf_w_uc() (built-in function)": [[69, "most_ex3_dcopf_w_uc"]], "most_ex4_dcopf_ss() (built-in function)": [[70, "most_ex4_dcopf_ss"]], "most_ex5_mpopf() (built-in function)": [[71, "most_ex5_mpopf"]], "most_ex6_uc() (built-in function)": [[72, "most_ex6_uc"]], "most_ex7_suc() (built-in function)": [[73, "most_ex7_suc"]], "most_summary() (built-in function)": [[74, "most_summary"]], "mostver() (built-in function)": [[75, "mostver"]], "mpoption_info_most() (built-in function)": [[76, "mpoption_info_most"]], "plot_gen() (built-in function)": [[77, "plot_gen"]], "plot_storage() (built-in function)": [[78, "plot_storage"]], "plot_uc() (built-in function)": [[79, "plot_uc"]], "plot_uc_data() (built-in function)": [[80, "plot_uc_data"]], "t_case30_most() (built-in function)": [[81, "t_case30_most"]], "t_case3_most() (built-in function)": [[82, "t_case3_most"]], "t_case_tlmp() (built-in function)": [[83, "t_case_tlmp"]], "t_case_tlmp_storage() (built-in function)": [[84, "t_case_tlmp_storage"]], "t_most_30b_1_1_0() (built-in function)": [[85, "t_most_30b_1_1_0"]], "t_most_30b_1_1_0_uc() (built-in function)": [[86, "t_most_30b_1_1_0_uc"]], "t_most_30b_1_1_17() (built-in function)": [[87, "t_most_30b_1_1_17"]], "t_most_30b_3_1_0() (built-in function)": [[88, "t_most_30b_3_1_0"]], "t_most_30b_3_1_17() (built-in function)": [[89, "t_most_30b_3_1_17"]], "t_most_3b_1_1_0() (built-in function)": [[90, "t_most_3b_1_1_0"]], "t_most_3b_1_1_2() (built-in function)": [[91, "t_most_3b_1_1_2"]], "t_most_3b_3_1_0() (built-in function)": [[92, "t_most_3b_3_1_0"]], "t_most_3b_3_1_2() (built-in function)": [[93, "t_most_3b_3_1_2"]], "t_most_fixed_res() (built-in function)": [[94, "t_most_fixed_res"]], "t_most_mpopf() (built-in function)": [[95, "t_most_mpopf"]], "t_most_sp() (built-in function)": [[96, "t_most_sp"]], "t_most_spuc() (built-in function)": [[97, "t_most_spuc"]], "t_most_suc() (built-in function)": [[98, "t_most_suc"]], "t_most_tlmp() (built-in function)": [[99, "t_most_tlmp"]], "t_most_uc() (built-in function)": [[100, "t_most_uc"]], "t_most_w_ds() (built-in function)": [[101, "t_most_w_ds"]], "test_most() (built-in function)": [[102, "test_most"]], "uniformwindprofile() (built-in function)": [[103, "uniformwindprofile"]], "n (mp.set_manager attribute)": [[106, "mp.set_manager.N"]], "ns (mp.set_manager attribute)": [[106, "mp.set_manager.NS"]], "add() (mp.set_manager method)": [[106, "mp.set_manager.add"]], "copy() (mp.set_manager method)": [[106, "mp.set_manager.copy"]], "data (mp.set_manager attribute)": [[106, "mp.set_manager.data"]], "describe_idx() (mp.set_manager method)": [[106, "mp.set_manager.describe_idx"]], "display() (mp.set_manager method)": [[106, "mp.set_manager.display"]], "get_n() (mp.set_manager method)": [[106, "mp.set_manager.get_N"]], "idx (mp.set_manager attribute)": [[106, "mp.set_manager.idx"]], "init_indexed_name() (mp.set_manager method)": [[106, "mp.set_manager.init_indexed_name"]], "label (mp.set_manager attribute)": [[106, "mp.set_manager.label"]], "order (mp.set_manager attribute)": [[106, "mp.set_manager.order"]], "set_manager (class in mp)": [[106, "mp.set_manager"]], "set_manager() (mp.set_manager method)": [[106, "mp.set_manager.set_manager"]], "set_type_idx_map() (mp.set_manager method)": [[106, "mp.set_manager.set_type_idx_map"]], "display_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.display_soln"]], "has_parsed_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.has_parsed_soln"]], "params() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.params"]], "parse_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.parse_soln"]], "set_manager_opt_model (class in mp)": [[107, "mp.set_manager_opt_model"]], "set_manager_opt_model() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.set_manager_opt_model"]], "set_params() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.set_params"]], "soln (mp.set_manager_opt_model attribute)": [[107, "mp.set_manager_opt_model.soln"]], "add() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.add"]], "cache (mp.sm_lin_constraint attribute)": [[108, "mp.sm_lin_constraint.cache"]], "display_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.display_soln"]], "eval() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.eval"]], "get_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.get_soln"]], "params() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.params"]], "parse_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.parse_soln"]], "set_params() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.set_params"]], "sm_lin_constraint (class in mp)": [[108, "mp.sm_lin_constraint"]], "sm_lin_constraint() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.sm_lin_constraint"]], "add() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.add"]], "display_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.display_soln"]], "eval() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.eval"]], "eval_hess() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.eval_hess"]], "get_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.get_soln"]], "params() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.params"]], "parse_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.parse_soln"]], "set_params() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.set_params"]], "sm_nln_constraint (class in mp)": [[109, "mp.sm_nln_constraint"]], "sm_nln_constraint() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.sm_nln_constraint"]], "add() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.add"]], "display_soln() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.display_soln"]], "eval() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.eval"]], "get_soln() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.get_soln"]], "params() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.params"]], "set_params() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.set_params"]], "sm_nln_cost (class in mp)": [[110, "mp.sm_nln_cost"]], "sm_nln_cost() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.sm_nln_cost"]], "add() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.add"]], "blkprod2vertcat() (mp.sm_quad_constraint static method)": [[111, "mp.sm_quad_constraint.blkprod2vertcat"]], "cache (mp.sm_quad_constraint attribute)": [[111, "mp.sm_quad_constraint.cache"]], "display_soln() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.display_soln"]], "eval() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.eval"]], "get_soln() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.get_soln"]], "params() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.params"]], "parse_soln() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.parse_soln"]], "set_params() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.set_params"]], "sm_quad_constraint (class in mp)": [[111, "mp.sm_quad_constraint"]], "sm_quad_constraint() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.sm_quad_constraint"]], "add() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.add"]], "cache (mp.sm_quad_cost attribute)": [[112, "mp.sm_quad_cost.cache"]], "display_soln() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.display_soln"]], "eval() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.eval"]], "get_soln() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.get_soln"]], "params() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.params"]], "set_params() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.set_params"]], "sm_quad_cost (class in mp)": [[112, "mp.sm_quad_cost"]], "sm_quad_cost() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.sm_quad_cost"]], "add() (mp.sm_variable method)": [[113, "mp.sm_variable.add"]], "cache (mp.sm_variable attribute)": [[113, "mp.sm_variable.cache"]], "display_soln() (mp.sm_variable method)": [[113, "mp.sm_variable.display_soln"]], "get_soln() (mp.sm_variable method)": [[113, "mp.sm_variable.get_soln"]], "params() (mp.sm_variable method)": [[113, "mp.sm_variable.params"]], "parse_soln() (mp.sm_variable method)": [[113, "mp.sm_variable.parse_soln"]], "set_params() (mp.sm_variable method)": [[113, "mp.sm_variable.set_params"]], "sm_variable (class in mp)": [[113, "mp.sm_variable"]], "sm_variable() (mp.sm_variable method)": [[113, "mp.sm_variable.sm_variable"]], "varsets_cell2struct() (mp.sm_variable static method)": [[113, "mp.sm_variable.varsets_cell2struct"]], "varsets_idx() (mp.sm_variable method)": [[113, "mp.sm_variable.varsets_idx"]], "varsets_len() (mp.sm_variable method)": [[113, "mp.sm_variable.varsets_len"]], "varsets_x() (mp.sm_variable method)": [[113, "mp.sm_variable.varsets_x"]], "add_named_set() (mp_idx_manager method)": [[114, "mp_idx_manager.add_named_set"]], "copy() (mp_idx_manager method)": [[114, "mp_idx_manager.copy"]], "describe_idx() (mp_idx_manager method)": [[114, "mp_idx_manager.describe_idx"]], "display_set() (mp_idx_manager method)": [[114, "mp_idx_manager.display_set"]], "get() (mp_idx_manager method)": [[114, "mp_idx_manager.get"]], "getn() (mp_idx_manager method)": [[114, "mp_idx_manager.getN"]], "get_idx() (mp_idx_manager method)": [[114, "mp_idx_manager.get_idx"]], "get_userdata() (mp_idx_manager method)": [[114, "mp_idx_manager.get_userdata"]], "init_indexed_name() (mp_idx_manager method)": [[114, "mp_idx_manager.init_indexed_name"]], "init_set_types() (mp_idx_manager method)": [[114, "mp_idx_manager.init_set_types"]], "mp_idx_manager (built-in class)": [[114, "mp_idx_manager"]], "mp_idx_manager() (mp_idx_manager method)": [[114, "mp_idx_manager.mp_idx_manager"]], "set_type_idx_map() (mp_idx_manager method)": [[114, "mp_idx_manager.set_type_idx_map"]], "valid_named_set_type() (mp_idx_manager method)": [[114, "mp_idx_manager.valid_named_set_type"]], "add_lin_constraint() (opt_model method)": [[115, "opt_model.add_lin_constraint"]], "add_nln_constraint() (opt_model method)": [[115, "opt_model.add_nln_constraint"]], "add_nln_cost() (opt_model method)": [[115, "opt_model.add_nln_cost"]], "add_quad_cost() (opt_model method)": [[115, "opt_model.add_quad_cost"]], "add_var() (opt_model method)": [[115, "opt_model.add_var"]], "copy() (opt_model method)": [[115, "opt_model.copy"]], "def_set_types() (opt_model method)": [[115, "opt_model.def_set_types"]], "display() (opt_model method)": [[115, "opt_model.display"]], "display_soln() (opt_model method)": [[115, "opt_model.display_soln"]], "eval_lin_constraint() (opt_model method)": [[115, "opt_model.eval_lin_constraint"]], "eval_nln_constraint() (opt_model method)": [[115, "opt_model.eval_nln_constraint"]], "eval_nln_constraint_hess() (opt_model method)": [[115, "opt_model.eval_nln_constraint_hess"]], "eval_nln_cost() (opt_model method)": [[115, "opt_model.eval_nln_cost"]], "eval_quad_cost() (opt_model method)": [[115, "opt_model.eval_quad_cost"]], "get_idx() (opt_model method)": [[115, "opt_model.get_idx"]], "get_soln() (opt_model method)": [[115, "opt_model.get_soln"]], "has_parsed_soln() (opt_model method)": [[115, "opt_model.has_parsed_soln"]], "init_indexed_name() (opt_model method)": [[115, "opt_model.init_indexed_name"]], "is_mixed_integer() (opt_model method)": [[115, "opt_model.is_mixed_integer"]], "is_solved() (opt_model method)": [[115, "opt_model.is_solved"]], "lin (opt_model attribute)": [[115, "opt_model.lin"]], "nlc (opt_model attribute)": [[115, "opt_model.nlc"]], "nle (opt_model attribute)": [[115, "opt_model.nle"]], "nli (opt_model attribute)": [[115, "opt_model.nli"]], "opt_model (built-in class)": [[115, "opt_model"]], "opt_model() (opt_model method)": [[115, "opt_model.opt_model"]], "params_lin_constraint() (opt_model method)": [[115, "opt_model.params_lin_constraint"]], "params_nln_constraint() (opt_model method)": [[115, "opt_model.params_nln_constraint"]], "params_nln_cost() (opt_model method)": [[115, "opt_model.params_nln_cost"]], "params_quad_cost() (opt_model method)": [[115, "opt_model.params_quad_cost"]], "params_var() (opt_model method)": [[115, "opt_model.params_var"]], "parse_soln() (opt_model method)": [[115, "opt_model.parse_soln"]], "prob_type (opt_model attribute)": [[115, "opt_model.prob_type"]], "problem_type() (opt_model method)": [[115, "opt_model.problem_type"]], "qcn (opt_model attribute)": [[115, "opt_model.qcn"]], "qdc (opt_model attribute)": [[115, "opt_model.qdc"]], "set_params() (opt_model method)": [[115, "opt_model.set_params"]], "soln (opt_model attribute)": [[115, "opt_model.soln"]], "solve() (opt_model method)": [[115, "opt_model.solve"]], "var (opt_model attribute)": [[115, "opt_model.var"]], "varsets_cell2struct() (opt_model method)": [[115, "opt_model.varsets_cell2struct"]], "varsets_idx() (opt_model method)": [[115, "opt_model.varsets_idx"]], "varsets_len() (opt_model method)": [[115, "opt_model.varsets_len"]], "varsets_x() (opt_model method)": [[115, "opt_model.varsets_x"]], "artelys_knitro_options() (built-in function)": [[116, "artelys_knitro_options"]], "convert_constraint_multipliers() (built-in function)": [[117, "convert_constraint_multipliers"]], "convert_lin_constraint() (built-in function)": [[118, "convert_lin_constraint"]], "convert_lin_constraint_multipliers() (built-in function)": [[119, "convert_lin_constraint_multipliers"]], "convert_quad_constraint() (built-in function)": [[120, "convert_quad_constraint"]], "cplex_options() (built-in function)": [[121, "cplex_options"]], "glpk_options() (built-in function)": [[122, "glpk_options"]], "gurobi_options() (built-in function)": [[123, "gurobi_options"]], "gurobiver() (built-in function)": [[124, "gurobiver"]], "have_feature_bpmpd() (built-in function)": [[125, "have_feature_bpmpd"]], "have_feature_catchme() (built-in function)": [[126, "have_feature_catchme"]], "have_feature_clp() (built-in function)": [[127, "have_feature_clp"]], "have_feature_cplex() (built-in function)": [[128, "have_feature_cplex"]], "have_feature_evalc() (built-in function)": [[129, "have_feature_evalc"]], "have_feature_fmincon() (built-in function)": [[130, "have_feature_fmincon"]], "have_feature_fmincon_ipm() (built-in function)": [[131, "have_feature_fmincon_ipm"]], "have_feature_fsolve() (built-in function)": [[132, "have_feature_fsolve"]], "have_feature_glpk() (built-in function)": [[133, "have_feature_glpk"]], "have_feature_gurobi() (built-in function)": [[134, "have_feature_gurobi"]], "have_feature_intlinprog() (built-in function)": [[135, "have_feature_intlinprog"]], "have_feature_ipopt() (built-in function)": [[136, "have_feature_ipopt"]], "have_feature_ipopt_auxdata() (built-in function)": [[137, "have_feature_ipopt_auxdata"]], "have_feature_isequaln() (built-in function)": [[138, "have_feature_isequaln"]], "have_feature_knitro() (built-in function)": [[139, "have_feature_knitro"]], "have_feature_knitromatlab() (built-in function)": [[140, "have_feature_knitromatlab"]], "have_feature_ktrlink() (built-in function)": [[141, "have_feature_ktrlink"]], "have_feature_linprog() (built-in function)": [[142, "have_feature_linprog"]], "have_feature_linprog_ds() (built-in function)": [[143, "have_feature_linprog_ds"]], "have_feature_mosek() (built-in function)": [[144, "have_feature_mosek"]], "have_feature_opti_clp() (built-in function)": [[145, "have_feature_opti_clp"]], "have_feature_optim() (built-in function)": [[146, "have_feature_optim"]], "have_feature_optimoptions() (built-in function)": [[147, "have_feature_optimoptions"]], "have_feature_osqp() (built-in function)": [[148, "have_feature_osqp"]], "have_feature_quadprog() (built-in function)": [[149, "have_feature_quadprog"]], "have_feature_quadprog_ls() (built-in function)": [[150, "have_feature_quadprog_ls"]], "have_feature_sdpt3() (built-in function)": [[151, "have_feature_sdpt3"]], "have_feature_sedumi() (built-in function)": [[152, "have_feature_sedumi"]], "have_feature_yalmip() (built-in function)": [[153, "have_feature_yalmip"]], "ipopt_options() (built-in function)": [[154, "ipopt_options"]], "knitrover() (built-in function)": [[155, "knitrover"]], "miqps_cplex() (built-in function)": [[156, "miqps_cplex"]], "miqps_glpk() (built-in function)": [[157, "miqps_glpk"]], "miqps_gurobi() (built-in function)": [[158, "miqps_gurobi"]], "miqps_master() (built-in function)": [[159, "miqps_master"]], "miqps_mosek() (built-in function)": [[160, "miqps_mosek"]], "miqps_ot() (built-in function)": [[161, "miqps_ot"]], "mosek_options() (built-in function)": [[162, "mosek_options"]], "mosek_symbcon() (built-in function)": [[163, "mosek_symbcon"]], "mpomver() (built-in function)": [[164, "mpomver"]], "mpopt2nleqopt() (built-in function)": [[165, "mpopt2nleqopt"]], "mpopt2nlpopt() (built-in function)": [[166, "mpopt2nlpopt"]], "mpopt2pneopt() (built-in function)": [[167, "mpopt2pneopt"]], "mpopt2qcqpopt() (built-in function)": [[168, "mpopt2qcqpopt"]], "mpopt2qpopt() (built-in function)": [[169, "mpopt2qpopt"]], "nested_struct_copy() (built-in function)": [[170, "nested_struct_copy"]], "nleqs_core() (built-in function)": [[171, "nleqs_core"]], "nleqs_fd_newton() (built-in function)": [[172, "nleqs_fd_newton"]], "nleqs_fsolve() (built-in function)": [[173, "nleqs_fsolve"]], "nleqs_gauss_seidel() (built-in function)": [[174, "nleqs_gauss_seidel"]], "nleqs_master() (built-in function)": [[175, "nleqs_master"]], "nleqs_master_ex1() (built-in function)": [[176, "nleqs_master_ex1"]], "nleqs_master_ex2() (built-in function)": [[177, "nleqs_master_ex2"]], "nleqs_newton() (built-in function)": [[178, "nleqs_newton"]], "nlp_consfcn() (built-in function)": [[179, "nlp_consfcn"]], "nlp_costfcn() (built-in function)": [[180, "nlp_costfcn"]], "nlp_hessfcn() (built-in function)": [[181, "nlp_hessfcn"]], "nlps_fmincon() (built-in function)": [[182, "nlps_fmincon"]], "nlps_ipopt() (built-in function)": [[183, "nlps_ipopt"]], "nlps_knitro() (built-in function)": [[184, "nlps_knitro"]], "nlps_master() (built-in function)": [[185, "nlps_master"]], "nlps_master_ex1() (built-in function)": [[186, "nlps_master_ex1"]], "nlps_master_ex2() (built-in function)": [[187, "nlps_master_ex2"]], "osqp_options() (built-in function)": [[188, "osqp_options"]], "osqpver() (built-in function)": [[189, "osqpver"]], "pne_callback_default() (built-in function)": [[190, "pne_callback_default"]], "pne_callback_nose() (built-in function)": [[191, "pne_callback_nose"]], "pne_callback_target_lam() (built-in function)": [[192, "pne_callback_target_lam"]], "pne_detect_events() (built-in function)": [[193, "pne_detect_events"]], "pne_detected_event() (built-in function)": [[194, "pne_detected_event"]], "pne_event_nose() (built-in function)": [[195, "pne_event_nose"]], "pne_event_target_lam() (built-in function)": [[196, "pne_event_target_lam"]], "pne_ex1() (built-in function)": [[197, "pne_ex1"]], "pne_pfcn_arc_len() (built-in function)": [[198, "pne_pfcn_arc_len"]], "pne_pfcn_natural() (built-in function)": [[199, "pne_pfcn_natural"]], "pne_pfcn_pseudo_arc_len() (built-in function)": [[200, "pne_pfcn_pseudo_arc_len"]], "pne_register_callbacks() (built-in function)": [[201, "pne_register_callbacks"]], "pne_register_events() (built-in function)": [[202, "pne_register_events"]], "pnes_master() (built-in function)": [[203, "pnes_master"]], "qcqp_nlp_consfcn() (built-in function)": [[204, "qcqp_nlp_consfcn"]], "qcqp_nlp_costfcn() (built-in function)": [[205, "qcqp_nlp_costfcn"]], "qcqp_nlp_hessfcn() (built-in function)": [[206, "qcqp_nlp_hessfcn"]], "qcqps_gurobi() (built-in function)": [[207, "qcqps_gurobi"]], "qcqps_knitro() (built-in function)": [[208, "qcqps_knitro"]], "qcqps_master() (built-in function)": [[209, "qcqps_master"]], "qp_ex1() (built-in function)": [[210, "qp_ex1"]], "qps_bpmpd() (built-in function)": [[211, "qps_bpmpd"]], "qps_clp() (built-in function)": [[212, "qps_clp"]], "qps_cplex() (built-in function)": [[213, "qps_cplex"]], "qps_glpk() (built-in function)": [[214, "qps_glpk"]], "qps_gurobi() (built-in function)": [[215, "qps_gurobi"]], "qps_ipopt() (built-in function)": [[216, "qps_ipopt"]], "qps_knitro() (built-in function)": [[217, "qps_knitro"]], "qps_master() (built-in function)": [[218, "qps_master"]], "qps_mosek() (built-in function)": [[219, "qps_mosek"]], "qps_osqp() (built-in function)": [[220, "qps_osqp"]], "qps_ot() (built-in function)": [[221, "qps_ot"]], "t_miqps_master() (built-in function)": [[222, "t_miqps_master"]], "t_nested_struct_copy() (built-in function)": [[223, "t_nested_struct_copy"]], "t_nleqs_master() (built-in function)": [[224, "t_nleqs_master"]], "t_nlps_master() (built-in function)": [[225, "t_nlps_master"]], "t_om_solve_leqs() (built-in function)": [[226, "t_om_solve_leqs"]], "t_om_solve_miqps() (built-in function)": [[227, "t_om_solve_miqps"]], "t_om_solve_nleqs() (built-in function)": [[228, "t_om_solve_nleqs"]], "t_om_solve_nlps() (built-in function)": [[229, "t_om_solve_nlps"]], "t_om_solve_pne() (built-in function)": [[230, "t_om_solve_pne"]], "t_om_solve_qcqps() (built-in function)": [[231, "t_om_solve_qcqps"]], "t_om_solve_qps() (built-in function)": [[232, "t_om_solve_qps"]], "t_opt_model() (built-in function)": [[233, "t_opt_model"]], "t_pnes_master() (built-in function)": [[234, "t_pnes_master"]], "t_qcqps_master() (built-in function)": [[235, "t_qcqps_master"]], "t_qps_master() (built-in function)": [[236, "t_qps_master"]], "test_mp_opt_model() (built-in function)": [[237, "test_mp_opt_model"]], "have_feature() (built-in function)": [[240, "have_feature"]], "have_feature_matlab() (built-in function)": [[241, "have_feature_matlab"]], "have_feature_octave() (built-in function)": [[242, "have_feature_octave"]], "mptestver() (built-in function)": [[243, "mptestver"]], "t_begin() (built-in function)": [[244, "t_begin"]], "t_end() (built-in function)": [[245, "t_end"]], "t_file_match() (built-in function)": [[246, "t_file_match"]], "t_have_feature() (built-in function)": [[247, "t_have_feature"]], "t_is() (built-in function)": [[248, "t_is"]], "t_ok() (built-in function)": [[249, "t_ok"]], "t_run_tests() (built-in function)": [[250, "t_run_tests"]], "t_skip() (built-in function)": [[251, "t_skip"]], "t_str_match() (built-in function)": [[252, "t_str_match"]], "t_test_fcns() (built-in function)": [[253, "t_test_fcns"]], "test_mptest() (built-in function)": [[254, "test_mptest"]], "node_type (class in mp)": [[258, "mp.NODE_TYPE"]], "none (mp.node_type attribute)": [[258, "mp.NODE_TYPE.NONE"]], "pq (mp.node_type attribute)": [[258, "mp.NODE_TYPE.PQ"]], "pv (mp.node_type attribute)": [[258, "mp.NODE_TYPE.PV"]], "ref (mp.node_type attribute)": [[258, "mp.NODE_TYPE.REF"]], "is_valid() (mp.node_type static method)": [[258, "mp.NODE_TYPE.is_valid"]], "cost_table (class in mp)": [[259, "mp.cost_table"]], "cost_table() (mp.cost_table method)": [[259, "mp.cost_table.cost_table"]], "diff_poly_fcn() (mp.cost_table static method)": [[259, "mp.cost_table.diff_poly_fcn"]], "eval_poly_fcn() (mp.cost_table static method)": [[259, "mp.cost_table.eval_poly_fcn"]], "max_pwl_cost() (mp.cost_table method)": [[259, "mp.cost_table.max_pwl_cost"]], "poly_cost_fcn() (mp.cost_table static method)": [[259, "mp.cost_table.poly_cost_fcn"]], "poly_params() (mp.cost_table method)": [[259, "mp.cost_table.poly_params"]], "pwl_params() (mp.cost_table method)": [[259, "mp.cost_table.pwl_params"]], "cost_table_utils (class in mp)": [[260, "mp.cost_table_utils"]], "max_pwl_cost() (mp.cost_table_utils static method)": [[260, "mp.cost_table_utils.max_pwl_cost"]], "poly_params() (mp.cost_table_utils static method)": [[260, "mp.cost_table_utils.poly_params"]], "pwl_params() (mp.cost_table_utils static method)": [[260, "mp.cost_table_utils.pwl_params"]], "base_kva (mp.data_model attribute)": [[261, "mp.data_model.base_kva"]], "base_mva (mp.data_model attribute)": [[261, "mp.data_model.base_mva"]], "build() (mp.data_model method)": [[261, "mp.data_model.build"]], "build_params() (mp.data_model method)": [[261, "mp.data_model.build_params"]], "copy() (mp.data_model method)": [[261, "mp.data_model.copy"]], "count() (mp.data_model method)": [[261, "mp.data_model.count"]], "data_model (class in mp)": [[261, "mp.data_model"]], "data_model() (mp.data_model method)": [[261, "mp.data_model.data_model"]], "display() (mp.data_model method)": [[261, "mp.data_model.display"]], "initialize() (mp.data_model method)": [[261, "mp.data_model.initialize"]], "online() (mp.data_model method)": [[261, "mp.data_model.online"]], "pp_data() (mp.data_model method)": [[261, "mp.data_model.pp_data"]], "pp_flags() (mp.data_model method)": [[261, "mp.data_model.pp_flags"]], "pp_get_headers() (mp.data_model method)": [[261, "mp.data_model.pp_get_headers"]], "pp_get_headers_cnt() (mp.data_model method)": [[261, "mp.data_model.pp_get_headers_cnt"]], "pp_get_headers_ext() (mp.data_model method)": [[261, "mp.data_model.pp_get_headers_ext"]], "pp_get_headers_other() (mp.data_model method)": [[261, "mp.data_model.pp_get_headers_other"]], "pp_have_section() (mp.data_model method)": [[261, "mp.data_model.pp_have_section"]], "pp_section() (mp.data_model method)": [[261, "mp.data_model.pp_section"]], "pp_section_label() (mp.data_model method)": [[261, "mp.data_model.pp_section_label"]], "pp_section_list() (mp.data_model method)": [[261, "mp.data_model.pp_section_list"]], "pretty_print() (mp.data_model method)": [[261, "mp.data_model.pretty_print"]], "rebuild() (mp.data_model method)": [[261, "mp.data_model.rebuild"]], "set_bus_v_lims_via_vg() (mp.data_model method)": [[261, "mp.data_model.set_bus_v_lims_via_vg"]], "source (mp.data_model attribute)": [[261, "mp.data_model.source"]], "update_status() (mp.data_model method)": [[261, "mp.data_model.update_status"]], "userdata (mp.data_model attribute)": [[261, "mp.data_model.userdata"]], "data_model_cpf (class in mp)": [[262, "mp.data_model_cpf"]], "data_model_cpf() (mp.data_model_cpf method)": [[262, "mp.data_model_cpf.data_model_cpf"]], "data_model_opf (class in mp)": [[263, "mp.data_model_opf"]], "data_model_opf() (mp.data_model_opf method)": [[263, "mp.data_model_opf.data_model_opf"]], "pp_flags() (mp.data_model_opf method)": [[263, "mp.data_model_opf.pp_flags"]], "pp_get_headers_other() (mp.data_model_opf method)": [[263, "mp.data_model_opf.pp_get_headers_other"]], "pp_section_list() (mp.data_model_opf method)": [[263, "mp.data_model_opf.pp_section_list"]], "build() (mp.dm_converter method)": [[264, "mp.dm_converter.build"]], "copy() (mp.dm_converter method)": [[264, "mp.dm_converter.copy"]], "display() (mp.dm_converter method)": [[264, "mp.dm_converter.display"]], "dm_converter (class in mp)": [[264, "mp.dm_converter"]], "export() (mp.dm_converter method)": [[264, "mp.dm_converter.export"]], "format_tag() (mp.dm_converter method)": [[264, "mp.dm_converter.format_tag"]], "import() (mp.dm_converter method)": [[264, "mp.dm_converter.import"]], "init_export() (mp.dm_converter method)": [[264, "mp.dm_converter.init_export"]], "save() (mp.dm_converter method)": [[264, "mp.dm_converter.save"]], "dm_converter_mpc2 (class in mp)": [[265, "mp.dm_converter_mpc2"]], "dm_converter_mpc2() (mp.dm_converter_mpc2 method)": [[265, "mp.dm_converter_mpc2.dm_converter_mpc2"]], "format_tag() (mp.dm_converter_mpc2 method)": [[265, "mp.dm_converter_mpc2.format_tag"]], "import() (mp.dm_converter_mpc2 method)": [[265, "mp.dm_converter_mpc2.import"]], "init_export() (mp.dm_converter_mpc2 method)": [[265, "mp.dm_converter_mpc2.init_export"]], "save() (mp.dm_converter_mpc2 method)": [[265, "mp.dm_converter_mpc2.save"]], "dm_converter_mpc2_legacy (class in mp)": [[266, "mp.dm_converter_mpc2_legacy"]], "legacy_user_mod_inputs() (mp.dm_converter_mpc2_legacy method)": [[266, "mp.dm_converter_mpc2_legacy.legacy_user_mod_inputs"]], "legacy_user_nln_constraints() (mp.dm_converter_mpc2_legacy method)": [[266, "mp.dm_converter_mpc2_legacy.legacy_user_nln_constraints"]], "id() (mp.dm_element method)": [[267, "mp.dm_element.ID"]], "id2i (mp.dm_element attribute)": [[267, "mp.dm_element.ID2i"]], "build_params() (mp.dm_element method)": [[267, "mp.dm_element.build_params"]], "copy() (mp.dm_element method)": [[267, "mp.dm_element.copy"]], "count() (mp.dm_element method)": [[267, "mp.dm_element.count"]], "cxn_idx_prop() (mp.dm_element method)": [[267, "mp.dm_element.cxn_idx_prop"]], "cxn_type() (mp.dm_element method)": [[267, "mp.dm_element.cxn_type"]], "cxn_type_prop() (mp.dm_element method)": [[267, "mp.dm_element.cxn_type_prop"]], "display() (mp.dm_element method)": [[267, "mp.dm_element.display"]], "dm_converter_element() (mp.dm_element method)": [[267, "mp.dm_element.dm_converter_element"]], "dm_element (class in mp)": [[267, "mp.dm_element"]], "export_vars() (mp.dm_element method)": [[267, "mp.dm_element.export_vars"]], "export_vars_offline_val() (mp.dm_element method)": [[267, "mp.dm_element.export_vars_offline_val"]], "i2on (mp.dm_element attribute)": [[267, "mp.dm_element.i2on"]], "init_status() (mp.dm_element method)": [[267, "mp.dm_element.init_status"]], "initialize() (mp.dm_element method)": [[267, "mp.dm_element.initialize"]], "label() (mp.dm_element method)": [[267, "mp.dm_element.label"]], "labels() (mp.dm_element method)": [[267, "mp.dm_element.labels"]], "main_table_var_names() (mp.dm_element method)": [[267, "mp.dm_element.main_table_var_names"]], "n (mp.dm_element attribute)": [[267, "mp.dm_element.n"]], "name() (mp.dm_element method)": [[267, "mp.dm_element.name"]], "nr (mp.dm_element attribute)": [[267, "mp.dm_element.nr"]], "off (mp.dm_element attribute)": [[267, "mp.dm_element.off"]], "on (mp.dm_element attribute)": [[267, "mp.dm_element.on"]], "pp_data() (mp.dm_element method)": [[267, "mp.dm_element.pp_data"]], "pp_data_cnt() (mp.dm_element method)": [[267, "mp.dm_element.pp_data_cnt"]], "pp_data_det() (mp.dm_element method)": [[267, "mp.dm_element.pp_data_det"]], "pp_data_ext() (mp.dm_element method)": [[267, "mp.dm_element.pp_data_ext"]], "pp_data_row_det() (mp.dm_element method)": [[267, "mp.dm_element.pp_data_row_det"]], "pp_data_sum() (mp.dm_element method)": [[267, "mp.dm_element.pp_data_sum"]], "pp_get_footers() (mp.dm_element method)": [[267, "mp.dm_element.pp_get_footers"]], "pp_get_footers_det() (mp.dm_element method)": [[267, "mp.dm_element.pp_get_footers_det"]], "pp_get_headers() (mp.dm_element method)": [[267, "mp.dm_element.pp_get_headers"]], "pp_get_headers_det() (mp.dm_element method)": [[267, "mp.dm_element.pp_get_headers_det"]], "pp_get_title_det() (mp.dm_element method)": [[267, "mp.dm_element.pp_get_title_det"]], "pp_have_section() (mp.dm_element method)": [[267, "mp.dm_element.pp_have_section"]], "pp_have_section_cnt() (mp.dm_element method)": [[267, "mp.dm_element.pp_have_section_cnt"]], "pp_have_section_det() (mp.dm_element method)": [[267, "mp.dm_element.pp_have_section_det"]], "pp_have_section_ext() (mp.dm_element method)": [[267, "mp.dm_element.pp_have_section_ext"]], "pp_have_section_sum() (mp.dm_element method)": [[267, "mp.dm_element.pp_have_section_sum"]], "pp_rows() (mp.dm_element method)": [[267, "mp.dm_element.pp_rows"]], "pretty_print() (mp.dm_element method)": [[267, "mp.dm_element.pretty_print"]], "rebuild() (mp.dm_element method)": [[267, "mp.dm_element.rebuild"]], "tab (mp.dm_element attribute)": [[267, "mp.dm_element.tab"]], "table_exists() (mp.dm_element method)": [[267, "mp.dm_element.table_exists"]], "update_status() (mp.dm_element method)": [[267, "mp.dm_element.update_status"]], "data_exists() (mp.dmc_element method)": [[268, "mp.dmc_element.data_exists"]], "data_field() (mp.dmc_element method)": [[268, "mp.dmc_element.data_field"]], "data_model_element() (mp.dmc_element method)": [[268, "mp.dmc_element.data_model_element"]], "data_subs() (mp.dmc_element method)": [[268, "mp.dmc_element.data_subs"]], "default_export_data_nrows() (mp.dmc_element method)": [[268, "mp.dmc_element.default_export_data_nrows"]], "default_export_data_table() (mp.dmc_element method)": [[268, "mp.dmc_element.default_export_data_table"]], "dmc_element (class in mp)": [[268, "mp.dmc_element"]], "export() (mp.dmc_element method)": [[268, "mp.dmc_element.export"]], "export_col() (mp.dmc_element method)": [[268, "mp.dmc_element.export_col"]], "export_table_values() (mp.dmc_element method)": [[268, "mp.dmc_element.export_table_values"]], "get_export_size() (mp.dmc_element method)": [[268, "mp.dmc_element.get_export_size"]], "get_export_spec() (mp.dmc_element method)": [[268, "mp.dmc_element.get_export_spec"]], "get_import_size() (mp.dmc_element method)": [[268, "mp.dmc_element.get_import_size"]], "get_import_spec() (mp.dmc_element method)": [[268, "mp.dmc_element.get_import_spec"]], "get_input_table_values() (mp.dmc_element method)": [[268, "mp.dmc_element.get_input_table_values"]], "import() (mp.dmc_element method)": [[268, "mp.dmc_element.import"]], "import_col() (mp.dmc_element method)": [[268, "mp.dmc_element.import_col"]], "import_table_values() (mp.dmc_element method)": [[268, "mp.dmc_element.import_table_values"]], "init_export_data() (mp.dmc_element method)": [[268, "mp.dmc_element.init_export_data"]], "name() (mp.dmc_element method)": [[268, "mp.dmc_element.name"]], "table_var_map() (mp.dmc_element method)": [[268, "mp.dmc_element.table_var_map"]], "data_field() (mp.dmce_branch_mpc2 method)": [[269, "mp.dmce_branch_mpc2.data_field"]], "default_export_data_table() (mp.dmce_branch_mpc2 method)": [[269, "mp.dmce_branch_mpc2.default_export_data_table"]], "dmce_branch_mpc2 (class in mp)": [[269, "mp.dmce_branch_mpc2"]], "name() (mp.dmce_branch_mpc2 method)": [[269, "mp.dmce_branch_mpc2.name"]], "table_var_map() (mp.dmce_branch_mpc2 method)": [[269, "mp.dmce_branch_mpc2.table_var_map"]], "bus_status_import() (mp.dmce_bus3p_mpc2 method)": [[270, "mp.dmce_bus3p_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus3p_mpc2 method)": [[270, "mp.dmce_bus3p_mpc2.data_field"]], "dmce_bus3p_mpc2 (class in mp)": [[270, "mp.dmce_bus3p_mpc2"]], "name() (mp.dmce_bus3p_mpc2 method)": [[270, "mp.dmce_bus3p_mpc2.name"]], "table_var_map() (mp.dmce_bus3p_mpc2 method)": [[270, "mp.dmce_bus3p_mpc2.table_var_map"]], "bus_name_export() (mp.dmce_bus_mpc2 method)": [[271, "mp.dmce_bus_mpc2.bus_name_export"]], "bus_name_import() (mp.dmce_bus_mpc2 method)": [[271, "mp.dmce_bus_mpc2.bus_name_import"]], "bus_status_import() (mp.dmce_bus_mpc2 method)": [[271, "mp.dmce_bus_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus_mpc2 method)": [[271, "mp.dmce_bus_mpc2.data_field"]], "default_export_data_table() (mp.dmce_bus_mpc2 method)": [[271, "mp.dmce_bus_mpc2.default_export_data_table"]], "dmce_bus_mpc2 (class in mp)": [[271, "mp.dmce_bus_mpc2"]], "init_export_data() (mp.dmce_bus_mpc2 method)": [[271, "mp.dmce_bus_mpc2.init_export_data"]], "name() (mp.dmce_bus_mpc2 method)": [[271, "mp.dmce_bus_mpc2.name"]], "table_var_map() (mp.dmce_bus_mpc2 method)": [[271, "mp.dmce_bus_mpc2.table_var_map"]], "data_field() (mp.dmce_buslink_mpc2 method)": [[272, "mp.dmce_buslink_mpc2.data_field"]], "dmce_buslink_mpc2 (class in mp)": [[272, "mp.dmce_buslink_mpc2"]], "name() (mp.dmce_buslink_mpc2 method)": [[272, "mp.dmce_buslink_mpc2.name"]], "table_var_map() (mp.dmce_buslink_mpc2 method)": [[272, "mp.dmce_buslink_mpc2.table_var_map"]], "data_field() (mp.dmce_gen3p_mpc2 method)": [[273, "mp.dmce_gen3p_mpc2.data_field"]], "dmce_gen3p_mpc2 (class in mp)": [[273, "mp.dmce_gen3p_mpc2"]], "name() (mp.dmce_gen3p_mpc2 method)": [[273, "mp.dmce_gen3p_mpc2.name"]], "table_var_map() (mp.dmce_gen3p_mpc2 method)": [[273, "mp.dmce_gen3p_mpc2.table_var_map"]], "cost_table2gencost() (mp.dmce_gen_mpc2 static method)": [[274, "mp.dmce_gen_mpc2.cost_table2gencost"]], "data_field() (mp.dmce_gen_mpc2 method)": [[274, "mp.dmce_gen_mpc2.data_field"]], "default_export_data_table() (mp.dmce_gen_mpc2 method)": [[274, "mp.dmce_gen_mpc2.default_export_data_table"]], "dmce_gen_mpc2 (class in mp)": [[274, "mp.dmce_gen_mpc2"]], "gen_cost_export() (mp.dmce_gen_mpc2 method)": [[274, "mp.dmce_gen_mpc2.gen_cost_export"]], "gen_cost_import() (mp.dmce_gen_mpc2 method)": [[274, "mp.dmce_gen_mpc2.gen_cost_import"]], "gencost2cost_table() (mp.dmce_gen_mpc2 static method)": [[274, "mp.dmce_gen_mpc2.gencost2cost_table"]], "name() (mp.dmce_gen_mpc2 method)": [[274, "mp.dmce_gen_mpc2.name"]], "pwl1 (mp.dmce_gen_mpc2 attribute)": [[274, "mp.dmce_gen_mpc2.pwl1"]], "start_cost_export() (mp.dmce_gen_mpc2 method)": [[274, "mp.dmce_gen_mpc2.start_cost_export"]], "start_cost_import() (mp.dmce_gen_mpc2 method)": [[274, "mp.dmce_gen_mpc2.start_cost_import"]], "table_var_map() (mp.dmce_gen_mpc2 method)": [[274, "mp.dmce_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_legacy_dcline_mpc2 method)": [[275, "mp.dmce_legacy_dcline_mpc2.data_field"]], "dcline_cost_export() (mp.dmce_legacy_dcline_mpc2 method)": [[275, "mp.dmce_legacy_dcline_mpc2.dcline_cost_export"]], "dcline_cost_import() (mp.dmce_legacy_dcline_mpc2 method)": [[275, "mp.dmce_legacy_dcline_mpc2.dcline_cost_import"]], "default_export_data_table() (mp.dmce_legacy_dcline_mpc2 method)": [[275, "mp.dmce_legacy_dcline_mpc2.default_export_data_table"]], "dmce_legacy_dcline_mpc2 (class in mp)": [[275, "mp.dmce_legacy_dcline_mpc2"]], "name() (mp.dmce_legacy_dcline_mpc2 method)": [[275, "mp.dmce_legacy_dcline_mpc2.name"]], "table_var_map() (mp.dmce_legacy_dcline_mpc2 method)": [[275, "mp.dmce_legacy_dcline_mpc2.table_var_map"]], "create_line_construction_table() (mp.dmce_line3p_mpc2 method)": [[276, "mp.dmce_line3p_mpc2.create_line_construction_table"]], "data_field() (mp.dmce_line3p_mpc2 method)": [[276, "mp.dmce_line3p_mpc2.data_field"]], "dmce_line3p_mpc2 (class in mp)": [[276, "mp.dmce_line3p_mpc2"]], "import() (mp.dmce_line3p_mpc2 method)": [[276, "mp.dmce_line3p_mpc2.import"]], "name() (mp.dmce_line3p_mpc2 method)": [[276, "mp.dmce_line3p_mpc2.name"]], "table_var_map() (mp.dmce_line3p_mpc2 method)": [[276, "mp.dmce_line3p_mpc2.table_var_map"]], "bus (mp.dmce_load3p_mpc2 attribute)": [[277, "mp.dmce_load3p_mpc2.bus"]], "data_field() (mp.dmce_load3p_mpc2 method)": [[277, "mp.dmce_load3p_mpc2.data_field"]], "dmce_load3p_mpc2 (class in mp)": [[277, "mp.dmce_load3p_mpc2"]], "name() (mp.dmce_load3p_mpc2 method)": [[277, "mp.dmce_load3p_mpc2.name"]], "table_var_map() (mp.dmce_load3p_mpc2 method)": [[277, "mp.dmce_load3p_mpc2.table_var_map"]], "bus (mp.dmce_load_mpc2 attribute)": [[278, "mp.dmce_load_mpc2.bus"]], "data_field() (mp.dmce_load_mpc2 method)": [[278, "mp.dmce_load_mpc2.data_field"]], "dmce_load_mpc2 (class in mp)": [[278, "mp.dmce_load_mpc2"]], "get_export_size() (mp.dmce_load_mpc2 method)": [[278, "mp.dmce_load_mpc2.get_export_size"]], "get_import_size() (mp.dmce_load_mpc2 method)": [[278, "mp.dmce_load_mpc2.get_import_size"]], "name() (mp.dmce_load_mpc2 method)": [[278, "mp.dmce_load_mpc2.name"]], "scale_factor_fcn() (mp.dmce_load_mpc2 method)": [[278, "mp.dmce_load_mpc2.scale_factor_fcn"]], "sys_wide_zip_loads() (mp.dmce_load_mpc2 method)": [[278, "mp.dmce_load_mpc2.sys_wide_zip_loads"]], "table_var_map() (mp.dmce_load_mpc2 method)": [[278, "mp.dmce_load_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.data_subs"]], "dmce_reserve_gen_mpc2 (class in mp)": [[279, "mp.dmce_reserve_gen_mpc2"]], "get_export_size() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.get_export_size"]], "get_import_size() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.get_import_size"]], "import() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.import"]], "import_cost() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.import_cost"]], "import_qty() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.import_qty"]], "import_ramp() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.import_ramp"]], "name() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.name"]], "table_var_map() (mp.dmce_reserve_gen_mpc2 method)": [[279, "mp.dmce_reserve_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_zone_mpc2 method)": [[280, "mp.dmce_reserve_zone_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_zone_mpc2 method)": [[280, "mp.dmce_reserve_zone_mpc2.data_subs"]], "dmce_reserve_zone_mpc2 (class in mp)": [[280, "mp.dmce_reserve_zone_mpc2"]], "import_req() (mp.dmce_reserve_zone_mpc2 method)": [[280, "mp.dmce_reserve_zone_mpc2.import_req"]], "import_zones() (mp.dmce_reserve_zone_mpc2 method)": [[280, "mp.dmce_reserve_zone_mpc2.import_zones"]], "name() (mp.dmce_reserve_zone_mpc2 method)": [[280, "mp.dmce_reserve_zone_mpc2.name"]], "table_var_map() (mp.dmce_reserve_zone_mpc2 method)": [[280, "mp.dmce_reserve_zone_mpc2.table_var_map"]], "bus (mp.dmce_shunt_mpc2 attribute)": [[281, "mp.dmce_shunt_mpc2.bus"]], "data_field() (mp.dmce_shunt_mpc2 method)": [[281, "mp.dmce_shunt_mpc2.data_field"]], "dmce_shunt_mpc2 (class in mp)": [[281, "mp.dmce_shunt_mpc2"]], "get_export_size() (mp.dmce_shunt_mpc2 method)": [[281, "mp.dmce_shunt_mpc2.get_export_size"]], "get_import_size() (mp.dmce_shunt_mpc2 method)": [[281, "mp.dmce_shunt_mpc2.get_import_size"]], "name() (mp.dmce_shunt_mpc2 method)": [[281, "mp.dmce_shunt_mpc2.name"]], "table_var_map() (mp.dmce_shunt_mpc2 method)": [[281, "mp.dmce_shunt_mpc2.table_var_map"]], "data_field() (mp.dmce_xfmr3p_mpc2 method)": [[282, "mp.dmce_xfmr3p_mpc2.data_field"]], "dmce_xfmr3p_mpc2 (class in mp)": [[282, "mp.dmce_xfmr3p_mpc2"]], "name() (mp.dmce_xfmr3p_mpc2 method)": [[282, "mp.dmce_xfmr3p_mpc2.name"]], "table_var_map() (mp.dmce_xfmr3p_mpc2 method)": [[282, "mp.dmce_xfmr3p_mpc2.table_var_map"]], "b_fr (mp.dme_branch attribute)": [[283, "mp.dme_branch.b_fr"]], "b_to (mp.dme_branch attribute)": [[283, "mp.dme_branch.b_to"]], "build_params() (mp.dme_branch method)": [[283, "mp.dme_branch.build_params"]], "cxn_idx_prop() (mp.dme_branch method)": [[283, "mp.dme_branch.cxn_idx_prop"]], "cxn_type() (mp.dme_branch method)": [[283, "mp.dme_branch.cxn_type"]], "dme_branch (class in mp)": [[283, "mp.dme_branch"]], "export_vars() (mp.dme_branch method)": [[283, "mp.dme_branch.export_vars"]], "export_vars_offline_val() (mp.dme_branch method)": [[283, "mp.dme_branch.export_vars_offline_val"]], "fbus (mp.dme_branch attribute)": [[283, "mp.dme_branch.fbus"]], "g_fr (mp.dme_branch attribute)": [[283, "mp.dme_branch.g_fr"]], "g_to (mp.dme_branch attribute)": [[283, "mp.dme_branch.g_to"]], "initialize() (mp.dme_branch method)": [[283, "mp.dme_branch.initialize"]], "label() (mp.dme_branch method)": [[283, "mp.dme_branch.label"]], "labels() (mp.dme_branch method)": [[283, "mp.dme_branch.labels"]], "loss_tol (mp.dme_branch attribute)": [[283, "mp.dme_branch.loss_tol"]], "main_table_var_names() (mp.dme_branch method)": [[283, "mp.dme_branch.main_table_var_names"]], "name() (mp.dme_branch method)": [[283, "mp.dme_branch.name"]], "pp_data_cnt() (mp.dme_branch method)": [[283, "mp.dme_branch.pp_data_cnt"]], "pp_data_row_det() (mp.dme_branch method)": [[283, "mp.dme_branch.pp_data_row_det"]], "pp_data_sum() (mp.dme_branch method)": [[283, "mp.dme_branch.pp_data_sum"]], "pp_get_footers_det() (mp.dme_branch method)": [[283, "mp.dme_branch.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_branch method)": [[283, "mp.dme_branch.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_branch method)": [[283, "mp.dme_branch.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_branch method)": [[283, "mp.dme_branch.pp_have_section_sum"]], "r (mp.dme_branch attribute)": [[283, "mp.dme_branch.r"]], "rate_a (mp.dme_branch attribute)": [[283, "mp.dme_branch.rate_a"]], "ta (mp.dme_branch attribute)": [[283, "mp.dme_branch.ta"]], "tbus (mp.dme_branch attribute)": [[283, "mp.dme_branch.tbus"]], "tm (mp.dme_branch attribute)": [[283, "mp.dme_branch.tm"]], "update_status() (mp.dme_branch method)": [[283, "mp.dme_branch.update_status"]], "x (mp.dme_branch attribute)": [[283, "mp.dme_branch.x"]], "dme_branch_opf (class in mp)": [[284, "mp.dme_branch_opf"]], "export_vars() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.export_vars"]], "export_vars_offline_val() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.pp_get_headers_lim"]], "pp_get_title_lim() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_branch_opf method)": [[284, "mp.dme_branch_opf.pretty_print"]], "build_params() (mp.dme_bus method)": [[285, "mp.dme_bus.build_params"]], "dme_bus (class in mp)": [[285, "mp.dme_bus"]], "export_vars() (mp.dme_bus method)": [[285, "mp.dme_bus.export_vars"]], "export_vars_offline_val() (mp.dme_bus method)": [[285, "mp.dme_bus.export_vars_offline_val"]], "init_status() (mp.dme_bus method)": [[285, "mp.dme_bus.init_status"]], "label() (mp.dme_bus method)": [[285, "mp.dme_bus.label"]], "labels() (mp.dme_bus method)": [[285, "mp.dme_bus.labels"]], "main_table_var_names() (mp.dme_bus method)": [[285, "mp.dme_bus.main_table_var_names"]], "name() (mp.dme_bus method)": [[285, "mp.dme_bus.name"]], "pp_data_cnt() (mp.dme_bus method)": [[285, "mp.dme_bus.pp_data_cnt"]], "pp_data_ext() (mp.dme_bus method)": [[285, "mp.dme_bus.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus method)": [[285, "mp.dme_bus.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus method)": [[285, "mp.dme_bus.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus method)": [[285, "mp.dme_bus.pp_have_section_det"]], "pp_have_section_ext() (mp.dme_bus method)": [[285, "mp.dme_bus.pp_have_section_ext"]], "set_bus_type_pq() (mp.dme_bus method)": [[285, "mp.dme_bus.set_bus_type_pq"]], "set_bus_type_pv() (mp.dme_bus method)": [[285, "mp.dme_bus.set_bus_type_pv"]], "set_bus_type_ref() (mp.dme_bus method)": [[285, "mp.dme_bus.set_bus_type_ref"]], "type (mp.dme_bus attribute)": [[285, "mp.dme_bus.type"]], "update_status() (mp.dme_bus method)": [[285, "mp.dme_bus.update_status"]], "va_start (mp.dme_bus attribute)": [[285, "mp.dme_bus.va_start"]], "vm_control (mp.dme_bus attribute)": [[285, "mp.dme_bus.vm_control"]], "vm_lb (mp.dme_bus attribute)": [[285, "mp.dme_bus.vm_lb"]], "vm_start (mp.dme_bus attribute)": [[285, "mp.dme_bus.vm_start"]], "vm_ub (mp.dme_bus attribute)": [[285, "mp.dme_bus.vm_ub"]], "build_params() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.build_params"]], "dme_bus3p (class in mp)": [[286, "mp.dme_bus3p"]], "init_status() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.init_status"]], "label() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.label"]], "labels() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.labels"]], "main_table_var_names() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.main_table_var_names"]], "name() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.name"]], "pp_data_row_det() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.pp_have_section_det"]], "type (mp.dme_bus3p attribute)": [[286, "mp.dme_bus3p.type"]], "update_status() (mp.dme_bus3p method)": [[286, "mp.dme_bus3p.update_status"]], "va1_start (mp.dme_bus3p attribute)": [[286, "mp.dme_bus3p.va1_start"]], "va2_start (mp.dme_bus3p attribute)": [[286, "mp.dme_bus3p.va2_start"]], "va3_start (mp.dme_bus3p attribute)": [[286, "mp.dme_bus3p.va3_start"]], "vm1_start (mp.dme_bus3p attribute)": [[286, "mp.dme_bus3p.vm1_start"]], "vm2_start (mp.dme_bus3p attribute)": [[286, "mp.dme_bus3p.vm2_start"]], "vm3_start (mp.dme_bus3p attribute)": [[286, "mp.dme_bus3p.vm3_start"]], "vm_control (mp.dme_bus3p attribute)": [[286, "mp.dme_bus3p.vm_control"]], "dme_bus3p_opf (class in mp)": [[287, "mp.dme_bus3p_opf"]], "dme_bus_opf (class in mp)": [[288, "mp.dme_bus_opf"]], "export_vars() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.export_vars"]], "export_vars_offline_val() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.pp_binding_rows_lim"]], "pp_data_ext() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.pp_data_row_lim"]], "pp_get_headers_det() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_bus_opf method)": [[288, "mp.dme_bus_opf.pp_have_section_lim"]], "build_params() (mp.dme_buslink method)": [[289, "mp.dme_buslink.build_params"]], "bus (mp.dme_buslink attribute)": [[289, "mp.dme_buslink.bus"]], "bus3p (mp.dme_buslink attribute)": [[289, "mp.dme_buslink.bus3p"]], "cxn_idx_prop() (mp.dme_buslink method)": [[289, "mp.dme_buslink.cxn_idx_prop"]], "cxn_type() (mp.dme_buslink method)": [[289, "mp.dme_buslink.cxn_type"]], "dme_buslink (class in mp)": [[289, "mp.dme_buslink"]], "initialize() (mp.dme_buslink method)": [[289, "mp.dme_buslink.initialize"]], "label() (mp.dme_buslink method)": [[289, "mp.dme_buslink.label"]], "labels() (mp.dme_buslink method)": [[289, "mp.dme_buslink.labels"]], "main_table_var_names() (mp.dme_buslink method)": [[289, "mp.dme_buslink.main_table_var_names"]], "name() (mp.dme_buslink method)": [[289, "mp.dme_buslink.name"]], "pg1_start (mp.dme_buslink attribute)": [[289, "mp.dme_buslink.pg1_start"]], "pg2_start (mp.dme_buslink attribute)": [[289, "mp.dme_buslink.pg2_start"]], "pg3_start (mp.dme_buslink attribute)": [[289, "mp.dme_buslink.pg3_start"]], "pp_data_row_det() (mp.dme_buslink method)": [[289, "mp.dme_buslink.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_buslink method)": [[289, "mp.dme_buslink.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_buslink method)": [[289, "mp.dme_buslink.pp_have_section_det"]], "qg1_start (mp.dme_buslink attribute)": [[289, "mp.dme_buslink.qg1_start"]], "qg2_start (mp.dme_buslink attribute)": [[289, "mp.dme_buslink.qg2_start"]], "qg3_start (mp.dme_buslink attribute)": [[289, "mp.dme_buslink.qg3_start"]], "update_status() (mp.dme_buslink method)": [[289, "mp.dme_buslink.update_status"]], "dme_buslink_opf (class in mp)": [[290, "mp.dme_buslink_opf"]], "apply_vm_setpoint() (mp.dme_gen method)": [[291, "mp.dme_gen.apply_vm_setpoint"]], "build_params() (mp.dme_gen method)": [[291, "mp.dme_gen.build_params"]], "bus (mp.dme_gen attribute)": [[291, "mp.dme_gen.bus"]], "bus_on (mp.dme_gen attribute)": [[291, "mp.dme_gen.bus_on"]], "cxn_idx_prop() (mp.dme_gen method)": [[291, "mp.dme_gen.cxn_idx_prop"]], "cxn_type() (mp.dme_gen method)": [[291, "mp.dme_gen.cxn_type"]], "dme_gen (class in mp)": [[291, "mp.dme_gen"]], "export_vars() (mp.dme_gen method)": [[291, "mp.dme_gen.export_vars"]], "export_vars_offline_val() (mp.dme_gen method)": [[291, "mp.dme_gen.export_vars_offline_val"]], "have_cost() (mp.dme_gen method)": [[291, "mp.dme_gen.have_cost"]], "initialize() (mp.dme_gen method)": [[291, "mp.dme_gen.initialize"]], "isload() (mp.dme_gen method)": [[291, "mp.dme_gen.isload"]], "label() (mp.dme_gen method)": [[291, "mp.dme_gen.label"]], "labels() (mp.dme_gen method)": [[291, "mp.dme_gen.labels"]], "main_table_var_names() (mp.dme_gen method)": [[291, "mp.dme_gen.main_table_var_names"]], "name() (mp.dme_gen method)": [[291, "mp.dme_gen.name"]], "pg_lb (mp.dme_gen attribute)": [[291, "mp.dme_gen.pg_lb"]], "pg_start (mp.dme_gen attribute)": [[291, "mp.dme_gen.pg_start"]], "pg_ub (mp.dme_gen attribute)": [[291, "mp.dme_gen.pg_ub"]], "pp_data_row_det() (mp.dme_gen method)": [[291, "mp.dme_gen.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen method)": [[291, "mp.dme_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_gen method)": [[291, "mp.dme_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_gen method)": [[291, "mp.dme_gen.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen method)": [[291, "mp.dme_gen.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen method)": [[291, "mp.dme_gen.pp_have_section_sum"]], "qg_lb (mp.dme_gen attribute)": [[291, "mp.dme_gen.qg_lb"]], "qg_start (mp.dme_gen attribute)": [[291, "mp.dme_gen.qg_start"]], "qg_ub (mp.dme_gen attribute)": [[291, "mp.dme_gen.qg_ub"]], "update_status() (mp.dme_gen method)": [[291, "mp.dme_gen.update_status"]], "violated_q_lims() (mp.dme_gen method)": [[291, "mp.dme_gen.violated_q_lims"]], "vm_setpoint (mp.dme_gen attribute)": [[291, "mp.dme_gen.vm_setpoint"]], "apply_vm_setpoint() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.apply_vm_setpoint"]], "build_params() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.build_params"]], "bus (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.bus"]], "bus_on (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.bus_on"]], "cxn_idx_prop() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.cxn_idx_prop"]], "cxn_type() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.cxn_type"]], "dme_gen3p (class in mp)": [[292, "mp.dme_gen3p"]], "initialize() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.initialize"]], "label() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.label"]], "labels() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.labels"]], "main_table_var_names() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.main_table_var_names"]], "name() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.name"]], "pg1_start (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.pg1_start"]], "pg2_start (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.pg2_start"]], "pg3_start (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.pg3_start"]], "pp_data_row_det() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.pp_have_section_sum"]], "qg1_start (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.qg1_start"]], "qg2_start (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.qg2_start"]], "qg3_start (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.qg3_start"]], "update_status() (mp.dme_gen3p method)": [[292, "mp.dme_gen3p.update_status"]], "vm1_setpoint (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.vm1_setpoint"]], "vm2_setpoint (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.vm2_setpoint"]], "vm3_setpoint (mp.dme_gen3p attribute)": [[292, "mp.dme_gen3p.vm3_setpoint"]], "dme_gen3p_opf (class in mp)": [[293, "mp.dme_gen3p_opf"]], "build_cost_params() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.build_cost_params"]], "dme_gen_opf (class in mp)": [[294, "mp.dme_gen_opf"]], "export_vars() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.export_vars"]], "export_vars_offline_val() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.export_vars_offline_val"]], "have_cost() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.have_cost"]], "main_table_var_names() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.main_table_var_names"]], "max_pwl_gencost() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.max_pwl_gencost"]], "pp_binding_rows_lim() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_gen_opf method)": [[294, "mp.dme_gen_opf.pretty_print"]], "apply_vm_setpoints() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.apply_vm_setpoints"]], "build_params() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.build_params"]], "cxn_idx_prop() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.cxn_idx_prop"]], "cxn_type() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.cxn_type"]], "dme_legacy_dcline (class in mp)": [[295, "mp.dme_legacy_dcline"]], "export_vars() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.export_vars_offline_val"]], "fbus (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.fbus"]], "fbus_on (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.fbus_on"]], "have_cost() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.have_cost"]], "initialize() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.initialize"]], "label() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.label"]], "labels() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.labels"]], "loss0 (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.loss0"]], "loss1 (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.loss1"]], "main_table_var_names() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.main_table_var_names"]], "name() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.name"]], "p_fr_lb (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.p_fr_lb"]], "p_fr_start (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.p_fr_start"]], "p_fr_ub (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.p_fr_ub"]], "p_to_start (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.p_to_start"]], "pp_data_row_det() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.pp_data_row_det"]], "pp_data_sum() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.pp_data_sum"]], "pp_get_headers_det() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.pp_have_section_sum"]], "q_fr_lb (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.q_fr_lb"]], "q_fr_start (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.q_fr_start"]], "q_fr_ub (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.q_fr_ub"]], "q_to_lb (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.q_to_lb"]], "q_to_start (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.q_to_start"]], "q_to_ub (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.q_to_ub"]], "tbus (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.tbus"]], "tbus_on (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.tbus_on"]], "update_status() (mp.dme_legacy_dcline method)": [[295, "mp.dme_legacy_dcline.update_status"]], "vm_setpoint_fr (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.vm_setpoint_fr"]], "vm_setpoint_to (mp.dme_legacy_dcline attribute)": [[295, "mp.dme_legacy_dcline.vm_setpoint_to"]], "build_cost_params() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.build_cost_params"]], "dme_legacy_dcline_opf (class in mp)": [[296, "mp.dme_legacy_dcline_opf"]], "export_vars() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.export_vars_offline_val"]], "have_cost() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.have_cost"]], "main_table_var_names() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_legacy_dcline_opf method)": [[296, "mp.dme_legacy_dcline_opf.pretty_print"]], "build_params() (mp.dme_line3p method)": [[297, "mp.dme_line3p.build_params"]], "create_line_construction_table() (mp.dme_line3p method)": [[297, "mp.dme_line3p.create_line_construction_table"]], "cxn_idx_prop() (mp.dme_line3p method)": [[297, "mp.dme_line3p.cxn_idx_prop"]], "cxn_type() (mp.dme_line3p method)": [[297, "mp.dme_line3p.cxn_type"]], "dme_line3p (class in mp)": [[297, "mp.dme_line3p"]], "fbus (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.fbus"]], "freq (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.freq"]], "initialize() (mp.dme_line3p method)": [[297, "mp.dme_line3p.initialize"]], "label() (mp.dme_line3p method)": [[297, "mp.dme_line3p.label"]], "labels() (mp.dme_line3p method)": [[297, "mp.dme_line3p.labels"]], "lc (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.lc"]], "lc_tab (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.lc_tab"]], "lc_table_var_names() (mp.dme_line3p method)": [[297, "mp.dme_line3p.lc_table_var_names"]], "lc_y_idx (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.lc_y_idx"]], "len (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.len"]], "main_table_var_names() (mp.dme_line3p method)": [[297, "mp.dme_line3p.main_table_var_names"]], "name() (mp.dme_line3p method)": [[297, "mp.dme_line3p.name"]], "pp_data_row_det() (mp.dme_line3p method)": [[297, "mp.dme_line3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_line3p method)": [[297, "mp.dme_line3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_line3p method)": [[297, "mp.dme_line3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_line3p method)": [[297, "mp.dme_line3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_line3p method)": [[297, "mp.dme_line3p.pp_have_section_sum"]], "pretty_print() (mp.dme_line3p method)": [[297, "mp.dme_line3p.pretty_print"]], "symmat2vec() (mp.dme_line3p method)": [[297, "mp.dme_line3p.symmat2vec"]], "tbus (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.tbus"]], "update_status() (mp.dme_line3p method)": [[297, "mp.dme_line3p.update_status"]], "vec2symmat() (mp.dme_line3p method)": [[297, "mp.dme_line3p.vec2symmat"]], "yc (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.yc"]], "ys (mp.dme_line3p attribute)": [[297, "mp.dme_line3p.ys"]], "dme_line3p_opf (class in mp)": [[298, "mp.dme_line3p_opf"]], "build_params() (mp.dme_load method)": [[299, "mp.dme_load.build_params"]], "bus (mp.dme_load attribute)": [[299, "mp.dme_load.bus"]], "cxn_idx_prop() (mp.dme_load method)": [[299, "mp.dme_load.cxn_idx_prop"]], "cxn_type() (mp.dme_load method)": [[299, "mp.dme_load.cxn_type"]], "dme_load (class in mp)": [[299, "mp.dme_load"]], "initialize() (mp.dme_load method)": [[299, "mp.dme_load.initialize"]], "label() (mp.dme_load method)": [[299, "mp.dme_load.label"]], "labels() (mp.dme_load method)": [[299, "mp.dme_load.labels"]], "main_table_var_names() (mp.dme_load method)": [[299, "mp.dme_load.main_table_var_names"]], "name() (mp.dme_load method)": [[299, "mp.dme_load.name"]], "pd (mp.dme_load attribute)": [[299, "mp.dme_load.pd"]], "pd_i (mp.dme_load attribute)": [[299, "mp.dme_load.pd_i"]], "pd_z (mp.dme_load attribute)": [[299, "mp.dme_load.pd_z"]], "pp_data_row_det() (mp.dme_load method)": [[299, "mp.dme_load.pp_data_row_det"]], "pp_data_sum() (mp.dme_load method)": [[299, "mp.dme_load.pp_data_sum"]], "pp_get_footers_det() (mp.dme_load method)": [[299, "mp.dme_load.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_load method)": [[299, "mp.dme_load.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load method)": [[299, "mp.dme_load.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load method)": [[299, "mp.dme_load.pp_have_section_sum"]], "qd (mp.dme_load attribute)": [[299, "mp.dme_load.qd"]], "qd_i (mp.dme_load attribute)": [[299, "mp.dme_load.qd_i"]], "qd_z (mp.dme_load attribute)": [[299, "mp.dme_load.qd_z"]], "update_status() (mp.dme_load method)": [[299, "mp.dme_load.update_status"]], "build_params() (mp.dme_load3p method)": [[300, "mp.dme_load3p.build_params"]], "bus (mp.dme_load3p attribute)": [[300, "mp.dme_load3p.bus"]], "cxn_idx_prop() (mp.dme_load3p method)": [[300, "mp.dme_load3p.cxn_idx_prop"]], "cxn_type() (mp.dme_load3p method)": [[300, "mp.dme_load3p.cxn_type"]], "dme_load3p (class in mp)": [[300, "mp.dme_load3p"]], "initialize() (mp.dme_load3p method)": [[300, "mp.dme_load3p.initialize"]], "label() (mp.dme_load3p method)": [[300, "mp.dme_load3p.label"]], "labels() (mp.dme_load3p method)": [[300, "mp.dme_load3p.labels"]], "main_table_var_names() (mp.dme_load3p method)": [[300, "mp.dme_load3p.main_table_var_names"]], "name() (mp.dme_load3p method)": [[300, "mp.dme_load3p.name"]], "pd1 (mp.dme_load3p attribute)": [[300, "mp.dme_load3p.pd1"]], "pd2 (mp.dme_load3p attribute)": [[300, "mp.dme_load3p.pd2"]], "pd3 (mp.dme_load3p attribute)": [[300, "mp.dme_load3p.pd3"]], "pf1 (mp.dme_load3p attribute)": [[300, "mp.dme_load3p.pf1"]], "pf2 (mp.dme_load3p attribute)": [[300, "mp.dme_load3p.pf2"]], "pf3 (mp.dme_load3p attribute)": [[300, "mp.dme_load3p.pf3"]], "pp_data_row_det() (mp.dme_load3p method)": [[300, "mp.dme_load3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_load3p method)": [[300, "mp.dme_load3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_load3p method)": [[300, "mp.dme_load3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load3p method)": [[300, "mp.dme_load3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load3p method)": [[300, "mp.dme_load3p.pp_have_section_sum"]], "update_status() (mp.dme_load3p method)": [[300, "mp.dme_load3p.update_status"]], "dme_load3p_opf (class in mp)": [[301, "mp.dme_load3p_opf"]], "dme_load_cpf (class in mp)": [[302, "mp.dme_load_cpf"]], "export_vars() (mp.dme_load_cpf method)": [[302, "mp.dme_load_cpf.export_vars"]], "parameterized() (mp.dme_load_cpf method)": [[302, "mp.dme_load_cpf.parameterized"]], "dme_load_opf (class in mp)": [[303, "mp.dme_load_opf"]], "build_params() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.build_params"]], "dme_reserve_gen (class in mp)": [[304, "mp.dme_reserve_gen"]], "export_vars() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.export_vars_offline_val"]], "gen (mp.dme_reserve_gen attribute)": [[304, "mp.dme_reserve_gen.gen"]], "label() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.label"]], "labels() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.labels"]], "main_table_var_names() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.main_table_var_names"]], "name() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.name"]], "pp_binding_rows_lim() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_binding_rows_lim"]], "pp_data_row_det() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_data_row_lim"]], "pp_data_sum() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_get_headers_lim"]], "pp_have_section_det() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_have_section_det"]], "pp_have_section_lim() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_have_section_lim"]], "pp_have_section_sum() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.pp_have_section_sum"]], "r_ub (mp.dme_reserve_gen attribute)": [[304, "mp.dme_reserve_gen.r_ub"]], "update_status() (mp.dme_reserve_gen method)": [[304, "mp.dme_reserve_gen.update_status"]], "build_params() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.build_params"]], "dme_reserve_zone (class in mp)": [[305, "mp.dme_reserve_zone"]], "export_vars() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.export_vars_offline_val"]], "label() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.label"]], "labels() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.labels"]], "main_table_var_names() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.main_table_var_names"]], "name() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.name"]], "pp_data_row_det() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.pp_have_section_det"]], "req (mp.dme_reserve_zone attribute)": [[305, "mp.dme_reserve_zone.req"]], "update_status() (mp.dme_reserve_zone method)": [[305, "mp.dme_reserve_zone.update_status"]], "zones (mp.dme_reserve_zone attribute)": [[305, "mp.dme_reserve_zone.zones"]], "ctol (mp.dme_shared_opf attribute)": [[306, "mp.dme_shared_opf.ctol"]], "dme_shared_opf (class in mp)": [[306, "mp.dme_shared_opf"]], "pp_binding_rows_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_binding_rows_lim"]], "pp_data_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_data_lim"]], "pp_data_other() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_data_other"]], "pp_data_row_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_data_row_lim"]], "pp_get_footers_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_get_footers_lim"]], "pp_get_footers_other() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_get_footers_other"]], "pp_get_headers_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_get_headers_lim"]], "pp_get_headers_other() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_get_headers_other"]], "pp_get_title_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_have_section_lim"]], "pp_have_section_other() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_have_section_other"]], "pp_rows_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_rows_lim"]], "pp_rows_other() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_rows_other"]], "pp_set_tols_lim() (mp.dme_shared_opf method)": [[306, "mp.dme_shared_opf.pp_set_tols_lim"]], "ptol (mp.dme_shared_opf attribute)": [[306, "mp.dme_shared_opf.ptol"]], "bs (mp.dme_shunt attribute)": [[307, "mp.dme_shunt.bs"]], "build_params() (mp.dme_shunt method)": [[307, "mp.dme_shunt.build_params"]], "bus (mp.dme_shunt attribute)": [[307, "mp.dme_shunt.bus"]], "cxn_idx_prop() (mp.dme_shunt method)": [[307, "mp.dme_shunt.cxn_idx_prop"]], "cxn_type() (mp.dme_shunt method)": [[307, "mp.dme_shunt.cxn_type"]], "dme_shunt (class in mp)": [[307, "mp.dme_shunt"]], "gs (mp.dme_shunt attribute)": [[307, "mp.dme_shunt.gs"]], "initialize() (mp.dme_shunt method)": [[307, "mp.dme_shunt.initialize"]], "label() (mp.dme_shunt method)": [[307, "mp.dme_shunt.label"]], "labels() (mp.dme_shunt method)": [[307, "mp.dme_shunt.labels"]], "main_table_var_names() (mp.dme_shunt method)": [[307, "mp.dme_shunt.main_table_var_names"]], "name() (mp.dme_shunt method)": [[307, "mp.dme_shunt.name"]], "pp_data_row_det() (mp.dme_shunt method)": [[307, "mp.dme_shunt.pp_data_row_det"]], "pp_data_sum() (mp.dme_shunt method)": [[307, "mp.dme_shunt.pp_data_sum"]], "pp_get_footers_det() (mp.dme_shunt method)": [[307, "mp.dme_shunt.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_shunt method)": [[307, "mp.dme_shunt.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_shunt method)": [[307, "mp.dme_shunt.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_shunt method)": [[307, "mp.dme_shunt.pp_have_section_sum"]], "update_status() (mp.dme_shunt method)": [[307, "mp.dme_shunt.update_status"]], "dme_shunt_cpf (class in mp)": [[308, "mp.dme_shunt_cpf"]], "export_vars() (mp.dme_shunt_cpf method)": [[308, "mp.dme_shunt_cpf.export_vars"]], "parameterized() (mp.dme_shunt_cpf method)": [[308, "mp.dme_shunt_cpf.parameterized"]], "dme_shunt_opf (class in mp)": [[309, "mp.dme_shunt_opf"]], "build_params() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.build_params"]], "cxn_idx_prop() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.cxn_idx_prop"]], "cxn_type() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.cxn_type"]], "dme_xfmr3p (class in mp)": [[310, "mp.dme_xfmr3p"]], "fbus (mp.dme_xfmr3p attribute)": [[310, "mp.dme_xfmr3p.fbus"]], "initialize() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.initialize"]], "label() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.label"]], "labels() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.labels"]], "main_table_var_names() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.main_table_var_names"]], "name() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.name"]], "pp_data_row_det() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.pp_have_section_sum"]], "pretty_print() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.pretty_print"]], "r (mp.dme_xfmr3p attribute)": [[310, "mp.dme_xfmr3p.r"]], "tbus (mp.dme_xfmr3p attribute)": [[310, "mp.dme_xfmr3p.tbus"]], "update_status() (mp.dme_xfmr3p method)": [[310, "mp.dme_xfmr3p.update_status"]], "x (mp.dme_xfmr3p attribute)": [[310, "mp.dme_xfmr3p.x"]], "dme_xfmr3p_opf (class in mp)": [[311, "mp.dme_xfmr3p_opf"]], "element_classes (mp.element_container attribute)": [[312, "mp.element_container.element_classes"]], "element_container (class in mp)": [[312, "mp.element_container"]], "elements (mp.element_container attribute)": [[312, "mp.element_container.elements"]], "modify_element_classes() (mp.element_container method)": [[312, "mp.element_container.modify_element_classes"]], "data_model_class() (mp.extension method)": [[313, "mp.extension.data_model_class"]], "dm_converter_class() (mp.extension method)": [[313, "mp.extension.dm_converter_class"]], "dm_element_classes() (mp.extension method)": [[313, "mp.extension.dm_element_classes"]], "dmc_element_classes() (mp.extension method)": [[313, "mp.extension.dmc_element_classes"]], "extension (class in mp)": [[313, "mp.extension"]], "math_model_class() (mp.extension method)": [[313, "mp.extension.math_model_class"]], "mm_element_classes() (mp.extension method)": [[313, "mp.extension.mm_element_classes"]], "network_model_class() (mp.extension method)": [[313, "mp.extension.network_model_class"]], "nm_element_classes() (mp.extension method)": [[313, "mp.extension.nm_element_classes"]], "task_class() (mp.extension method)": [[313, "mp.extension.task_class"]], "find_form_class() (mp.form method)": [[314, "mp.form.find_form_class"]], "form (class in mp)": [[314, "mp.form"]], "form_name() (mp.form method)": [[314, "mp.form.form_name"]], "form_tag() (mp.form method)": [[314, "mp.form.form_tag"]], "get_params() (mp.form method)": [[314, "mp.form.get_params"]], "model_params() (mp.form method)": [[314, "mp.form.model_params"]], "model_vvars() (mp.form method)": [[314, "mp.form.model_vvars"]], "model_zvars() (mp.form method)": [[314, "mp.form.model_zvars"]], "l (mp.form_ac attribute)": [[315, "mp.form_ac.L"]], "m (mp.form_ac attribute)": [[315, "mp.form_ac.M"]], "n (mp.form_ac attribute)": [[315, "mp.form_ac.N"]], "y (mp.form_ac attribute)": [[315, "mp.form_ac.Y"]], "aux_data_va_vm() (mp.form_ac method)": [[315, "mp.form_ac.aux_data_va_vm"]], "form_ac (class in mp)": [[315, "mp.form_ac"]], "i (mp.form_ac attribute)": [[315, "mp.form_ac.i"]], "inln (mp.form_ac attribute)": [[315, "mp.form_ac.inln"]], "inln_hess (mp.form_ac attribute)": [[315, "mp.form_ac.inln_hess"]], "model_params() (mp.form_ac method)": [[315, "mp.form_ac.model_params"]], "model_zvars() (mp.form_ac method)": [[315, "mp.form_ac.model_zvars"]], "param_ncols (mp.form_ac attribute)": [[315, "mp.form_ac.param_ncols"]], "port_active_power2_lim_fcn() (mp.form_ac method)": [[315, "mp.form_ac.port_active_power2_lim_fcn"]], "port_active_power2_lim_hess() (mp.form_ac method)": [[315, "mp.form_ac.port_active_power2_lim_hess"]], "port_active_power_lim_fcn() (mp.form_ac method)": [[315, "mp.form_ac.port_active_power_lim_fcn"]], "port_active_power_lim_hess() (mp.form_ac method)": [[315, "mp.form_ac.port_active_power_lim_hess"]], "port_apparent_power_lim_fcn() (mp.form_ac method)": [[315, "mp.form_ac.port_apparent_power_lim_fcn"]], "port_apparent_power_lim_hess() (mp.form_ac method)": [[315, "mp.form_ac.port_apparent_power_lim_hess"]], "port_current_lim_fcn() (mp.form_ac method)": [[315, "mp.form_ac.port_current_lim_fcn"]], "port_current_lim_hess() (mp.form_ac method)": [[315, "mp.form_ac.port_current_lim_hess"]], "port_inj_current() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_current"]], "port_inj_current_hess() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_current_hess"]], "port_inj_current_hess_v() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_current_jac"]], "port_inj_power() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_power"]], "port_inj_power_hess() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_power_hess"]], "port_inj_power_hess_v() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_ac method)": [[315, "mp.form_ac.port_inj_power_jac"]], "s (mp.form_ac attribute)": [[315, "mp.form_ac.s"]], "snln (mp.form_ac attribute)": [[315, "mp.form_ac.snln"]], "snln_hess (mp.form_ac attribute)": [[315, "mp.form_ac.snln_hess"]], "aux_data_va_vm() (mp.form_acc method)": [[316, "mp.form_acc.aux_data_va_vm"]], "form_acc (class in mp)": [[316, "mp.form_acc"]], "form_name() (mp.form_acc method)": [[316, "mp.form_acc.form_name"]], "form_tag() (mp.form_acc method)": [[316, "mp.form_acc.form_tag"]], "model_vvars() (mp.form_acc method)": [[316, "mp.form_acc.model_vvars"]], "port_inj_current_hess_v() (mp.form_acc method)": [[316, "mp.form_acc.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acc method)": [[316, "mp.form_acc.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acc method)": [[316, "mp.form_acc.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acc method)": [[316, "mp.form_acc.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acc method)": [[316, "mp.form_acc.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acc method)": [[316, "mp.form_acc.port_inj_power_jac"]], "va_fcn() (mp.form_acc method)": [[316, "mp.form_acc.va_fcn"]], "va_hess() (mp.form_acc method)": [[316, "mp.form_acc.va_hess"]], "vm2_fcn() (mp.form_acc method)": [[316, "mp.form_acc.vm2_fcn"]], "vm2_hess() (mp.form_acc method)": [[316, "mp.form_acc.vm2_hess"]], "aux_data_va_vm() (mp.form_acp method)": [[317, "mp.form_acp.aux_data_va_vm"]], "form_acp (class in mp)": [[317, "mp.form_acp"]], "form_name() (mp.form_acp method)": [[317, "mp.form_acp.form_name"]], "form_tag() (mp.form_acp method)": [[317, "mp.form_acp.form_tag"]], "model_vvars() (mp.form_acp method)": [[317, "mp.form_acp.model_vvars"]], "port_inj_current_hess_v() (mp.form_acp method)": [[317, "mp.form_acp.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acp method)": [[317, "mp.form_acp.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acp method)": [[317, "mp.form_acp.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acp method)": [[317, "mp.form_acp.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acp method)": [[317, "mp.form_acp.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acp method)": [[317, "mp.form_acp.port_inj_power_jac"]], "b (mp.form_dc attribute)": [[318, "mp.form_dc.B"]], "k (mp.form_dc attribute)": [[318, "mp.form_dc.K"]], "form_dc (class in mp)": [[318, "mp.form_dc"]], "form_name() (mp.form_dc method)": [[318, "mp.form_dc.form_name"]], "form_tag() (mp.form_dc method)": [[318, "mp.form_dc.form_tag"]], "model_params() (mp.form_dc method)": [[318, "mp.form_dc.model_params"]], "model_vvars() (mp.form_dc method)": [[318, "mp.form_dc.model_vvars"]], "model_zvars() (mp.form_dc method)": [[318, "mp.form_dc.model_zvars"]], "p (mp.form_dc attribute)": [[318, "mp.form_dc.p"]], "param_ncols (mp.form_dc attribute)": [[318, "mp.form_dc.param_ncols"]], "port_inj_power() (mp.form_dc method)": [[318, "mp.form_dc.port_inj_power"]], "add_elements() (mp.mapped_array method)": [[319, "mp.mapped_array.add_elements"]], "add_names() (mp.mapped_array method)": [[319, "mp.mapped_array.add_names"]], "copy() (mp.mapped_array method)": [[319, "mp.mapped_array.copy"]], "delete_elements() (mp.mapped_array method)": [[319, "mp.mapped_array.delete_elements"]], "display() (mp.mapped_array method)": [[319, "mp.mapped_array.display"]], "has_name() (mp.mapped_array method)": [[319, "mp.mapped_array.has_name"]], "length() (mp.mapped_array method)": [[319, "mp.mapped_array.length"]], "mapped_array (class in mp)": [[319, "mp.mapped_array"]], "mapped_array() (mp.mapped_array method)": [[319, "mp.mapped_array.mapped_array"]], "name2idx() (mp.mapped_array method)": [[319, "mp.mapped_array.name2idx"]], "size() (mp.mapped_array method)": [[319, "mp.mapped_array.size"]], "subsasgn() (mp.mapped_array method)": [[319, "mp.mapped_array.subsasgn"]], "subsref() (mp.mapped_array method)": [[319, "mp.mapped_array.subsref"]], "add_aux_data() (mp.math_model method)": [[320, "mp.math_model.add_aux_data"]], "add_constraints() (mp.math_model method)": [[320, "mp.math_model.add_constraints"]], "add_costs() (mp.math_model method)": [[320, "mp.math_model.add_costs"]], "add_node_balance_constraints() (mp.math_model method)": [[320, "mp.math_model.add_node_balance_constraints"]], "add_system_constraints() (mp.math_model method)": [[320, "mp.math_model.add_system_constraints"]], "add_system_costs() (mp.math_model method)": [[320, "mp.math_model.add_system_costs"]], "add_system_vars() (mp.math_model method)": [[320, "mp.math_model.add_system_vars"]], "add_vars() (mp.math_model method)": [[320, "mp.math_model.add_vars"]], "aux_data (mp.math_model attribute)": [[320, "mp.math_model.aux_data"]], "build() (mp.math_model method)": [[320, "mp.math_model.build"]], "build_base_aux_data() (mp.math_model method)": [[320, "mp.math_model.build_base_aux_data"]], "data_model_update() (mp.math_model method)": [[320, "mp.math_model.data_model_update"]], "display() (mp.math_model method)": [[320, "mp.math_model.display"]], "form_name() (mp.math_model method)": [[320, "mp.math_model.form_name"]], "form_tag() (mp.math_model method)": [[320, "mp.math_model.form_tag"]], "math_model (class in mp)": [[320, "mp.math_model"]], "network_model_x_soln() (mp.math_model method)": [[320, "mp.math_model.network_model_x_soln"]], "solve_opts() (mp.math_model method)": [[320, "mp.math_model.solve_opts"]], "task_name() (mp.math_model method)": [[320, "mp.math_model.task_name"]], "task_tag() (mp.math_model method)": [[320, "mp.math_model.task_tag"]], "update_nm_vars() (mp.math_model method)": [[320, "mp.math_model.update_nm_vars"]], "math_model_cpf_acc (class in mp)": [[321, "mp.math_model_cpf_acc"]], "math_model_cpf_acc() (mp.math_model_cpf_acc method)": [[321, "mp.math_model_cpf_acc.math_model_cpf_acc"]], "add_node_balance_constraints() (mp.math_model_cpf_acci method)": [[322, "mp.math_model_cpf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acci method)": [[322, "mp.math_model_cpf_acci.form_name"]], "form_tag() (mp.math_model_cpf_acci method)": [[322, "mp.math_model_cpf_acci.form_tag"]], "math_model_cpf_acci (class in mp)": [[322, "mp.math_model_cpf_acci"]], "add_node_balance_constraints() (mp.math_model_cpf_accs method)": [[323, "mp.math_model_cpf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_accs method)": [[323, "mp.math_model_cpf_accs.form_name"]], "form_tag() (mp.math_model_cpf_accs method)": [[323, "mp.math_model_cpf_accs.form_tag"]], "math_model_cpf_accs (class in mp)": [[323, "mp.math_model_cpf_accs"]], "callback_vlim() (mp.math_model_cpf_acp method)": [[324, "mp.math_model_cpf_acp.callback_vlim"]], "event_vlim() (mp.math_model_cpf_acp method)": [[324, "mp.math_model_cpf_acp.event_vlim"]], "math_model_cpf_acp (class in mp)": [[324, "mp.math_model_cpf_acp"]], "math_model_cpf_acp() (mp.math_model_cpf_acp method)": [[324, "mp.math_model_cpf_acp.math_model_cpf_acp"]], "add_node_balance_constraints() (mp.math_model_cpf_acpi method)": [[325, "mp.math_model_cpf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acpi method)": [[325, "mp.math_model_cpf_acpi.form_name"]], "form_tag() (mp.math_model_cpf_acpi method)": [[325, "mp.math_model_cpf_acpi.form_tag"]], "math_model_cpf_acpi (class in mp)": [[325, "mp.math_model_cpf_acpi"]], "add_node_balance_constraints() (mp.math_model_cpf_acps method)": [[326, "mp.math_model_cpf_acps.add_node_balance_constraints"]], "expand_z_warmstart() (mp.math_model_cpf_acps method)": [[326, "mp.math_model_cpf_acps.expand_z_warmstart"]], "form_name() (mp.math_model_cpf_acps method)": [[326, "mp.math_model_cpf_acps.form_name"]], "form_tag() (mp.math_model_cpf_acps method)": [[326, "mp.math_model_cpf_acps.form_tag"]], "math_model_cpf_acps (class in mp)": [[326, "mp.math_model_cpf_acps"]], "solve_opts_warmstart() (mp.math_model_cpf_acps method)": [[326, "mp.math_model_cpf_acps.solve_opts_warmstart"]], "add_system_vars() (mp.math_model_opf method)": [[327, "mp.math_model_opf.add_system_vars"]], "build_aux_data() (mp.math_model_opf method)": [[327, "mp.math_model_opf.build_aux_data"]], "interior_va() (mp.math_model_opf method)": [[327, "mp.math_model_opf.interior_va"]], "interior_x0() (mp.math_model_opf method)": [[327, "mp.math_model_opf.interior_x0"]], "math_model_opf (class in mp)": [[327, "mp.math_model_opf"]], "task_name() (mp.math_model_opf method)": [[327, "mp.math_model_opf.task_name"]], "task_tag() (mp.math_model_opf method)": [[327, "mp.math_model_opf.task_tag"]], "math_model_opf_ac (class in mp)": [[328, "mp.math_model_opf_ac"]], "nodal_current_balance_fcn() (mp.math_model_opf_ac method)": [[328, "mp.math_model_opf_ac.nodal_current_balance_fcn"]], "nodal_current_balance_hess() (mp.math_model_opf_ac method)": [[328, "mp.math_model_opf_ac.nodal_current_balance_hess"]], "nodal_power_balance_fcn() (mp.math_model_opf_ac method)": [[328, "mp.math_model_opf_ac.nodal_power_balance_fcn"]], "nodal_power_balance_hess() (mp.math_model_opf_ac method)": [[328, "mp.math_model_opf_ac.nodal_power_balance_hess"]], "solve_opts() (mp.math_model_opf_ac method)": [[328, "mp.math_model_opf_ac.solve_opts"]], "convert_x_m2n() (mp.math_model_opf_acc method)": [[329, "mp.math_model_opf_acc.convert_x_m2n"]], "interior_va() (mp.math_model_opf_acc method)": [[329, "mp.math_model_opf_acc.interior_va"]], "math_model_opf_acc (class in mp)": [[329, "mp.math_model_opf_acc"]], "math_model_opf_acc() (mp.math_model_opf_acc method)": [[329, "mp.math_model_opf_acc.math_model_opf_acc"]], "add_node_balance_constraints() (mp.math_model_opf_acci method)": [[330, "mp.math_model_opf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acci method)": [[330, "mp.math_model_opf_acci.form_name"]], "form_tag() (mp.math_model_opf_acci method)": [[330, "mp.math_model_opf_acci.form_tag"]], "math_model_opf_acci (class in mp)": [[330, "mp.math_model_opf_acci"]], "node_power_balance_prices() (mp.math_model_opf_acci method)": [[330, "mp.math_model_opf_acci.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.add_vars"]], "build() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.build"]], "def_set_types() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.legacy_user_var_names"]], "math_model_opf_acci_legacy (class in mp)": [[331, "mp.math_model_opf_acci_legacy"]], "math_model_opf_acci_legacy() (mp.math_model_opf_acci_legacy method)": [[331, "mp.math_model_opf_acci_legacy.math_model_opf_acci_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_accs method)": [[332, "mp.math_model_opf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_accs method)": [[332, "mp.math_model_opf_accs.form_name"]], "form_tag() (mp.math_model_opf_accs method)": [[332, "mp.math_model_opf_accs.form_tag"]], "math_model_opf_accs (class in mp)": [[332, "mp.math_model_opf_accs"]], "node_power_balance_prices() (mp.math_model_opf_accs method)": [[332, "mp.math_model_opf_accs.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.add_vars"]], "build() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.build"]], "def_set_types() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.legacy_user_var_names"]], "math_model_opf_accs_legacy (class in mp)": [[333, "mp.math_model_opf_accs_legacy"]], "math_model_opf_accs_legacy() (mp.math_model_opf_accs_legacy method)": [[333, "mp.math_model_opf_accs_legacy.math_model_opf_accs_legacy"]], "convert_x_m2n() (mp.math_model_opf_acp method)": [[334, "mp.math_model_opf_acp.convert_x_m2n"]], "math_model_opf_acp (class in mp)": [[334, "mp.math_model_opf_acp"]], "math_model_opf_acp() (mp.math_model_opf_acp method)": [[334, "mp.math_model_opf_acp.math_model_opf_acp"]], "add_node_balance_constraints() (mp.math_model_opf_acpi method)": [[335, "mp.math_model_opf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acpi method)": [[335, "mp.math_model_opf_acpi.form_name"]], "form_tag() (mp.math_model_opf_acpi method)": [[335, "mp.math_model_opf_acpi.form_tag"]], "math_model_opf_acpi (class in mp)": [[335, "mp.math_model_opf_acpi"]], "node_power_balance_prices() (mp.math_model_opf_acpi method)": [[335, "mp.math_model_opf_acpi.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.add_vars"]], "build() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.build"]], "def_set_types() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.legacy_user_var_names"]], "math_model_opf_acpi_legacy (class in mp)": [[336, "mp.math_model_opf_acpi_legacy"]], "math_model_opf_acpi_legacy() (mp.math_model_opf_acpi_legacy method)": [[336, "mp.math_model_opf_acpi_legacy.math_model_opf_acpi_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_acps method)": [[337, "mp.math_model_opf_acps.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acps method)": [[337, "mp.math_model_opf_acps.form_name"]], "form_tag() (mp.math_model_opf_acps method)": [[337, "mp.math_model_opf_acps.form_tag"]], "math_model_opf_acps (class in mp)": [[337, "mp.math_model_opf_acps"]], "node_power_balance_prices() (mp.math_model_opf_acps method)": [[337, "mp.math_model_opf_acps.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.add_vars"]], "build() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.build"]], "def_set_types() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.legacy_user_var_names"]], "math_model_opf_acps_legacy (class in mp)": [[338, "mp.math_model_opf_acps_legacy"]], "math_model_opf_acps_legacy() (mp.math_model_opf_acps_legacy method)": [[338, "mp.math_model_opf_acps_legacy.math_model_opf_acps_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_dc method)": [[339, "mp.math_model_opf_dc.add_node_balance_constraints"]], "convert_x_m2n() (mp.math_model_opf_dc method)": [[339, "mp.math_model_opf_dc.convert_x_m2n"]], "form_name() (mp.math_model_opf_dc method)": [[339, "mp.math_model_opf_dc.form_name"]], "form_tag() (mp.math_model_opf_dc method)": [[339, "mp.math_model_opf_dc.form_tag"]], "math_model_opf_dc (class in mp)": [[339, "mp.math_model_opf_dc"]], "math_model_opf_dc() (mp.math_model_opf_dc method)": [[339, "mp.math_model_opf_dc.math_model_opf_dc"]], "solve_opts() (mp.math_model_opf_dc method)": [[339, "mp.math_model_opf_dc.solve_opts"]], "add_named_set() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.add_vars"]], "build() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.build"]], "def_set_types() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.legacy_user_var_names"]], "math_model_opf_dc_legacy (class in mp)": [[340, "mp.math_model_opf_dc_legacy"]], "math_model_opf_dc_legacy() (mp.math_model_opf_dc_legacy method)": [[340, "mp.math_model_opf_dc_legacy.math_model_opf_dc_legacy"]], "add_costs() (mp.math_model_pf method)": [[341, "mp.math_model_pf.add_costs"]], "add_system_vars() (mp.math_model_pf method)": [[341, "mp.math_model_pf.add_system_vars"]], "math_model_pf (class in mp)": [[341, "mp.math_model_pf"]], "solve_opts() (mp.math_model_pf method)": [[341, "mp.math_model_pf.solve_opts"]], "task_name() (mp.math_model_pf method)": [[341, "mp.math_model_pf.task_name"]], "task_tag() (mp.math_model_pf method)": [[341, "mp.math_model_pf.task_tag"]], "math_model_pf_ac (class in mp)": [[342, "mp.math_model_pf_ac"]], "math_model_pf_ac() (mp.math_model_pf_ac method)": [[342, "mp.math_model_pf_ac.math_model_pf_ac"]], "add_node_balance_constraints() (mp.math_model_pf_acci method)": [[343, "mp.math_model_pf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acci method)": [[343, "mp.math_model_pf_acci.form_name"]], "form_tag() (mp.math_model_pf_acci method)": [[343, "mp.math_model_pf_acci.form_tag"]], "math_model_pf_acci (class in mp)": [[343, "mp.math_model_pf_acci"]], "add_node_balance_constraints() (mp.math_model_pf_accs method)": [[344, "mp.math_model_pf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_accs method)": [[344, "mp.math_model_pf_accs.form_name"]], "form_tag() (mp.math_model_pf_accs method)": [[344, "mp.math_model_pf_accs.form_tag"]], "math_model_pf_accs (class in mp)": [[344, "mp.math_model_pf_accs"]], "add_node_balance_constraints() (mp.math_model_pf_acpi method)": [[345, "mp.math_model_pf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acpi method)": [[345, "mp.math_model_pf_acpi.form_name"]], "form_tag() (mp.math_model_pf_acpi method)": [[345, "mp.math_model_pf_acpi.form_tag"]], "math_model_pf_acpi (class in mp)": [[345, "mp.math_model_pf_acpi"]], "add_node_balance_constraints() (mp.math_model_pf_acps method)": [[346, "mp.math_model_pf_acps.add_node_balance_constraints"]], "fd_jac_approx() (mp.math_model_pf_acps method)": [[346, "mp.math_model_pf_acps.fd_jac_approx"]], "fdpf_b_matrix_models() (mp.math_model_pf_acps method)": [[346, "mp.math_model_pf_acps.fdpf_B_matrix_models"]], "form_name() (mp.math_model_pf_acps method)": [[346, "mp.math_model_pf_acps.form_name"]], "form_tag() (mp.math_model_pf_acps method)": [[346, "mp.math_model_pf_acps.form_tag"]], "gs_x_update() (mp.math_model_pf_acps method)": [[346, "mp.math_model_pf_acps.gs_x_update"]], "math_model_pf_acps (class in mp)": [[346, "mp.math_model_pf_acps"]], "zg_x_update() (mp.math_model_pf_acps method)": [[346, "mp.math_model_pf_acps.zg_x_update"]], "add_node_balance_constraints() (mp.math_model_pf_dc method)": [[347, "mp.math_model_pf_dc.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_dc method)": [[347, "mp.math_model_pf_dc.form_name"]], "form_tag() (mp.math_model_pf_dc method)": [[347, "mp.math_model_pf_dc.form_tag"]], "math_model_pf_dc (class in mp)": [[347, "mp.math_model_pf_dc"]], "math_model_pf_dc() (mp.math_model_pf_dc method)": [[347, "mp.math_model_pf_dc.math_model_pf_dc"]], "solve_opts() (mp.math_model_pf_dc method)": [[347, "mp.math_model_pf_dc.solve_opts"]], "add_constraints() (mp.mm_element method)": [[348, "mp.mm_element.add_constraints"]], "add_costs() (mp.mm_element method)": [[348, "mp.mm_element.add_costs"]], "add_vars() (mp.mm_element method)": [[348, "mp.mm_element.add_vars"]], "data_model_element() (mp.mm_element method)": [[348, "mp.mm_element.data_model_element"]], "data_model_update() (mp.mm_element method)": [[348, "mp.mm_element.data_model_update"]], "data_model_update_off() (mp.mm_element method)": [[348, "mp.mm_element.data_model_update_off"]], "data_model_update_on() (mp.mm_element method)": [[348, "mp.mm_element.data_model_update_on"]], "mm_element (class in mp)": [[348, "mp.mm_element"]], "name() (mp.mm_element method)": [[348, "mp.mm_element.name"]], "network_model_element() (mp.mm_element method)": [[348, "mp.mm_element.network_model_element"]], "add_legacy_cost() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.add_legacy_cost"]], "add_legacy_user_constraints() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.add_legacy_user_constraints"]], "add_legacy_user_constraints_ac() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.add_legacy_user_constraints_ac"]], "add_legacy_user_costs() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.add_legacy_user_costs"]], "add_legacy_user_vars() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.add_legacy_user_vars"]], "build_legacy() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.build_legacy"]], "eval_legacy_cost() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.eval_legacy_cost"]], "get_mpc() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.get_mpc"]], "init_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.init_set_types_legacy"]], "mm_shared_opf_legacy (class in mp)": [[349, "mp.mm_shared_opf_legacy"]], "mod_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.mod_set_types_legacy"]], "params_legacy_cost() (mp.mm_shared_opf_legacy method)": [[349, "mp.mm_shared_opf_legacy.params_legacy_cost"]], "build_aux_data() (mp.mm_shared_pfcpf method)": [[350, "mp.mm_shared_pfcpf.build_aux_data"]], "mm_shared_pfcpf (class in mp)": [[350, "mp.mm_shared_pfcpf"]], "add_system_varset_pf() (mp.mm_shared_pfcpf_ac method)": [[351, "mp.mm_shared_pfcpf_ac.add_system_varset_pf"]], "mm_shared_pfcpf_ac (class in mp)": [[351, "mp.mm_shared_pfcpf_ac"]], "update_z() (mp.mm_shared_pfcpf_ac method)": [[351, "mp.mm_shared_pfcpf_ac.update_z"]], "build_aux_data_i() (mp.mm_shared_pfcpf_ac_i method)": [[352, "mp.mm_shared_pfcpf_ac_i.build_aux_data_i"]], "mm_shared_pfcpf_ac_i (class in mp)": [[352, "mp.mm_shared_pfcpf_ac_i"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acc method)": [[353, "mp.mm_shared_pfcpf_acc.convert_x_m2n"]], "mm_shared_pfcpf_acc (class in mp)": [[353, "mp.mm_shared_pfcpf_acc"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acci method)": [[354, "mp.mm_shared_pfcpf_acci.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acci method)": [[354, "mp.mm_shared_pfcpf_acci.build_aux_data"]], "mm_shared_pfcpf_acci (class in mp)": [[354, "mp.mm_shared_pfcpf_acci"]], "node_balance_equations() (mp.mm_shared_pfcpf_acci method)": [[354, "mp.mm_shared_pfcpf_acci.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_accs method)": [[355, "mp.mm_shared_pfcpf_accs.add_system_vars_pf"]], "mm_shared_pfcpf_accs (class in mp)": [[355, "mp.mm_shared_pfcpf_accs"]], "node_balance_equations() (mp.mm_shared_pfcpf_accs method)": [[355, "mp.mm_shared_pfcpf_accs.node_balance_equations"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acp method)": [[356, "mp.mm_shared_pfcpf_acp.convert_x_m2n"]], "mm_shared_pfcpf_acp (class in mp)": [[356, "mp.mm_shared_pfcpf_acp"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acpi method)": [[357, "mp.mm_shared_pfcpf_acpi.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acpi method)": [[357, "mp.mm_shared_pfcpf_acpi.build_aux_data"]], "mm_shared_pfcpf_acpi (class in mp)": [[357, "mp.mm_shared_pfcpf_acpi"]], "node_balance_equations() (mp.mm_shared_pfcpf_acpi method)": [[357, "mp.mm_shared_pfcpf_acpi.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acps method)": [[358, "mp.mm_shared_pfcpf_acps.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acps method)": [[358, "mp.mm_shared_pfcpf_acps.build_aux_data"]], "mm_shared_pfcpf_acps (class in mp)": [[358, "mp.mm_shared_pfcpf_acps"]], "node_balance_equations() (mp.mm_shared_pfcpf_acps method)": [[358, "mp.mm_shared_pfcpf_acps.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_dc method)": [[359, "mp.mm_shared_pfcpf_dc.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_dc method)": [[359, "mp.mm_shared_pfcpf_dc.build_aux_data"]], "convert_x_m2n() (mp.mm_shared_pfcpf_dc method)": [[359, "mp.mm_shared_pfcpf_dc.convert_x_m2n"]], "mm_shared_pfcpf_dc (class in mp)": [[359, "mp.mm_shared_pfcpf_dc"]], "update_z() (mp.mm_shared_pfcpf_dc method)": [[359, "mp.mm_shared_pfcpf_dc.update_z"]], "mme_branch (class in mp)": [[360, "mp.mme_branch"]], "name() (mp.mme_branch method)": [[360, "mp.mme_branch.name"]], "ang_diff_params() (mp.mme_branch_opf method)": [[361, "mp.mme_branch_opf.ang_diff_params"]], "ang_diff_prices() (mp.mme_branch_opf method)": [[361, "mp.mme_branch_opf.ang_diff_prices"]], "mme_branch_opf (class in mp)": [[361, "mp.mme_branch_opf"]], "add_constraints() (mp.mme_branch_opf_ac method)": [[362, "mp.mme_branch_opf_ac.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_ac method)": [[362, "mp.mme_branch_opf_ac.data_model_update_on"]], "mme_branch_opf_ac (class in mp)": [[362, "mp.mme_branch_opf_ac"]], "add_constraints() (mp.mme_branch_opf_acc method)": [[363, "mp.mme_branch_opf_acc.add_constraints"]], "ang_diff_prices() (mp.mme_branch_opf_acc method)": [[363, "mp.mme_branch_opf_acc.ang_diff_prices"]], "mme_branch_opf_acc (class in mp)": [[363, "mp.mme_branch_opf_acc"]], "add_constraints() (mp.mme_branch_opf_acp method)": [[364, "mp.mme_branch_opf_acp.add_constraints"]], "mme_branch_opf_acp (class in mp)": [[364, "mp.mme_branch_opf_acp"]], "add_constraints() (mp.mme_branch_opf_dc method)": [[365, "mp.mme_branch_opf_dc.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_dc method)": [[365, "mp.mme_branch_opf_dc.data_model_update_on"]], "mme_branch_opf_dc (class in mp)": [[365, "mp.mme_branch_opf_dc"]], "data_model_update_on() (mp.mme_branch_pf_ac method)": [[366, "mp.mme_branch_pf_ac.data_model_update_on"]], "mme_branch_pf_ac (class in mp)": [[366, "mp.mme_branch_pf_ac"]], "data_model_update_on() (mp.mme_branch_pf_dc method)": [[367, "mp.mme_branch_pf_dc.data_model_update_on"]], "mme_branch_pf_dc (class in mp)": [[367, "mp.mme_branch_pf_dc"]], "mme_bus (class in mp)": [[368, "mp.mme_bus"]], "name() (mp.mme_bus method)": [[368, "mp.mme_bus.name"]], "data_model_update_on() (mp.mme_bus3p method)": [[369, "mp.mme_bus3p.data_model_update_on"]], "mme_bus3p (class in mp)": [[369, "mp.mme_bus3p"]], "name() (mp.mme_bus3p method)": [[369, "mp.mme_bus3p.name"]], "interior_x0() (mp.mme_bus3p_opf_acc method)": [[370, "mp.mme_bus3p_opf_acc.interior_x0"]], "mme_bus3p_opf_acc (class in mp)": [[370, "mp.mme_bus3p_opf_acc"]], "interior_x0() (mp.mme_bus3p_opf_acp method)": [[371, "mp.mme_bus3p_opf_acp.interior_x0"]], "mme_bus3p_opf_acp (class in mp)": [[371, "mp.mme_bus3p_opf_acp"]], "interior_vm() (mp.mme_bus_opf_ac method)": [[372, "mp.mme_bus_opf_ac.interior_vm"]], "mme_bus_opf_ac (class in mp)": [[372, "mp.mme_bus_opf_ac"]], "add_constraints() (mp.mme_bus_opf_acc method)": [[373, "mp.mme_bus_opf_acc.add_constraints"]], "data_model_update_on() (mp.mme_bus_opf_acc method)": [[373, "mp.mme_bus_opf_acc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acc method)": [[373, "mp.mme_bus_opf_acc.interior_x0"]], "mme_bus_opf_acc (class in mp)": [[373, "mp.mme_bus_opf_acc"]], "data_model_update_on() (mp.mme_bus_opf_acp method)": [[374, "mp.mme_bus_opf_acp.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acp method)": [[374, "mp.mme_bus_opf_acp.interior_x0"]], "mme_bus_opf_acp (class in mp)": [[374, "mp.mme_bus_opf_acp"]], "data_model_update_on() (mp.mme_bus_opf_dc method)": [[375, "mp.mme_bus_opf_dc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_dc method)": [[375, "mp.mme_bus_opf_dc.interior_x0"]], "mme_bus_opf_dc (class in mp)": [[375, "mp.mme_bus_opf_dc"]], "data_model_update_on() (mp.mme_bus_pf_ac method)": [[376, "mp.mme_bus_pf_ac.data_model_update_on"]], "mme_bus_pf_ac (class in mp)": [[376, "mp.mme_bus_pf_ac"]], "data_model_update_on() (mp.mme_bus_pf_dc method)": [[377, "mp.mme_bus_pf_dc.data_model_update_on"]], "mme_bus_pf_dc (class in mp)": [[377, "mp.mme_bus_pf_dc"]], "mme_buslink (class in mp)": [[378, "mp.mme_buslink"]], "name() (mp.mme_buslink method)": [[378, "mp.mme_buslink.name"]], "interior_x0() (mp.mme_buslink_opf method)": [[379, "mp.mme_buslink_opf.interior_x0"]], "mme_buslink_opf (class in mp)": [[379, "mp.mme_buslink_opf"]], "add_constraints() (mp.mme_buslink_opf_acc method)": [[380, "mp.mme_buslink_opf_acc.add_constraints"]], "mme_buslink_opf_acc (class in mp)": [[380, "mp.mme_buslink_opf_acc"]], "va_fcn() (mp.mme_buslink_opf_acc method)": [[380, "mp.mme_buslink_opf_acc.va_fcn"]], "va_hess() (mp.mme_buslink_opf_acc method)": [[380, "mp.mme_buslink_opf_acc.va_hess"]], "vm2_fcn() (mp.mme_buslink_opf_acc method)": [[380, "mp.mme_buslink_opf_acc.vm2_fcn"]], "vm2_hess() (mp.mme_buslink_opf_acc method)": [[380, "mp.mme_buslink_opf_acc.vm2_hess"]], "add_constraints() (mp.mme_buslink_opf_acp method)": [[381, "mp.mme_buslink_opf_acp.add_constraints"]], "mme_buslink_opf_acp (class in mp)": [[381, "mp.mme_buslink_opf_acp"]], "add_constraints() (mp.mme_buslink_pf_ac method)": [[382, "mp.mme_buslink_pf_ac.add_constraints"]], "add_vars() (mp.mme_buslink_pf_ac method)": [[382, "mp.mme_buslink_pf_ac.add_vars"]], "mme_buslink_pf_ac (class in mp)": [[382, "mp.mme_buslink_pf_ac"]], "voltage_constraints() (mp.mme_buslink_pf_ac method)": [[382, "mp.mme_buslink_pf_ac.voltage_constraints"]], "add_constraints() (mp.mme_buslink_pf_acc method)": [[383, "mp.mme_buslink_pf_acc.add_constraints"]], "mme_buslink_pf_acc (class in mp)": [[383, "mp.mme_buslink_pf_acc"]], "pf_va_fcn() (mp.mme_buslink_pf_acc method)": [[383, "mp.mme_buslink_pf_acc.pf_va_fcn"]], "pf_vm_fcn() (mp.mme_buslink_pf_acc method)": [[383, "mp.mme_buslink_pf_acc.pf_vm_fcn"]], "add_constraints() (mp.mme_buslink_pf_acp method)": [[384, "mp.mme_buslink_pf_acp.add_constraints"]], "mme_buslink_pf_acp (class in mp)": [[384, "mp.mme_buslink_pf_acp"]], "mme_gen (class in mp)": [[385, "mp.mme_gen"]], "name() (mp.mme_gen method)": [[385, "mp.mme_gen.name"]], "data_model_update_on() (mp.mme_gen3p method)": [[386, "mp.mme_gen3p.data_model_update_on"]], "mme_gen3p (class in mp)": [[386, "mp.mme_gen3p"]], "name() (mp.mme_gen3p method)": [[386, "mp.mme_gen3p.name"]], "interior_x0() (mp.mme_gen3p_opf method)": [[387, "mp.mme_gen3p_opf.interior_x0"]], "mme_gen3p_opf (class in mp)": [[387, "mp.mme_gen3p_opf"]], "add_costs() (mp.mme_gen_opf method)": [[388, "mp.mme_gen_opf.add_costs"]], "add_vars() (mp.mme_gen_opf method)": [[388, "mp.mme_gen_opf.add_vars"]], "cost (mp.mme_gen_opf attribute)": [[388, "mp.mme_gen_opf.cost"]], "interior_x0() (mp.mme_gen_opf method)": [[388, "mp.mme_gen_opf.interior_x0"]], "mme_gen_opf (class in mp)": [[388, "mp.mme_gen_opf"]], "add_constraints() (mp.mme_gen_opf_ac method)": [[389, "mp.mme_gen_opf_ac.add_constraints"]], "add_costs() (mp.mme_gen_opf_ac method)": [[389, "mp.mme_gen_opf_ac.add_costs"]], "build_cost_params() (mp.mme_gen_opf_ac method)": [[389, "mp.mme_gen_opf_ac.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_ac method)": [[389, "mp.mme_gen_opf_ac.data_model_update_on"]], "disp_load_constant_pf_constraint() (mp.mme_gen_opf_ac method)": [[389, "mp.mme_gen_opf_ac.disp_load_constant_pf_constraint"]], "has_pq_cap() (mp.mme_gen_opf_ac method)": [[389, "mp.mme_gen_opf_ac.has_pq_cap"]], "mme_gen_opf_ac (class in mp)": [[389, "mp.mme_gen_opf_ac"]], "pq_capability_constraint() (mp.mme_gen_opf_ac method)": [[389, "mp.mme_gen_opf_ac.pq_capability_constraint"]], "add_constraints() (mp.mme_gen_opf_ac_oval method)": [[390, "mp.mme_gen_opf_ac_oval.add_constraints"]], "mme_gen_opf_ac_oval (class in mp)": [[390, "mp.mme_gen_opf_ac_oval"]], "oval_pq_capability_fcn() (mp.mme_gen_opf_ac_oval method)": [[390, "mp.mme_gen_opf_ac_oval.oval_pq_capability_fcn"]], "oval_pq_capability_hess() (mp.mme_gen_opf_ac_oval method)": [[390, "mp.mme_gen_opf_ac_oval.oval_pq_capability_hess"]], "add_constraints() (mp.mme_gen_opf_dc method)": [[391, "mp.mme_gen_opf_dc.add_constraints"]], "build_cost_params() (mp.mme_gen_opf_dc method)": [[391, "mp.mme_gen_opf_dc.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_dc method)": [[391, "mp.mme_gen_opf_dc.data_model_update_on"]], "mme_gen_opf_dc (class in mp)": [[391, "mp.mme_gen_opf_dc"]], "data_model_update_on() (mp.mme_gen_pf_ac method)": [[392, "mp.mme_gen_pf_ac.data_model_update_on"]], "mme_gen_pf_ac (class in mp)": [[392, "mp.mme_gen_pf_ac"]], "data_model_update_on() (mp.mme_gen_pf_dc method)": [[393, "mp.mme_gen_pf_dc.data_model_update_on"]], "mme_gen_pf_dc (class in mp)": [[393, "mp.mme_gen_pf_dc"]], "mme_legacy_dcline (class in mp)": [[394, "mp.mme_legacy_dcline"]], "name() (mp.mme_legacy_dcline method)": [[394, "mp.mme_legacy_dcline.name"]], "add_constraints() (mp.mme_legacy_dcline_opf method)": [[395, "mp.mme_legacy_dcline_opf.add_constraints"]], "add_costs() (mp.mme_legacy_dcline_opf method)": [[395, "mp.mme_legacy_dcline_opf.add_costs"]], "add_vars() (mp.mme_legacy_dcline_opf method)": [[395, "mp.mme_legacy_dcline_opf.add_vars"]], "build_cost_params() (mp.mme_legacy_dcline_opf method)": [[395, "mp.mme_legacy_dcline_opf.build_cost_params"]], "cost (mp.mme_legacy_dcline_opf attribute)": [[395, "mp.mme_legacy_dcline_opf.cost"]], "interior_x0() (mp.mme_legacy_dcline_opf method)": [[395, "mp.mme_legacy_dcline_opf.interior_x0"]], "mme_legacy_dcline_opf (class in mp)": [[395, "mp.mme_legacy_dcline_opf"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_ac method)": [[396, "mp.mme_legacy_dcline_opf_ac.data_model_update_on"]], "mme_legacy_dcline_opf_ac (class in mp)": [[396, "mp.mme_legacy_dcline_opf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_dc method)": [[397, "mp.mme_legacy_dcline_opf_dc.data_model_update_on"]], "mme_legacy_dcline_opf_dc (class in mp)": [[397, "mp.mme_legacy_dcline_opf_dc"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_ac method)": [[398, "mp.mme_legacy_dcline_pf_ac.data_model_update_on"]], "mme_legacy_dcline_pf_ac (class in mp)": [[398, "mp.mme_legacy_dcline_pf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_dc method)": [[399, "mp.mme_legacy_dcline_pf_dc.data_model_update_on"]], "mme_legacy_dcline_pf_dc (class in mp)": [[399, "mp.mme_legacy_dcline_pf_dc"]], "data_model_update_on() (mp.mme_line3p method)": [[400, "mp.mme_line3p.data_model_update_on"]], "mme_line3p (class in mp)": [[400, "mp.mme_line3p"]], "name() (mp.mme_line3p method)": [[400, "mp.mme_line3p.name"]], "interior_x0() (mp.mme_line3p_opf method)": [[401, "mp.mme_line3p_opf.interior_x0"]], "mme_line3p_opf (class in mp)": [[401, "mp.mme_line3p_opf"]], "mme_load (class in mp)": [[402, "mp.mme_load"]], "name() (mp.mme_load method)": [[402, "mp.mme_load.name"]], "data_model_update_on() (mp.mme_load_cpf method)": [[403, "mp.mme_load_cpf.data_model_update_on"]], "mme_load_cpf (class in mp)": [[403, "mp.mme_load_cpf"]], "data_model_update_on() (mp.mme_load_pf_ac method)": [[404, "mp.mme_load_pf_ac.data_model_update_on"]], "mme_load_pf_ac (class in mp)": [[404, "mp.mme_load_pf_ac"]], "data_model_update_on() (mp.mme_load_pf_dc method)": [[405, "mp.mme_load_pf_dc.data_model_update_on"]], "mme_load_pf_dc (class in mp)": [[405, "mp.mme_load_pf_dc"]], "add_constraints() (mp.mme_reserve_gen method)": [[406, "mp.mme_reserve_gen.add_constraints"]], "add_costs() (mp.mme_reserve_gen method)": [[406, "mp.mme_reserve_gen.add_costs"]], "add_vars() (mp.mme_reserve_gen method)": [[406, "mp.mme_reserve_gen.add_vars"]], "data_model_update_on() (mp.mme_reserve_gen method)": [[406, "mp.mme_reserve_gen.data_model_update_on"]], "mme_reserve_gen (class in mp)": [[406, "mp.mme_reserve_gen"]], "name() (mp.mme_reserve_gen method)": [[406, "mp.mme_reserve_gen.name"]], "add_constraints() (mp.mme_reserve_zone method)": [[407, "mp.mme_reserve_zone.add_constraints"]], "data_model_update_on() (mp.mme_reserve_zone method)": [[407, "mp.mme_reserve_zone.data_model_update_on"]], "mme_reserve_zone (class in mp)": [[407, "mp.mme_reserve_zone"]], "name() (mp.mme_reserve_zone method)": [[407, "mp.mme_reserve_zone.name"]], "mme_shunt (class in mp)": [[408, "mp.mme_shunt"]], "name() (mp.mme_shunt method)": [[408, "mp.mme_shunt.name"]], "data_model_update_on() (mp.mme_shunt_cpf method)": [[409, "mp.mme_shunt_cpf.data_model_update_on"]], "mme_shunt_cpf (class in mp)": [[409, "mp.mme_shunt_cpf"]], "data_model_update_on() (mp.mme_shunt_pf_ac method)": [[410, "mp.mme_shunt_pf_ac.data_model_update_on"]], "mme_shunt_pf_ac (class in mp)": [[410, "mp.mme_shunt_pf_ac"]], "data_model_update_on() (mp.mme_shunt_pf_dc method)": [[411, "mp.mme_shunt_pf_dc.data_model_update_on"]], "mme_shunt_pf_dc (class in mp)": [[411, "mp.mme_shunt_pf_dc"]], "data_model_update_on() (mp.mme_xfmr3p method)": [[412, "mp.mme_xfmr3p.data_model_update_on"]], "mme_xfmr3p (class in mp)": [[412, "mp.mme_xfmr3p"]], "name() (mp.mme_xfmr3p method)": [[412, "mp.mme_xfmr3p.name"]], "interior_x0() (mp.mme_xfmr3p_opf method)": [[413, "mp.mme_xfmr3p_opf.interior_x0"]], "mme_xfmr3p_opf (class in mp)": [[413, "mp.mme_xfmr3p_opf"]], "add_node() (mp.net_model method)": [[414, "mp.net_model.add_node"]], "add_nodes() (mp.net_model method)": [[414, "mp.net_model.add_nodes"]], "add_port() (mp.net_model method)": [[414, "mp.net_model.add_port"]], "add_state() (mp.net_model method)": [[414, "mp.net_model.add_state"]], "add_states() (mp.net_model method)": [[414, "mp.net_model.add_states"]], "add_var() (mp.net_model method)": [[414, "mp.net_model.add_var"]], "add_vvars() (mp.net_model method)": [[414, "mp.net_model.add_vvars"]], "add_zvars() (mp.net_model method)": [[414, "mp.net_model.add_zvars"]], "build() (mp.net_model method)": [[414, "mp.net_model.build"]], "build_params() (mp.net_model method)": [[414, "mp.net_model.build_params"]], "def_set_types() (mp.net_model method)": [[414, "mp.net_model.def_set_types"]], "display() (mp.net_model method)": [[414, "mp.net_model.display"]], "ensure_ref_node() (mp.net_model method)": [[414, "mp.net_model.ensure_ref_node"]], "get_node_idx() (mp.net_model method)": [[414, "mp.net_model.get_node_idx"]], "get_port_idx() (mp.net_model method)": [[414, "mp.net_model.get_port_idx"]], "get_state_idx() (mp.net_model method)": [[414, "mp.net_model.get_state_idx"]], "init_set_types() (mp.net_model method)": [[414, "mp.net_model.init_set_types"]], "name() (mp.net_model method)": [[414, "mp.net_model.name"]], "net_model (class in mp)": [[414, "mp.net_model"]], "node (mp.net_model attribute)": [[414, "mp.net_model.node"]], "node_types() (mp.net_model method)": [[414, "mp.net_model.node_types"]], "np() (mp.net_model method)": [[414, "mp.net_model.np"]], "nv (mp.net_model attribute)": [[414, "mp.net_model.nv"]], "nz() (mp.net_model method)": [[414, "mp.net_model.nz"]], "params_var() (mp.net_model method)": [[414, "mp.net_model.params_var"]], "port (mp.net_model attribute)": [[414, "mp.net_model.port"]], "set_node_type_pq() (mp.net_model method)": [[414, "mp.net_model.set_node_type_pq"]], "set_node_type_pv() (mp.net_model method)": [[414, "mp.net_model.set_node_type_pv"]], "set_node_type_ref() (mp.net_model method)": [[414, "mp.net_model.set_node_type_ref"]], "set_type_idx_map() (mp.net_model method)": [[414, "mp.net_model.set_type_idx_map"]], "set_type_label() (mp.net_model method)": [[414, "mp.net_model.set_type_label"]], "stack_matrix_params() (mp.net_model method)": [[414, "mp.net_model.stack_matrix_params"]], "stack_vector_params() (mp.net_model method)": [[414, "mp.net_model.stack_vector_params"]], "state (mp.net_model attribute)": [[414, "mp.net_model.state"]], "the_np (mp.net_model attribute)": [[414, "mp.net_model.the_np"]], "the_nz (mp.net_model attribute)": [[414, "mp.net_model.the_nz"]], "build_params() (mp.net_model_ac method)": [[415, "mp.net_model_ac.build_params"]], "def_set_types() (mp.net_model_ac method)": [[415, "mp.net_model_ac.def_set_types"]], "get_va() (mp.net_model_ac method)": [[415, "mp.net_model_ac.get_va"]], "net_model_ac (class in mp)": [[415, "mp.net_model_ac"]], "nodal_complex_current_balance() (mp.net_model_ac method)": [[415, "mp.net_model_ac.nodal_complex_current_balance"]], "nodal_complex_current_balance_hess() (mp.net_model_ac method)": [[415, "mp.net_model_ac.nodal_complex_current_balance_hess"]], "nodal_complex_power_balance() (mp.net_model_ac method)": [[415, "mp.net_model_ac.nodal_complex_power_balance"]], "nodal_complex_power_balance_hess() (mp.net_model_ac method)": [[415, "mp.net_model_ac.nodal_complex_power_balance_hess"]], "port_inj_nln() (mp.net_model_ac method)": [[415, "mp.net_model_ac.port_inj_nln"]], "port_inj_nln_hess() (mp.net_model_ac method)": [[415, "mp.net_model_ac.port_inj_nln_hess"]], "port_inj_soln() (mp.net_model_ac method)": [[415, "mp.net_model_ac.port_inj_soln"]], "def_set_types() (mp.net_model_acc method)": [[416, "mp.net_model_acc.def_set_types"]], "initial_voltage_angle() (mp.net_model_acc method)": [[416, "mp.net_model_acc.initial_voltage_angle"]], "net_model_acc (class in mp)": [[416, "mp.net_model_acc"]], "net_model_acc() (mp.net_model_acc method)": [[416, "mp.net_model_acc.net_model_acc"]], "def_set_types() (mp.net_model_acp method)": [[417, "mp.net_model_acp.def_set_types"]], "initial_voltage_angle() (mp.net_model_acp method)": [[417, "mp.net_model_acp.initial_voltage_angle"]], "net_model_acp (class in mp)": [[417, "mp.net_model_acp"]], "net_model_acp() (mp.net_model_acp method)": [[417, "mp.net_model_acp.net_model_acp"]], "build_params() (mp.net_model_dc method)": [[418, "mp.net_model_dc.build_params"]], "def_set_types() (mp.net_model_dc method)": [[418, "mp.net_model_dc.def_set_types"]], "net_model_dc (class in mp)": [[418, "mp.net_model_dc"]], "net_model_dc() (mp.net_model_dc method)": [[418, "mp.net_model_dc.net_model_dc"]], "port_inj_soln() (mp.net_model_dc method)": [[418, "mp.net_model_dc.port_inj_soln"]], "va (mp.net_model_dc attribute)": [[418, "mp.net_model_dc.va"]], "z (mp.net_model_dc attribute)": [[418, "mp.net_model_dc.z"]], "c (mp.nm_element attribute)": [[419, "mp.nm_element.C"]], "d (mp.nm_element attribute)": [[419, "mp.nm_element.D"]], "add_nodes() (mp.nm_element method)": [[419, "mp.nm_element.add_nodes"]], "add_states() (mp.nm_element method)": [[419, "mp.nm_element.add_states"]], "add_vvars() (mp.nm_element method)": [[419, "mp.nm_element.add_vvars"]], "add_zvars() (mp.nm_element method)": [[419, "mp.nm_element.add_zvars"]], "build_params() (mp.nm_element method)": [[419, "mp.nm_element.build_params"]], "count() (mp.nm_element method)": [[419, "mp.nm_element.count"]], "data_model_element() (mp.nm_element method)": [[419, "mp.nm_element.data_model_element"]], "display() (mp.nm_element method)": [[419, "mp.nm_element.display"]], "get_nv_() (mp.nm_element method)": [[419, "mp.nm_element.get_nv_"]], "incidence_matrix() (mp.nm_element method)": [[419, "mp.nm_element.incidence_matrix"]], "math_model_element() (mp.nm_element method)": [[419, "mp.nm_element.math_model_element"]], "name() (mp.nm_element method)": [[419, "mp.nm_element.name"]], "nk (mp.nm_element attribute)": [[419, "mp.nm_element.nk"]], "nm_element (class in mp)": [[419, "mp.nm_element"]], "nn() (mp.nm_element method)": [[419, "mp.nm_element.nn"]], "node_indices() (mp.nm_element method)": [[419, "mp.nm_element.node_indices"]], "node_types() (mp.nm_element method)": [[419, "mp.nm_element.node_types"]], "np() (mp.nm_element method)": [[419, "mp.nm_element.np"]], "nz() (mp.nm_element method)": [[419, "mp.nm_element.nz"]], "set_node_type_pq() (mp.nm_element method)": [[419, "mp.nm_element.set_node_type_pq"]], "set_node_type_pv() (mp.nm_element method)": [[419, "mp.nm_element.set_node_type_pv"]], "set_node_type_ref() (mp.nm_element method)": [[419, "mp.nm_element.set_node_type_ref"]], "soln (mp.nm_element attribute)": [[419, "mp.nm_element.soln"]], "x2vz() (mp.nm_element method)": [[419, "mp.nm_element.x2vz"]], "name() (mp.nme_branch method)": [[420, "mp.nme_branch.name"]], "nme_branch (class in mp)": [[420, "mp.nme_branch"]], "np() (mp.nme_branch method)": [[420, "mp.nme_branch.np"]], "build_params() (mp.nme_branch_ac method)": [[421, "mp.nme_branch_ac.build_params"]], "nme_branch_ac (class in mp)": [[421, "mp.nme_branch_ac"]], "ang_diff_fcn() (mp.nme_branch_acc method)": [[422, "mp.nme_branch_acc.ang_diff_fcn"]], "ang_diff_hess() (mp.nme_branch_acc method)": [[422, "mp.nme_branch_acc.ang_diff_hess"]], "nme_branch_acc (class in mp)": [[422, "mp.nme_branch_acc"]], "nme_branch_acp (class in mp)": [[423, "mp.nme_branch_acp"]], "build_params() (mp.nme_branch_dc method)": [[424, "mp.nme_branch_dc.build_params"]], "nme_branch_dc (class in mp)": [[424, "mp.nme_branch_dc"]], "name() (mp.nme_bus method)": [[425, "mp.nme_bus.name"]], "nme_bus (class in mp)": [[425, "mp.nme_bus"]], "nn() (mp.nme_bus method)": [[425, "mp.nme_bus.nn"]], "node_types() (mp.nme_bus method)": [[425, "mp.nme_bus.node_types"]], "set_node_type_pq() (mp.nme_bus method)": [[425, "mp.nme_bus.set_node_type_pq"]], "set_node_type_pv() (mp.nme_bus method)": [[425, "mp.nme_bus.set_node_type_pv"]], "set_node_type_ref() (mp.nme_bus method)": [[425, "mp.nme_bus.set_node_type_ref"]], "name() (mp.nme_bus3p method)": [[426, "mp.nme_bus3p.name"]], "nme_bus3p (class in mp)": [[426, "mp.nme_bus3p"]], "nn() (mp.nme_bus3p method)": [[426, "mp.nme_bus3p.nn"]], "node_types() (mp.nme_bus3p method)": [[426, "mp.nme_bus3p.node_types"]], "add_vvars() (mp.nme_bus3p_acc method)": [[427, "mp.nme_bus3p_acc.add_vvars"]], "nme_bus3p_acc (class in mp)": [[427, "mp.nme_bus3p_acc"]], "add_vvars() (mp.nme_bus3p_acp method)": [[428, "mp.nme_bus3p_acp.add_vvars"]], "nme_bus3p_acp (class in mp)": [[428, "mp.nme_bus3p_acp"]], "add_vvars() (mp.nme_bus_acc method)": [[429, "mp.nme_bus_acc.add_vvars"]], "nme_bus_acc (class in mp)": [[429, "mp.nme_bus_acc"]], "add_vvars() (mp.nme_bus_acp method)": [[430, "mp.nme_bus_acp.add_vvars"]], "nme_bus_acp (class in mp)": [[430, "mp.nme_bus_acp"]], "add_vvars() (mp.nme_bus_dc method)": [[431, "mp.nme_bus_dc.add_vvars"]], "nme_bus_dc (class in mp)": [[431, "mp.nme_bus_dc"]], "add_zvars() (mp.nme_buslink method)": [[432, "mp.nme_buslink.add_zvars"]], "build_params() (mp.nme_buslink method)": [[432, "mp.nme_buslink.build_params"]], "name() (mp.nme_buslink method)": [[432, "mp.nme_buslink.name"]], "nme_buslink (class in mp)": [[432, "mp.nme_buslink"]], "np() (mp.nme_buslink method)": [[432, "mp.nme_buslink.np"]], "nz() (mp.nme_buslink method)": [[432, "mp.nme_buslink.nz"]], "voltage_constraints() (mp.nme_buslink method)": [[432, "mp.nme_buslink.voltage_constraints"]], "nme_buslink_acc (class in mp)": [[433, "mp.nme_buslink_acc"]], "nme_buslink_acp (class in mp)": [[434, "mp.nme_buslink_acp"]], "name() (mp.nme_gen method)": [[435, "mp.nme_gen.name"]], "nme_gen (class in mp)": [[435, "mp.nme_gen"]], "np() (mp.nme_gen method)": [[435, "mp.nme_gen.np"]], "nz() (mp.nme_gen method)": [[435, "mp.nme_gen.nz"]], "add_zvars() (mp.nme_gen3p method)": [[436, "mp.nme_gen3p.add_zvars"]], "build_params() (mp.nme_gen3p method)": [[436, "mp.nme_gen3p.build_params"]], "name() (mp.nme_gen3p method)": [[436, "mp.nme_gen3p.name"]], "nme_gen3p (class in mp)": [[436, "mp.nme_gen3p"]], "np() (mp.nme_gen3p method)": [[436, "mp.nme_gen3p.np"]], "nz() (mp.nme_gen3p method)": [[436, "mp.nme_gen3p.nz"]], "nme_gen3p_acc (class in mp)": [[437, "mp.nme_gen3p_acc"]], "nme_gen3p_acp (class in mp)": [[438, "mp.nme_gen3p_acp"]], "add_zvars() (mp.nme_gen_ac method)": [[439, "mp.nme_gen_ac.add_zvars"]], "build_params() (mp.nme_gen_ac method)": [[439, "mp.nme_gen_ac.build_params"]], "nme_gen_ac (class in mp)": [[439, "mp.nme_gen_ac"]], "nme_gen_acc (class in mp)": [[440, "mp.nme_gen_acc"]], "nme_gen_acp (class in mp)": [[441, "mp.nme_gen_acp"]], "add_zvars() (mp.nme_gen_dc method)": [[442, "mp.nme_gen_dc.add_zvars"]], "build_params() (mp.nme_gen_dc method)": [[442, "mp.nme_gen_dc.build_params"]], "nme_gen_dc (class in mp)": [[442, "mp.nme_gen_dc"]], "name() (mp.nme_legacy_dcline method)": [[443, "mp.nme_legacy_dcline.name"]], "nme_legacy_dcline (class in mp)": [[443, "mp.nme_legacy_dcline"]], "np() (mp.nme_legacy_dcline method)": [[443, "mp.nme_legacy_dcline.np"]], "nz() (mp.nme_legacy_dcline method)": [[443, "mp.nme_legacy_dcline.nz"]], "add_zvars() (mp.nme_legacy_dcline_ac method)": [[444, "mp.nme_legacy_dcline_ac.add_zvars"]], "build_params() (mp.nme_legacy_dcline_ac method)": [[444, "mp.nme_legacy_dcline_ac.build_params"]], "nme_legacy_dcline_ac (class in mp)": [[444, "mp.nme_legacy_dcline_ac"]], "nme_legacy_dcline_acc (class in mp)": [[445, "mp.nme_legacy_dcline_acc"]], "nme_legacy_dcline_acp (class in mp)": [[446, "mp.nme_legacy_dcline_acp"]], "add_zvars() (mp.nme_legacy_dcline_dc method)": [[447, "mp.nme_legacy_dcline_dc.add_zvars"]], "build_params() (mp.nme_legacy_dcline_dc method)": [[447, "mp.nme_legacy_dcline_dc.build_params"]], "nme_legacy_dcline_dc (class in mp)": [[447, "mp.nme_legacy_dcline_dc"]], "build_params() (mp.nme_line3p method)": [[448, "mp.nme_line3p.build_params"]], "name() (mp.nme_line3p method)": [[448, "mp.nme_line3p.name"]], "nme_line3p (class in mp)": [[448, "mp.nme_line3p"]], "np() (mp.nme_line3p method)": [[448, "mp.nme_line3p.np"]], "vec2symmat_stacked() (mp.nme_line3p method)": [[448, "mp.nme_line3p.vec2symmat_stacked"]], "name() (mp.nme_load method)": [[449, "mp.nme_load.name"]], "nme_load (class in mp)": [[449, "mp.nme_load"]], "np() (mp.nme_load method)": [[449, "mp.nme_load.np"]], "build_params() (mp.nme_load3p method)": [[450, "mp.nme_load3p.build_params"]], "name() (mp.nme_load3p method)": [[450, "mp.nme_load3p.name"]], "nme_load3p (class in mp)": [[450, "mp.nme_load3p"]], "np() (mp.nme_load3p method)": [[450, "mp.nme_load3p.np"]], "build_params() (mp.nme_load_ac method)": [[451, "mp.nme_load_ac.build_params"]], "nme_load_ac (class in mp)": [[451, "mp.nme_load_ac"]], "port_inj_current_nln() (mp.nme_load_ac method)": [[451, "mp.nme_load_ac.port_inj_current_nln"]], "port_inj_power_nln() (mp.nme_load_ac method)": [[451, "mp.nme_load_ac.port_inj_power_nln"]], "nme_load_acc (class in mp)": [[452, "mp.nme_load_acc"]], "nme_load_acp (class in mp)": [[453, "mp.nme_load_acp"]], "build_params() (mp.nme_load_dc method)": [[454, "mp.nme_load_dc.build_params"]], "nme_load_dc (class in mp)": [[454, "mp.nme_load_dc"]], "name() (mp.nme_shunt method)": [[455, "mp.nme_shunt.name"]], "nme_shunt (class in mp)": [[455, "mp.nme_shunt"]], "np() (mp.nme_shunt method)": [[455, "mp.nme_shunt.np"]], "build_params() (mp.nme_shunt_ac method)": [[456, "mp.nme_shunt_ac.build_params"]], "nme_shunt_ac (class in mp)": [[456, "mp.nme_shunt_ac"]], "nme_shunt_acc (class in mp)": [[457, "mp.nme_shunt_acc"]], "nme_shunt_acp (class in mp)": [[458, "mp.nme_shunt_acp"]], "build_params() (mp.nme_shunt_dc method)": [[459, "mp.nme_shunt_dc.build_params"]], "nme_shunt_dc (class in mp)": [[459, "mp.nme_shunt_dc"]], "build_params() (mp.nme_xfmr3p method)": [[460, "mp.nme_xfmr3p.build_params"]], "name() (mp.nme_xfmr3p method)": [[460, "mp.nme_xfmr3p.name"]], "nme_xfmr3p (class in mp)": [[460, "mp.nme_xfmr3p"]], "np() (mp.nme_xfmr3p method)": [[460, "mp.nme_xfmr3p.np"]], "cache (mp.sm_legacy_cost attribute)": [[461, "mp.sm_legacy_cost.cache"]], "sm_legacy_cost (class in mp)": [[461, "mp.sm_legacy_cost"]], "sm_legacy_cost() (mp.sm_legacy_cost method)": [[461, "mp.sm_legacy_cost.sm_legacy_cost"]], "data_model_build() (mp.task method)": [[462, "mp.task.data_model_build"]], "data_model_build_post() (mp.task method)": [[462, "mp.task.data_model_build_post"]], "data_model_build_pre() (mp.task method)": [[462, "mp.task.data_model_build_pre"]], "data_model_class() (mp.task method)": [[462, "mp.task.data_model_class"]], "data_model_class_default() (mp.task method)": [[462, "mp.task.data_model_class_default"]], "data_model_create() (mp.task method)": [[462, "mp.task.data_model_create"]], "dm (mp.task attribute)": [[462, "mp.task.dm"]], "dm_converter_build() (mp.task method)": [[462, "mp.task.dm_converter_build"]], "dm_converter_class() (mp.task method)": [[462, "mp.task.dm_converter_class"]], "dm_converter_class_mpc2_default() (mp.task method)": [[462, "mp.task.dm_converter_class_mpc2_default"]], "dm_converter_create() (mp.task method)": [[462, "mp.task.dm_converter_create"]], "dmc (mp.task attribute)": [[462, "mp.task.dmc"]], "et (mp.task attribute)": [[462, "mp.task.et"]], "i_dm (mp.task attribute)": [[462, "mp.task.i_dm"]], "i_mm (mp.task attribute)": [[462, "mp.task.i_mm"]], "i_nm (mp.task attribute)": [[462, "mp.task.i_nm"]], "load_dm() (mp.task method)": [[462, "mp.task.load_dm"]], "math_model_build() (mp.task method)": [[462, "mp.task.math_model_build"]], "math_model_class() (mp.task method)": [[462, "mp.task.math_model_class"]], "math_model_class_default() (mp.task method)": [[462, "mp.task.math_model_class_default"]], "math_model_create() (mp.task method)": [[462, "mp.task.math_model_create"]], "math_model_opt() (mp.task method)": [[462, "mp.task.math_model_opt"]], "message (mp.task attribute)": [[462, "mp.task.message"]], "mm (mp.task attribute)": [[462, "mp.task.mm"]], "mm_opt (mp.task attribute)": [[462, "mp.task.mm_opt"]], "name (mp.task attribute)": [[462, "mp.task.name"]], "network_model_build() (mp.task method)": [[462, "mp.task.network_model_build"]], "network_model_build_post() (mp.task method)": [[462, "mp.task.network_model_build_post"]], "network_model_build_pre() (mp.task method)": [[462, "mp.task.network_model_build_pre"]], "network_model_class() (mp.task method)": [[462, "mp.task.network_model_class"]], "network_model_class_default() (mp.task method)": [[462, "mp.task.network_model_class_default"]], "network_model_create() (mp.task method)": [[462, "mp.task.network_model_create"]], "network_model_update() (mp.task method)": [[462, "mp.task.network_model_update"]], "network_model_x_soln() (mp.task method)": [[462, "mp.task.network_model_x_soln"]], "next_dm() (mp.task method)": [[462, "mp.task.next_dm"]], "next_mm() (mp.task method)": [[462, "mp.task.next_mm"]], "next_nm() (mp.task method)": [[462, "mp.task.next_nm"]], "nm (mp.task attribute)": [[462, "mp.task.nm"]], "print_soln() (mp.task method)": [[462, "mp.task.print_soln"]], "print_soln_header() (mp.task method)": [[462, "mp.task.print_soln_header"]], "run() (mp.task method)": [[462, "mp.task.run"]], "run_post() (mp.task method)": [[462, "mp.task.run_post"]], "run_pre() (mp.task method)": [[462, "mp.task.run_pre"]], "save_soln() (mp.task method)": [[462, "mp.task.save_soln"]], "success (mp.task attribute)": [[462, "mp.task.success"]], "tag (mp.task attribute)": [[462, "mp.task.tag"]], "task (class in mp)": [[462, "mp.task"]], "data_model_build() (mp.task_cpf method)": [[463, "mp.task_cpf.data_model_build"]], "data_model_class_default() (mp.task_cpf method)": [[463, "mp.task_cpf.data_model_class_default"]], "dm_converter_class() (mp.task_cpf method)": [[463, "mp.task_cpf.dm_converter_class"]], "math_model_class_default() (mp.task_cpf method)": [[463, "mp.task_cpf.math_model_class_default"]], "math_model_opt() (mp.task_cpf method)": [[463, "mp.task_cpf.math_model_opt"]], "network_model_build() (mp.task_cpf method)": [[463, "mp.task_cpf.network_model_build"]], "network_model_update() (mp.task_cpf method)": [[463, "mp.task_cpf.network_model_update"]], "network_model_x_soln() (mp.task_cpf method)": [[463, "mp.task_cpf.network_model_x_soln"]], "next_mm() (mp.task_cpf method)": [[463, "mp.task_cpf.next_mm"]], "run_pre() (mp.task_cpf method)": [[463, "mp.task_cpf.run_pre"]], "task_cpf (class in mp)": [[463, "mp.task_cpf"]], "task_cpf() (mp.task_cpf method)": [[463, "mp.task_cpf.task_cpf"]], "warmstart (mp.task_cpf attribute)": [[463, "mp.task_cpf.warmstart"]], "legacy_post_run() (mp.task_cpf_legacy method)": [[464, "mp.task_cpf_legacy.legacy_post_run"]], "run_post() (mp.task_cpf_legacy method)": [[464, "mp.task_cpf_legacy.run_post"]], "run_pre() (mp.task_cpf_legacy method)": [[464, "mp.task_cpf_legacy.run_pre"]], "task_cpf_legacy (class in mp)": [[464, "mp.task_cpf_legacy"]], "data_model_build_post() (mp.task_opf method)": [[465, "mp.task_opf.data_model_build_post"]], "data_model_class_default() (mp.task_opf method)": [[465, "mp.task_opf.data_model_class_default"]], "dc (mp.task_opf attribute)": [[465, "mp.task_opf.dc"]], "math_model_class_default() (mp.task_opf method)": [[465, "mp.task_opf.math_model_class_default"]], "network_model_class_default() (mp.task_opf method)": [[465, "mp.task_opf.network_model_class_default"]], "print_soln_header() (mp.task_opf method)": [[465, "mp.task_opf.print_soln_header"]], "run_pre() (mp.task_opf method)": [[465, "mp.task_opf.run_pre"]], "task_opf (class in mp)": [[465, "mp.task_opf"]], "data_model_build_post() (mp.task_opf_legacy method)": [[466, "mp.task_opf_legacy.data_model_build_post"]], "dm_converter_class_mpc2_default() (mp.task_opf_legacy method)": [[466, "mp.task_opf_legacy.dm_converter_class_mpc2_default"]], "legacy_post_run() (mp.task_opf_legacy method)": [[466, "mp.task_opf_legacy.legacy_post_run"]], "math_model_class_default() (mp.task_opf_legacy method)": [[466, "mp.task_opf_legacy.math_model_class_default"]], "run_post() (mp.task_opf_legacy method)": [[466, "mp.task_opf_legacy.run_post"]], "run_pre() (mp.task_opf_legacy method)": [[466, "mp.task_opf_legacy.run_pre"]], "task_opf_legacy (class in mp)": [[466, "mp.task_opf_legacy"]], "dc (mp.task_pf attribute)": [[467, "mp.task_pf.dc"]], "enforce_q_lims() (mp.task_pf method)": [[467, "mp.task_pf.enforce_q_lims"]], "fixed_q_idx (mp.task_pf attribute)": [[467, "mp.task_pf.fixed_q_idx"]], "fixed_q_qty (mp.task_pf attribute)": [[467, "mp.task_pf.fixed_q_qty"]], "iterations (mp.task_pf attribute)": [[467, "mp.task_pf.iterations"]], "math_model_class_default() (mp.task_pf method)": [[467, "mp.task_pf.math_model_class_default"]], "name (mp.task_pf attribute)": [[467, "mp.task_pf.name"]], "network_model_build_post() (mp.task_pf method)": [[467, "mp.task_pf.network_model_build_post"]], "network_model_class_default() (mp.task_pf method)": [[467, "mp.task_pf.network_model_class_default"]], "network_model_x_soln() (mp.task_pf method)": [[467, "mp.task_pf.network_model_x_soln"]], "next_dm() (mp.task_pf method)": [[467, "mp.task_pf.next_dm"]], "ref (mp.task_pf attribute)": [[467, "mp.task_pf.ref"]], "ref0 (mp.task_pf attribute)": [[467, "mp.task_pf.ref0"]], "run_pre() (mp.task_pf method)": [[467, "mp.task_pf.run_pre"]], "tag (mp.task_pf attribute)": [[467, "mp.task_pf.tag"]], "task_pf (class in mp)": [[467, "mp.task_pf"]], "va_ref0 (mp.task_pf attribute)": [[467, "mp.task_pf.va_ref0"]], "legacy_post_run() (mp.task_pf_legacy method)": [[468, "mp.task_pf_legacy.legacy_post_run"]], "run_post() (mp.task_pf_legacy method)": [[468, "mp.task_pf_legacy.run_post"]], "run_pre() (mp.task_pf_legacy method)": [[468, "mp.task_pf_legacy.run_pre"]], "task_pf_legacy (class in mp)": [[468, "mp.task_pf_legacy"]], "run_pre_legacy() (mp.task_shared_legacy method)": [[469, "mp.task_shared_legacy.run_pre_legacy"]], "task_shared_legacy (class in mp)": [[469, "mp.task_shared_legacy"]], "dm_element_classes() (mp.xt_3p method)": [[470, "mp.xt_3p.dm_element_classes"]], "dmc_element_classes() (mp.xt_3p method)": [[470, "mp.xt_3p.dmc_element_classes"]], "mm_element_classes() (mp.xt_3p method)": [[470, "mp.xt_3p.mm_element_classes"]], "nm_element_classes() (mp.xt_3p method)": [[470, "mp.xt_3p.nm_element_classes"]], "xt_3p (class in mp)": [[470, "mp.xt_3p"]], "dm_element_classes() (mp.xt_legacy_dcline method)": [[471, "mp.xt_legacy_dcline.dm_element_classes"]], "dmc_element_classes() (mp.xt_legacy_dcline method)": [[471, "mp.xt_legacy_dcline.dmc_element_classes"]], "mm_element_classes() (mp.xt_legacy_dcline method)": [[471, "mp.xt_legacy_dcline.mm_element_classes"]], "nm_element_classes() (mp.xt_legacy_dcline method)": [[471, "mp.xt_legacy_dcline.nm_element_classes"]], "xt_legacy_dcline (class in mp)": [[471, "mp.xt_legacy_dcline"]], "mm_element_classes() (mp.xt_oval_cap_curve method)": [[472, "mp.xt_oval_cap_curve.mm_element_classes"]], "xt_oval_cap_curve (class in mp)": [[472, "mp.xt_oval_cap_curve"]], "dm_element_classes() (mp.xt_reserves method)": [[473, "mp.xt_reserves.dm_element_classes"]], "dmc_element_classes() (mp.xt_reserves method)": [[473, "mp.xt_reserves.dmc_element_classes"]], "mm_element_classes() (mp.xt_reserves method)": [[473, "mp.xt_reserves.mm_element_classes"]], "xt_reserves (class in mp)": [[473, "mp.xt_reserves"]], "display() (mp_table method)": [[474, "mp_table.display"]], "end() (mp_table method)": [[474, "mp_table.end"]], "extract_named_args() (mp_table static method)": [[474, "mp_table.extract_named_args"]], "horzcat() (mp_table method)": [[474, "mp_table.horzcat"]], "isempty() (mp_table method)": [[474, "mp_table.isempty"]], "istable() (mp_table method)": [[474, "mp_table.istable"]], "mp_table (built-in class)": [[474, "mp_table"]], "mp_table() (mp_table method)": [[474, "mp_table.mp_table"]], "size() (mp_table method)": [[474, "mp_table.size"]], "subsasgn() (mp_table method)": [[474, "mp_table.subsasgn"]], "subsref() (mp_table method)": [[474, "mp_table.subsref"]], "vertcat() (mp_table method)": [[474, "mp_table.vertcat"]], "get_table() (mp_table_subclass method)": [[475, "mp_table_subclass.get_table"]], "mp_table_subclass (built-in class)": [[475, "mp_table_subclass"]], "set_table() (mp_table_subclass method)": [[475, "mp_table_subclass.set_table"]], "install_matpower() (built-in function)": [[477, "install_matpower"]], "load_dm() (in module mp)": [[478, "mp.load_dm"]], "mp_table_class() (built-in function)": [[479, "mp_table_class"]], "run_cpf() (built-in function)": [[480, "run_cpf"]], "run_mp() (built-in function)": [[481, "run_mp"]], "run_opf() (built-in function)": [[482, "run_opf"]], "run_pf() (built-in function)": [[483, "run_pf"]], "add_legacy_cost() (opf_model method)": [[486, "opf_model.add_legacy_cost"]], "add_named_set() (opf_model method)": [[486, "opf_model.add_named_set"]], "cost (opf_model attribute)": [[486, "opf_model.cost"]], "def_set_types() (opf_model method)": [[486, "opf_model.def_set_types"]], "display() (opf_model method)": [[486, "opf_model.display"]], "eval_legacy_cost() (opf_model method)": [[486, "opf_model.eval_legacy_cost"]], "get_mpc() (opf_model method)": [[486, "opf_model.get_mpc"]], "init_set_types() (opf_model method)": [[486, "opf_model.init_set_types"]], "mpc (opf_model attribute)": [[486, "opf_model.mpc"]], "opf_model (built-in class)": [[486, "opf_model"]], "opf_model() (opf_model method)": [[486, "opf_model.opf_model"]], "params_legacy_cost() (opf_model method)": [[486, "opf_model.params_legacy_cost"]], "set_mpc() (opf_model method)": [[486, "opf_model.set_mpc"]], "add_userfcn() (built-in function)": [[487, "add_userfcn"]], "apply_changes() (built-in function)": [[488, "apply_changes"]], "bustypes() (built-in function)": [[489, "bustypes"]], "calc_branch_angle() (built-in function)": [[490, "calc_branch_angle"]], "calc_v_i_sum() (built-in function)": [[491, "calc_v_i_sum"]], "calc_v_pq_sum() (built-in function)": [[492, "calc_v_pq_sum"]], "calc_v_y_sum() (built-in function)": [[493, "calc_v_y_sum"]], "case_info() (built-in function)": [[494, "case_info"]], "caseformat() (built-in function)": [[495, "caseformat"]], "cdf2mpc() (built-in function)": [[496, "cdf2mpc"]], "compare_case() (built-in function)": [[497, "compare_case"]], "connected_components() (built-in function)": [[498, "connected_components"]], "cpf_corrector() (built-in function)": [[499, "cpf_corrector"]], "cpf_current_mpc() (built-in function)": [[500, "cpf_current_mpc"]], "cpf_default_callback() (built-in function)": [[501, "cpf_default_callback"]], "cpf_detect_events() (built-in function)": [[502, "cpf_detect_events"]], "cpf_flim_event() (built-in function)": [[503, "cpf_flim_event"]], "cpf_flim_event_cb() (built-in function)": [[504, "cpf_flim_event_cb"]], "cpf_nose_event() (built-in function)": [[505, "cpf_nose_event"]], "cpf_nose_event_cb() (built-in function)": [[506, "cpf_nose_event_cb"]], "cpf_p() (built-in function)": [[507, "cpf_p"]], "cpf_p_jac() (built-in function)": [[508, "cpf_p_jac"]], "cpf_plim_event() (built-in function)": [[509, "cpf_plim_event"]], "cpf_plim_event_cb() (built-in function)": [[510, "cpf_plim_event_cb"]], "cpf_predictor() (built-in function)": [[511, "cpf_predictor"]], "cpf_qlim_event() (built-in function)": [[512, "cpf_qlim_event"]], "cpf_qlim_event_cb() (built-in function)": [[513, "cpf_qlim_event_cb"]], "cpf_register_callback() (built-in function)": [[514, "cpf_register_callback"]], "cpf_register_event() (built-in function)": [[515, "cpf_register_event"]], "cpf_tangent() (built-in function)": [[516, "cpf_tangent"]], "cpf_target_lam_event() (built-in function)": [[517, "cpf_target_lam_event"]], "cpf_target_lam_event_cb() (built-in function)": [[518, "cpf_target_lam_event_cb"]], "cpf_vlim_event() (built-in function)": [[519, "cpf_vlim_event"]], "cpf_vlim_event_cb() (built-in function)": [[520, "cpf_vlim_event_cb"]], "d2abr_dv2() (built-in function)": [[521, "d2Abr_dV2"]], "d2ibr_dv2() (built-in function)": [[522, "d2Ibr_dV2"]], "d2imis_dv2() (built-in function)": [[523, "d2Imis_dV2"]], "d2imis_dvdsg() (built-in function)": [[524, "d2Imis_dVdSg"]], "d2sbr_dv2() (built-in function)": [[525, "d2Sbr_dV2"]], "d2sbus_dv2() (built-in function)": [[526, "d2Sbus_dV2"]], "dabr_dv() (built-in function)": [[527, "dAbr_dV"]], "dibr_dv() (built-in function)": [[528, "dIbr_dV"]], "dimis_dv() (built-in function)": [[529, "dImis_dV"]], "dsbr_dv() (built-in function)": [[530, "dSbr_dV"]], "dsbus_dv() (built-in function)": [[531, "dSbus_dV"]], "dcopf() (built-in function)": [[532, "dcopf"]], "dcopf_solver() (built-in function)": [[533, "dcopf_solver"]], "dcpf() (built-in function)": [[534, "dcpf"]], "define_constants() (built-in function)": [[535, "define_constants"]], "e2i_data() (built-in function)": [[536, "e2i_data"]], "e2i_field() (built-in function)": [[537, "e2i_field"]], "ext2int() (built-in function)": [[538, "ext2int"]], "extract_islands() (built-in function)": [[539, "extract_islands"]], "fdpf() (built-in function)": [[540, "fdpf"]], "feval_w_path() (built-in function)": [[541, "feval_w_path"]], "find_bridges() (built-in function)": [[542, "find_bridges"]], "find_islands() (built-in function)": [[543, "find_islands"]], "fmincopf() (built-in function)": [[544, "fmincopf"]], "gausspf() (built-in function)": [[545, "gausspf"]], "genfuels() (built-in function)": [[546, "genfuels"]], "gentypes() (built-in function)": [[547, "gentypes"]], "get_losses() (built-in function)": [[548, "get_losses"]], "get_reorder() (built-in function)": [[549, "get_reorder"]], "haspqcap() (built-in function)": [[550, "hasPQcap"]], "have_feature_e4st() (built-in function)": [[551, "have_feature_e4st"]], "have_feature_minopf() (built-in function)": [[552, "have_feature_minopf"]], "have_feature_most() (built-in function)": [[553, "have_feature_most"]], "have_feature_mp_core() (built-in function)": [[554, "have_feature_mp_core"]], "have_feature_pdipmopf() (built-in function)": [[555, "have_feature_pdipmopf"]], "have_feature_regexp_split() (built-in function)": [[556, "have_feature_regexp_split"]], "have_feature_scpdipmopf() (built-in function)": [[557, "have_feature_scpdipmopf"]], "have_feature_sdp_pf() (built-in function)": [[558, "have_feature_sdp_pf"]], "have_feature_smartmarket() (built-in function)": [[559, "have_feature_smartmarket"]], "have_feature_syngrid() (built-in function)": [[560, "have_feature_syngrid"]], "have_feature_table() (built-in function)": [[561, "have_feature_table"]], "have_feature_tralmopf() (built-in function)": [[562, "have_feature_tralmopf"]], "i2e_data() (built-in function)": [[563, "i2e_data"]], "i2e_field() (built-in function)": [[564, "i2e_field"]], "idx_brch() (built-in function)": [[565, "idx_brch"]], "idx_bus() (built-in function)": [[566, "idx_bus"]], "idx_cost() (built-in function)": [[567, "idx_cost"]], "idx_ct() (built-in function)": [[568, "idx_ct"]], "idx_dcline() (built-in function)": [[569, "idx_dcline"]], "idx_gen() (built-in function)": [[570, "idx_gen"]], "int2ext() (built-in function)": [[571, "int2ext"]], "isload() (built-in function)": [[572, "isload"]], "load2disp() (built-in function)": [[573, "load2disp"]], "loadcase() (built-in function)": [[574, "loadcase"]], "loadshed() (built-in function)": [[575, "loadshed"]], "makeaang() (built-in function)": [[576, "makeAang"]], "makeapq() (built-in function)": [[577, "makeApq"]], "makeavl() (built-in function)": [[578, "makeAvl"]], "makeay() (built-in function)": [[579, "makeAy"]], "makeb() (built-in function)": [[580, "makeB"]], "makebdc() (built-in function)": [[581, "makeBdc"]], "makejac() (built-in function)": [[582, "makeJac"]], "makelodf() (built-in function)": [[583, "makeLODF"]], "makeptdf() (built-in function)": [[584, "makePTDF"]], "makesbus() (built-in function)": [[585, "makeSbus"]], "makesdzip() (built-in function)": [[586, "makeSdzip"]], "makeybus() (built-in function)": [[587, "makeYbus"]], "make_vcorr() (built-in function)": [[588, "make_vcorr"]], "make_zpv() (built-in function)": [[589, "make_zpv"]], "margcost() (built-in function)": [[590, "margcost"]], "miqps_matpower() (built-in function)": [[591, "miqps_matpower"]], "modcost() (built-in function)": [[592, "modcost"]], "mpoption() (built-in function)": [[593, "mpoption"]], "mpoption_info_clp() (built-in function)": [[594, "mpoption_info_clp"]], "mpoption_info_cplex() (built-in function)": [[595, "mpoption_info_cplex"]], "mpoption_info_fmincon() (built-in function)": [[596, "mpoption_info_fmincon"]], "mpoption_info_glpk() (built-in function)": [[597, "mpoption_info_glpk"]], "mpoption_info_gurobi() (built-in function)": [[598, "mpoption_info_gurobi"]], "mpoption_info_intlinprog() (built-in function)": [[599, "mpoption_info_intlinprog"]], "mpoption_info_ipopt() (built-in function)": [[600, "mpoption_info_ipopt"]], "mpoption_info_knitro() (built-in function)": [[601, "mpoption_info_knitro"]], "mpoption_info_linprog() (built-in function)": [[602, "mpoption_info_linprog"]], "mpoption_info_mips() (built-in function)": [[603, "mpoption_info_mips"]], "mpoption_info_mosek() (built-in function)": [[604, "mpoption_info_mosek"]], "mpoption_info_osqp() (built-in function)": [[605, "mpoption_info_osqp"]], "mpoption_info_quadprog() (built-in function)": [[606, "mpoption_info_quadprog"]], "mpoption_old() (built-in function)": [[607, "mpoption_old"]], "mpver() (built-in function)": [[608, "mpver"]], "newtonpf() (built-in function)": [[609, "newtonpf"]], "newtonpf_i_cart() (built-in function)": [[610, "newtonpf_I_cart"]], "newtonpf_i_hybrid() (built-in function)": [[611, "newtonpf_I_hybrid"]], "newtonpf_i_polar() (built-in function)": [[612, "newtonpf_I_polar"]], "newtonpf_s_cart() (built-in function)": [[613, "newtonpf_S_cart"]], "newtonpf_s_hybrid() (built-in function)": [[614, "newtonpf_S_hybrid"]], "nlpopf_solver() (built-in function)": [[615, "nlpopf_solver"]], "opf() (built-in function)": [[616, "opf"]], "opf_args() (built-in function)": [[617, "opf_args"]], "opf_branch_ang_fcn() (built-in function)": [[618, "opf_branch_ang_fcn"]], "opf_branch_ang_hess() (built-in function)": [[619, "opf_branch_ang_hess"]], "opf_branch_flow_fcn() (built-in function)": [[620, "opf_branch_flow_fcn"]], "opf_branch_flow_hess() (built-in function)": [[621, "opf_branch_flow_hess"]], "opf_current_balance_fcn() (built-in function)": [[622, "opf_current_balance_fcn"]], "opf_current_balance_hess() (built-in function)": [[623, "opf_current_balance_hess"]], "opf_execute() (built-in function)": [[624, "opf_execute"]], "opf_gen_cost_fcn() (built-in function)": [[625, "opf_gen_cost_fcn"]], "opf_legacy_user_cost_fcn() (built-in function)": [[626, "opf_legacy_user_cost_fcn"]], "opf_nle_fcn1() (built-in function)": [[627, "opf_nle_fcn1"]], "opf_nle_hess1() (built-in function)": [[628, "opf_nle_hess1"]], "opf_power_balance_fcn() (built-in function)": [[629, "opf_power_balance_fcn"]], "opf_power_balance_hess() (built-in function)": [[630, "opf_power_balance_hess"]], "opf_setup() (built-in function)": [[631, "opf_setup"]], "opf_veq_fcn() (built-in function)": [[632, "opf_veq_fcn"]], "opf_veq_hess() (built-in function)": [[633, "opf_veq_hess"]], "opf_vlim_fcn() (built-in function)": [[634, "opf_vlim_fcn"]], "opf_vlim_hess() (built-in function)": [[635, "opf_vlim_hess"]], "opf_vref_fcn() (built-in function)": [[636, "opf_vref_fcn"]], "opf_vref_hess() (built-in function)": [[637, "opf_vref_hess"]], "order_radial() (built-in function)": [[638, "order_radial"]], "pfsoln() (built-in function)": [[639, "pfsoln"]], "poly2pwl() (built-in function)": [[640, "poly2pwl"]], "polycost() (built-in function)": [[641, "polycost"]], "pqcost() (built-in function)": [[642, "pqcost"]], "printpf() (built-in function)": [[643, "printpf"]], "psse2mpc() (built-in function)": [[644, "psse2mpc"]], "psse_convert() (built-in function)": [[645, "psse_convert"]], "psse_convert_hvdc() (built-in function)": [[646, "psse_convert_hvdc"]], "psse_convert_xfmr() (built-in function)": [[647, "psse_convert_xfmr"]], "psse_parse() (built-in function)": [[648, "psse_parse"]], "psse_parse_line() (built-in function)": [[649, "psse_parse_line"]], "psse_parse_section() (built-in function)": [[650, "psse_parse_section"]], "psse_read() (built-in function)": [[651, "psse_read"]], "qps_matpower() (built-in function)": [[652, "qps_matpower"]], "radial_pf() (built-in function)": [[653, "radial_pf"]], "remove_userfcn() (built-in function)": [[654, "remove_userfcn"]], "run_userfcn() (built-in function)": [[655, "run_userfcn"]], "runcpf() (built-in function)": [[656, "runcpf"]], "rundcopf() (built-in function)": [[657, "rundcopf"]], "rundcpf() (built-in function)": [[658, "rundcpf"]], "runduopf() (built-in function)": [[659, "runduopf"]], "runopf() (built-in function)": [[660, "runopf"]], "runopf_w_res() (built-in function)": [[661, "runopf_w_res"]], "runpf() (built-in function)": [[662, "runpf"]], "runuopf() (built-in function)": [[663, "runuopf"]], "save2psse() (built-in function)": [[664, "save2psse"]], "savecase() (built-in function)": [[665, "savecase"]], "savechgtab() (built-in function)": [[666, "savechgtab"]], "scale_load() (built-in function)": [[667, "scale_load"]], "set_reorder() (built-in function)": [[668, "set_reorder"]], "t_apply_changes() (built-in function)": [[669, "t_apply_changes"]], "t_auction_case() (built-in function)": [[670, "t_auction_case"]], "t_auction_minopf() (built-in function)": [[671, "t_auction_minopf"]], "t_auction_mips() (built-in function)": [[672, "t_auction_mips"]], "t_auction_tspopf_pdipm() (built-in function)": [[673, "t_auction_tspopf_pdipm"]], "t_case30_userfcns() (built-in function)": [[674, "t_case30_userfcns"]], "t_case9_dcline() (built-in function)": [[675, "t_case9_dcline"]], "t_case9_opf() (built-in function)": [[676, "t_case9_opf"]], "t_case9_opfv2() (built-in function)": [[677, "t_case9_opfv2"]], "t_case9_pf() (built-in function)": [[678, "t_case9_pf"]], "t_case9_pfv2() (built-in function)": [[679, "t_case9_pfv2"]], "t_case9_save2psse() (built-in function)": [[680, "t_case9_save2psse"]], "t_case_ext() (built-in function)": [[681, "t_case_ext"]], "t_case_int() (built-in function)": [[682, "t_case_int"]], "t_chgtab() (built-in function)": [[683, "t_chgtab"]], "t_cpf() (built-in function)": [[684, "t_cpf"]], "t_cpf_cb1() (built-in function)": [[685, "t_cpf_cb1"]], "t_cpf_cb2() (built-in function)": [[686, "t_cpf_cb2"]], "t_dcline() (built-in function)": [[687, "t_dcline"]], "t_ext2int2ext() (built-in function)": [[688, "t_ext2int2ext"]], "t_feval_w_path() (built-in function)": [[689, "t_feval_w_path"]], "t_get_losses() (built-in function)": [[690, "t_get_losses"]], "t_haspqcap() (built-in function)": [[691, "t_hasPQcap"]], "t_hessian() (built-in function)": [[692, "t_hessian"]], "t_islands() (built-in function)": [[693, "t_islands"]], "t_jacobian() (built-in function)": [[694, "t_jacobian"]], "t_load2disp() (built-in function)": [[695, "t_load2disp"]], "t_loadcase() (built-in function)": [[696, "t_loadcase"]], "t_makelodf() (built-in function)": [[697, "t_makeLODF"]], "t_makeptdf() (built-in function)": [[698, "t_makePTDF"]], "t_margcost() (built-in function)": [[699, "t_margcost"]], "t_miqps_matpower() (built-in function)": [[700, "t_miqps_matpower"]], "t_modcost() (built-in function)": [[701, "t_modcost"]], "t_mpoption() (built-in function)": [[702, "t_mpoption"]], "t_mpoption_ov() (built-in function)": [[703, "t_mpoption_ov"]], "t_off2case() (built-in function)": [[704, "t_off2case"]], "t_opf_dc_bpmpd() (built-in function)": [[705, "t_opf_dc_bpmpd"]], "t_opf_dc_clp() (built-in function)": [[706, "t_opf_dc_clp"]], "t_opf_dc_cplex() (built-in function)": [[707, "t_opf_dc_cplex"]], "t_opf_dc_default() (built-in function)": [[708, "t_opf_dc_default"]], "t_opf_dc_glpk() (built-in function)": [[709, "t_opf_dc_glpk"]], "t_opf_dc_gurobi() (built-in function)": [[710, "t_opf_dc_gurobi"]], "t_opf_dc_ipopt() (built-in function)": [[711, "t_opf_dc_ipopt"]], "t_opf_dc_mips() (built-in function)": [[712, "t_opf_dc_mips"]], "t_opf_dc_mips_sc() (built-in function)": [[713, "t_opf_dc_mips_sc"]], "t_opf_dc_mosek() (built-in function)": [[714, "t_opf_dc_mosek"]], "t_opf_dc_osqp() (built-in function)": [[715, "t_opf_dc_osqp"]], "t_opf_dc_ot() (built-in function)": [[716, "t_opf_dc_ot"]], "t_opf_default() (built-in function)": [[717, "t_opf_default"]], "t_opf_fmincon() (built-in function)": [[718, "t_opf_fmincon"]], "t_opf_ipopt() (built-in function)": [[719, "t_opf_ipopt"]], "t_opf_knitro() (built-in function)": [[720, "t_opf_knitro"]], "t_opf_minopf() (built-in function)": [[721, "t_opf_minopf"]], "t_opf_mips() (built-in function)": [[722, "t_opf_mips"]], "t_opf_model() (built-in function)": [[723, "t_opf_model"]], "t_opf_softlims() (built-in function)": [[724, "t_opf_softlims"]], "t_opf_tspopf_pdipm() (built-in function)": [[725, "t_opf_tspopf_pdipm"]], "t_opf_tspopf_scpdipm() (built-in function)": [[726, "t_opf_tspopf_scpdipm"]], "t_opf_tspopf_tralm() (built-in function)": [[727, "t_opf_tspopf_tralm"]], "t_opf_userfcns() (built-in function)": [[728, "t_opf_userfcns"]], "t_pf_ac() (built-in function)": [[729, "t_pf_ac"]], "t_pf_dc() (built-in function)": [[730, "t_pf_dc"]], "t_pf_radial() (built-in function)": [[731, "t_pf_radial"]], "t_printpf() (built-in function)": [[732, "t_printpf"]], "t_psse() (built-in function)": [[733, "t_psse"]], "t_qps_matpower() (built-in function)": [[734, "t_qps_matpower"]], "t_runmarket() (built-in function)": [[735, "t_runmarket"]], "t_runopf_w_res() (built-in function)": [[736, "t_runopf_w_res"]], "t_scale_load() (built-in function)": [[737, "t_scale_load"]], "t_total_load() (built-in function)": [[738, "t_total_load"]], "t_totcost() (built-in function)": [[739, "t_totcost"]], "t_vdep_load() (built-in function)": [[740, "t_vdep_load"]], "toggle_dcline() (built-in function)": [[741, "toggle_dcline"]], "toggle_iflims() (built-in function)": [[742, "toggle_iflims"]], "toggle_reserves() (built-in function)": [[743, "toggle_reserves"]], "toggle_softlims() (built-in function)": [[744, "toggle_softlims"]], "total_load() (built-in function)": [[745, "total_load"]], "totcost() (built-in function)": [[746, "totcost"]], "uopf() (built-in function)": [[747, "uopf"]], "update_mupq() (built-in function)": [[748, "update_mupq"]], "zgausspf() (built-in function)": [[749, "zgausspf"]], "mp_foo_table (built-in class)": [[753, "mp_foo_table"]], "t_case3p_a() (built-in function)": [[754, "t_case3p_a"]], "t_case3p_b() (built-in function)": [[755, "t_case3p_b"]], "t_case3p_c() (built-in function)": [[756, "t_case3p_c"]], "t_case3p_d() (built-in function)": [[757, "t_case3p_d"]], "t_case3p_e() (built-in function)": [[758, "t_case3p_e"]], "t_case3p_f() (built-in function)": [[759, "t_case3p_f"]], "t_case3p_g() (built-in function)": [[760, "t_case3p_g"]], "t_case3p_h() (built-in function)": [[761, "t_case3p_h"]], "t_case9_gizmo() (built-in function)": [[762, "t_case9_gizmo"]], "t_dmc_element() (built-in function)": [[763, "t_dmc_element"]], "t_mp_data_model() (built-in function)": [[764, "t_mp_data_model"]], "t_mp_dm_converter_mpc2() (built-in function)": [[765, "t_mp_dm_converter_mpc2"]], "t_mp_mapped_array() (built-in function)": [[766, "t_mp_mapped_array"]], "t_mp_table() (built-in function)": [[767, "t_mp_table"]], "t_mpxt_legacy_dcline() (built-in function)": [[768, "t_mpxt_legacy_dcline"]], "t_mpxt_reserves() (built-in function)": [[769, "t_mpxt_reserves"]], "t_nm_element() (built-in function)": [[770, "t_nm_element"]], "t_node_test() (built-in function)": [[771, "t_node_test"]], "t_port_inj_current_acc() (built-in function)": [[772, "t_port_inj_current_acc"]], "t_port_inj_current_acp() (built-in function)": [[773, "t_port_inj_current_acp"]], "t_port_inj_power_acc() (built-in function)": [[774, "t_port_inj_power_acc"]], "t_port_inj_power_acp() (built-in function)": [[775, "t_port_inj_power_acp"]], "t_pretty_print() (built-in function)": [[776, "t_pretty_print"]], "t_run_mp() (built-in function)": [[777, "t_run_mp"]], "t_run_mp_3p() (built-in function)": [[778, "t_run_mp_3p"]], "t_run_opf_default() (built-in function)": [[779, "t_run_opf_default"]], "test_matpower() (built-in function)": [[780, "test_matpower"]]}})