Search.setIndex({"docnames": ["dev-manual/acknowledgments", "dev-manual/architecture", "dev-manual/customizing", "dev-manual/data-model", "dev-manual/data-model-converter", "dev-manual/index", "dev-manual/introduction", "dev-manual/math-model", "dev-manual/net-model", "dev-manual/notation", "dev-manual/references", "dev-manual/task", "howto/add-constraint", "howto/builddocs", "howto/builddocs/generate_autodoc_stubs", "howto/builddocs/generate_matpower_autodoc", "howto/builddocs/generate_source_symlinks", "howto/element", "howto/extension", "howto/gizmo-element/index", "howto/three-phase", "index", "mips/functions/have_feature_lu_vec", "mips/functions/have_feature_pardiso", "mips/functions/have_feature_pardiso_legacy", "mips/functions/have_feature_pardiso_object", "mips/functions/mips", "mips/functions/mips_example1", "mips/functions/mips_example2", "mips/functions/mipsver", "mips/functions/mplinsolve", "mips/functions/qps_mips", "mips/functions/t_mips", "mips/functions/t_mips_pardiso", "mips/functions/t_mplinsolve", "mips/functions/t_qps_mips", "mips/functions/test_mips", "mips/index", "mips/reference", "most/functions/addgen2mpc", "most/functions/addstorage", "most/functions/addwind", "most/functions/apply_profile", "most/functions/c118swf", "most/functions/ex_case3a", "most/functions/ex_case3b", "most/functions/ex_contab", "most/functions/ex_load_profile", "most/functions/ex_storage", "most/functions/ex_transmat", "most/functions/ex_wind", "most/functions/ex_wind_profile", "most/functions/ex_wind_profile_d", "most/functions/ex_wind_uc", "most/functions/ex_xgd", "most/functions/ex_xgd_ramp", "most/functions/ex_xgd_res", "most/functions/ex_xgd_uc", "most/functions/filter_ramp_transitions", "most/functions/getprofiles", "most/functions/idx_profile", "most/functions/loadgenericdata", "most/functions/loadmd", "most/functions/loadstoragedata", "most/functions/loadxgendata", "most/functions/md_init", "most/functions/most", "most/functions/most_ex1_ed", "most/functions/most_ex2_dcopf", "most/functions/most_ex3_dcopf_w_uc", "most/functions/most_ex4_dcopf_ss", "most/functions/most_ex5_mpopf", "most/functions/most_ex6_uc", "most/functions/most_ex7_suc", "most/functions/most_summary", "most/functions/mostver", "most/functions/mpoption_info_most", "most/functions/plot_gen", "most/functions/plot_storage", "most/functions/plot_uc", "most/functions/plot_uc_data", "most/functions/t_case30_most", "most/functions/t_case3_most", "most/functions/t_case_tlmp", "most/functions/t_case_tlmp_storage", "most/functions/t_most_30b_1_1_0", "most/functions/t_most_30b_1_1_0_uc", "most/functions/t_most_30b_1_1_17", "most/functions/t_most_30b_3_1_0", "most/functions/t_most_30b_3_1_17", "most/functions/t_most_3b_1_1_0", "most/functions/t_most_3b_1_1_2", "most/functions/t_most_3b_3_1_0", "most/functions/t_most_3b_3_1_2", "most/functions/t_most_fixed_res", "most/functions/t_most_mpopf", "most/functions/t_most_sp", "most/functions/t_most_spuc", "most/functions/t_most_suc", "most/functions/t_most_tlmp", "most/functions/t_most_uc", "most/functions/t_most_w_ds", "most/functions/test_most", "most/functions/uniformwindprofile", "most/index", "most/reference", "mpom/classes/mp_idx_manager", "mpom/classes/opt_model", "mpom/functions/convert_lin_constraint", "mpom/functions/convert_lin_constraint_multipliers", "mpom/functions/cplex_options", "mpom/functions/glpk_options", "mpom/functions/gurobi_options", "mpom/functions/gurobiver", "mpom/functions/have_feature_bpmpd", "mpom/functions/have_feature_catchme", "mpom/functions/have_feature_clp", "mpom/functions/have_feature_cplex", "mpom/functions/have_feature_evalc", "mpom/functions/have_feature_fmincon", "mpom/functions/have_feature_fmincon_ipm", "mpom/functions/have_feature_fsolve", "mpom/functions/have_feature_glpk", "mpom/functions/have_feature_gurobi", "mpom/functions/have_feature_intlinprog", "mpom/functions/have_feature_ipopt", "mpom/functions/have_feature_ipopt_auxdata", "mpom/functions/have_feature_isequaln", "mpom/functions/have_feature_knitro", "mpom/functions/have_feature_knitromatlab", "mpom/functions/have_feature_ktrlink", "mpom/functions/have_feature_linprog", "mpom/functions/have_feature_linprog_ds", "mpom/functions/have_feature_mosek", "mpom/functions/have_feature_opti_clp", "mpom/functions/have_feature_optim", "mpom/functions/have_feature_optimoptions", "mpom/functions/have_feature_osqp", "mpom/functions/have_feature_quadprog", "mpom/functions/have_feature_quadprog_ls", "mpom/functions/have_feature_sdpt3", "mpom/functions/have_feature_sedumi", "mpom/functions/have_feature_yalmip", "mpom/functions/ipopt_options", "mpom/functions/miqps_cplex", "mpom/functions/miqps_glpk", "mpom/functions/miqps_gurobi", "mpom/functions/miqps_master", "mpom/functions/miqps_mosek", "mpom/functions/miqps_ot", "mpom/functions/mosek_options", "mpom/functions/mosek_symbcon", "mpom/functions/mpomver", "mpom/functions/mpopt2nleqopt", "mpom/functions/mpopt2nlpopt", "mpom/functions/mpopt2pneopt", "mpom/functions/mpopt2qpopt", "mpom/functions/nested_struct_copy", "mpom/functions/nleqs_core", "mpom/functions/nleqs_fd_newton", "mpom/functions/nleqs_fsolve", "mpom/functions/nleqs_gauss_seidel", "mpom/functions/nleqs_master", "mpom/functions/nleqs_master_ex1", "mpom/functions/nleqs_master_ex2", "mpom/functions/nleqs_newton", "mpom/functions/nlp_consfcn", "mpom/functions/nlp_costfcn", "mpom/functions/nlp_hessfcn", "mpom/functions/nlps_fmincon", "mpom/functions/nlps_ipopt", "mpom/functions/nlps_knitro", "mpom/functions/nlps_master", "mpom/functions/nlps_master_ex1", "mpom/functions/nlps_master_ex2", "mpom/functions/osqp_options", "mpom/functions/osqpver", "mpom/functions/pne_callback_default", "mpom/functions/pne_callback_nose", "mpom/functions/pne_callback_target_lam", "mpom/functions/pne_detect_events", "mpom/functions/pne_detected_event", "mpom/functions/pne_event_nose", "mpom/functions/pne_event_target_lam", "mpom/functions/pne_ex1", "mpom/functions/pne_pfcn_arc_len", "mpom/functions/pne_pfcn_natural", "mpom/functions/pne_pfcn_pseudo_arc_len", "mpom/functions/pne_register_callbacks", "mpom/functions/pne_register_events", "mpom/functions/pnes_master", "mpom/functions/qp_ex1", "mpom/functions/qps_bpmpd", "mpom/functions/qps_clp", "mpom/functions/qps_cplex", "mpom/functions/qps_glpk", "mpom/functions/qps_gurobi", "mpom/functions/qps_ipopt", "mpom/functions/qps_master", "mpom/functions/qps_mosek", "mpom/functions/qps_osqp", "mpom/functions/qps_ot", "mpom/functions/t_miqps_master", "mpom/functions/t_nested_struct_copy", "mpom/functions/t_nleqs_master", "mpom/functions/t_nlps_master", "mpom/functions/t_om_solve_leqs", "mpom/functions/t_om_solve_miqps", "mpom/functions/t_om_solve_nleqs", "mpom/functions/t_om_solve_nlps", "mpom/functions/t_om_solve_pne", "mpom/functions/t_om_solve_qps", "mpom/functions/t_opt_model", "mpom/functions/t_pnes_master", "mpom/functions/t_qps_master", "mpom/functions/test_mp_opt_model", "mpom/index", "mpom/reference", "mptest/functions/have_feature", "mptest/functions/have_feature_matlab", "mptest/functions/have_feature_octave", "mptest/functions/mptestver", "mptest/functions/t_begin", "mptest/functions/t_end", "mptest/functions/t_file_match", "mptest/functions/t_have_feature", "mptest/functions/t_is", "mptest/functions/t_ok", "mptest/functions/t_run_tests", "mptest/functions/t_skip", "mptest/functions/t_str_match", "mptest/functions/t_test_fcns", "mptest/functions/test_mptest", "mptest/index", "mptest/reference", "ref-manual/classes/index", "ref-manual/classes/mp/NODE_TYPE", "ref-manual/classes/mp/cost_table", "ref-manual/classes/mp/cost_table_utils", "ref-manual/classes/mp/data_model", "ref-manual/classes/mp/data_model_cpf", "ref-manual/classes/mp/data_model_opf", "ref-manual/classes/mp/dm_converter", "ref-manual/classes/mp/dm_converter_mpc2", "ref-manual/classes/mp/dm_converter_mpc2_legacy", "ref-manual/classes/mp/dm_element", "ref-manual/classes/mp/dmc_element", "ref-manual/classes/mp/dmce_branch_mpc2", "ref-manual/classes/mp/dmce_bus3p_mpc2", "ref-manual/classes/mp/dmce_bus_mpc2", "ref-manual/classes/mp/dmce_buslink_mpc2", "ref-manual/classes/mp/dmce_gen3p_mpc2", "ref-manual/classes/mp/dmce_gen_mpc2", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2", "ref-manual/classes/mp/dmce_line3p_mpc2", "ref-manual/classes/mp/dmce_load3p_mpc2", "ref-manual/classes/mp/dmce_load_mpc2", "ref-manual/classes/mp/dmce_reserve_gen_mpc2", "ref-manual/classes/mp/dmce_reserve_zone_mpc2", "ref-manual/classes/mp/dmce_shunt_mpc2", "ref-manual/classes/mp/dmce_xfmr3p_mpc2", "ref-manual/classes/mp/dme_branch", "ref-manual/classes/mp/dme_branch_opf", "ref-manual/classes/mp/dme_bus", "ref-manual/classes/mp/dme_bus3p", "ref-manual/classes/mp/dme_bus3p_opf", "ref-manual/classes/mp/dme_bus_opf", "ref-manual/classes/mp/dme_buslink", "ref-manual/classes/mp/dme_buslink_opf", "ref-manual/classes/mp/dme_gen", "ref-manual/classes/mp/dme_gen3p", "ref-manual/classes/mp/dme_gen3p_opf", "ref-manual/classes/mp/dme_gen_opf", "ref-manual/classes/mp/dme_legacy_dcline", "ref-manual/classes/mp/dme_legacy_dcline_opf", "ref-manual/classes/mp/dme_line3p", "ref-manual/classes/mp/dme_line3p_opf", "ref-manual/classes/mp/dme_load", "ref-manual/classes/mp/dme_load3p", "ref-manual/classes/mp/dme_load3p_opf", "ref-manual/classes/mp/dme_load_cpf", "ref-manual/classes/mp/dme_load_opf", "ref-manual/classes/mp/dme_reserve_gen", "ref-manual/classes/mp/dme_reserve_zone", "ref-manual/classes/mp/dme_shared_opf", "ref-manual/classes/mp/dme_shunt", "ref-manual/classes/mp/dme_shunt_cpf", "ref-manual/classes/mp/dme_shunt_opf", "ref-manual/classes/mp/dme_xfmr3p", "ref-manual/classes/mp/dme_xfmr3p_opf", "ref-manual/classes/mp/element_container", "ref-manual/classes/mp/extension", "ref-manual/classes/mp/form", "ref-manual/classes/mp/form_ac", "ref-manual/classes/mp/form_acc", "ref-manual/classes/mp/form_acp", "ref-manual/classes/mp/form_dc", "ref-manual/classes/mp/mapped_array", "ref-manual/classes/mp/math_model", "ref-manual/classes/mp/math_model_cpf_acc", "ref-manual/classes/mp/math_model_cpf_acci", "ref-manual/classes/mp/math_model_cpf_accs", "ref-manual/classes/mp/math_model_cpf_acp", "ref-manual/classes/mp/math_model_cpf_acpi", "ref-manual/classes/mp/math_model_cpf_acps", "ref-manual/classes/mp/math_model_opf", "ref-manual/classes/mp/math_model_opf_ac", "ref-manual/classes/mp/math_model_opf_acc", "ref-manual/classes/mp/math_model_opf_acci", "ref-manual/classes/mp/math_model_opf_acci_legacy", "ref-manual/classes/mp/math_model_opf_accs", "ref-manual/classes/mp/math_model_opf_accs_legacy", "ref-manual/classes/mp/math_model_opf_acp", "ref-manual/classes/mp/math_model_opf_acpi", "ref-manual/classes/mp/math_model_opf_acpi_legacy", "ref-manual/classes/mp/math_model_opf_acps", "ref-manual/classes/mp/math_model_opf_acps_legacy", "ref-manual/classes/mp/math_model_opf_dc", "ref-manual/classes/mp/math_model_opf_dc_legacy", "ref-manual/classes/mp/math_model_pf", "ref-manual/classes/mp/math_model_pf_ac", "ref-manual/classes/mp/math_model_pf_acci", "ref-manual/classes/mp/math_model_pf_accs", "ref-manual/classes/mp/math_model_pf_acpi", "ref-manual/classes/mp/math_model_pf_acps", "ref-manual/classes/mp/math_model_pf_dc", "ref-manual/classes/mp/mm_element", "ref-manual/classes/mp/mm_shared_opf_legacy", "ref-manual/classes/mp/mm_shared_pfcpf", "ref-manual/classes/mp/mm_shared_pfcpf_ac", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i", "ref-manual/classes/mp/mm_shared_pfcpf_acc", "ref-manual/classes/mp/mm_shared_pfcpf_acci", "ref-manual/classes/mp/mm_shared_pfcpf_accs", "ref-manual/classes/mp/mm_shared_pfcpf_acp", "ref-manual/classes/mp/mm_shared_pfcpf_acpi", "ref-manual/classes/mp/mm_shared_pfcpf_acps", "ref-manual/classes/mp/mm_shared_pfcpf_dc", "ref-manual/classes/mp/mme_branch", "ref-manual/classes/mp/mme_branch_opf", "ref-manual/classes/mp/mme_branch_opf_ac", "ref-manual/classes/mp/mme_branch_opf_acc", "ref-manual/classes/mp/mme_branch_opf_acp", "ref-manual/classes/mp/mme_branch_opf_dc", "ref-manual/classes/mp/mme_branch_pf_ac", "ref-manual/classes/mp/mme_branch_pf_dc", "ref-manual/classes/mp/mme_bus", "ref-manual/classes/mp/mme_bus3p", "ref-manual/classes/mp/mme_bus3p_opf_acc", "ref-manual/classes/mp/mme_bus3p_opf_acp", "ref-manual/classes/mp/mme_bus_opf_ac", "ref-manual/classes/mp/mme_bus_opf_acc", "ref-manual/classes/mp/mme_bus_opf_acp", "ref-manual/classes/mp/mme_bus_opf_dc", "ref-manual/classes/mp/mme_bus_pf_ac", "ref-manual/classes/mp/mme_bus_pf_dc", "ref-manual/classes/mp/mme_buslink", "ref-manual/classes/mp/mme_buslink_opf", "ref-manual/classes/mp/mme_buslink_opf_acc", "ref-manual/classes/mp/mme_buslink_opf_acp", "ref-manual/classes/mp/mme_buslink_pf_ac", "ref-manual/classes/mp/mme_buslink_pf_acc", "ref-manual/classes/mp/mme_buslink_pf_acp", "ref-manual/classes/mp/mme_gen", "ref-manual/classes/mp/mme_gen3p", "ref-manual/classes/mp/mme_gen3p_opf", "ref-manual/classes/mp/mme_gen_opf", "ref-manual/classes/mp/mme_gen_opf_ac", "ref-manual/classes/mp/mme_gen_opf_ac_oval", "ref-manual/classes/mp/mme_gen_opf_dc", "ref-manual/classes/mp/mme_gen_pf_ac", "ref-manual/classes/mp/mme_gen_pf_dc", "ref-manual/classes/mp/mme_legacy_dcline", "ref-manual/classes/mp/mme_legacy_dcline_opf", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc", "ref-manual/classes/mp/mme_line3p", "ref-manual/classes/mp/mme_line3p_opf", "ref-manual/classes/mp/mme_load", "ref-manual/classes/mp/mme_load_cpf", "ref-manual/classes/mp/mme_load_pf_ac", "ref-manual/classes/mp/mme_load_pf_dc", "ref-manual/classes/mp/mme_reserve_gen", "ref-manual/classes/mp/mme_reserve_zone", "ref-manual/classes/mp/mme_shunt", "ref-manual/classes/mp/mme_shunt_cpf", "ref-manual/classes/mp/mme_shunt_pf_ac", "ref-manual/classes/mp/mme_shunt_pf_dc", "ref-manual/classes/mp/mme_xfmr3p", "ref-manual/classes/mp/mme_xfmr3p_opf", "ref-manual/classes/mp/net_model", "ref-manual/classes/mp/net_model_ac", "ref-manual/classes/mp/net_model_acc", "ref-manual/classes/mp/net_model_acp", "ref-manual/classes/mp/net_model_dc", "ref-manual/classes/mp/nm_element", "ref-manual/classes/mp/nme_branch", "ref-manual/classes/mp/nme_branch_ac", "ref-manual/classes/mp/nme_branch_acc", "ref-manual/classes/mp/nme_branch_acp", "ref-manual/classes/mp/nme_branch_dc", "ref-manual/classes/mp/nme_bus", "ref-manual/classes/mp/nme_bus3p", "ref-manual/classes/mp/nme_bus3p_acc", "ref-manual/classes/mp/nme_bus3p_acp", "ref-manual/classes/mp/nme_bus_acc", "ref-manual/classes/mp/nme_bus_acp", "ref-manual/classes/mp/nme_bus_dc", "ref-manual/classes/mp/nme_buslink", "ref-manual/classes/mp/nme_buslink_acc", "ref-manual/classes/mp/nme_buslink_acp", "ref-manual/classes/mp/nme_gen", "ref-manual/classes/mp/nme_gen3p", "ref-manual/classes/mp/nme_gen3p_acc", "ref-manual/classes/mp/nme_gen3p_acp", "ref-manual/classes/mp/nme_gen_ac", "ref-manual/classes/mp/nme_gen_acc", "ref-manual/classes/mp/nme_gen_acp", "ref-manual/classes/mp/nme_gen_dc", "ref-manual/classes/mp/nme_legacy_dcline", "ref-manual/classes/mp/nme_legacy_dcline_ac", "ref-manual/classes/mp/nme_legacy_dcline_acc", "ref-manual/classes/mp/nme_legacy_dcline_acp", "ref-manual/classes/mp/nme_legacy_dcline_dc", "ref-manual/classes/mp/nme_line3p", "ref-manual/classes/mp/nme_load", "ref-manual/classes/mp/nme_load3p", "ref-manual/classes/mp/nme_load_ac", "ref-manual/classes/mp/nme_load_acc", "ref-manual/classes/mp/nme_load_acp", "ref-manual/classes/mp/nme_load_dc", "ref-manual/classes/mp/nme_shunt", "ref-manual/classes/mp/nme_shunt_ac", "ref-manual/classes/mp/nme_shunt_acc", "ref-manual/classes/mp/nme_shunt_acp", "ref-manual/classes/mp/nme_shunt_dc", "ref-manual/classes/mp/nme_xfmr3p", "ref-manual/classes/mp/task", "ref-manual/classes/mp/task_cpf", "ref-manual/classes/mp/task_cpf_legacy", "ref-manual/classes/mp/task_opf", "ref-manual/classes/mp/task_opf_legacy", "ref-manual/classes/mp/task_pf", "ref-manual/classes/mp/task_pf_legacy", "ref-manual/classes/mp/task_shared_legacy", "ref-manual/classes/mp/xt_3p", "ref-manual/classes/mp/xt_legacy_dcline", "ref-manual/classes/mp/xt_oval_cap_curve", "ref-manual/classes/mp/xt_reserves", "ref-manual/classes/mp_table", "ref-manual/classes/mp_table_subclass", "ref-manual/functions/index", "ref-manual/functions/install_matpower", "ref-manual/functions/mp_table_class", "ref-manual/functions/run_cpf", "ref-manual/functions/run_mp", "ref-manual/functions/run_opf", "ref-manual/functions/run_pf", "ref-manual/index", "ref-manual/introduction", "ref-manual/legacy/classes/opf_model", "ref-manual/legacy/functions/add_userfcn", "ref-manual/legacy/functions/apply_changes", "ref-manual/legacy/functions/bustypes", "ref-manual/legacy/functions/calc_branch_angle", "ref-manual/legacy/functions/calc_v_i_sum", "ref-manual/legacy/functions/calc_v_pq_sum", "ref-manual/legacy/functions/calc_v_y_sum", "ref-manual/legacy/functions/case_info", "ref-manual/legacy/functions/caseformat", "ref-manual/legacy/functions/cdf2mpc", "ref-manual/legacy/functions/compare_case", "ref-manual/legacy/functions/connected_components", "ref-manual/legacy/functions/cpf_corrector", "ref-manual/legacy/functions/cpf_current_mpc", "ref-manual/legacy/functions/cpf_default_callback", "ref-manual/legacy/functions/cpf_detect_events", "ref-manual/legacy/functions/cpf_flim_event", "ref-manual/legacy/functions/cpf_flim_event_cb", "ref-manual/legacy/functions/cpf_nose_event", "ref-manual/legacy/functions/cpf_nose_event_cb", "ref-manual/legacy/functions/cpf_p", "ref-manual/legacy/functions/cpf_p_jac", "ref-manual/legacy/functions/cpf_plim_event", "ref-manual/legacy/functions/cpf_plim_event_cb", "ref-manual/legacy/functions/cpf_predictor", "ref-manual/legacy/functions/cpf_qlim_event", "ref-manual/legacy/functions/cpf_qlim_event_cb", "ref-manual/legacy/functions/cpf_register_callback", "ref-manual/legacy/functions/cpf_register_event", "ref-manual/legacy/functions/cpf_tangent", "ref-manual/legacy/functions/cpf_target_lam_event", "ref-manual/legacy/functions/cpf_target_lam_event_cb", "ref-manual/legacy/functions/cpf_vlim_event", "ref-manual/legacy/functions/cpf_vlim_event_cb", "ref-manual/legacy/functions/d2Abr_dV2", "ref-manual/legacy/functions/d2Ibr_dV2", "ref-manual/legacy/functions/d2Imis_dV2", "ref-manual/legacy/functions/d2Imis_dVdSg", "ref-manual/legacy/functions/d2Sbr_dV2", "ref-manual/legacy/functions/d2Sbus_dV2", "ref-manual/legacy/functions/dAbr_dV", "ref-manual/legacy/functions/dIbr_dV", "ref-manual/legacy/functions/dImis_dV", "ref-manual/legacy/functions/dSbr_dV", "ref-manual/legacy/functions/dSbus_dV", "ref-manual/legacy/functions/dcopf", "ref-manual/legacy/functions/dcopf_solver", "ref-manual/legacy/functions/dcpf", "ref-manual/legacy/functions/define_constants", "ref-manual/legacy/functions/e2i_data", "ref-manual/legacy/functions/e2i_field", "ref-manual/legacy/functions/ext2int", "ref-manual/legacy/functions/extract_islands", "ref-manual/legacy/functions/fdpf", "ref-manual/legacy/functions/feval_w_path", "ref-manual/legacy/functions/find_bridges", "ref-manual/legacy/functions/find_islands", "ref-manual/legacy/functions/fmincopf", "ref-manual/legacy/functions/gausspf", "ref-manual/legacy/functions/genfuels", "ref-manual/legacy/functions/gentypes", "ref-manual/legacy/functions/get_losses", "ref-manual/legacy/functions/get_reorder", "ref-manual/legacy/functions/hasPQcap", "ref-manual/legacy/functions/have_feature_e4st", "ref-manual/legacy/functions/have_feature_minopf", "ref-manual/legacy/functions/have_feature_most", "ref-manual/legacy/functions/have_feature_mp_core", "ref-manual/legacy/functions/have_feature_pdipmopf", "ref-manual/legacy/functions/have_feature_regexp_split", "ref-manual/legacy/functions/have_feature_scpdipmopf", "ref-manual/legacy/functions/have_feature_sdp_pf", "ref-manual/legacy/functions/have_feature_smartmarket", "ref-manual/legacy/functions/have_feature_syngrid", "ref-manual/legacy/functions/have_feature_table", "ref-manual/legacy/functions/have_feature_tralmopf", "ref-manual/legacy/functions/i2e_data", "ref-manual/legacy/functions/i2e_field", "ref-manual/legacy/functions/idx_brch", "ref-manual/legacy/functions/idx_bus", "ref-manual/legacy/functions/idx_cost", "ref-manual/legacy/functions/idx_ct", "ref-manual/legacy/functions/idx_dcline", "ref-manual/legacy/functions/idx_gen", "ref-manual/legacy/functions/int2ext", "ref-manual/legacy/functions/isload", "ref-manual/legacy/functions/load2disp", "ref-manual/legacy/functions/loadcase", "ref-manual/legacy/functions/loadshed", "ref-manual/legacy/functions/makeAang", "ref-manual/legacy/functions/makeApq", "ref-manual/legacy/functions/makeAvl", "ref-manual/legacy/functions/makeAy", "ref-manual/legacy/functions/makeB", "ref-manual/legacy/functions/makeBdc", "ref-manual/legacy/functions/makeJac", "ref-manual/legacy/functions/makeLODF", "ref-manual/legacy/functions/makePTDF", "ref-manual/legacy/functions/makeSbus", "ref-manual/legacy/functions/makeSdzip", "ref-manual/legacy/functions/makeYbus", "ref-manual/legacy/functions/make_vcorr", "ref-manual/legacy/functions/make_zpv", "ref-manual/legacy/functions/margcost", "ref-manual/legacy/functions/miqps_matpower", "ref-manual/legacy/functions/modcost", "ref-manual/legacy/functions/mpoption", "ref-manual/legacy/functions/mpoption_info_clp", "ref-manual/legacy/functions/mpoption_info_cplex", "ref-manual/legacy/functions/mpoption_info_fmincon", "ref-manual/legacy/functions/mpoption_info_glpk", "ref-manual/legacy/functions/mpoption_info_gurobi", "ref-manual/legacy/functions/mpoption_info_intlinprog", "ref-manual/legacy/functions/mpoption_info_ipopt", "ref-manual/legacy/functions/mpoption_info_knitro", "ref-manual/legacy/functions/mpoption_info_linprog", "ref-manual/legacy/functions/mpoption_info_mips", "ref-manual/legacy/functions/mpoption_info_mosek", "ref-manual/legacy/functions/mpoption_info_osqp", "ref-manual/legacy/functions/mpoption_info_quadprog", "ref-manual/legacy/functions/mpoption_old", "ref-manual/legacy/functions/mpver", "ref-manual/legacy/functions/newtonpf", "ref-manual/legacy/functions/newtonpf_I_cart", "ref-manual/legacy/functions/newtonpf_I_hybrid", "ref-manual/legacy/functions/newtonpf_I_polar", "ref-manual/legacy/functions/newtonpf_S_cart", "ref-manual/legacy/functions/newtonpf_S_hybrid", "ref-manual/legacy/functions/nlpopf_solver", "ref-manual/legacy/functions/opf", "ref-manual/legacy/functions/opf_args", "ref-manual/legacy/functions/opf_branch_ang_fcn", "ref-manual/legacy/functions/opf_branch_ang_hess", "ref-manual/legacy/functions/opf_branch_flow_fcn", "ref-manual/legacy/functions/opf_branch_flow_hess", "ref-manual/legacy/functions/opf_current_balance_fcn", "ref-manual/legacy/functions/opf_current_balance_hess", "ref-manual/legacy/functions/opf_execute", "ref-manual/legacy/functions/opf_gen_cost_fcn", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn", "ref-manual/legacy/functions/opf_nle_fcn1", "ref-manual/legacy/functions/opf_nle_hess1", "ref-manual/legacy/functions/opf_power_balance_fcn", "ref-manual/legacy/functions/opf_power_balance_hess", "ref-manual/legacy/functions/opf_setup", "ref-manual/legacy/functions/opf_veq_fcn", "ref-manual/legacy/functions/opf_veq_hess", "ref-manual/legacy/functions/opf_vlim_fcn", "ref-manual/legacy/functions/opf_vlim_hess", "ref-manual/legacy/functions/opf_vref_fcn", "ref-manual/legacy/functions/opf_vref_hess", "ref-manual/legacy/functions/order_radial", "ref-manual/legacy/functions/pfsoln", "ref-manual/legacy/functions/poly2pwl", "ref-manual/legacy/functions/polycost", "ref-manual/legacy/functions/pqcost", "ref-manual/legacy/functions/printpf", "ref-manual/legacy/functions/psse2mpc", "ref-manual/legacy/functions/psse_convert", "ref-manual/legacy/functions/psse_convert_hvdc", "ref-manual/legacy/functions/psse_convert_xfmr", "ref-manual/legacy/functions/psse_parse", "ref-manual/legacy/functions/psse_parse_line", "ref-manual/legacy/functions/psse_parse_section", "ref-manual/legacy/functions/psse_read", "ref-manual/legacy/functions/qps_matpower", "ref-manual/legacy/functions/radial_pf", "ref-manual/legacy/functions/remove_userfcn", "ref-manual/legacy/functions/run_userfcn", "ref-manual/legacy/functions/runcpf", "ref-manual/legacy/functions/rundcopf", "ref-manual/legacy/functions/rundcpf", "ref-manual/legacy/functions/runduopf", "ref-manual/legacy/functions/runopf", "ref-manual/legacy/functions/runopf_w_res", "ref-manual/legacy/functions/runpf", "ref-manual/legacy/functions/runuopf", "ref-manual/legacy/functions/save2psse", "ref-manual/legacy/functions/savecase", "ref-manual/legacy/functions/savechgtab", "ref-manual/legacy/functions/scale_load", "ref-manual/legacy/functions/set_reorder", "ref-manual/legacy/functions/t_apply_changes", "ref-manual/legacy/functions/t_auction_case", "ref-manual/legacy/functions/t_auction_minopf", "ref-manual/legacy/functions/t_auction_mips", "ref-manual/legacy/functions/t_auction_tspopf_pdipm", "ref-manual/legacy/functions/t_case30_userfcns", "ref-manual/legacy/functions/t_case9_dcline", "ref-manual/legacy/functions/t_case9_opf", "ref-manual/legacy/functions/t_case9_opfv2", "ref-manual/legacy/functions/t_case9_pf", "ref-manual/legacy/functions/t_case9_pfv2", "ref-manual/legacy/functions/t_case9_save2psse", "ref-manual/legacy/functions/t_case_ext", "ref-manual/legacy/functions/t_case_int", "ref-manual/legacy/functions/t_chgtab", "ref-manual/legacy/functions/t_cpf", "ref-manual/legacy/functions/t_cpf_cb1", "ref-manual/legacy/functions/t_cpf_cb2", "ref-manual/legacy/functions/t_dcline", "ref-manual/legacy/functions/t_ext2int2ext", "ref-manual/legacy/functions/t_feval_w_path", "ref-manual/legacy/functions/t_get_losses", "ref-manual/legacy/functions/t_hasPQcap", "ref-manual/legacy/functions/t_hessian", "ref-manual/legacy/functions/t_islands", "ref-manual/legacy/functions/t_jacobian", "ref-manual/legacy/functions/t_load2disp", "ref-manual/legacy/functions/t_loadcase", "ref-manual/legacy/functions/t_makeLODF", "ref-manual/legacy/functions/t_makePTDF", "ref-manual/legacy/functions/t_margcost", "ref-manual/legacy/functions/t_miqps_matpower", "ref-manual/legacy/functions/t_modcost", "ref-manual/legacy/functions/t_mpoption", "ref-manual/legacy/functions/t_mpoption_ov", "ref-manual/legacy/functions/t_off2case", "ref-manual/legacy/functions/t_opf_dc_bpmpd", "ref-manual/legacy/functions/t_opf_dc_clp", "ref-manual/legacy/functions/t_opf_dc_cplex", "ref-manual/legacy/functions/t_opf_dc_default", "ref-manual/legacy/functions/t_opf_dc_glpk", "ref-manual/legacy/functions/t_opf_dc_gurobi", "ref-manual/legacy/functions/t_opf_dc_ipopt", "ref-manual/legacy/functions/t_opf_dc_mips", "ref-manual/legacy/functions/t_opf_dc_mips_sc", "ref-manual/legacy/functions/t_opf_dc_mosek", "ref-manual/legacy/functions/t_opf_dc_osqp", "ref-manual/legacy/functions/t_opf_dc_ot", "ref-manual/legacy/functions/t_opf_default", "ref-manual/legacy/functions/t_opf_fmincon", "ref-manual/legacy/functions/t_opf_ipopt", "ref-manual/legacy/functions/t_opf_knitro", "ref-manual/legacy/functions/t_opf_minopf", "ref-manual/legacy/functions/t_opf_mips", "ref-manual/legacy/functions/t_opf_model", "ref-manual/legacy/functions/t_opf_softlims", "ref-manual/legacy/functions/t_opf_tspopf_pdipm", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm", "ref-manual/legacy/functions/t_opf_tspopf_tralm", "ref-manual/legacy/functions/t_opf_userfcns", "ref-manual/legacy/functions/t_pf_ac", "ref-manual/legacy/functions/t_pf_dc", "ref-manual/legacy/functions/t_pf_radial", "ref-manual/legacy/functions/t_printpf", "ref-manual/legacy/functions/t_psse", "ref-manual/legacy/functions/t_qps_matpower", "ref-manual/legacy/functions/t_runmarket", "ref-manual/legacy/functions/t_runopf_w_res", "ref-manual/legacy/functions/t_scale_load", "ref-manual/legacy/functions/t_total_load", "ref-manual/legacy/functions/t_totcost", "ref-manual/legacy/functions/t_vdep_load", "ref-manual/legacy/functions/toggle_dcline", "ref-manual/legacy/functions/toggle_iflims", "ref-manual/legacy/functions/toggle_reserves", "ref-manual/legacy/functions/toggle_softlims", "ref-manual/legacy/functions/total_load", "ref-manual/legacy/functions/totcost", "ref-manual/legacy/functions/uopf", "ref-manual/legacy/functions/update_mupq", "ref-manual/legacy/functions/zgausspf", "ref-manual/legacy/index", "ref-manual/previous", "ref-manual/tests/index", "ref-manual/tests/mp_foo_table", "ref-manual/tests/t_case3p_a", "ref-manual/tests/t_case3p_b", "ref-manual/tests/t_case3p_c", "ref-manual/tests/t_case3p_d", "ref-manual/tests/t_case3p_e", "ref-manual/tests/t_case3p_f", "ref-manual/tests/t_case3p_g", "ref-manual/tests/t_case3p_h", "ref-manual/tests/t_case9_gizmo", "ref-manual/tests/t_dmc_element", "ref-manual/tests/t_mp_data_model", "ref-manual/tests/t_mp_dm_converter_mpc2", "ref-manual/tests/t_mp_mapped_array", "ref-manual/tests/t_mp_table", "ref-manual/tests/t_mpxt_legacy_dcline", "ref-manual/tests/t_mpxt_reserves", "ref-manual/tests/t_nm_element", "ref-manual/tests/t_node_test", "ref-manual/tests/t_port_inj_current_acc", "ref-manual/tests/t_port_inj_current_acp", "ref-manual/tests/t_port_inj_power_acc", "ref-manual/tests/t_port_inj_power_acp", "ref-manual/tests/t_pretty_print", "ref-manual/tests/t_run_mp", "ref-manual/tests/t_run_mp_3p", "ref-manual/tests/t_run_opf_default", "ref-manual/tests/test_matpower", "tech-notes", "users-manual/index"], "filenames": ["dev-manual/acknowledgments.rst", "dev-manual/architecture.rst", "dev-manual/customizing.rst", "dev-manual/data-model.rst", "dev-manual/data-model-converter.rst", "dev-manual/index.rst", "dev-manual/introduction.rst", "dev-manual/math-model.rst", "dev-manual/net-model.rst", "dev-manual/notation.rst", "dev-manual/references.rst", "dev-manual/task.rst", "howto/add-constraint.rst", "howto/builddocs.rst", "howto/builddocs/generate_autodoc_stubs.rst", "howto/builddocs/generate_matpower_autodoc.rst", "howto/builddocs/generate_source_symlinks.rst", "howto/element.rst", "howto/extension.rst", "howto/gizmo-element/index.rst", "howto/three-phase.rst", "index.rst", "mips/functions/have_feature_lu_vec.rst", "mips/functions/have_feature_pardiso.rst", "mips/functions/have_feature_pardiso_legacy.rst", "mips/functions/have_feature_pardiso_object.rst", "mips/functions/mips.rst", "mips/functions/mips_example1.rst", "mips/functions/mips_example2.rst", "mips/functions/mipsver.rst", "mips/functions/mplinsolve.rst", "mips/functions/qps_mips.rst", "mips/functions/t_mips.rst", "mips/functions/t_mips_pardiso.rst", "mips/functions/t_mplinsolve.rst", "mips/functions/t_qps_mips.rst", "mips/functions/test_mips.rst", "mips/index.rst", "mips/reference.rst", "most/functions/addgen2mpc.rst", "most/functions/addstorage.rst", "most/functions/addwind.rst", "most/functions/apply_profile.rst", "most/functions/c118swf.rst", "most/functions/ex_case3a.rst", "most/functions/ex_case3b.rst", "most/functions/ex_contab.rst", "most/functions/ex_load_profile.rst", "most/functions/ex_storage.rst", "most/functions/ex_transmat.rst", "most/functions/ex_wind.rst", "most/functions/ex_wind_profile.rst", "most/functions/ex_wind_profile_d.rst", "most/functions/ex_wind_uc.rst", "most/functions/ex_xgd.rst", "most/functions/ex_xgd_ramp.rst", "most/functions/ex_xgd_res.rst", "most/functions/ex_xgd_uc.rst", "most/functions/filter_ramp_transitions.rst", "most/functions/getprofiles.rst", "most/functions/idx_profile.rst", "most/functions/loadgenericdata.rst", "most/functions/loadmd.rst", "most/functions/loadstoragedata.rst", "most/functions/loadxgendata.rst", "most/functions/md_init.rst", "most/functions/most.rst", "most/functions/most_ex1_ed.rst", "most/functions/most_ex2_dcopf.rst", "most/functions/most_ex3_dcopf_w_uc.rst", "most/functions/most_ex4_dcopf_ss.rst", "most/functions/most_ex5_mpopf.rst", "most/functions/most_ex6_uc.rst", "most/functions/most_ex7_suc.rst", "most/functions/most_summary.rst", "most/functions/mostver.rst", "most/functions/mpoption_info_most.rst", "most/functions/plot_gen.rst", "most/functions/plot_storage.rst", "most/functions/plot_uc.rst", "most/functions/plot_uc_data.rst", "most/functions/t_case30_most.rst", "most/functions/t_case3_most.rst", "most/functions/t_case_tlmp.rst", "most/functions/t_case_tlmp_storage.rst", "most/functions/t_most_30b_1_1_0.rst", "most/functions/t_most_30b_1_1_0_uc.rst", "most/functions/t_most_30b_1_1_17.rst", "most/functions/t_most_30b_3_1_0.rst", "most/functions/t_most_30b_3_1_17.rst", "most/functions/t_most_3b_1_1_0.rst", "most/functions/t_most_3b_1_1_2.rst", "most/functions/t_most_3b_3_1_0.rst", "most/functions/t_most_3b_3_1_2.rst", "most/functions/t_most_fixed_res.rst", "most/functions/t_most_mpopf.rst", "most/functions/t_most_sp.rst", "most/functions/t_most_spuc.rst", "most/functions/t_most_suc.rst", "most/functions/t_most_tlmp.rst", "most/functions/t_most_uc.rst", "most/functions/t_most_w_ds.rst", "most/functions/test_most.rst", "most/functions/uniformwindprofile.rst", "most/index.rst", "most/reference.rst", "mpom/classes/mp_idx_manager.rst", "mpom/classes/opt_model.rst", "mpom/functions/convert_lin_constraint.rst", "mpom/functions/convert_lin_constraint_multipliers.rst", "mpom/functions/cplex_options.rst", "mpom/functions/glpk_options.rst", "mpom/functions/gurobi_options.rst", "mpom/functions/gurobiver.rst", "mpom/functions/have_feature_bpmpd.rst", "mpom/functions/have_feature_catchme.rst", "mpom/functions/have_feature_clp.rst", "mpom/functions/have_feature_cplex.rst", "mpom/functions/have_feature_evalc.rst", "mpom/functions/have_feature_fmincon.rst", "mpom/functions/have_feature_fmincon_ipm.rst", "mpom/functions/have_feature_fsolve.rst", "mpom/functions/have_feature_glpk.rst", "mpom/functions/have_feature_gurobi.rst", "mpom/functions/have_feature_intlinprog.rst", "mpom/functions/have_feature_ipopt.rst", "mpom/functions/have_feature_ipopt_auxdata.rst", "mpom/functions/have_feature_isequaln.rst", "mpom/functions/have_feature_knitro.rst", "mpom/functions/have_feature_knitromatlab.rst", "mpom/functions/have_feature_ktrlink.rst", "mpom/functions/have_feature_linprog.rst", "mpom/functions/have_feature_linprog_ds.rst", "mpom/functions/have_feature_mosek.rst", "mpom/functions/have_feature_opti_clp.rst", "mpom/functions/have_feature_optim.rst", "mpom/functions/have_feature_optimoptions.rst", "mpom/functions/have_feature_osqp.rst", "mpom/functions/have_feature_quadprog.rst", "mpom/functions/have_feature_quadprog_ls.rst", "mpom/functions/have_feature_sdpt3.rst", "mpom/functions/have_feature_sedumi.rst", "mpom/functions/have_feature_yalmip.rst", "mpom/functions/ipopt_options.rst", "mpom/functions/miqps_cplex.rst", "mpom/functions/miqps_glpk.rst", "mpom/functions/miqps_gurobi.rst", "mpom/functions/miqps_master.rst", "mpom/functions/miqps_mosek.rst", "mpom/functions/miqps_ot.rst", "mpom/functions/mosek_options.rst", "mpom/functions/mosek_symbcon.rst", "mpom/functions/mpomver.rst", "mpom/functions/mpopt2nleqopt.rst", "mpom/functions/mpopt2nlpopt.rst", "mpom/functions/mpopt2pneopt.rst", "mpom/functions/mpopt2qpopt.rst", "mpom/functions/nested_struct_copy.rst", "mpom/functions/nleqs_core.rst", "mpom/functions/nleqs_fd_newton.rst", "mpom/functions/nleqs_fsolve.rst", "mpom/functions/nleqs_gauss_seidel.rst", "mpom/functions/nleqs_master.rst", "mpom/functions/nleqs_master_ex1.rst", "mpom/functions/nleqs_master_ex2.rst", "mpom/functions/nleqs_newton.rst", "mpom/functions/nlp_consfcn.rst", "mpom/functions/nlp_costfcn.rst", "mpom/functions/nlp_hessfcn.rst", "mpom/functions/nlps_fmincon.rst", "mpom/functions/nlps_ipopt.rst", "mpom/functions/nlps_knitro.rst", "mpom/functions/nlps_master.rst", "mpom/functions/nlps_master_ex1.rst", "mpom/functions/nlps_master_ex2.rst", "mpom/functions/osqp_options.rst", "mpom/functions/osqpver.rst", "mpom/functions/pne_callback_default.rst", "mpom/functions/pne_callback_nose.rst", "mpom/functions/pne_callback_target_lam.rst", "mpom/functions/pne_detect_events.rst", "mpom/functions/pne_detected_event.rst", "mpom/functions/pne_event_nose.rst", "mpom/functions/pne_event_target_lam.rst", "mpom/functions/pne_ex1.rst", "mpom/functions/pne_pfcn_arc_len.rst", "mpom/functions/pne_pfcn_natural.rst", "mpom/functions/pne_pfcn_pseudo_arc_len.rst", "mpom/functions/pne_register_callbacks.rst", "mpom/functions/pne_register_events.rst", "mpom/functions/pnes_master.rst", "mpom/functions/qp_ex1.rst", "mpom/functions/qps_bpmpd.rst", "mpom/functions/qps_clp.rst", "mpom/functions/qps_cplex.rst", "mpom/functions/qps_glpk.rst", "mpom/functions/qps_gurobi.rst", "mpom/functions/qps_ipopt.rst", "mpom/functions/qps_master.rst", "mpom/functions/qps_mosek.rst", "mpom/functions/qps_osqp.rst", "mpom/functions/qps_ot.rst", "mpom/functions/t_miqps_master.rst", "mpom/functions/t_nested_struct_copy.rst", "mpom/functions/t_nleqs_master.rst", "mpom/functions/t_nlps_master.rst", "mpom/functions/t_om_solve_leqs.rst", "mpom/functions/t_om_solve_miqps.rst", "mpom/functions/t_om_solve_nleqs.rst", "mpom/functions/t_om_solve_nlps.rst", "mpom/functions/t_om_solve_pne.rst", "mpom/functions/t_om_solve_qps.rst", "mpom/functions/t_opt_model.rst", "mpom/functions/t_pnes_master.rst", "mpom/functions/t_qps_master.rst", "mpom/functions/test_mp_opt_model.rst", "mpom/index.rst", "mpom/reference.rst", "mptest/functions/have_feature.rst", "mptest/functions/have_feature_matlab.rst", "mptest/functions/have_feature_octave.rst", "mptest/functions/mptestver.rst", "mptest/functions/t_begin.rst", "mptest/functions/t_end.rst", "mptest/functions/t_file_match.rst", "mptest/functions/t_have_feature.rst", "mptest/functions/t_is.rst", "mptest/functions/t_ok.rst", "mptest/functions/t_run_tests.rst", "mptest/functions/t_skip.rst", "mptest/functions/t_str_match.rst", "mptest/functions/t_test_fcns.rst", "mptest/functions/test_mptest.rst", "mptest/index.rst", "mptest/reference.rst", "ref-manual/classes/index.rst", "ref-manual/classes/mp/NODE_TYPE.rst", "ref-manual/classes/mp/cost_table.rst", "ref-manual/classes/mp/cost_table_utils.rst", "ref-manual/classes/mp/data_model.rst", "ref-manual/classes/mp/data_model_cpf.rst", "ref-manual/classes/mp/data_model_opf.rst", "ref-manual/classes/mp/dm_converter.rst", "ref-manual/classes/mp/dm_converter_mpc2.rst", "ref-manual/classes/mp/dm_converter_mpc2_legacy.rst", "ref-manual/classes/mp/dm_element.rst", "ref-manual/classes/mp/dmc_element.rst", "ref-manual/classes/mp/dmce_branch_mpc2.rst", "ref-manual/classes/mp/dmce_bus3p_mpc2.rst", "ref-manual/classes/mp/dmce_bus_mpc2.rst", "ref-manual/classes/mp/dmce_buslink_mpc2.rst", "ref-manual/classes/mp/dmce_gen3p_mpc2.rst", "ref-manual/classes/mp/dmce_gen_mpc2.rst", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2.rst", "ref-manual/classes/mp/dmce_line3p_mpc2.rst", "ref-manual/classes/mp/dmce_load3p_mpc2.rst", "ref-manual/classes/mp/dmce_load_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_gen_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_zone_mpc2.rst", "ref-manual/classes/mp/dmce_shunt_mpc2.rst", "ref-manual/classes/mp/dmce_xfmr3p_mpc2.rst", "ref-manual/classes/mp/dme_branch.rst", "ref-manual/classes/mp/dme_branch_opf.rst", "ref-manual/classes/mp/dme_bus.rst", "ref-manual/classes/mp/dme_bus3p.rst", "ref-manual/classes/mp/dme_bus3p_opf.rst", "ref-manual/classes/mp/dme_bus_opf.rst", "ref-manual/classes/mp/dme_buslink.rst", "ref-manual/classes/mp/dme_buslink_opf.rst", "ref-manual/classes/mp/dme_gen.rst", "ref-manual/classes/mp/dme_gen3p.rst", "ref-manual/classes/mp/dme_gen3p_opf.rst", "ref-manual/classes/mp/dme_gen_opf.rst", "ref-manual/classes/mp/dme_legacy_dcline.rst", "ref-manual/classes/mp/dme_legacy_dcline_opf.rst", "ref-manual/classes/mp/dme_line3p.rst", "ref-manual/classes/mp/dme_line3p_opf.rst", "ref-manual/classes/mp/dme_load.rst", "ref-manual/classes/mp/dme_load3p.rst", "ref-manual/classes/mp/dme_load3p_opf.rst", "ref-manual/classes/mp/dme_load_cpf.rst", "ref-manual/classes/mp/dme_load_opf.rst", "ref-manual/classes/mp/dme_reserve_gen.rst", "ref-manual/classes/mp/dme_reserve_zone.rst", "ref-manual/classes/mp/dme_shared_opf.rst", "ref-manual/classes/mp/dme_shunt.rst", "ref-manual/classes/mp/dme_shunt_cpf.rst", "ref-manual/classes/mp/dme_shunt_opf.rst", "ref-manual/classes/mp/dme_xfmr3p.rst", "ref-manual/classes/mp/dme_xfmr3p_opf.rst", "ref-manual/classes/mp/element_container.rst", "ref-manual/classes/mp/extension.rst", "ref-manual/classes/mp/form.rst", "ref-manual/classes/mp/form_ac.rst", "ref-manual/classes/mp/form_acc.rst", "ref-manual/classes/mp/form_acp.rst", "ref-manual/classes/mp/form_dc.rst", "ref-manual/classes/mp/mapped_array.rst", "ref-manual/classes/mp/math_model.rst", "ref-manual/classes/mp/math_model_cpf_acc.rst", "ref-manual/classes/mp/math_model_cpf_acci.rst", "ref-manual/classes/mp/math_model_cpf_accs.rst", "ref-manual/classes/mp/math_model_cpf_acp.rst", "ref-manual/classes/mp/math_model_cpf_acpi.rst", "ref-manual/classes/mp/math_model_cpf_acps.rst", "ref-manual/classes/mp/math_model_opf.rst", "ref-manual/classes/mp/math_model_opf_ac.rst", "ref-manual/classes/mp/math_model_opf_acc.rst", "ref-manual/classes/mp/math_model_opf_acci.rst", "ref-manual/classes/mp/math_model_opf_acci_legacy.rst", "ref-manual/classes/mp/math_model_opf_accs.rst", "ref-manual/classes/mp/math_model_opf_accs_legacy.rst", "ref-manual/classes/mp/math_model_opf_acp.rst", "ref-manual/classes/mp/math_model_opf_acpi.rst", "ref-manual/classes/mp/math_model_opf_acpi_legacy.rst", "ref-manual/classes/mp/math_model_opf_acps.rst", "ref-manual/classes/mp/math_model_opf_acps_legacy.rst", "ref-manual/classes/mp/math_model_opf_dc.rst", "ref-manual/classes/mp/math_model_opf_dc_legacy.rst", "ref-manual/classes/mp/math_model_pf.rst", "ref-manual/classes/mp/math_model_pf_ac.rst", "ref-manual/classes/mp/math_model_pf_acci.rst", "ref-manual/classes/mp/math_model_pf_accs.rst", "ref-manual/classes/mp/math_model_pf_acpi.rst", "ref-manual/classes/mp/math_model_pf_acps.rst", "ref-manual/classes/mp/math_model_pf_dc.rst", "ref-manual/classes/mp/mm_element.rst", "ref-manual/classes/mp/mm_shared_opf_legacy.rst", "ref-manual/classes/mp/mm_shared_pfcpf.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acc.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acci.rst", "ref-manual/classes/mp/mm_shared_pfcpf_accs.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acp.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acpi.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acps.rst", "ref-manual/classes/mp/mm_shared_pfcpf_dc.rst", "ref-manual/classes/mp/mme_branch.rst", "ref-manual/classes/mp/mme_branch_opf.rst", "ref-manual/classes/mp/mme_branch_opf_ac.rst", "ref-manual/classes/mp/mme_branch_opf_acc.rst", "ref-manual/classes/mp/mme_branch_opf_acp.rst", "ref-manual/classes/mp/mme_branch_opf_dc.rst", "ref-manual/classes/mp/mme_branch_pf_ac.rst", "ref-manual/classes/mp/mme_branch_pf_dc.rst", "ref-manual/classes/mp/mme_bus.rst", "ref-manual/classes/mp/mme_bus3p.rst", "ref-manual/classes/mp/mme_bus3p_opf_acc.rst", "ref-manual/classes/mp/mme_bus3p_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_ac.rst", "ref-manual/classes/mp/mme_bus_opf_acc.rst", "ref-manual/classes/mp/mme_bus_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_dc.rst", "ref-manual/classes/mp/mme_bus_pf_ac.rst", "ref-manual/classes/mp/mme_bus_pf_dc.rst", "ref-manual/classes/mp/mme_buslink.rst", "ref-manual/classes/mp/mme_buslink_opf.rst", "ref-manual/classes/mp/mme_buslink_opf_acc.rst", "ref-manual/classes/mp/mme_buslink_opf_acp.rst", "ref-manual/classes/mp/mme_buslink_pf_ac.rst", "ref-manual/classes/mp/mme_buslink_pf_acc.rst", "ref-manual/classes/mp/mme_buslink_pf_acp.rst", "ref-manual/classes/mp/mme_gen.rst", "ref-manual/classes/mp/mme_gen3p.rst", "ref-manual/classes/mp/mme_gen3p_opf.rst", "ref-manual/classes/mp/mme_gen_opf.rst", "ref-manual/classes/mp/mme_gen_opf_ac.rst", "ref-manual/classes/mp/mme_gen_opf_ac_oval.rst", "ref-manual/classes/mp/mme_gen_opf_dc.rst", "ref-manual/classes/mp/mme_gen_pf_ac.rst", "ref-manual/classes/mp/mme_gen_pf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc.rst", "ref-manual/classes/mp/mme_line3p.rst", "ref-manual/classes/mp/mme_line3p_opf.rst", "ref-manual/classes/mp/mme_load.rst", "ref-manual/classes/mp/mme_load_cpf.rst", "ref-manual/classes/mp/mme_load_pf_ac.rst", "ref-manual/classes/mp/mme_load_pf_dc.rst", "ref-manual/classes/mp/mme_reserve_gen.rst", "ref-manual/classes/mp/mme_reserve_zone.rst", "ref-manual/classes/mp/mme_shunt.rst", "ref-manual/classes/mp/mme_shunt_cpf.rst", "ref-manual/classes/mp/mme_shunt_pf_ac.rst", "ref-manual/classes/mp/mme_shunt_pf_dc.rst", "ref-manual/classes/mp/mme_xfmr3p.rst", "ref-manual/classes/mp/mme_xfmr3p_opf.rst", "ref-manual/classes/mp/net_model.rst", "ref-manual/classes/mp/net_model_ac.rst", "ref-manual/classes/mp/net_model_acc.rst", "ref-manual/classes/mp/net_model_acp.rst", "ref-manual/classes/mp/net_model_dc.rst", "ref-manual/classes/mp/nm_element.rst", "ref-manual/classes/mp/nme_branch.rst", "ref-manual/classes/mp/nme_branch_ac.rst", "ref-manual/classes/mp/nme_branch_acc.rst", "ref-manual/classes/mp/nme_branch_acp.rst", "ref-manual/classes/mp/nme_branch_dc.rst", "ref-manual/classes/mp/nme_bus.rst", "ref-manual/classes/mp/nme_bus3p.rst", "ref-manual/classes/mp/nme_bus3p_acc.rst", "ref-manual/classes/mp/nme_bus3p_acp.rst", "ref-manual/classes/mp/nme_bus_acc.rst", "ref-manual/classes/mp/nme_bus_acp.rst", "ref-manual/classes/mp/nme_bus_dc.rst", "ref-manual/classes/mp/nme_buslink.rst", "ref-manual/classes/mp/nme_buslink_acc.rst", "ref-manual/classes/mp/nme_buslink_acp.rst", "ref-manual/classes/mp/nme_gen.rst", "ref-manual/classes/mp/nme_gen3p.rst", "ref-manual/classes/mp/nme_gen3p_acc.rst", "ref-manual/classes/mp/nme_gen3p_acp.rst", "ref-manual/classes/mp/nme_gen_ac.rst", "ref-manual/classes/mp/nme_gen_acc.rst", "ref-manual/classes/mp/nme_gen_acp.rst", "ref-manual/classes/mp/nme_gen_dc.rst", "ref-manual/classes/mp/nme_legacy_dcline.rst", "ref-manual/classes/mp/nme_legacy_dcline_ac.rst", "ref-manual/classes/mp/nme_legacy_dcline_acc.rst", "ref-manual/classes/mp/nme_legacy_dcline_acp.rst", "ref-manual/classes/mp/nme_legacy_dcline_dc.rst", "ref-manual/classes/mp/nme_line3p.rst", "ref-manual/classes/mp/nme_load.rst", "ref-manual/classes/mp/nme_load3p.rst", "ref-manual/classes/mp/nme_load_ac.rst", "ref-manual/classes/mp/nme_load_acc.rst", "ref-manual/classes/mp/nme_load_acp.rst", "ref-manual/classes/mp/nme_load_dc.rst", "ref-manual/classes/mp/nme_shunt.rst", "ref-manual/classes/mp/nme_shunt_ac.rst", "ref-manual/classes/mp/nme_shunt_acc.rst", "ref-manual/classes/mp/nme_shunt_acp.rst", "ref-manual/classes/mp/nme_shunt_dc.rst", "ref-manual/classes/mp/nme_xfmr3p.rst", "ref-manual/classes/mp/task.rst", "ref-manual/classes/mp/task_cpf.rst", "ref-manual/classes/mp/task_cpf_legacy.rst", "ref-manual/classes/mp/task_opf.rst", "ref-manual/classes/mp/task_opf_legacy.rst", "ref-manual/classes/mp/task_pf.rst", "ref-manual/classes/mp/task_pf_legacy.rst", "ref-manual/classes/mp/task_shared_legacy.rst", "ref-manual/classes/mp/xt_3p.rst", "ref-manual/classes/mp/xt_legacy_dcline.rst", "ref-manual/classes/mp/xt_oval_cap_curve.rst", "ref-manual/classes/mp/xt_reserves.rst", "ref-manual/classes/mp_table.rst", "ref-manual/classes/mp_table_subclass.rst", "ref-manual/functions/index.rst", "ref-manual/functions/install_matpower.rst", "ref-manual/functions/mp_table_class.rst", "ref-manual/functions/run_cpf.rst", "ref-manual/functions/run_mp.rst", "ref-manual/functions/run_opf.rst", "ref-manual/functions/run_pf.rst", "ref-manual/index.rst", "ref-manual/introduction.rst", "ref-manual/legacy/classes/opf_model.rst", "ref-manual/legacy/functions/add_userfcn.rst", "ref-manual/legacy/functions/apply_changes.rst", "ref-manual/legacy/functions/bustypes.rst", "ref-manual/legacy/functions/calc_branch_angle.rst", "ref-manual/legacy/functions/calc_v_i_sum.rst", "ref-manual/legacy/functions/calc_v_pq_sum.rst", "ref-manual/legacy/functions/calc_v_y_sum.rst", "ref-manual/legacy/functions/case_info.rst", "ref-manual/legacy/functions/caseformat.rst", "ref-manual/legacy/functions/cdf2mpc.rst", "ref-manual/legacy/functions/compare_case.rst", "ref-manual/legacy/functions/connected_components.rst", "ref-manual/legacy/functions/cpf_corrector.rst", "ref-manual/legacy/functions/cpf_current_mpc.rst", "ref-manual/legacy/functions/cpf_default_callback.rst", "ref-manual/legacy/functions/cpf_detect_events.rst", "ref-manual/legacy/functions/cpf_flim_event.rst", "ref-manual/legacy/functions/cpf_flim_event_cb.rst", "ref-manual/legacy/functions/cpf_nose_event.rst", "ref-manual/legacy/functions/cpf_nose_event_cb.rst", "ref-manual/legacy/functions/cpf_p.rst", "ref-manual/legacy/functions/cpf_p_jac.rst", "ref-manual/legacy/functions/cpf_plim_event.rst", "ref-manual/legacy/functions/cpf_plim_event_cb.rst", "ref-manual/legacy/functions/cpf_predictor.rst", "ref-manual/legacy/functions/cpf_qlim_event.rst", "ref-manual/legacy/functions/cpf_qlim_event_cb.rst", "ref-manual/legacy/functions/cpf_register_callback.rst", "ref-manual/legacy/functions/cpf_register_event.rst", "ref-manual/legacy/functions/cpf_tangent.rst", "ref-manual/legacy/functions/cpf_target_lam_event.rst", "ref-manual/legacy/functions/cpf_target_lam_event_cb.rst", "ref-manual/legacy/functions/cpf_vlim_event.rst", "ref-manual/legacy/functions/cpf_vlim_event_cb.rst", "ref-manual/legacy/functions/d2Abr_dV2.rst", "ref-manual/legacy/functions/d2Ibr_dV2.rst", "ref-manual/legacy/functions/d2Imis_dV2.rst", "ref-manual/legacy/functions/d2Imis_dVdSg.rst", "ref-manual/legacy/functions/d2Sbr_dV2.rst", "ref-manual/legacy/functions/d2Sbus_dV2.rst", "ref-manual/legacy/functions/dAbr_dV.rst", "ref-manual/legacy/functions/dIbr_dV.rst", "ref-manual/legacy/functions/dImis_dV.rst", "ref-manual/legacy/functions/dSbr_dV.rst", "ref-manual/legacy/functions/dSbus_dV.rst", "ref-manual/legacy/functions/dcopf.rst", "ref-manual/legacy/functions/dcopf_solver.rst", "ref-manual/legacy/functions/dcpf.rst", "ref-manual/legacy/functions/define_constants.rst", "ref-manual/legacy/functions/e2i_data.rst", "ref-manual/legacy/functions/e2i_field.rst", "ref-manual/legacy/functions/ext2int.rst", "ref-manual/legacy/functions/extract_islands.rst", "ref-manual/legacy/functions/fdpf.rst", "ref-manual/legacy/functions/feval_w_path.rst", "ref-manual/legacy/functions/find_bridges.rst", "ref-manual/legacy/functions/find_islands.rst", "ref-manual/legacy/functions/fmincopf.rst", "ref-manual/legacy/functions/gausspf.rst", "ref-manual/legacy/functions/genfuels.rst", "ref-manual/legacy/functions/gentypes.rst", "ref-manual/legacy/functions/get_losses.rst", "ref-manual/legacy/functions/get_reorder.rst", "ref-manual/legacy/functions/hasPQcap.rst", "ref-manual/legacy/functions/have_feature_e4st.rst", "ref-manual/legacy/functions/have_feature_minopf.rst", "ref-manual/legacy/functions/have_feature_most.rst", "ref-manual/legacy/functions/have_feature_mp_core.rst", "ref-manual/legacy/functions/have_feature_pdipmopf.rst", "ref-manual/legacy/functions/have_feature_regexp_split.rst", "ref-manual/legacy/functions/have_feature_scpdipmopf.rst", "ref-manual/legacy/functions/have_feature_sdp_pf.rst", "ref-manual/legacy/functions/have_feature_smartmarket.rst", "ref-manual/legacy/functions/have_feature_syngrid.rst", "ref-manual/legacy/functions/have_feature_table.rst", "ref-manual/legacy/functions/have_feature_tralmopf.rst", "ref-manual/legacy/functions/i2e_data.rst", "ref-manual/legacy/functions/i2e_field.rst", "ref-manual/legacy/functions/idx_brch.rst", "ref-manual/legacy/functions/idx_bus.rst", "ref-manual/legacy/functions/idx_cost.rst", "ref-manual/legacy/functions/idx_ct.rst", "ref-manual/legacy/functions/idx_dcline.rst", "ref-manual/legacy/functions/idx_gen.rst", "ref-manual/legacy/functions/int2ext.rst", "ref-manual/legacy/functions/isload.rst", "ref-manual/legacy/functions/load2disp.rst", "ref-manual/legacy/functions/loadcase.rst", "ref-manual/legacy/functions/loadshed.rst", "ref-manual/legacy/functions/makeAang.rst", "ref-manual/legacy/functions/makeApq.rst", "ref-manual/legacy/functions/makeAvl.rst", "ref-manual/legacy/functions/makeAy.rst", "ref-manual/legacy/functions/makeB.rst", "ref-manual/legacy/functions/makeBdc.rst", "ref-manual/legacy/functions/makeJac.rst", "ref-manual/legacy/functions/makeLODF.rst", "ref-manual/legacy/functions/makePTDF.rst", "ref-manual/legacy/functions/makeSbus.rst", "ref-manual/legacy/functions/makeSdzip.rst", "ref-manual/legacy/functions/makeYbus.rst", "ref-manual/legacy/functions/make_vcorr.rst", "ref-manual/legacy/functions/make_zpv.rst", "ref-manual/legacy/functions/margcost.rst", "ref-manual/legacy/functions/miqps_matpower.rst", "ref-manual/legacy/functions/modcost.rst", "ref-manual/legacy/functions/mpoption.rst", "ref-manual/legacy/functions/mpoption_info_clp.rst", "ref-manual/legacy/functions/mpoption_info_cplex.rst", "ref-manual/legacy/functions/mpoption_info_fmincon.rst", "ref-manual/legacy/functions/mpoption_info_glpk.rst", "ref-manual/legacy/functions/mpoption_info_gurobi.rst", "ref-manual/legacy/functions/mpoption_info_intlinprog.rst", "ref-manual/legacy/functions/mpoption_info_ipopt.rst", "ref-manual/legacy/functions/mpoption_info_knitro.rst", "ref-manual/legacy/functions/mpoption_info_linprog.rst", "ref-manual/legacy/functions/mpoption_info_mips.rst", "ref-manual/legacy/functions/mpoption_info_mosek.rst", "ref-manual/legacy/functions/mpoption_info_osqp.rst", "ref-manual/legacy/functions/mpoption_info_quadprog.rst", "ref-manual/legacy/functions/mpoption_old.rst", "ref-manual/legacy/functions/mpver.rst", "ref-manual/legacy/functions/newtonpf.rst", "ref-manual/legacy/functions/newtonpf_I_cart.rst", "ref-manual/legacy/functions/newtonpf_I_hybrid.rst", "ref-manual/legacy/functions/newtonpf_I_polar.rst", "ref-manual/legacy/functions/newtonpf_S_cart.rst", "ref-manual/legacy/functions/newtonpf_S_hybrid.rst", "ref-manual/legacy/functions/nlpopf_solver.rst", "ref-manual/legacy/functions/opf.rst", "ref-manual/legacy/functions/opf_args.rst", "ref-manual/legacy/functions/opf_branch_ang_fcn.rst", "ref-manual/legacy/functions/opf_branch_ang_hess.rst", "ref-manual/legacy/functions/opf_branch_flow_fcn.rst", "ref-manual/legacy/functions/opf_branch_flow_hess.rst", "ref-manual/legacy/functions/opf_current_balance_fcn.rst", "ref-manual/legacy/functions/opf_current_balance_hess.rst", "ref-manual/legacy/functions/opf_execute.rst", "ref-manual/legacy/functions/opf_gen_cost_fcn.rst", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn.rst", "ref-manual/legacy/functions/opf_nle_fcn1.rst", "ref-manual/legacy/functions/opf_nle_hess1.rst", "ref-manual/legacy/functions/opf_power_balance_fcn.rst", "ref-manual/legacy/functions/opf_power_balance_hess.rst", "ref-manual/legacy/functions/opf_setup.rst", "ref-manual/legacy/functions/opf_veq_fcn.rst", "ref-manual/legacy/functions/opf_veq_hess.rst", "ref-manual/legacy/functions/opf_vlim_fcn.rst", "ref-manual/legacy/functions/opf_vlim_hess.rst", "ref-manual/legacy/functions/opf_vref_fcn.rst", "ref-manual/legacy/functions/opf_vref_hess.rst", "ref-manual/legacy/functions/order_radial.rst", "ref-manual/legacy/functions/pfsoln.rst", "ref-manual/legacy/functions/poly2pwl.rst", "ref-manual/legacy/functions/polycost.rst", "ref-manual/legacy/functions/pqcost.rst", "ref-manual/legacy/functions/printpf.rst", "ref-manual/legacy/functions/psse2mpc.rst", "ref-manual/legacy/functions/psse_convert.rst", "ref-manual/legacy/functions/psse_convert_hvdc.rst", "ref-manual/legacy/functions/psse_convert_xfmr.rst", "ref-manual/legacy/functions/psse_parse.rst", "ref-manual/legacy/functions/psse_parse_line.rst", "ref-manual/legacy/functions/psse_parse_section.rst", "ref-manual/legacy/functions/psse_read.rst", "ref-manual/legacy/functions/qps_matpower.rst", "ref-manual/legacy/functions/radial_pf.rst", "ref-manual/legacy/functions/remove_userfcn.rst", "ref-manual/legacy/functions/run_userfcn.rst", "ref-manual/legacy/functions/runcpf.rst", "ref-manual/legacy/functions/rundcopf.rst", "ref-manual/legacy/functions/rundcpf.rst", "ref-manual/legacy/functions/runduopf.rst", "ref-manual/legacy/functions/runopf.rst", "ref-manual/legacy/functions/runopf_w_res.rst", "ref-manual/legacy/functions/runpf.rst", "ref-manual/legacy/functions/runuopf.rst", "ref-manual/legacy/functions/save2psse.rst", "ref-manual/legacy/functions/savecase.rst", "ref-manual/legacy/functions/savechgtab.rst", "ref-manual/legacy/functions/scale_load.rst", "ref-manual/legacy/functions/set_reorder.rst", "ref-manual/legacy/functions/t_apply_changes.rst", "ref-manual/legacy/functions/t_auction_case.rst", "ref-manual/legacy/functions/t_auction_minopf.rst", "ref-manual/legacy/functions/t_auction_mips.rst", "ref-manual/legacy/functions/t_auction_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_case30_userfcns.rst", "ref-manual/legacy/functions/t_case9_dcline.rst", "ref-manual/legacy/functions/t_case9_opf.rst", "ref-manual/legacy/functions/t_case9_opfv2.rst", "ref-manual/legacy/functions/t_case9_pf.rst", "ref-manual/legacy/functions/t_case9_pfv2.rst", "ref-manual/legacy/functions/t_case9_save2psse.rst", "ref-manual/legacy/functions/t_case_ext.rst", "ref-manual/legacy/functions/t_case_int.rst", "ref-manual/legacy/functions/t_chgtab.rst", "ref-manual/legacy/functions/t_cpf.rst", "ref-manual/legacy/functions/t_cpf_cb1.rst", "ref-manual/legacy/functions/t_cpf_cb2.rst", "ref-manual/legacy/functions/t_dcline.rst", "ref-manual/legacy/functions/t_ext2int2ext.rst", "ref-manual/legacy/functions/t_feval_w_path.rst", "ref-manual/legacy/functions/t_get_losses.rst", "ref-manual/legacy/functions/t_hasPQcap.rst", "ref-manual/legacy/functions/t_hessian.rst", "ref-manual/legacy/functions/t_islands.rst", "ref-manual/legacy/functions/t_jacobian.rst", "ref-manual/legacy/functions/t_load2disp.rst", "ref-manual/legacy/functions/t_loadcase.rst", "ref-manual/legacy/functions/t_makeLODF.rst", "ref-manual/legacy/functions/t_makePTDF.rst", "ref-manual/legacy/functions/t_margcost.rst", "ref-manual/legacy/functions/t_miqps_matpower.rst", "ref-manual/legacy/functions/t_modcost.rst", "ref-manual/legacy/functions/t_mpoption.rst", "ref-manual/legacy/functions/t_mpoption_ov.rst", "ref-manual/legacy/functions/t_off2case.rst", "ref-manual/legacy/functions/t_opf_dc_bpmpd.rst", "ref-manual/legacy/functions/t_opf_dc_clp.rst", "ref-manual/legacy/functions/t_opf_dc_cplex.rst", "ref-manual/legacy/functions/t_opf_dc_default.rst", "ref-manual/legacy/functions/t_opf_dc_glpk.rst", "ref-manual/legacy/functions/t_opf_dc_gurobi.rst", "ref-manual/legacy/functions/t_opf_dc_ipopt.rst", "ref-manual/legacy/functions/t_opf_dc_mips.rst", "ref-manual/legacy/functions/t_opf_dc_mips_sc.rst", "ref-manual/legacy/functions/t_opf_dc_mosek.rst", "ref-manual/legacy/functions/t_opf_dc_osqp.rst", "ref-manual/legacy/functions/t_opf_dc_ot.rst", "ref-manual/legacy/functions/t_opf_default.rst", "ref-manual/legacy/functions/t_opf_fmincon.rst", "ref-manual/legacy/functions/t_opf_ipopt.rst", "ref-manual/legacy/functions/t_opf_knitro.rst", "ref-manual/legacy/functions/t_opf_minopf.rst", "ref-manual/legacy/functions/t_opf_mips.rst", "ref-manual/legacy/functions/t_opf_model.rst", "ref-manual/legacy/functions/t_opf_softlims.rst", "ref-manual/legacy/functions/t_opf_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_tralm.rst", "ref-manual/legacy/functions/t_opf_userfcns.rst", "ref-manual/legacy/functions/t_pf_ac.rst", "ref-manual/legacy/functions/t_pf_dc.rst", "ref-manual/legacy/functions/t_pf_radial.rst", "ref-manual/legacy/functions/t_printpf.rst", "ref-manual/legacy/functions/t_psse.rst", "ref-manual/legacy/functions/t_qps_matpower.rst", "ref-manual/legacy/functions/t_runmarket.rst", "ref-manual/legacy/functions/t_runopf_w_res.rst", "ref-manual/legacy/functions/t_scale_load.rst", "ref-manual/legacy/functions/t_total_load.rst", "ref-manual/legacy/functions/t_totcost.rst", "ref-manual/legacy/functions/t_vdep_load.rst", "ref-manual/legacy/functions/toggle_dcline.rst", "ref-manual/legacy/functions/toggle_iflims.rst", "ref-manual/legacy/functions/toggle_reserves.rst", "ref-manual/legacy/functions/toggle_softlims.rst", "ref-manual/legacy/functions/total_load.rst", "ref-manual/legacy/functions/totcost.rst", "ref-manual/legacy/functions/uopf.rst", "ref-manual/legacy/functions/update_mupq.rst", "ref-manual/legacy/functions/zgausspf.rst", "ref-manual/legacy/index.rst", "ref-manual/previous.rst", "ref-manual/tests/index.rst", "ref-manual/tests/mp_foo_table.rst", "ref-manual/tests/t_case3p_a.rst", "ref-manual/tests/t_case3p_b.rst", "ref-manual/tests/t_case3p_c.rst", "ref-manual/tests/t_case3p_d.rst", "ref-manual/tests/t_case3p_e.rst", "ref-manual/tests/t_case3p_f.rst", "ref-manual/tests/t_case3p_g.rst", "ref-manual/tests/t_case3p_h.rst", "ref-manual/tests/t_case9_gizmo.rst", "ref-manual/tests/t_dmc_element.rst", "ref-manual/tests/t_mp_data_model.rst", "ref-manual/tests/t_mp_dm_converter_mpc2.rst", "ref-manual/tests/t_mp_mapped_array.rst", "ref-manual/tests/t_mp_table.rst", "ref-manual/tests/t_mpxt_legacy_dcline.rst", "ref-manual/tests/t_mpxt_reserves.rst", "ref-manual/tests/t_nm_element.rst", "ref-manual/tests/t_node_test.rst", "ref-manual/tests/t_port_inj_current_acc.rst", "ref-manual/tests/t_port_inj_current_acp.rst", "ref-manual/tests/t_port_inj_power_acc.rst", "ref-manual/tests/t_port_inj_power_acp.rst", "ref-manual/tests/t_pretty_print.rst", "ref-manual/tests/t_run_mp.rst", "ref-manual/tests/t_run_mp_3p.rst", "ref-manual/tests/t_run_opf_default.rst", "ref-manual/tests/test_matpower.rst", "tech-notes.rst", "users-manual/index.rst"], "titles": ["<span class=\"section-number\">10. </span>Acknowledgments", "<span class=\"section-number\">3. </span>Architecture Overview", "<span class=\"section-number\">9. </span>Customizing <span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span>", "<span class=\"section-number\">5. </span>Data Model Object", "<span class=\"section-number\">6. </span>Data Model Converter Object", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Developer\u2019s Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">8. </span>Mathematical Model Object", "<span class=\"section-number\">7. </span>Network Model Object", "<span class=\"section-number\">2. </span>Notation", "<span class=\"section-number\">11. </span>References", "<span class=\"section-number\">4. </span>Task Object", "How to Add an OPF Constraint", "How to Build the Documentation", "generate_autodoc_stubs", "generate_matpower_autodoc", "generate_source_symlinks", "How to Create a New Element Type", "How to Create an Extension", "A Test Gizmo Element Type", "How to Run a Three-Phase Power Flow", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Documentation", "have_feature_lu_vec", "have_feature_pardiso", "have_feature_pardiso_legacy", "have_feature_pardiso_object", "mips", "mips_example1", "mips_example2", "mipsver", "mplinsolve", "qps_mips", "t_mips", "t_mips_pardiso", "t_mplinsolve", "t_qps_mips", "test_mips", "MIPS User\u2019s Manual", "Reference", "addgen2mpc", "addstorage", "addwind", "apply_profile", "c118swf", "ex_case3a", "ex_case3b", "ex_contab", "ex_load_profile", "ex_storage", "ex_transmat", "ex_wind", "ex_wind_profile", "ex_wind_profile_d", "ex_wind_uc", "ex_xgd", "ex_xgd_ramp", "ex_xgd_res", "ex_xgd_uc", "filter_ramp_transitions", "getprofiles", "idx_profile", "loadgenericdata", "loadmd", "loadstoragedata", "loadxgendata", "md_init", "most", "most_ex1_ed", "most_ex2_dcopf", "most_ex3_dcopf_w_uc", "most_ex4_dcopf_ss", "most_ex5_mpopf", "most_ex6_uc", "most_ex7_suc", "most_summary", "mostver", "mpoption_info_most", "plot_gen", "plot_storage", "plot_uc", "plot_uc_data", "t_case30_most", "t_case3_most", "t_case_tlmp", "t_case_tlmp_storage", "t_most_30b_1_1_0", "t_most_30b_1_1_0_uc", "t_most_30b_1_1_17", "t_most_30b_3_1_0", "t_most_30b_3_1_17", "t_most_3b_1_1_0", "t_most_3b_1_1_2", "t_most_3b_3_1_0", "t_most_3b_3_1_2", "t_most_fixed_res", "t_most_mpopf", "t_most_sp", "t_most_spuc", "t_most_suc", "t_most_tlmp", "t_most_uc", "t_most_w_ds", "test_most", "uniformwindprofile", "MOST User\u2019s Manual", "Reference", "mp_idx_manager", "opt_model", "convert_lin_constraint", "convert_lin_constraint_multipliers", "cplex_options", "glpk_options", "gurobi_options", "gurobiver", "have_feature_bpmpd", "have_feature_catchme", "have_feature_clp", "have_feature_cplex", "have_feature_evalc", "have_feature_fmincon", "have_feature_fmincon_ipm", "have_feature_fsolve", "have_feature_glpk", "have_feature_gurobi", "have_feature_intlinprog", "have_feature_ipopt", "have_feature_ipopt_auxdata", "have_feature_isequaln", "have_feature_knitro", "have_feature_knitromatlab", "have_feature_ktrlink", "have_feature_linprog", "have_feature_linprog_ds", "have_feature_mosek", "have_feature_opti_clp", "have_feature_optim", "have_feature_optimoptions", "have_feature_osqp", "have_feature_quadprog", "have_feature_quadprog_ls", "have_feature_sdpt3", "have_feature_sedumi", "have_feature_yalmip", "ipopt_options", "miqps_cplex", "miqps_glpk", "miqps_gurobi", "miqps_master", "miqps_mosek", "miqps_ot", "mosek_options", "mosek_symbcon", "mpomver", "mpopt2nleqopt", "mpopt2nlpopt", "mpopt2pneopt", "mpopt2qpopt", "nested_struct_copy", "nleqs_core", "nleqs_fd_newton", "nleqs_fsolve", "nleqs_gauss_seidel", "nleqs_master", "nleqs_master_ex1", "nleqs_master_ex2", "nleqs_newton", "nlp_consfcn", "nlp_costfcn", "nlp_hessfcn", "nlps_fmincon", "nlps_ipopt", "nlps_knitro", "nlps_master", "nlps_master_ex1", "nlps_master_ex2", "osqp_options", "osqpver", "pne_callback_default", "pne_callback_nose", "pne_callback_target_lam", "pne_detect_events", "pne_detected_event", "pne_event_nose", "pne_event_target_lam", "pne_ex1", "pne_pfcn_arc_len", "pne_pfcn_natural", "pne_pfcn_pseudo_arc_len", "pne_register_callbacks", "pne_register_events", "pnes_master", "qp_ex1", "qps_bpmpd", "qps_clp", "qps_cplex", "qps_glpk", "qps_gurobi", "qps_ipopt", "qps_master", "qps_mosek", "qps_osqp", "qps_ot", "t_miqps_master", "t_nested_struct_copy", "t_nleqs_master", "t_nlps_master", "t_om_solve_leqs", "t_om_solve_miqps", "t_om_solve_nleqs", "t_om_solve_nlps", "t_om_solve_pne", "t_om_solve_qps", "t_opt_model", "t_pnes_master", "t_qps_master", "test_mp_opt_model", "<span class=\"raw-html\">MP-Opt-Model</span> User\u2019s Manual", "Reference", "have_feature", "have_feature_matlab", "have_feature_octave", "mptestver", "t_begin", "t_end", "t_file_match", "t_have_feature", "t_is", "t_ok", "t_run_tests", "t_skip", "t_str_match", "t_test_fcns", "test_mptest", "MP-Test User\u2019s Manual", "Reference", "<span class=\"section-number\">3. </span>Classes", "mp.NODE_TYPE", "mp.cost_table", "mp.cost_table_utils", "mp.data_model", "mp.data_model_cpf", "mp.data_model_opf", "mp.dm_converter", "mp.dm_converter_mpc2", "mp.dm_converter_mpc2_legacy", "mp.dm_element", "mp.dmc_element", "mp.dmce_branch_mpc2", "mp.dmce_bus3p_mpc2", "mp.dmce_bus_mpc2", "mp.dmce_buslink_mpc2", "mp.dmce_gen3p_mpc2", "mp.dmce_gen_mpc2", "mp.dmce_legacy_dcline_mpc2", "mp.dmce_line3p_mpc2", "mp.dmce_load3p_mpc2", "mp.dmce_load_mpc2", "mp.dmce_reserve_gen_mpc2", "mp.dmce_reserve_zone_mpc2", "mp.dmce_shunt_mpc2", "mp.dmce_xfmr3p_mpc2", "mp.dme_branch", "mp.dme_branch_opf", "mp.dme_bus", "mp.dme_bus3p", "mp.dme_bus3p_opf", "mp.dme_bus_opf", "mp.dme_buslink", "mp.dme_buslink_opf", "mp.dme_gen", "mp.dme_gen3p", "mp.dme_gen3p_opf", "mp.dme_gen_opf", "mp.dme_legacy_dcline", "mp.dme_legacy_dcline_opf", "mp.dme_line3p", "mp.dme_line3p_opf", "mp.dme_load", "mp.dme_load3p", "mp.dme_load3p_opf", "mp.dme_load_cpf", "mp.dme_load_opf", "mp.dme_reserve_gen", "mp.dme_reserve_zone", "mp.dme_shared_opf", "mp.dme_shunt", "mp.dme_shunt_cpf", "mp.dme_shunt_opf", "mp.dme_xfmr3p", "mp.dme_xfmr3p_opf", "mp.element_container", "mp.extension", "mp.form", "mp.form_ac", "mp.form_acc", "mp.form_acp", "mp.form_dc", "mp.mapped_array", "mp.math_model", "mp.math_model_cpf_acc", "mp.math_model_cpf_acci", "mp.math_model_cpf_accs", "mp.math_model_cpf_acp", "mp.math_model_cpf_acpi", "mp.math_model_cpf_acps", "mp.math_model_opf", "mp.math_model_opf_ac", "mp.math_model_opf_acc", "mp.math_model_opf_acci", "mp.math_model_opf_acci_legacy", "mp.math_model_opf_accs", "mp.math_model_opf_accs_legacy", "mp.math_model_opf_acp", "mp.math_model_opf_acpi", "mp.math_model_opf_acpi_legacy", "mp.math_model_opf_acps", "mp.math_model_opf_acps_legacy", "mp.math_model_opf_dc", "mp.math_model_opf_dc_legacy", "mp.math_model_pf", "mp.math_model_pf_ac", "mp.math_model_pf_acci", "mp.math_model_pf_accs", "mp.math_model_pf_acpi", "mp.math_model_pf_acps", "mp.math_model_pf_dc", "mp.mm_element", "mp.mm_shared_opf_legacy", "mp.mm_shared_pfcpf", "mp.mm_shared_pfcpf_ac", "mp.mm_shared_pfcpf_ac_i", "mp.mm_shared_pfcpf_acc", "mp.mm_shared_pfcpf_acci", "mp.mm_shared_pfcpf_accs", "mp.mm_shared_pfcpf_acp", "mp.mm_shared_pfcpf_acpi", "mp.mm_shared_pfcpf_acps", "mp.mm_shared_pfcpf_dc", "mp.mme_branch", "mp.mme_branch_opf", "mp.mme_branch_opf_ac", "mp.mme_branch_opf_acc", "mp.mme_branch_opf_acp", "mp.mme_branch_opf_dc", "mp.mme_branch_pf_ac", "mp.mme_branch_pf_dc", "mp.mme_bus", "mp.mme_bus3p", "mp.mme_bus3p_opf_acc", "mp.mme_bus3p_opf_acp", "mp.mme_bus_opf_ac", "mp.mme_bus_opf_acc", "mp.mme_bus_opf_acp", "mp.mme_bus_opf_dc", "mp.mme_bus_pf_ac", "mp.mme_bus_pf_dc", "mp.mme_buslink", "mp.mme_buslink_opf", "mp.mme_buslink_opf_acc", "mp.mme_buslink_opf_acp", "mp.mme_buslink_pf_ac", "mp.mme_buslink_pf_acc", "mp.mme_buslink_pf_acp", "mp.mme_gen", "mp.mme_gen3p", "mp.mme_gen3p_opf", "mp.mme_gen_opf", "mp.mme_gen_opf_ac", "mp.mme_gen_opf_ac_oval", "mp.mme_gen_opf_dc", "mp.mme_gen_pf_ac", "mp.mme_gen_pf_dc", "mp.mme_legacy_dcline", "mp.mme_legacy_dcline_opf", "mp.mme_legacy_dcline_opf_ac", "mp.mme_legacy_dcline_opf_dc", "mp.mme_legacy_dcline_pf_ac", "mp.mme_legacy_dcline_pf_dc", "mp.mme_line3p", "mp.mme_line3p_opf", "mp.mme_load", "mp.mme_load_cpf", "mp.mme_load_pf_ac", "mp.mme_load_pf_dc", "mp.mme_reserve_gen", "mp.mme_reserve_zone", "mp.mme_shunt", "mp.mme_shunt_cpf", "mp.mme_shunt_pf_ac", "mp.mme_shunt_pf_dc", "mp.mme_xfmr3p", "mp.mme_xfmr3p_opf", "mp.net_model", "mp.net_model_ac", "mp.net_model_acc", "mp.net_model_acp", "mp.net_model_dc", "mp.nm_element", "mp.nme_branch", "mp.nme_branch_ac", "mp.nme_branch_acc", "mp.nme_branch_acp", "mp.nme_branch_dc", "mp.nme_bus", "mp.nme_bus3p", "mp.nme_bus3p_acc", "mp.nme_bus3p_acp", "mp.nme_bus_acc", "mp.nme_bus_acp", "mp.nme_bus_dc", "mp.nme_buslink", "mp.nme_buslink_acc", "mp.nme_buslink_acp", "mp.nme_gen", "mp.nme_gen3p", "mp.nme_gen3p_acc", "mp.nme_gen3p_acp", "mp.nme_gen_ac", "mp.nme_gen_acc", "mp.nme_gen_acp", "mp.nme_gen_dc", "mp.nme_legacy_dcline", "mp.nme_legacy_dcline_ac", "mp.nme_legacy_dcline_acc", "mp.nme_legacy_dcline_acp", "mp.nme_legacy_dcline_dc", "mp.nme_line3p", "mp.nme_load", "mp.nme_load3p", "mp.nme_load_ac", "mp.nme_load_acc", "mp.nme_load_acp", "mp.nme_load_dc", "mp.nme_shunt", "mp.nme_shunt_ac", "mp.nme_shunt_acc", "mp.nme_shunt_acp", "mp.nme_shunt_dc", "mp.nme_xfmr3p", "mp.task", "mp.task_cpf", "mp.task_cpf_legacy", "mp.task_opf", "mp.task_opf_legacy", "mp.task_pf", "mp.task_pf_legacy", "mp.task_shared_legacy", "mp.xt_3p", "mp.xt_legacy_dcline", "mp.xt_oval_cap_curve", "mp.xt_reserves", "mp_table", "mp_table_subclass", "<span class=\"section-number\">2. </span>Functions", "install_matpower", "mp_table_class", "run_cpf", "run_mp", "run_opf", "run_pf", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Reference Manual", "<span class=\"section-number\">1. </span>Introduction", "opf_model", "add_userfcn", "apply_changes", "bustypes", "calc_branch_angle", "calc_v_i_sum", "calc_v_pq_sum", "calc_v_y_sum", "case_info", "caseformat", "cdf2mpc", "compare_case", "connected_components", "cpf_corrector", "cpf_current_mpc", "cpf_default_callback", "cpf_detect_events", "cpf_flim_event", "cpf_flim_event_cb", "cpf_nose_event", "cpf_nose_event_cb", "cpf_p", "cpf_p_jac", "cpf_plim_event", "cpf_plim_event_cb", "cpf_predictor", "cpf_qlim_event", "cpf_qlim_event_cb", "cpf_register_callback", "cpf_register_event", "cpf_tangent", "cpf_target_lam_event", "cpf_target_lam_event_cb", "cpf_vlim_event", "cpf_vlim_event_cb", "d2Abr_dV2", "d2Ibr_dV2", "d2Imis_dV2", "d2Imis_dVdSg", "d2Sbr_dV2", "d2Sbus_dV2", "dAbr_dV", "dIbr_dV", "dImis_dV", "dSbr_dV", "dSbus_dV", "dcopf", "dcopf_solver", "dcpf", "define_constants", "e2i_data", "e2i_field", "ext2int", "extract_islands", "fdpf", "feval_w_path", "find_bridges", "find_islands", "fmincopf", "gausspf", "genfuels", "gentypes", "get_losses", "get_reorder", "hasPQcap", "have_feature_e4st", "have_feature_minopf", "have_feature_most", "have_feature_mp_core", "have_feature_pdipmopf", "have_feature_regexp_split", "have_feature_scpdipmopf", "have_feature_sdp_pf", "have_feature_smartmarket", "have_feature_syngrid", "have_feature_table", "have_feature_tralmopf", "i2e_data", "i2e_field", "idx_brch", "idx_bus", "idx_cost", "idx_ct", "idx_dcline", "idx_gen", "int2ext", "isload", "load2disp", "loadcase", "loadshed", "makeAang", "makeApq", "makeAvl", "makeAy", "makeB", "makeBdc", "makeJac", "makeLODF", "makePTDF", "makeSbus", "makeSdzip", "makeYbus", "make_vcorr", "make_zpv", "margcost", "miqps_matpower", "modcost", "mpoption", "mpoption_info_clp", "mpoption_info_cplex", "mpoption_info_fmincon", "mpoption_info_glpk", "mpoption_info_gurobi", "mpoption_info_intlinprog", "mpoption_info_ipopt", "mpoption_info_knitro", "mpoption_info_linprog", "mpoption_info_mips", "mpoption_info_mosek", "mpoption_info_osqp", "mpoption_info_quadprog", "mpoption_old", "mpver", "newtonpf", "newtonpf_I_cart", "newtonpf_I_hybrid", "newtonpf_I_polar", "newtonpf_S_cart", "newtonpf_S_hybrid", "nlpopf_solver", "opf", "opf_args", "opf_branch_ang_fcn", "opf_branch_ang_hess", "opf_branch_flow_fcn", "opf_branch_flow_hess", "opf_current_balance_fcn", "opf_current_balance_hess", "opf_execute", "opf_gen_cost_fcn", "opf_legacy_user_cost_fcn", "opf_nle_fcn1", "opf_nle_hess1", "opf_power_balance_fcn", "opf_power_balance_hess", "opf_setup", "opf_veq_fcn", "opf_veq_hess", "opf_vlim_fcn", "opf_vlim_hess", "opf_vref_fcn", "opf_vref_hess", "order_radial", "pfsoln", "poly2pwl", "polycost", "pqcost", "printpf", "psse2mpc", "psse_convert", "psse_convert_hvdc", "psse_convert_xfmr", "psse_parse", "psse_parse_line", "psse_parse_section", "psse_read", "qps_matpower", "radial_pf", "remove_userfcn", "run_userfcn", "runcpf", "rundcopf", "rundcpf", "runduopf", "runopf", "runopf_w_res", "runpf", "runuopf", "save2psse", "savecase", "savechgtab", "scale_load", "set_reorder", "t_apply_changes", "t_auction_case", "t_auction_minopf", "t_auction_mips", "t_auction_tspopf_pdipm", "t_case30_userfcns", "t_case9_dcline", "t_case9_opf", "t_case9_opfv2", "t_case9_pf", "t_case9_pfv2", "t_case9_save2psse", "t_case_ext", "t_case_int", "t_chgtab", "t_cpf", "t_cpf_cb1", "t_cpf_cb2", "t_dcline", "t_ext2int2ext", "t_feval_w_path", "t_get_losses", "t_hasPQcap", "t_hessian", "t_islands", "t_jacobian", "t_load2disp", "t_loadcase", "t_makeLODF", "t_makePTDF", "t_margcost", "t_miqps_matpower", "t_modcost", "t_mpoption", "t_mpoption_ov", "t_off2case", "t_opf_dc_bpmpd", "t_opf_dc_clp", "t_opf_dc_cplex", "t_opf_dc_default", "t_opf_dc_glpk", "t_opf_dc_gurobi", "t_opf_dc_ipopt", "t_opf_dc_mips", "t_opf_dc_mips_sc", "t_opf_dc_mosek", "t_opf_dc_osqp", "t_opf_dc_ot", "t_opf_default", "t_opf_fmincon", "t_opf_ipopt", "t_opf_knitro", "t_opf_minopf", "t_opf_mips", "t_opf_model", "t_opf_softlims", "t_opf_tspopf_pdipm", "t_opf_tspopf_scpdipm", "t_opf_tspopf_tralm", "t_opf_userfcns", "t_pf_ac", "t_pf_dc", "t_pf_radial", "t_printpf", "t_psse", "t_qps_matpower", "t_runmarket", "t_runopf_w_res", "t_scale_load", "t_total_load", "t_totcost", "t_vdep_load", "toggle_dcline", "toggle_iflims", "toggle_reserves", "toggle_softlims", "total_load", "totcost", "uopf", "update_mupq", "zgausspf", "<span class=\"section-number\">5. </span>Legacy", "<span class=\"section-number\">6. </span>Previous Versions", "<span class=\"section-number\">4. </span>Tests", "mp_foo_table", "t_case3p_a", "t_case3p_b", "t_case3p_c", "t_case3p_d", "t_case3p_e", "t_case3p_f", "t_case3p_g", "t_case3p_h", "t_case9_gizmo", "t_dmc_element", "t_mp_data_model", "t_mp_dm_converter_mpc2", "t_mp_mapped_array", "t_mp_table", "t_mpxt_legacy_dcline", "t_mpxt_reserves", "t_nm_element", "t_node_test", "t_port_inj_current_acc", "t_port_inj_current_acp", "t_port_inj_power_acc", "t_port_inj_power_acp", "t_pretty_print", "t_run_mp", "t_run_mp_3p", "t_run_opf_default", "test_matpower", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Technical Notes", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> User\u2019s Manual"], "terms": {"matpow": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "github": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "user": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757], "": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757], "manual": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757], "extra": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "matlab": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "reg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "gnu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "octav": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "pserc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "power": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "system": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "engin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "research": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "center": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "cert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "consortium": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "electr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "reliabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "technologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "solut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "mip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "interior": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "solver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "mp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758], "test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "readm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "opt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "model": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "most": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "schedul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "tool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "technic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758], "note": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "develop": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "The": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 17, 18, 19, 20, 21, 26, 30, 31, 37, 38, 42, 43, 60, 61, 62, 66, 77, 78, 79, 103, 104, 105, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 177, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 217, 218, 224, 226, 230, 233, 234, 239, 240, 241, 246, 272, 275, 291, 292, 293, 296, 297, 298, 392, 397, 439, 447, 448, 450, 452, 453, 461, 462, 463, 467, 468, 469, 471, 472, 474, 477, 486, 489, 490, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 512, 513, 514, 516, 518, 519, 521, 526, 539, 540, 541, 542, 543, 545, 546, 548, 552, 555, 557, 558, 559, 560, 562, 564, 565, 566, 569, 583, 585, 586, 587, 588, 589, 590, 592, 593, 594, 614, 619, 620, 638, 640, 641, 650, 717, 718, 719, 720, 722, 725, 758], "team": 0, "would": [0, 2, 3, 4, 6, 7, 8, 12, 17, 19, 64, 106, 151, 157, 177, 238, 245, 397, 477, 720], "like": [0, 4, 6, 8, 12, 17, 42, 106, 107, 110, 111, 112, 143, 150, 175, 177, 180, 224, 233, 245, 297, 397, 452, 477, 478], "support": [0, 6, 22, 24, 25, 110, 115, 118, 126, 127, 132, 136, 139, 233, 443, 455, 532], "numer": [0, 4, 6, 12, 17, 19, 20, 26, 31, 42, 60, 64, 107, 147, 157, 183, 190, 198, 218, 226, 297, 443, 477, 490, 491, 513, 540, 569, 624, 626, 644, 668, 670], "grant": [0, 233], "contract": [0, 77], "have": [0, 2, 3, 4, 6, 8, 13, 17, 19, 43, 60, 62, 81, 106, 107, 109, 180, 233, 237, 368, 397, 454, 462, 465, 466, 474, 477, 515, 519, 526, 544, 592, 625, 626, 632, 643, 721, 725], "contribut": [0, 6, 17, 21], "directli": [0, 2, 3, 4, 7, 12, 17, 38, 107, 157, 160, 169, 171, 184, 191, 217, 224, 230, 233, 234, 246, 452, 471, 511, 592, 593, 620, 625, 627], "indirectli": [0, 292, 293, 294, 295, 296, 439], "over": [0, 43, 66, 439], "year": 0, "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 26, 30, 37, 38, 40, 41, 43, 59, 60, 62, 63, 64, 74, 76, 81, 104, 106, 107, 109, 143, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 178, 179, 182, 183, 185, 186, 187, 190, 193, 216, 218, 224, 226, 227, 229, 230, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 290, 291, 292, 293, 296, 297, 298, 326, 330, 392, 394, 395, 396, 397, 439, 440, 441, 443, 444, 445, 449, 450, 451, 452, 454, 456, 457, 458, 459, 461, 462, 463, 471, 472, 477, 480, 482, 486, 489, 490, 494, 496, 508, 509, 511, 512, 513, 514, 515, 516, 521, 522, 523, 526, 537, 539, 540, 543, 544, 547, 548, 556, 558, 560, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 591, 592, 617, 620, 624, 630, 632, 638, 643, 717, 721, 725, 726, 730, 758], "includ": [0, 1, 3, 4, 6, 8, 12, 13, 15, 17, 18, 19, 20, 21, 30, 45, 58, 63, 64, 66, 74, 77, 78, 79, 81, 107, 143, 177, 190, 218, 233, 239, 240, 241, 244, 245, 261, 283, 290, 294, 298, 324, 338, 339, 340, 341, 342, 343, 344, 345, 366, 368, 373, 393, 394, 395, 397, 398, 439, 440, 444, 456, 457, 458, 459, 461, 462, 470, 471, 472, 511, 514, 515, 516, 521, 523, 526, 531, 533, 537, 538, 541, 542, 545, 546, 547, 569, 583, 585, 586, 587, 588, 589, 590, 592, 593, 616, 620, 626, 627, 640, 642, 643, 664, 700, 704, 720, 721, 725], "fund": [0, 233], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 37, 40, 41, 43, 58, 59, 61, 62, 63, 64, 66, 83, 84, 95, 103, 104, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 124, 125, 131, 132, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 177, 180, 185, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 217, 227, 233, 237, 238, 239, 242, 243, 245, 246, 261, 262, 273, 274, 275, 288, 290, 292, 293, 294, 295, 296, 297, 298, 307, 312, 317, 319, 321, 322, 323, 324, 326, 339, 340, 341, 343, 344, 345, 347, 351, 352, 353, 354, 355, 364, 367, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 415, 416, 418, 419, 420, 423, 424, 426, 428, 430, 431, 432, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 452, 454, 455, 457, 461, 462, 463, 466, 467, 468, 469, 471, 477, 478, 483, 484, 486, 487, 489, 492, 503, 504, 506, 512, 513, 514, 515, 523, 524, 539, 540, 541, 545, 547, 550, 555, 557, 558, 560, 563, 565, 569, 583, 592, 596, 597, 607, 614, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 632, 633, 634, 635, 636, 638, 639, 679, 726, 730], "u": [0, 3, 7, 13, 17, 18, 20, 26, 30, 31, 74, 106, 107, 108, 109, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 233, 239, 244, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 462, 471, 472, 475, 477, 492, 509, 526, 541, 542, 543, 545, 546, 556, 557, 561, 562, 563, 569, 583, 591, 592, 593, 617, 637, 718, 719, 723], "depart": [0, 233], "energi": [0, 77, 78, 233, 522, 523, 535], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 26, 30, 31, 36, 42, 43, 60, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91, 96, 97, 98, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 132, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 175, 177, 180, 181, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 218, 224, 228, 230, 232, 233, 236, 237, 239, 245, 246, 250, 261, 262, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 290, 293, 294, 296, 297, 356, 357, 358, 359, 360, 361, 362, 365, 368, 392, 393, 397, 403, 410, 411, 412, 413, 427, 433, 439, 441, 443, 445, 451, 454, 462, 463, 464, 466, 471, 472, 474, 475, 477, 478, 492, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 512, 514, 515, 517, 523, 524, 526, 539, 541, 542, 543, 545, 546, 547, 548, 550, 551, 556, 557, 558, 559, 560, 561, 562, 563, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 591, 592, 593, 616, 617, 618, 619, 620, 621, 623, 624, 626, 627, 629, 632, 633, 634, 635, 636, 637, 638, 639, 641, 643, 661, 718, 719, 720, 721, 723, 727, 730, 734, 756, 757, 758], "nation": [0, 233], "scienc": [0, 233], "foundat": [0, 233], "2": [0, 1, 2, 3, 4, 7, 8, 9, 12, 13, 17, 18, 19, 20, 26, 28, 30, 31, 62, 64, 76, 79, 80, 83, 91, 93, 106, 107, 109, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 174, 175, 177, 184, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 222, 223, 226, 227, 229, 233, 236, 237, 239, 242, 243, 245, 246, 261, 263, 264, 267, 270, 273, 275, 277, 278, 288, 290, 293, 294, 296, 297, 368, 392, 398, 421, 439, 451, 462, 463, 464, 467, 468, 469, 471, 473, 477, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 512, 513, 514, 515, 517, 520, 523, 524, 526, 539, 540, 541, 542, 543, 545, 546, 547, 550, 556, 564, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 591, 592, 593, 596, 614, 617, 618, 643, 662, 718, 720, 731, 732, 733, 757], "arpa": 0, "e": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 17, 18, 19, 26, 29, 30, 42, 60, 62, 66, 75, 76, 96, 97, 98, 100, 106, 107, 113, 147, 152, 157, 158, 169, 170, 171, 172, 176, 177, 180, 188, 189, 190, 198, 218, 221, 236, 239, 242, 245, 246, 262, 266, 272, 274, 282, 283, 290, 291, 292, 293, 294, 295, 296, 298, 326, 392, 397, 439, 440, 446, 452, 457, 462, 463, 471, 477, 478, 479, 485, 488, 491, 495, 503, 514, 523, 556, 557, 558, 560, 563, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 620, 621, 622, 623, 624, 625, 626, 627, 632, 633, 634, 635, 636, 638, 639, 640, 643, 720, 721], "3": [0, 1, 2, 3, 7, 8, 9, 11, 12, 17, 18, 20, 26, 30, 31, 42, 43, 60, 62, 76, 79, 80, 88, 89, 90, 91, 92, 93, 106, 107, 109, 110, 111, 112, 126, 136, 143, 144, 145, 146, 147, 148, 149, 150, 159, 161, 164, 165, 169, 170, 171, 172, 175, 177, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 222, 223, 226, 227, 229, 233, 236, 237, 239, 248, 250, 251, 254, 255, 260, 263, 264, 265, 267, 268, 270, 271, 275, 276, 278, 279, 288, 289, 290, 293, 294, 296, 297, 347, 348, 349, 356, 357, 358, 359, 360, 361, 362, 364, 365, 368, 378, 379, 390, 391, 392, 393, 404, 405, 406, 410, 411, 412, 414, 415, 416, 426, 428, 438, 439, 447, 454, 462, 463, 464, 467, 471, 477, 478, 497, 499, 500, 505, 512, 513, 515, 523, 539, 540, 541, 542, 543, 545, 546, 556, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 592, 593, 652, 653, 654, 655, 718, 730, 731, 732, 733, 734, 735, 736, 737, 738, 754, 757], "other": [0, 1, 2, 3, 5, 6, 7, 8, 17, 19, 37, 42, 60, 104, 106, 107, 144, 145, 146, 147, 148, 149, 162, 169, 171, 172, 177, 190, 195, 198, 226, 233, 235, 239, 245, 298, 443, 451, 454, 460, 461, 463, 471, 477, 512, 513, 522, 523, 526, 539, 540, 569, 592, 596, 597, 620, 625, 626, 632, 717, 736, 737], "part": [0, 9, 17, 19, 20, 106, 233, 293, 294, 393, 394, 397, 471, 498, 499, 500, 501, 502, 504, 505, 506, 507, 518, 523, 565, 569, 608, 610, 612], "offic": [0, 233], "deliveri": [0, 233, 468, 523, 564, 614], "transmiss": [0, 1, 3, 8, 10, 19, 233, 261, 338, 339, 340, 341, 342, 343, 344, 345, 398, 467, 471], "program": [0, 6, 7, 21, 26, 31, 38, 107, 111, 116, 122, 125, 128, 134, 144, 145, 146, 147, 148, 149, 154, 156, 169, 170, 171, 172, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 233, 534, 723], "under": [0, 3, 6, 30, 43, 218, 219, 220, 233, 452, 535], "laboratori": [0, 233], "cooper": [0, 233], "agreement": [0, 233], "No": [0, 26, 233, 447, 448, 632], "de": [0, 233], "fc26": [0, 233], "09nt43321": [0, 233], "materi": [0, 233], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 26, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 58, 59, 60, 61, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 81, 102, 104, 105, 106, 107, 109, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 170, 171, 172, 175, 177, 179, 180, 181, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 216, 217, 218, 219, 220, 222, 224, 226, 227, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 263, 264, 266, 275, 277, 290, 292, 293, 294, 295, 296, 297, 298, 326, 366, 373, 392, 393, 397, 439, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 479, 480, 485, 486, 488, 489, 490, 491, 494, 495, 496, 497, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 607, 614, 616, 617, 618, 619, 620, 624, 625, 626, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 650, 717, 718, 719, 720, 721, 722, 723, 725, 731, 732, 733, 734, 756, 758], "base": [0, 1, 3, 7, 9, 11, 14, 16, 17, 19, 20, 26, 31, 37, 43, 64, 79, 80, 104, 106, 107, 144, 145, 146, 148, 149, 159, 160, 161, 165, 169, 170, 171, 180, 182, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 216, 233, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 455, 456, 460, 462, 467, 471, 475, 476, 477, 480, 481, 492, 496, 497, 503, 528, 538, 542, 546, 561, 569, 583, 592, 601, 623, 632, 694, 695, 696, 697, 698, 701, 702, 703, 718, 724, 729, 758], "upon": [0, 3, 190, 233, 239, 569], "work": [0, 10, 17, 143, 151, 233, 238, 393, 396, 452, 453, 454, 455, 517, 569, 617, 672, 717], "Nos": [0, 233], "0532744": [0, 233], "1642341": [0, 233], "1931421": [0, 233], "ani": [0, 1, 2, 6, 7, 8, 11, 17, 19, 59, 63, 74, 106, 107, 143, 153, 154, 155, 156, 157, 177, 180, 224, 233, 237, 238, 239, 245, 290, 291, 297, 326, 393, 439, 451, 454, 457, 463, 473, 477, 478, 480, 490, 496, 512, 514, 517, 526, 539, 544, 555, 561, 569, 584, 592, 627, 632, 638, 643, 644, 720, 724], "opinion": [0, 233], "find": [0, 1, 4, 9, 13, 17, 233, 443, 518, 519, 592, 717, 718, 719, 720], "conclus": [0, 233], "recommend": [0, 13, 151, 233], "express": [0, 8, 227, 233, 503, 504, 505, 506, 507, 555, 561, 596], "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 37, 38, 42, 43, 59, 60, 61, 62, 63, 64, 66, 78, 79, 80, 103, 104, 105, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 177, 180, 181, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 217, 224, 226, 228, 230, 233, 234, 236, 237, 239, 240, 242, 245, 246, 261, 263, 264, 267, 269, 270, 272, 275, 277, 278, 282, 285, 288, 291, 292, 293, 296, 297, 298, 326, 368, 392, 394, 395, 396, 397, 439, 441, 443, 445, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 477, 480, 490, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 509, 511, 512, 513, 514, 515, 518, 523, 526, 539, 540, 541, 542, 543, 545, 546, 549, 552, 553, 555, 557, 558, 559, 560, 561, 564, 565, 569, 583, 591, 592, 593, 594, 596, 597, 600, 614, 618, 620, 624, 625, 626, 632, 633, 634, 635, 636, 637, 638, 639, 641, 643, 644, 720, 721, 723, 735, 736, 737], "those": [0, 1, 2, 3, 6, 7, 13, 17, 43, 107, 151, 233, 240, 245, 452, 471, 512, 523, 526, 539, 559, 625, 626, 637, 642, 720], "author": [0, 233], "do": [0, 1, 12, 17, 66, 77, 78, 79, 80, 157, 158, 190, 233, 236, 238, 291, 393, 396, 439, 443, 454, 515, 569, 583, 643, 644, 720], "necessarili": [0, 42, 151, 233], "reflect": [0, 233], "view": [0, 233], "synthet": [0, 536], "data": [0, 1, 5, 8, 11, 12, 18, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 74, 105, 106, 107, 177, 217, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 304, 326, 339, 340, 343, 344, 345, 347, 351, 352, 353, 354, 355, 364, 367, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 396, 397, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 456, 457, 458, 459, 460, 462, 463, 467, 468, 469, 471, 472, 477, 479, 481, 485, 488, 493, 495, 511, 512, 513, 514, 515, 539, 540, 543, 544, 550, 553, 592, 593, 615, 619, 620, 621, 622, 623, 624, 625, 626, 627, 632, 633, 634, 635, 636, 638, 639, 641, 646, 650, 651, 652, 653, 654, 655, 656, 657, 658, 723, 724, 730, 738], "grid": [0, 536], "r": [0, 9, 10, 20, 26, 30, 64, 106, 107, 148, 158, 160, 162, 165, 190, 199, 246, 261, 275, 282, 288, 293, 393, 462, 468, 471, 475, 477, 484, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 524, 526, 541, 558, 564, 592, 593, 614, 637, 643, 719, 757], "d": [0, 4, 8, 10, 17, 19, 26, 76, 157, 190, 226, 239, 242, 243, 246, 249, 297, 397, 439, 440, 441, 442, 443, 444, 445, 446, 456, 457, 458, 459, 467, 468, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 564, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 614, 625, 626, 757], "project": [0, 6, 10, 21, 23, 233, 583], "A": [1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 20, 21, 26, 30, 31, 60, 61, 106, 107, 108, 109, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 239, 242, 244, 245, 246, 290, 298, 326, 358, 361, 366, 373, 392, 397, 462, 463, 467, 471, 512, 514, 515, 518, 525, 539, 541, 544, 555, 565, 569, 592, 593, 630, 644, 723, 757], "new": [1, 2, 3, 8, 11, 13, 18, 19, 21, 37, 39, 40, 41, 60, 66, 104, 107, 147, 177, 198, 216, 235, 242, 392, 439, 447, 448, 461, 464, 486, 489, 514, 547, 569, 583, 627, 632, 637], "orient": [1, 2, 6, 25, 237, 451, 452, 467, 468, 469, 614, 718], "core": [1, 2, 20, 158, 162, 460, 461, 530, 569, 758], "design": [1, 6, 8, 471, 523], "around": [1, 2, 43, 452, 456, 458, 459, 508], "concept": 1, "gener": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 42, 43, 45, 59, 63, 64, 66, 74, 77, 79, 80, 81, 96, 97, 98, 100, 103, 106, 107, 110, 112, 143, 150, 180, 233, 239, 245, 251, 252, 257, 269, 270, 271, 272, 282, 283, 363, 364, 365, 366, 367, 368, 369, 370, 371, 384, 393, 413, 414, 415, 416, 417, 418, 419, 420, 442, 444, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 461, 462, 464, 465, 467, 468, 469, 471, 477, 478, 485, 486, 488, 489, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 512, 513, 514, 515, 516, 521, 522, 523, 526, 539, 540, 543, 544, 546, 547, 551, 553, 554, 555, 561, 564, 566, 568, 569, 583, 585, 586, 587, 588, 589, 590, 592, 593, 601, 602, 617, 618, 620, 629, 632, 635, 637, 638, 639, 652, 653, 654, 655, 717, 719, 720, 722, 723, 724, 725, 738, 757], "element": [1, 5, 9, 10, 11, 12, 18, 20, 21, 26, 42, 60, 62, 77, 78, 106, 107, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 180, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 226, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 307, 312, 317, 320, 325, 326, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 447, 448, 449, 450, 456, 457, 458, 459, 460, 478, 512, 515, 524, 539, 568, 569, 592, 593, 601, 625, 632, 643, 644, 720, 721, 747], "wa": [1, 9, 43, 106, 107, 177, 190, 226, 227, 229, 233, 462, 477, 540, 592, 632], "introduc": [1, 2, 9, 19], "8": [1, 7, 8, 12, 17, 18, 19, 20, 26, 31, 78, 144, 145, 146, 148, 149, 158, 159, 161, 165, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 452, 471, 541, 542, 545, 546, 569, 583], "0": [1, 3, 7, 12, 13, 14, 16, 17, 18, 19, 20, 26, 28, 30, 31, 43, 60, 62, 64, 66, 74, 78, 80, 96, 97, 98, 100, 103, 107, 112, 124, 129, 130, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 174, 177, 180, 181, 183, 184, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 222, 223, 224, 226, 227, 228, 229, 230, 233, 239, 245, 285, 293, 296, 392, 393, 397, 439, 441, 443, 445, 452, 454, 462, 464, 466, 471, 472, 477, 478, 490, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 526, 541, 542, 543, 544, 545, 546, 548, 569, 583, 591, 592, 616, 619, 620, 621, 623, 624, 626, 627, 629, 632, 633, 634, 635, 636, 637, 638, 639, 643, 719, 720, 721, 723, 727, 758], "along": [1, 6, 17, 37, 104, 180, 216, 293, 392, 462, 509, 513, 514, 540, 591, 592], "emploi": 1, "chapter": [1, 26], "give": [1, 106, 107], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 17, 19, 20, 21, 29, 40, 41, 59, 60, 61, 62, 63, 64, 65, 75, 77, 78, 79, 80, 106, 107, 110, 111, 113, 143, 152, 153, 154, 155, 156, 157, 158, 171, 176, 177, 180, 181, 185, 190, 218, 221, 235, 236, 237, 239, 240, 241, 242, 245, 246, 290, 292, 293, 294, 295, 297, 298, 305, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 348, 349, 350, 351, 352, 353, 357, 365, 366, 368, 373, 379, 391, 392, 397, 439, 451, 452, 458, 462, 463, 464, 470, 471, 472, 477, 486, 489, 496, 509, 512, 514, 515, 516, 520, 521, 522, 523, 535, 539, 543, 544, 547, 550, 560, 562, 568, 569, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 600, 607, 619, 623, 632, 636, 637, 639, 641, 642, 643, 717, 718, 720, 723, 725, 758], "primari": [1, 4, 37, 104, 216, 233], "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 37, 40, 41, 43, 61, 64, 66, 74, 76, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 218, 219, 220, 222, 223, 225, 231, 233, 236, 237, 239, 245, 246, 262, 266, 272, 273, 274, 282, 283, 284, 290, 291, 293, 294, 296, 298, 302, 306, 368, 392, 393, 400, 429, 439, 441, 442, 443, 445, 446, 451, 452, 454, 456, 457, 458, 459, 460, 461, 463, 471, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 509, 511, 512, 513, 514, 517, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 551, 558, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 599, 603, 606, 609, 611, 613, 617, 619, 630, 632, 642, 643, 661, 662, 664, 709, 723, 727, 758], "solv": [1, 6, 11, 17, 18, 20, 21, 24, 26, 28, 30, 31, 38, 43, 66, 105, 106, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 174, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 217, 298, 326, 393, 396, 397, 439, 440, 456, 457, 458, 459, 467, 468, 469, 472, 475, 508, 509, 510, 516, 520, 521, 569, 585, 586, 587, 588, 589, 590, 591, 592, 629, 632, 633, 634, 635, 636, 638, 639, 723, 725, 753], "steadi": [1, 6, 21, 632], "state": [1, 3, 6, 7, 8, 9, 17, 19, 21, 58, 177, 190, 218, 239, 245, 292, 293, 294, 295, 296, 298, 307, 312, 317, 331, 334, 337, 392, 393, 394, 395, 396, 397, 410, 413, 414, 417, 420, 421, 422, 425, 439, 477, 514, 569, 632], "simul": [1, 3, 21, 457, 460, 463, 527, 630], "problem": [1, 2, 3, 6, 7, 8, 11, 12, 17, 18, 21, 26, 28, 31, 43, 66, 70, 71, 72, 73, 95, 105, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 174, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 298, 309, 311, 314, 316, 318, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 381, 382, 383, 387, 388, 389, 391, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 456, 458, 459, 462, 477, 569, 592, 593, 632, 717, 725], "flow": [1, 3, 7, 8, 11, 12, 18, 19, 21, 26, 43, 66, 68, 69, 74, 245, 261, 262, 273, 274, 293, 298, 305, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 343, 344, 345, 354, 355, 360, 361, 362, 370, 371, 376, 377, 382, 383, 388, 389, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 457, 458, 459, 460, 467, 468, 469, 471, 472, 475, 477, 479, 480, 484, 487, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 516, 520, 521, 523, 524, 528, 531, 533, 534, 538, 541, 545, 556, 557, 558, 564, 569, 583, 585, 586, 587, 588, 589, 590, 591, 592, 596, 597, 598, 605, 608, 610, 612, 614, 615, 619, 629, 632, 633, 634, 635, 636, 637, 638, 639, 646, 650, 652, 653, 654, 655, 656, 660, 661, 662, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 703, 705, 706, 707, 717, 718, 720, 723, 725, 738, 755], "continu": [1, 7, 17, 18, 20, 37, 96, 104, 107, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 177, 178, 179, 182, 183, 185, 186, 187, 190, 216, 240, 280, 286, 328, 329, 330, 331, 332, 333, 334, 335, 336, 392, 439, 440, 441, 447, 448, 453, 456, 460, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 492, 493, 494, 495, 496, 569, 583, 632, 660, 661, 662, 723, 758], "At": [1, 233, 466], "top": [1, 2, 79, 157, 460, 569], "level": [1, 2, 26, 43, 107, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 228, 452, 460, 478, 511, 566, 569, 700, 704, 722], "task": [1, 3, 5, 6, 7, 12, 18, 239, 240, 241, 242, 291, 298, 326, 392, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 456, 457, 458, 459, 460, 513], "construct": [1, 2, 8, 11, 17, 19, 20, 21, 62, 106, 115, 237, 239, 241, 275, 291, 392, 397, 410, 451, 452, 476, 552, 553, 554, 555, 607], "variou": [1, 2, 6, 17, 19, 21, 105, 106, 147, 158, 162, 172, 177, 198, 463, 630], "layer": [1, 2, 11, 12, 17, 18, 19, 439], "desir": [1, 3, 4, 7, 8, 43, 61, 107, 183, 297, 457, 560, 632, 643], "type": [1, 2, 3, 4, 7, 13, 18, 20, 21, 30, 37, 39, 42, 60, 61, 62, 104, 106, 107, 111, 153, 154, 155, 156, 216, 218, 233, 235, 236, 237, 239, 242, 245, 246, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 290, 291, 292, 293, 296, 298, 326, 392, 393, 394, 395, 396, 397, 403, 439, 447, 448, 450, 451, 452, 457, 462, 464, 465, 471, 477, 489, 490, 522, 523, 542, 544, 569, 583, 625, 626, 720, 721], "formul": [1, 2, 5, 7, 18, 20, 107, 237, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 330, 392, 394, 395, 396, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 434, 435, 436, 437, 447, 448, 462, 463, 471, 555, 569, 583, 592, 593, 631], "propog": 1, "back": [1, 3, 4, 17, 30, 66, 81, 106, 109, 157, 165, 177, 180, 183, 239, 245, 292, 298, 392, 439, 441, 443, 445, 463, 477, 513, 547, 569], "through": [1, 2, 3, 4, 7, 8, 19, 20, 181, 187, 217, 238, 239, 452, 723], "explicit": [1, 2, 13, 19, 30, 165, 238, 471, 550, 569], "three": [1, 2, 3, 8, 11, 17, 18, 19, 21, 44, 45, 79, 82, 107, 177, 218, 245, 277, 291, 447, 460, 462, 471, 477, 512, 539, 562, 592, 593, 623, 643, 731, 732, 733, 734, 735, 736, 737], "structur": [1, 3, 4, 8, 17, 26, 31, 40, 41, 42, 61, 62, 65, 66, 74, 76, 106, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 177, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 245, 297, 392, 462, 477, 512, 513, 514, 515, 539, 540, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 615, 720], "decoupl": [1, 107, 159, 162, 324, 516, 556, 569, 583, 725], "one": [1, 2, 3, 4, 6, 8, 11, 17, 19, 40, 41, 42, 43, 59, 63, 64, 79, 106, 107, 151, 153, 154, 155, 156, 157, 177, 181, 190, 217, 218, 245, 290, 293, 294, 297, 392, 393, 397, 452, 457, 462, 463, 464, 471, 477, 512, 525, 539, 544, 565, 568, 569, 583, 592, 593, 627, 630, 637, 644, 719, 720, 723, 736, 737], "anoth": [1, 7, 8, 17, 19, 107, 157, 183, 217, 245, 452, 493, 515], "visibl": [1, 3, 17, 19, 78, 158, 245], "paramet": [1, 4, 7, 9, 12, 17, 20, 26, 30, 60, 63, 107, 110, 112, 150, 158, 162, 185, 186, 187, 190, 237, 238, 239, 240, 245, 275, 280, 286, 292, 293, 296, 327, 366, 369, 373, 392, 393, 396, 397, 399, 402, 410, 414, 417, 420, 422, 425, 426, 428, 429, 432, 434, 437, 438, 440, 450, 462, 470, 471, 475, 484, 487, 512, 513, 516, 521, 524, 539, 540, 541, 543, 552, 553, 554, 555, 569, 583, 592, 593, 602, 640, 641, 725], "quantiti": [1, 17, 74, 190, 237, 282, 397, 450, 558, 569, 637, 643, 719], "network": [1, 2, 3, 5, 11, 12, 18, 20, 66, 245, 291, 292, 293, 294, 295, 296, 298, 299, 302, 307, 312, 317, 326, 331, 334, 337, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 456, 457, 458, 459, 460, 467, 469, 470, 515, 518, 519, 569, 583, 747], "connect": [1, 8, 19, 20, 239, 245, 392, 397, 464, 474, 500, 501, 504, 506, 514, 515, 519, 526, 539, 561], "mathemat": [1, 5, 6, 8, 9, 12, 21, 107, 217, 245, 291, 298, 305, 326, 384, 385, 439, 440, 442, 444, 447, 448, 449, 450, 456, 457, 458, 459, 460, 471], "being": [1, 3, 8, 17, 40, 41, 42, 58, 60, 106, 107, 144, 145, 146, 147, 148, 149, 177, 245, 290, 439, 456, 462, 477, 547, 555, 631, 638, 758], "resepect": 1, "mathshown": [1, 3, 4, 8, 11, 12, 17, 19, 26, 30, 77, 78, 79, 80, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 553], "figur": [1, 2, 3, 4, 7, 8, 11, 12, 17, 19, 77, 78, 79, 80], "further": [1, 7, 8, 60, 326, 397, 632], "particular": [1, 2, 3, 4, 8, 17, 18, 37, 42, 43, 59, 104, 106, 107, 181, 216, 233, 245, 246, 292, 326, 392, 397, 439, 522, 523, 539], "format": [1, 2, 3, 4, 5, 17, 19, 21, 40, 41, 43, 44, 45, 62, 81, 82, 83, 84, 107, 239, 242, 243, 246, 291, 447, 448, 450, 460, 464, 471, 472, 526, 550, 566, 622, 623, 632, 633, 634, 635, 636, 638, 639, 640, 641, 646, 650, 651, 652, 653, 654, 655, 656, 657, 658, 722, 738], "legaci": [1, 2, 3, 17, 18, 24, 37, 104, 216, 239, 244, 253, 273, 274, 309, 311, 314, 316, 318, 327, 367, 372, 373, 374, 375, 376, 377, 421, 422, 423, 424, 425, 441, 443, 445, 446, 448, 460, 461, 462, 569, 602, 660, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 703, 705, 706, 707, 716, 744], "case": [1, 3, 4, 7, 8, 11, 12, 17, 18, 19, 39, 40, 41, 42, 43, 44, 45, 59, 61, 62, 63, 64, 77, 78, 79, 80, 81, 82, 83, 84, 95, 106, 107, 153, 154, 155, 156, 157, 224, 230, 239, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 298, 392, 397, 439, 441, 443, 444, 445, 446, 456, 457, 458, 459, 462, 463, 464, 466, 470, 471, 472, 473, 475, 476, 477, 480, 492, 496, 509, 512, 513, 514, 515, 522, 523, 524, 526, 539, 540, 541, 542, 545, 546, 547, 549, 550, 558, 560, 563, 565, 569, 591, 592, 593, 596, 597, 598, 599, 605, 606, 607, 608, 609, 610, 611, 612, 613, 620, 621, 622, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 646, 650, 651, 652, 653, 654, 655, 656, 657, 658, 672, 720, 721, 723, 730, 731, 732, 733, 734, 735, 736, 737, 738, 754, 758], "struct": [1, 2, 3, 4, 7, 11, 12, 14, 16, 17, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 77, 78, 79, 80, 103, 106, 107, 110, 111, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 218, 221, 237, 238, 239, 242, 243, 245, 246, 291, 293, 294, 295, 296, 297, 298, 319, 326, 366, 373, 392, 397, 439, 440, 441, 443, 445, 446, 456, 457, 458, 459, 462, 463, 464, 466, 471, 472, 475, 476, 477, 478, 479, 481, 485, 488, 490, 491, 493, 495, 509, 512, 513, 514, 515, 521, 522, 523, 524, 539, 540, 547, 549, 550, 558, 562, 563, 569, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 601, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 619, 620, 621, 622, 624, 626, 627, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 672, 718, 719, 720, 721, 723, 724, 725], "mpc": [1, 2, 3, 4, 17, 20, 39, 40, 41, 48, 50, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 239, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 318, 439, 441, 443, 445, 446, 456, 457, 458, 459, 462, 463, 464, 466, 470, 471, 472, 476, 509, 512, 513, 514, 515, 518, 519, 522, 523, 539, 540, 545, 547, 549, 550, 551, 554, 556, 557, 558, 559, 560, 563, 591, 592, 593, 596, 597, 598, 599, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 619, 620, 621, 629, 630, 631, 640, 643, 650, 717, 718, 719, 720, 721, 723], "file": [1, 3, 6, 11, 13, 14, 15, 16, 21, 24, 37, 40, 41, 43, 44, 45, 47, 48, 50, 53, 59, 61, 62, 63, 64, 77, 78, 79, 80, 81, 82, 83, 84, 104, 143, 171, 216, 224, 233, 239, 242, 243, 245, 439, 454, 456, 457, 458, 459, 461, 463, 464, 470, 471, 472, 515, 517, 535, 541, 542, 545, 546, 549, 550, 569, 583, 592, 593, 619, 620, 621, 622, 623, 624, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 650, 651, 652, 653, 654, 655, 656, 672, 679, 738], "convers": [1, 3, 4, 17, 43, 239, 245, 460, 514, 556, 557, 563, 569, 583, 625, 626, 632, 633, 634, 635, 636, 638, 639], "servic": [1, 8, 17, 19, 20, 273, 340, 343, 344, 345, 347, 351, 352, 353, 354, 355, 364, 367, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 464, 465, 466, 471, 541, 545, 546, 555, 600, 607], "convert": [1, 3, 5, 43, 63, 64, 81, 107, 108, 109, 217, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 290, 291, 298, 307, 312, 317, 331, 334, 337, 392, 439, 440, 443, 446, 447, 448, 450, 460, 463, 465, 472, 512, 513, 514, 539, 540, 547, 549, 550, 569, 616, 620, 621, 622, 623, 625, 626, 632, 638], "between": [1, 2, 3, 4, 7, 8, 17, 19, 43, 186, 224, 226, 227, 229, 230, 239, 242, 330, 392, 439, 466, 565, 569, 616], "specif": [1, 3, 7, 8, 11, 14, 16, 17, 19, 38, 60, 66, 106, 107, 147, 158, 159, 160, 161, 162, 165, 171, 172, 198, 217, 218, 233, 234, 239, 240, 241, 242, 244, 245, 246, 291, 292, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 392, 394, 395, 396, 397, 439, 441, 443, 445, 446, 447, 448, 449, 450, 456, 457, 458, 459, 462, 509, 523, 548, 560, 569, 591, 592, 643, 720, 758], "extern": [1, 17, 392, 463, 466, 512, 513, 514, 539, 540, 547, 632, 633, 634, 635, 636, 638, 639, 657, 720], "each": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 18, 19, 21, 42, 43, 60, 64, 77, 78, 80, 106, 107, 153, 154, 155, 156, 157, 177, 190, 218, 224, 226, 228, 230, 239, 241, 242, 245, 246, 277, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 358, 359, 361, 362, 392, 393, 396, 397, 439, 447, 448, 449, 461, 462, 463, 464, 465, 466, 471, 473, 474, 477, 490, 503, 504, 506, 515, 518, 519, 524, 541, 542, 543, 545, 546, 551, 560, 562, 563, 565, 566, 568, 569, 592, 593, 624, 626, 627, 632, 637, 643, 718, 719, 720, 721, 722, 723], "plu": [1, 228], "organ": [1, 3, 6, 42, 239], "collect": [1, 6, 17, 19, 74, 107, 177, 293, 296, 477], "enclos": [1, 290, 625, 626], "contain": [1, 2, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 26, 30, 31, 40, 41, 42, 60, 61, 62, 63, 64, 66, 76, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 169, 170, 171, 172, 175, 177, 180, 182, 183, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 238, 239, 242, 245, 246, 290, 291, 298, 326, 392, 397, 439, 447, 448, 450, 452, 456, 457, 458, 459, 460, 462, 471, 472, 477, 478, 479, 481, 485, 488, 490, 491, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 513, 515, 516, 517, 521, 522, 523, 540, 550, 560, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 592, 593, 596, 597, 617, 620, 621, 623, 624, 625, 626, 632, 633, 634, 635, 636, 637, 638, 639, 640, 725, 726], "correspond": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 26, 31, 39, 40, 41, 59, 60, 63, 64, 80, 106, 107, 144, 145, 146, 147, 148, 149, 157, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 180, 181, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 226, 237, 239, 242, 245, 246, 282, 292, 293, 294, 295, 296, 297, 298, 326, 340, 343, 344, 345, 347, 351, 352, 353, 354, 355, 364, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 397, 439, 441, 443, 445, 446, 447, 448, 461, 462, 463, 464, 471, 477, 497, 498, 499, 500, 501, 502, 512, 513, 515, 524, 526, 539, 540, 548, 551, 556, 559, 560, 562, 566, 568, 569, 583, 596, 597, 601, 618, 623, 624, 625, 626, 627, 632, 638, 643, 644, 720, 721, 722, 727], "devic": [1, 17], "g": [1, 2, 3, 7, 8, 14, 16, 17, 18, 19, 26, 29, 30, 60, 66, 75, 96, 97, 98, 100, 106, 107, 113, 152, 157, 158, 161, 162, 164, 166, 169, 170, 171, 172, 176, 177, 188, 218, 221, 236, 239, 242, 245, 246, 262, 266, 272, 274, 282, 283, 285, 291, 292, 293, 294, 298, 326, 392, 393, 397, 439, 440, 443, 446, 452, 457, 462, 463, 467, 471, 477, 503, 511, 515, 542, 560, 569, 583, 584, 592, 598, 605, 625, 626, 632, 720, 723], "bu": [1, 3, 4, 12, 17, 18, 19, 20, 43, 44, 45, 60, 62, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 239, 245, 246, 248, 249, 255, 256, 259, 261, 263, 264, 265, 266, 267, 269, 270, 273, 274, 275, 277, 278, 285, 288, 326, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 397, 403, 404, 405, 406, 407, 408, 409, 442, 447, 456, 457, 458, 459, 462, 464, 465, 466, 467, 468, 469, 471, 472, 473, 475, 477, 483, 484, 486, 487, 489, 492, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 518, 519, 521, 524, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 552, 556, 557, 558, 560, 561, 562, 563, 564, 565, 569, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598, 599, 605, 606, 615, 619, 620, 622, 623, 624, 629, 632, 633, 634, 635, 636, 638, 639, 641, 643, 650, 652, 653, 654, 655, 720, 721, 723, 725, 730, 731, 732, 733, 734, 735, 736, 737, 738, 758], "line": [1, 2, 3, 8, 18, 19, 20, 43, 77, 78, 106, 107, 187, 224, 228, 239, 241, 242, 245, 253, 254, 261, 273, 274, 275, 276, 297, 298, 338, 339, 340, 341, 342, 343, 344, 345, 372, 373, 374, 375, 376, 377, 378, 379, 392, 397, 398, 421, 422, 423, 424, 425, 426, 447, 448, 451, 460, 462, 466, 471, 504, 506, 514, 515, 524, 526, 539, 541, 542, 543, 545, 546, 547, 557, 559, 563, 569, 583, 596, 618, 620, 622, 624, 625, 627, 632, 641, 651, 663, 717, 718, 744], "some": [1, 6, 7, 8, 12, 17, 18, 19, 20, 21, 26, 43, 45, 59, 60, 105, 106, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 226, 237, 238, 245, 294, 295, 441, 443, 445, 472, 523, 541, 542, 543, 545, 546, 569, 618, 631, 633, 634, 635, 636, 638, 639, 725, 758], "attribut": 1, "interfac": [1, 2, 6, 7, 24, 25, 31, 107, 144, 145, 146, 148, 149, 158, 159, 160, 161, 165, 169, 170, 171, 172, 175, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 569, 583, 650, 718, 758], "reserv": [1, 2, 18, 56, 58, 64, 66, 74, 77, 94, 257, 258, 282, 283, 291, 384, 385, 450, 460, 463, 471, 513, 540, 546, 637, 650, 704, 719], "requir": [1, 3, 6, 8, 13, 17, 18, 20, 21, 26, 42, 43, 60, 61, 62, 63, 64, 65, 66, 94, 107, 126, 130, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 161, 162, 169, 170, 171, 172, 180, 198, 233, 245, 283, 339, 447, 448, 450, 454, 464, 478, 526, 547, 550, 569, 583, 631, 637, 719, 720], "provid": [1, 2, 3, 4, 6, 7, 8, 12, 17, 19, 26, 30, 31, 40, 41, 42, 61, 63, 64, 79, 80, 106, 107, 110, 111, 112, 143, 144, 145, 146, 148, 149, 150, 158, 159, 160, 161, 165, 169, 170, 171, 172, 175, 183, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 217, 238, 239, 240, 242, 245, 246, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 318, 320, 325, 326, 393, 397, 439, 440, 442, 444, 446, 454, 456, 457, 458, 459, 461, 462, 515, 523, 547, 555, 560, 561, 569, 601, 637, 643, 719, 721, 758], "extraordinari": 1, "flexibl": [1, 2, 8, 12, 456, 457, 458, 459, 461], "allow": [1, 2, 7, 8, 11, 12, 17, 42, 43, 60, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 175, 190, 218, 238, 245, 298, 462, 463, 464, 471, 548, 569, 583, 635, 639], "environ": [1, 5, 13], "ad": [1, 2, 8, 12, 13, 17, 18, 19, 39, 40, 41, 43, 59, 106, 107, 177, 239, 242, 293, 294, 295, 297, 298, 304, 305, 329, 330, 337, 340, 341, 342, 343, 351, 358, 359, 360, 361, 362, 367, 369, 384, 385, 392, 462, 463, 467, 468, 469, 471, 511, 526, 541, 542, 545, 546, 623, 640, 641, 642, 721], "modifi": [1, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 42, 43, 59, 60, 76, 81, 103, 107, 110, 111, 112, 143, 150, 153, 154, 155, 156, 175, 180, 233, 242, 245, 246, 290, 291, 297, 392, 397, 447, 448, 449, 450, 454, 464, 472, 477, 478, 544, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 632, 641, 643, 717, 720, 730], "exist": [1, 2, 3, 8, 12, 18, 40, 41, 66, 106, 107, 181, 188, 189, 218, 224, 239, 245, 246, 290, 297, 454, 472, 550, 569], "independ": [1, 7, 560], "rest": [1, 8, 539, 726], "In": [1, 2, 3, 4, 6, 7, 8, 11, 13, 17, 18, 19, 42, 43, 106, 107, 190, 245, 298, 397, 439, 452, 511, 539, 560, 592, 637, 721, 723], "given": [1, 3, 4, 7, 8, 9, 12, 17, 18, 26, 40, 41, 42, 58, 62, 106, 107, 109, 169, 170, 171, 172, 177, 224, 228, 239, 245, 246, 277, 392, 397, 462, 464, 471, 477, 503, 510, 512, 513, 516, 521, 541, 542, 543, 545, 546, 552, 559, 560, 566, 585, 586, 587, 588, 589, 590, 618, 619, 630, 631, 641, 722, 725], "run": [1, 2, 3, 5, 6, 12, 13, 17, 18, 19, 21, 36, 66, 102, 105, 177, 187, 188, 190, 195, 199, 215, 218, 219, 220, 222, 223, 228, 232, 233, 291, 439, 444, 453, 454, 456, 457, 458, 459, 472, 490, 535, 619, 631, 632, 633, 634, 635, 636, 637, 638, 639, 756, 758], "set": [1, 2, 3, 4, 7, 8, 11, 12, 14, 16, 17, 19, 26, 30, 39, 42, 43, 59, 60, 62, 63, 64, 66, 76, 103, 106, 107, 108, 109, 110, 111, 112, 136, 143, 150, 163, 164, 169, 175, 177, 178, 179, 180, 182, 183, 184, 190, 217, 222, 228, 229, 233, 237, 239, 245, 290, 291, 292, 319, 326, 327, 368, 392, 393, 394, 395, 396, 397, 442, 443, 444, 447, 448, 454, 456, 458, 459, 462, 464, 471, 477, 478, 480, 482, 486, 489, 494, 496, 508, 516, 521, 542, 543, 544, 546, 564, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 592, 593, 632, 637, 638, 717, 718, 719, 720, 725], "creat": [1, 2, 3, 4, 7, 8, 12, 13, 15, 19, 21, 58, 60, 64, 65, 66, 77, 78, 79, 80, 103, 107, 153, 154, 155, 156, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 297, 298, 305, 392, 397, 439, 443, 457, 462, 472, 547, 569, 621, 640, 641, 747], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 19, 20, 21, 26, 30, 31, 33, 37, 38, 42, 43, 59, 60, 62, 63, 64, 66, 76, 79, 80, 104, 105, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 182, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 217, 222, 224, 233, 234, 235, 237, 238, 239, 242, 244, 245, 246, 277, 290, 291, 292, 293, 294, 295, 296, 298, 326, 330, 331, 332, 333, 334, 335, 336, 392, 397, 439, 440, 442, 443, 444, 447, 448, 451, 452, 454, 455, 456, 458, 459, 462, 463, 464, 465, 467, 468, 469, 471, 472, 475, 477, 487, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 511, 512, 513, 514, 515, 516, 518, 520, 521, 522, 523, 524, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 555, 556, 558, 560, 561, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 608, 610, 612, 620, 626, 627, 628, 629, 632, 633, 634, 635, 636, 638, 639, 641, 642, 643, 647, 648, 649, 657, 658, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 717, 720, 721, 722, 723, 725, 755, 757, 758], "show": [1, 2, 3, 4, 7, 8, 17, 18, 19, 43], "mai": [1, 3, 8, 9, 17, 20, 26, 42, 60, 66, 107, 150, 177, 193, 233, 239, 463, 467, 471, 472, 477, 548, 569, 638, 721], "sourc": [1, 3, 4, 6, 12, 13, 14, 15, 16, 18, 19, 21, 37, 104, 157, 216, 233, 239, 242, 243, 245, 246, 439, 441, 443, 445, 446, 456, 457, 458, 459, 461, 523, 555], "individu": [1, 3, 7, 8, 11, 17, 19, 20, 24, 36, 77, 78, 79, 102, 106, 107, 215, 217, 222, 223, 228, 231, 232, 239, 245, 290, 327, 462, 464, 471, 514, 524, 547, 550, 558, 560, 563, 569, 583, 592, 593, 619, 633, 634, 635, 636, 638, 639, 723, 756], "4": [1, 2, 8, 9, 11, 12, 17, 18, 20, 26, 30, 31, 42, 106, 107, 120, 144, 145, 146, 147, 148, 149, 151, 165, 169, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 222, 223, 226, 227, 229, 233, 236, 263, 264, 291, 392, 410, 445, 452, 462, 463, 464, 467, 469, 471, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 523, 539, 541, 542, 543, 545, 546, 568, 569, 583, 721, 727, 730, 731, 732, 733, 734, 757], "label": [1, 3, 8, 17, 19, 42, 60, 79, 80, 106, 159, 190, 239, 245, 261, 263, 264, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288, 292, 294, 295, 296, 392, 464, 515, 544, 626], "white": 1, "circl": 1, "convent": [1, 3, 4, 5, 7, 8, 239, 242, 245, 246, 291, 298, 326, 392, 397, 463], "throughout": [1, 3, 9, 62, 239], "codebas": [1, 726], "variabl": [1, 3, 6, 8, 9, 12, 19, 26, 31, 42, 61, 66, 106, 107, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 239, 242, 244, 245, 246, 292, 293, 294, 295, 296, 297, 298, 305, 326, 360, 366, 373, 384, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 414, 417, 420, 422, 425, 450, 451, 452, 462, 463, 471, 472, 509, 517, 554, 555, 565, 569, 583, 591, 592, 593, 602, 616, 618, 642], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 26, 29, 31, 37, 39, 40, 41, 43, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 80, 104, 106, 107, 110, 111, 112, 113, 143, 150, 152, 157, 158, 175, 176, 180, 181, 189, 190, 216, 218, 221, 224, 228, 233, 237, 239, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 327, 338, 346, 347, 356, 363, 364, 372, 378, 380, 384, 385, 386, 390, 392, 397, 398, 403, 404, 410, 413, 414, 421, 426, 427, 428, 433, 438, 439, 441, 442, 443, 444, 445, 446, 451, 454, 456, 457, 458, 459, 462, 463, 464, 471, 472, 477, 478, 490, 491, 511, 515, 517, 541, 542, 543, 544, 545, 546, 549, 550, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 592, 593, 620, 623, 624, 626, 627, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 720, 758], "singl": [1, 2, 3, 8, 17, 18, 19, 20, 21, 26, 31, 42, 61, 79, 81, 83, 84, 96, 97, 106, 107, 108, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 165, 169, 170, 171, 172, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 228, 237, 239, 245, 252, 267, 290, 291, 293, 296, 297, 392, 397, 447, 454, 462, 471, 512, 514, 515, 523, 539, 547, 560, 592, 601, 619, 625, 626, 641, 643, 721, 723, 731, 732, 733, 734, 735, 736, 737], "manag": [1, 11, 106], "overal": [1, 6, 43, 464], "process": [1, 2, 4, 6, 11, 21, 242, 244, 245, 439, 441, 443, 445, 446, 558], "pf": [1, 2, 3, 7, 11, 17, 18, 20, 74, 153, 291, 298, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 360, 361, 362, 439, 440, 444, 445, 446, 447, 448, 453, 459, 503, 511, 541, 545, 556, 557, 569, 592, 638, 716], "cpf": [1, 2, 3, 7, 11, 17, 18, 20, 240, 280, 286, 291, 298, 299, 300, 301, 302, 303, 304, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 360, 361, 362, 381, 387, 439, 440, 441, 446, 447, 448, 453, 456, 457, 475, 477, 478, 479, 481, 483, 484, 485, 488, 490, 491, 492, 493, 495, 569, 632, 716], "opf": [1, 2, 3, 6, 7, 11, 18, 19, 20, 21, 43, 50, 54, 55, 56, 70, 71, 81, 95, 107, 110, 112, 143, 150, 151, 154, 156, 175, 239, 241, 262, 265, 266, 268, 271, 272, 274, 276, 279, 281, 284, 287, 289, 291, 298, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 327, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 357, 358, 359, 365, 366, 367, 368, 369, 373, 374, 375, 379, 391, 439, 442, 443, 446, 447, 448, 449, 450, 453, 457, 458, 460, 462, 463, 471, 472, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 520, 526, 528, 531, 533, 538, 539, 541, 542, 545, 546, 569, 583, 591, 593, 596, 600, 603, 604, 607, 619, 633, 635, 636, 637, 639, 652, 653, 654, 655, 700, 704, 716, 717, 718, 719, 720, 723, 758], "ha": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 60, 103, 106, 107, 178, 179, 180, 190, 237, 245, 277, 290, 326, 392, 444, 451, 452, 463, 471, 477, 478, 482, 494, 512, 513, 514, 515, 523, 526, 539, 541, 542, 544, 545, 546, 547, 550, 560, 566, 569, 592, 593, 618, 643, 722, 723, 737], "method": [1, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 26, 30, 106, 107, 112, 132, 158, 159, 160, 161, 162, 165, 172, 190, 198, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 280, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 417, 420, 421, 422, 425, 426, 427, 428, 429, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 461, 462, 467, 468, 469, 475, 516, 521, 531, 533, 565, 569, 583, 585, 586, 587, 588, 589, 590, 592, 629, 638, 725], "up": [1, 8, 12, 13, 17, 18, 19, 20, 42, 43, 66, 106, 107, 217, 222, 233, 319, 368, 452, 454, 461, 471, 560, 583, 643, 717, 718, 719, 720], "correspnd": 1, "For": [1, 2, 3, 4, 6, 7, 8, 12, 17, 18, 19, 21, 43, 60, 62, 106, 107, 110, 112, 151, 190, 218, 235, 237, 245, 284, 292, 293, 294, 295, 296, 392, 397, 447, 448, 449, 450, 456, 457, 458, 459, 462, 473, 480, 482, 486, 489, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 512, 539, 540, 544, 556, 560, 568, 569, 592, 593, 720, 721, 758], "exampl": [1, 2, 3, 4, 6, 7, 11, 14, 16, 17, 18, 19, 26, 27, 28, 31, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 67, 68, 69, 70, 71, 72, 73, 82, 83, 84, 104, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 218, 222, 223, 224, 226, 227, 228, 229, 230, 242, 245, 291, 297, 392, 397, 454, 456, 457, 458, 459, 460, 462, 463, 464, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 512, 513, 514, 515, 517, 522, 523, 524, 539, 540, 541, 542, 543, 545, 546, 547, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 569, 583, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 619, 631, 632, 633, 634, 635, 636, 637, 638, 639, 643, 679, 717, 721, 723, 758], "follow": [1, 3, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 26, 28, 30, 31, 37, 38, 39, 40, 41, 42, 43, 45, 60, 62, 63, 64, 74, 77, 78, 79, 80, 81, 104, 105, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 174, 175, 177, 180, 184, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 217, 218, 224, 226, 227, 229, 230, 233, 234, 237, 239, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 290, 392, 393, 394, 395, 396, 456, 457, 458, 459, 462, 463, 471, 472, 477, 490, 503, 504, 505, 506, 507, 509, 512, 514, 515, 522, 523, 524, 539, 543, 544, 546, 547, 549, 552, 553, 554, 569, 583, 585, 586, 587, 588, 589, 590, 591, 592, 624, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 643, 718, 719, 720, 721, 758], "9": [1, 2, 12, 17, 18, 20, 31, 43, 112, 129, 130, 144, 145, 146, 148, 149, 150, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 233, 290, 392, 468, 471, 541, 542, 545, 546, 564, 569, 583, 614, 652, 653, 654, 655, 735, 736, 737, 738], "mpopt": [1, 2, 7, 12, 17, 18, 20, 66, 110, 111, 112, 143, 150, 151, 153, 154, 155, 156, 175, 239, 241, 244, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 284, 285, 288, 291, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333, 335, 336, 337, 340, 341, 342, 343, 344, 345, 347, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 456, 457, 458, 459, 463, 467, 468, 469, 475, 476, 477, 509, 514, 516, 521, 547, 552, 556, 561, 562, 569, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 619, 629, 632, 633, 634, 635, 636, 637, 638, 639, 720, 721, 723, 725, 758], "mpoption": [1, 2, 12, 18, 20, 66, 76, 110, 111, 112, 143, 150, 151, 153, 154, 155, 156, 157, 175, 460, 516, 521, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 592, 593, 619, 629, 632, 633, 634, 635, 636, 638, 639, 678, 723, 725, 726, 758], "verbos": [1, 12, 18, 20, 26, 30, 31, 36, 66, 74, 101, 102, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 228, 232, 233, 454, 472, 478, 569, 583, 620, 621, 623, 624, 626, 627, 723, 756], "option": [1, 3, 4, 5, 6, 7, 8, 11, 13, 17, 18, 19, 26, 30, 31, 38, 39, 40, 41, 59, 61, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 103, 106, 107, 110, 111, 112, 136, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 181, 182, 183, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 218, 222, 224, 226, 227, 228, 230, 233, 234, 237, 239, 244, 245, 246, 291, 292, 293, 294, 296, 297, 298, 306, 317, 319, 326, 368, 392, 393, 397, 439, 440, 441, 443, 444, 445, 446, 454, 456, 457, 458, 459, 462, 463, 470, 471, 472, 475, 477, 483, 484, 490, 492, 504, 506, 508, 509, 512, 513, 514, 515, 516, 519, 521, 522, 523, 524, 526, 539, 540, 547, 549, 550, 551, 556, 558, 559, 560, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 605, 606, 608, 609, 610, 611, 612, 613, 619, 620, 623, 624, 625, 626, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 679, 719, 720, 721, 723, 725, 758], "task_opf": [1, 11, 235, 443, 457, 458, 460], "case9": [1, 3, 4, 20, 456, 457, 458, 459, 632, 633, 634, 635, 636, 638, 639, 758], "step": [1, 3, 4, 7, 8, 11, 13, 17, 26, 107, 161, 165, 172, 177, 179, 180, 185, 186, 187, 189, 190, 198, 233, 452, 471, 475, 476, 477, 478, 483, 484, 486, 487, 489, 491, 492, 494, 533, 569, 583, 632], "list": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 61, 63, 64, 107, 153, 154, 155, 156, 165, 177, 239, 241, 245, 246, 290, 392, 452, 463, 464, 465, 477, 478, 510, 511, 516, 521, 522, 523, 569, 618, 625, 626, 630, 641, 723, 725], "roughli": [1, 3, 239], "equival": [1, 17, 19, 109, 230, 261, 297, 471], "perform": [1, 7, 26, 30, 31, 66, 158, 159, 160, 161, 165, 170, 171, 190, 197, 239, 487, 511, 513, 514, 516, 521, 558, 569, 585, 586, 587, 588, 589, 590, 614, 632, 644, 725], "when": [1, 2, 3, 4, 6, 8, 9, 12, 13, 17, 19, 29, 42, 43, 61, 66, 75, 77, 78, 106, 107, 113, 152, 157, 162, 176, 178, 179, 190, 218, 221, 222, 233, 235, 239, 242, 245, 297, 298, 392, 397, 439, 440, 451, 452, 462, 463, 472, 477, 480, 482, 486, 489, 494, 496, 512, 513, 560, 563, 565, 569, 584, 592, 593, 596, 632, 641, 717, 720], "It": [1, 3, 4, 6, 8, 17, 19, 20, 21, 42, 74, 107, 224, 233, 239, 242, 452, 457, 462, 464, 467, 468, 469, 477, 486, 489, 504, 511, 512, 515, 526, 539, 627, 723], "defin": [1, 3, 4, 6, 7, 8, 11, 12, 17, 19, 20, 26, 31, 42, 43, 59, 60, 64, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 157, 169, 170, 171, 172, 175, 177, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 226, 236, 237, 239, 240, 244, 245, 246, 272, 275, 283, 293, 296, 298, 327, 392, 393, 397, 462, 463, 464, 471, 477, 490, 511, 517, 522, 523, 526, 541, 542, 543, 544, 545, 546, 550, 560, 565, 569, 583, 592, 593, 602, 603, 604, 632, 637, 643, 650, 717, 718, 721], "well": [1, 2, 3, 8, 17, 19, 77, 78, 107, 217, 297, 392, 393, 439, 443, 450, 467, 468, 469, 504, 506, 511, 512, 513, 515, 516, 521, 539, 540, 544, 569, 585, 586, 587, 588, 589, 590, 592, 627, 672, 717, 725], "explicitli": [1, 8, 13, 17, 190, 393, 569, 592], "actual": [1, 6, 11, 26, 169, 170, 171, 172, 224, 226, 227, 230, 246, 397, 544, 718, 721], "code": [1, 7, 13, 17, 18, 19, 20, 26, 107, 147, 148, 151, 157, 158, 159, 160, 161, 162, 165, 169, 171, 172, 198, 199, 218, 219, 220, 233, 237, 321, 322, 323, 324, 330, 443, 455, 472, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 511, 523, 544, 558, 569, 591, 592, 646, 647, 648, 649, 668, 670, 677, 730, 758], "thei": [1, 2, 4, 7, 8, 11, 12, 13, 17, 19, 38, 106, 107, 217, 226, 233, 234, 291, 293, 298, 462, 512, 513, 539, 540, 541, 542, 545, 546, 560], "return": [1, 2, 3, 4, 8, 11, 17, 19, 26, 29, 36, 40, 41, 59, 61, 63, 64, 75, 76, 77, 78, 79, 80, 102, 103, 106, 107, 108, 113, 143, 148, 151, 152, 157, 159, 171, 176, 177, 180, 181, 189, 190, 192, 199, 215, 218, 221, 232, 236, 239, 242, 243, 245, 246, 291, 292, 293, 294, 295, 296, 297, 298, 326, 327, 350, 366, 392, 393, 397, 439, 441, 443, 445, 451, 452, 455, 456, 457, 458, 459, 462, 470, 471, 474, 475, 477, 491, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 539, 540, 547, 548, 549, 550, 551, 556, 557, 558, 559, 560, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 600, 602, 617, 618, 622, 623, 625, 626, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 659, 720, 721, 722, 723, 724, 725, 756], "call": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 26, 29, 30, 31, 38, 61, 75, 106, 107, 110, 111, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 152, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 176, 177, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 218, 221, 222, 223, 224, 226, 227, 229, 230, 234, 235, 237, 238, 239, 242, 244, 245, 246, 293, 294, 295, 297, 298, 326, 392, 393, 396, 397, 404, 439, 440, 441, 442, 443, 444, 445, 446, 451, 452, 454, 456, 457, 458, 459, 462, 463, 477, 490, 491, 508, 511, 512, 513, 517, 539, 540, 555, 584, 592, 593, 630, 632, 633, 634, 635, 636, 637, 638, 639, 723], "them": [1, 2, 3, 8, 17, 19, 20, 43, 77, 78, 96, 97, 98, 100, 106, 107, 109, 110, 111, 112, 143, 150, 175, 233, 239, 245, 291, 393, 396, 454, 550, 717, 718, 719, 720, 723], "overridden": [1, 2, 3, 11, 17, 18, 19, 63, 106, 169, 237, 291, 447, 448, 569], "subclass": [1, 2, 3, 4, 7, 8, 11, 12, 19, 106, 239, 240, 241, 242, 245, 246, 290, 292, 293, 298, 299, 302, 307, 312, 317, 320, 325, 326, 392, 393, 397, 439, 443, 452, 462, 729], "main": [1, 2, 3, 4, 6, 19, 26, 31, 37, 104, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 245, 246, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 454, 456, 457, 458, 459], "specifi": [1, 2, 8, 11, 12, 17, 19, 26, 30, 31, 39, 40, 41, 59, 60, 61, 62, 77, 78, 79, 106, 107, 144, 145, 146, 147, 148, 149, 157, 166, 168, 169, 170, 171, 172, 177, 181, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 224, 230, 237, 238, 243, 245, 246, 285, 292, 293, 296, 297, 392, 397, 439, 457, 462, 464, 467, 468, 469, 470, 474, 477, 490, 512, 513, 515, 517, 524, 526, 539, 540, 544, 549, 556, 560, 566, 569, 583, 592, 593, 600, 618, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 718, 720, 721, 722], "help": [1, 6, 21, 30, 37, 66, 104, 106, 107, 111, 216, 233, 461, 462, 464, 472, 509, 569, 591, 592], "both": [1, 3, 6, 7, 8, 11, 17, 18, 19, 43, 65, 66, 78, 79, 80, 107, 224, 230, 292, 293, 294, 295, 296, 297, 298, 441, 447, 448, 455, 471, 512, 524, 526, 539, 541, 548, 552, 632, 643, 720, 721], "after": [1, 2, 13, 17, 106, 110, 111, 112, 143, 150, 175, 177, 242, 245, 439, 440, 442, 443, 444, 463, 477, 541, 542, 543, 545, 546, 555, 638, 643, 644], "itself": [1, 8, 60, 157, 245, 298, 392, 643, 720], "also": [1, 3, 4, 6, 7, 8, 9, 11, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 40, 41, 42, 43, 59, 62, 66, 75, 76, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 324, 326, 392, 393, 394, 395, 396, 397, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 462, 463, 464, 466, 467, 468, 469, 471, 475, 477, 480, 482, 483, 484, 486, 489, 490, 494, 496, 497, 503, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 521, 522, 523, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 556, 557, 558, 559, 560, 561, 563, 564, 565, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 618, 621, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 643, 644, 651, 717, 718, 719, 720, 721, 723, 724, 725, 756], "updat": [1, 3, 4, 6, 8, 11, 19, 26, 43, 59, 66, 158, 161, 162, 165, 177, 180, 188, 189, 190, 223, 239, 242, 245, 246, 280, 286, 291, 298, 304, 326, 329, 337, 340, 343, 344, 345, 347, 351, 352, 353, 354, 355, 364, 367, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 439, 440, 441, 443, 445, 446, 463, 477, 478, 486, 489, 490, 491, 513, 540, 558, 569, 587, 590, 615, 621, 623, 626, 640, 724, 725], "basic": [1, 233, 451], "dmc_class": [1, 18, 291, 439, 443, 447, 448, 450], "dm_converter_mpc2": [1, 3, 4, 235, 239, 242, 244, 246, 460, 741], "v2": [1, 17, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 503], "dm_class": [1, 18, 291, 439, 447, 448, 450], "data_model_opf": [1, 3, 235, 284, 460], "nm_class": [1, 18, 291, 439, 447, 448], "net_model_acp": [1, 8, 235, 460], "ac": [1, 6, 7, 9, 12, 18, 20, 43, 154, 237, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 344, 348, 349, 350, 351, 352, 354, 358, 359, 360, 361, 362, 367, 368, 370, 374, 376, 381, 382, 387, 388, 393, 394, 395, 397, 399, 400, 401, 405, 406, 407, 408, 411, 412, 415, 416, 417, 418, 419, 422, 423, 424, 429, 430, 431, 434, 435, 436, 442, 444, 447, 448, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 520, 569, 583, 591, 592, 596, 597, 598, 599, 605, 606, 608, 610, 612, 632, 636, 638, 639, 693, 695, 698, 705, 755, 757, 758], "polar": [1, 2, 7, 8, 18, 20, 292, 293, 295, 298, 302, 303, 304, 312, 313, 314, 315, 316, 323, 324, 330, 334, 335, 336, 342, 349, 352, 359, 362, 395, 397, 401, 406, 408, 412, 416, 419, 424, 431, 436, 447, 448, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 569, 585, 587, 588, 590, 749, 751], "mm_class": [1, 12, 18, 291, 439, 447, 448, 449, 450], "math_model_opf_acp": [1, 7, 17, 235, 313, 316, 460], "dmc": [1, 3, 4, 239, 242, 245, 439, 440, 442, 443], "build": [1, 2, 5, 6, 19, 20, 21, 66, 107, 193, 217, 239, 242, 245, 298, 309, 311, 314, 316, 318, 326, 392, 393, 396, 397, 399, 402, 410, 414, 417, 420, 422, 425, 426, 428, 429, 432, 434, 437, 438, 439, 440, 460, 462, 465, 556, 557, 558, 559, 560, 561, 562, 563, 569], "dm": [1, 3, 4, 7, 8, 12, 17, 19, 43, 239, 240, 241, 242, 243, 244, 245, 246, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 280, 282, 283, 284, 285, 286, 288, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 417, 420, 422, 425, 426, 428, 429, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 456, 457, 458, 459], "nm": [1, 7, 8, 12, 17, 19, 293, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 417, 420, 422, 425, 426, 428, 429, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445], "mm": [1, 7, 8, 9, 12, 17, 19, 293, 298, 299, 302, 305, 326, 327, 331, 334, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 397, 439, 440, 441, 443, 444, 445, 462], "solve_opt": [1, 7, 298, 306, 317, 319, 325], "get": [1, 2, 4, 12, 14, 16, 17, 19, 37, 43, 61, 62, 104, 106, 107, 216, 233, 237, 238, 239, 245, 246, 292, 293, 294, 295, 296, 326, 392, 393, 394, 395, 397, 439, 443, 472, 542, 543, 546, 619, 758], "network_model_x_soln": [1, 7, 298, 439, 440, 444], "soln": [1, 17, 107, 182, 183, 393, 396, 397, 439, 479, 481, 485, 488, 493, 495, 615], "port_inj_soln": [1, 393, 396], "comput": [1, 6, 8, 12, 26, 66, 107, 144, 145, 146, 147, 148, 149, 158, 166, 167, 169, 170, 171, 172, 237, 293, 294, 295, 296, 368, 393, 396, 462, 475, 483, 484, 487, 492, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 524, 541, 560, 561, 566, 569, 587, 590, 594, 596, 598, 605, 608, 610, 612, 619, 721, 722, 723], "data_model_upd": [1, 7, 19, 245, 298, 326], "four": [1, 2, 17, 20, 43, 107, 503, 504, 506, 730], "consist": [1, 2, 3, 8, 9, 11, 17, 19, 39, 43, 107, 397, 441, 443, 445, 462, 467, 468, 469, 477, 511, 643], "hold": [1, 17, 19, 190, 290, 471], "That": [1, 7, 8, 12, 13, 17, 19, 20, 109, 157, 238, 243, 245, 246, 292, 293, 294, 295, 296, 298, 397, 452], "etc": [1, 3, 13, 17, 18, 19, 20, 24, 66, 74, 106, 158, 166, 167, 168, 177, 239, 245, 292, 298, 439, 451, 471, 477, 511, 512, 539, 569, 600, 607, 632, 633, 634, 635, 636, 638, 639, 720], "associ": [1, 6, 7, 8, 18, 523, 712], "valid": [1, 3, 61, 63, 64, 76, 106, 107, 153, 154, 155, 156, 157, 218, 236, 245, 246, 297, 326, 392, 397, 462, 524, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 625, 626], "field": [1, 2, 4, 14, 16, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 80, 106, 107, 110, 111, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 152, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 221, 237, 244, 245, 246, 298, 326, 366, 373, 392, 397, 440, 443, 462, 463, 464, 471, 477, 478, 480, 482, 490, 494, 496, 509, 513, 514, 515, 522, 523, 524, 540, 547, 550, 562, 569, 579, 583, 584, 591, 592, 593, 624, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 643, 650, 717, 718, 719, 720, 721], "identifi": [1, 3, 17, 30, 106, 107, 218, 239, 242, 243, 245, 392, 439, 462, 464, 470, 471], "can": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 26, 31, 37, 42, 60, 62, 63, 64, 66, 77, 78, 79, 80, 96, 97, 98, 100, 104, 106, 107, 108, 144, 145, 146, 147, 148, 149, 157, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 180, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 218, 224, 226, 233, 239, 245, 246, 290, 291, 293, 294, 296, 297, 298, 392, 397, 439, 451, 452, 456, 457, 458, 459, 462, 463, 466, 471, 472, 477, 478, 490, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 512, 513, 514, 515, 516, 517, 521, 524, 539, 540, 544, 556, 558, 560, 563, 564, 568, 569, 592, 593, 596, 617, 619, 629, 630, 632, 633, 634, 635, 636, 638, 639, 720, 721, 723, 725, 727, 758], "befor": [1, 2, 3, 4, 7, 8, 17, 19, 106, 107, 157, 177, 224, 230, 237, 239, 439, 441, 443, 445, 462, 463, 477, 508, 539, 555, 641, 644], "its": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 21, 26, 43, 106, 107, 158, 160, 162, 165, 169, 170, 171, 172, 177, 190, 239, 241, 242, 245, 246, 292, 326, 392, 394, 395, 396, 397, 454, 456, 457, 458, 459, 480, 496, 525, 544, 632], "simpli": [1, 2, 3, 4, 6, 8, 9, 11, 17, 18, 20, 62, 107, 246, 295, 298, 462, 511, 513, 514, 515, 540, 596], "loop": [1, 3, 4, 7, 8, 177, 439, 477, 564, 565], "possibli": [1, 4, 17, 19, 31, 107, 108, 144, 145, 146, 147, 148, 149, 180, 192, 193, 194, 196, 197, 198, 199, 200, 201, 242, 392, 397, 514, 625, 626, 640], "access": [1, 6, 8, 18, 20, 21, 107, 217, 237, 238, 246, 451, 452, 462], "respect": [1, 3, 4, 7, 8, 9, 11, 17, 19, 20, 26, 30, 31, 107, 144, 145, 146, 147, 148, 149, 156, 169, 170, 171, 172, 183, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 245, 293, 392, 466, 471, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 515, 516, 521, 524, 526, 539, 561, 562, 563, 569, 625, 626, 642, 718, 720, 725], "nme": [1, 8, 17, 292, 293, 294, 295, 296, 326, 339, 341, 358, 360, 361, 397, 404], "pull": [1, 17], "dme": [1, 3, 4, 12, 17, 19, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 326, 367, 397], "describ": [1, 2, 3, 6, 7, 12, 17, 18, 19, 20, 26, 31, 43, 62, 106, 107, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 397, 462, 471, 512, 539, 592, 632], "more": [1, 3, 6, 7, 8, 9, 12, 17, 19, 40, 41, 43, 106, 107, 146, 190, 196, 200, 235, 237, 239, 242, 245, 246, 290, 291, 292, 293, 294, 295, 296, 298, 326, 392, 397, 439, 443, 447, 448, 449, 450, 451, 462, 463, 464, 489, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 592, 593, 617, 629, 632, 633, 634, 635, 636, 638, 639, 723, 757], "detail": [1, 3, 4, 8, 9, 17, 19, 20, 21, 26, 30, 31, 36, 42, 43, 44, 45, 59, 60, 62, 66, 74, 81, 82, 83, 84, 102, 106, 107, 110, 112, 143, 144, 146, 149, 150, 162, 169, 171, 177, 178, 179, 181, 188, 190, 194, 196, 200, 201, 215, 228, 232, 233, 235, 238, 239, 242, 245, 246, 291, 292, 293, 294, 295, 296, 298, 392, 397, 447, 448, 449, 450, 462, 470, 471, 472, 477, 480, 482, 486, 489, 490, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 516, 520, 521, 523, 564, 569, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 619, 621, 632, 633, 635, 636, 639, 646, 650, 651, 652, 653, 654, 655, 656, 725, 738, 756], "summari": [1, 3, 17, 18, 20, 74, 79, 80, 96, 97, 98, 100, 105, 106, 107, 222, 223, 228, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 280, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 417, 420, 421, 422, 425, 426, 427, 428, 429, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 462, 473, 569, 583], "inherit": [1, 2, 3, 4, 7, 8, 17, 18, 19, 238, 245, 246, 292, 293, 294, 295, 296, 298, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 392, 394, 395, 396, 397, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 415, 416, 418, 419, 420, 423, 424, 426, 428, 430, 431, 432, 435, 436, 437, 438, 439, 440, 443, 447, 448, 452, 726], "repres": [1, 6, 8, 12, 17, 20, 42, 60, 107, 293, 392, 397, 523, 524, 548, 554, 569, 592, 593], "abstract": [1, 7, 17, 19, 106, 242, 245, 246, 291, 292, 293, 298, 299, 302, 305, 306, 307, 312, 319, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 350, 356, 357, 360, 363, 366, 372, 373, 380, 386, 392, 393, 397, 398, 399, 403, 404, 410, 413, 414, 417, 421, 422, 427, 429, 433, 434, 439], "displai": [1, 3, 17, 19, 26, 79, 80, 106, 107, 110, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 226, 227, 229, 230, 239, 242, 245, 297, 298, 392, 397, 439, 451, 452, 454, 462, 472, 620, 621, 623, 624, 626, 627], "border": 1, "concret": [1, 3, 7, 8, 17, 19, 239, 242, 246, 292, 293, 294, 295, 296, 298, 392, 394, 395, 396], "doubl": [1, 26, 30, 31, 43, 62, 108, 109, 218, 226, 237, 239, 246, 261, 262, 263, 264, 266, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 293, 294, 295, 296, 298, 368, 392, 393, 394, 395, 396, 397, 439, 444, 516, 556, 625, 626, 725], "signific": [1, 107, 515], "portion": [1, 4, 20, 245, 293, 562, 592, 724, 736, 737], "implement": [1, 2, 3, 4, 6, 7, 8, 11, 14, 16, 17, 18, 19, 22, 23, 24, 25, 38, 42, 105, 106, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 154, 157, 161, 172, 177, 190, 198, 216, 219, 220, 233, 234, 237, 238, 239, 242, 243, 245, 246, 261, 263, 264, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288, 290, 292, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 315, 317, 319, 321, 322, 323, 324, 325, 326, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 397, 398, 399, 400, 402, 403, 404, 410, 413, 414, 421, 426, 427, 428, 433, 438, 439, 440, 441, 442, 443, 444, 445, 451, 455, 462, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 553, 569, 592, 617, 637, 700, 704, 717, 718, 719, 720], "greatli": 1, "reduc": [1, 7, 26, 558, 569], "effort": 1, "involv": [1, 2, 7, 8, 17, 19], "distinguish": [1, 177, 477], "pss": [1, 4, 242, 620, 621, 622, 623, 624, 625, 626, 627, 640], "raw": [1, 4, 193, 242, 443, 509, 569, 583, 591, 592, 600, 620, 621, 622, 623, 624, 625, 626, 627, 640], "dc": [1, 7, 9, 18, 43, 55, 66, 68, 69, 70, 71, 95, 151, 156, 237, 238, 244, 253, 272, 273, 274, 292, 296, 298, 317, 318, 325, 327, 337, 343, 345, 353, 355, 369, 371, 372, 373, 374, 375, 376, 377, 383, 389, 396, 402, 409, 420, 421, 422, 423, 424, 425, 432, 437, 442, 444, 448, 460, 508, 509, 510, 515, 523, 557, 559, 560, 569, 583, 592, 622, 633, 634, 635, 651, 663, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 706, 717, 718, 720, 744], "cartesian": [1, 2, 7, 8, 18, 21, 292, 293, 294, 299, 300, 301, 307, 308, 309, 310, 311, 321, 322, 330, 331, 332, 333, 341, 348, 351, 358, 361, 394, 400, 405, 407, 408, 411, 415, 418, 423, 430, 435, 447, 448, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 569, 586, 587, 588, 589, 590, 594, 595, 748, 750], "goe": [1, 106], "which": [1, 2, 3, 4, 6, 7, 8, 12, 13, 17, 18, 19, 21, 26, 30, 40, 41, 42, 59, 60, 62, 63, 64, 79, 80, 106, 107, 130, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 224, 230, 236, 240, 245, 290, 292, 293, 296, 298, 326, 392, 393, 397, 455, 462, 463, 464, 471, 472, 477, 480, 486, 489, 490, 496, 511, 512, 514, 515, 516, 517, 521, 523, 525, 526, 539, 548, 563, 569, 583, 585, 586, 587, 588, 589, 590, 592, 593, 596, 618, 619, 625, 626, 632, 633, 634, 635, 636, 637, 638, 639, 641, 643, 644, 720, 721, 725, 758], "element_contain": [1, 2, 3, 4, 7, 8, 235, 239, 242, 298, 392, 460], "mixin": [1, 284, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 460], "share": [1, 3, 5, 6, 8, 17, 19, 284, 298, 321, 322, 323, 324, 330, 446, 523], "mention": [1, 11, 12, 452, 720], "abov": [1, 2, 11, 12, 13, 17, 19, 20, 26, 31, 42, 43, 63, 106, 107, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 165, 169, 170, 171, 172, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 218, 234, 237, 452, 471, 526, 541, 542, 543, 545, 546, 552, 569, 583, 720, 721], "address": [1, 157, 452], "index": [1, 3, 4, 8, 9, 12, 13, 17, 19, 30, 59, 62, 77, 78, 79, 80, 106, 107, 180, 181, 190, 237, 239, 245, 246, 261, 267, 269, 270, 273, 275, 277, 278, 282, 285, 288, 294, 297, 298, 368, 392, 393, 394, 395, 397, 451, 452, 462, 463, 464, 465, 467, 468, 469, 471, 477, 478, 511, 512, 513, 514, 515, 525, 539, 540, 541, 542, 543, 544, 545, 546, 555, 569, 585, 586, 587, 588, 589, 590, 600, 607, 608, 609, 610, 611, 614, 624, 626, 627, 632, 643, 644, 718, 720, 721], "suppli": [1, 26, 31, 79, 80, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 463, 512, 539, 549, 560, 569, 583, 619], "properti": [1, 2, 4, 6, 7, 8, 17, 19, 106, 107, 236, 239, 242, 245, 252, 255, 256, 259, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 284, 285, 288, 290, 292, 293, 296, 298, 366, 373, 392, 393, 394, 395, 396, 397, 439, 440, 441, 442, 443, 444, 445, 452, 461, 462], "element_class": [1, 2, 3, 4, 7, 8, 17, 19, 239, 242, 290], "sometim": [1, 3, 7, 298], "certain": [1, 4, 8, 11, 30, 440], "across": [1, 7, 8, 42, 60, 62, 298, 358, 359, 361, 362, 446, 466, 552, 718], "wai": [1, 2, 6, 12, 17, 110, 111, 112, 143, 150, 151, 175, 291, 451, 569, 592, 593, 717], "match": [1, 2, 4, 42, 60, 61, 66, 107, 144, 145, 146, 147, 148, 149, 166, 168, 224, 226, 228, 230, 233, 245, 297, 358, 359, 361, 362, 513, 540, 549, 615, 731, 732, 733, 734, 736, 737], "path": [1, 13, 14, 15, 16, 61, 77, 78, 79, 80, 224, 233, 292, 453, 454, 517, 565], "current": [1, 2, 7, 9, 14, 16, 19, 20, 21, 26, 29, 30, 43, 74, 75, 77, 78, 79, 80, 107, 113, 143, 150, 152, 162, 172, 176, 177, 179, 180, 182, 183, 185, 186, 187, 190, 221, 261, 277, 293, 294, 295, 297, 300, 303, 306, 308, 309, 313, 314, 321, 323, 330, 332, 335, 357, 365, 379, 391, 392, 393, 439, 441, 443, 444, 445, 446, 451, 452, 453, 454, 456, 457, 458, 459, 461, 463, 467, 471, 476, 477, 478, 479, 481, 483, 484, 485, 487, 488, 492, 493, 494, 495, 497, 498, 499, 500, 503, 504, 505, 517, 548, 562, 563, 564, 565, 569, 583, 584, 586, 587, 588, 596, 598, 599, 620, 640, 758], "approach": [1, 2, 17, 454], "util": [1, 21, 107, 216, 460], "first": [1, 2, 3, 4, 7, 8, 12, 17, 19, 26, 31, 43, 61, 62, 63, 64, 77, 78, 79, 80, 107, 108, 143, 147, 153, 154, 156, 171, 184, 188, 191, 198, 218, 237, 291, 297, 392, 397, 451, 454, 456, 458, 459, 471, 477, 490, 497, 514, 515, 517, 550, 561, 592, 593, 617, 618, 624, 627, 632, 638, 643, 718], "we": [1, 3, 6, 8, 12, 13, 17, 18, 19, 106, 107, 109, 233, 472, 565], "wrap": 1, "insid": [1, 290, 452], "inher": 1, "limit": [1, 3, 7, 11, 12, 17, 18, 19, 26, 31, 43, 74, 107, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 178, 182, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 261, 262, 266, 272, 274, 293, 294, 302, 339, 350, 351, 368, 400, 440, 442, 444, 450, 477, 479, 480, 485, 486, 488, 489, 495, 496, 541, 542, 545, 546, 552, 569, 583, 592, 593, 596, 597, 632, 637, 638, 650, 700, 718, 719, 720, 723, 724], "order": [1, 2, 7, 11, 17, 19, 26, 30, 31, 42, 43, 60, 61, 62, 81, 106, 107, 110, 111, 112, 143, 150, 171, 175, 188, 237, 290, 292, 397, 443, 462, 463, 467, 468, 469, 471, 490, 509, 512, 513, 514, 515, 539, 540, 543, 547, 556, 557, 558, 560, 563, 569, 583, 591, 592, 614, 632, 633, 634, 635, 636, 638, 639], "backward": [1, 20, 62, 110, 112, 143, 150, 514, 547, 556, 565, 569, 592, 593, 629, 721], "compat": [1, 20, 62, 110, 112, 143, 150, 443, 451, 455, 514, 547, 556, 569, 592, 593, 633, 634, 635, 636, 638, 639, 721, 758], "mechan": [1, 6, 18, 327, 717], "intern": [1, 3, 6, 17, 19, 62, 106, 107, 157, 392, 397, 462, 463, 465, 471, 477, 509, 511, 512, 513, 514, 523, 539, 540, 547, 556, 557, 558, 560, 563, 591, 592, 600, 607, 629, 632, 633, 634, 635, 636, 638, 639, 658, 758], "all": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 26, 29, 31, 36, 42, 43, 60, 62, 63, 64, 65, 75, 77, 78, 79, 80, 102, 103, 106, 107, 110, 111, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 176, 177, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 218, 221, 226, 228, 232, 233, 236, 237, 239, 245, 246, 252, 261, 267, 269, 270, 273, 275, 277, 278, 284, 285, 288, 292, 293, 294, 295, 296, 298, 326, 328, 329, 330, 331, 334, 368, 392, 393, 394, 395, 396, 397, 439, 450, 454, 462, 463, 464, 466, 477, 480, 486, 490, 496, 498, 503, 504, 505, 506, 507, 510, 514, 515, 516, 521, 542, 544, 546, 547, 549, 550, 551, 555, 558, 563, 565, 569, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 596, 597, 600, 607, 622, 623, 626, 629, 632, 633, 634, 635, 636, 638, 639, 643, 720, 721, 725, 756], "even": [1, 2, 20, 21, 42, 43, 79, 80, 146, 177, 196, 200, 477, 569, 583], "importantli": 1, "extens": [1, 5, 11, 14, 16, 17, 20, 21, 61, 218, 242, 309, 311, 314, 316, 318, 439, 447, 448, 449, 450, 456, 457, 458, 459, 460, 534, 550, 640, 641, 642, 663, 717, 744, 745, 758], "suit": [1, 233], "second": [1, 3, 4, 7, 8, 12, 17, 18, 19, 20, 43, 63, 64, 79, 80, 110, 111, 112, 143, 150, 175, 195, 199, 218, 233, 297, 397, 439, 456, 470, 474, 515, 519, 592, 617, 619, 632, 633, 634, 635, 636, 638, 639], "abl": [1, 42, 240, 454, 471], "make": [1, 7, 8, 13, 18, 19, 21, 59, 106, 107, 218, 237, 239, 242, 275, 392, 397, 446, 454, 461, 471, 555], "full": [1, 7, 8, 12, 30, 42, 106, 107, 157, 162, 179, 183, 190, 228, 292, 293, 294, 296, 327, 368, 392, 393, 397, 462, 475, 494, 510, 516, 521, 558, 560, 563, 569, 585, 586, 587, 588, 589, 590, 593, 632, 638, 725, 758], "scope": 1, "end": [1, 2, 8, 9, 12, 17, 18, 19, 26, 43, 66, 78, 106, 107, 158, 160, 162, 163, 164, 165, 169, 170, 171, 172, 184, 190, 191, 218, 224, 228, 233, 245, 261, 262, 273, 274, 275, 288, 293, 296, 297, 298, 439, 451, 452, 462, 463, 466, 471, 474, 477, 503, 504, 506, 522, 523, 524, 541, 543, 545, 557, 592, 596, 597, 624, 625, 626, 627, 632, 633, 634, 635, 636, 638, 639, 641, 642], "take": [1, 4, 7, 8, 9, 12, 17, 18, 19, 43, 62, 107, 177, 188, 189, 218, 298, 393, 396, 464, 477, 490, 497, 498, 499, 500, 501, 502, 504, 505, 517, 541, 544, 545, 549, 556, 568, 721], "advantag": [1, 17, 19], "capabl": [1, 19, 38, 217, 234, 269, 367, 368, 449, 471, 526, 546, 553, 592, 724], "add": [1, 2, 3, 4, 6, 7, 8, 13, 17, 18, 19, 21, 30, 39, 40, 41, 42, 59, 60, 106, 107, 177, 233, 235, 239, 241, 242, 244, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 297, 298, 326, 327, 366, 373, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 414, 417, 420, 422, 425, 440, 441, 442, 443, 445, 447, 448, 450, 454, 462, 463, 464, 477, 544, 720], "multiphas": 1, "unbalanc": [1, 2, 3, 20, 239, 291, 447, 730], "hybrid": [1, 20, 569, 587, 590, 731, 732, 733, 734, 735, 736, 737, 754], "own": [1, 2, 3, 4, 6, 7, 8, 21, 160, 162, 177, 188, 189, 233, 234, 239, 245, 246, 326, 397, 477, 490, 515], "version": [1, 4, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 37, 38, 43, 75, 104, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 176, 177, 216, 218, 219, 220, 221, 233, 234, 237, 240, 242, 243, 292, 439, 454, 460, 471, 477, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 550, 556, 558, 569, 583, 584, 621, 633, 634, 635, 636, 638, 639, 641, 721, 730, 758], "run_pf": [1, 2, 17, 18, 20, 453, 457, 460, 754], "run_cpf": [1, 2, 17, 18, 20, 453, 457, 460, 754], "run_opf": [1, 2, 12, 17, 18, 20, 453, 457, 460, 754, 755, 758], "underscor": [1, 758], "One": [1, 8, 731, 732, 733, 734], "differ": [1, 2, 4, 7, 17, 19, 20, 26, 31, 42, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 177, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 226, 245, 261, 262, 298, 339, 341, 342, 343, 400, 446, 451, 463, 466, 471, 473, 477, 513, 541, 552, 564, 569, 583, 594, 595, 721], "remov": [1, 3, 13, 17, 19, 43, 239, 290, 454, 514, 518, 547, 556, 559, 569, 630, 720, 721], "offlin": [1, 3, 7, 17, 19, 239, 245, 326, 555], "equip": [1, 600, 607], "renumb": [1, 514], "buse": [1, 2, 3, 4, 8, 17, 18, 19, 20, 43, 60, 74, 239, 245, 263, 264, 269, 270, 273, 347, 351, 352, 353, 354, 355, 464, 465, 467, 468, 469, 470, 475, 477, 483, 484, 487, 489, 492, 503, 504, 505, 506, 507, 510, 514, 515, 516, 519, 521, 539, 542, 547, 552, 560, 563, 564, 565, 569, 585, 586, 587, 588, 589, 590, 608, 609, 610, 611, 614, 623, 632, 643, 720, 721, 725, 731, 732, 733, 734, 735, 736, 737], "consecut": [1, 4, 17, 62, 465, 514, 547, 556, 557, 558, 560, 563], "ext2int": [1, 460, 463, 509, 512, 513, 540, 547, 558, 563, 591, 592, 607, 657, 658, 664, 726], "int2ext": [1, 460, 463, 514, 539, 540, 657, 658, 664, 717, 718, 719, 720, 726], "result": [1, 2, 3, 8, 11, 59, 74, 77, 78, 105, 106, 107, 148, 166, 168, 177, 180, 199, 200, 222, 223, 224, 226, 227, 230, 233, 239, 242, 293, 298, 392, 393, 439, 441, 443, 445, 452, 454, 456, 457, 458, 459, 463, 471, 472, 477, 478, 480, 482, 486, 489, 494, 496, 509, 515, 524, 549, 555, 559, 569, 583, 591, 592, 593, 600, 619, 620, 629, 632, 633, 634, 635, 636, 637, 638, 639, 661, 662, 717, 718, 719, 720, 723], "callback": [1, 2, 177, 178, 179, 180, 188, 190, 302, 443, 460, 463, 471, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 490, 493, 494, 495, 496, 514, 569, 630, 631, 632, 661, 662, 700, 704, 712, 717, 718, 719, 720], "necessari": [1, 3, 7, 17, 107, 239, 245, 326, 444, 471, 486, 489, 641, 642], "so": [1, 2, 3, 4, 7, 8, 12, 13, 17, 18, 20, 21, 26, 59, 157, 233, 236, 238, 246, 397, 447, 448, 452, 472, 618, 643], "motiv": 1, "behind": [1, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507], "facilit": [1, 21], "who": [1, 6, 224], "want": [1, 6, 17, 77, 78, 79, 80, 150, 558], "possibl": [1, 3, 19, 30, 43, 60, 77, 78, 79, 106, 568, 592, 593, 625, 632, 643, 720, 723], "overrid": [1, 2, 11, 12, 17, 18, 19, 107, 110, 111, 112, 143, 144, 145, 146, 148, 149, 150, 160, 169, 170, 171, 175, 192, 193, 194, 195, 196, 197, 199, 200, 201, 280, 286, 325, 341, 439, 451, 561, 569, 583, 629, 632, 633, 634, 635, 636, 638, 639, 679, 720], "behavior": [1, 2, 76, 157, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 643, 720], "complet": [1, 3, 7, 11, 12, 17, 18, 19, 21, 60, 107, 165, 183, 190, 239, 439, 464, 493, 514, 547, 569, 720, 758], "often": [1, 9, 74], "see": [1, 2, 3, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 40, 41, 42, 43, 44, 45, 59, 60, 62, 66, 74, 75, 76, 81, 82, 83, 84, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 215, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 392, 393, 394, 395, 396, 397, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 462, 463, 464, 466, 467, 468, 469, 471, 472, 475, 477, 480, 482, 483, 484, 486, 489, 490, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 556, 557, 558, 559, 560, 561, 563, 564, 565, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 619, 621, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 643, 644, 646, 650, 651, 652, 653, 654, 655, 656, 717, 718, 719, 720, 721, 723, 724, 725, 726, 738, 756, 758], "essenti": [1, 3, 19, 291, 392], "modif": [1, 2, 6, 12, 60, 81, 291, 439, 544, 720], "addit": [1, 2, 3, 8, 12, 17, 18, 19, 20, 21, 30, 39, 42, 43, 62, 64, 105, 106, 239, 245, 291, 392, 456, 457, 458, 459, 463, 464, 471, 509, 512, 513, 515, 523, 526, 539, 540, 542, 543, 544, 553, 591, 592, 593, 623, 631, 633, 635, 636, 637, 639, 651, 723, 758], "made": [1, 3, 58, 60, 62, 107, 218, 514, 544], "default": [1, 3, 4, 5, 6, 11, 12, 17, 18, 19, 26, 30, 31, 36, 40, 41, 61, 62, 63, 64, 66, 76, 77, 78, 79, 80, 102, 103, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 168, 169, 170, 171, 172, 175, 177, 181, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 222, 224, 228, 232, 237, 239, 240, 241, 245, 246, 291, 293, 296, 299, 302, 325, 326, 392, 393, 394, 395, 396, 397, 439, 440, 442, 444, 451, 454, 457, 462, 471, 472, 477, 490, 512, 516, 521, 539, 546, 549, 551, 560, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 592, 593, 619, 620, 621, 623, 624, 626, 627, 629, 632, 633, 634, 635, 636, 638, 639, 643, 684, 693, 720, 721, 725, 755, 756, 758], "henc": [1, 43], "earli": 1, "cycl": [1, 7, 523], "should": [1, 6, 11, 13, 17, 19, 61, 107, 151, 153, 154, 156, 166, 168, 177, 233, 239, 245, 298, 397, 463, 472, 477, 513, 515, 540, 555, 560, 583, 592, 593, 608, 609, 610, 611, 643, 731, 732, 733, 734, 736, 737], "execut": [1, 5, 110, 111, 112, 143, 150, 175, 188, 222, 439, 454, 490, 600, 631], "successfulli": [1, 509, 591, 592], "command": [1, 6, 21, 37, 104, 106, 107, 216, 233, 453, 454, 462, 758], "without": [1, 3, 4, 6, 7, 8, 9, 29, 43, 75, 106, 107, 113, 152, 176, 221, 245, 477, 515, 584], "With": [2, 29, 43, 75, 107, 110, 111, 112, 113, 143, 150, 152, 175, 176, 221, 454, 462, 471, 561, 584, 720], "object": [2, 5, 6, 12, 17, 18, 19, 25, 26, 31, 66, 74, 106, 107, 144, 145, 146, 147, 148, 149, 166, 167, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 239, 240, 241, 242, 245, 246, 262, 266, 272, 274, 282, 283, 284, 290, 291, 292, 293, 297, 298, 299, 302, 305, 306, 307, 312, 319, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 392, 393, 394, 395, 396, 397, 439, 441, 442, 443, 445, 451, 452, 456, 457, 458, 459, 462, 463, 509, 541, 542, 545, 546, 591, 592, 600, 607, 619, 723], "architectur": [2, 5], "outlin": [2, 3], "section": [2, 3, 6, 7, 8, 9, 12, 17, 18, 19, 110, 112, 143, 147, 228, 233, 239, 241, 242, 245, 246, 262, 265, 266, 268, 271, 272, 274, 275, 276, 279, 281, 284, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 326, 392, 397, 439, 447, 448, 449, 450, 569, 620, 624, 626, 627, 726, 758], "customiz": 2, "increas": [2, 43, 190, 492], "dramat": 2, "ones": [2, 9, 17, 19, 462, 497, 501, 504, 505, 506, 507, 569], "import": [2, 3, 6, 19, 43, 239, 242, 243, 246, 254, 257], "understand": [2, 6], "how": [2, 3, 4, 8, 19, 60, 106, 157, 233, 235, 245, 454, 463, 560, 625, 626], "select": [2, 9, 18, 30, 43, 107, 151, 153, 154, 155, 156, 162, 292, 293, 294, 296, 393, 394, 395, 397, 440, 442, 444, 454, 475, 560, 632, 723], "instanti": [2, 3, 4, 7, 8, 239, 242, 439], "There": [2, 3, 8, 11, 12, 17, 42, 110, 111, 112, 143, 150, 175, 233, 454, 471], "sever": [2, 6, 17, 233, 471, 513], "below": [2, 3, 12, 17, 19, 20, 37, 59, 62, 63, 64, 104, 107, 169, 190, 216, 452, 462, 471, 477, 497, 503, 511, 512, 526, 539, 541, 542, 543, 545, 546, 552, 553, 592, 593, 723], "illustr": [2, 4, 7, 8, 11, 19, 106, 463], "invok": [2, 7, 177, 477, 490, 514], "fact": [2, 17, 19], "simpl": [2, 3, 7, 8, 17, 20, 66, 79, 80, 107, 456, 458, 459, 508, 619, 717, 753], "wrapper": [2, 6, 31, 38, 144, 145, 146, 147, 148, 149, 160, 162, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 456, 457, 458, 459, 460, 508], "run_mp": [2, 6, 453, 456, 458, 459, 460, 753], "onli": [2, 4, 7, 8, 12, 13, 17, 18, 21, 58, 59, 64, 106, 107, 110, 112, 143, 144, 145, 146, 147, 148, 149, 150, 157, 177, 181, 190, 198, 222, 224, 230, 233, 245, 246, 297, 326, 392, 397, 441, 443, 445, 447, 448, 451, 452, 461, 477, 497, 514, 523, 524, 526, 544, 547, 560, 561, 569, 583, 592, 593, 596, 597, 617, 618, 643, 721], "valu": [2, 3, 7, 8, 18, 19, 26, 29, 30, 31, 42, 45, 58, 59, 60, 61, 62, 63, 64, 66, 74, 75, 76, 77, 78, 79, 80, 103, 106, 107, 110, 111, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 221, 226, 236, 237, 239, 245, 246, 275, 280, 286, 292, 297, 298, 392, 393, 397, 439, 441, 442, 443, 445, 446, 454, 462, 463, 464, 465, 471, 472, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 505, 507, 509, 512, 513, 515, 518, 519, 522, 523, 526, 539, 540, 542, 543, 544, 549, 556, 558, 561, 563, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 591, 592, 593, 596, 598, 605, 619, 632, 638, 643, 720, 721, 722, 723, 724], "task_class": [2, 291, 457], "argument": [2, 3, 4, 7, 8, 18, 26, 29, 31, 61, 63, 64, 66, 75, 76, 77, 78, 79, 106, 107, 110, 111, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 152, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 176, 177, 178, 179, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 221, 224, 230, 245, 246, 297, 451, 454, 456, 458, 459, 462, 463, 470, 477, 480, 482, 486, 489, 490, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 512, 513, 514, 515, 517, 520, 526, 532, 539, 540, 555, 558, 559, 561, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 592, 593, 619, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 723], "handl": [2, 4, 7, 8, 17, 19, 26, 77, 78, 79, 80, 106, 107, 145, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 178, 179, 188, 189, 190, 195, 216, 241, 243, 244, 245, 246, 284, 290, 291, 292, 293, 297, 302, 309, 311, 314, 316, 318, 326, 327, 328, 330, 397, 439, 440, 444, 446, 450, 454, 455, 457, 471, 472, 475, 477, 480, 482, 486, 489, 492, 494, 496, 497, 515, 560, 583, 585, 586, 587, 588, 589, 590, 630], "constructor": [2, 3, 4, 7, 8, 17, 106, 107, 237, 239, 240, 241, 243, 290, 291, 297, 299, 302, 307, 309, 311, 312, 314, 316, 317, 318, 320, 325, 394, 395, 396, 439, 440, 442, 444, 451, 455, 457, 462], "pass": [2, 3, 4, 7, 8, 11, 12, 15, 17, 18, 20, 26, 61, 63, 64, 110, 111, 112, 143, 150, 157, 160, 165, 169, 170, 171, 172, 175, 177, 190, 218, 224, 226, 227, 228, 230, 233, 245, 298, 439, 449, 451, 463, 477, 490, 512, 513, 514, 517, 539, 540, 569, 592, 593, 625, 758], "mean": [2, 3, 17, 19, 20, 42, 60, 106, 107, 160, 162, 190, 277, 285, 397, 511, 541, 542, 543, 544, 545, 546, 569, 592, 593], "either": [2, 3, 6, 8, 17, 26, 42, 61, 66, 106, 107, 110, 111, 112, 143, 147, 150, 175, 179, 198, 239, 298, 392, 452, 503, 513, 515, 526, 540, 550, 556, 569, 592, 593, 619, 625, 632, 633, 634, 635, 636, 638, 639, 641, 643, 721, 723], "two": [2, 3, 4, 5, 6, 7, 8, 12, 17, 19, 43, 79, 80, 107, 156, 224, 226, 230, 239, 245, 297, 450, 452, 454, 456, 469, 471, 473, 505, 507, 514, 523, 526, 547, 556, 561, 565, 618, 622, 623, 624, 626, 726], "descript": [2, 3, 4, 6, 8, 12, 17, 19, 20, 21, 30, 74, 106, 107, 190, 218, 237, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 463, 464, 523, 569, 583, 632, 637], "dm_converter_class": [2, 291, 439, 440], "final": [2, 17, 19, 20, 26, 31, 60, 66, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 242, 392, 439, 477, 509, 512, 515, 516, 521, 539, 585, 586, 587, 588, 589, 590, 591, 592, 721, 725], "data_model_class": [2, 291, 439], "network_model_class": [2, 291, 439], "math_model_class": [2, 291, 439], "dm_converter_class_mpc2_default": [2, 439, 443], "data_model_class_default": [2, 439, 440, 442], "network_model_class_default": [2, 439, 442, 444], "math_model_class_default": [2, 439, 440, 442, 443, 444], "tabl": [2, 4, 6, 12, 13, 18, 19, 20, 39, 40, 41, 42, 54, 55, 56, 57, 60, 62, 63, 64, 237, 238, 239, 245, 246, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 290, 291, 297, 441, 443, 445, 447, 448, 449, 450, 451, 452, 455, 464, 511, 523, 537, 544, 642, 659, 743], "last": [2, 7, 107, 177, 185, 186, 187, 190, 291, 392, 451, 452, 477, 555, 618, 624, 627, 630], "cell": [2, 3, 4, 11, 12, 13, 14, 16, 17, 39, 42, 61, 62, 63, 64, 79, 80, 106, 107, 157, 159, 177, 180, 188, 189, 190, 224, 228, 230, 237, 239, 245, 246, 275, 290, 291, 292, 293, 294, 295, 296, 297, 298, 368, 392, 397, 439, 451, 456, 457, 458, 459, 462, 472, 474, 477, 478, 490, 512, 513, 515, 518, 519, 522, 523, 539, 540, 569, 601, 602, 620, 621, 623, 624, 625, 626, 627, 641, 642, 644], "arrai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 39, 42, 60, 61, 62, 63, 64, 75, 79, 80, 106, 107, 113, 152, 157, 158, 159, 161, 163, 164, 165, 176, 177, 180, 181, 184, 188, 189, 190, 191, 218, 221, 224, 226, 227, 228, 229, 230, 237, 239, 242, 243, 245, 246, 275, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 368, 392, 397, 439, 451, 456, 457, 458, 459, 462, 472, 474, 477, 478, 490, 512, 513, 515, 518, 519, 522, 523, 539, 540, 569, 584, 601, 602, 620, 621, 623, 624, 625, 626, 627, 632, 641, 642, 644], "popul": [2, 17, 19, 443, 463, 631], "parent": [2, 12, 17, 19, 157, 245, 262, 265, 266, 268, 271, 272, 274, 276, 279, 280, 281, 286, 287, 289, 292, 393, 396, 397, 441, 443, 445], "runtim": [2, 195, 199], "done": [2, 3, 7, 8, 17, 19, 81, 157, 177, 178, 179, 238, 452, 477, 480, 482, 486, 489, 494, 496, 617, 661, 662], "delet": [2, 13, 224, 297], "replac": [2, 17, 19, 60, 79, 80, 106, 107, 224, 230, 290, 449, 464, 477, 544, 559, 569, 720], "entri": [2, 3, 4, 17, 42, 60, 106, 181, 245, 246, 290, 298, 392, 625, 626], "action": [2, 11], "new_class": 2, "append": [2, 39, 40, 41, 59, 110, 112, 143, 150, 241, 245, 290, 297, 463, 632, 633, 634, 635, 636, 638, 639], "old_class": 2, "isa": [2, 290], "true": [2, 17, 30, 36, 66, 77, 78, 102, 106, 107, 177, 180, 215, 218, 222, 224, 226, 227, 228, 229, 230, 232, 236, 237, 239, 245, 246, 263, 264, 290, 297, 392, 397, 442, 444, 451, 452, 454, 463, 477, 526, 558, 559, 592, 619, 632, 638, 643, 720, 721, 723, 756], "typic": [2, 3, 4, 7, 8, 11, 17, 19, 245, 246, 326, 397, 457, 463, 541, 542, 545, 546, 626, 627], "multipl": [2, 110, 111, 112, 143, 150, 175, 188, 190, 217, 245, 397, 452, 454, 464, 477, 490, 512, 518, 539, 569, 583], "sequenti": [2, 3, 7, 8, 11, 224, 230], "modify_element_class": [2, 290], "previous": [2, 66, 107], "avail": [2, 10, 17, 19, 21, 22, 23, 24, 25, 26, 37, 104, 107, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 150, 156, 198, 216, 218, 219, 220, 234, 237, 282, 393, 439, 440, 446, 452, 454, 455, 456, 457, 458, 459, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 517, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 569, 583, 592, 627, 643, 757, 758], "affect": [2, 12, 42, 60, 452, 454, 544, 720], "v": [2, 8, 9, 29, 45, 75, 76, 107, 113, 152, 159, 161, 176, 221, 275, 277, 285, 293, 327, 331, 334, 337, 392, 397, 462, 467, 468, 469, 471, 475, 476, 477, 483, 484, 487, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 516, 521, 542, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 615, 632, 725, 748, 749, 750, 751], "voltag": [2, 3, 8, 9, 17, 18, 19, 20, 43, 239, 245, 261, 262, 263, 264, 266, 269, 270, 273, 277, 285, 292, 293, 294, 295, 296, 302, 331, 332, 333, 334, 335, 336, 341, 342, 348, 349, 350, 351, 352, 358, 359, 360, 361, 362, 392, 393, 394, 395, 396, 397, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 435, 436, 440, 442, 444, 447, 448, 456, 459, 466, 467, 468, 469, 471, 475, 477, 483, 484, 487, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 516, 521, 524, 539, 541, 542, 545, 546, 552, 557, 558, 561, 562, 563, 564, 565, 569, 583, 585, 586, 587, 588, 589, 590, 592, 594, 595, 608, 609, 610, 611, 612, 613, 614, 629, 632, 633, 634, 635, 636, 638, 639, 716, 721, 725, 757], "represent": [2, 3, 8, 17, 18, 19, 397, 447, 448, 569, 585, 586, 587, 588, 589, 590], "balanc": [2, 3, 7, 66, 74, 239, 266, 298, 300, 301, 303, 304, 306, 308, 310, 313, 315, 317, 321, 322, 323, 324, 325, 330, 332, 333, 335, 336, 393, 499, 500, 505, 569, 585, 586, 587, 588, 589, 590, 598, 599, 605, 606, 609, 611, 613, 757], "experiment": [2, 74, 446, 569], "come": [2, 17, 20, 393, 471, 730], "These": [2, 3, 7, 17, 19, 38, 42, 60, 105, 177, 188, 189, 217, 234, 397, 453, 462, 477, 490, 717, 718, 719, 720], "summar": [2, 4, 6, 9, 17, 18, 19, 20, 21, 42], "assign": [2, 4, 8, 17, 29, 75, 106, 113, 152, 157, 176, 221, 239, 240, 241, 245, 246, 297, 298, 299, 302, 394, 395, 396, 451, 452, 477, 490, 542, 543, 584, 644], "exp": [2, 12, 446, 569, 758], "must": [2, 8, 12, 17, 19, 31, 39, 42, 60, 62, 66, 106, 107, 110, 111, 112, 143, 150, 175, 226, 237, 238, 239, 242, 245, 246, 292, 293, 294, 295, 296, 297, 326, 392, 397, 439, 451, 452, 454, 462, 523, 541, 542, 545, 546, 549, 555, 556, 557, 558, 560, 563, 617, 637, 717], "sinc": [2, 7, 8, 12, 17, 19, 26, 43, 151, 169, 170, 171, 172, 237, 451, 452, 472], "doe": [2, 6, 7, 8, 19, 42, 106, 145, 195, 245, 298, 326, 439, 451, 455, 472, 523, 550, 556, 557, 563, 569, 616, 618, 640, 725], "recogn": [2, 471], "dmc_element_class": [2, 18, 291, 447, 448, 450], "dm_element_class": [2, 18, 291, 447, 448, 450], "nm_element_class": [2, 18, 291, 447, 448], "mm_element_class": [2, 12, 18, 291, 447, 448, 449, 450], "exclude_el": 2, "exclud": [2, 720], "char": [2, 14, 15, 16, 17, 29, 30, 75, 107, 113, 152, 176, 177, 189, 218, 221, 224, 226, 227, 229, 230, 239, 242, 243, 245, 246, 290, 291, 292, 294, 295, 296, 297, 326, 392, 397, 439, 584, 626], "framework": [2, 5, 6, 12, 21, 235, 291, 441, 443, 445, 456, 457, 458, 459, 461, 726], "api": [2, 17, 38, 291, 514, 547, 592, 593], "bundl": [2, 43, 291], "togeth": [2, 17, 19, 107, 291, 462], "packag": [2, 6, 15, 17, 18, 21, 233, 291, 441, 443, 445, 461, 569, 583, 584, 592, 717, 718, 719, 720], "xt_reserv": [2, 18, 235, 291, 460, 745], "co": [2, 134, 719], "fix": [2, 17, 18, 66, 94, 106, 166, 168, 291, 351, 444, 450, 460, 464, 477, 544, 549, 608, 609, 610, 611, 620, 632, 637, 643, 650, 719, 721], "zonal": [2, 18, 66, 283, 291, 450, 460, 637, 719], "standard": [2, 7, 17, 19, 20, 31, 39, 62, 63, 64, 66, 144, 145, 146, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 237, 239, 245, 439, 463, 471, 490, 522, 523, 601, 643, 721], "toggle_reserv": [2, 460, 463, 630, 631, 637, 726], "run_opf_w_r": 2, "7": [2, 8, 12, 17, 18, 20, 30, 31, 42, 66, 107, 124, 132, 144, 145, 146, 147, 148, 149, 159, 190, 233, 298, 471, 541, 542, 545, 546, 569, 583, 726, 727, 758], "earlier": [2, 106, 471, 726, 758], "To": [2, 12, 13, 17, 18, 20, 43, 106, 107, 157, 262, 265, 266, 268, 271, 272, 274, 276, 279, 280, 281, 286, 287, 289, 452, 758], "you": [2, 3, 6, 9, 13, 17, 19, 37, 58, 60, 77, 78, 79, 80, 104, 106, 107, 150, 216, 233, 237, 451, 452, 453, 454, 472, 558, 758], "mpx": [2, 12, 17, 18, 20, 291, 439, 440, 444, 456, 457, 458, 459], "veri": [2, 74, 451, 515], "nine": [2, 758], "five": [2, 20, 447, 734], "someth": [2, 17, 77, 78, 79, 80, 106, 107, 110, 111, 112, 143, 150, 175, 180, 233, 245, 478, 723], "complex": [2, 9, 17, 19, 226, 293, 294, 392, 393, 394, 395, 397, 440, 475, 477, 483, 484, 487, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 516, 521, 524, 561, 562, 563, 569, 585, 586, 587, 588, 589, 590, 608, 610, 612, 632, 725, 757], "phase": [2, 3, 18, 21, 239, 248, 250, 251, 254, 255, 260, 261, 264, 265, 267, 268, 270, 271, 275, 276, 278, 279, 288, 289, 291, 347, 348, 349, 356, 357, 358, 359, 360, 361, 362, 364, 365, 378, 379, 390, 391, 404, 405, 406, 410, 411, 412, 414, 415, 416, 426, 428, 438, 447, 460, 471, 541, 557, 730, 731, 732, 733, 734, 735, 736, 737, 754], "load": [2, 3, 4, 17, 18, 19, 20, 43, 47, 59, 60, 61, 62, 63, 64, 74, 81, 105, 239, 240, 245, 255, 256, 277, 278, 279, 280, 281, 367, 380, 381, 382, 383, 392, 427, 428, 429, 430, 431, 432, 446, 447, 464, 467, 468, 469, 471, 499, 522, 523, 544, 546, 548, 549, 550, 551, 554, 561, 562, 569, 592, 624, 632, 643, 716, 720, 721, 730], "term": [2, 8, 12, 17, 19, 26, 106, 107, 237, 261, 273, 293, 294, 295, 393, 462, 471, 541, 545, 718], "pleas": [2, 17, 19, 21, 26, 37, 43, 44, 45, 81, 82, 83, 84, 104, 107, 143, 216, 233, 520, 567, 628, 646, 650, 651, 652, 653, 654, 655, 656, 738, 758], "xt_3p": [2, 18, 20, 235, 291, 460], "input": [3, 4, 6, 11, 12, 14, 15, 16, 17, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 218, 221, 222, 224, 226, 227, 228, 229, 230, 236, 237, 239, 242, 244, 245, 246, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 368, 392, 393, 394, 395, 396, 397, 439, 440, 441, 443, 445, 446, 454, 456, 457, 458, 459, 460, 462, 463, 466, 467, 468, 469, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 509, 511, 514, 515, 517, 520, 524, 541, 542, 545, 546, 547, 549, 550, 551, 558, 563, 565, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 605, 606, 608, 609, 610, 611, 612, 613, 620, 621, 622, 623, 624, 625, 626, 627, 629, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 717, 718, 719, 720, 723], "output": [3, 4, 6, 13, 14, 16, 19, 26, 29, 30, 31, 39, 40, 41, 42, 59, 61, 62, 63, 64, 65, 66, 74, 75, 107, 108, 109, 110, 111, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 221, 224, 226, 227, 228, 230, 231, 233, 236, 237, 239, 241, 242, 245, 246, 269, 270, 272, 291, 292, 293, 294, 295, 296, 298, 326, 340, 343, 344, 345, 347, 351, 352, 353, 354, 355, 364, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 439, 441, 443, 444, 445, 446, 449, 454, 456, 457, 458, 459, 460, 462, 463, 464, 466, 471, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 511, 516, 517, 520, 521, 524, 546, 551, 561, 566, 569, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 605, 606, 608, 609, 610, 611, 612, 613, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 632, 633, 634, 635, 636, 637, 638, 639, 642, 718, 719, 720, 722, 723, 725, 752], "present": [3, 17, 64, 66, 107, 224, 230, 239, 462, 541, 542, 545, 546, 558, 561, 720], "encapsul": [3, 8, 107, 239, 245, 397, 462], "primarili": [3, 4, 7, 8, 239, 242, 392, 511], "class": [3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 105, 106, 107, 216, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 457, 460, 461, 462, 729], "data_model": [3, 235, 240, 241, 242, 245, 246, 291, 298, 326, 392, 393, 396, 397, 439, 441, 443, 445, 460, 740], "therefor": [3, 4, 7, 8, 43, 245, 298, 392, 394, 395, 396, 522, 523], "data_model_cpf": [3, 235, 460], "target": [3, 66, 179, 183, 190, 440, 456, 475, 477, 492, 493, 494, 569, 632, 643], "cost": [3, 17, 19, 26, 31, 39, 40, 41, 45, 56, 66, 81, 106, 107, 144, 145, 146, 147, 148, 149, 168, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 238, 244, 252, 269, 272, 274, 282, 298, 326, 327, 366, 367, 369, 373, 384, 443, 450, 462, 463, 471, 472, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 511, 512, 513, 539, 540, 543, 544, 555, 566, 568, 569, 592, 593, 601, 602, 616, 617, 618, 637, 643, 719, 720, 722, 723, 757], "nodal": [3, 7, 17, 239, 266, 306, 317, 393, 457, 458, 499, 500, 505, 569, 585, 586, 587, 588, 589, 590, 757], "price": [3, 7, 17, 66, 74, 107, 144, 145, 146, 147, 148, 149, 239, 262, 266, 272, 274, 282, 283, 284, 308, 310, 313, 315, 339, 341, 450, 457, 458, 509, 569, 583, 591, 592, 637, 718, 719, 720, 724, 757], "shadow": [3, 7, 17, 74, 107, 262, 266, 272, 274, 282, 284, 339, 341, 509, 591, 592, 637, 718, 719, 720, 724], "contraint": [3, 19], "By": [3, 4, 7, 8, 11, 17, 239, 242, 245, 246, 291, 298, 326, 392, 397, 451, 758], "begin": [3, 4, 7, 8, 9, 17, 19, 26, 62, 66, 78, 106, 107, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 184, 190, 191, 222, 239, 242, 245, 246, 291, 293, 296, 298, 326, 392, 397, 439, 474, 514, 543, 556, 557, 558, 560, 563, 624, 627], "initi": [3, 4, 7, 8, 17, 19, 26, 43, 65, 66, 106, 107, 177, 190, 222, 233, 239, 242, 243, 245, 246, 261, 263, 264, 267, 269, 270, 273, 275, 278, 288, 298, 348, 349, 350, 351, 352, 353, 357, 365, 366, 373, 379, 391, 392, 393, 394, 395, 444, 462, 463, 471, 477, 510, 516, 521, 539, 541, 545, 549, 569, 585, 586, 587, 588, 589, 590, 592, 593, 725], "proce": [3, 7, 8, 239, 723], "stage": [3, 4, 7, 8, 62, 66, 107, 144, 145, 146, 147, 148, 149, 190, 239, 242, 245, 463, 523, 630, 631, 723], "everi": 3, "read": [3, 620, 621, 622, 623, 624, 625, 626, 627], "count": [3, 7, 8, 17, 20, 177, 226, 227, 229, 239, 245, 277, 285, 397, 475, 477], "determin": [3, 5, 7, 8, 11, 17, 19, 30, 107, 147, 162, 172, 180, 188, 190, 198, 218, 239, 245, 298, 439, 452, 454, 490, 525, 551, 569, 620, 624, 643, 644, 720], "number": [3, 4, 6, 7, 8, 9, 17, 19, 26, 29, 30, 31, 42, 60, 62, 74, 75, 106, 107, 110, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 152, 158, 159, 160, 161, 162, 165, 169, 170, 171, 176, 188, 190, 193, 197, 199, 218, 221, 222, 228, 229, 237, 239, 245, 246, 263, 293, 296, 297, 392, 397, 444, 462, 464, 465, 466, 471, 490, 514, 516, 517, 521, 524, 540, 541, 542, 543, 544, 545, 546, 547, 552, 555, 556, 557, 558, 559, 560, 563, 569, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 620, 624, 625, 626, 629, 632, 637, 717, 719, 720, 725], "instanc": [3, 5, 8, 11, 17, 19, 236, 239, 245, 397, 630], "store": [3, 7, 8, 17, 19, 60, 66, 78, 106, 107, 239, 245, 290, 293, 294, 295, 297, 397, 451, 452, 462, 513, 514, 540, 544, 717, 718, 719, 720], "nr": [3, 17, 19, 42, 245, 246, 569], "onlin": [3, 7, 8, 17, 19, 239, 245, 269, 270, 273, 282, 283, 326, 397, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 720], "statu": [3, 17, 18, 19, 20, 36, 74, 80, 102, 145, 170, 193, 195, 197, 200, 215, 232, 239, 245, 465, 471, 514, 541, 545, 546, 569, 583, 592, 717, 718, 719, 720, 756], "map": [3, 8, 19, 59, 106, 190, 239, 245, 246, 283, 290, 297, 298, 392, 450, 547, 718], "id": [3, 4, 9, 17, 18, 19, 20, 60, 239, 245, 261, 267, 269, 270, 273, 275, 277, 278, 282, 285, 288, 392, 624, 625], "row": [3, 4, 8, 9, 17, 19, 30, 40, 41, 42, 59, 60, 79, 80, 107, 158, 159, 160, 162, 165, 190, 237, 239, 245, 246, 261, 263, 266, 269, 270, 273, 275, 277, 278, 282, 284, 285, 288, 392, 397, 451, 452, 462, 464, 471, 512, 513, 526, 539, 540, 544, 548, 560, 566, 568, 569, 583, 596, 597, 618, 632, 643, 717, 718, 720, 721, 722], "id2i": [3, 17, 19, 245], "criteria": [3, 239, 245, 632], "indic": [3, 4, 9, 11, 17, 19, 39, 40, 41, 42, 60, 63, 66, 77, 78, 79, 80, 106, 107, 108, 109, 153, 154, 156, 177, 178, 179, 180, 189, 190, 237, 239, 245, 246, 252, 269, 270, 273, 290, 292, 293, 296, 297, 298, 392, 393, 397, 444, 454, 462, 467, 468, 469, 471, 474, 475, 477, 478, 480, 482, 483, 484, 486, 487, 489, 491, 492, 494, 496, 510, 511, 512, 514, 515, 516, 518, 519, 521, 539, 541, 542, 543, 544, 545, 546, 549, 551, 552, 553, 554, 560, 583, 585, 586, 587, 588, 589, 590, 596, 597, 601, 618, 624, 625, 626, 627, 718, 720, 725], "n": [3, 4, 9, 12, 17, 19, 30, 42, 59, 60, 63, 64, 103, 106, 107, 108, 144, 146, 147, 158, 160, 162, 165, 190, 237, 239, 244, 245, 293, 294, 295, 297, 366, 373, 392, 397, 451, 462, 471, 504, 505, 506, 507, 512, 514, 539, 543, 569, 583, 592, 593, 718, 723], "off": [3, 17, 18, 19, 20, 218, 245, 261, 464, 471, 514, 539, 541, 547, 638, 717, 718, 719, 720], "i2on": [3, 17, 245], "extract": [3, 4, 7, 17, 61, 106, 107, 233, 239, 245, 246, 275, 326, 339, 341, 397, 441, 443, 445, 451, 515, 624, 627], "calcul": [3, 239, 245, 466, 564, 565], "origin": [3, 4, 16, 17, 43, 224, 230, 239, 245, 513, 514, 547, 720], "p": [3, 9, 12, 17, 18, 20, 30, 107, 147, 185, 186, 187, 237, 238, 239, 245, 261, 263, 264, 266, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288, 296, 368, 397, 471, 472, 475, 477, 483, 492, 523, 526, 541, 542, 543, 545, 546, 556, 557, 561, 562, 563, 569, 583, 596, 617, 643, 718, 730], "few": [3, 4, 7, 8, 17, 20], "per": [3, 7, 8, 12, 17, 19, 20, 64, 74, 237, 239, 261, 273, 275, 326, 360, 384, 397, 398, 403, 404, 410, 413, 414, 421, 426, 427, 428, 433, 438, 450, 464, 524, 549, 558, 561, 569, 583, 601], "unit": [3, 6, 7, 9, 17, 20, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 57, 59, 63, 66, 72, 73, 77, 78, 79, 80, 97, 98, 100, 233, 237, 239, 261, 262, 266, 272, 273, 274, 282, 283, 471, 523, 541, 542, 545, 546, 548, 558, 561, 569, 583, 601, 635, 639, 723], "mva": [3, 18, 20, 239, 261, 262, 471, 479, 541, 546, 569, 583, 623, 632], "found": [3, 12, 17, 19, 20, 21, 61, 106, 107, 178, 179, 237, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 482, 494, 535, 626, 627, 727, 758], "base_mva": [3, 17, 239, 367], "distribut": [3, 17, 134, 233, 275, 447, 467, 559, 564, 569, 707], "kva": [3, 20, 239, 288], "base_kva": [3, 20, 239, 288], "pretty_print": [3, 17, 239, 245, 262, 272, 274, 275, 288], "pretti": [3, 11, 19, 239, 241, 245, 262, 265, 266, 268, 271, 272, 274, 276, 279, 281, 284, 287, 289, 439, 456, 457, 458, 459, 463, 569, 583, 632, 633, 634, 635, 636, 638, 639, 752], "text": [3, 21, 190, 224, 239, 461, 624, 632], "consol": [3, 11, 74, 239, 245], "control": [3, 17, 26, 74, 107, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 245, 263, 264, 439, 471, 533, 569, 583, 619], "cnt": [3, 17, 229, 239, 245], "total": [3, 8, 17, 18, 20, 42, 66, 106, 107, 190, 239, 245, 277, 282, 285, 392, 397, 444, 462, 471, 523, 524, 541, 543, 546, 637, 643, 719, 720, 721, 722], "sum": [3, 17, 77, 78, 159, 237, 239, 245, 524, 560, 601, 602, 721], "amount": [3, 239, 515, 569, 583, 643, 720], "capac": [3, 18, 43, 103, 239, 282, 450], "loss": [3, 17, 18, 20, 239, 263, 273, 471, 524, 541, 542, 545], "ext": [3, 17, 239, 245, 514, 540], "extrem": [3, 17, 238, 239, 245], "min": [3, 7, 12, 17, 18, 26, 31, 64, 66, 77, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 471, 542, 546], "max": [3, 7, 12, 17, 18, 20, 26, 31, 62, 74, 77, 191, 193, 239, 245, 464, 479, 551, 569, 583, 637, 643, 719, 721], "det": [3, 17, 239, 245], "dispatch": [3, 12, 17, 43, 67, 74, 77, 78, 81, 239, 367, 456, 457, 458, 459, 464, 522, 523, 544, 548, 549, 551, 554, 601, 643, 720, 721], "dm_element": [3, 17, 18, 19, 235, 239, 246, 261, 263, 264, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288, 291, 326, 397, 460], "where": [3, 4, 6, 7, 8, 9, 13, 17, 19, 26, 31, 42, 43, 58, 60, 62, 63, 64, 77, 78, 79, 80, 103, 106, 107, 108, 109, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 165, 169, 170, 171, 172, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 224, 230, 233, 237, 239, 277, 290, 293, 296, 297, 298, 326, 392, 397, 452, 453, 454, 462, 464, 466, 471, 474, 477, 490, 504, 506, 511, 512, 514, 515, 522, 523, 524, 525, 539, 540, 543, 544, 547, 552, 553, 555, 559, 560, 568, 569, 587, 590, 594, 596, 619, 632, 637, 643, 644, 717, 718, 719, 720, 721, 723], "relationship": [3, 4, 6, 7, 8, 392], "here": [3, 4, 6, 7, 8, 17, 18, 26, 42, 43, 60, 107, 150, 169, 170, 171, 172, 177, 262, 266, 272, 274, 282, 283, 392, 471, 477, 497, 498, 499, 500, 501, 502, 514, 544, 547, 550], "dme_bu": [3, 19, 235, 266, 460], "dme_gen": [3, 19, 235, 272, 460], "dme_load": [3, 19, 235, 280, 281, 460], "while": [3, 8, 17, 19, 452, 471, 717], "least": [3, 6, 43, 292, 293, 294, 295, 296, 392, 452, 464, 637, 719, 723], "tab": [3, 12, 13, 17, 19, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 452, 456, 457, 458, 459], "column": [3, 4, 9, 17, 19, 26, 30, 42, 60, 62, 63, 64, 80, 107, 159, 166, 167, 169, 170, 171, 172, 237, 245, 246, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288, 293, 296, 392, 397, 451, 452, 464, 471, 473, 510, 511, 512, 513, 516, 521, 526, 539, 540, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 559, 560, 561, 566, 592, 593, 595, 596, 597, 599, 601, 602, 606, 609, 611, 613, 625, 626, 643, 717, 718, 720, 721, 722, 725], "attempt": [3, 61, 218, 452, 620, 624], "common": [3, 6, 8, 10, 17, 19, 43, 147, 162, 172, 190, 198, 245, 472], "ctm": [3, 10], "uid": [3, 17, 19, 245, 261, 267, 269, 270, 273, 275, 277, 278, 282, 285, 288], "posit": [3, 20, 183, 471, 522, 523, 542, 549, 720], "integ": [3, 6, 14, 16, 17, 20, 26, 30, 31, 62, 66, 107, 108, 109, 144, 145, 146, 147, 148, 149, 154, 156, 217, 222, 228, 229, 236, 237, 239, 245, 246, 261, 263, 264, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288, 292, 293, 294, 296, 297, 368, 392, 393, 394, 395, 397, 439, 441, 443, 444, 445, 454, 464, 471, 542, 569, 583, 625, 626], "serv": [3, 8, 17, 291], "uniqu": [3, 8, 17, 20, 106, 189, 245, 275, 392], "string": [3, 17, 19, 39, 42, 60, 61, 62, 79, 80, 106, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 157, 159, 175, 193, 198, 218, 230, 245, 246, 454, 472, 477, 490, 491, 512, 513, 515, 517, 522, 523, 539, 540, 550, 569, 592, 593, 620, 621, 623, 624, 625, 626, 627, 632, 633, 634, 635, 636, 638, 639, 640, 641, 721], "source_uid": [3, 17, 19, 245], "record": [3, 20, 624, 626, 627], "besid": [3, 20], "vector": [3, 4, 7, 8, 9, 12, 17, 19, 22, 26, 30, 31, 39, 42, 59, 60, 62, 63, 64, 77, 78, 79, 106, 107, 108, 109, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 177, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 226, 237, 245, 246, 261, 263, 264, 267, 269, 270, 273, 275, 277, 278, 285, 288, 292, 293, 294, 295, 296, 297, 298, 368, 392, 393, 394, 395, 396, 397, 440, 462, 466, 467, 468, 469, 474, 475, 477, 481, 483, 484, 487, 491, 492, 497, 498, 499, 500, 501, 502, 504, 506, 510, 512, 514, 515, 516, 518, 519, 521, 524, 526, 539, 541, 547, 548, 549, 551, 552, 554, 555, 557, 560, 561, 562, 563, 565, 566, 568, 569, 583, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 605, 606, 608, 609, 610, 611, 612, 613, 617, 632, 643, 720, 721, 722, 725], "m": [3, 9, 13, 14, 16, 17, 18, 19, 20, 37, 40, 41, 59, 61, 62, 63, 74, 81, 104, 108, 110, 111, 112, 143, 150, 175, 216, 233, 275, 293, 294, 295, 297, 392, 397, 451, 454, 463, 464, 471, 483, 517, 524, 550, 632, 633, 634, 635, 636, 638, 639, 641, 642, 647, 648, 649, 650], "time": [3, 8, 9, 17, 19, 26, 42, 60, 62, 66, 74, 107, 193, 195, 199, 233, 293, 296, 397, 439, 477, 490, 515, 569, 583, 592, 619, 632, 633, 634, 635, 636, 638, 639, 723], "largest": [3, 515], "n_r": 3, "enter": [3, 544], "gen": [3, 8, 12, 17, 18, 20, 39, 40, 41, 42, 60, 63, 64, 77, 79, 83, 84, 239, 245, 246, 252, 269, 270, 282, 283, 326, 367, 368, 392, 397, 444, 449, 456, 457, 458, 459, 462, 464, 465, 471, 472, 473, 485, 488, 499, 500, 505, 509, 511, 512, 513, 514, 515, 526, 539, 540, 544, 546, 547, 548, 550, 551, 553, 554, 558, 561, 569, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 615, 619, 624, 632, 633, 634, 635, 636, 637, 638, 639, 641, 643, 650, 717, 719, 720, 721, 723, 724], "singular": [3, 17, 19, 245], "plural": [3, 17, 19, 245], "charact": [3, 144, 145, 146, 147, 148, 149, 224, 246, 523, 625, 626, 627], "might": [3, 106, 463], "seem": [3, 725], "logic": 3, "constant": [3, 8, 9, 17, 19, 26, 60, 64, 77, 107, 150, 151, 236, 237, 273, 277, 467, 468, 469, 471, 511, 541, 542, 543, 544, 545, 546, 554, 562, 569, 592], "instead": [3, 17, 26, 30, 31, 60, 107, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 544, 567, 569, 583, 628, 720], "prevent": [3, 222], "effect": 3, "preclud": 3, "main_table_var_nam": [3, 17, 19, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 285, 288], "init_statu": [3, 245, 263, 264], "update_statu": [3, 17, 19, 239, 245, 261, 263, 264, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288], "build_param": [3, 17, 19, 239, 245, 261, 263, 264, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288, 392, 393, 396, 397, 399, 402, 410, 414, 417, 420, 422, 425, 426, 428, 429, 432, 434, 437, 438], "As": [3, 11, 12, 17, 18, 37, 104, 216, 233], "node": [3, 7, 9, 17, 236, 245, 263, 264, 298, 300, 301, 303, 304, 308, 310, 313, 315, 321, 322, 323, 324, 325, 329, 337, 392, 393, 394, 395, 397, 403, 404, 444, 467, 468, 469, 474, 614, 747], "port": [3, 7, 8, 9, 17, 26, 245, 261, 273, 292, 293, 296, 392, 393, 396, 397, 398, 410, 413, 414, 421, 426, 427, 428, 433, 438, 440], "hand": [3, 6, 7, 11, 17, 26, 31, 107, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "inform": [3, 6, 8, 26, 40, 41, 106, 169, 170, 171, 172, 177, 180, 190, 216, 218, 234, 239, 242, 245, 246, 290, 291, 293, 294, 295, 298, 326, 392, 397, 439, 447, 448, 449, 450, 464, 470, 471, 472, 477, 478, 497, 498, 501, 503, 504, 505, 507, 509, 514, 553, 561, 591, 592, 618, 723, 758], "link": [3, 13, 17, 19, 20, 245, 447, 461, 717], "branch": [3, 6, 7, 17, 18, 20, 43, 60, 74, 245, 247, 261, 262, 338, 339, 340, 341, 342, 343, 344, 345, 392, 398, 399, 400, 401, 402, 461, 462, 464, 466, 467, 468, 469, 471, 473, 474, 477, 479, 480, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 514, 515, 518, 519, 524, 539, 541, 544, 547, 550, 552, 556, 557, 558, 559, 560, 563, 565, 569, 583, 591, 592, 593, 594, 595, 596, 597, 614, 615, 619, 620, 623, 624, 632, 633, 634, 635, 636, 638, 639, 641, 718, 720, 723], "pair": [3, 77, 78, 79, 106, 108, 109, 392, 456, 457, 458, 459, 569, 717], "context": [3, 9, 107, 177, 188, 477, 490], "b": [3, 7, 9, 12, 17, 19, 20, 26, 30, 31, 107, 108, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 285, 290, 296, 297, 358, 361, 366, 373, 392, 451, 471, 498, 499, 500, 501, 502, 504, 505, 506, 507, 510, 511, 515, 516, 525, 541, 542, 556, 557, 569, 643, 644, 721, 725, 757], "junction": [3, 245, 397], "could": [3, 17, 106, 110, 111, 112, 143, 150, 175, 497, 503, 632], "coupl": 3, "cxn_type": [3, 17, 19, 245, 261, 267, 269, 270, 273, 275, 277, 278, 285, 288, 397], "cxn_idx_prop": [3, 17, 19, 245, 261, 267, 269, 270, 273, 275, 277, 278, 285, 288, 397], "fbu": [3, 17, 20, 245, 261, 273, 275, 288, 397], "tbu": [3, 17, 20, 245, 261, 273, 275, 288, 397], "automat": [3, 4, 8, 11, 13, 17, 19, 81, 106, 107, 147, 162, 172, 190, 198, 239, 242, 245, 252, 297, 298, 392, 397, 439, 451, 461, 463, 471, 514, 515, 569, 583, 630], "had": [3, 43], "cxn_type_prop": [3, 245, 397], "built": [3, 7, 17, 19, 21, 26, 30, 37, 66, 104, 107, 165, 216, 233, 237, 246, 451, 462, 517, 569, 617], "mp_tabl": [3, 17, 19, 235, 452, 455, 460, 743], "mp_table_class": [3, 452, 453, 460], "abil": [4, 6, 242, 244, 451], "dure": [4, 17, 43, 242, 245, 632], "dm_convert": [4, 235, 239, 243, 244, 245, 246, 291, 439, 441, 443, 445, 460], "6": [4, 12, 17, 18, 20, 26, 30, 31, 43, 78, 136, 139, 144, 145, 146, 147, 148, 149, 169, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 246, 275, 392, 426, 438, 443, 464, 471, 541, 542, 545, 546, 569, 583, 650, 727], "yet": [4, 14, 16, 19, 37, 42, 104, 106, 107, 154, 216, 222, 223, 226, 227, 229, 455, 592, 758], "been": [4, 7, 17, 19, 81, 107, 109, 178, 179, 180, 326, 444, 463, 465, 471, 477, 478, 482, 494, 512, 513, 569], "onc": [4, 7, 17, 19, 233, 326, 397, 463, 643], "readi": [4, 439], "loadcas": [4, 59, 460, 471, 629, 632, 633, 634, 635, 636, 638, 639, 672, 717, 726], "same": [4, 8, 17, 19, 26, 30, 43, 45, 62, 63, 64, 106, 151, 157, 159, 165, 177, 188, 189, 190, 239, 240, 246, 297, 366, 392, 397, 463, 471, 472, 477, 490, 491, 515, 524, 560, 566, 569, 583, 637, 650, 651, 718, 721, 722, 737], "again": [4, 17, 19, 43, 721], "scratch": [4, 558], "need": [4, 8, 12, 17, 19, 42, 60, 64, 106, 107, 179, 190, 233, 240, 245, 246, 294, 295, 327, 441, 443, 445, 463, 472, 494, 514, 515, 517, 548, 557, 758], "dmc_element": [4, 17, 18, 235, 242, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 291, 460, 739], "dmce": [4, 245, 246], "get_import_spec": [4, 246], "import_table_valu": [4, 246], "thing": [4, 17, 19], "interest": [4, 9, 11, 14, 16, 181, 237, 239, 292, 293, 294, 296, 368, 392, 393, 394, 395, 397, 464, 551, 601], "vmap": [4, 17, 246], "table_var_map": [4, 17, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "vn": [4, 17, 246, 248, 249, 252, 253, 256, 257, 258], "start": [4, 6, 13, 17, 26, 31, 106, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 297, 298, 304, 305, 440, 462, 471, 514, 543, 555, 569, 723, 758], "col": [4, 17, 20, 42, 60, 158, 160, 162, 165, 190, 237, 246, 392, 464, 718], "c": [4, 7, 8, 17, 19, 20, 26, 31, 64, 107, 144, 145, 146, 147, 148, 149, 163, 164, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 246, 248, 249, 275, 366, 373, 392, 397, 462, 471, 474, 523, 541, 545, 625, 626], "sf": [4, 246, 467, 468, 469, 479, 497, 503, 506, 591, 592], "sf_fcn": 4, "copi": [4, 17, 20, 76, 106, 107, 157, 217, 239, 242, 245, 297, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "scale": [4, 9, 26, 30, 77, 78, 79, 80, 103, 139, 156, 165, 168, 180, 190, 237, 246, 464, 478, 544, 568, 569, 643, 720, 725], "factor": [4, 20, 24, 30, 43, 60, 103, 168, 180, 190, 246, 278, 367, 464, 471, 478, 544, 546, 554, 559, 569, 592, 643], "val": [4, 12, 17, 106, 107, 189, 236, 246, 297, 451, 456, 457, 458, 459, 491, 512, 539, 592], "num": [4, 17, 19, 622, 623, 624, 626], "scalar": [4, 9, 17, 19, 42, 60, 61, 63, 106, 107, 189, 226, 237, 297, 392, 471, 475, 477, 483, 484, 487, 491, 492, 515, 549, 560, 568, 569, 643, 721], "fcn": [4, 12, 17, 106, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 177, 180, 188, 189, 190, 462, 463, 477, 478, 490, 491, 543, 630], "ifn": 4, "efn": 4, "spec": [4, 12, 17, 188, 190, 224, 230, 246, 247, 248, 249, 252, 253, 257, 258, 326, 368], "ridx": [4, 17, 246, 249, 252, 253], "get_export_spec": [4, 246], "export_table_valu": [4, 246], "init_export_data": [4, 246, 249], "relev": [4, 7, 8, 12, 17, 20, 43, 66, 107, 180, 298, 326, 454, 720], "data_exist": [4, 246], "fals": [4, 17, 30, 36, 77, 78, 79, 80, 102, 107, 177, 215, 218, 222, 224, 226, 227, 228, 230, 232, 245, 392, 477, 619, 632, 638, 756], "matrix": [4, 8, 9, 11, 17, 19, 20, 26, 30, 31, 39, 40, 41, 42, 49, 62, 63, 64, 80, 106, 107, 108, 144, 145, 146, 147, 148, 149, 158, 159, 160, 162, 165, 166, 167, 168, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 226, 237, 275, 283, 292, 293, 294, 296, 368, 392, 393, 397, 439, 460, 462, 471, 473, 474, 475, 477, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 514, 516, 521, 526, 539, 541, 542, 543, 545, 546, 548, 550, 551, 552, 555, 558, 559, 560, 561, 563, 566, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 601, 605, 606, 622, 623, 626, 643, 717, 721, 722, 725, 757], "pdf": [5, 6, 10, 13, 37, 77, 78, 79, 80, 96, 97, 98, 100, 104, 216, 460, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 523, 757, 758], "introduct": [5, 460], "notat": [5, 12, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 757], "overview": [5, 6, 17, 19], "hierarchi": [5, 7, 17, 19], "custom": [5, 6, 12, 18, 19, 190, 244, 291, 309, 311, 314, 316, 318, 327, 447, 448, 449, 450, 453, 515], "iter": [5, 20, 23, 26, 31, 148, 158, 159, 160, 161, 162, 165, 169, 170, 171, 177, 190, 193, 197, 199, 439, 440, 444, 467, 468, 469, 475, 477, 516, 521, 569, 583, 585, 586, 587, 588, 589, 590, 629, 632, 638, 725], "via": [5, 17, 20, 21, 59, 107, 157, 169, 171, 177, 188, 189, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 238, 456, 458, 459, 463, 477, 490, 569, 583, 625, 626, 676, 710], "acknowledg": 5, "purpos": [6, 17, 106, 238, 240, 241, 461], "wish": [6, 63, 64], "your": [6, 12, 18, 19, 21, 96, 97, 98, 100, 143, 151, 217, 233, 234, 452, 453, 454], "document": [6, 17, 18, 19, 20, 30, 37, 104, 110, 111, 112, 143, 144, 146, 149, 169, 170, 171, 194, 196, 197, 200, 201, 216, 237, 461, 726, 727, 758], "languag": [6, 21], "scientif": 6, "commerci": 6, "product": [6, 497, 498, 499, 500, 501, 502], "mathwork": [6, 26, 31, 144, 146, 147, 148, 149, 159, 160, 161, 162, 165, 169, 170, 171, 172, 192, 194, 196, 197, 198, 199, 200, 201], "free": [6, 21], "open": [6, 21, 470, 620, 627], "relat": [6, 7, 8, 11, 12, 21, 106, 244, 293, 294, 295, 439, 514, 535, 557, 664, 709], "softwar": [6, 21, 111, 569], "git": 6, "subrepo": 6, "except": [6, 9, 17, 26, 31, 42, 66, 76, 107, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 240, 297, 471, 477, 517, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 596, 637, 720, 737], "howev": [6, 7, 11, 17, 19, 43, 452, 758], "download": [6, 21, 96, 97, 98, 100, 233], "zip": [6, 233, 277, 446, 561, 562, 716, 721], "releas": [6, 21, 29, 75, 113, 152, 176, 218, 221, 584], "depend": [6, 7, 8, 18, 60, 66, 76, 107, 162, 190, 193, 233, 239, 242, 246, 293, 298, 397, 440, 442, 444, 447, 448, 463, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 513, 517, 555, 561, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 596, 625, 632, 716, 721], "mptest": [6, 233], "doc": [6, 10, 13, 14, 16, 21, 111, 147, 150, 171, 175, 195, 200, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 757], "have_featur": [6, 22, 23, 24, 25, 38, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 217, 219, 220, 225, 233, 234, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 758], "nonlinear": [6, 7, 8, 12, 17, 19, 21, 26, 27, 28, 38, 106, 107, 125, 128, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 184, 190, 217, 244, 293, 368, 393, 429, 462, 569, 591, 592, 603, 604], "primal": [6, 26, 66, 107, 144, 145, 146, 147, 148, 149, 151, 172, 192, 198, 199, 531, 533, 569, 583, 592], "dual": [6, 26, 107, 111, 132, 148, 151, 172, 192, 198, 199, 294, 531, 533, 569, 583, 592], "linear": [6, 7, 8, 9, 17, 23, 26, 30, 31, 33, 34, 38, 45, 66, 81, 106, 107, 111, 116, 122, 134, 144, 145, 146, 147, 148, 149, 156, 158, 160, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 237, 238, 244, 252, 273, 293, 296, 366, 369, 373, 462, 471, 509, 526, 543, 545, 552, 553, 554, 555, 568, 569, 583, 591, 592, 593, 594, 616, 720], "equat": [6, 7, 17, 19, 30, 107, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 184, 190, 217, 534, 569, 585, 586, 587, 588, 589, 590, 592], "easi": [6, 17, 59], "unifi": [6, 8, 10, 217, 757], "lp": [6, 107, 114, 122, 131, 133, 156, 195, 198, 214, 216, 460, 569, 583], "qp": [6, 7, 12, 31, 35, 38, 66, 74, 107, 114, 133, 137, 138, 145, 149, 156, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 214, 216, 460, 569, 583, 710], "mix": [6, 7, 66, 107, 144, 145, 146, 147, 148, 149, 154, 156, 217, 290, 292, 293, 294, 295, 296, 298, 568], "switch": [6, 12, 17, 18, 19, 620], "chang": [6, 12, 18, 20, 21, 42, 43, 45, 60, 62, 107, 180, 444, 447, 448, 453, 454, 464, 477, 478, 486, 489, 491, 511, 514, 522, 523, 544, 642, 659, 720], "unsupport": [6, 442], "separ": [6, 17, 19, 78, 233, 454], "resourc": 6, "sphinx": [6, 13, 14, 16, 21], "perman": [6, 454], "master": [6, 14, 16, 42, 60, 62, 216, 461], "latest": [6, 150], "stabl": 6, "unreleas": [6, 21], "hopefulli": 6, "tag": [6, 22, 23, 24, 25, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 218, 219, 220, 239, 241, 242, 243, 291, 292, 298, 397, 439, 442, 444, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "becaus": [6, 17, 19, 43, 74, 452, 547, 717], "intend": [6, 38, 106, 107, 180, 217, 224, 226, 227, 229, 230, 234, 245, 453, 462, 478], "unmodifi": 6, "stick": 6, "syntax": [6, 22, 26, 31, 110, 111, 112, 115, 143, 144, 145, 146, 147, 148, 149, 150, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 175, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 238, 451, 452, 592, 593, 632, 633, 634, 635, 636, 637, 638, 639, 723], "classdef": [6, 12, 17, 18, 19], "obj": [6, 12, 17, 18, 19, 26, 31, 106, 237, 245, 290, 297, 326, 392, 452, 592], "namespac": 6, "produc": [6, 42, 471], "html": [6, 13, 21, 111, 147, 150, 170, 171, 175, 197, 200], "what": [6, 9, 107, 179, 494, 569, 583, 617, 619], "hint": 6, "click": 6, "icon": [6, 461], "upper": [6, 12, 17, 18, 26, 31, 107, 108, 109, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 261, 262, 263, 266, 269, 272, 273, 274, 282, 294, 392, 461, 471, 486, 489, 496, 509, 526, 541, 542, 545, 546, 553, 569, 591, 592, 594, 595, 637, 718, 719, 720, 724], "right": [6, 8, 9, 13, 17, 19, 26, 31, 107, 144, 145, 146, 147, 148, 149, 163, 164, 169, 170, 171, 172, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 293, 296, 461], "corner": 6, "page": [6, 175, 233, 461, 469], "cover": 6, "autom": 6, "contributor": 6, "guid": [6, 12, 17, 18, 19, 20, 147], "form": [7, 8, 9, 12, 17, 18, 30, 62, 107, 108, 109, 165, 177, 188, 189, 224, 230, 233, 235, 275, 293, 294, 295, 296, 298, 348, 349, 350, 351, 352, 353, 357, 360, 365, 366, 373, 379, 391, 392, 393, 394, 395, 396, 397, 460, 462, 477, 490, 503, 504, 505, 506, 507, 509, 514, 523, 547, 558, 569, 591, 592, 593, 594, 721, 723], "x": [7, 8, 9, 17, 19, 20, 24, 25, 26, 30, 31, 42, 63, 64, 106, 107, 108, 109, 112, 120, 139, 144, 145, 146, 147, 148, 149, 151, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 229, 237, 245, 261, 275, 288, 293, 294, 296, 298, 306, 324, 327, 331, 332, 333, 334, 335, 336, 337, 368, 392, 393, 397, 429, 443, 452, 462, 466, 467, 471, 475, 477, 492, 497, 498, 499, 500, 501, 502, 509, 520, 524, 541, 551, 555, 559, 560, 561, 562, 568, 569, 583, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 632, 637, 717, 718, 719, 720, 721, 758], "rvec": [7, 9, 12, 26, 31, 163, 164, 184, 191], "f": [7, 8, 9, 26, 31, 74, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 184, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 245, 324, 327, 443, 462, 467, 468, 469, 471, 497, 501, 504, 506, 509, 517, 524, 541, 543, 545, 564, 565, 568, 569, 583, 591, 592, 601, 602, 617, 619, 625, 626, 633, 635, 636, 639, 723], "param": [7, 9, 12, 17, 19, 26, 31, 43, 107, 111, 150, 191, 273, 292], "rmat": [7, 9, 12, 26, 191], "trace": [7, 179, 183, 184, 190, 217, 494, 569, 632], "curv": [7, 177, 178, 179, 182, 183, 187, 190, 237, 269, 368, 449, 471, 472, 477, 481, 482, 493, 494, 526, 546, 553, 569, 583, 592, 632, 724], "parameter": [7, 107, 177, 179, 184, 185, 186, 187, 190, 217, 240, 280, 286, 475, 477, 483, 484, 492, 494, 569, 632], "lambda": [7, 17, 18, 26, 31, 107, 144, 145, 146, 147, 148, 149, 168, 169, 170, 171, 172, 179, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 240, 280, 286, 400, 440, 472, 475, 477, 481, 483, 484, 487, 492, 493, 494, 569, 592, 595, 597, 599, 604, 606, 609, 611, 613, 632], "vari": [7, 107, 245, 463], "constrain": [7, 17, 26, 28, 66, 81, 107, 144, 145, 146, 147, 148, 149, 174, 187, 592, 593, 596, 597], "min_": [7, 26, 28, 31, 174, 191], "textrm": 7, "qquad": 7, "h": [7, 12, 17, 21, 26, 31, 77, 78, 79, 80, 107, 144, 145, 146, 147, 148, 149, 166, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 245, 293, 368, 393, 462, 467, 471, 553, 559, 560, 592, 593, 596, 723], "le": [7, 12, 17, 19, 26, 28, 31, 174, 191], "_": [7, 8, 12, 26, 31, 191, 393], "quadrat": [7, 17, 31, 45, 106, 107, 144, 145, 146, 147, 148, 149, 156, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 237, 462, 472, 569, 592, 593], "tran": [7, 9, 12, 31, 191], "q": [7, 9, 12, 17, 18, 30, 107, 191, 237, 277, 285, 366, 368, 373, 444, 526, 569, 583, 627, 725], "k": [7, 9, 17, 19, 106, 107, 159, 177, 178, 179, 190, 237, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 284, 285, 288, 296, 302, 366, 373, 392, 397, 451, 462, 477, 480, 482, 486, 489, 494, 496, 515, 522, 523, 560, 632, 643, 661, 662, 721], "l": [7, 17, 19, 26, 30, 31, 106, 107, 108, 109, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 244, 273, 293, 294, 295, 462, 471, 509, 526, 553, 591, 592, 593, 637, 718, 719, 723], "math_model": [7, 235, 239, 291, 305, 319, 326, 392, 397, 439, 441, 443, 445, 460], "opt_model": [7, 66, 106, 184, 191, 206, 207, 208, 209, 210, 211, 212, 216, 217, 298, 392, 462, 509, 602], "mp_idx_manag": [7, 8, 107, 216, 217, 292, 298, 392, 393, 394, 395, 396], "nonzero": [7, 8], "auxiliari": [7, 293, 294, 295, 298], "appropri": [7, 9, 13, 17, 19, 26, 107, 218, 242, 292, 293, 471, 515, 550, 556, 557, 563, 643, 717], "characterist": 7, "mm_element": [7, 12, 17, 18, 235, 245, 291, 298, 338, 346, 347, 356, 363, 364, 372, 378, 380, 384, 385, 386, 390, 397, 460], "mme": [7, 326, 368, 397], "nme_bus_pf_acp": 7, "nme_bus_opf_acp": 7, "And": [7, 12, 19, 20, 447, 448], "similar": [7, 17, 43, 471, 503, 504, 506, 723], "mme_gen": [7, 235, 366, 370, 371, 460], "similarli": [7, 8, 12], "inject": [7, 9, 12, 17, 18, 19, 20, 261, 273, 274, 275, 285, 288, 293, 294, 295, 296, 329, 337, 368, 392, 393, 396, 440, 471, 475, 477, 492, 499, 502, 507, 510, 512, 516, 521, 524, 539, 541, 542, 545, 553, 557, 558, 560, 561, 563, 565, 585, 586, 587, 588, 589, 590, 592, 725], "aggreg": [7, 43, 77, 78, 107, 293, 296, 393, 396, 397, 462], "piecewis": [7, 17, 237, 238, 252, 366, 369, 373, 471, 543, 568, 569, 583, 616], "angl": [7, 8, 9, 18, 20, 261, 262, 263, 264, 293, 294, 295, 296, 339, 341, 342, 343, 351, 393, 394, 395, 396, 397, 400, 444, 459, 466, 471, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 516, 521, 524, 539, 541, 542, 552, 557, 558, 569, 583, 585, 586, 587, 588, 589, 590, 592, 594, 595, 612, 613, 725], "mme_branch": [7, 235, 339, 344, 345, 460], "sens": 7, "respons": [7, 17, 245], "data_model_update_off": [7, 326], "zero": [7, 8, 9, 17, 19, 26, 31, 40, 41, 45, 59, 107, 110, 112, 143, 144, 145, 146, 148, 149, 150, 166, 168, 180, 181, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 239, 292, 397, 462, 465, 471, 472, 473, 474, 477, 478, 486, 489, 491, 498, 541, 546, 552, 560, 561, 564, 569, 583, 643, 644, 721], "out": [7, 12, 17, 20, 31, 105, 144, 145, 146, 147, 148, 149, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 239, 241, 442, 464, 465, 466, 470, 471, 472, 486, 489, 518, 541, 545, 546, 550, 569, 619], "data_model_update_on": [7, 17, 326, 340, 343, 344, 345, 347, 351, 352, 353, 354, 355, 364, 367, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390], "differnt": 7, "avoid": [7, 13, 66, 107, 144, 145, 146, 147, 148, 149, 180, 515], "duplic": [7, 106, 239, 242, 245, 297], "mm_shared_": 7, "evalu": [7, 12, 26, 107, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 190, 227, 237, 294, 295, 327, 440, 462, 497, 561, 566, 594, 595, 596, 597, 598, 599, 601, 602, 605, 606, 608, 609, 610, 611, 612, 613, 616, 617, 722], "jacobian": [7, 9, 12, 26, 107, 158, 159, 160, 162, 165, 166, 169, 170, 171, 172, 185, 186, 187, 190, 293, 294, 295, 368, 393, 558, 569, 587, 590, 592, 596], "put": [7, 17, 19], "kei": [8, 106, 245, 246], "modular": [8, 218], "deriv": [8, 21, 107, 158, 160, 162, 165, 190, 237, 292, 293, 294, 295, 296, 306, 400, 460, 462, 475, 477, 484, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 524, 561, 569, 583, 592, 601, 602, 617, 668, 670, 748, 749, 750, 751], "featur": [8, 11, 22, 23, 24, 25, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 190, 218, 219, 220, 451, 460, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 569, 758], "fulli": [8, 106, 758], "captur": 8, "oper": [8, 9, 17, 26, 30, 62, 107, 137, 165, 233, 397, 514, 547, 569], "condit": [8, 26, 31, 43, 58, 62, 66, 227, 233, 569, 583], "non": [8, 9, 17, 19, 26, 45, 59, 64, 66, 77, 107, 110, 112, 143, 150, 158, 160, 162, 165, 166, 168, 190, 244, 292, 293, 294, 295, 296, 392, 393, 396, 397, 410, 413, 414, 417, 420, 421, 422, 425, 444, 463, 471, 472, 473, 514, 518, 569, 583, 594, 626], "z": [8, 9, 17, 19, 26, 106, 107, 177, 190, 293, 296, 331, 334, 337, 392, 396, 397, 462, 471, 475, 477, 483, 484, 487, 492, 562, 569, 592, 593, 725], "track": [8, 106, 107, 292, 298, 392, 462], "n_p": [8, 9, 293, 296], "n_z": [8, 62, 296], "tn5": [8, 9, 10, 21], "lot": [8, 107, 569, 583], "especi": [8, 233], "real": [8, 9, 17, 19, 26, 30, 74, 226, 293, 294, 392, 393, 394, 397, 464, 471, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 524, 539, 541, 542, 544, 546, 549, 553, 557, 568, 592, 596, 598, 599, 608, 610, 612, 632, 638, 643], "predefin": [8, 17, 19], "activ": [8, 9, 12, 13, 17, 18, 20, 169, 245, 261, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 283, 285, 288, 293, 296, 329, 337, 360, 366, 368, 373, 456, 457, 458, 459, 466, 467, 468, 469, 471, 485, 486, 555, 569, 583, 601, 605, 606, 609, 611, 613, 629, 632, 643, 721], "va": [8, 9, 17, 245, 263, 293, 294, 295, 296, 298, 393, 394, 395, 396, 408, 409, 459, 471, 503, 510, 511, 542, 552, 557, 592, 594], "n_": [8, 9, 237, 293], "left": [8, 9, 17, 19, 26, 31, 107, 144, 145, 146, 147, 148, 149, 163, 164, 169, 170, 171, 172, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 293, 296, 720], "bb": [8, 9, 17, 296, 402], "kk": [8, 9, 17, 296, 397, 420, 425, 462], "pv": [8, 9, 17, 20, 236, 263, 264, 296, 329, 392, 397, 402, 404, 432, 437, 440, 465, 467, 468, 469, 471, 475, 476, 477, 483, 484, 487, 489, 492, 510, 511, 516, 521, 523, 542, 564, 565, 585, 586, 587, 588, 589, 590, 615, 632, 638, 725, 732, 733, 736, 737], "suscept": [8, 9, 261, 275, 285, 471, 541, 542], "coeffici": [8, 9, 17, 31, 107, 144, 145, 146, 147, 148, 149, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 273, 293, 296, 471, 543], "gp": [8, 17, 296, 396], "cc": [8, 9, 17, 19, 293, 296, 523], "gi": [8, 293], "compon": [8, 17, 107, 182, 237, 238, 277, 293, 474, 481, 497, 503], "ilin": [8, 17, 19, 293], "slin": [8, 17, 19, 293], "arbitrari": [8, 17, 19, 106, 158, 162, 239, 245, 293, 477, 490], "snln": [8, 17, 19, 293, 393, 429], "inln": [8, 17, 19, 293, 393, 429], "six": [8, 17, 19, 20, 447, 731, 732, 733], "yy": [8, 9, 17, 19, 20, 293, 399, 426, 429, 434, 438, 730], "ll": [8, 9, 17, 19, 106, 107, 293], "nn": [8, 9, 17, 19, 293, 397, 403, 404, 410, 414, 417, 422], "iv": [8, 9, 17, 19, 293], "sv": [8, 9, 17, 19, 293, 428, 429, 523], "admitt": [8, 9, 275, 399, 426, 438, 467, 468, 469, 475, 477, 492, 498, 499, 501, 502, 516, 521, 558, 563, 569, 585, 586, 587, 588, 589, 590, 596, 597, 598, 599, 605, 606, 725], "matric": [8, 9, 17, 19, 30, 42, 62, 63, 64, 108, 159, 226, 275, 293, 392, 393, 396, 397, 471, 473, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 511, 514, 516, 547, 550, 556, 557, 558, 563, 592, 593, 641, 644, 717, 720, 723], "rather": [8, 17, 38, 42, 107, 151, 217, 234, 237, 293, 294, 368, 393, 452, 471, 511, 515, 544, 560], "dv": [8, 293, 504, 505, 506, 507], "conj": [8, 9, 293, 503, 505, 506, 507], "Then": [8, 13, 233, 239, 392, 454, 514, 592, 593], "written": [8, 21, 26, 222, 223, 226, 227, 229], "cdiag": [8, 293], "invc": [8, 293], "assum": [8, 17, 42, 43, 107, 109, 245, 275, 368, 393, 439, 441, 443, 445, 446, 456, 457, 458, 459, 467, 468, 469, 472, 515, 517, 541, 542, 545, 546, 550, 552, 561, 596, 597, 607, 619, 620, 624, 632, 633, 634, 635, 636, 638, 639, 643, 721], "net_model": [8, 235, 239, 291, 293, 298, 326, 393, 394, 395, 396, 397, 404, 439, 441, 443, 445, 460], "nm_element": [8, 17, 18, 19, 235, 291, 292, 293, 294, 295, 296, 326, 392, 393, 394, 395, 396, 398, 403, 404, 410, 413, 414, 421, 426, 427, 428, 433, 438, 460, 746], "special": [8, 60, 106, 451, 544], "treatment": 8, "pq": [8, 12, 20, 236, 263, 264, 269, 367, 368, 392, 397, 404, 449, 465, 471, 475, 476, 477, 483, 484, 487, 489, 492, 510, 511, 516, 521, 542, 546, 553, 585, 586, 587, 588, 589, 590, 592, 615, 632, 638, 643, 725, 731, 735, 736, 737], "node_typ": [8, 17, 235, 392, 397, 403, 404, 460], "about": [8, 180, 182, 183, 218, 464, 470, 478, 479, 481, 485, 488, 490, 491, 493, 495], "assembl": [8, 107, 393, 462], "set_node_type_ref": [8, 392, 397, 403], "set_node_type_pv": [8, 392, 397, 403], "set_node_type_pq": [8, 392, 397, 403], "1000": [8, 20, 161, 569, 583, 720], "2000": [8, 20, 190], "nme_bus_acp": [8, 235, 460], "nme_gen_acp": [8, 235, 460], "brief": 8, "rel": [8, 14, 16, 66, 107, 144, 145, 146, 147, 148, 149, 464, 517, 569, 583], "nme_bu": [8, 235, 407, 408, 409, 460], "nme_gen": [8, 235, 417, 420, 460], "neg": [8, 107, 146, 147, 148, 158, 159, 160, 161, 162, 165, 171, 172, 196, 198, 199, 200, 477, 544, 718, 720], "ident": [8, 9, 17, 26, 31, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 165, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 226, 392, 462, 477, 517, 569, 632], "nme_branch": [8, 235, 399, 402, 460], "nme_load": [8, 235, 429, 432, 460], "equal": [8, 17, 26, 42, 58, 59, 106, 107, 108, 109, 166, 168, 169, 170, 171, 172, 222, 223, 226, 227, 229, 233, 294, 350, 392, 393, 462, 467, 468, 469, 569, 583, 591, 592, 598, 605, 608, 609, 614, 637, 643, 718, 719, 720], "consum": 8, "stack": [8, 17, 19, 107, 108, 293, 296, 392, 397], "seri": [8, 228, 261, 275, 288, 524], "t": [8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 58, 62, 66, 78, 106, 107, 158, 160, 162, 165, 180, 190, 233, 237, 293, 393, 439, 451, 452, 454, 455, 471, 475, 477, 478, 484, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 524, 526, 541, 545, 550, 558, 625], "cscal": [8, 9, 17, 19, 277], "y": [8, 19, 107, 229, 275, 293, 294, 295, 392, 517, 555, 592], "i_": 8, "i_f": 8, "i_t": 8, "n_k": [8, 9, 17, 19, 293, 296], "cmat": [8, 9, 26, 31], "cccc": [8, 191], "1_": 8, "2_": 8, "ddot": 8, "cvec": [8, 9, 17, 19], "_f": 8, "1_f": 8, "2_f": 8, "vdot": 8, "_t": 8, "1_t": 8, "2_t": 8, "incid": [8, 9, 17, 19, 392, 393, 396, 397, 474], "character": 8, "style": [9, 147, 198, 569, 583], "theta": 9, "uptheta": 9, "cvecg": 9, "rmatg": 9, "cmatg": 9, "hat": 9, "diag": [9, 12, 462, 503, 504, 505, 506, 507], "diagon": [9, 17, 19, 392], "conjug": 9, "transpos": [9, 26, 30, 107, 169, 170, 171, 172, 185, 186, 187, 293, 294, 368, 393], "re": [9, 11, 13, 19, 107, 144, 145, 146, 147, 148, 149, 180, 199, 224, 230, 515, 638], "im": [9, 19], "imaginari": [9, 17, 19, 293, 294, 393, 394, 397, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 598, 599, 608, 610, 612], "wise": [9, 81, 616, 721], "expon": 9, "f_": [9, 237], "gradient": [9, 26, 107, 166, 167, 169, 170, 171, 172, 185, 186, 187, 237, 569, 583, 594, 596, 598, 601, 602, 605, 608, 610, 612], "w": [9, 14, 16, 43, 56, 120, 132, 139, 158, 160, 162, 165, 169, 190, 292, 293, 294, 295, 296, 304, 309, 311, 314, 316, 318, 368, 393, 462, 467, 475, 477, 484, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 523, 526, 558, 569, 583, 592, 593, 650, 700, 704, 755], "lam": [9, 12, 26, 107, 109, 147, 169, 170, 171, 172, 190, 280, 286, 293, 294, 295, 306, 358, 368, 393, 475, 476, 477, 483, 484, 487, 492, 499, 500, 502, 613, 632], "hessian": [9, 12, 26, 107, 167, 168, 169, 170, 171, 172, 237, 293, 294, 295, 368, 393, 569, 583, 595, 597, 599, 601, 602, 604, 606, 609, 611, 613], "dimens": [9, 17, 39, 42, 60, 62, 106, 107, 159, 189, 190, 245, 246, 297, 368, 392, 397, 451, 452, 462, 491, 512, 515, 525, 539, 549, 555, 566, 643, 644, 721, 722], "j": [9, 17, 26, 62, 106, 107, 158, 159, 160, 162, 165, 166, 190, 237, 277, 392, 397, 451, 462, 474, 504, 505, 506, 507, 524, 558, 560, 596, 637, 719], "natur": [9, 179, 186, 190, 494, 522, 569], "log": [9, 21, 177, 180, 181, 190, 477, 478], "approx": [9, 169, 569, 583], "71828": 9, "sqrt": [9, 161], "n_n": [9, 293, 296], "size": [9, 17, 26, 43, 77, 78, 79, 80, 106, 107, 177, 179, 180, 185, 186, 187, 190, 222, 223, 226, 227, 229, 233, 292, 297, 451, 452, 462, 475, 477, 478, 483, 486, 489, 494, 560, 569, 632, 643], "vvi": 9, "vri": 9, "vii": 9, "vmi": 9, "vai": 9, "magnitud": [9, 17, 18, 20, 261, 263, 264, 266, 269, 270, 273, 293, 294, 295, 350, 351, 395, 397, 442, 456, 471, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 512, 516, 521, 524, 539, 542, 546, 558, 561, 562, 569, 583, 585, 586, 587, 588, 589, 590, 592, 608, 609, 610, 611, 632, 638, 725], "vr": [9, 293, 294, 392, 393, 394, 407, 503, 594], "vi": [9, 293, 294, 393, 394, 407, 503, 594], "vm": [9, 18, 107, 245, 263, 293, 294, 295, 298, 350, 393, 395, 408, 456, 462, 471, 495, 503, 511, 542, 561, 592], "dvm": [9, 498, 499, 500, 501, 502, 504, 505, 506, 507], "inv": 9, "invers": 9, "frac": [9, 12, 31, 191], "z_i": 9, "_i": [9, 277], "zr": [9, 17, 19, 293, 298, 392, 393], "zi": [9, 17, 19, 293, 298, 392, 393], "j_": 9, "affin": 9, "dd": [9, 462, 564], "aa": 9, "combin": [9, 107, 157, 293, 296, 397, 462, 523, 723], "ccc": [9, 19], "underlin": 9, "obtain": [9, 43, 107, 293, 294, 368, 393, 397], "multipli": [9, 17, 26, 31, 58, 60, 106, 107, 109, 144, 145, 146, 147, 148, 149, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 293, 294, 368, 393, 462, 464, 497, 498, 499, 500, 501, 502, 509, 541, 542, 544, 545, 546, 563, 569, 591, 592, 595, 597, 599, 606, 609, 611, 613, 718], "superscript": 9, "subscript": [9, 237, 238, 246], "carleton": 10, "coffrin": 10, "et": [10, 13, 107, 439, 592, 619, 632, 633, 634, 635, 636, 638, 639, 723], "al": [10, 13], "progress": [10, 26, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 472, 569, 583, 620, 621, 623, 624, 626, 627, 723], "www": [10, 107, 110, 111, 112, 123, 128, 133, 134, 143, 158, 159, 160, 161, 162, 165, 171, 172, 190, 192, 523, 531, 533, 538, 569, 583], "overleaf": 10, "5d94e3765cb3ba000129df3c": 10, "zimmerman": [10, 26, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 757], "octob": [10, 757], "2020": [10, 757], "org": [10, 13, 21, 23, 26, 106, 107, 111, 137, 143, 169, 170, 171, 172, 175, 198, 200, 452, 467, 468, 469, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 564, 569, 583, 757], "much": [11, 246], "task_pf": [11, 235, 440, 441, 443, 445, 446, 457, 459, 460], "task_cpf": [11, 235, 441, 456, 457, 460], "usag": [11, 297, 541, 542, 543, 545, 546, 556], "pattern": 11, "occur": [11, 60], "flowchart": 11, "satisfi": [11, 26, 30, 31, 632, 638], "reactiv": [11, 12, 17, 18, 20, 43, 66, 245, 261, 266, 267, 269, 270, 272, 273, 274, 275, 277, 285, 288, 329, 360, 366, 368, 444, 464, 467, 468, 469, 471, 488, 489, 500, 503, 512, 524, 539, 541, 542, 544, 546, 553, 555, 568, 569, 583, 592, 601, 605, 606, 609, 611, 613, 618, 629, 632, 638, 643, 721], "mark": [11, 471, 624], "star": [11, 623], "sub": [11, 21, 77, 78, 79, 80, 106, 107, 245, 246, 443, 517, 624], "accomplish": 11, "next_dm": [11, 439, 444], "next_nm": [11, 439], "next_mm": [11, 439, 440], "empti": [11, 12, 17, 26, 31, 42, 62, 64, 65, 66, 77, 78, 79, 80, 106, 107, 110, 111, 112, 143, 147, 150, 175, 180, 181, 190, 198, 218, 237, 240, 241, 242, 245, 246, 292, 293, 294, 296, 298, 357, 365, 368, 379, 391, 393, 394, 395, 439, 444, 478, 549, 561, 569, 618, 625, 626, 643, 644, 720, 721], "termin": [11, 17, 26, 66, 107, 148, 162, 169, 171, 177, 182, 183, 190, 199, 477, 480, 486, 489, 496, 509, 516, 521, 569, 583, 585, 586, 587, 588, 589, 590, 591, 592, 622, 627, 629, 632, 633, 634, 635, 636, 638, 639, 725], "On": [11, 26], "trigger": [11, 178, 179, 182, 183, 480, 482, 486, 489, 494, 496, 632], "enforc": [11, 440, 444, 554, 569, 583], "constraint": [11, 17, 18, 21, 26, 31, 66, 101, 106, 107, 108, 109, 144, 145, 146, 147, 148, 149, 166, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 237, 244, 262, 266, 282, 284, 293, 294, 298, 300, 301, 303, 304, 308, 310, 313, 315, 317, 321, 322, 323, 324, 325, 326, 339, 340, 341, 342, 343, 351, 358, 359, 360, 361, 362, 367, 368, 369, 384, 385, 393, 410, 450, 460, 462, 463, 509, 512, 526, 539, 552, 553, 554, 555, 569, 583, 591, 592, 593, 594, 595, 596, 597, 598, 599, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 637, 719, 720, 724], "print_soln": [11, 439], "print": [11, 19, 29, 36, 74, 75, 102, 105, 106, 113, 152, 176, 215, 221, 222, 223, 226, 227, 228, 229, 232, 239, 241, 245, 262, 265, 266, 268, 271, 272, 274, 276, 279, 281, 284, 287, 289, 439, 442, 454, 456, 457, 458, 459, 463, 470, 472, 473, 569, 583, 584, 619, 632, 633, 634, 635, 636, 638, 639, 723, 752, 756], "save_soln": [11, 439], "save": [11, 26, 77, 78, 79, 80, 96, 97, 98, 100, 106, 107, 242, 243, 393, 396, 439, 441, 443, 445, 454, 456, 457, 458, 459, 463, 471, 472, 513, 515, 549, 620, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642], "shape": [12, 449], "_0": [12, 17, 273], "lower": [12, 17, 26, 31, 107, 108, 109, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 261, 262, 263, 266, 269, 272, 273, 274, 282, 392, 471, 489, 496, 509, 526, 541, 542, 545, 546, 553, 569, 591, 592, 594, 595, 637, 718, 719, 720, 724], "bound": [12, 17, 19, 26, 31, 107, 108, 109, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 261, 262, 263, 266, 269, 272, 273, 274, 282, 294, 392, 509, 526, 569, 591, 592, 594, 595], "mathrm": [12, 17, 26, 31, 191, 237, 273, 293, 393], "belong": [12, 235, 238, 330, 637, 643, 719, 721], "mme_gen_opf_ac": [12, 235, 368, 460], "mme_gen_opf_ac_ov": [12, 235, 449, 460], "If": [12, 13, 17, 26, 36, 61, 62, 63, 64, 77, 78, 102, 106, 107, 110, 111, 112, 143, 150, 158, 160, 162, 165, 169, 170, 171, 172, 175, 179, 180, 215, 218, 222, 224, 226, 232, 233, 245, 292, 297, 452, 454, 462, 471, 472, 494, 504, 505, 506, 507, 512, 513, 514, 515, 526, 539, 540, 541, 544, 547, 549, 550, 552, 558, 559, 560, 561, 569, 592, 593, 616, 618, 619, 632, 638, 640, 641, 642, 643, 644, 720, 721, 723, 756], "write": [12, 233, 463, 537, 641, 642], "h_": [12, 293, 368], "der": [12, 617], "pp": [12, 17, 26, 467, 468, 564, 614], "muv": [12, 26, 293, 368], "qq": [12, 107], "add_nln_constraint": [12, 106, 107, 462], "xx": [12, 17, 107, 237, 294, 358, 361, 368, 400, 462], "furthermor": [12, 43], "subset": [12, 42, 60, 76, 106, 107, 237, 293, 294, 296, 368, 393, 394, 395, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "idx": [12, 17, 19, 39, 40, 41, 42, 59, 77, 78, 79, 106, 107, 180, 190, 237, 238, 245, 263, 269, 292, 293, 294, 295, 296, 297, 298, 327, 329, 368, 392, 393, 394, 395, 397, 403, 404, 405, 406, 407, 408, 409, 410, 414, 417, 420, 422, 425, 429, 462, 478, 525, 549, 583, 608, 609, 610, 611, 632, 644, 720], "42": [12, 20, 195, 583], "44": [12, 583], "dh": [12, 26, 107, 166, 169, 170, 171, 172, 293, 368, 596], "oval_pq_capability_fcn": [12, 368], "p0": [12, 368], "q0": [12, 368, 449], "a2": [12, 368], "b2": [12, 368], "deal": [12, 107, 717], "ng": [12, 64, 74, 237, 238, 471, 500, 512, 522, 523, 539, 555, 561, 568, 569, 583, 618, 637, 643, 719, 721], "length": [12, 20, 42, 60, 144, 145, 146, 147, 148, 149, 159, 180, 185, 187, 275, 297, 475, 477, 487, 569], "isempti": [12, 17, 451, 452], "nargout": [12, 26, 158, 160, 162, 165, 169, 170, 171, 172, 190], "dhdp": 12, "spdiag": [12, 17], "dhdq": 12, "45": 12, "48": [12, 18, 469], "d2h": [12, 107, 293, 368, 597], "oval_pq_capability_hess": [12, 368], "zz": [12, 19], "spars": [12, 19, 23, 30, 31, 107, 108, 144, 145, 146, 147, 148, 149, 166, 167, 168, 192, 193, 194, 196, 197, 198, 199, 200, 201, 292, 293, 294, 368, 393, 397, 462, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 561, 592, 593], "d2h_pp": 12, "d2h_qq": 12, "now": [12, 17, 37, 104, 216, 471, 758], "add_constraint": [12, 17, 298, 326, 340, 341, 342, 343, 351, 358, 359, 360, 361, 362, 367, 368, 369, 373, 384, 385], "pqoval": 12, "pg": [12, 17, 18, 64, 74, 106, 107, 269, 392, 417, 420, 456, 457, 458, 459, 462, 465, 467, 468, 469, 471, 472, 485, 511, 543, 546, 553, 554, 555, 561, 566, 569, 592, 617, 637, 643, 719, 721, 722], "qg": [12, 18, 66, 107, 269, 417, 462, 465, 471, 488, 511, 546, 553, 554, 555, 561, 569, 592, 617, 618, 638, 643, 721], "data_model_el": [12, 17, 19, 246, 326, 397], "p_lb": 12, "pg_lb": [12, 269, 392], "p_ub": 12, "pg_ub": [12, 269, 392], "q_lb": 12, "qg_lb": [12, 269], "q_ub": 12, "qg_ub": [12, 269], "squar": [12, 293, 294, 368, 497, 503], "horizont": [12, 79, 80, 190, 368, 397, 451, 452, 544], "radiu": 12, "vertic": [12, 77, 78, 79, 80, 107, 190, 368, 392, 451, 452, 544], "hess": [12, 106, 107, 462], "let": [12, 17, 19, 462, 503, 568, 569, 583], "know": [12, 329], "our": [12, 17, 19, 233, 472], "place": [12, 107, 463, 525, 547, 564, 644, 720], "xt_oval_cap_curv": [12, 235, 460], "task_tag": [12, 18, 291, 298, 305, 319, 447, 448, 449, 450], "otherwis": [12, 14, 16, 18, 63, 64, 106, 107, 180, 190, 218, 226, 227, 228, 237, 245, 392, 393, 397, 454, 455, 462, 472, 474, 478, 480, 492, 496, 509, 591, 592, 618, 619, 620, 621, 623, 624, 626, 627, 637, 641, 642, 719, 720, 721], "39": [12, 18, 583], "bind": [12, 17, 26, 569, 583, 720], "expect": [12, 17, 19, 20, 38, 66, 105, 107, 190, 217, 222, 224, 226, 228, 230, 234, 243, 443, 465, 472, 480, 496, 717, 718, 719, 720], "restrict": [12, 66, 449], "case39": 12, "10": [12, 13, 17, 18, 20, 26, 28, 31, 43, 144, 145, 146, 148, 149, 158, 159, 161, 164, 165, 169, 170, 171, 172, 174, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 224, 226, 230, 282, 451, 464, 467, 468, 469, 471, 472, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 541, 542, 545, 546, 564, 569, 583, 643, 720, 721, 757], "______": 12, "_______": 12, "671": 12, "59": [12, 18, 20, 467], "140": [12, 147], "646": 12, "300": [12, 18, 147, 198, 583], "16": [12, 19, 20, 471, 541, 542, 545, 546, 583], "299": 12, "99": [12, 18, 192], "652": 12, "115": [12, 18, 583], "12": [12, 17, 18, 20, 191, 222, 223, 226, 227, 229, 233, 471, 541, 542, 545, 546, 735, 736, 737], "508": [12, 18], "139": 12, "61": [12, 18, 468, 564, 583], "661": 12, "222": 12, "93": [12, 43, 106, 392, 583], "580": [12, 583], "60": [12, 18, 20, 297, 583], "645": 12, "564": 12, "8208": 12, "654": 12, "03": [12, 18, 20], "32": [12, 18, 583], "735": 12, "689": [12, 20], "81": [12, 18, 583], "886": 12, "682": 12, "74": 12, "171": 12, "94": [12, 472], "639": 12, "128": 12, "46": 12, "672": 12, "253": 12, "14": [12, 18, 20, 471, 541, 542, 545, 546], "641": 12, "75": [12, 18], "147": 12, "08": [12, 43], "507": 12, "89": [12, 17, 18, 43, 583], "85": [12, 18, 20, 583], "223": 12, "649": 12, "87": [12, 18, 106, 392, 469, 583], "164": 12, "86": [12, 583], "579": 12, "41": [12, 20, 490, 583], "125": [12, 18], "563": 12, "73": [12, 583], "121": [12, 583], "662": 12, "51": [12, 18, 188, 490], "8392": 12, "701": 12, "248": 12, "notic": [12, 17, 19], "display_soln": [12, 107], "nli": [12, 106, 107, 244, 443, 462, 591, 592], "nonlin": [12, 107], "ineq": [12, 109], "ub": [12, 17, 18], "mu_ub": [12, 17, 282], "3e": 12, "06": [12, 18, 20, 472], "90806": 12, "07": 12, "270": [12, 18], "778": 12, "9e": 12, "28": 12, "8787": 12, "7e": 12, "117": 12, "1e": [12, 26, 66, 78, 107, 112, 144, 145, 146, 147, 148, 149, 150, 158, 159, 161, 165, 169, 190, 569, 583], "779": 12, "782": 12, "8e": 12, "103": 12, "459": 12, "163": 12, "4e": 12, "566": [12, 18], "547": 12, "31337": 12, "03857": 12, "lib": [12, 13, 14, 16, 17, 18, 19, 20, 233], "instal": [13, 15, 29, 38, 75, 105, 113, 152, 176, 217, 221, 234, 454, 460, 584, 592, 758], "python": 13, "virtual": 13, "unix": [13, 224, 230], "maco": 13, "window": [13, 77, 78, 79, 80, 224, 230], "python3": 13, "venv": 13, "env": 13, "bin": 13, "script": [13, 228, 472, 511], "confirm": 13, "leav": [13, 561, 618], "finish": [13, 157, 223, 439], "deactiv": 13, "sphinxcontrib": 13, "matlabdomain": 13, "md": [13, 21, 58, 59, 62, 65, 77, 78, 79], "rtd": 13, "theme": 13, "pip": 13, "texliv": 13, "latex": [13, 21], "directori": [13, 14, 15, 16, 77, 78, 79, 80, 96, 97, 98, 100, 143, 233, 453, 454, 517], "latexpdf": 13, "twice": [13, 397, 643, 720], "pick": 13, "ensur": [13, 392, 477], "content": [13, 17, 60, 110, 111, 112, 143, 150, 175, 224, 451, 452, 625, 632], "cross": 13, "date": [13, 29, 75, 113, 152, 176, 218, 221, 584], "everyth": [13, 222, 569, 583, 758], "properli": [13, 233], "creation": [13, 17, 536, 753], "rst": [13, 14, 15, 16], "stub": [13, 14, 15, 16], "mani": [13, 20, 233, 632, 725], "pars": [13, 107, 593, 624, 625, 626], "analyz": 13, "symlink": [13, 14, 15, 16], "subdirectori": 13, "generate_matpower_autodoc": 13, "hard": [13, 19, 720], "prompt": [13, 233, 454], "rebuild": [13, 245, 558], "ref": [13, 14, 15, 17, 20, 236, 263, 264, 297, 392, 397, 404, 444, 465, 475, 476, 477, 489, 510, 511, 516, 521, 542, 585, 586, 587, 588, 589, 590, 612, 613, 615, 632, 725, 734, 736, 737], "generate_autodoc_stub": [13, 15], "generate_source_symlink": [13, 15], "j\u00f8rgen": 13, "cederberg": 13, "2024": [13, 20, 218, 537], "contrib": 13, "21": [13, 20, 471, 541, 545, 546, 550, 735, 736, 737], "zenodo": [13, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 757], "doi": [13, 26, 467, 468, 469, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 564, 757], "5281": [13, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 757], "7746009": 13, "dest": [14, 16], "success": [14, 16, 20, 36, 102, 148, 177, 199, 215, 232, 233, 439, 441, 443, 445, 454, 467, 468, 469, 477, 509, 510, 569, 583, 591, 592, 600, 619, 629, 632, 633, 634, 635, 636, 637, 638, 639, 723, 756], "err_list": [14, 16], "stub_typ": [14, 16], "destdir": [14, 16], "prepend": [14, 16], "dir": [14, 16], "gh_base_url": [14, 16], "url": [14, 16], "mod": [14, 16], "modul": [14, 16], "pkg": [14, 16], "src_path": [14, 16], "o": [14, 16], "error": [14, 16, 61, 107, 157, 239, 245, 452, 522, 523, 550, 618, 643], "fatal": [14, 16, 157], "blob": [14, 16], "class1": [14, 16], "class2": [14, 16], "class3": [14, 16], "class4": [14, 16], "func1": [14, 16], "func2": [14, 16], "func3": [14, 16], "func4": [14, 16], "install_dir": 15, "src": 16, "demonstr": [17, 18], "transform": [17, 18, 19, 20, 43, 260, 261, 288, 289, 338, 339, 340, 341, 342, 343, 344, 345, 390, 391, 398, 438, 447, 471, 472, 541, 592, 593, 620, 623, 730], "discuss": [17, 19], "exactli": [17, 179, 180, 472, 494], "p_": [17, 273], "p_1": 17, "_1": [17, 19, 273], "diagram": [17, 19], "_2": [17, 19], "_k": [17, 19], "p_k": 17, "q_k": 17, "p_2": 17, "q_1": 17, "q_2": 17, "setpoint": [17, 20, 239, 269, 270, 273, 471, 545, 546, 632], "appli": [17, 42, 43, 59, 60, 110, 111, 112, 143, 144, 145, 146, 147, 148, 149, 150, 157, 168, 175, 190, 224, 230, 245, 452, 456, 457, 458, 459, 464, 467, 468, 469, 544, 560, 568, 569, 592, 593], "implmement": [17, 19], "legacy_dclin": [17, 18, 448], "whose": [17, 60, 106, 107, 159, 177, 228, 397, 454, 470, 513, 518, 540, 550, 559, 560, 569, 608, 609, 610, 611, 625, 632, 718, 720], "role": 17, "piec": [17, 81, 245, 616, 618], "flag": [17, 26, 31, 66, 74, 77, 78, 79, 80, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 178, 179, 180, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 241, 245, 439, 477, 478, 480, 482, 491, 494, 496, 509, 516, 521, 569, 583, 585, 586, 587, 588, 589, 590, 591, 592, 629, 632, 633, 634, 635, 636, 638, 639, 643, 723, 725], "physic": [17, 19], "dme_dclin": 17, "extend": [17, 38, 217, 234, 471], "dme_dcline_opf": 17, "bus_fr": [17, 261, 273, 275, 288], "bus_to": [17, 261, 273, 275, 288], "loss0": [17, 273, 545], "loss1": [17, 273, 545], "vm_setpoint_fr": [17, 273], "vm_setpoint_to": [17, 273], "p_fr_lb": [17, 273], "p_fr_ub": [17, 273], "q_fr_lb": [17, 273], "q_fr_ub": [17, 273], "q_to_lb": [17, 273], "q_to_ub": [17, 273], "p_fr": [17, 18, 273], "q_fr": [17, 273], "p_to": [17, 273], "q_to": [17, 273], "dme_legacy_dclin": [17, 18, 235, 274, 448, 460], "fbus_on": [17, 273], "tbus_on": [17, 273], "p_fr_start": [17, 273], "p_to_start": [17, 273], "q_fr_start": [17, 273], "q_to_start": [17, 273], "th": [17, 237, 392, 397, 471, 543, 560], "_start": 17, "horzcat": [17, 19, 245, 451, 452], "export_var": [17, 245, 261, 262, 263, 266, 269, 272, 273, 274, 280, 282, 283, 286], "var": [17, 60, 61, 106, 107, 190, 245, 393, 394, 395, 396, 443, 462, 463, 471, 509, 523, 545, 554, 591, 592, 632], "export_vars_offline_v": [17, 245, 261, 262, 263, 266, 269, 272, 273, 274, 282, 283, 326], "info": [17, 19, 22, 23, 24, 25, 29, 39, 75, 76, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152, 157, 170, 176, 180, 182, 183, 197, 218, 219, 220, 221, 245, 397, 472, 478, 479, 481, 485, 488, 490, 491, 493, 495, 509, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 591, 592, 620, 621, 623, 624, 626, 627, 632, 633, 634, 635, 636, 638, 639, 723], "b2i": [17, 19], "alreadi": [17, 19, 40, 41, 66, 106, 107, 512, 513, 514], "turn": [17, 19, 218, 261, 464, 471, 541], "bus_dm": 17, "isol": [17, 19, 236, 263, 264, 470, 471, 474, 514, 515, 519, 539, 542, 547], "fill": [17, 19, 39, 290, 593], "set_bus_type_pv": [17, 263], "vm_control": [17, 263, 264], "reli": [17, 19], "global": [17, 222, 223, 226, 227, 229, 236, 758], "apply_vm_setpoint": [17, 269, 270, 273], "i_fr": 17, "i_to": 17, "vm_start": [17, 263], "pp_have_section_sum": [17, 245, 261, 269, 270, 273, 275, 277, 278, 282, 285, 288], "pp_data_sum": [17, 245, 261, 269, 270, 273, 275, 277, 278, 282, 285, 288], "torf": [17, 107, 218, 236, 239, 245, 246, 297, 451, 526, 548], "pp_arg": [17, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 284, 285, 288], "out_": [17, 239, 241, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 284, 285, 288], "fd": [17, 107, 159, 162, 164, 239, 245, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 282, 283, 284, 285, 288, 439, 442, 463, 470, 569, 619], "fprintf": 17, "29": [17, 218, 233], "2f": 17, "mw": [17, 18, 74, 266, 269, 272, 273, 274, 277, 282, 283, 285, 464, 471, 472, 524, 541, 542, 545, 546, 551, 569, 583, 617, 637, 643, 718, 719, 720], "mvar": [17, 18, 43, 266, 269, 272, 273, 274, 277, 282, 285, 471, 524, 541, 542, 545, 546, 569, 720], "pp_have_section_det": [17, 245, 261, 263, 264, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288], "pp_get_headers_det": [17, 245, 261, 263, 264, 266, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288], "pp_data_det": [17, 245], "header": [17, 239, 241, 245, 439], "third": [17, 42, 43], "inj": [17, 18], "1234567": 17, "123456789": 17, "90": [17, 18, 583], "123456": 17, "str": [17, 106, 245, 451, 625], "pp_data_row_det": [17, 245, 261, 263, 264, 266, 267, 269, 270, 273, 275, 277, 278, 282, 283, 285, 288], "sprintf": [17, 19], "7d": 17, "9d": 17, "6d": 17, "themselv": [17, 106, 107, 290, 462, 504, 506, 592, 593], "chose": 17, "keep": [17, 20, 106, 107, 290, 462], "check": [17, 38, 61, 76, 106, 157, 217, 218, 223, 231, 234, 236, 245, 246, 297, 442, 526, 548, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 618, 717, 718, 719, 720], "against": 17, "dme_legacy_dcline_opf": [17, 18, 235, 448, 460], "mu_p_fr_lb": [17, 274], "mu_p_fr_ub": [17, 274], "mu_q_fr_lb": [17, 274], "mu_q_fr_ub": [17, 274], "mu_q_to_lb": [17, 274], "mu_q_to_ub": [17, 274], "polynomi": [17, 81, 237, 238, 366, 367, 373, 471, 511, 543, 568, 601, 602, 616, 617], "breakpoint": [17, 237], "appear": [17, 106, 107, 462], "cost_tabl": [17, 235, 238, 272, 274, 366, 452, 460], "have_cost": [17, 269, 272, 273, 274], "routin": [17, 37, 104, 167, 216, 233, 514, 550], "whether": [17, 66, 77, 78, 79, 80, 106, 107, 144, 145, 146, 147, 148, 149, 180, 189, 190, 219, 220, 224, 227, 230, 447, 448, 454, 478, 491, 512, 516, 521, 539, 585, 586, 587, 588, 589, 590, 618, 725], "build_cost_param": [17, 272, 274, 367, 369, 373], "conveni": [17, 511, 560], "cost_table_util": [17, 235, 237, 460], "ismemb": [17, 522, 523], "variablenam": [17, 451], "poli": [17, 237, 373], "poly_param": [17, 237, 238, 366], "pwl": [17, 237, 238, 366, 373, 592], "pwl_param": [17, 237, 238, 366], "els": [17, 18, 218, 233, 643], "lim": [17, 239, 241, 262, 265, 266, 268, 271, 272, 274, 276, 279, 281, 284, 287, 289, 294, 545, 569, 718, 720], "lb": [17, 18, 297], "pp_have_section_lim": [17, 262, 266, 272, 274, 282, 284], "pp_binding_rows_lim": [17, 262, 266, 272, 274, 282, 284], "pp_get_headers_lim": [17, 262, 266, 272, 274, 282, 284], "pp_data_row_lim": [17, 262, 266, 272, 274, 282, 284], "ctol": [17, 284], "ptol": [17, 284], "dme_shared_opf": [17, 235, 262, 265, 266, 268, 271, 272, 274, 276, 279, 281, 282, 283, 287, 289, 460], "mu": [17, 18, 26, 107, 109, 169, 170, 171, 172, 443, 497, 498, 501, 509, 591, 592, 637, 718, 719], "890": 17, "12345": 17, "78": 17, "mu_lb": [17, 282], "3f": 17, "dcline": [17, 515, 545, 622, 717], "dclinecost": 17, "dmce_legacy_dcline_mpc2": [17, 18, 235, 448, 460], "data_field": [17, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "df": [17, 26, 107, 167, 169, 170, 171, 172, 237, 246, 327, 462, 569, 583, 592, 601, 602, 617], "default_export_data_t": [17, 246, 247, 249, 252, 253], "retriev": [17, 106, 297, 451, 452, 569, 583], "default_export_data_nrow": [17, 246], "dt": [17, 246], "idx_dclin": [17, 460, 651, 717, 726], "qmaxt": [17, 545], "major": [17, 569, 583], "directi": 17, "gcip_fcn": 17, "ob": 17, "dcline_cost_import": [17, 253], "gcep_fcn": 17, "dcline_cost_export": [17, 253], "br_statu": [17, 464, 511, 541, 545], "f_bu": [17, 497, 501, 511, 541, 545], "t_bu": [17, 511, 541, 545], "vf": [17, 471, 504, 506, 524, 541, 545], "vt": [17, 106, 107, 392, 462, 471, 524, 541, 545], "pmin": [17, 45, 64, 77, 107, 449, 471, 472, 511, 545, 546, 548, 616, 643, 720, 721, 723], "pmax": [17, 43, 64, 77, 103, 107, 449, 464, 471, 472, 477, 485, 486, 511, 545, 546, 548, 616, 632, 637, 719, 720], "qminf": [17, 545], "qmaxf": [17, 545], "qmint": [17, 545], "qf": [17, 503, 511, 541, 545], "pt": [17, 120, 511, 541, 545, 569, 592], "qt": [17, 511, 541, 545], "isfield": 17, "mu_pmin": [17, 511, 545, 546, 724], "mu_pmax": [17, 511, 545, 546, 724], "mu_qminf": [17, 545], "mu_qmaxf": [17, 545], "mu_qmint": [17, 545], "mu_qmaxt": [17, 545], "static": [17, 236, 237, 238, 252, 451, 477, 523], "dmce_gen_mpc2": [17, 235, 460], "gencost": [17, 20, 39, 40, 41, 60, 63, 64, 252, 462, 471, 509, 511, 512, 514, 539, 543, 550, 555, 566, 568, 591, 592, 593, 601, 617, 618, 633, 635, 636, 639, 641, 643, 717, 722, 723], "gencost2cost_t": [17, 252], "cost_table2gencost": [17, 252], "next": [17, 19, 63, 64, 106, 107, 151, 177, 179, 180, 439, 452, 477, 486, 487, 489, 494, 638, 643, 723], "nme_legacy_dclin": [17, 235, 422, 425, 460], "np": [17, 19, 392, 397, 398, 410, 413, 414, 421, 426, 427, 428, 433, 438, 523], "nz": [17, 19, 134, 392, 397, 410, 413, 414, 421, 643], "anyth": [17, 19, 222, 569, 583], "nme_legacy_dcline_ac": [17, 235, 423, 424, 460], "form_ac": [17, 19, 235, 294, 295, 296, 393, 394, 395, 460, 748, 749, 750, 751], "add_zvar": [17, 19, 392, 397, 410, 414, 417, 420, 422, 425], "ndc": [17, 717], "nk": [17, 19, 397], "add_var": [17, 19, 106, 107, 298, 309, 311, 314, 316, 318, 326, 360, 366, 373, 384, 392, 397, 462], "pdcf": [17, 422, 425], "qdcf": [17, 422], "pdct": [17, 422, 425], "inf": [17, 31, 64, 107, 144, 145, 146, 147, 148, 149, 158, 159, 161, 165, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 392, 569, 583, 720], "qdct": [17, 422], "spey": 17, "add_vvar": [17, 19, 392, 397, 405, 406, 407, 408, 409], "defer": [17, 19], "recal": [17, 19], "omit": [17, 19, 106, 107, 239, 242, 245, 297, 298, 392, 397, 451, 462], "25": [17, 18, 43, 297, 451, 546, 583, 720], "proper": [17, 62, 454], "becom": [17, 19, 26, 43, 238, 569], "identii": 17, "nme_legacy_dcline_acc": [17, 18, 235, 448, 460], "form_acc": [17, 19, 235, 293, 295, 394, 400, 405, 407, 411, 415, 418, 423, 430, 435, 460], "nme_legacy_dcline_acp": [17, 18, 235, 448, 460], "form_acp": [17, 19, 235, 293, 294, 395, 401, 406, 408, 412, 416, 419, 424, 426, 428, 431, 436, 438, 460], "nme_legacy_dcline_dc": [17, 18, 235, 448, 460], "form_dc": [17, 235, 293, 294, 295, 396, 402, 409, 420, 425, 432, 437, 460], "z_1": 17, "z_2": 17, "analog": 17, "incorpor": [17, 19, 43], "impli": 17, "beyond": [17, 43, 512, 539, 625, 626], "mme_legacy_dclin": [17, 235, 373, 376, 377, 460], "slightli": [17, 638], "mme_legacy_dcline_pf_ac": [17, 18, 235, 448, 460], "get_idx": [17, 106, 107], "s_fr": 17, "gs_": [17, 293, 393], "i1": [17, 106, 107, 237, 298, 327, 366, 373, 392, 451, 462], "iN": [17, 106, 107, 298, 327, 392, 451, 462], "s_to": 17, "imag": [17, 393, 394, 524], "mme_legacy_dcline_pf_dc": [17, 18, 235, 448, 460], "26": [17, 20, 583], "mme_legacy_dcline_opf": [17, 235, 374, 375, 460], "ccv": [17, 237, 555, 592], "just": [17, 245, 439, 452], "ydc": 17, "dimenion": 17, "add_lin_constraint": [17, 106, 107, 462], "dcline_legaci": 17, "ycondc": 17, "add_cost": [17, 298, 319, 326, 366, 367, 373, 384], "kind": [17, 245], "less": [17, 30, 226, 237, 511], "than": [17, 26, 58, 74, 107, 151, 226, 237, 293, 294, 368, 393, 451, 463, 471, 511, 515, 544, 550, 560, 569, 592, 593, 614, 625, 626, 644], "greater": [17, 58, 112], "have_quad_cost": [17, 237, 366, 373], "add_quad_cost": [17, 106, 107, 462], "polpdcf": 17, "higher": [17, 188, 226, 237, 490], "i3": [17, 237, 366, 373], "cost_pdcf": 17, "poly_cost_fcn": [17, 237], "poly_coef": [17, 237], "add_nln_cost": [17, 106, 107, 462], "pwldc": 17, "interior_x0": [17, 305, 348, 349, 351, 352, 353, 357, 365, 366, 373, 379, 391], "x0": [17, 26, 31, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 305, 348, 349, 351, 352, 353, 357, 365, 366, 373, 379, 391], "feasibl": [17, 26, 43, 110, 569, 583], "vv": [17, 106, 107, 426], "maxc": [17, 237, 238], "max_pwl_cost": [17, 237, 238], "ab": [17, 189, 491, 503, 504, 505, 506, 507, 524], "mathmat": [17, 326, 439, 441, 443, 445], "mme_legacy_dcline_opf_ac": [17, 18, 235, 448, 460], "network_model_el": [17, 326], "vm_setpoint": [17, 269, 442], "sign": [17, 182, 190, 481, 491], "swap": 17, "mme_legacy_dcline_opf_dc": [17, 18, 235, 448, 460], "were": [17, 43, 107, 223, 471, 547], "side": [17, 20, 107, 732, 733, 734, 737], "net_model_dc": [17, 235, 460], "mme_legacy_opf_dcline_ac": 17, "math_model_opf_acc": [17, 235, 308, 311, 460], "inclus": [17, 622], "explain": [17, 503, 504, 505, 506, 507], "xt_legacy_dclin": [17, 18, 235, 460, 744], "t_case9_dclin": [17, 18, 460, 717, 726], "go": [17, 565], "gizmo": [17, 738], "entir": [18, 62, 107, 293, 296, 514, 547, 721], "20": [18, 26, 43, 188, 195, 297, 392, 464, 471, 472, 477, 490, 541, 545, 546, 569, 583, 643, 721], "_element_class": [18, 447, 448], "fmt": [18, 291, 447, 448, 450], "mpc2": [18, 242, 243, 291, 447, 448, 450, 473, 515], "v_cartesian": [18, 440, 442, 444, 569], "immedi": [18, 463], "succeed": [18, 20, 190, 441, 443, 445, 454, 629, 632, 633, 634, 635, 636, 638, 639], "27": [18, 20, 159], "23": [18, 545, 546], "setup": [18, 20, 306, 317], "04": [18, 569, 583], "6518": 18, "hr": [18, 471, 720], "area": [18, 43, 60, 263, 464, 471, 514, 526, 542, 544, 546, 547, 550, 569, 583, 592, 593, 620, 624, 641, 643, 721, 723], "zone": [18, 43, 62, 258, 263, 283, 385, 450, 471, 511, 513, 540, 542, 637, 643, 719, 721], "319": 18, "820": 18, "900": 18, "110": [18, 43], "315": 18, "00": [18, 20, 233], "124": [18, 583], "40": [18, 147, 297, 472, 490, 569, 583], "minimum": [18, 165, 190, 471, 541, 542, 546, 569, 632], "maximum": [18, 26, 31, 43, 148, 158, 159, 160, 161, 162, 165, 169, 171, 190, 199, 226, 237, 238, 471, 473, 511, 516, 521, 541, 542, 546, 569, 583, 585, 586, 587, 588, 589, 590, 632, 637, 719, 720, 725], "066": 18, "30": [18, 43, 85, 86, 87, 88, 89, 159, 195, 297, 471, 543, 546, 569, 583, 650], "100": [18, 20, 43, 198, 464, 583, 643, 720], "deg": [18, 20, 720], "11": [18, 20, 30, 31, 43, 126, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201, 218, 471, 541, 542, 545, 546, 583, 643], "lmp": 18, "mwh": [18, 74, 472, 549], "24": [18, 103, 546, 583], "62": [18, 20, 583], "mvarh": 18, "43": 18, "mag": [18, 395], "pu": [18, 569, 720], "ang": [18, 395, 585, 586, 587, 588, 589, 590], "000": 18, "15": [18, 19, 20, 43, 392, 469, 471, 541, 542, 545, 546], "954": 18, "107": 18, "035": 18, "277": 18, "047": 18, "623": 18, "094": 18, "470": 18, "967": 18, "298": 18, "078": [18, 20], "952": 18, "085": 18, "992": 18, "600": [18, 147, 198, 583], "081": 18, "160": 18, "476": 18, "427": 18, "097": 18, "205": 18, "043": 18, "112": [18, 583], "067": 18, "079": 18, "consumpt": 18, "35": [18, 19, 20, 583], "50": [18, 43, 188, 297, 490, 643], "19": [18, 20, 471, 541, 545, 546, 583], "47": [18, 20], "54": [18, 43], "31": [18, 583], "18": [18, 20, 31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201, 233, 471, 541, 545, 546, 583], "49": [18, 106, 392], "68": [18, 106, 583], "88": [18, 583], "02": [18, 20], "65": [18, 583], "37": [18, 159, 583], "38": [18, 43, 106, 392, 583], "69": [18, 583], "64": [18, 20, 583], "13": [18, 20, 43, 147, 224, 230, 471, 541, 542, 545, 546], "70": [18, 43, 583], "01": [18, 20, 472, 569], "58": [18, 583], "131": 18, "95": [18, 20, 26, 542, 569, 583], "34": [18, 20, 43, 583], "36": [18, 19, 583], "97": [18, 20, 583], "92": [18, 583], "84": [18, 20, 583], "231": 18, "197": 18, "010": 18, "046": 18, "250": [18, 43, 198, 583], "98": [18, 20, 469], "22": [18, 26, 43, 545, 546], "mu_sm_fr": 18, "sm_fr": 18, "sm_ub": 18, "sm_to": 18, "mu_sm_to": 18, "762": [18, 467], "375": 18, "760": 18, "prototyp": [18, 20, 291, 460], "wider": 19, "rang": [19, 43, 616], "fictiti": 19, "wide": [19, 60, 446, 544, 643], "verifi": [19, 233], "facil": 19, "sai": 19, "_g": 19, "proport": [19, 560], "imped": [19, 20, 275, 277, 467, 468, 469, 471, 524, 562, 564, 565, 569], "_3": 19, "_4": 19, "_5": 19, "_6": 19, "_7": 19, "_8": 19, "dme_gizmo": 19, "bus_1": 19, "bus_2": 19, "bus_3": 19, "y1r": 19, "y1i": 19, "y2r": 19, "y2i": 19, "m1r": 19, "m1i": 19, "m2r": 19, "m2i": 19, "lr": 19, "li": 19, "ir": 19, "ii": [19, 60], "ni": 19, "sr": 19, "si": [19, 393], "zr1": 19, "zi1": 19, "zr2": 19, "zi2": 19, "bus1": 19, "bus2": 19, "bus3": 19, "until": [19, 451, 569, 723], "look": [19, 20, 157, 233, 550], "dme_branch": [19, 235, 262, 460], "focu": 19, "assumpt": [19, 555], "nme_gizmo": 19, "nme_gizmo_ac": 19, "17": [19, 20, 31, 43, 87, 89, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201, 471, 541, 542, 545, 546, 583, 717], "zmax": 19, "vname_r": 19, "d_gizmo": 19, "vname_i": 19, "y1": [19, 517], "1j": 19, "y2": 19, "m1": 19, "m2": 19, "ss": 19, "j1": [19, 58, 451], "j2": [19, 58], "j3": 19, "arbitrarili": 19, "obei": 19, "zr1_gizmo": 19, "nme_gizmo_acc": 19, "nme_gizmo_acp": 19, "xt_gizmo": 19, "mind": 20, "enhanc": 20, "plan": [20, 74, 523], "futur": [20, 64, 107, 454, 556, 569, 721], "don": [20, 180, 454, 478, 558], "t_run_mp_3p": [20, 460, 728], "t_case3p_a": [20, 460, 728, 731, 732, 733, 734, 736, 737], "residu": [20, 522], "375e": 20, "042e": 20, "287e": 20, "179e": 20, "961e": 20, "570e": 20, "967e": 20, "405e": 20, "05": [20, 26, 190, 464, 569], "400e": 20, "090e": 20, "908e": 20, "newton": [20, 26, 107, 153, 155, 158, 159, 160, 162, 163, 164, 165, 475, 558, 569, 583, 585, 586, 587, 588, 589, 590, 638], "converg": [20, 107, 146, 147, 158, 159, 160, 161, 162, 165, 170, 171, 172, 196, 197, 198, 200, 475, 509, 516, 521, 585, 586, 587, 588, 589, 590, 591, 592, 619, 632, 725], "ph": [20, 26], "6109": 20, "kw": [20, 270, 275, 278, 288], "4206": 20, "kvar": [20, 270, 275, 288], "5450": 20, "2442": 20, "561": 20, "1173": 20, "590": 20, "kv": [20, 43, 263, 264, 288, 471, 542], "1996": 20, "120": 20, "1637": 20, "1105": 20, "0821": 20, "119": 20, "3055": 20, "2547": 20, "123": [20, 583], "2028": 20, "114": [20, 583], "79": [20, 469], "1750": 20, "9298": 20, "126": 20, "80": [20, 43], "8327": 20, "102": 20, "1341": 20, "970": 20, "52": [20, 490, 583], "2096": 20, "2672": 20, "1894": 20, "1275": 20, "8500": 20, "1800": 20, "9000": 20, "2375": 20, "9500": 20, "229": 20, "345": 20, "66": [20, 583], "152": 20, "455": 20, "1036": 20, "1364": 20, "230": 20, "144": 20, "72": [20, 583], "1323": 20, "881": 20, "2043": 20, "1133": 20, "2598": 20, "1508": 20, "1337": 20, "963": 20, "2074": 20, "1319": 20, "2652": 20, "1830": 20, "790": 20, "871": 20, "780": 20, "xfrm": 20, "xfmr": [20, 623], "substat": 20, "4bu": [20, 730], "unb": [20, 730], "dss": [20, 730], "bal": [20, 730], "opendss": [20, 730], "ieee": [20, 26, 43, 467, 468, 472, 564, 614, 730], "ground": [20, 730], "wye": [20, 730], "sourceforg": [20, 730], "net": [20, 439, 730], "electricdss": [20, 730], "head": [20, 730], "tree": [20, 730], "trunk": [20, 730], "distrib": [20, 730], "ieeetestcas": [20, 730], "basemva": [20, 462, 471, 472, 497, 498, 499, 501, 502, 504, 505, 506, 507, 509, 524, 546, 550, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 591, 592, 593, 601, 615, 619, 623, 633, 634, 635, 636, 638, 639, 641, 723, 724], "freq": [20, 275], "frequenc": [20, 275], "hz": [20, 275], "basekva": 20, "busid": 20, "basekv": [20, 43, 471, 542], "vm1": [20, 264], "vm2": [20, 264], "vm3": [20, 264, 406], "va1": [20, 264], "va2": [20, 264], "va3": [20, 264, 406], "brid": 20, "lcid": 20, "len": [20, 190, 275], "5280": 20, "2500": [20, 569, 583], "xfid": 20, "6000": 20, "ldid": 20, "ldbu": 20, "pd1": [20, 278], "pd2": [20, 278], "pd3": [20, 278], "ldpf1": 20, "ldpf2": 20, "ldpf3": 20, "genid": 20, "gbu": 20, "vg1": 20, "vg2": 20, "vg3": 20, "pg1": [20, 270], "pg2": [20, 270], "pg3": [20, 270, 414], "qg1": [20, 270], "qg2": [20, 270], "qg3": [20, 270, 414], "r11": 20, "r21": 20, "r31": 20, "r22": 20, "r32": 20, "r33": 20, "x11": 20, "x21": 20, "x31": 20, "x22": 20, "x32": 20, "x33": 20, "c11": 20, "c21": 20, "c31": 20, "c22": 20, "c32": 20, "c33": 20, "457541": 20, "15594": 20, "153474": 20, "466617": 20, "157996": 20, "461462": 20, "501648": 20, "384909": 20, "04813": 20, "423624": 20, "06502": 20, "0671": 20, "86241": 20, "85323": 20, "875": 20, "09098": 20, "3254": 20, "xfrm3p": 20, "mile": [20, 275], "configur": 20, "referenc": [20, 106, 107, 275, 462, 592, 593], "hertz": 20, "dme_bus3p": [20, 235, 265, 447, 460], "slack": [20, 26, 329, 337, 467, 468, 469, 560, 564, 565, 569, 585, 586, 587, 588, 589, 590, 632, 638], "nomin": [20, 261, 277, 285, 471, 541, 561, 562, 721], "degre": [20, 165, 261, 262, 263, 264, 274, 466, 471, 541, 542, 569], "dme_line3p": [20, 235, 276, 447, 460], "dme_xfmr3p": [20, 235, 289, 447, 460], "resist": [20, 261, 275, 288, 471, 541], "reactanc": [20, 261, 275, 288, 471, 541], "dme_load3p": [20, 235, 279, 447, 460], "demand": [20, 66, 277, 278, 285, 467, 468, 469, 471, 542, 548, 549, 562, 721], "lpf1": 20, "lpf2": 20, "lpf3": 20, "dme_gen3p": [20, 235, 271, 447, 460], "3x3": [20, 275], "capacit": 20, "nf": [20, 275], "dme_buslink": [20, 235, 268, 447, 460], "linid": 20, "bus3pid": 20, "t_case3p_b": [20, 460, 728], "t_case3p_c": [20, 460, 728], "t_case3p_d": [20, 460, 728], "t_case3p_": [20, 460, 728], "t_case3p_f": [20, 460, 728], "t_case3p_g": [20, 460, 728, 737], "t_case3p_h": [20, 460, 728], "nlp": [21, 26, 32, 33, 38, 107, 154, 169, 170, 171, 172, 205, 209, 216], "site": [21, 43, 62], "consult": 21, "relnot": 21, "appendix": [21, 569], "goal": 21, "restructur": 21, "still": [21, 107, 222, 223, 226, 227, 229, 233, 471, 720], "tn1": 21, "auction": [21, 535, 646, 647, 648, 649, 711], "tn2": [21, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507], "tn3": [21, 499, 500, 505], "tn4": [21, 498, 499, 500, 501, 502, 504, 505, 506, 507], "cite": 21, "donat": 21, "detect": [22, 23, 24, 25, 38, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 177, 180, 181, 182, 183, 189, 190, 217, 218, 219, 220, 233, 234, 460, 477, 478, 479, 481, 485, 488, 491, 493, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 569, 627], "lu": [22, 30, 165, 569], "privat": [22, 23, 24, 25, 37, 104, 106, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 216, 219, 220, 233, 460, 462, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "lu_vec": 22, "pardiso": [23, 24, 25, 26, 30, 33, 569], "parallel": [23, 43], "direct": [23, 30, 157, 190, 474, 492, 643, 718], "have_feature_pardiso_legaci": [23, 25, 37, 38], "have_feature_pardiso_object": [23, 24, 37, 38], "pardiso_legaci": 24, "v5": 24, "mex": [24, 107, 143, 172, 198, 569, 583], "have_feature_pardiso": [24, 25, 37, 38], "pardiso_object": 25, "v6": [25, 106, 151], "later": [25, 106, 120, 124, 126, 129, 132, 136, 139, 297, 513, 520, 569, 583], "f_fcn": [26, 169, 170, 171, 172], "xmin": [26, 31, 107, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "xmax": [26, 31, 107, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "gh_fcn": [26, 169, 170, 171, 172], "hess_fcn": [26, 169, 170, 171, 172], "exitflag": [26, 31, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "minim": [26, 27, 169, 170, 171, 172, 173], "subject": [26, 28, 31, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 174, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 522, 523], "inequ": [26, 106, 107, 108, 109, 166, 168, 169, 170, 171, 172, 462, 569, 583, 591, 592, 596, 720], "9th": [26, 169, 170, 171, 172], "d2f": [26, 107, 167, 169, 170, 171, 172, 237, 327, 462, 569, 583, 592, 601, 602, 617], "infti": [26, 31, 191], "dg": [26, 107, 166, 169, 170, 171, 172, 294, 443, 569, 583, 592, 598, 605], "lagrangian": [26, 168, 169, 170, 171, 172], "lxx": [26, 168, 169, 170, 171, 172], "eqnonlin": [26, 107, 168, 169, 170, 171, 172], "ineqnonlin": [26, 107, 168, 169, 170, 171, 172], "parenthes": [26, 107, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "linsolv": [26, 569], "feastol": [26, 569], "toler": [26, 66, 107, 110, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 189, 190, 226, 284, 491, 516, 521, 569, 583, 585, 586, 587, 588, 589, 590, 629, 633, 634, 635, 636, 638, 639, 725], "gradtol": [26, 569], "comptol": [26, 569], "complementar": 26, "costtol": [26, 569], "max_it": [26, 143, 150, 158, 159, 160, 161, 162, 165, 169, 175, 190, 569], "150": [26, 569, 583], "step_control": [26, 107, 172, 198, 569], "enabl": [26, 190, 569, 717, 718, 719, 720], "sc": [26, 107, 151, 172, 198, 523, 569, 583, 689], "red_it": [26, 569], "reduct": [26, 569, 583], "cost_mult": [26, 168, 169, 170, 171, 172], "improv": [26, 43, 723], "3rd": [26, 42, 107, 224, 230, 462, 464, 505, 507, 512, 513, 515, 539, 540, 718], "xi": [26, 569], "99995": [26, 569], "alpha": [26, 66, 175, 237, 568, 569], "sigma": [26, 569], "z0": [26, 244, 471, 569, 592, 593, 723], "alpha_min": [26, 569], "alpha_p": 26, "alpha_d": 26, "smaller": [26, 42, 467, 468, 469, 569, 614, 644], "rho_min": [26, 569], "rho_t": [26, 569], "rho_max": [26, 569], "mu_threshold": [26, 569], "kt": [26, 569], "forc": [26, 107, 569], "max_steps": [26, 569], "1e10": [26, 569], "norm": [26, 158, 159, 161, 165, 185, 569], "exce": [26, 569, 632], "full_hist": 26, "hist": [26, 31, 158, 159, 161, 165], "trajectori": [26, 31, 62, 158, 159, 161, 165], "altern": [26, 30, 31, 62, 107, 108, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 165, 169, 170, 171, 172, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 633, 634, 635, 636, 638, 639], "algorithm": [26, 30, 107, 147, 151, 158, 159, 160, 161, 162, 165, 169, 172, 198, 518, 520, 556, 569, 583, 592, 629, 633, 634, 635, 636, 638, 639, 723], "exit": [26, 31, 36, 102, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 177, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 232, 477, 756], "reach": [26, 31, 178, 179, 180, 190, 477, 478, 480, 486, 489, 494, 496, 569, 632], "fail": [26, 31, 170, 190, 197, 224, 226, 227, 230, 231, 441, 443, 445, 569, 629, 632, 633, 634, 635, 636, 638, 639], "feascond": [26, 31], "gradcond": [26, 31], "compcond": [26, 31], "costcond": [26, 31], "gamma": [26, 31], "stepsiz": [26, 31, 190, 632], "alphap": [26, 31], "alphad": [26, 31], "messag": [26, 31, 66, 107, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 165, 180, 190, 192, 224, 226, 227, 229, 230, 439, 472, 478, 550, 569, 583, 620, 621, 623, 624, 626, 632, 642], "langrang": [26, 31, 107, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "kuhn": [26, 31, 107, 144, 145, 146, 147, 148, 149, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 541, 542, 545, 546, 597], "tucker": [26, 31, 107, 144, 145, 146, 147, 148, 149, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 541, 542, 545, 546, 597], "mu_l": [26, 31, 106, 107, 109, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "mu_u": [26, 31, 106, 107, 109, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "almost": [26, 31, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 165, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "fmincon": [26, 107, 119, 120, 154, 166, 167, 168, 169, 170, 171, 172, 174, 520, 569, 572, 583, 694], "toolbox": [26, 31, 37, 104, 107, 119, 120, 121, 124, 130, 131, 132, 134, 135, 136, 138, 139, 144, 146, 147, 148, 149, 150, 159, 160, 161, 162, 165, 169, 170, 171, 172, 192, 194, 196, 197, 198, 199, 200, 201, 216, 233, 569, 583, 584], "aeq": [26, 31, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "beq": [26, 31, 144, 145, 146, 147, 148, 149, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "en": [26, 169, 170, 171, 172], "wikipedia": [26, 169, 170, 171, 172], "wiki": [26, 169, 170, 171, 172], "nonlinear_program": [26, 169, 170, 171, 172], "f2": [26, 159, 161, 169, 170, 171, 172, 471, 543], "gh2": [26, 169, 170, 171, 172], "hess2": [26, 169, 170, 171, 172], "nargin": [26, 169, 170, 171, 172, 233], "rai": 26, "wang": 26, "hi": 26, "phd": 26, "dissert": 26, "applic": [26, 110, 111, 112, 143, 150, 175, 523, 534], "multi": [26, 157, 452, 569], "period": [26, 42, 58, 60, 62, 66, 74, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 103, 569, 723], "secur": [26, 43, 62, 70, 73, 81], "market": 26, "thesi": 26, "cornel": [26, 192, 531, 533, 538, 569, 583], "univers": 26, "2007": 26, "murillo": 26, "sanchez": 26, "thoma": 26, "issu": [26, 233, 452, 469], "transact": [26, 467, 468, 564, 614], "vol": [26, 467, 468, 564, 614], "aug": [26, 43], "1185": 26, "1193": 26, "1109": [26, 467, 468, 564], "tpwr": 26, "901301": 26, "unconstrain": [27, 173, 471, 541, 552, 596, 597], "banana": [27, 173], "x_1": [28, 163, 164, 174, 184, 237], "x_2": [28, 163, 164, 174, 184, 237], "x_3": [28, 174], "varargin": [29, 75, 77, 78, 79, 106, 107, 113, 152, 161, 165, 176, 221, 237, 254, 257, 297, 304, 309, 311, 314, 316, 318, 327, 392, 397, 451, 456, 457, 458, 459, 462, 508, 515, 517, 520, 567, 569, 583, 584, 592, 628, 631, 637, 641, 723], "mpver": [29, 75, 113, 152, 176, 460, 726], "previou": [30, 177, 185, 186, 187, 190, 460, 475, 477, 478, 483, 484, 487, 492, 569, 633, 634, 635, 636, 638, 639], "qa": 30, "gilbert": [30, 165, 569], "peierl": [30, 165, 569], "permut": 30, "umfpack": [30, 165, 569], "rh": [30, 108, 237, 462, 555], "alwai": [30, 42, 66, 107, 177, 477, 517], "backslash": [30, 107, 165, 569], "decomposit": [30, 569], "substitut": [30, 569], "short": [30, 159, 242, 261, 292, 294, 295, 296, 471, 541], "cut": 30, "overhead": 30, "thu": [30, 42], "better": [30, 74, 569], "small": [30, 165, 569], "nout": 30, "vec": 30, "thresh": [30, 107], "lu3": [30, 165, 569], "lu3a": 30, "lu4": [30, 165, 569], "lu5": [30, 165, 569], "lu3m": 30, "lu3am": 30, "lu4m": 30, "lu5m": 30, "paren": [30, 66, 107], "arg": [30, 61, 107, 145, 165, 190, 195, 392, 451, 463, 477, 490, 497, 569], "amd": [30, 165, 569], "pivot": 30, "threshold": [30, 58, 107], "mtype": 30, "nonsymmetr": 30, "iparm": 30, "1st": [30, 42, 60, 61, 177, 293, 393, 464, 477, 497, 498, 499, 500, 501, 502, 592, 718], "2nd": [30, 42, 224, 230, 293, 392, 393, 462, 464, 497, 498, 499, 500, 501, 502, 512, 513, 515, 526, 539, 540, 592, 668, 718], "dparm": 30, "tr": [30, 107], "miss": [31, 39, 61, 107, 292, 293, 296, 393, 394, 395, 593], "quadprog": [31, 107, 138, 139, 144, 146, 147, 148, 149, 192, 194, 196, 197, 198, 199, 200, 201, 569, 582, 583], "v8doc": [31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201], "sa": [31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201], "sashtml": [31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201], "iml": [31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201], "chap8": [31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201], "sect12": [31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201], "htm": [31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201], "1003": [31, 144, 145, 146, 148, 149, 192, 193, 194, 196, 197, 198, 199, 200, 201], "quiet": [32, 33, 34, 35, 67, 68, 69, 70, 71, 72, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 645, 647, 648, 649, 660, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755], "mplinsolv": [34, 37, 38, 107, 165, 569], "qps_mip": [35, 37, 38, 198], "exit_on_fail": [36, 102, 215, 232, 756], "unless": [36, 63, 102, 157, 215, 224, 226, 227, 229, 230, 232, 298, 392, 453, 454, 592, 632, 633, 634, 635, 636, 638, 639, 756], "t_run_test": [36, 102, 215, 222, 223, 224, 226, 227, 229, 230, 232, 233, 234, 756], "all_ok": [36, 102, 215, 228, 232, 756], "web": [37, 104, 216, 758], "asid": [37, 104, 216], "mipsver": [37, 38], "mips_example1": [37, 38], "mips_example2": [37, 38], "test_mip": [37, 38], "t_mip": [37, 38], "t_mips_pardiso": [37, 38], "t_mplinsolv": [37, 38], "t_qps_mip": [37, 38], "have_feature_lu_vec": [37, 38], "mpci": [39, 62], "fuel": [39, 522, 523], "new_mpc": [39, 40, 41], "gen_typ": 39, "insert": [39, 245, 246, 641], "bottom": [39, 79, 650], "genfuel": [39, 40, 41, 62, 460, 471, 515, 523, 726], "unknown": [39, 522, 523], "newli": [39, 40, 41, 59, 245], "storag": [40, 42, 48, 60, 63, 66, 74, 77, 78, 79, 84, 99, 522, 523, 548], "xgd": [40, 41, 42, 59, 60, 62, 64], "sd": [40, 42, 62, 63, 429, 467, 468, 469, 562], "xgen": 40, "storagedata": [40, 42, 60, 62, 63], "new_xgd": [40, 41], "new_sd": 40, "storageunitdata": 40, "xgendata": [40, 41, 42, 54, 55, 56, 57, 60, 62, 63, 64], "mat": [40, 41, 59, 61, 62, 63, 64, 471, 550, 632, 633, 634, 635, 636, 638, 639, 641, 642], "xgd_tabl": [40, 41, 64], "filenam": [40, 41, 640, 641, 642], "loadstoragedata": [40, 62, 104, 105], "sd_tabl": [40, 63], "ess": [40, 522], "loadxgendata": [40, 41, 59, 62, 104, 105], "wind": [41, 50, 51, 52, 53, 59, 62, 103, 522, 523, 623], "windunitdata": 41, "profil": [42, 47, 51, 52, 59, 60, 62, 103], "argin": 42, "dim": [42, 60, 62, 297, 451, 512, 513, 515, 525, 539, 540, 644], "chgtab": [42, 464, 642], "chgtabsi": 42, "xgdi": [42, 62], "sdi": 42, "ctset": 42, "dimension": [42, 59, 62, 63, 64, 106, 293, 294, 368, 392, 393, 512, 539], "chgtype": [42, 60], "nt": [42, 49, 60, 62, 74, 103], "nj_max": [42, 60, 74], "idx_profil": [42, 59, 62, 103, 104, 105], "chgtabi": 42, "storagei": [42, 62], "ctsetsi": 42, "contingencydata": [42, 60], "nor": 42, "scenario": [42, 60, 62, 74, 103], "conting": [42, 43, 46, 60, 62, 66, 74, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93], "expand": [42, 62], "singleton": [42, 60], "ignor": [42, 60, 107, 157, 195, 224, 339, 514, 547, 569, 583, 620, 720], "mpcdata": [42, 60], "mandatori": 42, "oppos": [42, 66, 218, 237, 368, 451, 452, 471, 558], "nj": [42, 103], "unspecifi": [42, 522, 720], "probabl": [42, 49, 58, 62, 464, 544, 558], "correctli": 42, "inconsist": 42, "resp": 42, "ie": [42, 141, 569], "dedic": 42, "binari": [42, 107, 144, 145, 146, 147, 148, 149, 392, 523], "span": 42, "cghtype": 42, "118": 43, "caseformat": [43, 44, 45, 81, 82, 83, 84, 460, 472, 511, 592, 629, 632, 633, 634, 635, 636, 638, 639, 646, 650, 651, 652, 653, 654, 655, 656, 726, 738], "ieee118cdf": 43, "txt": [43, 224, 230, 471, 569, 583, 624, 626], "sep": 43, "2004": 43, "cdf2matp": 43, "rev": [43, 620, 624, 640], "warn": [43, 66, 107, 144, 145, 146, 147, 148, 149, 472, 620, 621, 623, 624, 626, 642], "cdf": [43, 472], "lab": [43, 471], "ec": [43, 471], "uw": [43, 471], "edu": [43, 141, 192, 471, 531, 533, 538, 569, 583], "pstca": [43, 471], "psap": 43, "mar": [43, 537], "2006": 43, "archiv": 43, "1961": 43, "2010": [43, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 757], "cm": 43, "cz": 43, "group": [43, 59, 150, 470, 474, 515, 519], "thermal": 43, "cabl": 43, "safe": 43, "config": 43, "345kv": 43, "circuit": [43, 471], "161": 43, "138kv": 43, "split": [43, 137, 532, 618], "ramp_agc": [43, 511, 546], "ramp_10": [43, 511, 546], "ramp_30": [43, 511, 546], "c118": 43, "2012": 43, "consider": 43, "compromis": 43, "procedur": [43, 569], "synchron": [43, 522, 523], "capacitor": 43, "decreas": 43, "104": 43, "hydro": [43, 522], "close": [43, 472], "geograph": 43, "locat": [43, 189, 190, 233, 453, 454, 491, 515, 517, 632], "retir": 43, "yield": [43, 472, 563], "minu": [43, 561], "chosen": [43, 60], "impact": 43, "deviat": [43, 632, 638], "criterion": [43, 190, 569], "wors": 43, "worst": 43, "upgrad": 43, "76": 43, "caus": [43, 190, 218, 632], "infeas": [43, 145, 148, 192, 193, 195, 199, 472, 632], "exceed": [43, 193, 720], "appar": [43, 261, 293, 503, 569, 583, 596], "enough": [43, 192, 526], "77": 43, "addition": [43, 632, 633, 634, 635, 636, 638, 639], "330": 43, "defici": 43, "difficult": 43, "resort": 43, "wherea": 43, "stochast": [45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 66, 70, 73, 98], "commit": [45, 46, 47, 48, 51, 52, 53, 57, 60, 66, 72, 73, 74, 79, 80, 97, 98, 100], "ex_case3a": [45, 104, 105], "startup": [45, 269, 454, 471, 511, 543], "shutdown": [45, 471, 511, 543], "transit": [49, 58, 62, 78], "definit": [49, 245, 534], "determinist": [52, 62, 67, 68, 69, 71, 72, 95, 569, 583], "multiperiod": [55, 66, 71, 95], "ramp": [55, 58, 74, 77, 99, 282, 471, 546], "md0": 58, "mask": [58, 559], "taken": [58, 95, 107, 153, 154, 156, 190, 467, 468, 469, 471, 506, 507, 539, 540, 541, 552, 560, 614, 626, 632, 717], "transmat": [58, 62], "ve": 58, "profilesi": [59, 62], "profiles0": 59, "mycas": [59, 524], "myxgendata": 59, "iwind": 59, "addwind": [59, 104, 105], "mywindunit": 59, "mywindprofil": 59, "loadmd": [59, 60, 66, 104, 105], "mytransmat": 59, "apply_profil": [59, 62, 104, 105], "pr_rep": 60, "pr_rel": 60, "pr_add": 60, "pr_tcont": 60, "pr_type": 60, "pr_tmpcd": 60, "pr_txgd": 60, "pr_tctd": 60, "pr_tstgd": 60, "pr_chgtype": 60, "question": [60, 218, 720], "offer": [60, 64], "ct_tbu": [60, 511, 544], "ct_tgen": [60, 464, 511, 544], "ct_tbrch": [60, 464, 511, 544], "ct_tareabu": [60, 511, 544], "ct_tareagen": [60, 511, 544], "ct_tareabrch": [60, 511, 544], "ct_tload": [60, 511, 544], "ct_tareaload": [60, 464, 511, 544], "ct_tgencost": [60, 511, 544], "ct_tareagencost": [60, 511, 544], "commitsch": [60, 64], "initialpg": [60, 64], "rampwearcostcoeff": [60, 64], "positiveactivereservepric": [60, 64], "positiveactivereservequant": [60, 64], "negativeactivereservepric": [60, 64], "negativeactivereservequant": [60, 64], "positiveactivedeltapric": [60, 64], "negativeactivedeltapric": [60, 64], "positiveloadfollowreservepric": [60, 64], "positiveloadfollowreservequant": [60, 64], "negativeloadfollowreservepric": [60, 64], "negativeloadfollowreservequant": [60, 64], "minstoragelevel": [60, 63], "maxstoragelevel": [60, 63], "outeff": [60, 63], "ineff": [60, 63], "lossfactor": [60, 63], "rho": [60, 63], "usual": [60, 509, 569, 583, 591, 592], "idx_ct": [60, 460, 464, 511, 726], "ct_col": [60, 511, 544], "old": [60, 110, 112, 143, 147, 150, 198, 514, 544, 547, 556, 569, 583], "vale": 60, "pre": [60, 106, 237, 244, 441, 443, 445, 446], "iii": 60, "interpret": [60, 111, 290, 625, 626], "whenev": 60, "expans": 60, "within": [60, 106, 107, 237, 238, 392, 449, 452, 462, 480, 496, 555], "varfil": 61, "vartyp": 61, "varnam": 61, "prioriti": [61, 177, 188, 477, 490, 569], "throw": [61, 107], "regardless": [61, 151, 465], "transmati": 62, "contabi": 62, "trajdatai": 62, "contab": 62, "trajdata": 62, "n_t": [62, 74], "n_j": [62, 74], "horizon": [62, 66, 74], "older": [62, 451], "centroid": 62, "n_w": 62, "colnam": [63, 64], "correpsond": 63, "md_init": [63, 104, 105], "unitidx": 63, "expectedterminalstorageaim": 63, "expectedterminalstoragemin": 63, "expectedterminalstoragemax": 63, "initialstorag": 63, "initialstoragelowerbound": 63, "initialstorageupperbound": 63, "initialstoragecost": 63, "terminalstoragepric": 63, "terminalchargingprice0": 63, "terminaldischargingprice0": 63, "terminalchargingpricek": 63, "terminaldischargingpricek": 63, "terminalpg": 64, "commitkei": [64, 66], "initialst": 64, "minup": 64, "mindown": 64, "potenti": [64, 439, 477, 632], "fueltyp": 64, "gen_statu": [64, 464, 511, 546], "mdi": 66, "mdo": [66, 74], "func": [66, 157, 529], "cplex": [66, 107, 110, 117, 144, 147, 156, 194, 198, 569, 571, 583, 683], "gurobi": [66, 107, 112, 113, 123, 146, 147, 156, 196, 198, 217, 569, 574, 583, 686], "build_model": 66, "miqp": [66, 107, 133, 144, 146, 147, 148, 156, 202, 207, 216, 460, 676], "coordin": [66, 190, 237, 439, 471, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 515, 543, 569, 585, 586, 588, 589, 594, 595, 757], "solve_model": 66, "resolve_new_cost": 66, "unchang": [66, 514], "dc_model": 66, "fixed_r": 66, "contstraint": 66, "never": 66, "q_coordin": 66, "security_constraint": 66, "terminal_target": 66, "cyclic": 66, "simultan": [66, 107, 397, 569, 583], "uc": [66, 69, 79, 80, 86], "down": [66, 635, 639, 723], "roll": [66, 177, 180, 477], "happen": 66, "alg": [66, 107, 147, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 172, 174, 190, 198, 324, 556, 569, 592], "miqps_mast": [66, 107, 117, 122, 123, 124, 133, 144, 145, 146, 148, 149, 156, 202, 216, 217, 567], "qps_master": [66, 107, 114, 116, 117, 122, 123, 125, 126, 131, 132, 133, 134, 137, 138, 139, 156, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 214, 216, 217, 628], "skip_pric": [66, 107, 144, 145, 146, 147, 148, 149], "skip": [66, 107, 144, 145, 146, 147, 148, 149, 157, 229, 233], "price_stage_warn_tol": [66, 107, 144, 145, 146, 147, 148, 149], "mi": [66, 107, 144, 145, 146, 147, 148, 149], "econom": [67, 527], "consid": [74, 226, 397, 522, 523], "noth": [74, 239, 245, 291, 298, 439, 569, 583], "though": [74, 449], "incomplet": 74, "nb": [74, 107, 467, 468, 469, 475, 477, 492, 497, 499, 500, 501, 502, 523, 552, 560, 562, 564, 565, 569, 583, 591, 632, 643, 721], "n_b": 74, "n_g": 74, "nl": [74, 466, 467, 468, 469, 497, 498, 501, 504, 506, 524, 564, 565, 591], "n_l": 74, "nc_max": 74, "n_c": 74, "rup": 74, "upward": 74, "rdn": 74, "downward": 74, "lamp": 74, "muf": 74, "selector": [76, 440, 442, 444, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "default_opt": [76, 110, 111, 112, 143, 150, 175, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "valid_opt": [76, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "nested_struct_copi": [76, 203, 216, 217, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "plot": [77, 78, 79, 80, 96, 97, 98, 100, 105, 177, 190, 477, 569], "option1_nam": [77, 78, 79], "option1_valu": [77, 78, 79], "parenthesi": [77, 78, 79, 80], "saveit": [77, 78, 79, 80], "saveal": [77, 78, 79], "savepath": [77, 78, 79, 80, 454], "savenam": [77, 78, 79, 80], "placehold": [77, 78, 79, 80, 107, 190], "size_factor": [77, 78, 79, 80], "font": [77, 78, 79, 80], "marker": [77, 78, 79, 80], "show_pc": 77, "pc": 77, "show_variable_pmax": 77, "show_limit": 77, "show_conting": 77, "show_reserv": 77, "show_grid": [77, 78], "divid": [77, 78], "staircas": 78, "evenli": [78, 103, 616], "align": 78, "smooth": [78, 569, 583], "displac": 78, "sort_tol": 78, "round": 78, "nearest": 78, "sort": 78, "show_expected_initi": 78, "show_expected_fin": 78, "show_adjusted_dispatch": 78, "show_dispatch": 78, "md2": 79, "titl": [79, 80, 190, 245], "subtitl": [79, 80], "legend": [79, 80, 190], "uc1": [79, 80], "uc2": [79, 80], "xlabel": [79, 80, 190], "axi": [79, 80, 190, 643], "ylabel": [79, 80, 190], "rowlabel": [79, 80], "pff": 79, "optin": 80, "red": [80, 297], "status": [80, 239], "grai": 80, "case30": [81, 633, 634, 635, 636, 638, 639, 650], "case30v19": 81, "segment": [81, 471, 543], "tlmp": [83, 84, 99], "cong": [83, 84], "chen": [83, 84], "most_ex5_mpopf": [95, 104, 105], "create_plot": [96, 97, 98, 100], "create_pdf": [96, 97, 98, 100], "savedir": [96, 97, 98, 100], "choic": [96, 97, 98, 100, 190, 233, 560, 569], "sp_plot": 96, "spuc_plot": 97, "suc_plot": 98, "deteminist": 100, "uc_plot": 100, "dynam": [101, 723], "space": [103, 616], "getprofil": [103, 104, 105], "most_summari": [104, 105], "plot_gen": [104, 105], "plot_storag": [104, 105], "plot_uc": [104, 105], "plot_uc_data": [104, 105], "mostver": [104, 105], "addgen2mpc": [104, 105], "addstorag": [104, 105], "filter_ramp_transit": [104, 105], "uniformwindprofil": [104, 105], "most_ex1_": [104, 105], "most_ex2_dcopf": [104, 105], "most_ex3_dcopf_w_uc": [104, 105], "most_ex4_dcopf_ss": [104, 105], "most_ex6_uc": [104, 105], "most_ex7_suc": [104, 105], "ex_case3b": [104, 105], "ex_contab": [104, 105], "ex_load_profil": [104, 105], "ex_storag": [104, 105], "ex_transmat": [104, 105], "ex_wind": [104, 105], "ex_wind_profil": [104, 105], "ex_wind_profile_d": [104, 105], "ex_wind_uc": [104, 105], "ex_xgd": [104, 105], "ex_xgd_ramp": [104, 105], "ex_xgd_r": [104, 105], "ex_xgd_uc": [104, 105], "test_most": [104, 105], "t_most_3b_1_1_0": [104, 105], "t_most_3b_1_1_2": [104, 105], "t_most_3b_3_1_0": [104, 105], "t_most_3b_3_1_2": [104, 105], "t_most_30b_1_1_0": [104, 105], "t_most_30b_1_1_17": [104, 105], "t_most_30b_3_1_0": [104, 105], "t_most_30b_3_1_17": [104, 105], "t_most_fixed_r": [104, 105], "t_most_30b_1_1_0_uc": [104, 105], "t_most_sp": [104, 105], "t_most_spuc": [104, 105], "t_most_mpopf": [104, 105], "t_most_uc": [104, 105], "t_most_suc": [104, 105], "t_most_tlmp": [104, 105], "t_most_w_d": [104, 105], "c118swf": [104, 105], "t_case30_most": [104, 105], "t_case3_most": [104, 105], "t_case_tlmp": [104, 105], "t_case_tlmp_storag": [104, 105], "loadgenericdata": [104, 105], "mpoption_info_most": [104, 105], "block": [106, 107, 159, 252, 392, 462, 512, 539, 592], "def_set_typ": [106, 107, 309, 311, 314, 316, 318, 392, 393, 394, 395, 396, 462], "set_typ": [106, 107, 392, 462], "userdata": [106, 107, 239], "add_named_set": [106, 107, 309, 311, 314, 316, 318, 392, 462], "declar": 106, "lin": [106, 107, 443, 462, 509, 591, 592], "init_set_typ": [106, 107, 309, 311, 314, 316, 318, 392, 462], "ideal": [106, 238, 463], "due": [106, 107], "bug": [106, 192, 452], "alter": 106, "savannah": [106, 452], "52614": 106, "workaround": 106, "sure": 106, "add_": [106, 107], "valid_named_set_typ": 106, "public": [106, 107, 462], "shallow": [106, 107], "describe_idx": [106, 107], "361": 106, "semicolon": [106, 107, 239, 242, 245, 297, 298, 392, 397, 451, 462], "display_set": 106, "screen": [106, 472, 569, 583], "get_userdata": [106, 107], "retreiv": [106, 107, 462], "getn": [106, 107], "init_indexed_nam": [106, 107, 462], "params_": 106, "v0": [106, 107, 392, 462, 516, 521, 585, 586, 587, 588, 589, 590, 725], "a_struct": [106, 107], "an_obj": 106, "stype": 106, "sname": 106, "set_type_idx_map": [106, 392], "group_by_nam": [106, 392], "consolid": [106, 392], "field1": 106, "field2": 106, "var_ord": 106, "suppos": 106, "unpack": 106, "idx_list": [106, 107, 327, 392, 462], "vl": [106, 107, 392, 462, 592], "vu": [106, 107, 392, 462], "varset": [106, 107, 327, 462], "nle": [106, 107, 244, 443, 462, 591, 592], "computed_bi": [106, 107, 462], "qdc": [106, 107, 462], "cp": [106, 107, 327, 462, 523, 602], "nlc": [106, 107, 462], "dim_list": [106, 107, 462], "pmismatch": [106, 107, 462], "idx1": [106, 107, 397], "idx2": [106, 107, 397], "set_type1": [106, 107], "set_type2": [106, 107], "foo": [106, 107, 157, 233], "mu_l_foo": [106, 107], "mu_u_foo": [106, 107], "bar": [106, 107, 233], "nbar": [106, 107], "prefer": [106, 107, 511], "haven": [106, 107], "om": [107, 166, 167, 168, 327, 443, 462, 463, 509, 591, 592, 596, 597, 598, 599, 600, 605, 606, 607, 631], "set_param": 107, "intial": 107, "params_var": [107, 392], "params_lin_constraint": 107, "params_nln_constraint": 107, "eval_nln_constraint": 107, "eval_nln_constraint_hess": 107, "params_nln_cost": 107, "params_quad_cost": 107, "eval_nln_cost": 107, "eval_quad_cost": 107, "problem_typ": 107, "get_soln": 107, "parse_soln": 107, "is_solv": 107, "has_parsed_soln": 107, "varsets_cell2struct": 107, "varsets_idx": 107, "varsets_len": 107, "varsets_x": 107, "indentifi": 107, "cach": [107, 218, 442, 444, 462], "ghne": 107, "pmi": [107, 591, 592], "ghni": 107, "ghl": 107, "conform": [107, 555], "prob_typ": 107, "eflag": 107, "jac": [107, 158, 159, 160, 162, 165, 190, 592, 723], "leq": [107, 206], "nleq": [107, 153, 204, 208, 216], "prob": [107, 165], "lagrang": [107, 168, 542, 595, 599, 606, 609, 611, 613], "an_om": 107, "likewis": [107, 462], "subsequ": [107, 177, 218, 462, 486, 489, 514], "4th": [107, 392, 462, 464, 498, 500, 502, 512, 513, 539, 540], "is_mixed_integ": 107, "stash": 107, "effici": [107, 467, 511, 555], "iseq": 107, "d2g": [107, 294, 393, 599, 606], "IN": [107, 462], "5th": [107, 464, 499, 501, 504, 506, 539], "6th": [107, 464], "nx": [107, 144, 145, 146, 147, 148, 149, 177, 178, 179, 190, 302, 462, 477, 480, 482, 486, 489, 494, 496, 661, 662], "pgcost": 107, "quad_cost1": 107, "q1": 107, "c1": [107, 471, 472, 543], "lin_cost2": 107, "c2": [107, 472], "k2": 107, "lin_con_1": 107, "nle_con_b": 107, "want_vector": 107, "eval_lin_constraint": 107, "ax_u": 107, "l_ax": 107, "fetch": 107, "mupmin": 107, "mupmax": 107, "dg_b_2_3": 107, "memori": [107, 192, 569, 583], "avl": [107, 554], "lvl": [107, 554], "uvl": [107, 554], "nv": [107, 392], "pg0": [107, 392], "zij0": [107, 392], "zijmin": 107, "zijmax": 107, "ztype": [107, 392], "deprec": [107, 471, 554, 556, 567, 569, 591, 628, 676, 710, 721], "accept": [107, 290], "unbound": [107, 145, 193, 195, 471, 541, 552, 720], "vmin": [107, 472, 495, 511, 542, 569, 720], "vmax": [107, 472, 495, 511, 542, 569, 720], "nlps_master": [107, 119, 120, 125, 126, 128, 154, 169, 170, 171, 173, 174, 205, 216, 217], "nleqs_mast": [107, 121, 153, 158, 159, 160, 161, 163, 164, 165, 190, 204, 216, 217], "mosek": [107, 133, 147, 148, 150, 151, 156, 198, 199, 569, 580, 583, 690], "linprog": [107, 131, 132, 147, 149, 195, 198, 201, 569, 578, 583], "glpk": [107, 111, 122, 145, 147, 156, 195, 198, 569, 573, 685], "bpmpd": [107, 114, 156, 192, 198, 569, 583], "milp": [107, 122, 124, 133, 144, 145, 146, 147, 148, 156, 202, 217, 460], "tbx": [107, 147, 198, 520, 692], "intlingprog": 107, "minlp": [107, 154], "art": [107, 128, 129, 130, 154, 171, 172, 569, 577, 583, 696], "knitro": [107, 128, 129, 130, 154, 171, 172, 174, 569, 577, 583, 696], "bpmpd_mex": [107, 114, 192, 198, 569, 583, 681], "clp": [107, 116, 134, 193, 198, 569, 570, 682], "fast": [107, 159, 162, 324, 516, 556, 569, 583, 725], "newon": 107, "fsolv": [107, 121, 153, 155, 159, 160, 161, 162, 165], "gauss": [107, 158, 161, 162, 521, 569, 583, 725], "seidel": [107, 158, 161, 162, 521, 569, 583], "ipopt": [107, 125, 126, 143, 154, 170, 172, 174, 197, 198, 569, 576, 583, 695], "coin": [107, 116, 125, 134, 143, 170, 172, 193, 197, 198, 569, 583], "pure": [107, 172, 198, 569, 583], "mips_opt": [107, 172, 198], "variant": [107, 172, 198, 583], "osqp": [107, 137, 175, 176, 198, 200, 217, 569, 581, 691], "ot": [107, 147, 156, 198, 523, 569], "intlinprog": [107, 124, 147, 149, 575], "bp_opt": [107, 192, 198], "bp": [107, 114, 192, 198, 516, 556], "clp_opt": [107, 193, 198], "cplex_opt": [107, 144, 147, 194, 198, 216, 217, 569, 583], "fd_opt": [107, 159, 162], "nleqs_fd_newton": [107, 162, 216, 217], "fmincon_opt": [107, 169, 172], "fsolve_opt": [107, 160, 162], "glpk_opt": [107, 145, 147, 195, 198], "grb_opt": [107, 112, 146, 147, 196, 198, 583], "gs_opt": [107, 161, 162], "nleqs_gauss_seidel": [107, 158, 162, 216, 217], "intlinprog_opt": [107, 147, 149], "ipopt_opt": [107, 170, 172, 197, 198, 216, 217, 569, 583], "knitro_opt": [107, 171, 172, 583], "leq_opt": 107, "absolut": [107, 464, 517], "linprog_opt": [107, 147, 149, 198, 201], "mosek_opt": [107, 147, 148, 198, 199, 216, 217, 569, 583], "newton_opt": [107, 162, 165], "nleqs_newton": [107, 158, 162, 216, 217], "osqp_opt": [107, 198, 200, 216, 217, 569], "quadprog_opt": [107, 198, 201], "failur": [107, 147, 158, 159, 160, 161, 162, 165, 171, 172, 198, 439], "elaps": [107, 233, 439, 592, 619, 632, 633, 634, 635, 636, 638, 639], "sec": [107, 239, 471, 546], "pnes_mast": [107, 155, 177, 182, 183, 184, 188, 189, 213, 216, 217], "mp_linsolv": 107, "fcn1": 107, "my_cost_function1": 107, "other_arg": 107, "fcn2": 107, "my_cost_function2": 107, "mycost1": 107, "mycost2": 107, "constrainst": 107, "recheck": 107, "pne": [107, 155, 177, 185, 186, 187, 188, 189, 210, 213, 216], "dx": 107, "friend": [107, 153, 154, 155, 156], "qmi": [107, 591, 592], "nne": 107, "nni": 107, "nnc": 107, "st": [107, 467, 468, 469, 479, 497, 506, 523, 591, 592], "ieq": [108, 109], "igt": [108, 109], "ilt": [108, 109], "ae": [108, 109], "ai": [108, 109, 555], "bi": [108, 109], "convert_lin_constraint_multipli": [108, 216, 217], "eq": 109, "convert_lin_constraint": [109, 216, 217], "fname": [110, 111, 112, 143, 150, 175, 242, 243, 439, 517, 549, 569, 619, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642], "normal": [110, 111, 112, 143, 150, 175, 177, 185, 186, 187, 238, 475, 477, 483, 484, 487, 492, 596, 632, 637, 718, 720], "cplexoptimset": 110, "modified_opt": [110, 111, 112, 143, 150, 175], "violat": [110, 112, 143, 150, 171, 175, 284, 479, 480, 485, 486, 488, 489, 495, 496, 569, 583, 638, 720], "simplex": [110, 132, 151, 569, 583], "barrier": [110, 569, 583], "conflict": 110, "sift": [110, 569, 583], "tune": 110, "lpmethod": [110, 569], "qpmethod": [110, 569], "opt_fnam": [110, 111, 112, 143, 150, 175, 569], "cplex_user_options_": 110, "Their": [110, 111, 112, 143, 150, 175, 564], "preced": [110, 111, 112, 143, 150, 153, 154, 155, 156, 175], "cplex_user_options_3": 110, "thread": [110, 112, 569, 583], "refactor": 110, "timelimit": [110, 112, 569, 583], "10000": 110, "ibm": [110, 117, 569], "knowledgecent": 110, "sssa5p": 110, "cplexlp": [110, 117, 144, 194], "cplexqp": [110, 117, 144, 194], "msglev": 111, "glpk_user_options_3": 111, "lpsolver": 111, "feasibilitytol": 112, "displayinterv": 112, "outputflag": 112, "logtoconsol": 112, "gurobi_user_options_": 112, "gurobi_user_options_3": 112, "optimalitytol": 112, "barconvtol": 112, "iterationlimit": 112, "3000": 112, "bariterlimit": 112, "200": [112, 198, 569, 583], "crossov": 112, "presolv": 112, "bpopt": 114, "catch": 115, "me": 115, "catchm": 115, "try": 115, "OR": [116, 125, 134, 193], "ilog": 117, "evalc": 118, "ver": [120, 132], "int": [120, 514], "mtd": 120, "fmincon_ipm": 120, "kit": [122, 145, 195], "r2014a": 124, "ipopt_auxdata": 126, "isequaln": 127, "knitromatlab": [128, 129, 171], "knitro_nlp": [129, 171], "have_feature_knitro": [129, 130, 216, 217], "ktrlink": 130, "prior": [130, 177, 477], "have_feature_linprog_d": [131, 216, 217], "availblti": 132, "linprog_d": 132, "r2014b": 132, "have_feature_linprog": [132, 216, 217], "mosekopt": [133, 148, 150, 199], "opti_clp": 134, "opti": 134, "inverseproblem": 134, "have_feature_clp": [134, 216, 217], "optimopt": [136, 160, 169, 569], "have_feature_optim": [136, 216, 217], "have_feature_quadprog_l": [138, 216, 217], "larg": [139, 156, 169, 467, 515, 569], "quadprog_l": 139, "convex": 139, "have_feature_quadprog": [139, 216, 217], "sdpt3": 140, "sdp": [140, 141, 569], "sqlp": 140, "sedumi": [141, 569], "lehigh": [141, 569], "yalmip": [142, 569], "platform": 142, "io": [142, 170, 197, 569], "constr_viol_tol": 143, "print_level": 143, "ipopt_user_options_": 143, "ipopt_user_options_3": 143, "nlp_scaling_method": 143, "none": [143, 180, 190, 218, 236, 478, 511, 542, 720], "500": [143, 147, 198, 569, 583], "derivative_test": 143, "vtype": [144, 145, 146, 147, 148, 149, 292, 392], "semi": [144, 146, 147, 534], "cplexmiqp": 144, "cplexmilp": 144, "glkp": 145, "dummi": [145, 195], "NOT": [145, 193, 195, 517, 569, 583], "errnum": [145, 195], "700": [147, 198, 583], "tour": 147, "node009": 147, "195": 147, "273": 147, "1365": 147, "msk_dpar_intpnt_tol_pfea": 150, "lp_alg": [150, 569], "msk_ipar_optim": [150, 569, 583], "msk_ipar_intpnt_max_iter": [150, 569, 583], "gap_tol": [150, 569], "msk_dpar_intpnt_tol_rel_gap": [150, 569, 583], "max_tim": [150, 569], "msk_dpar_optimizer_max_tim": [150, 569, 583], "num_thread": [150, 569], "msk_ipar_intpnt_num_thread": [150, 569, 583], "mosek_user_options_": 150, "mosek_user_options_3": 150, "msk_dpar_intpnt_tol_dfea": 150, "msk_ipar_sim_max_iter": 150, "5000000": 150, "manaul": 150, "symbol": [150, 151], "mosek_symbcon": [150, 216, 217, 569], "stuct": 151, "safer": 151, "mosek_lp_alg": [151, 583], "v7": 151, "msk_optimizer_dual_simplex": 151, "nleqopt": 153, "nlpopt": 154, "pneopt": 155, "qpopt": 156, "nest": [157, 451, 452, 513, 515, 540], "destin": 157, "recurs": 157, "manner": 157, "valid_field": 157, "invalid": 157, "copy_mod": 157, "pointer": 157, "heirarchi": 157, "home": 157, "t_nested_struct_copi": [157, 216, 217], "sp": [158, 569], "default_max_it": 158, "need_jac": 158, "update_fcn": 158, "partial": [158, 160, 162, 165, 190, 293, 484, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 524, 561, 670], "tol": [158, 159, 160, 161, 162, 165, 169, 171, 189, 467, 468, 469, 491, 569, 583], "normf": [158, 159, 161, 165], "normdx": 158, "chilimath": [158, 160, 162, 165, 190], "lesson": [158, 160, 162, 165, 190], "advanc": [158, 160, 162, 165, 190], "algebra": [158, 160, 162, 165, 190], "f1": [158, 160, 162, 165, 471, 543], "newton_update_fcn": 158, "jac_approx_fcn": 159, "jj": 159, "approxim": [159, 165, 487, 569], "christi": [159, 161], "patton": [159, 161], "luk": [159, 161], "youtub": [159, 161], "watch": [159, 161], "pjg4yhtgerg": [159, 161], "57": [159, 161, 164], "jac_approx_fcn2": 159, "optimset": [160, 169, 569], "nleqs_cor": [161, 162, 165, 216, 217], "x_update_fcn": 161, "x_update_fcn2": 161, "core_sp": 162, "nleqs_fsolv": [162, 216, 217], "lin_solv": [165, 569], "larger": [165, 569, 644], "decomp": 165, "substitutn": 165, "reorder": [165, 463, 512, 513, 539, 540, 569], "suitabl": [166, 167, 168, 169, 569, 622, 642], "tini": [166, 168], "sparsiti": [166, 168], "nlp_costfcn": [166, 168, 216, 217], "nlp_hessfcn": [166, 167, 216, 217], "nlp_consfcn": [167, 168, 216, 217], "bfg": [169, 569, 583], "lbfg": [169, 569, 583], "exact": [169, 569, 583], "finit": [169, 569, 583], "sqp": [169, 569], "tol_x": [169, 171, 569], "tol_f": [169, 171, 569], "ipreturncodes__inc_8h_sourc": [170, 197], "cpu": [170, 197], "eval": [170, 197], "aret": 171, "maxit": [171, 569], "3_referencemanu": 171, "knitromatlabrefer": 171, "funccount": 171, "constrviol": 171, "firstorderopt": 171, "measur": 171, "nlps_fmincon": [172, 216, 217], "nlps_ipopt": [172, 216, 217], "nlps_knitro": [172, 216, 217], "eps_prim_inf": 175, "osqp_user_options_3": 175, "polish": 175, "5000": [175, 549], "solver_set": [175, 200], "cx": [177, 178, 179, 182, 183, 302, 477, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 495, 496, 661, 662], "px": [177, 178, 179, 302, 477, 480, 482, 486, 489, 494, 496, 661, 662], "regist": [177, 180, 188, 189, 477, 478, 490, 491, 514], "pne_register_callback": [177, 190, 216, 217], "cb": [177, 190, 477], "recent": [177, 477], "x_hat": [177, 190], "predictor": [177, 190, 440, 477, 487, 492, 632], "corrector": [177, 190, 440, 475, 477, 632], "tangent": [177, 182, 185, 186, 187, 190, 475, 477, 481, 483, 484, 487, 492, 632], "default_step": [177, 190, 477], "default_parm": [177, 190, 477], "this_step": [177, 477], "this_parm": [177, 477], "parm": [177, 190, 477], "event": [177, 178, 179, 180, 181, 182, 183, 189, 190, 302, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 491, 493, 494, 495, 496, 632], "pne_detect_ev": [177, 181, 216, 217], "care": [177, 477], "efv": [177, 182, 183], "propos": [177, 180, 477], "done_msg": [177, 178, 179, 190, 632], "reason": [177, 237, 477], "warmstart": [177, 190, 440], "warm": [177, 190, 304, 440], "rollback": [177, 180, 189, 477, 478, 480, 482, 486, 489, 491, 494, 496, 632, 661, 662], "retri": [177, 477], "request": [177, 180, 189, 442, 444, 477, 478, 486, 489, 491], "msg": [177, 178, 179, 180, 190, 224, 226, 227, 229, 230, 477, 478, 480, 482, 486, 489, 494, 496, 619, 632], "negat": [177, 477], "my_cback": [177, 188, 190], "nose": [178, 182, 190, 477, 481, 482, 569, 632], "pne_event_nos": [178, 183, 189, 216, 217], "rais": [178, 179, 480, 482, 494, 496], "pne_callback_default": [178, 179, 188, 190, 216, 217], "target_lam": [179, 180, 478, 494], "pne_event_target_lam": [179, 182, 189, 216, 217], "predict": [179, 187, 190, 475, 483, 484, 487, 492, 494, 632], "overshoot": [179, 494], "adjust": [179, 280, 286, 442, 494], "reg_ev": [180, 189], "nefv": 180, "cefv": 180, "critical_ev": [180, 478], "eidx": [180, 478], "interv": [180, 181, 478], "critic": [180, 190, 478, 558, 632], "step_scal": [180, 478], "linearli": [180, 478, 592, 593], "interpol": [180, 239, 440, 478], "estim": [180, 478, 569], "qlim": [180, 478, 489], "event_log": 181, "ev": 181, "search": [181, 550], "detec": 181, "pne_mast": 182, "stop_at": [182, 183, 190, 569, 632], "pne_register_ev": [182, 183, 190, 216, 217], "xp": [185, 186, 187, 190], "zp": [185, 186, 187, 190], "arc": [185, 187, 190, 569], "dp": [185, 186, 187], "distanc": 185, "paramer": [185, 186, 187], "pne_pfcn_natur": [185, 187, 216, 217], "pne_pfcn_pseudo_arc_len": [185, 186, 216, 217], "pne_pfcn_arc_len": [186, 187, 216, 217], "pseudo": [187, 190, 569], "lie": [187, 449], "hyperplan": 187, "orthogon": 187, "correct": [187, 190, 444, 468, 564, 569, 614, 632], "reg_cb": 188, "pne_callback_nos": [188, 216, 217], "pne_callback_target_lam": [188, 216, 217], "my_ev": [189, 190], "default_event_tol": [189, 190], "nleqs_opt": 190, "solve_bas": 190, "stop": [190, 569], "lam_stop": [190, 569], "adapt_step": [190, 569, 632], "toggl": [190, 218, 569], "adapt": [190, 569, 632], "disabl": [190, 569, 717, 718, 719, 720, 758], "adapt_step_damp": [190, 569], "damp": [190, 569, 583], "adapt_step_tol": [190, 569], "adapt_step_w": 190, "step_min": [190, 569], "step_max": [190, 569], "target_lam_tol": [190, 569], "nose_tol": [190, 569], "output_fcn": 190, "increment": [190, 226, 227, 229, 569], "paus": [190, 569], "yfcn": 190, "idx_default": 190, "xname": 190, "yname": 190, "xfcn": 190, "title2": 190, "ne": [190, 239], "lam_hat": [190, 475, 477, 487, 632], "max_lam": [190, 632], "cont_step": 190, "counter": [190, 222, 223, 439], "opposit": [190, 718], "dir_from_jac_eig": 190, "smallest": 190, "eigenvalu": 190, "pnes_callback_default": 190, "f1p": 190, "suboptim": 192, "explan": [193, 592, 593], "gkpk": 195, "400": [198, 569, 583], "glpk_option": [216, 217], "gurobi_opt": [216, 217, 569, 583], "mpopt2nleqopt": [216, 217], "mpopt2nlpopt": [216, 217], "mpopt2pneopt": [216, 217], "mpopt2qpopt": [216, 217], "gurobiv": [216, 217], "mpomver": [216, 217], "osqpver": [216, 217], "miqps_cplex": [216, 217], "miqps_glpk": [216, 217], "miqps_gurobi": [216, 217], "miqps_mosek": [216, 217], "miqps_ot": [216, 217], "pne_detected_ev": [216, 217], "qps_bpmpd": [216, 217], "qps_clp": [216, 217], "qps_cplex": [216, 217], "qps_glpk": [216, 217], "qps_gurobi": [216, 217], "qps_ipopt": [216, 217], "qps_mosek": [216, 217], "qps_osqp": [216, 217], "qps_ot": [216, 217], "nleqs_master_ex1": [216, 217], "nleqs_master_ex2": [216, 217], "nlps_master_ex1": [216, 217], "nlps_master_ex2": [216, 217], "pne_ex1": [216, 217], "qp_ex1": [216, 217], "test_mp_opt_model": [216, 217], "t_miqps_mast": [216, 217], "t_nleqs_mast": [216, 217], "t_nlps_master": [216, 217], "t_om_solve_leq": [216, 217], "t_om_solve_miqp": [216, 217], "t_om_solve_nleq": [216, 217], "t_om_solve_nlp": [216, 217], "t_om_solve_pn": [216, 217], "t_om_solve_qp": [216, 217], "t_opt_model": [216, 217], "t_pnes_mast": [216, 217], "t_qps_master": [216, 217], "have_feature_bpmpd": [216, 217], "have_feature_catchm": [216, 217], "have_feature_cplex": [216, 217], "have_feature_evalc": [216, 217], "have_feature_fmincon_ipm": [216, 217], "have_feature_fmincon": [216, 217], "have_feature_fsolv": [216, 217], "have_feature_glpk": [216, 217], "have_feature_gurobi": [216, 217], "have_feature_intlinprog": [216, 217], "have_feature_ipopt_auxdata": [216, 217], "have_feature_ipopt": [216, 217], "have_feature_isequaln": [216, 217], "have_feature_knitromatlab": [216, 217], "have_feature_ktrlink": [216, 217], "have_feature_mosek": [216, 217], "have_feature_opti_clp": [216, 217], "have_feature_optimopt": [216, 217], "have_feature_osqp": [216, 217], "have_feature_sdpt3": [216, 217], "have_feature_sedumi": [216, 217], "have_feature_yalmip": [216, 217], "rtype": 218, "ver_str": 218, "vstr": 218, "ver_num": 218, "vnum": 218, "rdate": 218, "all_info": 218, "clear_cach": 218, "boolean": [218, 222, 224, 226, 227, 228, 230, 236, 237, 239, 245, 246, 392, 397, 454], "availabl": 218, "clear": 218, "011004": 218, "feb": 218, "av": 218, "have_feature_": 218, "disp": [218, 297], "have_feature_matlab": [218, 233, 234], "have_feature_octav": [218, 233, 234], "num_of_test": 222, "t_ok": [222, 223, 224, 226, 229, 230, 231, 233, 234], "t_i": [222, 223, 224, 227, 229, 230, 231, 233, 234], "t_file_match": [222, 223, 226, 227, 229, 230, 231, 233, 234], "t_str_match": [222, 223, 224, 226, 227, 229, 231, 233, 234], "t_skip": [222, 223, 224, 226, 227, 230, 233, 234], "t_end": [222, 224, 226, 227, 228, 229, 230, 233, 234], "pi": [222, 223, 226, 227, 229, 233, 524], "statist": 223, "t_begin": [223, 224, 226, 227, 228, 229, 230, 233, 234], "got_fnam": 224, "exp_fnam": 224, "rep": [224, 230], "del_got_fnam": 224, "ok": [224, 226, 227, 230, 233], "compar": [224, 230, 473, 542, 543, 626], "regexprep": [224, 230], "strrep": [224, 230], "eol": [224, 230], "test_generated_output": [224, 230], "expected_output": [224, 230], "mytest": [224, 230], "got": [226, 230], "prec": 226, "nan": [226, 559, 625, 626], "cond": 227, "expr": 227, "test_nam": 228, "t_loadcas": [228, 460, 726], "t_jacobian": [228, 460, 726], "t_hessian": [228, 460, 726], "strcmp": 230, "fileread": [230, 620, 627], "among": 233, "familiar": 233, "clone": 233, "repositori": 233, "mptestxxx": 233, "xxx": 233, "kept": [233, 477], "denot": [233, 262, 266, 272, 274, 282, 283, 568], "test_mptest": [233, 234], "resembl": 233, "t_test_fcn": [233, 234], "t_have_featur": [233, 234], "mptest_ex1": 233, "test_everything_ex1": 233, "09": 233, "mptestver": [233, 234], "guidelin": 233, "report": [233, 523, 569, 583], "claus": 233, "bsd": 233, "agenc": 233, "task_pf_legaci": [235, 460], "task_cpf_legaci": [235, 460], "task_opf_legaci": [235, 244, 460], "task_shared_legaci": [235, 441, 443, 445, 460], "dme_branch_opf": [235, 460], "dme_bus_opf": [235, 460], "dme_gen_opf": [235, 460], "dme_load_cpf": [235, 460], "dme_load_opf": [235, 460], "dme_shunt_cpf": [235, 460], "dme_shunt": [235, 286, 287, 460], "dme_shunt_opf": [235, 460], "dm_converter_mpc2_legaci": [235, 443, 460], "dmce_branch_mpc2": [235, 460], "dmce_bus_mpc2": [235, 460], "dmce_load_mpc2": [235, 446, 460], "dmce_shunt_mpc2": [235, 460], "net_model_ac": [235, 394, 395, 460], "net_model_acc": [235, 460], "nme_branch_ac": [235, 400, 401, 460], "nme_branch_acc": [235, 460], "nme_branch_acp": [235, 460], "nme_branch_dc": [235, 460], "nme_bus_acc": [235, 460], "nme_bus_dc": [235, 460], "nme_gen_ac": [235, 418, 419, 460], "nme_gen_acc": [235, 460], "nme_gen_dc": [235, 460], "nme_load_ac": [235, 430, 431, 460], "nme_load_acc": [235, 460], "nme_load_acp": [235, 460], "nme_load_dc": [235, 460], "nme_shunt": [235, 434, 437, 460], "nme_shunt_ac": [235, 435, 436, 460], "nme_shunt_acc": [235, 460], "nme_shunt_acp": [235, 460], "nme_shunt_dc": [235, 460], "math_model_pf": [235, 320, 325, 460], "math_model_pf_ac": [235, 321, 322, 323, 324, 460], "math_model_pf_acci": [235, 460], "math_model_pf_acc": [235, 460], "math_model_pf_acpi": [235, 460], "math_model_pf_acp": [235, 460], "math_model_pf_dc": [235, 460], "math_model_cpf_acc": [235, 300, 460], "math_model_cpf_acci": [235, 460], "math_model_cpf_acp": [235, 303, 460], "math_model_cpf_acpi": [235, 460], "math_model_opf": [235, 298, 306, 317, 460], "math_model_opf_ac": [235, 307, 312, 460], "math_model_opf_acci": [235, 309, 460], "math_model_opf_acci_legaci": [235, 460], "math_model_opf_accs_legaci": [235, 460], "math_model_opf_acpi": [235, 314, 460], "math_model_opf_acpi_legaci": [235, 460], "math_model_opf_acps_legaci": [235, 460], "math_model_opf_dc": [235, 318, 460], "math_model_opf_dc_legaci": [235, 460], "mm_shared_pfcpf": [235, 298, 329, 337, 460], "mm_shared_pfcpf_ac": [235, 331, 334, 460], "mm_shared_pfcpf_ac_i": [235, 332, 335, 460], "mm_shared_pfcpf_acc": [235, 301, 322, 332, 460], "mm_shared_pfcpf_acci": [235, 300, 321, 460], "mm_shared_pfcpf_acp": [235, 304, 324, 335, 460], "mm_shared_pfcpf_acpi": [235, 303, 323, 460], "mm_shared_pfcpf_dc": [235, 325, 460], "mm_shared_opf_legaci": [235, 309, 311, 314, 316, 318, 443, 460], "mme_branch_pf_ac": [235, 460], "mme_branch_pf_dc": [235, 460], "mme_branch_opf": [235, 340, 343, 460], "mme_branch_opf_ac": [235, 341, 342, 460], "mme_branch_opf_acc": [235, 460], "mme_branch_opf_acp": [235, 460], "mme_branch_opf_dc": [235, 460], "mme_bu": [235, 350, 353, 354, 355, 460], "mme_bus_pf_ac": [235, 460], "mme_bus_pf_dc": [235, 460], "mme_bus_opf_ac": [235, 351, 352, 460], "mme_bus_opf_acc": [235, 460], "mme_bus_opf_acp": [235, 460], "mme_bus_opf_dc": [235, 460], "mme_gen_pf_ac": [235, 460], "mme_gen_pf_dc": [235, 460], "mme_gen_opf": [235, 367, 369, 460], "mme_gen_opf_dc": [235, 460], "mme_load": [235, 382, 383, 460], "mme_load_pf_ac": [235, 381, 460], "mme_load_pf_dc": [235, 460], "mme_load_cpf": [235, 460], "mme_shunt": [235, 388, 389, 460], "mme_shunt_pf_ac": [235, 387, 460], "mme_shunt_pf_dc": [235, 460], "mme_shunt_cpf": [235, 460], "mp_table_subclass": [235, 237, 238, 460, 729], "mapped_arrai": [235, 290, 460, 742], "dmce_reserve_gen_mpc2": [235, 450, 460], "dmce_reserve_zone_mpc2": [235, 450, 460], "dme_reserve_gen": [235, 450, 460], "dme_reserve_zon": [235, 450, 460], "mme_reserve_gen": [235, 450, 460], "mme_reserve_zon": [235, 450, 460], "dmce_bus3p_mpc2": [235, 447, 460], "dmce_gen3p_mpc2": [235, 447, 460], "dmce_load3p_mpc2": [235, 447, 460], "dmce_line3p_mpc2": [235, 447, 460], "dmce_xfmr3p_mpc2": [235, 447, 460], "dmce_buslink_mpc2": [235, 447, 460], "dme_bus3p_opf": [235, 447, 460], "dme_gen3p_opf": [235, 447, 460], "dme_load3p_opf": [235, 447, 460], "dme_line3p_opf": [235, 447, 460], "dme_xfmr3p_opf": [235, 447, 460], "dme_buslink_opf": [235, 447, 460], "nme_bus3p": [235, 405, 406, 460], "nme_bus3p_acc": [235, 447, 460], "nme_bus3p_acp": [235, 447, 460], "nme_gen3p": [235, 415, 416, 460], "nme_gen3p_acc": [235, 447, 460], "nme_gen3p_acp": [235, 447, 460], "nme_load3p": [235, 447, 460], "nme_line3p": [235, 447, 460], "nme_xfmr3p": [235, 447, 460], "nme_buslink": [235, 411, 412, 460], "nme_buslink_acc": [235, 447, 460], "nme_buslink_acp": [235, 447, 460], "mme_bus3p": [235, 348, 349, 447, 460], "mme_gen3p": [235, 365, 447, 460], "mme_line3p": [235, 379, 447, 460], "mme_xfmr3p": [235, 391, 447, 460], "mme_buslink": [235, 357, 360, 460], "mme_buslink_pf_ac": [235, 361, 362, 460], "mme_buslink_pf_acc": [235, 447, 460], "mme_buslink_pf_acp": [235, 447, 460], "mme_bus3p_opf_acc": [235, 447, 460], "mme_bus3p_opf_acp": [235, 447, 460], "mme_gen3p_opf": [235, 447, 460], "mme_line3p_opf": [235, 447, 460], "mme_xfmr3p_opf": [235, 447, 460], "mme_buslink_opf": [235, 358, 359, 460], "mme_buslink_opf_acc": [235, 447, 460], "mme_buslink_opf_acp": [235, 447, 460], "enumer": 236, "is_valid": 236, "seal": [236, 452], "poly_n": 237, "pwl_n": 237, "pwl_qty": 237, "pwl_cost": 237, "dot": [237, 451, 452], "var_nam": [237, 246, 451, 452], "subsref": [237, 238, 246, 297, 451, 452], "subsasgn": [237, 238, 297, 451, 452], "deleg": [237, 293, 452], "readabl": [237, 292, 294, 295, 296, 392], "c_0": 237, "c_1": 237, "c_n": 237, "c_j": 237, "f_1": 237, "f_2": 237, "x_n": 237, "f_n": 237, "quantii": 237, "x_j": 237, "piecwis": 237, "f_j": 237, "pu_bas": [237, 238], "polynmi": 237, "i0": [237, 297, 366, 373], "i2": [237, 366, 373, 514, 547], "x_scale": 237, "ccm": 237, "sum_": 237, "f_i": 237, "x_i": 237, "eval_poly_fcn": 237, "diff_poly_fcn": 237, "cumbersom": 238, "pp_flag": [239, 241], "pp_section_label": 239, "pp_section_list": [239, 241], "pp_have_sect": [239, 245], "pp_section": 239, "pp_get_head": [239, 245], "pp_get_headers_cnt": 239, "pp_get_headers_ext": 239, "pp_data": [239, 245], "set_bus_v_lims_via_vg": 239, "bus3p": [239, 267, 447], "new_dm": [239, 245], "retun": [239, 242, 245, 297, 298, 392, 397, 451], "elm": 239, "s0": 239, "s1": 239, "suppress": [239, 569], "blank_lin": 239, "blank": 239, "pp_get_headers_oth": [239, 241, 284], "use_vg": [239, 569], "fraction": [239, 569], "shunt": [240, 259, 261, 275, 285, 286, 287, 386, 387, 388, 389, 433, 434, 435, 436, 437, 467, 468, 469, 471, 524, 542, 620, 624], "format_tag": [242, 243], "export": [242, 243, 245, 246, 280, 286, 326, 441, 443, 445, 640], "init_export": [242, 243], "new_dmc": 242, "prepar": [242, 245, 339], "fname_out": 242, "classic": 243, "legacy_user_mod_input": 244, "legacy_user_nln_constraint": 244, "fparm": [244, 462, 471, 592, 593, 723], "h1": 244, "cw": [244, 462, 471, 592, 593, 723], "zl": [244, 471, 592, 593, 723], "zu": [244, 471, 592, 593, 723], "user_constraint": 244, "undefin": 245, "table_exist": 245, "dm_converter_el": 245, "pp_row": 245, "pp_get_foot": 245, "footer": 245, "pp_have_section_cnt": 245, "pp_data_cnt": [245, 261, 263], "pp_have_section_ext": [245, 263], "pp_data_ext": [245, 263, 266], "pp_get_title_det": 245, "pp_get_footers_det": [245, 269, 277, 282, 285], "nc": [245, 246], "sole": 245, "subclass_var1": 245, "subclass_var2": 245, "pp_have_section_oth": [245, 284], "pp_data_oth": [245, 284], "newlin": 245, "data_sub": [246, 257, 258], "get_import_s": [246, 256, 257, 259], "get_export_s": [246, 256, 257, 259], "get_input_table_valu": 246, "import_col": 246, "export_col": 246, "bus_status_import": [248, 249], "bus_name_import": 249, "bus_name_export": 249, "buslink": [250, 267, 268, 356, 357, 358, 359, 360, 361, 362, 410, 411, 412, 447], "pwl1": 252, "start_cost_import": 252, "start_cost_export": 252, "gen_cost_import": 252, "p_or_q": 252, "gen_cost_export": 252, "gencost0": 252, "create_line_construction_t": [254, 275], "lc": [254, 275], "scale_factor_fcn": 256, "zip_sf": 256, "sys_wide_zip_load": [256, 446, 569], "import_cost": 257, "import_qti": 257, "import_ramp": 257, "import_req": 258, "import_zon": 258, "g_fr": 261, "conduct": [261, 285, 471, 542], "b_fr": 261, "g_to": 261, "b_to": 261, "sm_ub_a": 261, "long": [261, 471, 541], "rate": [261, 282, 471, 515, 541, 546], "sm_ub_b": 261, "sm_ub_c": 261, "emerg": [261, 471, 541], "cm_ub_a": 261, "cm_ub_b": 261, "cm_ub_c": 261, "vad_lb": 261, "vad_ub": 261, "tm": 261, "ratio": [261, 471, 541, 569, 583, 643], "ta": 261, "shift": [261, 471, 511, 541, 544, 557, 568, 720], "pl_fr": 261, "ql_fr": 261, "pl_to": 261, "ql_to": 261, "xformer": 261, "radian": [261, 263, 264, 510, 558], "rate_a": [261, 511, 541, 720], "mu_flow_fr_ub": 262, "mu_flow_to_ub": 262, "mu_vad_lb": 262, "mu_vad_ub": 262, "usd": [262, 266, 269, 272, 274, 282, 283], "pp_get_title_lim": [262, 284], "base_kv": [263, 264, 288, 511, 542], "vm_lb": 263, "vm_ub": 263, "va_start": 263, "set_bus_type_ref": 263, "set_bus_type_pq": 263, "vm1_start": 264, "vm2_start": 264, "vm3_start": 264, "va1_start": 264, "va2_start": 264, "va3_start": 264, "lam_p": [266, 457, 458, 511, 542], "lam_q": [266, 511, 542], "mu_vm_lb": 266, "mu_vm_ub": 266, "pg1_start": [267, 270], "pg2_start": [267, 270], "pg3_start": [267, 270], "qg1_start": [267, 270], "qg2_start": [267, 270], "qg3_start": [267, 270], "startup_cost_cold": 269, "cold": 269, "pc1": [269, 471, 511, 526, 546, 553], "pc2": [269, 471, 511, 526, 546, 553], "qc1_lb": 269, "qc1_ub": 269, "qc2_lb": 269, "qc2_ub": 269, "bus_on": [269, 270], "pg_start": 269, "qg_start": 269, "violated_q_lim": 269, "isload": [269, 460, 551, 643, 720, 721, 726], "vm1_setpoint": 270, "vm2_setpoint": 270, "vm3_setpoint": 270, "cost_pg": [272, 274], "cost_qg": 272, "mu_pg_lb": 272, "mu_pg_ub": [272, 282], "mu_qg_lb": 272, "mu_qg_ub": 272, "max_pwl_gencost": 272, "fr": 273, "pl1_fr": [275, 288], "ql1_fr": [275, 288], "pl2_fr": [275, 288], "ql2_fr": [275, 288], "pl3_fr": [275, 288], "ql3_fr": [275, 288], "pl1_to": [275, 288], "ql1_to": [275, 288], "pl2_to": [275, 288], "ql2_to": [275, 288], "pl3_to": [275, 288], "ql3_to": [275, 288], "lc_tab": 275, "symmetr": [275, 592, 593], "yc": 275, "lc_table_var_nam": 275, "vec2symmat": 275, "symmat2vec": 275, "pd": [277, 471, 511, 542, 643, 721], "p_p": 277, "qd": [277, 471, 511, 542, 643, 721], "q_p": 277, "pd_i": 277, "p_i": 277, "qd_i": 277, "q_i": 277, "pd_z": 277, "p_z": 277, "qd_z": 277, "q_z": 277, "_p": 277, "_z": 277, "pf1": 278, "pf2": 278, "pf3": 278, "dmb": [280, 286], "dmt": [280, 286], "qty": [282, 583, 637, 719], "ramp10": 282, "minut": [282, 471, 546], "alloc": [282, 329, 337, 569, 583], "r_lb": 282, "r_ub": 282, "total_cost": 282, "prc": [282, 283, 637, 719], "req": [283, 637, 719], "pp_set_tols_lim": 284, "pp_rows_oth": 284, "pp_get_footers_oth": 284, "pp_rows_lim": 284, "pp_get_footers_lim": 284, "pp_data_lim": 284, "g_": [285, 294], "b_": 285, "absorb": 285, "class_list": 290, "aspect": [291, 450], "xt": 291, "form_nam": [292, 294, 295, 296, 298, 300, 301, 303, 304, 308, 310, 313, 315, 317, 321, 322, 323, 324, 325], "form_tag": [292, 294, 295, 296, 298, 300, 301, 303, 304, 308, 310, 313, 315, 317, 321, 322, 323, 324, 325], "model_param": [292, 293, 296], "model_vvar": [292, 294, 295, 296], "model_zvar": [292, 293, 296], "get_param": 292, "find_form_class": 292, "acc": [292, 294], "acp": [292, 295, 298], "properi": 292, "p1": [292, 471, 543], "p2": [292, 471, 543], "pn": [292, 471, 543], "pa": 292, "namea": 292, "pb": 292, "nameb": 292, "canon": 292, "form_class": 292, "netork": 292, "longest": 292, "params_ncol": [293, 296], "inln_hess": 293, "snln_hess": 293, "port_inj_curr": [293, 294, 295, 393, 748, 749], "port_inj_pow": [293, 294, 295, 296, 393, 750, 751], "port_inj_current_hess": [293, 294, 295, 393], "port_inj_power_hess": [293, 294, 295, 393], "port_inj_current_jac": [293, 294, 295], "port_inj_current_hess_v": [293, 294, 295], "port_inj_current_hess_vz": [293, 294, 295], "port_inj_power_jac": [293, 294, 295], "port_inj_power_hess_v": [293, 294, 295], "port_inj_power_hess_vz": [293, 294, 295], "port_apparent_power_lim_fcn": 293, "port_active_power_lim_fcn": 293, "port_active_power2_lim_fcn": 293, "port_current_lim_fcn": 293, "port_apparent_power_lim_hess": 293, "port_active_power_lim_hess": 293, "port_active_power2_lim_hess": 293, "port_current_lim_hess": 293, "aux_data_va_vm": [293, 294, 295], "param_ncol": [293, 296], "x_": [293, 294, 295, 393, 397, 429], "sysx": [293, 294, 295, 296, 393, 397, 429], "iv1": 293, "iv2": 293, "izr": 293, "izi": 293, "gi_": 293, "formula": [293, 524], "sv1": 293, "sv2": 293, "szr": 293, "szi": 293, "mulipli": [293, 294, 368, 393], "v_": [293, 294, 295, 329, 397], "invdiagv": [293, 294, 295], "diagslincj": [293, 294, 295], "z_": [293, 294, 295, 329, 397], "diaginv": [293, 294, 295], "dlamj": [293, 294, 295], "diagv": [293, 294, 295], "diagvi": [293, 294, 295], "diagilincj": [293, 294, 295], "hmax": 293, "repesent": [294, 295], "va_fcn": [294, 358], "va_hess": [294, 358], "vm2_fcn": [294, 358], "vm2_hess": [294, 358], "iu": 294, "iw": 294, "iuu": 294, "iuw": 294, "iww": 294, "iuzr": 294, "iuzi": 294, "iwzr": 294, "iwzi": 294, "su": 294, "sw": 294, "suu": 294, "suw": 294, "sww": 294, "suzr": 294, "suzi": 294, "swzr": 294, "swzi": 294, "connvert": 294, "va_lb": 294, "va_ub": 294, "vm2_lb": 294, "vm2_ub": 294, "iva": 295, "ivm": 295, "ivava": 295, "ivavm": 295, "ivmvm": 295, "ivazr": 295, "ivazi": 295, "ivmzr": 295, "ivmzi": 295, "sva": 295, "svm": 295, "svava": 295, "svavm": 295, "svmvm": 295, "svazr": 295, "svazi": 295, "svmzr": 295, "svmzi": 295, "ma": 297, "width": 297, "height": 297, "depth": 297, "treat": [297, 465, 467, 468, 469], "add_el": 297, "color": 297, "weight": [297, 560, 569], "delete_el": 297, "has_nam": 297, "add_nam": 297, "name2idx": 297, "new_obj": 297, "num_el": 297, "overwrit": 297, "corrspond": 297, "aux_data": 298, "task_nam": [298, 305, 319], "add_aux_data": 298, "build_base_aux_data": 298, "add_system_var": [298, 305, 319], "add_system_constraint": [298, 309, 311, 314, 316, 318], "add_node_balance_constraint": [298, 300, 301, 303, 304, 308, 310, 313, 315, 317, 321, 322, 323, 324, 325], "add_system_cost": [298, 309, 311, 314, 316, 318], "update_nm_var": 298, "build_aux_data": [298, 305, 328, 332, 335, 336, 337], "mmx": [298, 307, 312, 317, 331, 334, 337], "nm_var": 298, "var_map": 298, "nm_var_typ": 298, "nm_i1": 298, "nm_in": 298, "nm_idx": 298, "mm_i1": 298, "mm_in": 298, "mm_idx": 298, "convert_x_m2n": [298, 307, 312, 317, 331, 334, 337], "math_model_cpf": [299, 302], "event_vlim": 302, "callback_vlim": 302, "expand_z_warmstart": 304, "solve_opts_warmstart": 304, "interior_va": [305, 307], "nodal_current_balance_fcn": 306, "nodal_power_balance_fcn": 306, "nodal_current_balance_hess": 306, "nodal_power_balance_hess": 306, "node_power_balance_pric": [308, 310, 313, 315], "formluat": [309, 311, 314, 316, 318], "legacy_user_var_nam": [309, 311, 314, 316, 318], "gs_x_updat": 324, "zg_x_updat": 324, "fd_jac_approx": 324, "fdpf_b_matrix_model": 324, "accordingli": [326, 486, 489], "def_set_types_legaci": 327, "init_set_types_legaci": 327, "get_mpc": [327, 462, 631], "build_legaci": 327, "add_legacy_user_var": 327, "add_legacy_user_cost": 327, "add_legacy_user_constraint": 327, "add_legacy_user_constraints_ac": 327, "add_legacy_cost": [327, 462], "eval_legacy_cost": [327, 462], "params_legacy_cost": [327, 462], "add_system_varset_pf": 329, "vvar": 329, "typ": 329, "update_z": [329, 337], "sinj": 329, "formuat": [330, 331, 332, 333, 334, 335, 336], "build_aux_data_i": 330, "only_v": [331, 334, 337], "pf_convert": [331, 334, 337], "add_system_vars_pf": [332, 333, 335, 336, 337], "node_balance_equ": [332, 333, 335, 336], "fdpf": [336, 460, 556, 726], "ang_diff_param": 339, "ang_diff_pric": [339, 341], "interior_vm": 350, "avg": 350, "clip": 350, "voltage_constraint": [360, 410], "pf_va_fcn": 361, "pf_vm_fcn": 361, "poly_p": 366, "poly_q": 366, "actv": [366, 373], "bulid": [367, 369], "pq_capability_constraint": 367, "makeapq": [367, 460, 724, 726], "has_pq_cap": 367, "upper_low": 367, "haspqcap": [367, 460, 667, 726], "disp_load_constant_pf_constraint": 367, "makeavl": [367, 460, 726], "oval": [368, 449], "cap": [368, 553], "rectangular": 368, "radii": 368, "the_np": 392, "the_nz": 392, "add_nod": [392, 397], "add_stat": [392, 397], "stack_matrix_param": 392, "stack_vector_param": 392, "add_port": 392, "set_type_label": 392, "get_node_idx": 392, "get_port_idx": 392, "get_state_idx": 392, "ensure_ref_nod": 392, "vnotz": 392, "unus": [392, 471], "vr0": 392, "vrmin": 392, "vrmax": 392, "zij_lb": 392, "zij_ub": 392, "nidx": [392, 397], "pidx": 392, "sidx": [392, 626], "skip_ensure_ref": 392, "ntv": [392, 397, 404], "by_elm": 392, "implicitli": 393, "port_inj_nln": 393, "port_inj_nln_hess": 393, "nodal_complex_current_bal": 393, "nodal_complex_power_bal": 393, "nodal_complex_current_balance_hess": 393, "nodal_complex_power_balance_hess": 393, "get_va": 393, "gv1": 393, "gv2": 393, "gzr": 393, "gzi": 393, "snln_": 393, "inln_": 393, "kcl": 393, "initial_voltage_angl": [394, 395], "math_model_el": 397, "get_nv_": 397, "x2vz": 397, "node_indic": 397, "incidence_matrix": 397, "nv_": 397, "vi_": 397, "cd": 397, "ang_diff_fcn": 400, "aang": [400, 552, 594, 595], "lang": [400, 552, 594, 595], "uang": [400, 552, 594, 595], "ang_diff_hess": 400, "vr3": 405, "vi3": 405, "plink": 410, "qlink": 410, "vec2symmat_stack": 426, "port_inj_current_nln": 429, "port_inj_power_nln": 429, "interact": [439, 454, 511], "mm_opt": 439, "i_dm": 439, "i_nm": 439, "i_mm": 439, "didn": 439, "run_pr": [439, 440, 441, 442, 443, 444, 445, 446], "run_post": [439, 441, 443, 445], "print_soln_head": [439, 442], "dm_converter_cr": 439, "data_model_cr": 439, "data_model_build": [439, 440], "data_model_build_pr": 439, "data_model_build_post": [439, 442, 443], "network_model_cr": 439, "network_model_build": [439, 440], "network_model_build_pr": 439, "network_model_build_post": [439, 444], "network_model_upd": [439, 440], "math_model_cr": 439, "math_model_build": 439, "math_model_opt": [439, 440], "propag": 439, "mpoopt": 439, "handel": 439, "dm_converter_build": 439, "restart": 440, "superclass": [440, 442, 443, 444], "clam": 440, "plam": 440, "cv": 440, "current_bal": [440, 442, 444, 569], "legacy_post_run": [441, 443, 445], "post": [441, 443, 445], "run_pre_legaci": [441, 443, 445, 446], "printout": 442, "variat": 443, "opf_model": [443, 460, 592, 699, 726], "opf_execut": [443, 460, 607, 726], "dcopf_solv": [443, 460, 726], "nlpopf_solv": [443, 460, 726], "ref0": 444, "va_ref0": 444, "fixed_q_idx": 444, "fixed_q_qti": 444, "enforce_q_lim": [444, 569, 583, 632, 638], "move": 446, "optimi": [447, 448], "gen3p": 447, "load3p": 447, "line3p": 447, "xfmr3p": 447, "half": [449, 526], "region": [449, 538, 569, 583], "qmin": [449, 471, 488, 511, 546, 643, 720, 721], "qmax": [449, 471, 488, 511, 546, 643, 720, 721], "gen_opf_ac": 449, "gen_opf_ac_ov": 449, "reserve_gen": 450, "reserve_zon": 450, "var1": [451, 455], "var2": [451, 455], "name1": [451, 569, 583], "name2": [451, 569, 583], "rownam": 451, "dimensionnam": 451, "focus": 451, "join": 451, "istabl": [451, 452], "concaten": [451, 452], "vertcat": [451, 452], "unfortun": 451, "realli": 451, "last_var": 451, "last_row": 451, "sub_t": 451, "jn": 451, "var_": 451, "t1": [451, 452], "t2": [451, 452], "extract_named_arg": 451, "row_nam": 451, "dim_nam": 451, "act": 452, "isn": 452, "cannot": [452, 523], "fine": 452, "php": 452, "65037": 452, "emul": 452, "get_tabl": 452, "set_tabl": 452, "install_matpow": [453, 460], "save_it": 454, "rm_oldpath": 454, "assist": 454, "session": [454, 758], "addpath": 454, "silent": 454, "mode": [454, 632, 758], "my": 454, "temporarili": 454, "matpower8": 454, "uninstal": 454, "nativ": [455, 569], "tablici": [455, 537], "table_class": 455, "print_fnam": [456, 457, 458, 459], "soln_fnam": [456, 457, 458, 459], "case9target": [456, 632], "miscellan": 460, "test_matpow": [460, 728], "t_mp_mapped_arrai": [460, 728], "t_mp_tabl": [460, 728], "t_mp_data_model": [460, 728], "t_dmc_element": [460, 728], "t_mp_dm_converter_mpc2": [460, 728], "t_nm_element": [460, 728], "t_port_inj_current_acc": [460, 728], "t_port_inj_current_acp": [460, 728], "t_port_inj_power_acc": [460, 728], "t_port_inj_power_acp": [460, 728], "t_node_test": [460, 728], "t_run_mp": [460, 728], "t_run_opf_default": [460, 728], "t_pretty_print": [460, 728], "t_mpxt_legacy_dclin": [460, 728], "t_mpxt_reserv": [460, 728], "mp_foo_tabl": [460, 728], "t_case9_gizmo": [460, 728], "runpf": [460, 510, 516, 521, 524, 569, 585, 586, 587, 588, 589, 590, 632, 634, 717, 725, 726], "runcpf": [460, 475, 477, 490, 491, 569, 726], "runopf": [460, 569, 592, 619, 633, 637, 639, 717, 726, 758], "runuopf": [460, 635, 636, 723, 726], "rundcpf": [460, 510, 638, 726], "rundcopf": [460, 508, 635, 636, 726], "runduopf": [460, 633, 639, 726], "runopf_w_r": [460, 463, 630, 631, 712, 719, 726], "cdf2mpc": [460, 726], "printpf": [460, 463, 708, 726], "psse2mpc": [460, 624, 626, 627, 709, 726], "save2pss": [460, 656, 726], "savecas": [460, 463, 471, 522, 523, 726], "savechgtab": [460, 726], "e2i_data": [460, 513, 514, 539, 664, 726], "e2i_field": [460, 512, 514, 540, 664, 726], "i2e_data": [460, 512, 540, 547, 664, 726], "i2e_field": [460, 513, 539, 547, 664, 726], "get_reord": [460, 644, 664, 726], "set_reord": [460, 525, 664, 726], "calc_v_i_sum": [460, 726], "calc_v_pq_sum": [460, 565, 726], "calc_v_y_sum": [460, 726], "dcpf": [460, 557, 726], "gausspf": [460, 726], "make_vcorr": [460, 726], "make_zpv": [460, 726], "newtonpf": [460, 586, 587, 588, 589, 590, 726], "newtonpf_i_cart": [460, 585, 588, 589, 590, 726], "newtonpf_i_hybrid": [460, 726], "newtonpf_i_polar": [460, 585, 586, 587, 589, 590, 726], "newtonpf_s_cart": [460, 585, 586, 587, 588, 726], "newtonpf_s_hybrid": [460, 726], "order_radi": [460, 726], "pfsoln": [460, 726], "radial_pf": [460, 467, 468, 469, 564, 614, 726], "zgausspf": [460, 726], "cpf_corrector": [460, 483, 484, 726], "cpf_current_mpc": [460, 726], "cpf_default_callback": [460, 480, 482, 486, 489, 490, 494, 496, 569, 726], "cpf_detect_ev": [460, 477, 726], "cpf_flim_ev": [460, 480, 726], "cpf_flim_event_cb": [460, 490, 726], "cpf_nose_ev": [460, 482, 726], "cpf_nose_event_cb": [460, 480, 490, 726], "cpf_p": [460, 726], "cpf_p_jac": [460, 726], "cpf_plim_ev": [460, 486, 726], "cpf_plim_event_cb": [460, 490, 726], "cpf_predictor": [460, 483, 484, 726], "cpf_qlim_ev": [460, 489, 726], "cpf_qlim_event_cb": [460, 490, 726], "cpf_register_callback": [460, 477, 726], "cpf_register_ev": [460, 726], "cpf_tangent": [460, 726], "cpf_target_lam_ev": [460, 494, 726], "cpf_target_lam_event_cb": [460, 490, 726], "cpf_vlim_ev": [460, 496, 726], "cpf_vlim_event_cb": [460, 490, 726], "dcopf": [460, 592, 726], "fmincopf": [460, 726], "uopf": [460, 592, 726], "makeaang": [460, 594, 595, 726], "makeai": [460, 726], "margcost": [460, 675, 726], "opf_arg": [460, 726], "opf_setup": [460, 600, 726], "opf_branch_ang_fcn": [460, 595, 726], "opf_branch_ang_hess": [460, 594, 726], "opf_branch_flow_fcn": [460, 597, 726], "opf_branch_flow_hess": [460, 596, 726], "opf_current_balance_fcn": [460, 599, 726], "opf_current_balance_hess": [460, 726], "opf_gen_cost_fcn": [460, 726], "opf_legacy_user_cost_fcn": [460, 726], "opf_power_balance_fcn": [460, 606, 726], "opf_power_balance_hess": [460, 598, 605, 726], "opf_veq_fcn": [460, 609, 726], "opf_veq_hess": [460, 608, 726], "opf_vlim_fcn": [460, 611, 726], "opf_vlim_hess": [460, 610, 726], "opf_vref_fcn": [460, 613, 726], "opf_vref_hess": [460, 612, 726], "totcost": [460, 715, 726], "update_mupq": [460, 726], "add_userfcn": [460, 471, 630, 631, 717, 718, 719, 720, 726], "remove_userfcn": [460, 463, 631, 717, 718, 719, 720, 726], "run_userfcn": [460, 463, 630, 717, 718, 719, 720, 726], "toggle_dclin": [460, 463, 545, 651, 663, 726], "toggle_iflim": [460, 463, 630, 631, 726], "toggle_softlim": [460, 463, 466, 726], "dibr_dv": [460, 497, 503, 726], "dsbr_dv": [460, 497, 503, 726], "dabr_dv": [460, 497, 726], "dimis_dv": [460, 726], "dsbus_dv": [460, 726], "d2ibr_dv2": [460, 726], "d2sbr_dv2": [460, 497, 726], "d2abr_dv2": [460, 726], "d2imis_dv2": [460, 726], "d2imis_dvdsg": [460, 726], "d2sbus_dv2": [460, 726], "miqps_matpow": [460, 676, 726], "qps_matpow": [460, 710, 726], "makeb": [460, 726], "makebdc": [460, 726], "makejac": [460, 563, 726], "makelodf": [460, 560, 673, 726], "makeptdf": [460, 559, 674, 726], "makesbu": [460, 499, 505, 563, 726], "makesdzip": [460, 726], "makeybu": [460, 497, 498, 499, 501, 502, 504, 505, 506, 507, 558, 561, 726], "apply_chang": [460, 511, 544, 642, 645, 659, 726], "bustyp": [460, 726], "calc_branch_angl": [460, 726], "case_info": [460, 515, 669, 726], "compare_cas": [460, 726], "define_const": [460, 541, 542, 543, 546, 726], "extract_island": [460, 519, 669, 726], "feval_w_path": [460, 665, 726], "find_bridg": [460, 559, 726], "find_island": [460, 470, 515, 669, 726], "gentyp": [460, 471, 515, 522, 726], "get_loss": [460, 666, 726], "idx_brch": [460, 471, 511, 726], "idx_bu": [460, 464, 471, 511, 726], "idx_cost": [460, 464, 471, 511, 726], "idx_gen": [460, 464, 471, 511, 726], "load2disp": [460, 671, 726], "loadsh": [460, 726], "modcost": [460, 544, 643, 677, 726], "poly2pwl": [460, 726], "polycost": [460, 616, 726], "pqcost": [460, 726], "scale_load": [460, 713, 721, 726], "total_load": [460, 643, 714, 726], "have_feature_e4st": [460, 726], "have_feature_minopf": [460, 726], "have_feature_most": [460, 726], "have_feature_mp_cor": [460, 726], "have_feature_pdipmopf": [460, 726], "have_feature_regexp_split": [460, 726], "have_feature_scpdipmopf": [460, 726], "have_feature_sdp_pf": [460, 726], "have_feature_smartmarket": [460, 726], "have_feature_syngrid": [460, 726], "have_feature_t": [460, 726], "have_feature_tralmopf": [460, 726], "connected_compon": [460, 515, 519, 669, 726], "mpoption_info_clp": [460, 726], "mpoption_info_cplex": [460, 726], "mpoption_info_fmincon": [460, 726], "mpoption_info_glpk": [460, 726], "mpoption_info_gurobi": [460, 726], "mpoption_info_intlinprog": [460, 726], "mpoption_info_ipopt": [460, 726], "mpoption_info_knitro": [460, 726], "mpoption_info_linprog": [460, 726], "mpoption_info_mip": [460, 726], "mpoption_info_mosek": [460, 726], "mpoption_info_osqp": [460, 726], "mpoption_info_quadprog": [460, 726], "mpoption_old": [460, 726], "psse_convert": [460, 622, 623, 726], "psse_convert_hvdc": [460, 726], "psse_convert_xfmr": [460, 726], "psse_pars": [460, 626, 726], "psse_parse_lin": [460, 624, 726], "psse_parse_sect": [460, 624, 726], "psse_read": [460, 621, 622, 623, 624, 626, 726], "t_apply_chang": [460, 726], "t_auction_minopf": [460, 726], "t_auction_mip": [460, 726], "t_auction_tspopf_pdipm": [460, 726], "t_chgtab": [460, 726], "t_cpf": [460, 726], "t_dcline": [460, 726], "t_ext2int2ext": [460, 726], "t_feval_w_path": [460, 726], "t_get_loss": [460, 726], "t_haspqcap": [460, 726], "t_island": [460, 726], "t_load2disp": [460, 726], "t_makelodf": [460, 726], "t_makeptdf": [460, 726], "t_margcost": [460, 726], "t_miqps_matpow": [460, 726], "t_modcost": [460, 726], "t_mpoption": [460, 726], "t_mpoption_ov": [460, 726], "t_off2cas": [460, 726], "t_opf_dc_bpmpd": [460, 726], "t_opf_dc_clp": [460, 726], "t_opf_dc_cplex": [460, 726], "t_opf_dc_default": [460, 726], "t_opf_dc_glpk": [460, 726], "t_opf_dc_gurobi": [460, 726], "t_opf_dc_ipopt": [460, 726], "t_opf_dc_mip": [460, 726], "t_opf_dc_mips_sc": [460, 726], "t_opf_dc_mosek": [460, 726], "t_opf_dc_osqp": [460, 726], "t_opf_dc_ot": [460, 726], "t_opf_default": [460, 726], "t_opf_fmincon": [460, 726], "t_opf_ipopt": [460, 726], "t_opf_knitro": [460, 726], "t_opf_minopf": [460, 726], "t_opf_mip": [460, 726], "t_opf_model": [460, 726], "t_opf_softlim": [460, 720, 726], "t_opf_tspopf_pdipm": [460, 726], "t_opf_tspopf_scpdipm": [460, 726], "t_opf_tspopf_tralm": [460, 726], "t_opf_userfcn": [460, 726], "t_pf_ac": [460, 726], "t_pf_dc": [460, 726], "t_pf_radial": [460, 726], "t_printpf": [460, 726], "t_psse": [460, 726], "t_qps_matpow": [460, 726], "t_runmarket": [460, 726], "t_runopf_w_r": [460, 726], "t_scale_load": [460, 726], "t_total_load": [460, 726], "t_totcost": [460, 726], "t_vdep_load": [460, 726], "opf_nle_fcn1": [460, 726], "opf_nle_hess1": [460, 726], "t_auction_cas": [460, 726], "t_case30_userfcn": [460, 637, 718, 719, 726], "t_case9_opf": [460, 726], "t_case9_opfv2": [460, 651, 726], "t_case9_pf": [460, 726], "t_case9_pfv2": [460, 726], "t_case9_save2pss": [460, 726], "t_case_ext": [460, 726], "t_case_int": [460, 726], "t_cpf_cb1": [460, 726], "t_cpf_cb2": [460, 726], "rr": 462, "set_mpc": 462, "f_u": 462, "nw": 462, "ddl": 462, "ddq": 462, "dl": [462, 522, 523], "dq": 462, "buld_cost_param": 462, "get_cost_param": [462, 602], "cp1": 462, "n1": 462, "cw1": 462, "cp2": 462, "n2": 462, "cw2": 462, "usr1": 462, "usr2": 462, "allow_multipl": 463, "userfcn": [463, 592, 593, 630, 631, 700, 704, 717, 718, 719, 720, 723], "freshli": 463, "presum": 463, "userfcn_reserves_ext2int": 463, "userfcn_reserves_formul": 463, "userfcn_reserves_int2ext": 463, "descriptor": [463, 619], "userfcn_reserves_printpf": 463, "prefix": 463, "mpc_modifi": 464, "mpc_origin": 464, "best": 464, "idx_branch": 464, "7th": 464, "ct_rep": [464, 511, 544], "ct_load_all_p": [464, 511, 544], "ct_rel": [464, 511, 544], "delta": 466, "TO": 466, "af": [466, 503], "vslack": [467, 468, 469], "zb": [467, 468, 469, 564, 565], "ybf": [467, 468, 469], "ybt": [467, 468, 469], "yd": [467, 468, 469, 565], "vg": [467, 468, 469, 471, 511, 546, 569], "summat": [467, 468, 469, 569], "qpv": [467, 468, 469], "sslack": [467, 468, 469], "iter_max": [467, 468, 469], "indici": [467, 468, 469, 565, 614], "principl": [467, 468, 469, 614], "send": [467, 468, 469, 614], "receiv": [467, 468, 469, 614], "addmitt": [467, 468, 469], "shirmohammadi": 467, "hong": 467, "semlyen": 467, "luo": 467, "compens": [467, 523], "weakli": [467, 469], "mesh": [467, 469], "753": 467, "1988": 467, "192932": 467, "1309": 467, "1316": 467, "nov": 467, "1990": 467, "99382": 467, "vcpf": 468, "rajic": [468, 564, 614], "ackovski": [468, 564, 614], "taleski": [468, 469, 564, 614], "1056": [468, 564, 614], "1062": [468, 564, 614], "apr": [468, 564, 614], "1994": [468, 564, 614], "296308": [468, 564], "dragoslav": 469, "raji\u010di\u0107": 469, "rubin": 469, "novel": 469, "radial": [469, 569], "analysi": 469, "volum": 469, "decemb": 469, "1998": 469, "1016": 469, "s0378": 469, "7796": 469, "00067": 469, "island": [470, 515, 518, 519, 559], "fopen": [470, 619], "pti": 471, "item": 471, "idx_area": 471, "regard": 471, "bus_nam": [471, 515, 623], "maxvm": [471, 542], "minvm": [471, 542], "machin": [471, 546], "remot": 471, "mbase": [471, 511, 546], "qc1min": [471, 511, 526, 546, 553], "qc1max": [471, 511, 526, 546, 553], "qc2min": [471, 511, 526, 546, 553], "qc2max": [471, 511, 526, 546, 553], "agc": [471, 546], "timescal": [471, 546], "apf": [471, 511, 546], "particip": [471, 546], "charg": [471, 523, 524, 541], "ratea": [471, 541, 632], "unlimit": 471, "rateb": [471, 541], "ratec": [471, 541], "tap": [471, 472, 511, 541], "delai": 471, "gf": [471, 522], "bf": [471, 557], "gt": [471, 523], "bt": [471, 523], "angmin": [471, 511, 541, 552, 720], "360": [471, 541, 552], "angmax": [471, 511, 541, 552, 720], "dollar": [471, 543], "fn": [471, 543], "break": [471, 518, 543, 564], "cn": [471, 543], "c0": [471, 472, 543], "highest": [471, 543], "longer": 471, "price_ref_bu": 471, "cdf_file_nam": 472, "mpc_name": [472, 620], "comment": [472, 620, 624, 625, 626, 627, 641, 642], "ieee300": 472, "mpc1": [473, 515], "unvisit": 474, "graph": 474, "ybu": [475, 476, 477, 492, 497, 498, 499, 501, 502, 504, 505, 506, 507, 516, 521, 558, 563, 585, 586, 587, 588, 589, 590, 598, 599, 605, 606, 615, 725], "sbusb": [475, 477, 492], "v_hat": [475, 477, 487, 632], "sbust": [475, 477, 492], "vprv": [475, 483, 484, 492], "lamprv": [475, 483, 484, 492], "lprv": 475, "scheme": [475, 632], "mpct": 476, "yf": [476, 477, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 558, 563, 596, 597, 615], "yt": [476, 477, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 558, 563, 596, 597, 615], "mpc_base": [476, 477], "mpc_target": [476, 477], "evnt": [477, 480, 482, 486, 489, 494, 496, 661, 662], "cb_data": [477, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 495, 496, 661, 662], "cb_arg": [477, 480, 482, 486, 489, 490, 494, 496, 661, 662], "paramter": 477, "cb_state": 477, "ef": [477, 479, 481, 485, 488, 493, 495], "idx_pmax": 477, "underli": [477, 758], "job": 477, "user_callback": [477, 490, 569], "cpf_event": [478, 491], "cef": 478, "pef": 478, "sratea": 479, "flim": 480, "dp_dv": 484, "dp_dlam": 484, "plim": 486, "encount": [486, 489], "transfer": [486, 489, 560, 632], "choos": [486, 489, 569, 583], "remain": [489, 516, 521, 585, 586, 587, 588, 589, 590, 632, 638, 720, 725], "cpf_callback": 490, "53": 490, "zprv": 492, "postiv": 492, "vlim": [496, 610], "d2f_dv2": 497, "df_dv1": 497, "df_dv2": 497, "h11": 497, "h12": 497, "h21": 497, "h22": 497, "cf": [497, 501, 504, 506], "dsf_dv1": 497, "dsf_dv2": 497, "dst_dv1": 497, "dst_dv2": 497, "dv1": [497, 503], "daf_dv1": [497, 503], "dv2": [497, 503], "daf_dv2": [497, 503], "februari": [497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 757], "3237866": [497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 757], "ybr": [498, 501], "vcart": [498, 499, 500, 501, 502, 504, 505, 506, 507], "haa": [498, 501], "hav": [498, 501], "hva": [498, 501], "hvv": [498, 501], "hrr": [498, 501], "hri": [498, 501], "hir": [498, 501], "hii": [498, 501], "dva": [498, 499, 500, 501, 502, 504, 505, 506, 507], "dibr_dva": 498, "dibr_dvm": 498, "dvr": [498, 499, 500, 501, 502, 504, 505, 506, 507], "dibr_dvr": 498, "dvi": [498, 499, 500, 501, 502, 504, 505, 506, 507], "dibr_dvi": 498, "sereet": [498, 499, 500, 501, 502, 504, 505, 506, 507, 757], "april": [498, 499, 500, 501, 502, 504, 505, 506, 507, 757], "2018": [498, 499, 500, 501, 502, 504, 505, 506, 507, 757], "3237909": [498, 499, 500, 501, 502, 504, 505, 506, 507, 757], "sbu": [499, 505, 516, 521, 561, 585, 586, 587, 588, 589, 590, 725], "gaa": [499, 502], "gav": [499, 502], "gva": [499, 502], "gvv": [499, 502], "grr": [499, 500, 502], "gir": [499, 500, 502], "gii": [499, 500, 502], "dimis_dva": [499, 505], "dimis_dvm": [499, 505], "gri": [499, 500, 502], "dimis_dvr": [499, 505], "dimis_dvi": [499, 505], "addendum": [499, 500, 505, 757], "3237900": [499, 500, 505, 757], "cg": 500, "sg": [500, 561], "gsv": 500, "gen_bu": [500, 511, 546], "gpa": 500, "gpv": 500, "gqa": 500, "gqv": 500, "dimis_dpg": 500, "dimis_dqg": 500, "gpr": 500, "gpi": 500, "gqr": 500, "gqi": 500, "cbr": 501, "brch": 501, "dsbr_dva": 501, "dsbr_dvm": 501, "dsbr_dvr": 501, "dsbr_dvi": 501, "dsbus_dva": [502, 507], "dsbus_dvm": [502, 507, 561], "dsbus_dvr": [502, 507], "dsbus_dvi": [502, 507], "dff_dv1": 503, "dff_dv2": 503, "dft_dv1": 503, "dft_dv2": 503, "ff": 503, "ft": 503, "dat_dv1": 503, "dat_dv2": 503, "sensit": [503, 511, 558], "daf": 503, "dpf": 503, "dqf": 503, "v1": 503, "il": [503, 596, 597], "dif_dva": 504, "dif_dvm": 504, "dit_dva": 504, "dit_dvm": 504, "IF": 504, "IT": [504, 523], "dif_dvr": 504, "dif_dvi": 504, "dit_dvr": 504, "dit_dvi": 504, "dvf": [504, 506], "dif": [504, 506], "imi": 505, "ibu": [505, 507], "idg": 505, "di": [505, 507], "dimi": 505, "dsf_dva": 506, "dsf_dvm": 506, "dst_dva": 506, "dst_dvm": 506, "dsf_dvr": 506, "dsf_dvi": 506, "dst_dvr": 506, "dst_dvi": 506, "dsf": 506, "mino": [509, 528, 569, 583, 591, 592, 697], "xr": [509, 591, 592, 723], "pimul": [509, 591, 592, 723], "pbu": 510, "va0": 510, "swing": [510, 516, 521, 585, 586, 587, 588, 589, 590, 725], "bus_i": [511, 542], "bus_typ": [511, 542], "bus_area": [511, 542, 643, 721], "mu_vmax": [511, 542, 720], "mu_vmin": [511, 542], "br_r": [511, 541], "br_x": [511, 541], "br_b": [511, 541], "rate_b": [511, 541], "rate_c": [511, 541], "mu_sf": [511, 541, 720], "mu_st": [511, 541, 720], "mu_angmin": [511, 541], "mu_angmax": [511, 541], "mu_qmax": [511, 546, 724], "mu_qmin": [511, 546, 724], "ramp_q": [511, 546], "pw_linear": [511, 543], "ncost": [511, 543], "ct_label": [511, 544], "ct_prob": [511, 544], "ct_tabl": [511, 544], "ct_row": [511, 544], "ct_chgtype": [511, 544], "ct_add": [511, 544], "ct_newval": [511, 544], "ct_load_all_pq": [511, 544], "ct_load_fix_pq": [511, 544], "ct_load_dis_pq": [511, 544], "ct_load_fix_p": [511, 544], "ct_load_dis_p": [511, 544], "ct_modcost_f": [511, 544], "ct_modcost_x": [511, 544], "frequent": 511, "high": [511, 523, 700, 704], "concern": 511, "accord": [512, 539, 625, 643, 720], "disturb": [512, 539], "a_int": [512, 539], "a_ext": [512, 539], "gencost_int": [512, 539], "gencost_ext": [512, 539], "revers": [514, 523], "external_bus_numb": [514, 547], "internal_bus_numb": [514, 547], "matow": [514, 547], "e2i": 514, "mpc_arrai": 515, "mpc_k": 515, "travers": 515, "elimin": [515, 632], "mpc_list": 515, "traver": 515, "mpc3": 515, "bus_label": 515, "gen_nam": 515, "emiss": 515, "genloc": 515, "bpp": [516, 556, 725], "prime": [516, 523, 556, 725], "guess": [516, 521, 585, 586, 587, 588, 589, 590, 725], "fpath": 517, "x1": 517, "xn": 517, "yn": 517, "feval": 517, "caller": 517, "testfunct": 517, "mytestfcn": 517, "x2": 517, "bridg": [518, 559], "nonbridg": 518, "filter": [518, 555], "tarjan": 518, "520": [520, 583], "unord": [522, 523], "biomass": 522, "coal": [522, 523], "dfo": 522, "distil": 522, "oil": 522, "diesel": [522, 523], "fo1": 522, "fo2": 522, "fo4": 522, "geotherm": [522, 523], "hydrop": 522, "pump": [522, 523, 548], "jetfuel": 522, "jet": [522, 523], "lng": 522, "liquefi": 522, "ga": [522, 523], "nuclear": [522, 523], "refus": 522, "municip": 522, "solid": [522, 523], "wast": 522, "rfo": 522, "fo5": 522, "fo6": 522, "solar": [522, 523], "syncgen": 522, "condensor": 522, "wasteheat": 522, "heat": 522, "wood": 522, "eia": 523, "860": 523, "instruct": [523, 592, 593], "mover": 523, "gov": 523, "survei": 523, "eia_860": 523, "ba": 523, "batteri": 523, "ce": 523, "compress": 523, "air": 523, "concentr": 523, "fw": 523, "flywheel": 523, "hydraul": 523, "turbin": 523, "steam": 523, "combust": 523, "ic": [523, 569], "piston": 523, "reciproc": 523, "ca": 523, "ct": 523, "integr": 523, "gasif": 523, "shaft": 523, "plant": 523, "hydrokinet": 523, "axial": 523, "hb": 523, "wave": 523, "buoi": 523, "hk": 523, "hy": 523, "hydroelectr": 523, "water": 523, "pipelin": 523, "photovolta": 523, "wt": 523, "onshor": 523, "offshor": 523, "fc": 523, "powerworld": 523, "un": 523, "je": 523, "boil": 523, "reactor": 523, "graphit": 523, "nh": 523, "temperatur": 523, "pressur": 523, "turbo": 523, "condens": 523, "ti": 523, "motor": 523, "w1": 523, "w2": 523, "w3": 523, "w4": 523, "chg": 524, "fchg": 524, "tchg": 524, "dloss_dv": 524, "dchg_dvm": 524, "tau": 524, "bc": 524, "total_system_real_loss": 524, "total_system_reac_loss": 524, "hilo": 526, "slope": [526, 724], "intersect": 526, "plane": 526, "box": 526, "smart": 526, "redund": 526, "e4st": 527, "environment": 527, "minopf": [528, 569, 583, 647], "mp_core": [530, 758], "pdipmopf": [531, 649], "tspopf": [531, 533, 538, 569, 583, 592], "regexp": 532, "regexp_split": 532, "scpdipmopf": 533, "sdp_pf": [534, 569], "relax": [534, 569, 720], "mx": [534, 536], "smartmarket": 535, "runmarket": 535, "syngrid": 536, "r2013b": 537, "apjank": 537, "tralmopf": 538, "trust": [538, 569, 583], "augment": [538, 569, 583], "langrangian": [538, 569, 583], "oldval": [539, 540], "a_orig": 539, "gencost_orig": 539, "ploss": 541, "mismatch": [542, 569, 583, 592], "restor": 547, "revert": 547, "AND": [548, 720], "revis": [548, 620, 624], "sensibl": 548, "elast": 548, "mpc0": 549, "voll": 549, "lost": 549, "casefil": 550, "doesn": 550, "abort": 550, "fewer": 550, "ild": 551, "curtail": 551, "shed": 551, "nld": 551, "total_load_sh": 551, "iang": 552, "apqh": 553, "ubpqh": 553, "apql": 553, "ubpql": 553, "trapezoid": 553, "constain": 553, "ipqh": 553, "ipql": 553, "ivl": 554, "pgba": 555, "qgba": 555, "yba": 555, "BY": 555, "basin": [555, 592], "fdxb": [556, 569], "fdbx": [556, 569], "pf_alg": [556, 583], "bbu": 557, "pbusinj": 557, "pfinj": 557, "fulljac": 558, "ptdf": [559, 560], "mask_bridg": 559, "outag": 559, "lodf": 559, "nbr": [559, 560], "bus_idx": 560, "txfr": 560, "rand": 560, "v_corr": 564, "seen": 564, "zpv": 565, "mutual": 565, "joint": 565, "forward": [565, 629], "sweep": [565, 629], "margin": [566, 643, 720], "marginalcost": 566, "modtyp": [568, 643], "newgencost": 568, "f_alpha": 568, "scale_f": [568, 643], "scale_x": [568, 643], "shift_f": 568, "shift_x": 568, "value1": [569, 583], "value2": [569, 583], "embed": 569, "opt0": 569, "opt_vector": 569, "uppercas": 569, "permit": 569, "sh": 569, "ip": 569, "ih": 569, "xb": [569, 583], "bx": [569, 583], "zg": 569, "implicit": [569, 725], "pqsum": 569, "isum": 569, "ysum": 569, "vcorr": 569, "expens": [569, 583, 635, 639], "enforce_p_lim": [569, 632], "enforce_v_lim": [569, 632], "enforce_flow_lim": [569, 632], "p_lims_tol": 569, "q_lims_tol": 569, "v_lims_tol": 569, "flow_lims_tol": 569, "pdipm": [569, 583, 592, 701], "sdpopf": 569, "semidefinit": 569, "tralm": [569, 583, 703], "op": 569, "analyt": 569, "5e": [569, 583], "setpt": 569, "averag": 569, "flow_lim": [569, 596], "ignore_angle_lim": 569, "diff": 569, "softlim": [569, 700, 720], "soft": [569, 700, 720], "strategi": 569, "decid": [569, 583], "return_raw_d": [569, 583], "littl": [569, 583], "sys_sum": 569, "area_sum": 569, "out_line_lim": [569, 583], "out_pg_lim": [569, 583], "out_qg_lim": [569, 583], "pwr": 569, "suppress_detail": 569, "complementari": [569, 583], "cntrl": 569, "concurr": [569, 583], "auto": [569, 583], "knitro_user_options_n": [569, 583], "rowtol": 569, "xtol": 569, "majdamp": 569, "mindamp": 569, "minor": [569, 583], "penalti": [569, 583], "major_it": 569, "minor_it": 569, "fort": [569, 583], "1200": [569, 583], "supbasic_lim": 569, "superbas": [569, 583], "mult_pric": 569, "gap": [569, 583], "smooth_ratio": 569, "primaltol": 569, "dualtol": 569, "use_legacy_cor": [569, 758], "bypass": [569, 758], "pw": 569, "qw": 569, "pf_tol": 583, "opf_alg": 583, "565": 583, "pf_max_it": 583, "pf_max_it_fd": 583, "pf_max_it_g": 583, "pf_dc": 583, "540": 583, "560": 583, "545": 583, "550": 583, "opf_viol": 583, "constr_tol_x": 583, "constr_tol_f": 583, "constr_max_it": 583, "opf_flow_lim": 583, "opf_ignore_ang_lim": 583, "opf_alg_dc": 583, "out_al": 583, "33": [583, 640], "out_sys_sum": 583, "out_area_sum": 583, "out_bu": 583, "out_branch": 583, "out_gen": 583, "out_all_lim": 583, "out_v_lim": 583, "out_forc": 583, "55": 583, "fmc_alg": 583, "mns_feastol": 583, "mns_rowtol": 583, "63": 583, "mns_xtol": 583, "mns_majdamp": 583, "mns_mindamp": 583, "mns_penalty_parm": 583, "67": 583, "mns_major_it": 583, "mns_minor_it": 583, "mns_max_it": 583, "mns_verbos": 583, "71": 583, "mns_core": 583, "mns_supbasic_lim": 583, "mns_mult_pric": 583, "pdipm_feastol": 583, "82": 583, "pdipm_gradtol": 583, "83": 583, "pdipm_comptol": 583, "pdipm_costtol": 583, "pdipm_max_it": 583, "scpdipm_red_it": 583, "tralm_feastol": 583, "tralm_primetol": 583, "tralm_dualtol": 583, "tralm_costtol": 583, "91": 583, "tralm_major_it": 583, "tralm_minor_it": 583, "smoothing_ratio": 583, "cplex_lpmethod": 583, "96": 583, "cplex_qpmethod": 583, "111": 583, "mosek_max_it": 583, "113": 583, "mosek_gap_tol": 583, "mosek_max_tim": 583, "mosek_num_thread": 583, "116": 583, "grb_method": 583, "122": 583, "grb_timelimit": 583, "grb_thread": 583, "raphson": [585, 586, 587, 588, 589, 590], "nln": [591, 592], "latter": [592, 723], "encod": [592, 593], "fun": 592, "mistmatch": 592, "pqh": 592, "pql": 592, "ycon": 592, "au": 593, "lbu": 593, "ubu": 593, "vadif": 594, "dvadif": 594, "d2vadif": 595, "ig": 601, "veq": 608, "dveq": 608, "d2veq": 609, "dvlim": 610, "d2vlim": 611, "vref": 612, "dvref": 612, "d2vref": 613, "bus0": 615, "gen0": 615, "branch0": 615, "npt": 616, "pwlcost": 616, "too": [617, 632], "effeci": 617, "polyv": 617, "polyd": 617, "pcost": 618, "qcost": 618, "ON": 618, "stdout": 619, "fclose": 619, "rawfile_nam": [620, 627], "identif": 620, "hvdc": [620, 622], "accumul": [621, 623, 624, 626], "twodc": [622, 624], "trans2": [623, 624], "trans3": [623, 624], "OF": [624, 626, 627], "swshunt": 624, "fid": 625, "templat": [625, 626], "float": [625, 626], "sscanf": [625, 626], "quot": [625, 626], "strip": [625, 626], "rv": 631, "basecasedata": 632, "targetcasedata": 632, "solvedcas": [632, 633, 634, 635, 636, 637, 638, 639], "nstep": 632, "nevent": 632, "fal": 632, "induc": 632, "bifurc": 632, "target_lam_v": 632, "did": 632, "event_nam": 632, "casedata": [633, 634, 635, 636, 637, 638, 639], "decommit": [635, 639, 723], "heurist": [635, 639], "shut": [635, 639, 723], "nrz": [637, 719], "ngr": [637, 719], "rmin": [637, 719], "rmax": [637, 719], "rawver": 640, "overwritten": [640, 641], "casestruct": 641, "pssecon2chgtab": 642, "extent": 642, "dmd": 643, "load_zon": [643, 721], "ONES": 643, "benefit": 643, "untouch": 644, "pad": 644, "iflim": [650, 704], "off2cas": 680, "scpdipm": 702, "runmkt": 711, "smartmkt": 711, "on_off": [717, 718, 719, 720], "t_f": [717, 718, 719, 720], "caution": 717, "results1": 717, "results2": 717, "nif": 718, "busnum": 720, "base_cost": 720, "hl_mod": 720, "hl": 720, "hl_val": 720, "overload": 720, "ovl_cost": 720, "reativ": 721, "realiz": 721, "totalcost": 722, "sequenc": 723, "candid": 723, "gain": 723, "mu_pqh": 724, "mu_pql": 724, "seriou": 725, "out_ac": 746, "multip": 747, "wrt": [748, 749, 750, 751], "uniform": 757, "3237850": 757, "tech": 757, "4110676": 757, "decrib": 758, "Or": 758, "mainli": 758}, "objects": {"": [[463, 0, 1, "", "add_userfcn"], [464, 0, 1, "", "apply_changes"], [42, 0, 1, "", "apply_profile"], [466, 0, 1, "", "calc_branch_angle"], [467, 0, 1, "", "calc_v_i_sum"], [468, 0, 1, "", "calc_v_pq_sum"], [469, 0, 1, "", "calc_v_y_sum"], [470, 0, 1, "", "case_info"], [473, 0, 1, "", "compare_case"], [474, 0, 1, "", "connected_components"], [108, 0, 1, "", "convert_lin_constraint"], [109, 0, 1, "", "convert_lin_constraint_multipliers"], [475, 0, 1, "", "cpf_corrector"], [476, 0, 1, "", "cpf_current_mpc"], [477, 0, 1, "", "cpf_default_callback"], [478, 0, 1, "", "cpf_detect_events"], [479, 0, 1, "", "cpf_flim_event"], [480, 0, 1, "", "cpf_flim_event_cb"], [481, 0, 1, "", "cpf_nose_event"], [482, 0, 1, "", "cpf_nose_event_cb"], [483, 0, 1, "", "cpf_p"], [484, 0, 1, "", "cpf_p_jac"], [485, 0, 1, "", "cpf_plim_event"], [486, 0, 1, "", "cpf_plim_event_cb"], [487, 0, 1, "", "cpf_predictor"], [488, 0, 1, "", "cpf_qlim_event"], [489, 0, 1, "", "cpf_qlim_event_cb"], [490, 0, 1, "", "cpf_register_callback"], [491, 0, 1, "", "cpf_register_event"], [492, 0, 1, "", "cpf_tangent"], [493, 0, 1, "", "cpf_target_lam_event"], [494, 0, 1, "", "cpf_target_lam_event_cb"], [495, 0, 1, "", "cpf_vlim_event"], [496, 0, 1, "", "cpf_vlim_event_cb"], [110, 0, 1, "", "cplex_options"], [497, 0, 1, "", "d2Abr_dV2"], [498, 0, 1, "", "d2Ibr_dV2"], [499, 0, 1, "", "d2Imis_dV2"], [500, 0, 1, "", "d2Imis_dVdSg"], [501, 0, 1, "", "d2Sbr_dV2"], [502, 0, 1, "", "d2Sbus_dV2"], [503, 0, 1, "", "dAbr_dV"], [504, 0, 1, "", "dIbr_dV"], [505, 0, 1, "", "dImis_dV"], [506, 0, 1, "", "dSbr_dV"], [507, 0, 1, "", "dSbus_dV"], [509, 0, 1, "", "dcopf_solver"], [511, 0, 1, "", "define_constants"], [512, 0, 1, "", "e2i_data"], [513, 0, 1, "", "e2i_field"], [44, 0, 1, "", "ex_case3a"], [45, 0, 1, "", "ex_case3b"], [46, 0, 1, "", "ex_contab"], [47, 0, 1, "", "ex_load_profile"], [48, 0, 1, "", "ex_storage"], [49, 0, 1, "", "ex_transmat"], [50, 0, 1, "", "ex_wind"], [51, 0, 1, "", "ex_wind_profile"], [52, 0, 1, "", "ex_wind_profile_d"], [53, 0, 1, "", "ex_wind_uc"], [54, 0, 1, "", "ex_xgd"], [55, 0, 1, "", "ex_xgd_ramp"], [56, 0, 1, "", "ex_xgd_res"], [57, 0, 1, "", "ex_xgd_uc"], [515, 0, 1, "", "extract_islands"], [517, 0, 1, "", "feval_w_path"], [58, 0, 1, "", "filter_ramp_transitions"], [518, 0, 1, "", "find_bridges"], [519, 0, 1, "", "find_islands"], [14, 0, 1, "", "generate_autodoc_stubs"], [15, 0, 1, "", "generate_matpower_autodoc"], [16, 0, 1, "", "generate_source_symlinks"], [524, 0, 1, "", "get_losses"], [525, 0, 1, "", "get_reorder"], [111, 0, 1, "", "glpk_options"], [112, 0, 1, "", "gurobi_options"], [526, 0, 1, "", "hasPQcap"], [218, 0, 1, "", "have_feature"], [114, 0, 1, "", "have_feature_bpmpd"], [115, 0, 1, "", "have_feature_catchme"], [116, 0, 1, "", "have_feature_clp"], [117, 0, 1, "", "have_feature_cplex"], [527, 0, 1, "", "have_feature_e4st"], [118, 0, 1, "", "have_feature_evalc"], [119, 0, 1, "", "have_feature_fmincon"], [120, 0, 1, "", "have_feature_fmincon_ipm"], [121, 0, 1, "", "have_feature_fsolve"], [122, 0, 1, "", "have_feature_glpk"], [123, 0, 1, "", "have_feature_gurobi"], [124, 0, 1, "", "have_feature_intlinprog"], [125, 0, 1, "", "have_feature_ipopt"], [126, 0, 1, "", "have_feature_ipopt_auxdata"], [127, 0, 1, "", "have_feature_isequaln"], [128, 0, 1, "", "have_feature_knitro"], [129, 0, 1, "", "have_feature_knitromatlab"], [130, 0, 1, "", "have_feature_ktrlink"], [131, 0, 1, "", "have_feature_linprog"], [132, 0, 1, "", "have_feature_linprog_ds"], [22, 0, 1, "", "have_feature_lu_vec"], [219, 0, 1, "", "have_feature_matlab"], [528, 0, 1, "", "have_feature_minopf"], [133, 0, 1, "", "have_feature_mosek"], [529, 0, 1, "", "have_feature_most"], [530, 0, 1, "", "have_feature_mp_core"], [220, 0, 1, "", "have_feature_octave"], [134, 0, 1, "", "have_feature_opti_clp"], [135, 0, 1, "", "have_feature_optim"], [136, 0, 1, "", "have_feature_optimoptions"], [137, 0, 1, "", "have_feature_osqp"], [23, 0, 1, "", "have_feature_pardiso"], [24, 0, 1, "", "have_feature_pardiso_legacy"], [25, 0, 1, "", "have_feature_pardiso_object"], [531, 0, 1, "", "have_feature_pdipmopf"], [138, 0, 1, "", "have_feature_quadprog"], [139, 0, 1, "", "have_feature_quadprog_ls"], [532, 0, 1, "", "have_feature_regexp_split"], [533, 0, 1, "", "have_feature_scpdipmopf"], [534, 0, 1, "", "have_feature_sdp_pf"], [140, 0, 1, "", "have_feature_sdpt3"], [141, 0, 1, "", "have_feature_sedumi"], [535, 0, 1, "", "have_feature_smartmarket"], [536, 0, 1, "", "have_feature_syngrid"], [537, 0, 1, "", "have_feature_table"], [538, 0, 1, "", "have_feature_tralmopf"], [142, 0, 1, "", "have_feature_yalmip"], [539, 0, 1, "", "i2e_data"], [540, 0, 1, "", "i2e_field"], [541, 0, 1, "", "idx_brch"], [542, 0, 1, "", "idx_bus"], [543, 0, 1, "", "idx_cost"], [544, 0, 1, "", "idx_ct"], [545, 0, 1, "", "idx_dcline"], [546, 0, 1, "", "idx_gen"], [60, 0, 1, "", "idx_profile"], [454, 0, 1, "", "install_matpower"], [143, 0, 1, "", "ipopt_options"], [552, 0, 1, "", "makeAang"], [553, 0, 1, "", "makeApq"], [554, 0, 1, "", "makeAvl"], [555, 0, 1, "", "makeAy"], [556, 0, 1, "", "makeB"], [557, 0, 1, "", "makeBdc"], [558, 0, 1, "", "makeJac"], [559, 0, 1, "", "makeLODF"], [560, 0, 1, "", "makePTDF"], [561, 0, 1, "", "makeSbus"], [562, 0, 1, "", "makeSdzip"], [563, 0, 1, "", "makeYbus"], [564, 0, 1, "", "make_vcorr"], [565, 0, 1, "", "make_zpv"], [65, 0, 1, "", "md_init"], [27, 0, 1, "", "mips_example1"], [28, 0, 1, "", "mips_example2"], [144, 0, 1, "", "miqps_cplex"], [145, 0, 1, "", "miqps_glpk"], [146, 0, 1, "", "miqps_gurobi"], [147, 0, 1, "", "miqps_master"], [567, 0, 1, "", "miqps_matpower"], [148, 0, 1, "", "miqps_mosek"], [149, 0, 1, "", "miqps_ot"], [150, 0, 1, "", "mosek_options"], [151, 0, 1, "", "mosek_symbcon"], [67, 0, 1, "", "most_ex1_ed"], [68, 0, 1, "", "most_ex2_dcopf"], [69, 0, 1, "", "most_ex3_dcopf_w_uc"], [70, 0, 1, "", "most_ex4_dcopf_ss"], [71, 0, 1, "", "most_ex5_mpopf"], [72, 0, 1, "", "most_ex6_uc"], [73, 0, 1, "", "most_ex7_suc"], [74, 0, 1, "", "most_summary"], [729, 1, 1, "", "mp_foo_table"], [106, 1, 1, "", "mp_idx_manager"], [451, 1, 1, "", "mp_table"], [455, 0, 1, "", "mp_table_class"], [452, 1, 1, "", "mp_table_subclass"], [570, 0, 1, "", "mpoption_info_clp"], [571, 0, 1, "", "mpoption_info_cplex"], [572, 0, 1, "", "mpoption_info_fmincon"], [573, 0, 1, "", "mpoption_info_glpk"], [574, 0, 1, "", "mpoption_info_gurobi"], [575, 0, 1, "", "mpoption_info_intlinprog"], [576, 0, 1, "", "mpoption_info_ipopt"], [577, 0, 1, "", "mpoption_info_knitro"], [578, 0, 1, "", "mpoption_info_linprog"], [579, 0, 1, "", "mpoption_info_mips"], [580, 0, 1, "", "mpoption_info_mosek"], [76, 0, 1, "", "mpoption_info_most"], [581, 0, 1, "", "mpoption_info_osqp"], [582, 0, 1, "", "mpoption_info_quadprog"], [583, 0, 1, "", "mpoption_old"], [157, 0, 1, "", "nested_struct_copy"], [586, 0, 1, "", "newtonpf_I_cart"], [587, 0, 1, "", "newtonpf_I_hybrid"], [588, 0, 1, "", "newtonpf_I_polar"], [589, 0, 1, "", "newtonpf_S_cart"], [590, 0, 1, "", "newtonpf_S_hybrid"], [158, 0, 1, "", "nleqs_core"], [159, 0, 1, "", "nleqs_fd_newton"], [160, 0, 1, "", "nleqs_fsolve"], [161, 0, 1, "", "nleqs_gauss_seidel"], [162, 0, 1, "", "nleqs_master"], [163, 0, 1, "", "nleqs_master_ex1"], [164, 0, 1, "", "nleqs_master_ex2"], [165, 0, 1, "", "nleqs_newton"], [166, 0, 1, "", "nlp_consfcn"], [167, 0, 1, "", "nlp_costfcn"], [168, 0, 1, "", "nlp_hessfcn"], [591, 0, 1, "", "nlpopf_solver"], [169, 0, 1, "", "nlps_fmincon"], [170, 0, 1, "", "nlps_ipopt"], [171, 0, 1, "", "nlps_knitro"], [172, 0, 1, "", "nlps_master"], [173, 0, 1, "", "nlps_master_ex1"], [174, 0, 1, "", "nlps_master_ex2"], [593, 0, 1, "", "opf_args"], [594, 0, 1, "", "opf_branch_ang_fcn"], [595, 0, 1, "", "opf_branch_ang_hess"], [596, 0, 1, "", "opf_branch_flow_fcn"], [597, 0, 1, "", "opf_branch_flow_hess"], [598, 0, 1, "", "opf_current_balance_fcn"], [599, 0, 1, "", "opf_current_balance_hess"], [600, 0, 1, "", "opf_execute"], [601, 0, 1, "", "opf_gen_cost_fcn"], [602, 0, 1, "", "opf_legacy_user_cost_fcn"], [462, 1, 1, "", "opf_model"], [603, 0, 1, "", "opf_nle_fcn1"], [604, 0, 1, "", "opf_nle_hess1"], [605, 0, 1, "", "opf_power_balance_fcn"], [606, 0, 1, "", "opf_power_balance_hess"], [607, 0, 1, "", "opf_setup"], [608, 0, 1, "", "opf_veq_fcn"], [609, 0, 1, "", "opf_veq_hess"], [610, 0, 1, "", "opf_vlim_fcn"], [611, 0, 1, "", "opf_vlim_hess"], [612, 0, 1, "", "opf_vref_fcn"], [613, 0, 1, "", "opf_vref_hess"], [107, 1, 1, "", "opt_model"], [614, 0, 1, "", "order_radial"], [175, 0, 1, "", "osqp_options"], [77, 0, 1, "", "plot_gen"], [78, 0, 1, "", "plot_storage"], [79, 0, 1, "", "plot_uc"], [80, 0, 1, "", "plot_uc_data"], [177, 0, 1, "", "pne_callback_default"], [178, 0, 1, "", "pne_callback_nose"], [179, 0, 1, "", "pne_callback_target_lam"], [180, 0, 1, "", "pne_detect_events"], [181, 0, 1, "", "pne_detected_event"], [182, 0, 1, "", "pne_event_nose"], [183, 0, 1, "", "pne_event_target_lam"], [184, 0, 1, "", "pne_ex1"], [185, 0, 1, "", "pne_pfcn_arc_len"], [186, 0, 1, "", "pne_pfcn_natural"], [187, 0, 1, "", "pne_pfcn_pseudo_arc_len"], [188, 0, 1, "", "pne_register_callbacks"], [189, 0, 1, "", "pne_register_events"], [190, 0, 1, "", "pnes_master"], [621, 0, 1, "", "psse_convert"], [622, 0, 1, "", "psse_convert_hvdc"], [623, 0, 1, "", "psse_convert_xfmr"], [624, 0, 1, "", "psse_parse"], [625, 0, 1, "", "psse_parse_line"], [626, 0, 1, "", "psse_parse_section"], [627, 0, 1, "", "psse_read"], [191, 0, 1, "", "qp_ex1"], [192, 0, 1, "", "qps_bpmpd"], [193, 0, 1, "", "qps_clp"], [194, 0, 1, "", "qps_cplex"], [195, 0, 1, "", "qps_glpk"], [196, 0, 1, "", "qps_gurobi"], [197, 0, 1, "", "qps_ipopt"], [198, 0, 1, "", "qps_master"], [628, 0, 1, "", "qps_matpower"], [31, 0, 1, "", "qps_mips"], [199, 0, 1, "", "qps_mosek"], [200, 0, 1, "", "qps_osqp"], [201, 0, 1, "", "qps_ot"], [629, 0, 1, "", "radial_pf"], [630, 0, 1, "", "remove_userfcn"], [456, 0, 1, "", "run_cpf"], [457, 0, 1, "", "run_mp"], [458, 0, 1, "", "run_opf"], [459, 0, 1, "", "run_pf"], [631, 0, 1, "", "run_userfcn"], [637, 0, 1, "", "runopf_w_res"], [643, 0, 1, "", "scale_load"], [644, 0, 1, "", "set_reorder"], [645, 0, 1, "", "t_apply_changes"], [646, 0, 1, "", "t_auction_case"], [647, 0, 1, "", "t_auction_minopf"], [648, 0, 1, "", "t_auction_mips"], [649, 0, 1, "", "t_auction_tspopf_pdipm"], [222, 0, 1, "", "t_begin"], [81, 0, 1, "", "t_case30_most"], [650, 0, 1, "", "t_case30_userfcns"], [82, 0, 1, "", "t_case3_most"], [730, 0, 1, "", "t_case3p_a"], [731, 0, 1, "", "t_case3p_b"], [732, 0, 1, "", "t_case3p_c"], [733, 0, 1, "", "t_case3p_d"], [734, 0, 1, "", "t_case3p_e"], [735, 0, 1, "", "t_case3p_f"], [736, 0, 1, "", "t_case3p_g"], [737, 0, 1, "", "t_case3p_h"], [651, 0, 1, "", "t_case9_dcline"], [738, 0, 1, "", "t_case9_gizmo"], [652, 0, 1, "", "t_case9_opf"], [653, 0, 1, "", "t_case9_opfv2"], [654, 0, 1, "", "t_case9_pf"], [655, 0, 1, "", "t_case9_pfv2"], [656, 0, 1, "", "t_case9_save2psse"], [657, 0, 1, "", "t_case_ext"], [658, 0, 1, "", "t_case_int"], [83, 0, 1, "", "t_case_tlmp"], [84, 0, 1, "", "t_case_tlmp_storage"], [659, 0, 1, "", "t_chgtab"], [660, 0, 1, "", "t_cpf"], [661, 0, 1, "", "t_cpf_cb1"], [662, 0, 1, "", "t_cpf_cb2"], [663, 0, 1, "", "t_dcline"], [739, 0, 1, "", "t_dmc_element"], [223, 0, 1, "", "t_end"], [664, 0, 1, "", "t_ext2int2ext"], [665, 0, 1, "", "t_feval_w_path"], [224, 0, 1, "", "t_file_match"], [666, 0, 1, "", "t_get_losses"], [667, 0, 1, "", "t_hasPQcap"], [225, 0, 1, "", "t_have_feature"], [668, 0, 1, "", "t_hessian"], [226, 0, 1, "", "t_is"], [669, 0, 1, "", "t_islands"], [670, 0, 1, "", "t_jacobian"], [671, 0, 1, "", "t_load2disp"], [672, 0, 1, "", "t_loadcase"], [673, 0, 1, "", "t_makeLODF"], [674, 0, 1, "", "t_makePTDF"], [675, 0, 1, "", "t_margcost"], [32, 0, 1, "", "t_mips"], [33, 0, 1, "", "t_mips_pardiso"], [202, 0, 1, "", "t_miqps_master"], [676, 0, 1, "", "t_miqps_matpower"], [677, 0, 1, "", "t_modcost"], [85, 0, 1, "", "t_most_30b_1_1_0"], [86, 0, 1, "", "t_most_30b_1_1_0_uc"], [87, 0, 1, "", "t_most_30b_1_1_17"], [88, 0, 1, "", "t_most_30b_3_1_0"], [89, 0, 1, "", "t_most_30b_3_1_17"], [90, 0, 1, "", "t_most_3b_1_1_0"], [91, 0, 1, "", "t_most_3b_1_1_2"], [92, 0, 1, "", "t_most_3b_3_1_0"], [93, 0, 1, "", "t_most_3b_3_1_2"], [94, 0, 1, "", "t_most_fixed_res"], [95, 0, 1, "", "t_most_mpopf"], [96, 0, 1, "", "t_most_sp"], [97, 0, 1, "", "t_most_spuc"], [98, 0, 1, "", "t_most_suc"], [99, 0, 1, "", "t_most_tlmp"], [100, 0, 1, "", "t_most_uc"], [101, 0, 1, "", "t_most_w_ds"], [740, 0, 1, "", "t_mp_data_model"], [741, 0, 1, "", "t_mp_dm_converter_mpc2"], [742, 0, 1, "", "t_mp_mapped_array"], [743, 0, 1, "", "t_mp_table"], [34, 0, 1, "", "t_mplinsolve"], [678, 0, 1, "", "t_mpoption"], [679, 0, 1, "", "t_mpoption_ov"], [744, 0, 1, "", "t_mpxt_legacy_dcline"], [745, 0, 1, "", "t_mpxt_reserves"], [203, 0, 1, "", "t_nested_struct_copy"], [204, 0, 1, "", "t_nleqs_master"], [205, 0, 1, "", "t_nlps_master"], [746, 0, 1, "", "t_nm_element"], [747, 0, 1, "", "t_node_test"], [680, 0, 1, "", "t_off2case"], [227, 0, 1, "", "t_ok"], [206, 0, 1, "", "t_om_solve_leqs"], [207, 0, 1, "", "t_om_solve_miqps"], [208, 0, 1, "", "t_om_solve_nleqs"], [209, 0, 1, "", "t_om_solve_nlps"], [210, 0, 1, "", "t_om_solve_pne"], [211, 0, 1, "", "t_om_solve_qps"], [681, 0, 1, "", "t_opf_dc_bpmpd"], [682, 0, 1, "", "t_opf_dc_clp"], [683, 0, 1, "", "t_opf_dc_cplex"], [684, 0, 1, "", "t_opf_dc_default"], [685, 0, 1, "", "t_opf_dc_glpk"], [686, 0, 1, "", "t_opf_dc_gurobi"], [687, 0, 1, "", "t_opf_dc_ipopt"], [688, 0, 1, "", "t_opf_dc_mips"], [689, 0, 1, "", "t_opf_dc_mips_sc"], [690, 0, 1, "", "t_opf_dc_mosek"], [691, 0, 1, "", "t_opf_dc_osqp"], [692, 0, 1, "", "t_opf_dc_ot"], [693, 0, 1, "", "t_opf_default"], [694, 0, 1, "", "t_opf_fmincon"], [695, 0, 1, "", "t_opf_ipopt"], [696, 0, 1, "", "t_opf_knitro"], [697, 0, 1, "", "t_opf_minopf"], [698, 0, 1, "", "t_opf_mips"], [699, 0, 1, "", "t_opf_model"], [700, 0, 1, "", "t_opf_softlims"], [701, 0, 1, "", "t_opf_tspopf_pdipm"], [702, 0, 1, "", "t_opf_tspopf_scpdipm"], [703, 0, 1, "", "t_opf_tspopf_tralm"], [704, 0, 1, "", "t_opf_userfcns"], [212, 0, 1, "", "t_opt_model"], [705, 0, 1, "", "t_pf_ac"], [706, 0, 1, "", "t_pf_dc"], [707, 0, 1, "", "t_pf_radial"], [213, 0, 1, "", "t_pnes_master"], [748, 0, 1, "", "t_port_inj_current_acc"], [749, 0, 1, "", "t_port_inj_current_acp"], [750, 0, 1, "", "t_port_inj_power_acc"], [751, 0, 1, "", "t_port_inj_power_acp"], [752, 0, 1, "", "t_pretty_print"], [708, 0, 1, "", "t_printpf"], [709, 0, 1, "", "t_psse"], [214, 0, 1, "", "t_qps_master"], [710, 0, 1, "", "t_qps_matpower"], [35, 0, 1, "", "t_qps_mips"], [753, 0, 1, "", "t_run_mp"], [754, 0, 1, "", "t_run_mp_3p"], [755, 0, 1, "", "t_run_opf_default"], [228, 0, 1, "", "t_run_tests"], [711, 0, 1, "", "t_runmarket"], [712, 0, 1, "", "t_runopf_w_res"], [713, 0, 1, "", "t_scale_load"], [229, 0, 1, "", "t_skip"], [230, 0, 1, "", "t_str_match"], [231, 0, 1, "", "t_test_fcns"], [714, 0, 1, "", "t_total_load"], [715, 0, 1, "", "t_totcost"], [716, 0, 1, "", "t_vdep_load"], [756, 0, 1, "", "test_matpower"], [36, 0, 1, "", "test_mips"], [102, 0, 1, "", "test_most"], [215, 0, 1, "", "test_mp_opt_model"], [232, 0, 1, "", "test_mptest"], [717, 0, 1, "", "toggle_dcline"], [718, 0, 1, "", "toggle_iflims"], [719, 0, 1, "", "toggle_reserves"], [720, 0, 1, "", "toggle_softlims"], [721, 0, 1, "", "total_load"], [724, 0, 1, "", "update_mupq"]], "mips": [[26, 0, 1, "", "mips"]], "most": [[66, 0, 1, "", "most"]], "mp": [[236, 1, 1, "", "NODE_TYPE"], [237, 1, 1, "", "cost_table"], [238, 1, 1, "", "cost_table_utils"], [239, 1, 1, "", "data_model"], [240, 1, 1, "", "data_model_cpf"], [241, 1, 1, "", "data_model_opf"], [242, 1, 1, "", "dm_converter"], [243, 1, 1, "", "dm_converter_mpc2"], [244, 1, 1, "", "dm_converter_mpc2_legacy"], [245, 1, 1, "", "dm_element"], [246, 1, 1, "", "dmc_element"], [247, 1, 1, "", "dmce_branch_mpc2"], [248, 1, 1, "", "dmce_bus3p_mpc2"], [249, 1, 1, "", "dmce_bus_mpc2"], [250, 1, 1, "", "dmce_buslink_mpc2"], [251, 1, 1, "", "dmce_gen3p_mpc2"], [252, 1, 1, "", "dmce_gen_mpc2"], [253, 1, 1, "", "dmce_legacy_dcline_mpc2"], [254, 1, 1, "", "dmce_line3p_mpc2"], [255, 1, 1, "", "dmce_load3p_mpc2"], [256, 1, 1, "", "dmce_load_mpc2"], [257, 1, 1, "", "dmce_reserve_gen_mpc2"], [258, 1, 1, "", "dmce_reserve_zone_mpc2"], [259, 1, 1, "", "dmce_shunt_mpc2"], [260, 1, 1, "", "dmce_xfmr3p_mpc2"], [261, 1, 1, "", "dme_branch"], [262, 1, 1, "", "dme_branch_opf"], [263, 1, 1, "", "dme_bus"], [264, 1, 1, "", "dme_bus3p"], [265, 1, 1, "", "dme_bus3p_opf"], [266, 1, 1, "", "dme_bus_opf"], [267, 1, 1, "", "dme_buslink"], [268, 1, 1, "", "dme_buslink_opf"], [269, 1, 1, "", "dme_gen"], [270, 1, 1, "", "dme_gen3p"], [271, 1, 1, "", "dme_gen3p_opf"], [272, 1, 1, "", "dme_gen_opf"], [273, 1, 1, "", "dme_legacy_dcline"], [274, 1, 1, "", "dme_legacy_dcline_opf"], [275, 1, 1, "", "dme_line3p"], [276, 1, 1, "", "dme_line3p_opf"], [277, 1, 1, "", "dme_load"], [278, 1, 1, "", "dme_load3p"], [279, 1, 1, "", "dme_load3p_opf"], [280, 1, 1, "", "dme_load_cpf"], [281, 1, 1, "", "dme_load_opf"], [282, 1, 1, "", "dme_reserve_gen"], [283, 1, 1, "", "dme_reserve_zone"], [284, 1, 1, "", "dme_shared_opf"], [285, 1, 1, "", "dme_shunt"], [286, 1, 1, "", "dme_shunt_cpf"], [287, 1, 1, "", "dme_shunt_opf"], [288, 1, 1, "", "dme_xfmr3p"], [289, 1, 1, "", "dme_xfmr3p_opf"], [290, 1, 1, "", "element_container"], [291, 1, 1, "", "extension"], [292, 1, 1, "", "form"], [293, 1, 1, "", "form_ac"], [294, 1, 1, "", "form_acc"], [295, 1, 1, "", "form_acp"], [296, 1, 1, "", "form_dc"], [297, 1, 1, "", "mapped_array"], [298, 1, 1, "", "math_model"], [299, 1, 1, "", "math_model_cpf_acc"], [300, 1, 1, "", "math_model_cpf_acci"], [301, 1, 1, "", "math_model_cpf_accs"], [302, 1, 1, "", "math_model_cpf_acp"], [303, 1, 1, "", "math_model_cpf_acpi"], [304, 1, 1, "", "math_model_cpf_acps"], [305, 1, 1, "", "math_model_opf"], [306, 1, 1, "", "math_model_opf_ac"], [307, 1, 1, "", "math_model_opf_acc"], [308, 1, 1, "", "math_model_opf_acci"], [309, 1, 1, "", "math_model_opf_acci_legacy"], [310, 1, 1, "", "math_model_opf_accs"], [311, 1, 1, "", "math_model_opf_accs_legacy"], [312, 1, 1, "", "math_model_opf_acp"], [313, 1, 1, "", "math_model_opf_acpi"], [314, 1, 1, "", "math_model_opf_acpi_legacy"], [315, 1, 1, "", "math_model_opf_acps"], [316, 1, 1, "", "math_model_opf_acps_legacy"], [317, 1, 1, "", "math_model_opf_dc"], [318, 1, 1, "", "math_model_opf_dc_legacy"], [319, 1, 1, "", "math_model_pf"], [320, 1, 1, "", "math_model_pf_ac"], [321, 1, 1, "", "math_model_pf_acci"], [322, 1, 1, "", "math_model_pf_accs"], [323, 1, 1, "", "math_model_pf_acpi"], [324, 1, 1, "", "math_model_pf_acps"], [325, 1, 1, "", "math_model_pf_dc"], [326, 1, 1, "", "mm_element"], [327, 1, 1, "", "mm_shared_opf_legacy"], [328, 1, 1, "", "mm_shared_pfcpf"], [329, 1, 1, "", "mm_shared_pfcpf_ac"], [330, 1, 1, "", "mm_shared_pfcpf_ac_i"], [331, 1, 1, "", "mm_shared_pfcpf_acc"], [332, 1, 1, "", "mm_shared_pfcpf_acci"], [333, 1, 1, "", "mm_shared_pfcpf_accs"], [334, 1, 1, "", "mm_shared_pfcpf_acp"], [335, 1, 1, "", "mm_shared_pfcpf_acpi"], [336, 1, 1, "", "mm_shared_pfcpf_acps"], [337, 1, 1, "", "mm_shared_pfcpf_dc"], [338, 1, 1, "", "mme_branch"], [339, 1, 1, "", "mme_branch_opf"], [340, 1, 1, "", "mme_branch_opf_ac"], [341, 1, 1, "", "mme_branch_opf_acc"], [342, 1, 1, "", "mme_branch_opf_acp"], [343, 1, 1, "", "mme_branch_opf_dc"], [344, 1, 1, "", "mme_branch_pf_ac"], [345, 1, 1, "", "mme_branch_pf_dc"], [346, 1, 1, "", "mme_bus"], [347, 1, 1, "", "mme_bus3p"], [348, 1, 1, "", "mme_bus3p_opf_acc"], [349, 1, 1, "", "mme_bus3p_opf_acp"], [350, 1, 1, "", "mme_bus_opf_ac"], [351, 1, 1, "", "mme_bus_opf_acc"], [352, 1, 1, "", "mme_bus_opf_acp"], [353, 1, 1, "", "mme_bus_opf_dc"], [354, 1, 1, "", "mme_bus_pf_ac"], [355, 1, 1, "", "mme_bus_pf_dc"], [356, 1, 1, "", "mme_buslink"], [357, 1, 1, "", "mme_buslink_opf"], [358, 1, 1, "", "mme_buslink_opf_acc"], [359, 1, 1, "", "mme_buslink_opf_acp"], [360, 1, 1, "", "mme_buslink_pf_ac"], [361, 1, 1, "", "mme_buslink_pf_acc"], [362, 1, 1, "", "mme_buslink_pf_acp"], [363, 1, 1, "", "mme_gen"], [364, 1, 1, "", "mme_gen3p"], [365, 1, 1, "", "mme_gen3p_opf"], [366, 1, 1, "", "mme_gen_opf"], [367, 1, 1, "", "mme_gen_opf_ac"], [368, 1, 1, "", "mme_gen_opf_ac_oval"], [369, 1, 1, "", "mme_gen_opf_dc"], [370, 1, 1, "", "mme_gen_pf_ac"], [371, 1, 1, "", "mme_gen_pf_dc"], [372, 1, 1, "", "mme_legacy_dcline"], [373, 1, 1, "", "mme_legacy_dcline_opf"], [374, 1, 1, "", "mme_legacy_dcline_opf_ac"], [375, 1, 1, "", "mme_legacy_dcline_opf_dc"], [376, 1, 1, "", "mme_legacy_dcline_pf_ac"], [377, 1, 1, "", "mme_legacy_dcline_pf_dc"], [378, 1, 1, "", "mme_line3p"], [379, 1, 1, "", "mme_line3p_opf"], [380, 1, 1, "", "mme_load"], [381, 1, 1, "", "mme_load_cpf"], [382, 1, 1, "", "mme_load_pf_ac"], [383, 1, 1, "", "mme_load_pf_dc"], [384, 1, 1, "", "mme_reserve_gen"], [385, 1, 1, "", "mme_reserve_zone"], [386, 1, 1, "", "mme_shunt"], [387, 1, 1, "", "mme_shunt_cpf"], [388, 1, 1, "", "mme_shunt_pf_ac"], [389, 1, 1, "", "mme_shunt_pf_dc"], [390, 1, 1, "", "mme_xfmr3p"], [391, 1, 1, "", "mme_xfmr3p_opf"], [392, 1, 1, "", "net_model"], [393, 1, 1, "", "net_model_ac"], [394, 1, 1, "", "net_model_acc"], [395, 1, 1, "", "net_model_acp"], [396, 1, 1, "", "net_model_dc"], [397, 1, 1, "", "nm_element"], [398, 1, 1, "", "nme_branch"], [399, 1, 1, "", "nme_branch_ac"], [400, 1, 1, "", "nme_branch_acc"], [401, 1, 1, "", "nme_branch_acp"], [402, 1, 1, "", "nme_branch_dc"], [403, 1, 1, "", "nme_bus"], [404, 1, 1, "", "nme_bus3p"], [405, 1, 1, "", "nme_bus3p_acc"], [406, 1, 1, "", "nme_bus3p_acp"], [407, 1, 1, "", "nme_bus_acc"], [408, 1, 1, "", "nme_bus_acp"], [409, 1, 1, "", "nme_bus_dc"], [410, 1, 1, "", "nme_buslink"], [411, 1, 1, "", "nme_buslink_acc"], [412, 1, 1, "", "nme_buslink_acp"], [413, 1, 1, "", "nme_gen"], [414, 1, 1, "", "nme_gen3p"], [415, 1, 1, "", "nme_gen3p_acc"], [416, 1, 1, "", "nme_gen3p_acp"], [417, 1, 1, "", "nme_gen_ac"], [418, 1, 1, "", "nme_gen_acc"], [419, 1, 1, "", "nme_gen_acp"], [420, 1, 1, "", "nme_gen_dc"], [421, 1, 1, "", "nme_legacy_dcline"], [422, 1, 1, "", "nme_legacy_dcline_ac"], [423, 1, 1, "", "nme_legacy_dcline_acc"], [424, 1, 1, "", "nme_legacy_dcline_acp"], [425, 1, 1, "", "nme_legacy_dcline_dc"], [426, 1, 1, "", "nme_line3p"], [427, 1, 1, "", "nme_load"], [428, 1, 1, "", "nme_load3p"], [429, 1, 1, "", "nme_load_ac"], [430, 1, 1, "", "nme_load_acc"], [431, 1, 1, "", "nme_load_acp"], [432, 1, 1, "", "nme_load_dc"], [433, 1, 1, "", "nme_shunt"], [434, 1, 1, "", "nme_shunt_ac"], [435, 1, 1, "", "nme_shunt_acc"], [436, 1, 1, "", "nme_shunt_acp"], [437, 1, 1, "", "nme_shunt_dc"], [438, 1, 1, "", "nme_xfmr3p"], [439, 1, 1, "", "task"], [440, 1, 1, "", "task_cpf"], [441, 1, 1, "", "task_cpf_legacy"], [442, 1, 1, "", "task_opf"], [443, 1, 1, "", "task_opf_legacy"], [444, 1, 1, "", "task_pf"], [445, 1, 1, "", "task_pf_legacy"], [446, 1, 1, "", "task_shared_legacy"], [447, 1, 1, "", "xt_3p"], [448, 1, 1, "", "xt_legacy_dcline"], [449, 1, 1, "", "xt_oval_cap_curve"], [450, 1, 1, "", "xt_reserves"]], "mp.NODE_TYPE": [[236, 2, 1, "", "NONE"], [236, 2, 1, "", "PQ"], [236, 2, 1, "", "PV"], [236, 2, 1, "", "REF"], [236, 3, 1, "", "is_valid"]], "mp.cost_table": [[237, 4, 1, "", "cost_table"], [237, 3, 1, "", "diff_poly_fcn"], [237, 3, 1, "", "eval_poly_fcn"], [237, 4, 1, "", "max_pwl_cost"], [237, 3, 1, "", "poly_cost_fcn"], [237, 4, 1, "", "poly_params"], [237, 4, 1, "", "pwl_params"]], "mp.cost_table_utils": [[238, 3, 1, "", "max_pwl_cost"], [238, 3, 1, "", "poly_params"], [238, 3, 1, "", "pwl_params"]], "mp.data_model": [[239, 2, 1, "", "base_kva"], [239, 2, 1, "", "base_mva"], [239, 4, 1, "", "build"], [239, 4, 1, "", "build_params"], [239, 4, 1, "", "copy"], [239, 4, 1, "", "count"], [239, 4, 1, "", "data_model"], [239, 4, 1, "", "display"], [239, 4, 1, "", "initialize"], [239, 4, 1, "", "online"], [239, 4, 1, "", "pp_data"], [239, 4, 1, "", "pp_flags"], [239, 4, 1, "", "pp_get_headers"], [239, 4, 1, "", "pp_get_headers_cnt"], [239, 4, 1, "", "pp_get_headers_ext"], [239, 4, 1, "", "pp_get_headers_other"], [239, 4, 1, "", "pp_have_section"], [239, 4, 1, "", "pp_section"], [239, 4, 1, "", "pp_section_label"], [239, 4, 1, "", "pp_section_list"], [239, 4, 1, "", "pretty_print"], [239, 4, 1, "", "set_bus_v_lims_via_vg"], [239, 2, 1, "", "source"], [239, 4, 1, "", "update_status"], [239, 2, 1, "", "userdata"]], "mp.data_model_cpf": [[240, 4, 1, "", "data_model_cpf"]], "mp.data_model_opf": [[241, 4, 1, "", "data_model_opf"], [241, 4, 1, "", "pp_flags"], [241, 4, 1, "", "pp_get_headers_other"], [241, 4, 1, "", "pp_section_list"]], "mp.dm_converter": [[242, 4, 1, "", "build"], [242, 4, 1, "", "copy"], [242, 4, 1, "", "display"], [242, 4, 1, "", "export"], [242, 4, 1, "", "format_tag"], [242, 4, 1, "", "import"], [242, 4, 1, "", "init_export"], [242, 4, 1, "", "save"]], "mp.dm_converter_mpc2": [[243, 4, 1, "", "dm_converter_mpc2"], [243, 4, 1, "", "format_tag"], [243, 4, 1, "", "import"], [243, 4, 1, "", "init_export"], [243, 4, 1, "", "save"]], "mp.dm_converter_mpc2_legacy": [[244, 4, 1, "", "legacy_user_mod_inputs"], [244, 4, 1, "", "legacy_user_nln_constraints"]], "mp.dm_element": [[245, 4, 1, "", "ID"], [245, 2, 1, "", "ID2i"], [245, 4, 1, "", "build_params"], [245, 4, 1, "", "copy"], [245, 4, 1, "", "count"], [245, 4, 1, "", "cxn_idx_prop"], [245, 4, 1, "", "cxn_type"], [245, 4, 1, "", "cxn_type_prop"], [245, 4, 1, "", "display"], [245, 4, 1, "", "dm_converter_element"], [245, 4, 1, "", "export_vars"], [245, 4, 1, "", "export_vars_offline_val"], [245, 2, 1, "", "i2on"], [245, 4, 1, "", "init_status"], [245, 4, 1, "", "initialize"], [245, 4, 1, "", "label"], [245, 4, 1, "", "labels"], [245, 4, 1, "", "main_table_var_names"], [245, 2, 1, "", "n"], [245, 4, 1, "", "name"], [245, 2, 1, "", "nr"], [245, 2, 1, "", "off"], [245, 2, 1, "", "on"], [245, 4, 1, "", "pp_data"], [245, 4, 1, "", "pp_data_cnt"], [245, 4, 1, "", "pp_data_det"], [245, 4, 1, "", "pp_data_ext"], [245, 4, 1, "", "pp_data_row_det"], [245, 4, 1, "", "pp_data_sum"], [245, 4, 1, "", "pp_get_footers"], [245, 4, 1, "", "pp_get_footers_det"], [245, 4, 1, "", "pp_get_headers"], [245, 4, 1, "", "pp_get_headers_det"], [245, 4, 1, "", "pp_get_title_det"], [245, 4, 1, "", "pp_have_section"], [245, 4, 1, "", "pp_have_section_cnt"], [245, 4, 1, "", "pp_have_section_det"], [245, 4, 1, "", "pp_have_section_ext"], [245, 4, 1, "", "pp_have_section_sum"], [245, 4, 1, "", "pp_rows"], [245, 4, 1, "", "pretty_print"], [245, 4, 1, "", "rebuild"], [245, 2, 1, "", "tab"], [245, 4, 1, "", "table_exists"], [245, 4, 1, "", "update_status"]], "mp.dmc_element": [[246, 4, 1, "", "data_exists"], [246, 4, 1, "", "data_field"], [246, 4, 1, "", "data_model_element"], [246, 4, 1, "", "data_subs"], [246, 4, 1, "", "default_export_data_nrows"], [246, 4, 1, "", "default_export_data_table"], [246, 4, 1, "", "export"], [246, 4, 1, "", "export_col"], [246, 4, 1, "", "export_table_values"], [246, 4, 1, "", "get_export_size"], [246, 4, 1, "", "get_export_spec"], [246, 4, 1, "", "get_import_size"], [246, 4, 1, "", "get_import_spec"], [246, 4, 1, "", "get_input_table_values"], [246, 4, 1, "", "import"], [246, 4, 1, "", "import_col"], [246, 4, 1, "", "import_table_values"], [246, 4, 1, "", "init_export_data"], [246, 4, 1, "", "name"], [246, 4, 1, "", "table_var_map"]], "mp.dmce_branch_mpc2": [[247, 4, 1, "", "data_field"], [247, 4, 1, "", "default_export_data_table"], [247, 4, 1, "", "name"], [247, 4, 1, "", "table_var_map"]], "mp.dmce_bus3p_mpc2": [[248, 4, 1, "", "bus_status_import"], [248, 4, 1, "", "data_field"], [248, 4, 1, "", "name"], [248, 4, 1, "", "table_var_map"]], "mp.dmce_bus_mpc2": [[249, 4, 1, "", "bus_name_export"], [249, 4, 1, "", "bus_name_import"], [249, 4, 1, "", "bus_status_import"], [249, 4, 1, "", "data_field"], [249, 4, 1, "", "default_export_data_table"], [249, 4, 1, "", "init_export_data"], [249, 4, 1, "", "name"], [249, 4, 1, "", "table_var_map"]], "mp.dmce_buslink_mpc2": [[250, 4, 1, "", "data_field"], [250, 4, 1, "", "name"], [250, 4, 1, "", "table_var_map"]], "mp.dmce_gen3p_mpc2": [[251, 4, 1, "", "data_field"], [251, 4, 1, "", "name"], [251, 4, 1, "", "table_var_map"]], "mp.dmce_gen_mpc2": [[252, 3, 1, "", "cost_table2gencost"], [252, 4, 1, "", "data_field"], [252, 4, 1, "", "default_export_data_table"], [252, 4, 1, "", "gen_cost_export"], [252, 4, 1, "", "gen_cost_import"], [252, 3, 1, "", "gencost2cost_table"], [252, 4, 1, "", "name"], [252, 2, 1, "", "pwl1"], [252, 4, 1, "", "start_cost_export"], [252, 4, 1, "", "start_cost_import"], [252, 4, 1, "", "table_var_map"]], "mp.dmce_legacy_dcline_mpc2": [[253, 4, 1, "", "data_field"], [253, 4, 1, "", "dcline_cost_export"], [253, 4, 1, "", "dcline_cost_import"], [253, 4, 1, "", "default_export_data_table"], [253, 4, 1, "", "name"], [253, 4, 1, "", "table_var_map"]], "mp.dmce_line3p_mpc2": [[254, 4, 1, "", "create_line_construction_table"], [254, 4, 1, "", "data_field"], [254, 4, 1, "", "import"], [254, 4, 1, "", "name"], [254, 4, 1, "", "table_var_map"]], "mp.dmce_load3p_mpc2": [[255, 2, 1, "", "bus"], [255, 4, 1, "", "data_field"], [255, 4, 1, "", "name"], [255, 4, 1, "", "table_var_map"]], "mp.dmce_load_mpc2": [[256, 2, 1, "", "bus"], [256, 4, 1, "", "data_field"], [256, 4, 1, "", "get_export_size"], [256, 4, 1, "", "get_import_size"], [256, 4, 1, "", "name"], [256, 4, 1, "", "scale_factor_fcn"], [256, 4, 1, "", "sys_wide_zip_loads"], [256, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_gen_mpc2": [[257, 4, 1, "", "data_field"], [257, 4, 1, "", "data_subs"], [257, 4, 1, "", "get_export_size"], [257, 4, 1, "", "get_import_size"], [257, 4, 1, "", "import"], [257, 4, 1, "", "import_cost"], [257, 4, 1, "", "import_qty"], [257, 4, 1, "", "import_ramp"], [257, 4, 1, "", "name"], [257, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_zone_mpc2": [[258, 4, 1, "", "data_field"], [258, 4, 1, "", "data_subs"], [258, 4, 1, "", "import_req"], [258, 4, 1, "", "import_zones"], [258, 4, 1, "", "name"], [258, 4, 1, "", "table_var_map"]], "mp.dmce_shunt_mpc2": [[259, 2, 1, "", "bus"], [259, 4, 1, "", "data_field"], [259, 4, 1, "", "get_export_size"], [259, 4, 1, "", "get_import_size"], [259, 4, 1, "", "name"], [259, 4, 1, "", "table_var_map"]], "mp.dmce_xfmr3p_mpc2": [[260, 4, 1, "", "data_field"], [260, 4, 1, "", "name"], [260, 4, 1, "", "table_var_map"]], "mp.dme_branch": [[261, 2, 1, "", "b_fr"], [261, 2, 1, "", "b_to"], [261, 4, 1, "", "build_params"], [261, 4, 1, "", "cxn_idx_prop"], [261, 4, 1, "", "cxn_type"], [261, 4, 1, "", "export_vars"], [261, 4, 1, "", "export_vars_offline_val"], [261, 2, 1, "", "fbus"], [261, 2, 1, "", "g_fr"], [261, 2, 1, "", "g_to"], [261, 4, 1, "", "initialize"], [261, 4, 1, "", "label"], [261, 4, 1, "", "labels"], [261, 4, 1, "", "main_table_var_names"], [261, 4, 1, "", "name"], [261, 4, 1, "", "pp_data_cnt"], [261, 4, 1, "", "pp_data_row_det"], [261, 4, 1, "", "pp_data_sum"], [261, 4, 1, "", "pp_get_headers_det"], [261, 4, 1, "", "pp_have_section_det"], [261, 4, 1, "", "pp_have_section_sum"], [261, 2, 1, "", "r"], [261, 2, 1, "", "rate_a"], [261, 2, 1, "", "ta"], [261, 2, 1, "", "tbus"], [261, 2, 1, "", "tm"], [261, 4, 1, "", "update_status"], [261, 2, 1, "", "x"]], "mp.dme_branch_opf": [[262, 4, 1, "", "export_vars"], [262, 4, 1, "", "export_vars_offline_val"], [262, 4, 1, "", "main_table_var_names"], [262, 4, 1, "", "pp_binding_rows_lim"], [262, 4, 1, "", "pp_data_row_lim"], [262, 4, 1, "", "pp_get_headers_lim"], [262, 4, 1, "", "pp_get_title_lim"], [262, 4, 1, "", "pp_have_section_lim"], [262, 4, 1, "", "pretty_print"]], "mp.dme_bus": [[263, 4, 1, "", "build_params"], [263, 4, 1, "", "export_vars"], [263, 4, 1, "", "export_vars_offline_val"], [263, 4, 1, "", "init_status"], [263, 4, 1, "", "label"], [263, 4, 1, "", "labels"], [263, 4, 1, "", "main_table_var_names"], [263, 4, 1, "", "name"], [263, 4, 1, "", "pp_data_cnt"], [263, 4, 1, "", "pp_data_ext"], [263, 4, 1, "", "pp_data_row_det"], [263, 4, 1, "", "pp_get_headers_det"], [263, 4, 1, "", "pp_have_section_det"], [263, 4, 1, "", "pp_have_section_ext"], [263, 4, 1, "", "set_bus_type_pq"], [263, 4, 1, "", "set_bus_type_pv"], [263, 4, 1, "", "set_bus_type_ref"], [263, 2, 1, "", "type"], [263, 4, 1, "", "update_status"], [263, 2, 1, "", "va_start"], [263, 2, 1, "", "vm_control"], [263, 2, 1, "", "vm_lb"], [263, 2, 1, "", "vm_start"], [263, 2, 1, "", "vm_ub"]], "mp.dme_bus3p": [[264, 4, 1, "", "build_params"], [264, 4, 1, "", "init_status"], [264, 4, 1, "", "label"], [264, 4, 1, "", "labels"], [264, 4, 1, "", "main_table_var_names"], [264, 4, 1, "", "name"], [264, 4, 1, "", "pp_data_row_det"], [264, 4, 1, "", "pp_get_headers_det"], [264, 4, 1, "", "pp_have_section_det"], [264, 2, 1, "", "type"], [264, 4, 1, "", "update_status"], [264, 2, 1, "", "va1_start"], [264, 2, 1, "", "va2_start"], [264, 2, 1, "", "va3_start"], [264, 2, 1, "", "vm1_start"], [264, 2, 1, "", "vm2_start"], [264, 2, 1, "", "vm3_start"], [264, 2, 1, "", "vm_control"]], "mp.dme_bus_opf": [[266, 4, 1, "", "export_vars"], [266, 4, 1, "", "export_vars_offline_val"], [266, 4, 1, "", "main_table_var_names"], [266, 4, 1, "", "pp_binding_rows_lim"], [266, 4, 1, "", "pp_data_ext"], [266, 4, 1, "", "pp_data_row_det"], [266, 4, 1, "", "pp_data_row_lim"], [266, 4, 1, "", "pp_get_headers_det"], [266, 4, 1, "", "pp_get_headers_lim"], [266, 4, 1, "", "pp_have_section_lim"]], "mp.dme_buslink": [[267, 4, 1, "", "build_params"], [267, 2, 1, "", "bus"], [267, 2, 1, "", "bus3p"], [267, 4, 1, "", "cxn_idx_prop"], [267, 4, 1, "", "cxn_type"], [267, 4, 1, "", "initialize"], [267, 4, 1, "", "label"], [267, 4, 1, "", "labels"], [267, 4, 1, "", "main_table_var_names"], [267, 4, 1, "", "name"], [267, 2, 1, "", "pg1_start"], [267, 2, 1, "", "pg2_start"], [267, 2, 1, "", "pg3_start"], [267, 4, 1, "", "pp_data_row_det"], [267, 4, 1, "", "pp_get_headers_det"], [267, 4, 1, "", "pp_have_section_det"], [267, 2, 1, "", "qg1_start"], [267, 2, 1, "", "qg2_start"], [267, 2, 1, "", "qg3_start"], [267, 4, 1, "", "update_status"]], "mp.dme_gen": [[269, 4, 1, "", "apply_vm_setpoint"], [269, 4, 1, "", "build_params"], [269, 2, 1, "", "bus"], [269, 2, 1, "", "bus_on"], [269, 4, 1, "", "cxn_idx_prop"], [269, 4, 1, "", "cxn_type"], [269, 4, 1, "", "export_vars"], [269, 4, 1, "", "export_vars_offline_val"], [269, 4, 1, "", "have_cost"], [269, 4, 1, "", "initialize"], [269, 4, 1, "", "isload"], [269, 4, 1, "", "label"], [269, 4, 1, "", "labels"], [269, 4, 1, "", "main_table_var_names"], [269, 4, 1, "", "name"], [269, 2, 1, "", "pg_lb"], [269, 2, 1, "", "pg_start"], [269, 2, 1, "", "pg_ub"], [269, 4, 1, "", "pp_data_row_det"], [269, 4, 1, "", "pp_data_sum"], [269, 4, 1, "", "pp_get_footers_det"], [269, 4, 1, "", "pp_get_headers_det"], [269, 4, 1, "", "pp_have_section_det"], [269, 4, 1, "", "pp_have_section_sum"], [269, 2, 1, "", "qg_lb"], [269, 2, 1, "", "qg_start"], [269, 2, 1, "", "qg_ub"], [269, 4, 1, "", "update_status"], [269, 4, 1, "", "violated_q_lims"], [269, 2, 1, "", "vm_setpoint"]], "mp.dme_gen3p": [[270, 4, 1, "", "apply_vm_setpoint"], [270, 4, 1, "", "build_params"], [270, 2, 1, "", "bus"], [270, 2, 1, "", "bus_on"], [270, 4, 1, "", "cxn_idx_prop"], [270, 4, 1, "", "cxn_type"], [270, 4, 1, "", "initialize"], [270, 4, 1, "", "label"], [270, 4, 1, "", "labels"], [270, 4, 1, "", "main_table_var_names"], [270, 4, 1, "", "name"], [270, 2, 1, "", "pg1_start"], [270, 2, 1, "", "pg2_start"], [270, 2, 1, "", "pg3_start"], [270, 4, 1, "", "pp_data_row_det"], [270, 4, 1, "", "pp_data_sum"], [270, 4, 1, "", "pp_get_headers_det"], [270, 4, 1, "", "pp_have_section_det"], [270, 4, 1, "", "pp_have_section_sum"], [270, 2, 1, "", "qg1_start"], [270, 2, 1, "", "qg2_start"], [270, 2, 1, "", "qg3_start"], [270, 4, 1, "", "update_status"], [270, 2, 1, "", "vm1_setpoint"], [270, 2, 1, "", "vm2_setpoint"], [270, 2, 1, "", "vm3_setpoint"]], "mp.dme_gen_opf": [[272, 4, 1, "", "build_cost_params"], [272, 4, 1, "", "export_vars"], [272, 4, 1, "", "export_vars_offline_val"], [272, 4, 1, "", "have_cost"], [272, 4, 1, "", "main_table_var_names"], [272, 4, 1, "", "max_pwl_gencost"], [272, 4, 1, "", "pp_binding_rows_lim"], [272, 4, 1, "", "pp_data_row_lim"], [272, 4, 1, "", "pp_get_headers_lim"], [272, 4, 1, "", "pp_have_section_lim"], [272, 4, 1, "", "pretty_print"]], "mp.dme_legacy_dcline": [[273, 4, 1, "", "apply_vm_setpoints"], [273, 4, 1, "", "build_params"], [273, 4, 1, "", "cxn_idx_prop"], [273, 4, 1, "", "cxn_type"], [273, 4, 1, "", "export_vars"], [273, 4, 1, "", "export_vars_offline_val"], [273, 2, 1, "", "fbus"], [273, 2, 1, "", "fbus_on"], [273, 4, 1, "", "have_cost"], [273, 4, 1, "", "initialize"], [273, 4, 1, "", "label"], [273, 4, 1, "", "labels"], [273, 2, 1, "", "loss0"], [273, 2, 1, "", "loss1"], [273, 4, 1, "", "main_table_var_names"], [273, 4, 1, "", "name"], [273, 2, 1, "", "p_fr_lb"], [273, 2, 1, "", "p_fr_start"], [273, 2, 1, "", "p_fr_ub"], [273, 2, 1, "", "p_to_start"], [273, 4, 1, "", "pp_data_row_det"], [273, 4, 1, "", "pp_data_sum"], [273, 4, 1, "", "pp_get_headers_det"], [273, 4, 1, "", "pp_have_section_det"], [273, 4, 1, "", "pp_have_section_sum"], [273, 2, 1, "", "q_fr_lb"], [273, 2, 1, "", "q_fr_start"], [273, 2, 1, "", "q_fr_ub"], [273, 2, 1, "", "q_to_lb"], [273, 2, 1, "", "q_to_start"], [273, 2, 1, "", "q_to_ub"], [273, 2, 1, "", "tbus"], [273, 2, 1, "", "tbus_on"], [273, 4, 1, "", "update_status"], [273, 2, 1, "", "vm_setpoint_fr"], [273, 2, 1, "", "vm_setpoint_to"]], "mp.dme_legacy_dcline_opf": [[274, 4, 1, "", "build_cost_params"], [274, 4, 1, "", "export_vars"], [274, 4, 1, "", "export_vars_offline_val"], [274, 4, 1, "", "have_cost"], [274, 4, 1, "", "main_table_var_names"], [274, 4, 1, "", "pp_binding_rows_lim"], [274, 4, 1, "", "pp_data_row_lim"], [274, 4, 1, "", "pp_get_headers_lim"], [274, 4, 1, "", "pp_have_section_lim"], [274, 4, 1, "", "pretty_print"]], "mp.dme_line3p": [[275, 4, 1, "", "build_params"], [275, 4, 1, "", "create_line_construction_table"], [275, 4, 1, "", "cxn_idx_prop"], [275, 4, 1, "", "cxn_type"], [275, 2, 1, "", "fbus"], [275, 2, 1, "", "freq"], [275, 4, 1, "", "initialize"], [275, 4, 1, "", "label"], [275, 4, 1, "", "labels"], [275, 2, 1, "", "lc"], [275, 2, 1, "", "lc_tab"], [275, 4, 1, "", "lc_table_var_names"], [275, 2, 1, "", "len"], [275, 4, 1, "", "main_table_var_names"], [275, 4, 1, "", "name"], [275, 4, 1, "", "pp_data_row_det"], [275, 4, 1, "", "pp_data_sum"], [275, 4, 1, "", "pp_get_headers_det"], [275, 4, 1, "", "pp_have_section_det"], [275, 4, 1, "", "pp_have_section_sum"], [275, 4, 1, "", "pretty_print"], [275, 4, 1, "", "symmat2vec"], [275, 2, 1, "", "tbus"], [275, 4, 1, "", "update_status"], [275, 4, 1, "", "vec2symmat"], [275, 2, 1, "", "yc"], [275, 2, 1, "", "ys"]], "mp.dme_load": [[277, 4, 1, "", "build_params"], [277, 2, 1, "", "bus"], [277, 4, 1, "", "count"], [277, 4, 1, "", "cxn_idx_prop"], [277, 4, 1, "", "cxn_type"], [277, 4, 1, "", "label"], [277, 4, 1, "", "labels"], [277, 4, 1, "", "main_table_var_names"], [277, 4, 1, "", "name"], [277, 2, 1, "", "pd"], [277, 2, 1, "", "pd_i"], [277, 2, 1, "", "pd_z"], [277, 4, 1, "", "pp_data_row_det"], [277, 4, 1, "", "pp_data_sum"], [277, 4, 1, "", "pp_get_footers_det"], [277, 4, 1, "", "pp_get_headers_det"], [277, 4, 1, "", "pp_have_section_det"], [277, 4, 1, "", "pp_have_section_sum"], [277, 2, 1, "", "qd"], [277, 2, 1, "", "qd_i"], [277, 2, 1, "", "qd_z"], [277, 4, 1, "", "update_status"]], "mp.dme_load3p": [[278, 4, 1, "", "build_params"], [278, 2, 1, "", "bus"], [278, 4, 1, "", "cxn_idx_prop"], [278, 4, 1, "", "cxn_type"], [278, 4, 1, "", "initialize"], [278, 4, 1, "", "label"], [278, 4, 1, "", "labels"], [278, 4, 1, "", "main_table_var_names"], [278, 4, 1, "", "name"], [278, 2, 1, "", "pd1"], [278, 2, 1, "", "pd2"], [278, 2, 1, "", "pd3"], [278, 2, 1, "", "pf1"], [278, 2, 1, "", "pf2"], [278, 2, 1, "", "pf3"], [278, 4, 1, "", "pp_data_row_det"], [278, 4, 1, "", "pp_data_sum"], [278, 4, 1, "", "pp_get_headers_det"], [278, 4, 1, "", "pp_have_section_det"], [278, 4, 1, "", "pp_have_section_sum"], [278, 4, 1, "", "update_status"]], "mp.dme_load_cpf": [[280, 4, 1, "", "export_vars"], [280, 4, 1, "", "parameterized"]], "mp.dme_reserve_gen": [[282, 4, 1, "", "build_params"], [282, 4, 1, "", "export_vars"], [282, 4, 1, "", "export_vars_offline_val"], [282, 2, 1, "", "gen"], [282, 4, 1, "", "label"], [282, 4, 1, "", "labels"], [282, 4, 1, "", "main_table_var_names"], [282, 4, 1, "", "name"], [282, 4, 1, "", "pp_binding_rows_lim"], [282, 4, 1, "", "pp_data_row_det"], [282, 4, 1, "", "pp_data_row_lim"], [282, 4, 1, "", "pp_data_sum"], [282, 4, 1, "", "pp_get_footers_det"], [282, 4, 1, "", "pp_get_headers_det"], [282, 4, 1, "", "pp_get_headers_lim"], [282, 4, 1, "", "pp_have_section_det"], [282, 4, 1, "", "pp_have_section_lim"], [282, 4, 1, "", "pp_have_section_sum"], [282, 2, 1, "", "r_ub"], [282, 4, 1, "", "update_status"]], "mp.dme_reserve_zone": [[283, 4, 1, "", "build_params"], [283, 4, 1, "", "export_vars"], [283, 4, 1, "", "export_vars_offline_val"], [283, 4, 1, "", "label"], [283, 4, 1, "", "labels"], [283, 4, 1, "", "main_table_var_names"], [283, 4, 1, "", "name"], [283, 4, 1, "", "pp_data_row_det"], [283, 4, 1, "", "pp_get_headers_det"], [283, 4, 1, "", "pp_have_section_det"], [283, 2, 1, "", "req"], [283, 4, 1, "", "update_status"], [283, 2, 1, "", "zones"]], "mp.dme_shared_opf": [[284, 2, 1, "", "ctol"], [284, 4, 1, "", "pp_binding_rows_lim"], [284, 4, 1, "", "pp_data_lim"], [284, 4, 1, "", "pp_data_other"], [284, 4, 1, "", "pp_data_row_lim"], [284, 4, 1, "", "pp_get_footers_lim"], [284, 4, 1, "", "pp_get_footers_other"], [284, 4, 1, "", "pp_get_headers_lim"], [284, 4, 1, "", "pp_get_headers_other"], [284, 4, 1, "", "pp_get_title_lim"], [284, 4, 1, "", "pp_have_section_lim"], [284, 4, 1, "", "pp_have_section_other"], [284, 4, 1, "", "pp_rows_lim"], [284, 4, 1, "", "pp_rows_other"], [284, 4, 1, "", "pp_set_tols_lim"], [284, 2, 1, "", "ptol"]], "mp.dme_shunt": [[285, 2, 1, "", "bs"], [285, 4, 1, "", "build_params"], [285, 2, 1, "", "bus"], [285, 4, 1, "", "count"], [285, 4, 1, "", "cxn_idx_prop"], [285, 4, 1, "", "cxn_type"], [285, 2, 1, "", "gs"], [285, 4, 1, "", "label"], [285, 4, 1, "", "labels"], [285, 4, 1, "", "main_table_var_names"], [285, 4, 1, "", "name"], [285, 4, 1, "", "pp_data_row_det"], [285, 4, 1, "", "pp_data_sum"], [285, 4, 1, "", "pp_get_footers_det"], [285, 4, 1, "", "pp_get_headers_det"], [285, 4, 1, "", "pp_have_section_det"], [285, 4, 1, "", "pp_have_section_sum"], [285, 4, 1, "", "update_status"]], "mp.dme_shunt_cpf": [[286, 4, 1, "", "export_vars"], [286, 4, 1, "", "parameterized"]], "mp.dme_xfmr3p": [[288, 4, 1, "", "build_params"], [288, 4, 1, "", "cxn_idx_prop"], [288, 4, 1, "", "cxn_type"], [288, 2, 1, "", "fbus"], [288, 4, 1, "", "initialize"], [288, 4, 1, "", "label"], [288, 4, 1, "", "labels"], [288, 4, 1, "", "main_table_var_names"], [288, 4, 1, "", "name"], [288, 4, 1, "", "pp_data_row_det"], [288, 4, 1, "", "pp_data_sum"], [288, 4, 1, "", "pp_get_headers_det"], [288, 4, 1, "", "pp_have_section_det"], [288, 4, 1, "", "pp_have_section_sum"], [288, 4, 1, "", "pretty_print"], [288, 2, 1, "", "r"], [288, 2, 1, "", "tbus"], [288, 4, 1, "", "update_status"], [288, 2, 1, "", "x"]], "mp.element_container": [[290, 2, 1, "", "element_classes"], [290, 2, 1, "", "elements"], [290, 4, 1, "", "modify_element_classes"]], "mp.extension": [[291, 4, 1, "", "data_model_class"], [291, 4, 1, "", "dm_converter_class"], [291, 4, 1, "", "dm_element_classes"], [291, 4, 1, "", "dmc_element_classes"], [291, 4, 1, "", "math_model_class"], [291, 4, 1, "", "mm_element_classes"], [291, 4, 1, "", "network_model_class"], [291, 4, 1, "", "nm_element_classes"], [291, 4, 1, "", "task_class"]], "mp.form": [[292, 4, 1, "", "find_form_class"], [292, 4, 1, "", "form_name"], [292, 4, 1, "", "form_tag"], [292, 4, 1, "", "get_params"], [292, 4, 1, "", "model_params"], [292, 4, 1, "", "model_vvars"], [292, 4, 1, "", "model_zvars"]], "mp.form_ac": [[293, 2, 1, "", "L"], [293, 2, 1, "", "M"], [293, 2, 1, "", "N"], [293, 2, 1, "", "Y"], [293, 4, 1, "", "aux_data_va_vm"], [293, 2, 1, "", "i"], [293, 2, 1, "", "inln"], [293, 2, 1, "", "inln_hess"], [293, 4, 1, "", "model_params"], [293, 4, 1, "", "model_zvars"], [293, 2, 1, "", "param_ncols"], [293, 4, 1, "", "port_active_power2_lim_fcn"], [293, 4, 1, "", "port_active_power2_lim_hess"], [293, 4, 1, "", "port_active_power_lim_fcn"], [293, 4, 1, "", "port_active_power_lim_hess"], [293, 4, 1, "", "port_apparent_power_lim_fcn"], [293, 4, 1, "", "port_apparent_power_lim_hess"], [293, 4, 1, "", "port_current_lim_fcn"], [293, 4, 1, "", "port_current_lim_hess"], [293, 4, 1, "", "port_inj_current"], [293, 4, 1, "", "port_inj_current_hess"], [293, 4, 1, "", "port_inj_current_hess_v"], [293, 4, 1, "", "port_inj_current_hess_vz"], [293, 4, 1, "", "port_inj_current_jac"], [293, 4, 1, "", "port_inj_power"], [293, 4, 1, "", "port_inj_power_hess"], [293, 4, 1, "", "port_inj_power_hess_v"], [293, 4, 1, "", "port_inj_power_hess_vz"], [293, 4, 1, "", "port_inj_power_jac"], [293, 2, 1, "", "s"], [293, 2, 1, "", "snln"], [293, 2, 1, "", "snln_hess"]], "mp.form_acc": [[294, 4, 1, "", "aux_data_va_vm"], [294, 4, 1, "", "form_name"], [294, 4, 1, "", "form_tag"], [294, 4, 1, "", "model_vvars"], [294, 4, 1, "", "port_inj_current_hess_v"], [294, 4, 1, "", "port_inj_current_hess_vz"], [294, 4, 1, "", "port_inj_current_jac"], [294, 4, 1, "", "port_inj_power_hess_v"], [294, 4, 1, "", "port_inj_power_hess_vz"], [294, 4, 1, "", "port_inj_power_jac"], [294, 4, 1, "", "va_fcn"], [294, 4, 1, "", "va_hess"], [294, 4, 1, "", "vm2_fcn"], [294, 4, 1, "", "vm2_hess"]], "mp.form_acp": [[295, 4, 1, "", "aux_data_va_vm"], [295, 4, 1, "", "form_name"], [295, 4, 1, "", "form_tag"], [295, 4, 1, "", "model_vvars"], [295, 4, 1, "", "port_inj_current_hess_v"], [295, 4, 1, "", "port_inj_current_hess_vz"], [295, 4, 1, "", "port_inj_current_jac"], [295, 4, 1, "", "port_inj_power_hess_v"], [295, 4, 1, "", "port_inj_power_hess_vz"], [295, 4, 1, "", "port_inj_power_jac"]], "mp.form_dc": [[296, 2, 1, "", "B"], [296, 2, 1, "", "K"], [296, 4, 1, "", "form_name"], [296, 4, 1, "", "form_tag"], [296, 4, 1, "", "model_params"], [296, 4, 1, "", "model_vvars"], [296, 4, 1, "", "model_zvars"], [296, 2, 1, "", "p"], [296, 2, 1, "", "param_ncols"], [296, 4, 1, "", "port_inj_power"]], "mp.mapped_array": [[297, 4, 1, "", "add_elements"], [297, 4, 1, "", "add_names"], [297, 4, 1, "", "copy"], [297, 4, 1, "", "delete_elements"], [297, 4, 1, "", "display"], [297, 4, 1, "", "has_name"], [297, 4, 1, "", "length"], [297, 4, 1, "", "mapped_array"], [297, 4, 1, "", "name2idx"], [297, 4, 1, "", "size"], [297, 4, 1, "", "subsasgn"], [297, 4, 1, "", "subsref"]], "mp.math_model": [[298, 4, 1, "", "add_aux_data"], [298, 4, 1, "", "add_constraints"], [298, 4, 1, "", "add_costs"], [298, 4, 1, "", "add_node_balance_constraints"], [298, 4, 1, "", "add_system_constraints"], [298, 4, 1, "", "add_system_costs"], [298, 4, 1, "", "add_system_vars"], [298, 4, 1, "", "add_vars"], [298, 2, 1, "", "aux_data"], [298, 4, 1, "", "build"], [298, 4, 1, "", "build_base_aux_data"], [298, 4, 1, "", "data_model_update"], [298, 4, 1, "", "display"], [298, 4, 1, "", "form_name"], [298, 4, 1, "", "form_tag"], [298, 4, 1, "", "network_model_x_soln"], [298, 4, 1, "", "solve_opts"], [298, 4, 1, "", "task_name"], [298, 4, 1, "", "task_tag"], [298, 4, 1, "", "update_nm_vars"]], "mp.math_model_cpf_acc": [[299, 4, 1, "", "math_model_cpf_acc"]], "mp.math_model_cpf_acci": [[300, 4, 1, "", "add_node_balance_constraints"], [300, 4, 1, "", "form_name"], [300, 4, 1, "", "form_tag"]], "mp.math_model_cpf_accs": [[301, 4, 1, "", "add_node_balance_constraints"], [301, 4, 1, "", "form_name"], [301, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acp": [[302, 4, 1, "", "callback_vlim"], [302, 4, 1, "", "event_vlim"], [302, 4, 1, "", "math_model_cpf_acp"]], "mp.math_model_cpf_acpi": [[303, 4, 1, "", "add_node_balance_constraints"], [303, 4, 1, "", "form_name"], [303, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acps": [[304, 4, 1, "", "add_node_balance_constraints"], [304, 4, 1, "", "expand_z_warmstart"], [304, 4, 1, "", "form_name"], [304, 4, 1, "", "form_tag"], [304, 4, 1, "", "solve_opts_warmstart"]], "mp.math_model_opf": [[305, 4, 1, "", "add_system_vars"], [305, 4, 1, "", "build_aux_data"], [305, 4, 1, "", "interior_va"], [305, 4, 1, "", "interior_x0"], [305, 4, 1, "", "task_name"], [305, 4, 1, "", "task_tag"]], "mp.math_model_opf_ac": [[306, 4, 1, "", "nodal_current_balance_fcn"], [306, 4, 1, "", "nodal_current_balance_hess"], [306, 4, 1, "", "nodal_power_balance_fcn"], [306, 4, 1, "", "nodal_power_balance_hess"], [306, 4, 1, "", "solve_opts"]], "mp.math_model_opf_acc": [[307, 4, 1, "", "convert_x_m2n"], [307, 4, 1, "", "interior_va"], [307, 4, 1, "", "math_model_opf_acc"]], "mp.math_model_opf_acci": [[308, 4, 1, "", "add_node_balance_constraints"], [308, 4, 1, "", "form_name"], [308, 4, 1, "", "form_tag"], [308, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acci_legacy": [[309, 4, 1, "", "add_named_set"], [309, 4, 1, "", "add_system_constraints"], [309, 4, 1, "", "add_system_costs"], [309, 4, 1, "", "add_vars"], [309, 4, 1, "", "build"], [309, 4, 1, "", "def_set_types"], [309, 4, 1, "", "init_set_types"], [309, 4, 1, "", "legacy_user_var_names"], [309, 4, 1, "", "math_model_opf_acci_legacy"]], "mp.math_model_opf_accs": [[310, 4, 1, "", "add_node_balance_constraints"], [310, 4, 1, "", "form_name"], [310, 4, 1, "", "form_tag"], [310, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_accs_legacy": [[311, 4, 1, "", "add_named_set"], [311, 4, 1, "", "add_system_constraints"], [311, 4, 1, "", "add_system_costs"], [311, 4, 1, "", "add_vars"], [311, 4, 1, "", "build"], [311, 4, 1, "", "def_set_types"], [311, 4, 1, "", "init_set_types"], [311, 4, 1, "", "legacy_user_var_names"], [311, 4, 1, "", "math_model_opf_accs_legacy"]], "mp.math_model_opf_acp": [[312, 4, 1, "", "convert_x_m2n"], [312, 4, 1, "", "math_model_opf_acp"]], "mp.math_model_opf_acpi": [[313, 4, 1, "", "add_node_balance_constraints"], [313, 4, 1, "", "form_name"], [313, 4, 1, "", "form_tag"], [313, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acpi_legacy": [[314, 4, 1, "", "add_named_set"], [314, 4, 1, "", "add_system_constraints"], [314, 4, 1, "", "add_system_costs"], [314, 4, 1, "", "add_vars"], [314, 4, 1, "", "build"], [314, 4, 1, "", "def_set_types"], [314, 4, 1, "", "init_set_types"], [314, 4, 1, "", "legacy_user_var_names"], [314, 4, 1, "", "math_model_opf_acpi_legacy"]], "mp.math_model_opf_acps": [[315, 4, 1, "", "add_node_balance_constraints"], [315, 4, 1, "", "form_name"], [315, 4, 1, "", "form_tag"], [315, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acps_legacy": [[316, 4, 1, "", "add_named_set"], [316, 4, 1, "", "add_system_constraints"], [316, 4, 1, "", "add_system_costs"], [316, 4, 1, "", "add_vars"], [316, 4, 1, "", "build"], [316, 4, 1, "", "def_set_types"], [316, 4, 1, "", "init_set_types"], [316, 4, 1, "", "legacy_user_var_names"], [316, 4, 1, "", "math_model_opf_acps_legacy"]], "mp.math_model_opf_dc": [[317, 4, 1, "", "add_node_balance_constraints"], [317, 4, 1, "", "convert_x_m2n"], [317, 4, 1, "", "form_name"], [317, 4, 1, "", "form_tag"], [317, 4, 1, "", "math_model_opf_dc"], [317, 4, 1, "", "solve_opts"]], "mp.math_model_opf_dc_legacy": [[318, 4, 1, "", "add_named_set"], [318, 4, 1, "", "add_system_constraints"], [318, 4, 1, "", "add_system_costs"], [318, 4, 1, "", "add_vars"], [318, 4, 1, "", "build"], [318, 4, 1, "", "def_set_types"], [318, 4, 1, "", "init_set_types"], [318, 4, 1, "", "legacy_user_var_names"], [318, 4, 1, "", "math_model_opf_dc_legacy"]], "mp.math_model_pf": [[319, 4, 1, "", "add_costs"], [319, 4, 1, "", "add_system_vars"], [319, 4, 1, "", "solve_opts"], [319, 4, 1, "", "task_name"], [319, 4, 1, "", "task_tag"]], "mp.math_model_pf_ac": [[320, 4, 1, "", "math_model_pf_ac"]], "mp.math_model_pf_acci": [[321, 4, 1, "", "add_node_balance_constraints"], [321, 4, 1, "", "form_name"], [321, 4, 1, "", "form_tag"]], "mp.math_model_pf_accs": [[322, 4, 1, "", "add_node_balance_constraints"], [322, 4, 1, "", "form_name"], [322, 4, 1, "", "form_tag"]], "mp.math_model_pf_acpi": [[323, 4, 1, "", "add_node_balance_constraints"], [323, 4, 1, "", "form_name"], [323, 4, 1, "", "form_tag"]], "mp.math_model_pf_acps": [[324, 4, 1, "", "add_node_balance_constraints"], [324, 4, 1, "", "fd_jac_approx"], [324, 4, 1, "", "fdpf_B_matrix_models"], [324, 4, 1, "", "form_name"], [324, 4, 1, "", "form_tag"], [324, 4, 1, "", "gs_x_update"], [324, 4, 1, "", "zg_x_update"]], "mp.math_model_pf_dc": [[325, 4, 1, "", "add_node_balance_constraints"], [325, 4, 1, "", "form_name"], [325, 4, 1, "", "form_tag"], [325, 4, 1, "", "math_model_pf_dc"], [325, 4, 1, "", "solve_opts"]], "mp.mm_element": [[326, 4, 1, "", "add_constraints"], [326, 4, 1, "", "add_costs"], [326, 4, 1, "", "add_vars"], [326, 4, 1, "", "data_model_element"], [326, 4, 1, "", "data_model_update"], [326, 4, 1, "", "data_model_update_off"], [326, 4, 1, "", "data_model_update_on"], [326, 4, 1, "", "name"], [326, 4, 1, "", "network_model_element"]], "mp.mm_shared_opf_legacy": [[327, 4, 1, "", "add_legacy_cost"], [327, 4, 1, "", "add_legacy_user_constraints"], [327, 4, 1, "", "add_legacy_user_constraints_ac"], [327, 4, 1, "", "add_legacy_user_costs"], [327, 4, 1, "", "add_legacy_user_vars"], [327, 4, 1, "", "build_legacy"], [327, 4, 1, "", "def_set_types_legacy"], [327, 4, 1, "", "eval_legacy_cost"], [327, 4, 1, "", "get_mpc"], [327, 4, 1, "", "init_set_types_legacy"], [327, 4, 1, "", "params_legacy_cost"]], "mp.mm_shared_pfcpf": [[328, 4, 1, "", "build_aux_data"]], "mp.mm_shared_pfcpf_ac": [[329, 4, 1, "", "add_system_varset_pf"], [329, 4, 1, "", "update_z"]], "mp.mm_shared_pfcpf_ac_i": [[330, 4, 1, "", "build_aux_data_i"]], "mp.mm_shared_pfcpf_acc": [[331, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acci": [[332, 4, 1, "", "add_system_vars_pf"], [332, 4, 1, "", "build_aux_data"], [332, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_accs": [[333, 4, 1, "", "add_system_vars_pf"], [333, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acp": [[334, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acpi": [[335, 4, 1, "", "add_system_vars_pf"], [335, 4, 1, "", "build_aux_data"], [335, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acps": [[336, 4, 1, "", "add_system_vars_pf"], [336, 4, 1, "", "build_aux_data"], [336, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_dc": [[337, 4, 1, "", "add_system_vars_pf"], [337, 4, 1, "", "build_aux_data"], [337, 4, 1, "", "convert_x_m2n"], [337, 4, 1, "", "update_z"]], "mp.mme_branch": [[338, 4, 1, "", "name"]], "mp.mme_branch_opf": [[339, 4, 1, "", "ang_diff_params"], [339, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_ac": [[340, 4, 1, "", "add_constraints"], [340, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_opf_acc": [[341, 4, 1, "", "add_constraints"], [341, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_acp": [[342, 4, 1, "", "add_constraints"]], "mp.mme_branch_opf_dc": [[343, 4, 1, "", "add_constraints"], [343, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_ac": [[344, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_dc": [[345, 4, 1, "", "data_model_update_on"]], "mp.mme_bus": [[346, 4, 1, "", "name"]], "mp.mme_bus3p": [[347, 4, 1, "", "data_model_update_on"], [347, 4, 1, "", "name"]], "mp.mme_bus3p_opf_acc": [[348, 4, 1, "", "interior_x0"]], "mp.mme_bus3p_opf_acp": [[349, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_ac": [[350, 4, 1, "", "interior_vm"]], "mp.mme_bus_opf_acc": [[351, 4, 1, "", "add_constraints"], [351, 4, 1, "", "data_model_update_on"], [351, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_acp": [[352, 4, 1, "", "data_model_update_on"], [352, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_dc": [[353, 4, 1, "", "data_model_update_on"], [353, 4, 1, "", "interior_x0"]], "mp.mme_bus_pf_ac": [[354, 4, 1, "", "data_model_update_on"]], "mp.mme_bus_pf_dc": [[355, 4, 1, "", "data_model_update_on"]], "mp.mme_buslink": [[356, 4, 1, "", "name"]], "mp.mme_buslink_opf": [[357, 4, 1, "", "interior_x0"]], "mp.mme_buslink_opf_acc": [[358, 4, 1, "", "add_constraints"], [358, 4, 1, "", "va_fcn"], [358, 4, 1, "", "va_hess"], [358, 4, 1, "", "vm2_fcn"], [358, 4, 1, "", "vm2_hess"]], "mp.mme_buslink_opf_acp": [[359, 4, 1, "", "add_constraints"]], "mp.mme_buslink_pf_ac": [[360, 4, 1, "", "add_constraints"], [360, 4, 1, "", "add_vars"], [360, 4, 1, "", "voltage_constraints"]], "mp.mme_buslink_pf_acc": [[361, 4, 1, "", "add_constraints"], [361, 4, 1, "", "pf_va_fcn"], [361, 4, 1, "", "pf_vm_fcn"]], "mp.mme_buslink_pf_acp": [[362, 4, 1, "", "add_constraints"]], "mp.mme_gen": [[363, 4, 1, "", "name"]], "mp.mme_gen3p": [[364, 4, 1, "", "data_model_update_on"], [364, 4, 1, "", "name"]], "mp.mme_gen3p_opf": [[365, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf": [[366, 4, 1, "", "add_costs"], [366, 4, 1, "", "add_vars"], [366, 2, 1, "", "cost"], [366, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf_ac": [[367, 4, 1, "", "add_constraints"], [367, 4, 1, "", "add_costs"], [367, 4, 1, "", "build_cost_params"], [367, 4, 1, "", "data_model_update_on"], [367, 4, 1, "", "disp_load_constant_pf_constraint"], [367, 4, 1, "", "has_pq_cap"], [367, 4, 1, "", "pq_capability_constraint"]], "mp.mme_gen_opf_ac_oval": [[368, 4, 1, "", "add_constraints"], [368, 4, 1, "", "oval_pq_capability_fcn"], [368, 4, 1, "", "oval_pq_capability_hess"]], "mp.mme_gen_opf_dc": [[369, 4, 1, "", "add_constraints"], [369, 4, 1, "", "build_cost_params"], [369, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_ac": [[370, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_dc": [[371, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline": [[372, 4, 1, "", "name"]], "mp.mme_legacy_dcline_opf": [[373, 4, 1, "", "add_constraints"], [373, 4, 1, "", "add_costs"], [373, 4, 1, "", "add_vars"], [373, 4, 1, "", "build_cost_params"], [373, 2, 1, "", "cost"], [373, 4, 1, "", "interior_x0"]], "mp.mme_legacy_dcline_opf_ac": [[374, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_opf_dc": [[375, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_ac": [[376, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_dc": [[377, 4, 1, "", "data_model_update_on"]], "mp.mme_line3p": [[378, 4, 1, "", "data_model_update_on"], [378, 4, 1, "", "name"]], "mp.mme_line3p_opf": [[379, 4, 1, "", "interior_x0"]], "mp.mme_load": [[380, 4, 1, "", "name"]], "mp.mme_load_cpf": [[381, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_ac": [[382, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_dc": [[383, 4, 1, "", "data_model_update_on"]], "mp.mme_reserve_gen": [[384, 4, 1, "", "add_constraints"], [384, 4, 1, "", "add_costs"], [384, 4, 1, "", "add_vars"], [384, 4, 1, "", "data_model_update_on"], [384, 4, 1, "", "name"]], "mp.mme_reserve_zone": [[385, 4, 1, "", "add_constraints"], [385, 4, 1, "", "data_model_update_on"], [385, 4, 1, "", "name"]], "mp.mme_shunt": [[386, 4, 1, "", "name"]], "mp.mme_shunt_cpf": [[387, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_ac": [[388, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_dc": [[389, 4, 1, "", "data_model_update_on"]], "mp.mme_xfmr3p": [[390, 4, 1, "", "data_model_update_on"], [390, 4, 1, "", "name"]], "mp.mme_xfmr3p_opf": [[391, 4, 1, "", "interior_x0"]], "mp.net_model": [[392, 4, 1, "", "add_node"], [392, 4, 1, "", "add_nodes"], [392, 4, 1, "", "add_port"], [392, 4, 1, "", "add_state"], [392, 4, 1, "", "add_states"], [392, 4, 1, "", "add_var"], [392, 4, 1, "", "add_vvars"], [392, 4, 1, "", "add_zvars"], [392, 4, 1, "", "build"], [392, 4, 1, "", "build_params"], [392, 4, 1, "", "def_set_types"], [392, 4, 1, "", "display"], [392, 4, 1, "", "ensure_ref_node"], [392, 4, 1, "", "get_node_idx"], [392, 4, 1, "", "get_port_idx"], [392, 4, 1, "", "get_state_idx"], [392, 4, 1, "", "init_set_types"], [392, 4, 1, "", "name"], [392, 2, 1, "", "node"], [392, 4, 1, "", "node_types"], [392, 4, 1, "", "np"], [392, 2, 1, "", "nv"], [392, 4, 1, "", "nz"], [392, 4, 1, "", "params_var"], [392, 2, 1, "", "port"], [392, 4, 1, "", "set_node_type_pq"], [392, 4, 1, "", "set_node_type_pv"], [392, 4, 1, "", "set_node_type_ref"], [392, 4, 1, "", "set_type_idx_map"], [392, 4, 1, "", "set_type_label"], [392, 4, 1, "", "stack_matrix_params"], [392, 4, 1, "", "stack_vector_params"], [392, 2, 1, "", "state"], [392, 2, 1, "", "the_np"], [392, 2, 1, "", "the_nz"]], "mp.net_model_ac": [[393, 4, 1, "", "build_params"], [393, 4, 1, "", "def_set_types"], [393, 4, 1, "", "get_va"], [393, 4, 1, "", "nodal_complex_current_balance"], [393, 4, 1, "", "nodal_complex_current_balance_hess"], [393, 4, 1, "", "nodal_complex_power_balance"], [393, 4, 1, "", "nodal_complex_power_balance_hess"], [393, 4, 1, "", "port_inj_nln"], [393, 4, 1, "", "port_inj_nln_hess"], [393, 4, 1, "", "port_inj_soln"]], "mp.net_model_acc": [[394, 4, 1, "", "def_set_types"], [394, 4, 1, "", "initial_voltage_angle"], [394, 4, 1, "", "net_model_acc"]], "mp.net_model_acp": [[395, 4, 1, "", "def_set_types"], [395, 4, 1, "", "initial_voltage_angle"], [395, 4, 1, "", "net_model_acp"]], "mp.net_model_dc": [[396, 4, 1, "", "build_params"], [396, 4, 1, "", "def_set_types"], [396, 4, 1, "", "net_model_dc"], [396, 4, 1, "", "port_inj_soln"], [396, 2, 1, "", "va"], [396, 2, 1, "", "z"]], "mp.nm_element": [[397, 2, 1, "", "C"], [397, 2, 1, "", "D"], [397, 4, 1, "", "add_nodes"], [397, 4, 1, "", "add_states"], [397, 4, 1, "", "add_vvars"], [397, 4, 1, "", "add_zvars"], [397, 4, 1, "", "build_params"], [397, 4, 1, "", "count"], [397, 4, 1, "", "data_model_element"], [397, 4, 1, "", "display"], [397, 4, 1, "", "get_nv_"], [397, 4, 1, "", "incidence_matrix"], [397, 4, 1, "", "math_model_element"], [397, 4, 1, "", "name"], [397, 2, 1, "", "nk"], [397, 4, 1, "", "nn"], [397, 4, 1, "", "node_indices"], [397, 4, 1, "", "node_types"], [397, 4, 1, "", "np"], [397, 4, 1, "", "nz"], [397, 4, 1, "", "set_node_type_pq"], [397, 4, 1, "", "set_node_type_pv"], [397, 4, 1, "", "set_node_type_ref"], [397, 2, 1, "", "soln"], [397, 4, 1, "", "x2vz"]], "mp.nme_branch": [[398, 4, 1, "", "name"], [398, 4, 1, "", "np"]], "mp.nme_branch_ac": [[399, 4, 1, "", "build_params"]], "mp.nme_branch_acc": [[400, 4, 1, "", "ang_diff_fcn"], [400, 4, 1, "", "ang_diff_hess"]], "mp.nme_branch_dc": [[402, 4, 1, "", "build_params"]], "mp.nme_bus": [[403, 4, 1, "", "name"], [403, 4, 1, "", "nn"], [403, 4, 1, "", "node_types"], [403, 4, 1, "", "set_node_type_pq"], [403, 4, 1, "", "set_node_type_pv"], [403, 4, 1, "", "set_node_type_ref"]], "mp.nme_bus3p": [[404, 4, 1, "", "name"], [404, 4, 1, "", "nn"], [404, 4, 1, "", "node_types"]], "mp.nme_bus3p_acc": [[405, 4, 1, "", "add_vvars"]], "mp.nme_bus3p_acp": [[406, 4, 1, "", "add_vvars"]], "mp.nme_bus_acc": [[407, 4, 1, "", "add_vvars"]], "mp.nme_bus_acp": [[408, 4, 1, "", "add_vvars"]], "mp.nme_bus_dc": [[409, 4, 1, "", "add_vvars"]], "mp.nme_buslink": [[410, 4, 1, "", "add_zvars"], [410, 4, 1, "", "build_params"], [410, 4, 1, "", "name"], [410, 4, 1, "", "np"], [410, 4, 1, "", "nz"], [410, 4, 1, "", "voltage_constraints"]], "mp.nme_gen": [[413, 4, 1, "", "name"], [413, 4, 1, "", "np"], [413, 4, 1, "", "nz"]], "mp.nme_gen3p": [[414, 4, 1, "", "add_zvars"], [414, 4, 1, "", "build_params"], [414, 4, 1, "", "name"], [414, 4, 1, "", "np"], [414, 4, 1, "", "nz"]], "mp.nme_gen_ac": [[417, 4, 1, "", "add_zvars"], [417, 4, 1, "", "build_params"]], "mp.nme_gen_dc": [[420, 4, 1, "", "add_zvars"], [420, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline": [[421, 4, 1, "", "name"], [421, 4, 1, "", "np"], [421, 4, 1, "", "nz"]], "mp.nme_legacy_dcline_ac": [[422, 4, 1, "", "add_zvars"], [422, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline_dc": [[425, 4, 1, "", "add_zvars"], [425, 4, 1, "", "build_params"]], "mp.nme_line3p": [[426, 4, 1, "", "build_params"], [426, 4, 1, "", "name"], [426, 4, 1, "", "np"], [426, 4, 1, "", "vec2symmat_stacked"]], "mp.nme_load": [[427, 4, 1, "", "name"], [427, 4, 1, "", "np"]], "mp.nme_load3p": [[428, 4, 1, "", "build_params"], [428, 4, 1, "", "name"], [428, 4, 1, "", "np"]], "mp.nme_load_ac": [[429, 4, 1, "", "build_params"], [429, 4, 1, "", "port_inj_current_nln"], [429, 4, 1, "", "port_inj_power_nln"]], "mp.nme_load_dc": [[432, 4, 1, "", "build_params"]], "mp.nme_shunt": [[433, 4, 1, "", "name"], [433, 4, 1, "", "np"]], "mp.nme_shunt_ac": [[434, 4, 1, "", "build_params"]], "mp.nme_shunt_dc": [[437, 4, 1, "", "build_params"]], "mp.nme_xfmr3p": [[438, 4, 1, "", "build_params"], [438, 4, 1, "", "name"], [438, 4, 1, "", "np"]], "mp.task": [[439, 4, 1, "", "data_model_build"], [439, 4, 1, "", "data_model_build_post"], [439, 4, 1, "", "data_model_build_pre"], [439, 4, 1, "", "data_model_class"], [439, 4, 1, "", "data_model_class_default"], [439, 4, 1, "", "data_model_create"], [439, 2, 1, "", "dm"], [439, 4, 1, "", "dm_converter_build"], [439, 4, 1, "", "dm_converter_class"], [439, 4, 1, "", "dm_converter_class_mpc2_default"], [439, 4, 1, "", "dm_converter_create"], [439, 2, 1, "", "dmc"], [439, 2, 1, "", "et"], [439, 2, 1, "", "i_dm"], [439, 2, 1, "", "i_mm"], [439, 2, 1, "", "i_nm"], [439, 4, 1, "", "math_model_build"], [439, 4, 1, "", "math_model_class"], [439, 4, 1, "", "math_model_class_default"], [439, 4, 1, "", "math_model_create"], [439, 4, 1, "", "math_model_opt"], [439, 2, 1, "", "message"], [439, 2, 1, "", "mm"], [439, 2, 1, "", "mm_opt"], [439, 2, 1, "", "name"], [439, 4, 1, "", "network_model_build"], [439, 4, 1, "", "network_model_build_post"], [439, 4, 1, "", "network_model_build_pre"], [439, 4, 1, "", "network_model_class"], [439, 4, 1, "", "network_model_class_default"], [439, 4, 1, "", "network_model_create"], [439, 4, 1, "", "network_model_update"], [439, 4, 1, "", "network_model_x_soln"], [439, 4, 1, "", "next_dm"], [439, 4, 1, "", "next_mm"], [439, 4, 1, "", "next_nm"], [439, 2, 1, "", "nm"], [439, 4, 1, "", "print_soln"], [439, 4, 1, "", "print_soln_header"], [439, 4, 1, "", "run"], [439, 4, 1, "", "run_post"], [439, 4, 1, "", "run_pre"], [439, 4, 1, "", "save_soln"], [439, 2, 1, "", "success"], [439, 2, 1, "", "tag"]], "mp.task_cpf": [[440, 4, 1, "", "data_model_build"], [440, 4, 1, "", "data_model_class_default"], [440, 4, 1, "", "dm_converter_class"], [440, 4, 1, "", "math_model_class_default"], [440, 4, 1, "", "math_model_opt"], [440, 4, 1, "", "network_model_build"], [440, 4, 1, "", "network_model_update"], [440, 4, 1, "", "network_model_x_soln"], [440, 4, 1, "", "next_mm"], [440, 4, 1, "", "run_pre"], [440, 4, 1, "", "task_cpf"], [440, 2, 1, "", "warmstart"]], "mp.task_cpf_legacy": [[441, 4, 1, "", "legacy_post_run"], [441, 4, 1, "", "run_post"], [441, 4, 1, "", "run_pre"]], "mp.task_opf": [[442, 4, 1, "", "data_model_build_post"], [442, 4, 1, "", "data_model_class_default"], [442, 2, 1, "", "dc"], [442, 4, 1, "", "math_model_class_default"], [442, 4, 1, "", "network_model_class_default"], [442, 4, 1, "", "print_soln_header"], [442, 4, 1, "", "run_pre"]], "mp.task_opf_legacy": [[443, 4, 1, "", "data_model_build_post"], [443, 4, 1, "", "dm_converter_class_mpc2_default"], [443, 4, 1, "", "legacy_post_run"], [443, 4, 1, "", "math_model_class_default"], [443, 4, 1, "", "run_post"], [443, 4, 1, "", "run_pre"]], "mp.task_pf": [[444, 2, 1, "", "dc"], [444, 4, 1, "", "enforce_q_lims"], [444, 2, 1, "", "fixed_q_idx"], [444, 2, 1, "", "fixed_q_qty"], [444, 2, 1, "", "iterations"], [444, 4, 1, "", "math_model_class_default"], [444, 2, 1, "", "name"], [444, 4, 1, "", "network_model_build_post"], [444, 4, 1, "", "network_model_class_default"], [444, 4, 1, "", "network_model_x_soln"], [444, 4, 1, "", "next_dm"], [444, 2, 1, "", "ref"], [444, 2, 1, "", "ref0"], [444, 4, 1, "", "run_pre"], [444, 2, 1, "", "tag"], [444, 2, 1, "", "va_ref0"]], "mp.task_pf_legacy": [[445, 4, 1, "", "legacy_post_run"], [445, 4, 1, "", "run_post"], [445, 4, 1, "", "run_pre"]], "mp.task_shared_legacy": [[446, 4, 1, "", "run_pre_legacy"]], "mp.xt_3p": [[447, 4, 1, "", "dm_element_classes"], [447, 4, 1, "", "dmc_element_classes"], [447, 4, 1, "", "mm_element_classes"], [447, 4, 1, "", "nm_element_classes"]], "mp.xt_legacy_dcline": [[448, 4, 1, "", "dm_element_classes"], [448, 4, 1, "", "dmc_element_classes"], [448, 4, 1, "", "mm_element_classes"], [448, 4, 1, "", "nm_element_classes"]], "mp.xt_oval_cap_curve": [[449, 4, 1, "", "mm_element_classes"]], "mp.xt_reserves": [[450, 4, 1, "", "dm_element_classes"], [450, 4, 1, "", "dmc_element_classes"], [450, 4, 1, "", "mm_element_classes"]], "mp_idx_manager": [[106, 4, 1, "", "add_named_set"], [106, 4, 1, "", "copy"], [106, 4, 1, "", "describe_idx"], [106, 4, 1, "", "display_set"], [106, 4, 1, "", "get"], [106, 4, 1, "", "getN"], [106, 4, 1, "", "get_idx"], [106, 4, 1, "", "get_userdata"], [106, 4, 1, "", "init_indexed_name"], [106, 4, 1, "", "init_set_types"], [106, 4, 1, "", "mp_idx_manager"], [106, 4, 1, "", "set_type_idx_map"], [106, 4, 1, "", "valid_named_set_type"]], "mp_table": [[451, 4, 1, "", "display"], [451, 4, 1, "", "end"], [451, 3, 1, "", "extract_named_args"], [451, 4, 1, "", "horzcat"], [451, 4, 1, "", "isempty"], [451, 4, 1, "", "istable"], [451, 4, 1, "", "mp_table"], [451, 4, 1, "", "size"], [451, 4, 1, "", "subsasgn"], [451, 4, 1, "", "subsref"], [451, 4, 1, "", "vertcat"]], "mp_table_subclass": [[452, 4, 1, "", "get_table"], [452, 4, 1, "", "set_table"]], "opf_model": [[462, 4, 1, "", "add_legacy_cost"], [462, 4, 1, "", "add_named_set"], [462, 2, 1, "", "cost"], [462, 4, 1, "", "def_set_types"], [462, 4, 1, "", "display"], [462, 4, 1, "", "eval_legacy_cost"], [462, 4, 1, "", "get_mpc"], [462, 4, 1, "", "init_indexed_name"], [462, 4, 1, "", "init_set_types"], [462, 2, 1, "", "mpc"], [462, 4, 1, "", "opf_model"], [462, 4, 1, "", "params_legacy_cost"], [462, 4, 1, "", "set_mpc"]], "opt_model": [[107, 4, 1, "", "add_lin_constraint"], [107, 4, 1, "", "add_named_set"], [107, 4, 1, "", "add_nln_constraint"], [107, 4, 1, "", "add_nln_cost"], [107, 4, 1, "", "add_quad_cost"], [107, 4, 1, "", "add_var"], [107, 4, 1, "", "def_set_types"], [107, 4, 1, "", "display"], [107, 4, 1, "", "display_soln"], [107, 4, 1, "", "eval_lin_constraint"], [107, 4, 1, "", "eval_nln_constraint"], [107, 4, 1, "", "eval_nln_constraint_hess"], [107, 4, 1, "", "eval_nln_cost"], [107, 4, 1, "", "eval_quad_cost"], [107, 4, 1, "", "get_idx"], [107, 4, 1, "", "get_soln"], [107, 4, 1, "", "has_parsed_soln"], [107, 4, 1, "", "init_indexed_name"], [107, 4, 1, "", "init_set_types"], [107, 4, 1, "", "is_mixed_integer"], [107, 4, 1, "", "is_solved"], [107, 2, 1, "", "lin"], [107, 2, 1, "", "nlc"], [107, 2, 1, "", "nle"], [107, 2, 1, "", "nli"], [107, 4, 1, "", "opt_model"], [107, 4, 1, "", "params_lin_constraint"], [107, 4, 1, "", "params_nln_constraint"], [107, 4, 1, "", "params_nln_cost"], [107, 4, 1, "", "params_quad_cost"], [107, 4, 1, "", "params_var"], [107, 4, 1, "", "parse_soln"], [107, 2, 1, "", "prob_type"], [107, 4, 1, "", "problem_type"], [107, 2, 1, "", "qdc"], [107, 4, 1, "", "set_params"], [107, 2, 1, "", "soln"], [107, 4, 1, "", "solve"], [107, 2, 1, "", "var"], [107, 4, 1, "", "varsets_cell2struct"], [107, 4, 1, "", "varsets_idx"], [107, 4, 1, "", "varsets_len"], [107, 4, 1, "", "varsets_x"]]}, "objtypes": {"0": "mat:function", "1": "mat:class", "2": "mat:attribute", "3": "mat:staticmethod", "4": "mat:method"}, "objnames": {"0": ["mat", "function", "MATLAB function"], "1": ["mat", "class", "MATLAB class"], "2": ["mat", "attribute", "MATLAB attribute"], "3": ["mat", "staticmethod", "MATLAB static method"], "4": ["mat", "method", "MATLAB method"]}, "titleterms": {"acknowledg": [0, 233], "architectur": 1, "overview": [1, 21], "m": [1, 2, 5, 6, 12, 21, 235, 453, 460, 726, 728, 757, 758], "span": [1, 2, 5, 6, 12, 21, 235, 453, 460, 726, 728, 757, 758], "style": [1, 2, 5, 6, 12, 21, 235, 453, 460, 726, 728, 757, 758], "font": [1, 2, 5, 6, 12, 21, 235, 453, 460, 726, 728, 757, 758], "size": [1, 2, 5, 6, 12, 21, 235, 453, 460, 726, 728, 757, 758], "smaller": [1, 2, 5, 6, 12, 21, 235, 453, 460, 726, 728, 757, 758], "atpow": [1, 2, 5, 6, 12, 21, 235, 453, 460, 726, 728, 757, 758], "matpow": [1, 2, 5, 6, 12, 21, 235, 453, 460, 726, 728, 757, 758], "object": [1, 3, 4, 7, 8, 11], "instanc": 1, "class": [1, 2, 7, 217, 235, 726], "hierarchi": 1, "two": 1, "framework": [1, 758], "custom": [1, 2, 17], "default": 2, "determin": 2, "task": [2, 11, 17, 235, 439], "model": [2, 3, 4, 7, 8, 11, 17, 19, 216, 217, 235], "data": [2, 3, 4, 7, 17, 19, 20, 235, 726, 728], "convert": [2, 4, 11, 17, 19, 235], "specif": [2, 4], "method": [2, 3, 11], "element": [2, 3, 4, 7, 8, 17, 19, 235, 757], "modifi": 2, "via": [2, 12], "option": [2, 12, 217], "extens": [2, 12, 18, 19, 235, 291], "build": [3, 4, 7, 8, 11, 13, 17, 726], "system": 3, "level": [3, 453, 726], "paramet": [3, 8, 19], "print": [3, 17], "tabl": [3, 17], "properti": 3, "connect": [3, 17], "import": [4, 17], "export": [4, 17], "variabl": [4, 7, 17], "map": [4, 17], "valu": [4, 17], "develop": [5, 6], "": [5, 37, 104, 216, 233, 758], "manual": [5, 13, 21, 37, 104, 216, 233, 460, 758], "introduct": [6, 461], "environ": 6, "github": 6, "repositori": 6, "convent": 6, "mathemat": [7, 17, 19, 235], "solv": 7, "math": 7, "updat": [7, 13, 17], "network": [7, 8, 17, 19, 235], "ad": 7, "constraint": [7, 12, 235], "cost": 7, "share": 7, "formul": [8, 17, 19], "dc": [8, 17, 235], "ac": [8, 17, 19], "complex": 8, "power": [8, 17, 20, 726], "inject": 8, "current": [8, 757], "node": 8, "type": [8, 17, 19], "exampl": [8, 12, 20, 38, 105, 217, 235], "bu": 8, "gener": 8, "branch": 8, "load": 8, "aggreg": 8, "notat": 9, "refer": [10, 13, 37, 38, 104, 105, 216, 217, 234, 460], "run": [11, 20], "iter": 11, "execut": 11, "other": [11, 21, 38, 105, 234, 453, 726], "how": [12, 13, 17, 18, 20, 21], "add": 12, "an": [12, 18], "opf": [12, 17, 235, 592, 726, 757], "function": [12, 13, 17, 38, 105, 217, 234, 453, 726], "deriv": [12, 726, 757], "implement": [12, 217], "us": [12, 17, 18], "new": [12, 17, 758], "origin": 12, "box": 12, "capabl": 12, "curv": 12, "oval": 12, "see": [12, 17, 18], "also": [12, 17, 18], "document": [13, 21, 233], "util": [13, 217, 726], "generate_autodoc_stub": 14, "generate_matpower_autodoc": 15, "generate_source_symlink": 16, "creat": [17, 18], "transmiss": 17, "line": [17, 235], "name": 17, "main": [17, 38, 105], "output": [17, 726], "stage": 17, "pretti": 17, "subclass": 17, "field": 17, "sourc": 17, "all": [17, 19, 21], "cartesian": [17, 19, 757], "v": [17, 19], "polar": [17, 19], "flow": [17, 20, 726, 757], "optim": 17, "A": 19, "test": [19, 38, 105, 217, 233, 234, 726, 728], "gizmo": 19, "3": 19, "port": 19, "compon": 19, "three": [20, 235], "phase": [20, 235], "format": 20, "bus3p": 20, "line3p": 20, "xfmr3p": 20, "load3p": 20, "gen3p": 20, "lc": 20, "buslink": 20, "case": 20, "home": 21, "get": 21, "start": 21, "more": 21, "legaci": [21, 235, 726, 758], "pdf": 21, "To": 21, "guid": 21, "tech": 21, "note": [21, 757], "public": 21, "link": 21, "have_feature_lu_vec": 22, "have_feature_pardiso": 23, "have_feature_pardiso_legaci": 24, "have_feature_pardiso_object": 25, "mip": [26, 37, 38], "mips_example1": 27, "mips_example2": 28, "mipsver": 29, "mplinsolv": 30, "qps_mip": 31, "t_mip": 32, "t_mips_pardiso": 33, "t_mplinsolv": 34, "t_qps_mip": 35, "test_mip": 36, "user": [37, 104, 216, 233, 235, 726, 758], "privat": [38, 105, 217, 234, 726], "addgen2mpc": 39, "addstorag": 40, "addwind": 41, "apply_profil": 42, "c118swf": 43, "ex_case3a": 44, "ex_case3b": 45, "ex_contab": 46, "ex_load_profil": 47, "ex_storag": 48, "ex_transmat": 49, "ex_wind": 50, "ex_wind_profil": 51, "ex_wind_profile_d": 52, "ex_wind_uc": 53, "ex_xgd": 54, "ex_xgd_ramp": 55, "ex_xgd_r": 56, "ex_xgd_uc": 57, "filter_ramp_transit": 58, "getprofil": 59, "idx_profil": 60, "loadgenericdata": 61, "loadmd": 62, "loadstoragedata": 63, "loadxgendata": 64, "md_init": 65, "most": [66, 104, 105], "most_ex1_": 67, "most_ex2_dcopf": 68, "most_ex3_dcopf_w_uc": 69, "most_ex4_dcopf_ss": 70, "most_ex5_mpopf": 71, "most_ex6_uc": 72, "most_ex7_suc": 73, "most_summari": 74, "mostver": 75, "mpoption_info_most": 76, "plot_gen": 77, "plot_storag": 78, "plot_uc": 79, "plot_uc_data": 80, "t_case30_most": 81, "t_case3_most": 82, "t_case_tlmp": 83, "t_case_tlmp_storag": 84, "t_most_30b_1_1_0": 85, "t_most_30b_1_1_0_uc": 86, "t_most_30b_1_1_17": 87, "t_most_30b_3_1_0": 88, "t_most_30b_3_1_17": 89, "t_most_3b_1_1_0": 90, "t_most_3b_1_1_2": 91, "t_most_3b_3_1_0": 92, "t_most_3b_3_1_2": 93, "t_most_fixed_r": 94, "t_most_mpopf": 95, "t_most_sp": 96, "t_most_spuc": 97, "t_most_suc": 98, "t_most_tlmp": 99, "t_most_uc": 100, "t_most_w_d": 101, "test_most": 102, "uniformwindprofil": 103, "mp_idx_manag": 106, "opt_model": 107, "convert_lin_constraint": 108, "convert_lin_constraint_multipli": 109, "cplex_opt": 110, "glpk_option": 111, "gurobi_opt": 112, "gurobiv": 113, "have_feature_bpmpd": 114, "have_feature_catchm": 115, "have_feature_clp": 116, "have_feature_cplex": 117, "have_feature_evalc": 118, "have_feature_fmincon": 119, "have_feature_fmincon_ipm": 120, "have_feature_fsolv": 121, "have_feature_glpk": 122, "have_feature_gurobi": 123, "have_feature_intlinprog": 124, "have_feature_ipopt": 125, "have_feature_ipopt_auxdata": 126, "have_feature_isequaln": 127, "have_feature_knitro": 128, "have_feature_knitromatlab": 129, "have_feature_ktrlink": 130, "have_feature_linprog": 131, "have_feature_linprog_d": 132, "have_feature_mosek": 133, "have_feature_opti_clp": 134, "have_feature_optim": 135, "have_feature_optimopt": 136, "have_feature_osqp": 137, "have_feature_quadprog": 138, "have_feature_quadprog_l": 139, "have_feature_sdpt3": 140, "have_feature_sedumi": 141, "have_feature_yalmip": 142, "ipopt_opt": 143, "miqps_cplex": 144, "miqps_glpk": 145, "miqps_gurobi": 146, "miqps_mast": 147, "miqps_mosek": 148, "miqps_ot": 149, "mosek_opt": 150, "mosek_symbcon": 151, "mpomver": 152, "mpopt2nleqopt": 153, "mpopt2nlpopt": 154, "mpopt2pneopt": 155, "mpopt2qpopt": 156, "nested_struct_copi": 157, "nleqs_cor": 158, "nleqs_fd_newton": 159, "nleqs_fsolv": 160, "nleqs_gauss_seidel": 161, "nleqs_mast": 162, "nleqs_master_ex1": 163, "nleqs_master_ex2": 164, "nleqs_newton": 165, "nlp_consfcn": 166, "nlp_costfcn": 167, "nlp_hessfcn": 168, "nlps_fmincon": 169, "nlps_ipopt": 170, "nlps_knitro": 171, "nlps_master": 172, "nlps_master_ex1": 173, "nlps_master_ex2": 174, "osqp_opt": 175, "osqpver": 176, "pne_callback_default": 177, "pne_callback_nos": 178, "pne_callback_target_lam": 179, "pne_detect_ev": 180, "pne_detected_ev": 181, "pne_event_nos": 182, "pne_event_target_lam": 183, "pne_ex1": 184, "pne_pfcn_arc_len": 185, "pne_pfcn_natur": 186, "pne_pfcn_pseudo_arc_len": 187, "pne_register_callback": 188, "pne_register_ev": 189, "pnes_mast": 190, "qp_ex1": 191, "qps_bpmpd": 192, "qps_clp": 193, "qps_cplex": 194, "qps_glpk": 195, "qps_gurobi": 196, "qps_ipopt": 197, "qps_master": 198, "qps_mosek": 199, "qps_osqp": 200, "qps_ot": 201, "t_miqps_mast": 202, "t_nested_struct_copi": 203, "t_nleqs_mast": 204, "t_nlps_master": 205, "t_om_solve_leq": 206, "t_om_solve_miqp": 207, "t_om_solve_nleq": 208, "t_om_solve_nlp": 209, "t_om_solve_pn": 210, "t_om_solve_qp": 211, "t_opt_model": 212, "t_pnes_mast": 213, "t_qps_master": 214, "test_mp_opt_model": 215, "mp": [216, 217, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 757], "opt": [216, 217], "mpom": [216, 217], "master": 217, "handl": 217, "version": [217, 727], "inform": 217, "solver": [217, 726], "interfac": 217, "miqp": [217, 726], "nleq": 217, "nlp": 217, "pne": 217, "lp": [217, 726], "qp": [217, 726], "have_featur": 218, "have_feature_matlab": 219, "have_feature_octav": 220, "mptestver": 221, "t_begin": 222, "t_end": 223, "t_file_match": 224, "t_have_featur": 225, "t_i": 226, "t_ok": 227, "t_run_test": 228, "t_skip": 229, "t_str_match": 230, "t_test_fcn": 231, "test_mptest": 232, "instal": [233, 453], "usag": 233, "contribut": 233, "licens": 233, "core": 235, "contain": 235, "mixin": 235, "miscellan": 235, "base": 235, "fix": 235, "zonal": 235, "reserv": 235, "prototyp": 235, "node_typ": 236, "cost_tabl": 237, "cost_table_util": 238, "data_model": 239, "data_model_cpf": 240, "data_model_opf": 241, "dm_convert": 242, "dm_converter_mpc2": 243, "dm_converter_mpc2_legaci": 244, "dm_element": 245, "dmc_element": 246, "dmce_branch_mpc2": 247, "dmce_bus3p_mpc2": 248, "dmce_bus_mpc2": 249, "dmce_buslink_mpc2": 250, "dmce_gen3p_mpc2": 251, "dmce_gen_mpc2": 252, "dmce_legacy_dcline_mpc2": 253, "dmce_line3p_mpc2": 254, "dmce_load3p_mpc2": 255, "dmce_load_mpc2": 256, "dmce_reserve_gen_mpc2": 257, "dmce_reserve_zone_mpc2": 258, "dmce_shunt_mpc2": 259, "dmce_xfmr3p_mpc2": 260, "dme_branch": 261, "dme_branch_opf": 262, "dme_bu": 263, "dme_bus3p": 264, "dme_bus3p_opf": 265, "dme_bus_opf": 266, "dme_buslink": 267, "dme_buslink_opf": 268, "dme_gen": 269, "dme_gen3p": 270, "dme_gen3p_opf": 271, "dme_gen_opf": 272, "dme_legacy_dclin": 273, "dme_legacy_dcline_opf": 274, "dme_line3p": 275, "dme_line3p_opf": 276, "dme_load": 277, "dme_load3p": 278, "dme_load3p_opf": 279, "dme_load_cpf": 280, "dme_load_opf": 281, "dme_reserve_gen": 282, "dme_reserve_zon": 283, "dme_shared_opf": 284, "dme_shunt": 285, "dme_shunt_cpf": 286, "dme_shunt_opf": 287, "dme_xfmr3p": 288, "dme_xfmr3p_opf": 289, "element_contain": 290, "form": 292, "form_ac": 293, "form_acc": 294, "form_acp": 295, "form_dc": 296, "mapped_arrai": 297, "math_model": 298, "math_model_cpf_acc": [299, 301], "math_model_cpf_acci": 300, "math_model_cpf_acp": [302, 304], "math_model_cpf_acpi": 303, "math_model_opf": 305, "math_model_opf_ac": 306, "math_model_opf_acc": [307, 310], "math_model_opf_acci": 308, "math_model_opf_acci_legaci": 309, "math_model_opf_accs_legaci": 311, "math_model_opf_acp": [312, 315], "math_model_opf_acpi": 313, "math_model_opf_acpi_legaci": 314, "math_model_opf_acps_legaci": 316, "math_model_opf_dc": 317, "math_model_opf_dc_legaci": 318, "math_model_pf": 319, "math_model_pf_ac": 320, "math_model_pf_acci": 321, "math_model_pf_acc": 322, "math_model_pf_acpi": 323, "math_model_pf_acp": 324, "math_model_pf_dc": 325, "mm_element": 326, "mm_shared_opf_legaci": 327, "mm_shared_pfcpf": 328, "mm_shared_pfcpf_ac": 329, "mm_shared_pfcpf_ac_i": 330, "mm_shared_pfcpf_acc": [331, 333], "mm_shared_pfcpf_acci": 332, "mm_shared_pfcpf_acp": [334, 336], "mm_shared_pfcpf_acpi": 335, "mm_shared_pfcpf_dc": 337, "mme_branch": 338, "mme_branch_opf": 339, "mme_branch_opf_ac": 340, "mme_branch_opf_acc": 341, "mme_branch_opf_acp": 342, "mme_branch_opf_dc": 343, "mme_branch_pf_ac": 344, "mme_branch_pf_dc": 345, "mme_bu": 346, "mme_bus3p": 347, "mme_bus3p_opf_acc": 348, "mme_bus3p_opf_acp": 349, "mme_bus_opf_ac": 350, "mme_bus_opf_acc": 351, "mme_bus_opf_acp": 352, "mme_bus_opf_dc": 353, "mme_bus_pf_ac": 354, "mme_bus_pf_dc": 355, "mme_buslink": 356, "mme_buslink_opf": 357, "mme_buslink_opf_acc": 358, "mme_buslink_opf_acp": 359, "mme_buslink_pf_ac": 360, "mme_buslink_pf_acc": 361, "mme_buslink_pf_acp": 362, "mme_gen": 363, "mme_gen3p": 364, "mme_gen3p_opf": 365, "mme_gen_opf": 366, "mme_gen_opf_ac": 367, "mme_gen_opf_ac_ov": 368, "mme_gen_opf_dc": 369, "mme_gen_pf_ac": 370, "mme_gen_pf_dc": 371, "mme_legacy_dclin": 372, "mme_legacy_dcline_opf": 373, "mme_legacy_dcline_opf_ac": 374, "mme_legacy_dcline_opf_dc": 375, "mme_legacy_dcline_pf_ac": 376, "mme_legacy_dcline_pf_dc": 377, "mme_line3p": 378, "mme_line3p_opf": 379, "mme_load": 380, "mme_load_cpf": 381, "mme_load_pf_ac": 382, "mme_load_pf_dc": 383, "mme_reserve_gen": 384, "mme_reserve_zon": 385, "mme_shunt": 386, "mme_shunt_cpf": 387, "mme_shunt_pf_ac": 388, "mme_shunt_pf_dc": 389, "mme_xfmr3p": 390, "mme_xfmr3p_opf": 391, "net_model": 392, "net_model_ac": 393, "net_model_acc": 394, "net_model_acp": 395, "net_model_dc": 396, "nm_element": 397, "nme_branch": 398, "nme_branch_ac": 399, "nme_branch_acc": 400, "nme_branch_acp": 401, "nme_branch_dc": 402, "nme_bu": 403, "nme_bus3p": 404, "nme_bus3p_acc": 405, "nme_bus3p_acp": 406, "nme_bus_acc": 407, "nme_bus_acp": 408, "nme_bus_dc": 409, "nme_buslink": 410, "nme_buslink_acc": 411, "nme_buslink_acp": 412, "nme_gen": 413, "nme_gen3p": 414, "nme_gen3p_acc": 415, "nme_gen3p_acp": 416, "nme_gen_ac": 417, "nme_gen_acc": 418, "nme_gen_acp": 419, "nme_gen_dc": 420, "nme_legacy_dclin": 421, "nme_legacy_dcline_ac": 422, "nme_legacy_dcline_acc": 423, "nme_legacy_dcline_acp": 424, "nme_legacy_dcline_dc": 425, "nme_line3p": 426, "nme_load": 427, "nme_load3p": 428, "nme_load_ac": 429, "nme_load_acc": 430, "nme_load_acp": 431, "nme_load_dc": 432, "nme_shunt": 433, "nme_shunt_ac": 434, "nme_shunt_acc": 435, "nme_shunt_acp": 436, "nme_shunt_dc": 437, "nme_xfmr3p": 438, "task_cpf": 440, "task_cpf_legaci": 441, "task_opf": 442, "task_opf_legaci": 443, "task_pf": 444, "task_pf_legaci": 445, "task_shared_legaci": 446, "xt_3p": 447, "xt_legacy_dclin": 448, "xt_oval_cap_curv": 449, "xt_reserv": 450, "mp_tabl": 451, "mp_table_subclass": 452, "limit": 452, "top": [453, 726], "simul": [453, 726], "install_matpow": 454, "mp_table_class": 455, "run_cpf": 456, "run_mp": 457, "run_opf": 458, "run_pf": 459, "opf_model": 462, "add_userfcn": 463, "apply_chang": 464, "bustyp": 465, "calc_branch_angl": 466, "calc_v_i_sum": 467, "calc_v_pq_sum": 468, "calc_v_y_sum": 469, "case_info": 470, "caseformat": 471, "cdf2mpc": 472, "compare_cas": 473, "connected_compon": 474, "cpf_corrector": 475, "cpf_current_mpc": 476, "cpf_default_callback": 477, "cpf_detect_ev": 478, "cpf_flim_ev": 479, "cpf_flim_event_cb": 480, "cpf_nose_ev": 481, "cpf_nose_event_cb": 482, "cpf_p": 483, "cpf_p_jac": 484, "cpf_plim_ev": 485, "cpf_plim_event_cb": 486, "cpf_predictor": 487, "cpf_qlim_ev": 488, "cpf_qlim_event_cb": 489, "cpf_register_callback": 490, "cpf_register_ev": 491, "cpf_tangent": 492, "cpf_target_lam_ev": 493, "cpf_target_lam_event_cb": 494, "cpf_vlim_ev": 495, "cpf_vlim_event_cb": 496, "d2abr_dv2": 497, "d2ibr_dv2": 498, "d2imis_dv2": 499, "d2imis_dvdsg": 500, "d2sbr_dv2": 501, "d2sbus_dv2": 502, "dabr_dv": 503, "dibr_dv": 504, "dimis_dv": 505, "dsbr_dv": 506, "dsbus_dv": 507, "dcopf": 508, "dcopf_solv": 509, "dcpf": 510, "define_const": 511, "e2i_data": 512, "e2i_field": 513, "ext2int": 514, "extract_island": 515, "fdpf": 516, "feval_w_path": 517, "find_bridg": 518, "find_island": 519, "fmincopf": 520, "gausspf": 521, "genfuel": 522, "gentyp": 523, "get_loss": 524, "get_reord": 525, "haspqcap": 526, "have_feature_e4st": 527, "have_feature_minopf": 528, "have_feature_most": 529, "have_feature_mp_cor": 530, "have_feature_pdipmopf": 531, "have_feature_regexp_split": 532, "have_feature_scpdipmopf": 533, "have_feature_sdp_pf": 534, "have_feature_smartmarket": 535, "have_feature_syngrid": 536, "have_feature_t": 537, "have_feature_tralmopf": 538, "i2e_data": 539, "i2e_field": 540, "idx_brch": 541, "idx_bu": 542, "idx_cost": 543, "idx_ct": 544, "idx_dclin": 545, "idx_gen": 546, "int2ext": 547, "isload": 548, "load2disp": 549, "loadcas": 550, "loadsh": 551, "makeaang": 552, "makeapq": 553, "makeavl": 554, "makeai": 555, "makeb": 556, "makebdc": 557, "makejac": 558, "makelodf": 559, "makeptdf": 560, "makesbu": 561, "makesdzip": 562, "makeybu": 563, "make_vcorr": 564, "make_zpv": 565, "margcost": 566, "miqps_matpow": 567, "modcost": 568, "mpoption": 569, "mpoption_info_clp": 570, "mpoption_info_cplex": 571, "mpoption_info_fmincon": 572, "mpoption_info_glpk": 573, "mpoption_info_gurobi": 574, "mpoption_info_intlinprog": 575, "mpoption_info_ipopt": 576, "mpoption_info_knitro": 577, "mpoption_info_linprog": 578, "mpoption_info_mip": 579, "mpoption_info_mosek": 580, "mpoption_info_osqp": 581, "mpoption_info_quadprog": 582, "mpoption_old": 583, "mpver": 584, "newtonpf": 585, "newtonpf_i_cart": 586, "newtonpf_i_hybrid": 587, "newtonpf_i_polar": 588, "newtonpf_s_cart": 589, "newtonpf_s_hybrid": 590, "nlpopf_solv": 591, "opf_arg": 593, "opf_branch_ang_fcn": 594, "opf_branch_ang_hess": 595, "opf_branch_flow_fcn": 596, "opf_branch_flow_hess": 597, "opf_current_balance_fcn": 598, "opf_current_balance_hess": 599, "opf_execut": 600, "opf_gen_cost_fcn": 601, "opf_legacy_user_cost_fcn": 602, "opf_nle_fcn1": 603, "opf_nle_hess1": 604, "opf_power_balance_fcn": 605, "opf_power_balance_hess": 606, "opf_setup": 607, "opf_veq_fcn": 608, "opf_veq_hess": 609, "opf_vlim_fcn": 610, "opf_vlim_hess": 611, "opf_vref_fcn": 612, "opf_vref_hess": 613, "order_radi": 614, "pfsoln": 615, "poly2pwl": 616, "polycost": 617, "pqcost": 618, "printpf": 619, "psse2mpc": 620, "psse_convert": 621, "psse_convert_hvdc": 622, "psse_convert_xfmr": 623, "psse_pars": 624, "psse_parse_lin": 625, "psse_parse_sect": 626, "psse_read": 627, "qps_matpow": 628, "radial_pf": 629, "remove_userfcn": 630, "run_userfcn": 631, "runcpf": 632, "rundcopf": 633, "rundcpf": 634, "runduopf": 635, "runopf": 636, "runopf_w_r": 637, "runpf": 638, "runuopf": 639, "save2pss": 640, "savecas": 641, "savechgtab": 642, "scale_load": 643, "set_reord": 644, "t_apply_chang": 645, "t_auction_cas": 646, "t_auction_minopf": 647, "t_auction_mip": 648, "t_auction_tspopf_pdipm": 649, "t_case30_userfcn": 650, "t_case9_dclin": 651, "t_case9_opf": 652, "t_case9_opfv2": 653, "t_case9_pf": 654, "t_case9_pfv2": 655, "t_case9_save2pss": 656, "t_case_ext": 657, "t_case_int": 658, "t_chgtab": 659, "t_cpf": 660, "t_cpf_cb1": 661, "t_cpf_cb2": 662, "t_dcline": 663, "t_ext2int2ext": 664, "t_feval_w_path": 665, "t_get_loss": 666, "t_haspqcap": 667, "t_hessian": 668, "t_island": 669, "t_jacobian": 670, "t_load2disp": 671, "t_loadcas": 672, "t_makelodf": 673, "t_makeptdf": 674, "t_margcost": 675, "t_miqps_matpow": 676, "t_modcost": 677, "t_mpoption": 678, "t_mpoption_ov": 679, "t_off2cas": 680, "t_opf_dc_bpmpd": 681, "t_opf_dc_clp": 682, "t_opf_dc_cplex": 683, "t_opf_dc_default": 684, "t_opf_dc_glpk": 685, "t_opf_dc_gurobi": 686, "t_opf_dc_ipopt": 687, "t_opf_dc_mip": 688, "t_opf_dc_mips_sc": 689, "t_opf_dc_mosek": 690, "t_opf_dc_osqp": 691, "t_opf_dc_ot": 692, "t_opf_default": 693, "t_opf_fmincon": 694, "t_opf_ipopt": 695, "t_opf_knitro": 696, "t_opf_minopf": 697, "t_opf_mip": 698, "t_opf_model": 699, "t_opf_softlim": 700, "t_opf_tspopf_pdipm": 701, "t_opf_tspopf_scpdipm": 702, "t_opf_tspopf_tralm": 703, "t_opf_userfcn": 704, "t_pf_ac": 705, "t_pf_dc": 706, "t_pf_radial": 707, "t_printpf": 708, "t_psse": 709, "t_qps_matpow": 710, "t_runmarket": 711, "t_runopf_w_r": 712, "t_scale_load": 713, "t_total_load": 714, "t_totcost": 715, "t_vdep_load": 716, "toggle_dclin": 717, "toggle_iflim": 718, "toggle_reserv": 719, "toggle_softlim": 720, "total_load": 721, "totcost": 722, "uopf": 723, "update_mupq": 724, "zgausspf": 725, "input": 726, "convers": 726, "continu": 726, "wrapper": 726, "callback": 726, "milp": 726, "matrix": 726, "featur": 726, "detect": 726, "previou": 727, "mp_foo_tabl": 729, "t_case3p_a": 730, "t_case3p_b": 731, "t_case3p_c": 732, "t_case3p_d": 733, "t_case3p_": 734, "t_case3p_f": 735, "t_case3p_g": 736, "t_case3p_h": 737, "t_case9_gizmo": 738, "t_dmc_element": 739, "t_mp_data_model": 740, "t_mp_dm_converter_mpc2": 741, "t_mp_mapped_arrai": 742, "t_mp_tabl": 743, "t_mpxt_legacy_dclin": 744, "t_mpxt_reserv": 745, "t_nm_element": 746, "t_node_test": 747, "t_port_inj_current_acc": 748, "t_port_inj_current_acp": 749, "t_port_inj_power_acc": 750, "t_port_inj_power_acp": 751, "t_pretty_print": 752, "t_run_mp": 753, "t_run_mp_3p": 754, "t_run_opf_default": 755, "test_matpow": 756, "technic": 757, "tn1": 757, "auction": 757, "tn2": 757, "tn3": 757, "tn4": 757, "tn5": 757, "flexibl": 758}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Acknowledgments": [[0, "acknowledgments"], [233, "acknowledgments"]], "Architecture Overview": [[1, "architecture-overview"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Object Instances": [[1, "matpower-object-instances"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Class Hierarchies": [[1, "matpower-class-hierarchies"]], "Two M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Frameworks": [[1, "two-matpower-frameworks"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Customization": [[1, "matpower-customization"]], "Customizing M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{}": [[2, "customizing-matpower"]], "Default Class Determination": [[2, "default-class-determination"]], "Task Class": [[2, "task-class"]], "Model and Data Converter Classes": [[2, "model-and-data-converter-classes"]], "Class Specification Methods of a Task": [[2, "id7"]], "Element Classes": [[2, "element-classes"]], "Element Class Modifiers": [[2, "id8"]], "Customization via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Options": [[2, "customization-via-matpower-options"]], "Class Customization Options": [[2, "id9"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extensions": [[2, "matpower-extensions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Methods": [[2, "id10"]], "Data Model Object": [[3, "data-model-object"]], "Data Models": [[3, "data-models"]], "Building a Data Model": [[3, "building-a-data-model"]], "System Level Parameters": [[3, "system-level-parameters"]], "Printing a Data Model": [[3, "printing-a-data-model"]], "Data Model Elements": [[3, "data-model-elements"]], "Data Tables": [[3, "data-tables"]], "Properties": [[3, "properties"]], "Data Model Element Properties": [[3, "id6"]], "Methods": [[3, "methods"]], "Connections": [[3, "connections"]], "Data Model Converter Object": [[4, "data-model-converter-object"]], "Data Model Converters": [[4, "data-model-converters"]], "Building a Data Model Converter": [[4, "building-a-data-model-converter"]], "Importing Data": [[4, "importing-data"]], "Exporting Data": [[4, "exporting-data"]], "Data Model Converter Elements": [[4, "data-model-converter-elements"]], "Data Import Specifications": [[4, "data-import-specifications"]], "Variable Map Values": [[4, "id5"]], "Data Export Specifications": [[4, "data-export-specifications"]], "Introduction": [[6, "introduction"], [461, "introduction"]], "Development Environment": [[6, "development-environment"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} GitHub Repositories": [[6, "id1"]], "Conventions": [[6, "conventions"]], "Mathematical Model Object": [[7, "mathematical-model-object"]], "Mathematical Models": [[7, "mathematical-models"]], "Building a Mathematical Model": [[7, "building-a-mathematical-model"]], "Solving a Math Model": [[7, "solving-a-math-model"]], "Updating Network and Data Models": [[7, "updating-network-and-data-models"]], "Mathematical Model Elements": [[7, "mathematical-model-elements"]], "Adding Variables, Constraints, and Costs": [[7, "adding-variables-constraints-and-costs"]], "Updating Data Model Elements": [[7, "updating-data-model-elements"]], "Shared Classes": [[7, "shared-classes"]], "Network Model Object": [[8, "network-model-object"]], "Network Model Formulations": [[8, "network-model-formulations"]], "DC Formulation": [[8, "dc-formulation"], [17, "dc-formulation"]], "AC Formulations": [[8, "ac-formulations"], [17, "ac-formulations"], [19, "ac-formulations"]], "Complex Power Injections": [[8, "complex-power-injections"]], "Complex Current Injections": [[8, "complex-current-injections"]], "Network Models": [[8, "network-models"]], "Building a Network Model": [[8, "building-a-network-model"]], "Node Types": [[8, "node-types"]], "Network Model Elements": [[8, "network-model-elements"]], "Example Elements": [[8, "example-elements"]], "Bus": [[8, "bus"]], "Generator": [[8, "generator"]], "Branch": [[8, "branch"]], "Load": [[8, "load"]], "Building Element Parameters": [[8, "building-element-parameters"]], "Aggregation": [[8, "aggregation"]], "Notation": [[9, "notation"]], "References": [[10, "references"]], "Task Object": [[11, "task-object"]], "Running a Task": [[11, "running-a-task"]], "Building Model and Converter Objects": [[11, "building-model-and-converter-objects"]], "Iterative Execution": [[11, "iterative-execution"]], "Other Methods": [[11, "other-methods"]], "How to Add an OPF Constraint": [[12, "how-to-add-an-opf-constraint"]], "Function and Derivatives": [[12, "function-and-derivatives"]], "Implementation": [[12, "implementation"]], "Using the New Constraint": [[12, "using-the-new-constraint"]], "Example": [[12, "example"]], "Original \u201cbox\u201d capability curves": [[12, "original-box-capability-curves"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} options": [[12, "oval-capability-curves-via-matpower-options"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} extension": [[12, "oval-capability-curves-via-matpower-extension"]], "See Also": [[12, "see-also"], [17, "see-also"], [18, "see-also"]], "How to Build the Documentation": [[13, "how-to-build-the-documentation"]], "Updating the Reference Manual": [[13, "updating-the-reference-manual"]], "Reference Manual Utility Functions": [[13, "reference-manual-utility-functions"]], "How to Create a New Element Type": [[17, "how-to-create-a-new-element-type"]], "DC Transmission Line": [[17, "dc-transmission-line"]], "Data Model Element": [[17, "data-model-element"], [19, "data-model-element"]], "DC Line Data Model": [[17, "id2"]], "Naming": [[17, "naming"]], "Connectivity": [[17, "connectivity"]], "Main Data Table": [[17, "main-data-table"]], "Output Values": [[17, "output-values"]], "Building the Element in Stages": [[17, "building-the-element-in-stages"]], "Pretty Printing": [[17, "pretty-printing"]], "OPF Subclass": [[17, "opf-subclass"]], "Data Model Converter Element": [[17, "data-model-converter-element"], [19, "data-model-converter-element"]], "Main Field in Data Source": [[17, "main-field-in-data-source"]], "Table Variable Map": [[17, "table-variable-map"]], "Custom Import/Export Functions": [[17, "custom-import-export-functions"]], "Network Model Element": [[17, "network-model-element"], [19, "network-model-element"]], "All Formulations": [[17, "all-formulations"], [19, "all-formulations"]], "AC Cartesian vs Polar Formulations": [[17, "ac-cartesian-vs-polar-formulations"], [19, "ac-cartesian-vs-polar-formulations"]], "Mathematical Model Element": [[17, "mathematical-model-element"], [19, "mathematical-model-element"]], "All Tasks and Formulations": [[17, "all-tasks-and-formulations"]], "Power Flow": [[17, "power-flow"]], "Optimal Power Flow": [[17, "optimal-power-flow"]], "Data Model Update": [[17, "data-model-update"]], "AC Optimal Power Flow": [[17, "ac-optimal-power-flow"]], "DC Optimal Power Flow": [[17, "dc-optimal-power-flow"]], "Using the New Element": [[17, "using-the-new-element"]], "How to Create an Extension": [[18, "how-to-create-an-extension"]], "Using the Extension": [[18, "using-the-extension"]], "A Test Gizmo Element Type": [[19, "a-test-gizmo-element-type"]], "3-Port Gizmo": [[19, "port-gizmo"]], "Gizmo Components/Parameters": [[19, "id2"]], "Gizmo Data Model": [[19, "id3"]], "Gizmo Extension": [[19, "gizmo-extension"]], "How to Run a Three-Phase Power Flow": [[20, "how-to-run-a-three-phase-power-flow"]], "Data Format": [[20, "data-format"]], "bus3p": [[20, "bus3p"]], "line3p": [[20, "line3p"]], "xfmr3p": [[20, "xfmr3p"]], "load3p": [[20, "load3p"]], "gen3p": [[20, "gen3p"]], "lc": [[20, "lc"]], "buslink": [[20, "buslink"]], "Example Cases": [[20, "example-cases"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Documentation": [[21, "matpower-documentation"]], "Home": [[21, null]], "Get Started": [[21, null]], "Overview": [[21, "overview"]], "Manuals": [[21, null]], "More Manuals": [[21, "more-manuals"]], "All Legacy PDF Manuals": [[21, "all-legacy-pdf-manuals"]], "How To Guides": [[21, null]], "Tech Notes": [[21, null]], "Publications": [[21, "publications"]], "Other Links": [[21, null]], "MIPS User\u2019s Manual": [[37, "mips-user-s-manual"]], "Reference": [[37, "reference"], [38, "reference"], [104, "reference"], [105, "reference"], [216, "reference"], [217, "reference"], [234, "reference"]], "Main MIPS Functions": [[38, "main-mips-functions"]], "Other Function": [[38, "other-function"]], "MIPS Examples": [[38, "mips-examples"]], "MIPS Tests": [[38, "mips-tests"]], "Private Functions": [[38, "private-functions"], [105, "private-functions"], [217, "private-functions"], [234, "private-functions"]], "MOST User\u2019s Manual": [[104, "most-user-s-manual"]], "Main MOST Functions": [[105, "main-most-functions"]], "Other Functions": [[105, "other-functions"], [234, "other-functions"], [453, "other-functions"], [726, "other-functions"]], "MOST Examples": [[105, "most-examples"]], "MOST Tests": [[105, "most-tests"]], "MP-Opt-Model\\mpom{} User\u2019s Manual": [[216, "mpom-user-s-manual"]], "MP-Opt-Model\\mpom{} Classes": [[217, "mpom-classes"]], "MP-Opt-Model\\mpom{} Functions": [[217, "mpom-functions"]], "Master Functions": [[217, "master-functions"]], "Utility Functions": [[217, "utility-functions"], [726, "utility-functions"]], "Options Handling Functions": [[217, "options-handling-functions"]], "Version Information Functions": [[217, "version-information-functions"]], "Solver Interfaces & Implementations": [[217, "solver-interfaces-implementations"]], "MIQP Solver": [[217, "miqp-solver"]], "NLEQ Solver": [[217, "nleq-solver"]], "NLP Solver": [[217, "nlp-solver"]], "PNE Solver": [[217, "pne-solver"]], "LP/QP Solver": [[217, "lp-qp-solver"]], "MP-Opt-Model\\mpom{} Examples": [[217, "mpom-examples"]], "MP-Opt-Model\\mpom{} Tests": [[217, "mpom-tests"]], "MP-Test User\u2019s Manual": [[233, "mp-test-user-s-manual"]], "Installation": [[233, "installation"]], "Usage": [[233, "usage"]], "Documentation": [[233, "documentation"]], "Contributing": [[233, "contributing"]], "License": [[233, "license"]], "Testing Functions": [[234, "testing-functions"]], "Tests of MP-Test": [[234, "tests-of-mp-test"]], "Classes": [[235, "classes"]], "Task Classes": [[235, "task-classes"]], "Core Task Classes": [[235, "core-task-classes"]], "Legacy Task Classes": [[235, "legacy-task-classes"]], "Data Model Classes": [[235, "data-model-classes"]], "Containers": [[235, "containers"], [235, "id1"], [235, "id3"], [235, "id5"]], "Elements": [[235, "elements"], [235, "id2"], [235, "id4"], [235, "id6"]], "Element Mixins": [[235, "element-mixins"]], "Data Model Converter Classes": [[235, "data-model-converter-classes"]], "Network Model Classes": [[235, "network-model-classes"]], "Mathematical Model Classes": [[235, "mathematical-model-classes"]], "Container Mixins": [[235, "container-mixins"]], "Miscellaneous Classes": [[235, "miscellaneous-classes"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Classes": [[235, "matpower-extension-classes"]], "Base": [[235, "base"]], "OPF Fixed Zonal Reserves Extension": [[235, "opf-fixed-zonal-reserves-extension"]], "Three-Phase Prototype Extension": [[235, "three-phase-prototype-extension"]], "Legacy DC Line Extension": [[235, "legacy-dc-line-extension"]], "Example User Constraint Extension": [[235, "example-user-constraint-extension"]], "Functions": [[453, "functions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Installer": [[453, "matpower-installer"]], "Top-Level Simulation Functions": [[453, "top-level-simulation-functions"], [726, "top-level-simulation-functions"]], "Legacy": [[726, "legacy"]], "Legacy Class": [[726, "legacy-class"]], "Legacy Functions": [[726, "legacy-functions"]], "Input/Output Functions": [[726, "input-output-functions"]], "Data Conversion Functions": [[726, "data-conversion-functions"]], "Power Flow Functions": [[726, "power-flow-functions"]], "Continuation Power Flow Functions": [[726, "continuation-power-flow-functions"]], "OPF and Wrapper Functions": [[726, "opf-and-wrapper-functions"]], "Other OPF Functions": [[726, "other-opf-functions"]], "OPF User Callback Functions": [[726, "opf-user-callback-functions"]], "Power Flow Derivative Functions": [[726, "power-flow-derivative-functions"]], "LP, QP, MILP & MIQP Solver Functions": [[726, "lp-qp-milp-miqp-solver-functions"]], "Matrix Building Functions": [[726, "matrix-building-functions"]], "Private Feature Detection Functions": [[726, "private-feature-detection-functions"]], "Legacy Tests": [[726, "legacy-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[726, "legacy-matpower-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[726, "legacy-matpower-test-data"]], "Previous Versions": [[727, "previous-versions"]], "Tests": [[728, "tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[728, "matpower-tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[728, "matpower-test-data"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Technical Notes": [[757, "matpower-technical-notes"]], "[TN1] Auctions and OPFs": [[757, "tn1-auctions-and-opfs"]], "[TN2] Flows/Derivatives": [[757, "tn2-flows-derivatives"]], "[TN3] Flows/Derivatives, Current": [[757, "tn3-flows-derivatives-current"]], "[TN4] Flows/Derivatives, Cartesian": [[757, "tn4-flows-derivatives-cartesian"]], "[TN5] MP-Element": [[757, "tn5-mp-element"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} User\u2019s Manual": [[758, "matpower-user-s-manual"]], "Legacy Framework": [[758, "legacy-framework"]], "New Flexible Framework": [[758, "new-flexible-framework"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Developer\u2019s Manual": [[5, "matpower-developer-s-manual"]], "generate_autodoc_stubs": [[14, "generate-autodoc-stubs"]], "generate_matpower_autodoc": [[15, "generate-matpower-autodoc"]], "generate_source_symlinks": [[16, "generate-source-symlinks"]], "have_feature_lu_vec": [[22, "have-feature-lu-vec"]], "have_feature_pardiso": [[23, "have-feature-pardiso"]], "have_feature_pardiso_legacy": [[24, "have-feature-pardiso-legacy"]], "have_feature_pardiso_object": [[25, "have-feature-pardiso-object"]], "mips": [[26, "mips"]], "mips_example1": [[27, "mips-example1"]], "mips_example2": [[28, "mips-example2"]], "mipsver": [[29, "mipsver"]], "mplinsolve": [[30, "mplinsolve"]], "qps_mips": [[31, "qps-mips"]], "t_mips": [[32, "t-mips"]], "t_mips_pardiso": [[33, "t-mips-pardiso"]], "t_mplinsolve": [[34, "t-mplinsolve"]], "t_qps_mips": [[35, "t-qps-mips"]], "test_mips": [[36, "test-mips"]], "addgen2mpc": [[39, "addgen2mpc"]], "addstorage": [[40, "addstorage"]], "addwind": [[41, "addwind"]], "apply_profile": [[42, "apply-profile"]], "c118swf": [[43, "c118swf"]], "ex_case3a": [[44, "ex-case3a"]], "ex_case3b": [[45, "ex-case3b"]], "ex_contab": [[46, "ex-contab"]], "ex_load_profile": [[47, "ex-load-profile"]], "ex_storage": [[48, "ex-storage"]], "ex_transmat": [[49, "ex-transmat"]], "ex_wind": [[50, "ex-wind"]], "ex_wind_profile": [[51, "ex-wind-profile"]], "ex_wind_profile_d": [[52, "ex-wind-profile-d"]], "ex_wind_uc": [[53, "ex-wind-uc"]], "ex_xgd": [[54, "ex-xgd"]], "ex_xgd_ramp": [[55, "ex-xgd-ramp"]], "ex_xgd_res": [[56, "ex-xgd-res"]], "ex_xgd_uc": [[57, "ex-xgd-uc"]], "filter_ramp_transitions": [[58, "filter-ramp-transitions"]], "getprofiles": [[59, "getprofiles"]], "idx_profile": [[60, "idx-profile"]], "loadgenericdata": [[61, "loadgenericdata"]], "loadmd": [[62, "loadmd"]], "loadstoragedata": [[63, "loadstoragedata"]], "loadxgendata": [[64, "loadxgendata"]], "md_init": [[65, "md-init"]], "most": [[66, "most"]], "most_ex1_ed": [[67, "most-ex1-ed"]], "most_ex2_dcopf": [[68, "most-ex2-dcopf"]], "most_ex3_dcopf_w_uc": [[69, "most-ex3-dcopf-w-uc"]], "most_ex4_dcopf_ss": [[70, "most-ex4-dcopf-ss"]], "most_ex5_mpopf": [[71, "most-ex5-mpopf"]], "most_ex6_uc": [[72, "most-ex6-uc"]], "most_ex7_suc": [[73, "most-ex7-suc"]], "most_summary": [[74, "most-summary"]], "mostver": [[75, "mostver"]], "mpoption_info_most": [[76, "mpoption-info-most"]], "plot_gen": [[77, "plot-gen"]], "plot_storage": [[78, "plot-storage"]], "plot_uc": [[79, "plot-uc"]], "plot_uc_data": [[80, "plot-uc-data"]], "t_case30_most": [[81, "t-case30-most"]], "t_case3_most": [[82, "t-case3-most"]], "t_case_tlmp": [[83, "t-case-tlmp"]], "t_case_tlmp_storage": [[84, "t-case-tlmp-storage"]], "t_most_30b_1_1_0": [[85, "t-most-30b-1-1-0"]], "t_most_30b_1_1_0_uc": [[86, "t-most-30b-1-1-0-uc"]], "t_most_30b_1_1_17": [[87, "t-most-30b-1-1-17"]], "t_most_30b_3_1_0": [[88, "t-most-30b-3-1-0"]], "t_most_30b_3_1_17": [[89, "t-most-30b-3-1-17"]], "t_most_3b_1_1_0": [[90, "t-most-3b-1-1-0"]], "t_most_3b_1_1_2": [[91, "t-most-3b-1-1-2"]], "t_most_3b_3_1_0": [[92, "t-most-3b-3-1-0"]], "t_most_3b_3_1_2": [[93, "t-most-3b-3-1-2"]], "t_most_fixed_res": [[94, "t-most-fixed-res"]], "t_most_mpopf": [[95, "t-most-mpopf"]], "t_most_sp": [[96, "t-most-sp"]], "t_most_spuc": [[97, "t-most-spuc"]], "t_most_suc": [[98, "t-most-suc"]], "t_most_tlmp": [[99, "t-most-tlmp"]], "t_most_uc": [[100, "t-most-uc"]], "t_most_w_ds": [[101, "t-most-w-ds"]], "test_most": [[102, "test-most"]], "uniformwindprofile": [[103, "uniformwindprofile"]], "mp_idx_manager": [[106, "mp-idx-manager"]], "opt_model": [[107, "opt-model"]], "convert_lin_constraint": [[108, "convert-lin-constraint"]], "convert_lin_constraint_multipliers": [[109, "convert-lin-constraint-multipliers"]], "cplex_options": [[110, "cplex-options"]], "glpk_options": [[111, "glpk-options"]], "gurobi_options": [[112, "gurobi-options"]], "gurobiver": [[113, "gurobiver"]], "have_feature_bpmpd": [[114, "have-feature-bpmpd"]], "have_feature_catchme": [[115, "have-feature-catchme"]], "have_feature_clp": [[116, "have-feature-clp"]], "have_feature_cplex": [[117, "have-feature-cplex"]], "have_feature_evalc": [[118, "have-feature-evalc"]], "have_feature_fmincon": [[119, "have-feature-fmincon"]], "have_feature_fmincon_ipm": [[120, "have-feature-fmincon-ipm"]], "have_feature_fsolve": [[121, "have-feature-fsolve"]], "have_feature_glpk": [[122, "have-feature-glpk"]], "have_feature_gurobi": [[123, "have-feature-gurobi"]], "have_feature_intlinprog": [[124, "have-feature-intlinprog"]], "have_feature_ipopt": [[125, "have-feature-ipopt"]], "have_feature_ipopt_auxdata": [[126, "have-feature-ipopt-auxdata"]], "have_feature_isequaln": [[127, "have-feature-isequaln"]], "have_feature_knitro": [[128, "have-feature-knitro"]], "have_feature_knitromatlab": [[129, "have-feature-knitromatlab"]], "have_feature_ktrlink": [[130, "have-feature-ktrlink"]], "have_feature_linprog": [[131, "have-feature-linprog"]], "have_feature_linprog_ds": [[132, "have-feature-linprog-ds"]], "have_feature_mosek": [[133, "have-feature-mosek"]], "have_feature_opti_clp": [[134, "have-feature-opti-clp"]], "have_feature_optim": [[135, "have-feature-optim"]], "have_feature_optimoptions": [[136, "have-feature-optimoptions"]], "have_feature_osqp": [[137, "have-feature-osqp"]], "have_feature_quadprog": [[138, "have-feature-quadprog"]], "have_feature_quadprog_ls": [[139, "have-feature-quadprog-ls"]], "have_feature_sdpt3": [[140, "have-feature-sdpt3"]], "have_feature_sedumi": [[141, "have-feature-sedumi"]], "have_feature_yalmip": [[142, "have-feature-yalmip"]], "ipopt_options": [[143, "ipopt-options"]], "miqps_cplex": [[144, "miqps-cplex"]], "miqps_glpk": [[145, "miqps-glpk"]], "miqps_gurobi": [[146, "miqps-gurobi"]], "miqps_master": [[147, "miqps-master"]], "miqps_mosek": [[148, "miqps-mosek"]], "miqps_ot": [[149, "miqps-ot"]], "mosek_options": [[150, "mosek-options"]], "mosek_symbcon": [[151, "mosek-symbcon"]], "mpomver": [[152, "mpomver"]], "mpopt2nleqopt": [[153, "mpopt2nleqopt"]], "mpopt2nlpopt": [[154, "mpopt2nlpopt"]], "mpopt2pneopt": [[155, "mpopt2pneopt"]], "mpopt2qpopt": [[156, "mpopt2qpopt"]], "nested_struct_copy": [[157, "nested-struct-copy"]], "nleqs_core": [[158, "nleqs-core"]], "nleqs_fd_newton": [[159, "nleqs-fd-newton"]], "nleqs_fsolve": [[160, "nleqs-fsolve"]], "nleqs_gauss_seidel": [[161, "nleqs-gauss-seidel"]], "nleqs_master": [[162, "nleqs-master"]], "nleqs_master_ex1": [[163, "nleqs-master-ex1"]], "nleqs_master_ex2": [[164, "nleqs-master-ex2"]], "nleqs_newton": [[165, "nleqs-newton"]], "nlp_consfcn": [[166, "nlp-consfcn"]], "nlp_costfcn": [[167, "nlp-costfcn"]], "nlp_hessfcn": [[168, "nlp-hessfcn"]], "nlps_fmincon": [[169, "nlps-fmincon"]], "nlps_ipopt": [[170, "nlps-ipopt"]], "nlps_knitro": [[171, "nlps-knitro"]], "nlps_master": [[172, "nlps-master"]], "nlps_master_ex1": [[173, "nlps-master-ex1"]], "nlps_master_ex2": [[174, "nlps-master-ex2"]], "osqp_options": [[175, "osqp-options"]], "osqpver": [[176, "osqpver"]], "pne_callback_default": [[177, "pne-callback-default"]], "pne_callback_nose": [[178, "pne-callback-nose"]], "pne_callback_target_lam": [[179, "pne-callback-target-lam"]], "pne_detect_events": [[180, "pne-detect-events"]], "pne_detected_event": [[181, "pne-detected-event"]], "pne_event_nose": [[182, "pne-event-nose"]], "pne_event_target_lam": [[183, "pne-event-target-lam"]], "pne_ex1": [[184, "pne-ex1"]], "pne_pfcn_arc_len": [[185, "pne-pfcn-arc-len"]], "pne_pfcn_natural": [[186, "pne-pfcn-natural"]], "pne_pfcn_pseudo_arc_len": [[187, "pne-pfcn-pseudo-arc-len"]], "pne_register_callbacks": [[188, "pne-register-callbacks"]], "pne_register_events": [[189, "pne-register-events"]], "pnes_master": [[190, "pnes-master"]], "qp_ex1": [[191, "qp-ex1"]], "qps_bpmpd": [[192, "qps-bpmpd"]], "qps_clp": [[193, "qps-clp"]], "qps_cplex": [[194, "qps-cplex"]], "qps_glpk": [[195, "qps-glpk"]], "qps_gurobi": [[196, "qps-gurobi"]], "qps_ipopt": [[197, "qps-ipopt"]], "qps_master": [[198, "qps-master"]], "qps_mosek": [[199, "qps-mosek"]], "qps_osqp": [[200, "qps-osqp"]], "qps_ot": [[201, "qps-ot"]], "t_miqps_master": [[202, "t-miqps-master"]], "t_nested_struct_copy": [[203, "t-nested-struct-copy"]], "t_nleqs_master": [[204, "t-nleqs-master"]], "t_nlps_master": [[205, "t-nlps-master"]], "t_om_solve_leqs": [[206, "t-om-solve-leqs"]], "t_om_solve_miqps": [[207, "t-om-solve-miqps"]], "t_om_solve_nleqs": [[208, "t-om-solve-nleqs"]], "t_om_solve_nlps": [[209, "t-om-solve-nlps"]], "t_om_solve_pne": [[210, "t-om-solve-pne"]], "t_om_solve_qps": [[211, "t-om-solve-qps"]], "t_opt_model": [[212, "t-opt-model"]], "t_pnes_master": [[213, "t-pnes-master"]], "t_qps_master": [[214, "t-qps-master"]], "test_mp_opt_model": [[215, "test-mp-opt-model"]], "have_feature": [[218, "have-feature"]], "have_feature_matlab": [[219, "have-feature-matlab"]], "have_feature_octave": [[220, "have-feature-octave"]], "mptestver": [[221, "mptestver"]], "t_begin": [[222, "t-begin"]], "t_end": [[223, "t-end"]], "t_file_match": [[224, "t-file-match"]], "t_have_feature": [[225, "t-have-feature"]], "t_is": [[226, "t-is"]], "t_ok": [[227, "t-ok"]], "t_run_tests": [[228, "t-run-tests"]], "t_skip": [[229, "t-skip"]], "t_str_match": [[230, "t-str-match"]], "t_test_fcns": [[231, "t-test-fcns"]], "test_mptest": [[232, "test-mptest"]], "mp.NODE_TYPE": [[236, "mp-node-type"]], "mp.cost_table": [[237, "mp-cost-table"]], "mp.cost_table_utils": [[238, "mp-cost-table-utils"]], "mp.data_model": [[239, "mp-data-model"]], "mp.data_model_cpf": [[240, "mp-data-model-cpf"]], "mp.data_model_opf": [[241, "mp-data-model-opf"]], "mp.dm_converter": [[242, "mp-dm-converter"]], "mp.dm_converter_mpc2": [[243, "mp-dm-converter-mpc2"]], "mp.dm_converter_mpc2_legacy": [[244, "mp-dm-converter-mpc2-legacy"]], "mp.dm_element": [[245, "mp-dm-element"]], "mp.dmc_element": [[246, "mp-dmc-element"]], "mp.dmce_branch_mpc2": [[247, "mp-dmce-branch-mpc2"]], "mp.dmce_bus3p_mpc2": [[248, "mp-dmce-bus3p-mpc2"]], "mp.dmce_bus_mpc2": [[249, "mp-dmce-bus-mpc2"]], "mp.dmce_buslink_mpc2": [[250, "mp-dmce-buslink-mpc2"]], "mp.dmce_gen3p_mpc2": [[251, "mp-dmce-gen3p-mpc2"]], "mp.dmce_gen_mpc2": [[252, "mp-dmce-gen-mpc2"]], "mp.dmce_legacy_dcline_mpc2": [[253, "mp-dmce-legacy-dcline-mpc2"]], "mp.dmce_line3p_mpc2": [[254, "mp-dmce-line3p-mpc2"]], "mp.dmce_load3p_mpc2": [[255, "mp-dmce-load3p-mpc2"]], "mp.dmce_load_mpc2": [[256, "mp-dmce-load-mpc2"]], "mp.dmce_reserve_gen_mpc2": [[257, "mp-dmce-reserve-gen-mpc2"]], "mp.dmce_reserve_zone_mpc2": [[258, "mp-dmce-reserve-zone-mpc2"]], "mp.dmce_shunt_mpc2": [[259, "mp-dmce-shunt-mpc2"]], "mp.dmce_xfmr3p_mpc2": [[260, "mp-dmce-xfmr3p-mpc2"]], "mp.dme_branch": [[261, "mp-dme-branch"]], "mp.dme_branch_opf": [[262, "mp-dme-branch-opf"]], "mp.dme_bus": [[263, "mp-dme-bus"]], "mp.dme_bus3p": [[264, "mp-dme-bus3p"]], "mp.dme_bus3p_opf": [[265, "mp-dme-bus3p-opf"]], "mp.dme_bus_opf": [[266, "mp-dme-bus-opf"]], "mp.dme_buslink": [[267, "mp-dme-buslink"]], "mp.dme_buslink_opf": [[268, "mp-dme-buslink-opf"]], "mp.dme_gen": [[269, "mp-dme-gen"]], "mp.dme_gen3p": [[270, "mp-dme-gen3p"]], "mp.dme_gen3p_opf": [[271, "mp-dme-gen3p-opf"]], "mp.dme_gen_opf": [[272, "mp-dme-gen-opf"]], "mp.dme_legacy_dcline": [[273, "mp-dme-legacy-dcline"]], "mp.dme_legacy_dcline_opf": [[274, "mp-dme-legacy-dcline-opf"]], "mp.dme_line3p": [[275, "mp-dme-line3p"]], "mp.dme_line3p_opf": [[276, "mp-dme-line3p-opf"]], "mp.dme_load": [[277, "mp-dme-load"]], "mp.dme_load3p": [[278, "mp-dme-load3p"]], "mp.dme_load3p_opf": [[279, "mp-dme-load3p-opf"]], "mp.dme_load_cpf": [[280, "mp-dme-load-cpf"]], "mp.dme_load_opf": [[281, "mp-dme-load-opf"]], "mp.dme_reserve_gen": [[282, "mp-dme-reserve-gen"]], "mp.dme_reserve_zone": [[283, "mp-dme-reserve-zone"]], "mp.dme_shared_opf": [[284, "mp-dme-shared-opf"]], "mp.dme_shunt": [[285, "mp-dme-shunt"]], "mp.dme_shunt_cpf": [[286, "mp-dme-shunt-cpf"]], "mp.dme_shunt_opf": [[287, "mp-dme-shunt-opf"]], "mp.dme_xfmr3p": [[288, "mp-dme-xfmr3p"]], "mp.dme_xfmr3p_opf": [[289, "mp-dme-xfmr3p-opf"]], "mp.element_container": [[290, "mp-element-container"]], "mp.extension": [[291, "mp-extension"]], "mp.form": [[292, "mp-form"]], "mp.form_ac": [[293, "mp-form-ac"]], "mp.form_acc": [[294, "mp-form-acc"]], "mp.form_acp": [[295, "mp-form-acp"]], "mp.form_dc": [[296, "mp-form-dc"]], "mp.mapped_array": [[297, "mp-mapped-array"]], "mp.math_model": [[298, "mp-math-model"]], "mp.math_model_cpf_acc": [[299, "mp-math-model-cpf-acc"]], "mp.math_model_cpf_acci": [[300, "mp-math-model-cpf-acci"]], "mp.math_model_cpf_accs": [[301, "mp-math-model-cpf-accs"]], "mp.math_model_cpf_acp": [[302, "mp-math-model-cpf-acp"]], "mp.math_model_cpf_acpi": [[303, "mp-math-model-cpf-acpi"]], "mp.math_model_cpf_acps": [[304, "mp-math-model-cpf-acps"]], "mp.math_model_opf": [[305, "mp-math-model-opf"]], "mp.math_model_opf_ac": [[306, "mp-math-model-opf-ac"]], "mp.math_model_opf_acc": [[307, "mp-math-model-opf-acc"]], "mp.math_model_opf_acci": [[308, "mp-math-model-opf-acci"]], "mp.math_model_opf_acci_legacy": [[309, "mp-math-model-opf-acci-legacy"]], "mp.math_model_opf_accs": [[310, "mp-math-model-opf-accs"]], "mp.math_model_opf_accs_legacy": [[311, "mp-math-model-opf-accs-legacy"]], "mp.math_model_opf_acp": [[312, "mp-math-model-opf-acp"]], "mp.math_model_opf_acpi": [[313, "mp-math-model-opf-acpi"]], "mp.math_model_opf_acpi_legacy": [[314, "mp-math-model-opf-acpi-legacy"]], "mp.math_model_opf_acps": [[315, "mp-math-model-opf-acps"]], "mp.math_model_opf_acps_legacy": [[316, "mp-math-model-opf-acps-legacy"]], "mp.math_model_opf_dc": [[317, "mp-math-model-opf-dc"]], "mp.math_model_opf_dc_legacy": [[318, "mp-math-model-opf-dc-legacy"]], "mp.math_model_pf": [[319, "mp-math-model-pf"]], "mp.math_model_pf_ac": [[320, "mp-math-model-pf-ac"]], "mp.math_model_pf_acci": [[321, "mp-math-model-pf-acci"]], "mp.math_model_pf_accs": [[322, "mp-math-model-pf-accs"]], "mp.math_model_pf_acpi": [[323, "mp-math-model-pf-acpi"]], "mp.math_model_pf_acps": [[324, "mp-math-model-pf-acps"]], "mp.math_model_pf_dc": [[325, "mp-math-model-pf-dc"]], "mp.mm_element": [[326, "mp-mm-element"]], "mp.mm_shared_opf_legacy": [[327, "mp-mm-shared-opf-legacy"]], "mp.mm_shared_pfcpf": [[328, "mp-mm-shared-pfcpf"]], "mp.mm_shared_pfcpf_ac": [[329, "mp-mm-shared-pfcpf-ac"]], "mp.mm_shared_pfcpf_ac_i": [[330, "mp-mm-shared-pfcpf-ac-i"]], "mp.mm_shared_pfcpf_acc": [[331, "mp-mm-shared-pfcpf-acc"]], "mp.mm_shared_pfcpf_acci": [[332, "mp-mm-shared-pfcpf-acci"]], "mp.mm_shared_pfcpf_accs": [[333, "mp-mm-shared-pfcpf-accs"]], "mp.mm_shared_pfcpf_acp": [[334, "mp-mm-shared-pfcpf-acp"]], "mp.mm_shared_pfcpf_acpi": [[335, "mp-mm-shared-pfcpf-acpi"]], "mp.mm_shared_pfcpf_acps": [[336, "mp-mm-shared-pfcpf-acps"]], "mp.mm_shared_pfcpf_dc": [[337, "mp-mm-shared-pfcpf-dc"]], "mp.mme_branch": [[338, "mp-mme-branch"]], "mp.mme_branch_opf": [[339, "mp-mme-branch-opf"]], "mp.mme_branch_opf_ac": [[340, "mp-mme-branch-opf-ac"]], "mp.mme_branch_opf_acc": [[341, "mp-mme-branch-opf-acc"]], "mp.mme_branch_opf_acp": [[342, "mp-mme-branch-opf-acp"]], "mp.mme_branch_opf_dc": [[343, "mp-mme-branch-opf-dc"]], "mp.mme_branch_pf_ac": [[344, "mp-mme-branch-pf-ac"]], "mp.mme_branch_pf_dc": [[345, "mp-mme-branch-pf-dc"]], "mp.mme_bus": [[346, "mp-mme-bus"]], "mp.mme_bus3p": [[347, "mp-mme-bus3p"]], "mp.mme_bus3p_opf_acc": [[348, "mp-mme-bus3p-opf-acc"]], "mp.mme_bus3p_opf_acp": [[349, "mp-mme-bus3p-opf-acp"]], "mp.mme_bus_opf_ac": [[350, "mp-mme-bus-opf-ac"]], "mp.mme_bus_opf_acc": [[351, "mp-mme-bus-opf-acc"]], "mp.mme_bus_opf_acp": [[352, "mp-mme-bus-opf-acp"]], "mp.mme_bus_opf_dc": [[353, "mp-mme-bus-opf-dc"]], "mp.mme_bus_pf_ac": [[354, "mp-mme-bus-pf-ac"]], "mp.mme_bus_pf_dc": [[355, "mp-mme-bus-pf-dc"]], "mp.mme_buslink": [[356, "mp-mme-buslink"]], "mp.mme_buslink_opf": [[357, "mp-mme-buslink-opf"]], "mp.mme_buslink_opf_acc": [[358, "mp-mme-buslink-opf-acc"]], "mp.mme_buslink_opf_acp": [[359, "mp-mme-buslink-opf-acp"]], "mp.mme_buslink_pf_ac": [[360, "mp-mme-buslink-pf-ac"]], "mp.mme_buslink_pf_acc": [[361, "mp-mme-buslink-pf-acc"]], "mp.mme_buslink_pf_acp": [[362, "mp-mme-buslink-pf-acp"]], "mp.mme_gen": [[363, "mp-mme-gen"]], "mp.mme_gen3p": [[364, "mp-mme-gen3p"]], "mp.mme_gen3p_opf": [[365, "mp-mme-gen3p-opf"]], "mp.mme_gen_opf": [[366, "mp-mme-gen-opf"]], "mp.mme_gen_opf_ac": [[367, "mp-mme-gen-opf-ac"]], "mp.mme_gen_opf_ac_oval": [[368, "mp-mme-gen-opf-ac-oval"]], "mp.mme_gen_opf_dc": [[369, "mp-mme-gen-opf-dc"]], "mp.mme_gen_pf_ac": [[370, "mp-mme-gen-pf-ac"]], "mp.mme_gen_pf_dc": [[371, "mp-mme-gen-pf-dc"]], "mp.mme_legacy_dcline": [[372, "mp-mme-legacy-dcline"]], "mp.mme_legacy_dcline_opf": [[373, "mp-mme-legacy-dcline-opf"]], "mp.mme_legacy_dcline_opf_ac": [[374, "mp-mme-legacy-dcline-opf-ac"]], "mp.mme_legacy_dcline_opf_dc": [[375, "mp-mme-legacy-dcline-opf-dc"]], "mp.mme_legacy_dcline_pf_ac": [[376, "mp-mme-legacy-dcline-pf-ac"]], "mp.mme_legacy_dcline_pf_dc": [[377, "mp-mme-legacy-dcline-pf-dc"]], "mp.mme_line3p": [[378, "mp-mme-line3p"]], "mp.mme_line3p_opf": [[379, "mp-mme-line3p-opf"]], "mp.mme_load": [[380, "mp-mme-load"]], "mp.mme_load_cpf": [[381, "mp-mme-load-cpf"]], "mp.mme_load_pf_ac": [[382, "mp-mme-load-pf-ac"]], "mp.mme_load_pf_dc": [[383, "mp-mme-load-pf-dc"]], "mp.mme_reserve_gen": [[384, "mp-mme-reserve-gen"]], "mp.mme_reserve_zone": [[385, "mp-mme-reserve-zone"]], "mp.mme_shunt": [[386, "mp-mme-shunt"]], "mp.mme_shunt_cpf": [[387, "mp-mme-shunt-cpf"]], "mp.mme_shunt_pf_ac": [[388, "mp-mme-shunt-pf-ac"]], "mp.mme_shunt_pf_dc": [[389, "mp-mme-shunt-pf-dc"]], "mp.mme_xfmr3p": [[390, "mp-mme-xfmr3p"]], "mp.mme_xfmr3p_opf": [[391, "mp-mme-xfmr3p-opf"]], "mp.net_model": [[392, "mp-net-model"]], "mp.net_model_ac": [[393, "mp-net-model-ac"]], "mp.net_model_acc": [[394, "mp-net-model-acc"]], "mp.net_model_acp": [[395, "mp-net-model-acp"]], "mp.net_model_dc": [[396, "mp-net-model-dc"]], "mp.nm_element": [[397, "mp-nm-element"]], "mp.nme_branch": [[398, "mp-nme-branch"]], "mp.nme_branch_ac": [[399, "mp-nme-branch-ac"]], "mp.nme_branch_acc": [[400, "mp-nme-branch-acc"]], "mp.nme_branch_acp": [[401, "mp-nme-branch-acp"]], "mp.nme_branch_dc": [[402, "mp-nme-branch-dc"]], "mp.nme_bus": [[403, "mp-nme-bus"]], "mp.nme_bus3p": [[404, "mp-nme-bus3p"]], "mp.nme_bus3p_acc": [[405, "mp-nme-bus3p-acc"]], "mp.nme_bus3p_acp": [[406, "mp-nme-bus3p-acp"]], "mp.nme_bus_acc": [[407, "mp-nme-bus-acc"]], "mp.nme_bus_acp": [[408, "mp-nme-bus-acp"]], "mp.nme_bus_dc": [[409, "mp-nme-bus-dc"]], "mp.nme_buslink": [[410, "mp-nme-buslink"]], "mp.nme_buslink_acc": [[411, "mp-nme-buslink-acc"]], "mp.nme_buslink_acp": [[412, "mp-nme-buslink-acp"]], "mp.nme_gen": [[413, "mp-nme-gen"]], "mp.nme_gen3p": [[414, "mp-nme-gen3p"]], "mp.nme_gen3p_acc": [[415, "mp-nme-gen3p-acc"]], "mp.nme_gen3p_acp": [[416, "mp-nme-gen3p-acp"]], "mp.nme_gen_ac": [[417, "mp-nme-gen-ac"]], "mp.nme_gen_acc": [[418, "mp-nme-gen-acc"]], "mp.nme_gen_acp": [[419, "mp-nme-gen-acp"]], "mp.nme_gen_dc": [[420, "mp-nme-gen-dc"]], "mp.nme_legacy_dcline": [[421, "mp-nme-legacy-dcline"]], "mp.nme_legacy_dcline_ac": [[422, "mp-nme-legacy-dcline-ac"]], "mp.nme_legacy_dcline_acc": [[423, "mp-nme-legacy-dcline-acc"]], "mp.nme_legacy_dcline_acp": [[424, "mp-nme-legacy-dcline-acp"]], "mp.nme_legacy_dcline_dc": [[425, "mp-nme-legacy-dcline-dc"]], "mp.nme_line3p": [[426, "mp-nme-line3p"]], "mp.nme_load": [[427, "mp-nme-load"]], "mp.nme_load3p": [[428, "mp-nme-load3p"]], "mp.nme_load_ac": [[429, "mp-nme-load-ac"]], "mp.nme_load_acc": [[430, "mp-nme-load-acc"]], "mp.nme_load_acp": [[431, "mp-nme-load-acp"]], "mp.nme_load_dc": [[432, "mp-nme-load-dc"]], "mp.nme_shunt": [[433, "mp-nme-shunt"]], "mp.nme_shunt_ac": [[434, "mp-nme-shunt-ac"]], "mp.nme_shunt_acc": [[435, "mp-nme-shunt-acc"]], "mp.nme_shunt_acp": [[436, "mp-nme-shunt-acp"]], "mp.nme_shunt_dc": [[437, "mp-nme-shunt-dc"]], "mp.nme_xfmr3p": [[438, "mp-nme-xfmr3p"]], "mp.task": [[439, "mp-task"]], "mp.task_cpf": [[440, "mp-task-cpf"]], "mp.task_cpf_legacy": [[441, "mp-task-cpf-legacy"]], "mp.task_opf": [[442, "mp-task-opf"]], "mp.task_opf_legacy": [[443, "mp-task-opf-legacy"]], "mp.task_pf": [[444, "mp-task-pf"]], "mp.task_pf_legacy": [[445, "mp-task-pf-legacy"]], "mp.task_shared_legacy": [[446, "mp-task-shared-legacy"]], "mp.xt_3p": [[447, "mp-xt-3p"]], "mp.xt_legacy_dcline": [[448, "mp-xt-legacy-dcline"]], "mp.xt_oval_cap_curve": [[449, "mp-xt-oval-cap-curve"]], "mp.xt_reserves": [[450, "mp-xt-reserves"]], "mp_table": [[451, "mp-table"]], "mp_table_subclass": [[452, "mp-table-subclass"]], "Limitations": [[452, null]], "install_matpower": [[454, "install-matpower"]], "mp_table_class": [[455, "mp-table-class"]], "run_cpf": [[456, "run-cpf"]], "run_mp": [[457, "run-mp"]], "run_opf": [[458, "run-opf"]], "run_pf": [[459, "run-pf"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Reference Manual": [[460, "matpower-reference-manual"]], "opf_model": [[462, "opf-model"]], "add_userfcn": [[463, "add-userfcn"]], "apply_changes": [[464, "apply-changes"]], "bustypes": [[465, "bustypes"]], "calc_branch_angle": [[466, "calc-branch-angle"]], "calc_v_i_sum": [[467, "calc-v-i-sum"]], "calc_v_pq_sum": [[468, "calc-v-pq-sum"]], "calc_v_y_sum": [[469, "calc-v-y-sum"]], "case_info": [[470, "case-info"]], "caseformat": [[471, "caseformat"]], "cdf2mpc": [[472, "cdf2mpc"]], "compare_case": [[473, "compare-case"]], "connected_components": [[474, "connected-components"]], "cpf_corrector": [[475, "cpf-corrector"]], "cpf_current_mpc": [[476, "cpf-current-mpc"]], "cpf_default_callback": [[477, "cpf-default-callback"]], "cpf_detect_events": [[478, "cpf-detect-events"]], "cpf_flim_event": [[479, "cpf-flim-event"]], "cpf_flim_event_cb": [[480, "cpf-flim-event-cb"]], "cpf_nose_event": [[481, "cpf-nose-event"]], "cpf_nose_event_cb": [[482, "cpf-nose-event-cb"]], "cpf_p": [[483, "cpf-p"]], "cpf_p_jac": [[484, "cpf-p-jac"]], "cpf_plim_event": [[485, "cpf-plim-event"]], "cpf_plim_event_cb": [[486, "cpf-plim-event-cb"]], "cpf_predictor": [[487, "cpf-predictor"]], "cpf_qlim_event": [[488, "cpf-qlim-event"]], "cpf_qlim_event_cb": [[489, "cpf-qlim-event-cb"]], "cpf_register_callback": [[490, "cpf-register-callback"]], "cpf_register_event": [[491, "cpf-register-event"]], "cpf_tangent": [[492, "cpf-tangent"]], "cpf_target_lam_event": [[493, "cpf-target-lam-event"]], "cpf_target_lam_event_cb": [[494, "cpf-target-lam-event-cb"]], "cpf_vlim_event": [[495, "cpf-vlim-event"]], "cpf_vlim_event_cb": [[496, "cpf-vlim-event-cb"]], "d2Abr_dV2": [[497, "d2abr-dv2"]], "d2Ibr_dV2": [[498, "d2ibr-dv2"]], "d2Imis_dV2": [[499, "d2imis-dv2"]], "d2Imis_dVdSg": [[500, "d2imis-dvdsg"]], "d2Sbr_dV2": [[501, "d2sbr-dv2"]], "d2Sbus_dV2": [[502, "d2sbus-dv2"]], "dAbr_dV": [[503, "dabr-dv"]], "dIbr_dV": [[504, "dibr-dv"]], "dImis_dV": [[505, "dimis-dv"]], "dSbr_dV": [[506, "dsbr-dv"]], "dSbus_dV": [[507, "dsbus-dv"]], "dcopf": [[508, "dcopf"]], "dcopf_solver": [[509, "dcopf-solver"]], "dcpf": [[510, "dcpf"]], "define_constants": [[511, "define-constants"]], "e2i_data": [[512, "e2i-data"]], "e2i_field": [[513, "e2i-field"]], "ext2int": [[514, "ext2int"]], "extract_islands": [[515, "extract-islands"]], "fdpf": [[516, "fdpf"]], "feval_w_path": [[517, "feval-w-path"]], "find_bridges": [[518, "find-bridges"]], "find_islands": [[519, "find-islands"]], "fmincopf": [[520, "fmincopf"]], "gausspf": [[521, "gausspf"]], "genfuels": [[522, "genfuels"]], "gentypes": [[523, "gentypes"]], "get_losses": [[524, "get-losses"]], "get_reorder": [[525, "get-reorder"]], "hasPQcap": [[526, "haspqcap"]], "have_feature_e4st": [[527, "have-feature-e4st"]], "have_feature_minopf": [[528, "have-feature-minopf"]], "have_feature_most": [[529, "have-feature-most"]], "have_feature_mp_core": [[530, "have-feature-mp-core"]], "have_feature_pdipmopf": [[531, "have-feature-pdipmopf"]], "have_feature_regexp_split": [[532, "have-feature-regexp-split"]], "have_feature_scpdipmopf": [[533, "have-feature-scpdipmopf"]], "have_feature_sdp_pf": [[534, "have-feature-sdp-pf"]], "have_feature_smartmarket": [[535, "have-feature-smartmarket"]], "have_feature_syngrid": [[536, "have-feature-syngrid"]], "have_feature_table": [[537, "have-feature-table"]], "have_feature_tralmopf": [[538, "have-feature-tralmopf"]], "i2e_data": [[539, "i2e-data"]], "i2e_field": [[540, "i2e-field"]], "idx_brch": [[541, "idx-brch"]], "idx_bus": [[542, "idx-bus"]], "idx_cost": [[543, "idx-cost"]], "idx_ct": [[544, "idx-ct"]], "idx_dcline": [[545, "idx-dcline"]], "idx_gen": [[546, "idx-gen"]], "int2ext": [[547, "int2ext"]], "isload": [[548, "isload"]], "load2disp": [[549, "load2disp"]], "loadcase": [[550, "loadcase"]], "loadshed": [[551, "loadshed"]], "makeAang": [[552, "makeaang"]], "makeApq": [[553, "makeapq"]], "makeAvl": [[554, "makeavl"]], "makeAy": [[555, "makeay"]], "makeB": [[556, "makeb"]], "makeBdc": [[557, "makebdc"]], "makeJac": [[558, "makejac"]], "makeLODF": [[559, "makelodf"]], "makePTDF": [[560, "makeptdf"]], "makeSbus": [[561, "makesbus"]], "makeSdzip": [[562, "makesdzip"]], "makeYbus": [[563, "makeybus"]], "make_vcorr": [[564, "make-vcorr"]], "make_zpv": [[565, "make-zpv"]], "margcost": [[566, "margcost"]], "miqps_matpower": [[567, "miqps-matpower"]], "modcost": [[568, "modcost"]], "mpoption": [[569, "mpoption"]], "mpoption_info_clp": [[570, "mpoption-info-clp"]], "mpoption_info_cplex": [[571, "mpoption-info-cplex"]], "mpoption_info_fmincon": [[572, "mpoption-info-fmincon"]], "mpoption_info_glpk": [[573, "mpoption-info-glpk"]], "mpoption_info_gurobi": [[574, "mpoption-info-gurobi"]], "mpoption_info_intlinprog": [[575, "mpoption-info-intlinprog"]], "mpoption_info_ipopt": [[576, "mpoption-info-ipopt"]], "mpoption_info_knitro": [[577, "mpoption-info-knitro"]], "mpoption_info_linprog": [[578, "mpoption-info-linprog"]], "mpoption_info_mips": [[579, "mpoption-info-mips"]], "mpoption_info_mosek": [[580, "mpoption-info-mosek"]], "mpoption_info_osqp": [[581, "mpoption-info-osqp"]], "mpoption_info_quadprog": [[582, "mpoption-info-quadprog"]], "mpoption_old": [[583, "mpoption-old"]], "mpver": [[584, "mpver"]], "newtonpf": [[585, "newtonpf"]], "newtonpf_I_cart": [[586, "newtonpf-i-cart"]], "newtonpf_I_hybrid": [[587, "newtonpf-i-hybrid"]], "newtonpf_I_polar": [[588, "newtonpf-i-polar"]], "newtonpf_S_cart": [[589, "newtonpf-s-cart"]], "newtonpf_S_hybrid": [[590, "newtonpf-s-hybrid"]], "nlpopf_solver": [[591, "nlpopf-solver"]], "opf": [[592, "opf"]], "opf_args": [[593, "opf-args"]], "opf_branch_ang_fcn": [[594, "opf-branch-ang-fcn"]], "opf_branch_ang_hess": [[595, "opf-branch-ang-hess"]], "opf_branch_flow_fcn": [[596, "opf-branch-flow-fcn"]], "opf_branch_flow_hess": [[597, "opf-branch-flow-hess"]], "opf_current_balance_fcn": [[598, "opf-current-balance-fcn"]], "opf_current_balance_hess": [[599, "opf-current-balance-hess"]], "opf_execute": [[600, "opf-execute"]], "opf_gen_cost_fcn": [[601, "opf-gen-cost-fcn"]], "opf_legacy_user_cost_fcn": [[602, "opf-legacy-user-cost-fcn"]], "opf_nle_fcn1": [[603, "opf-nle-fcn1"]], "opf_nle_hess1": [[604, "opf-nle-hess1"]], "opf_power_balance_fcn": [[605, "opf-power-balance-fcn"]], "opf_power_balance_hess": [[606, "opf-power-balance-hess"]], "opf_setup": [[607, "opf-setup"]], "opf_veq_fcn": [[608, "opf-veq-fcn"]], "opf_veq_hess": [[609, "opf-veq-hess"]], "opf_vlim_fcn": [[610, "opf-vlim-fcn"]], "opf_vlim_hess": [[611, "opf-vlim-hess"]], "opf_vref_fcn": [[612, "opf-vref-fcn"]], "opf_vref_hess": [[613, "opf-vref-hess"]], "order_radial": [[614, "order-radial"]], "pfsoln": [[615, "pfsoln"]], "poly2pwl": [[616, "poly2pwl"]], "polycost": [[617, "polycost"]], "pqcost": [[618, "pqcost"]], "printpf": [[619, "printpf"]], "psse2mpc": [[620, "psse2mpc"]], "psse_convert": [[621, "psse-convert"]], "psse_convert_hvdc": [[622, "psse-convert-hvdc"]], "psse_convert_xfmr": [[623, "psse-convert-xfmr"]], "psse_parse": [[624, "psse-parse"]], "psse_parse_line": [[625, "psse-parse-line"]], "psse_parse_section": [[626, "psse-parse-section"]], "psse_read": [[627, "psse-read"]], "qps_matpower": [[628, "qps-matpower"]], "radial_pf": [[629, "radial-pf"]], "remove_userfcn": [[630, "remove-userfcn"]], "run_userfcn": [[631, "run-userfcn"]], "runcpf": [[632, "runcpf"]], "rundcopf": [[633, "rundcopf"]], "rundcpf": [[634, "rundcpf"]], "runduopf": [[635, "runduopf"]], "runopf": [[636, "runopf"]], "runopf_w_res": [[637, "runopf-w-res"]], "runpf": [[638, "runpf"]], "runuopf": [[639, "runuopf"]], "save2psse": [[640, "save2psse"]], "savecase": [[641, "savecase"]], "savechgtab": [[642, "savechgtab"]], "scale_load": [[643, "scale-load"]], "set_reorder": [[644, "set-reorder"]], "t_apply_changes": [[645, "t-apply-changes"]], "t_auction_case": [[646, "t-auction-case"]], "t_auction_minopf": [[647, "t-auction-minopf"]], "t_auction_mips": [[648, "t-auction-mips"]], "t_auction_tspopf_pdipm": [[649, "t-auction-tspopf-pdipm"]], "t_case30_userfcns": [[650, "t-case30-userfcns"]], "t_case9_dcline": [[651, "t-case9-dcline"]], "t_case9_opf": [[652, "t-case9-opf"]], "t_case9_opfv2": [[653, "t-case9-opfv2"]], "t_case9_pf": [[654, "t-case9-pf"]], "t_case9_pfv2": [[655, "t-case9-pfv2"]], "t_case9_save2psse": [[656, "t-case9-save2psse"]], "t_case_ext": [[657, "t-case-ext"]], "t_case_int": [[658, "t-case-int"]], "t_chgtab": [[659, "t-chgtab"]], "t_cpf": [[660, "t-cpf"]], "t_cpf_cb1": [[661, "t-cpf-cb1"]], "t_cpf_cb2": [[662, "t-cpf-cb2"]], "t_dcline": [[663, "t-dcline"]], "t_ext2int2ext": [[664, "t-ext2int2ext"]], "t_feval_w_path": [[665, "t-feval-w-path"]], "t_get_losses": [[666, "t-get-losses"]], "t_hasPQcap": [[667, "t-haspqcap"]], "t_hessian": [[668, "t-hessian"]], "t_islands": [[669, "t-islands"]], "t_jacobian": [[670, "t-jacobian"]], "t_load2disp": [[671, "t-load2disp"]], "t_loadcase": [[672, "t-loadcase"]], "t_makeLODF": [[673, "t-makelodf"]], "t_makePTDF": [[674, "t-makeptdf"]], "t_margcost": [[675, "t-margcost"]], "t_miqps_matpower": [[676, "t-miqps-matpower"]], "t_modcost": [[677, "t-modcost"]], "t_mpoption": [[678, "t-mpoption"]], "t_mpoption_ov": [[679, "t-mpoption-ov"]], "t_off2case": [[680, "t-off2case"]], "t_opf_dc_bpmpd": [[681, "t-opf-dc-bpmpd"]], "t_opf_dc_clp": [[682, "t-opf-dc-clp"]], "t_opf_dc_cplex": [[683, "t-opf-dc-cplex"]], "t_opf_dc_default": [[684, "t-opf-dc-default"]], "t_opf_dc_glpk": [[685, "t-opf-dc-glpk"]], "t_opf_dc_gurobi": [[686, "t-opf-dc-gurobi"]], "t_opf_dc_ipopt": [[687, "t-opf-dc-ipopt"]], "t_opf_dc_mips": [[688, "t-opf-dc-mips"]], "t_opf_dc_mips_sc": [[689, "t-opf-dc-mips-sc"]], "t_opf_dc_mosek": [[690, "t-opf-dc-mosek"]], "t_opf_dc_osqp": [[691, "t-opf-dc-osqp"]], "t_opf_dc_ot": [[692, "t-opf-dc-ot"]], "t_opf_default": [[693, "t-opf-default"]], "t_opf_fmincon": [[694, "t-opf-fmincon"]], "t_opf_ipopt": [[695, "t-opf-ipopt"]], "t_opf_knitro": [[696, "t-opf-knitro"]], "t_opf_minopf": [[697, "t-opf-minopf"]], "t_opf_mips": [[698, "t-opf-mips"]], "t_opf_model": [[699, "t-opf-model"]], "t_opf_softlims": [[700, "t-opf-softlims"]], "t_opf_tspopf_pdipm": [[701, "t-opf-tspopf-pdipm"]], "t_opf_tspopf_scpdipm": [[702, "t-opf-tspopf-scpdipm"]], "t_opf_tspopf_tralm": [[703, "t-opf-tspopf-tralm"]], "t_opf_userfcns": [[704, "t-opf-userfcns"]], "t_pf_ac": [[705, "t-pf-ac"]], "t_pf_dc": [[706, "t-pf-dc"]], "t_pf_radial": [[707, "t-pf-radial"]], "t_printpf": [[708, "t-printpf"]], "t_psse": [[709, "t-psse"]], "t_qps_matpower": [[710, "t-qps-matpower"]], "t_runmarket": [[711, "t-runmarket"]], "t_runopf_w_res": [[712, "t-runopf-w-res"]], "t_scale_load": [[713, "t-scale-load"]], "t_total_load": [[714, "t-total-load"]], "t_totcost": [[715, "t-totcost"]], "t_vdep_load": [[716, "t-vdep-load"]], "toggle_dcline": [[717, "toggle-dcline"]], "toggle_iflims": [[718, "toggle-iflims"]], "toggle_reserves": [[719, "toggle-reserves"]], "toggle_softlims": [[720, "toggle-softlims"]], "total_load": [[721, "total-load"]], "totcost": [[722, "totcost"]], "uopf": [[723, "uopf"]], "update_mupq": [[724, "update-mupq"]], "zgausspf": [[725, "zgausspf"]], "mp_foo_table": [[729, "mp-foo-table"]], "t_case3p_a": [[730, "t-case3p-a"]], "t_case3p_b": [[731, "t-case3p-b"]], "t_case3p_c": [[732, "t-case3p-c"]], "t_case3p_d": [[733, "t-case3p-d"]], "t_case3p_e": [[734, "t-case3p-e"]], "t_case3p_f": [[735, "t-case3p-f"]], "t_case3p_g": [[736, "t-case3p-g"]], "t_case3p_h": [[737, "t-case3p-h"]], "t_case9_gizmo": [[738, "t-case9-gizmo"]], "t_dmc_element": [[739, "t-dmc-element"]], "t_mp_data_model": [[740, "t-mp-data-model"]], "t_mp_dm_converter_mpc2": [[741, "t-mp-dm-converter-mpc2"]], "t_mp_mapped_array": [[742, "t-mp-mapped-array"]], "t_mp_table": [[743, "t-mp-table"]], "t_mpxt_legacy_dcline": [[744, "t-mpxt-legacy-dcline"]], "t_mpxt_reserves": [[745, "t-mpxt-reserves"]], "t_nm_element": [[746, "t-nm-element"]], "t_node_test": [[747, "t-node-test"]], "t_port_inj_current_acc": [[748, "t-port-inj-current-acc"]], "t_port_inj_current_acp": [[749, "t-port-inj-current-acp"]], "t_port_inj_power_acc": [[750, "t-port-inj-power-acc"]], "t_port_inj_power_acp": [[751, "t-port-inj-power-acp"]], "t_pretty_print": [[752, "t-pretty-print"]], "t_run_mp": [[753, "t-run-mp"]], "t_run_mp_3p": [[754, "t-run-mp-3p"]], "t_run_opf_default": [[755, "t-run-opf-default"]], "test_matpower": [[756, "test-matpower"]]}, "indexentries": {"generate_autodoc_stubs() (built-in function)": [[14, "generate_autodoc_stubs"]], "generate_matpower_autodoc() (built-in function)": [[15, "generate_matpower_autodoc"]], "generate_source_symlinks() (built-in function)": [[16, "generate_source_symlinks"]], "have_feature_lu_vec() (built-in function)": [[22, "have_feature_lu_vec"]], "have_feature_pardiso() (built-in function)": [[23, "have_feature_pardiso"]], "have_feature_pardiso_legacy() (built-in function)": [[24, "have_feature_pardiso_legacy"]], "have_feature_pardiso_object() (built-in function)": [[25, "have_feature_pardiso_object"]], "mips() (in module mips)": [[26, "mips.mips"]], "mips_example1() (built-in function)": [[27, "mips_example1"]], "mips_example2() (built-in function)": [[28, "mips_example2"]], "mipsver() (built-in function)": [[29, "mipsver"]], "mplinsolve() (built-in function)": [[30, "mplinsolve"]], "qps_mips() (built-in function)": [[31, "qps_mips"]], "t_mips() (built-in function)": [[32, "t_mips"]], "t_mips_pardiso() (built-in function)": [[33, "t_mips_pardiso"]], "t_mplinsolve() (built-in function)": [[34, "t_mplinsolve"]], "t_qps_mips() (built-in function)": [[35, "t_qps_mips"]], "test_mips() (built-in function)": [[36, "test_mips"]], "addgen2mpc() (built-in function)": [[39, "addgen2mpc"]], "addstorage() (built-in function)": [[40, "addstorage"]], "addwind() (built-in function)": [[41, "addwind"]], "apply_profile() (built-in function)": [[42, "apply_profile"]], "c118swf() (built-in function)": [[43, "c118swf"]], "ex_case3a() (built-in function)": [[44, "ex_case3a"]], "ex_case3b() (built-in function)": [[45, "ex_case3b"]], "ex_contab() (built-in function)": [[46, "ex_contab"]], "ex_load_profile() (built-in function)": [[47, "ex_load_profile"]], "ex_storage() (built-in function)": [[48, "ex_storage"]], "ex_transmat() (built-in function)": [[49, "ex_transmat"]], "ex_wind() (built-in function)": [[50, "ex_wind"]], "ex_wind_profile() (built-in function)": [[51, "ex_wind_profile"]], "ex_wind_profile_d() (built-in function)": [[52, "ex_wind_profile_d"]], "ex_wind_uc() (built-in function)": [[53, "ex_wind_uc"]], "ex_xgd() (built-in function)": [[54, "ex_xgd"]], "ex_xgd_ramp() (built-in function)": [[55, "ex_xgd_ramp"]], "ex_xgd_res() (built-in function)": [[56, "ex_xgd_res"]], "ex_xgd_uc() (built-in function)": [[57, "ex_xgd_uc"]], "filter_ramp_transitions() (built-in function)": [[58, "filter_ramp_transitions"]], "getprofiles() (built-in function)": [[59, "getprofiles"]], "idx_profile() (built-in function)": [[60, "idx_profile"]], "loadgenericdata() (built-in function)": [[61, "loadgenericdata"]], "loadmd() (built-in function)": [[62, "loadmd"]], "loadstoragedata() (built-in function)": [[63, "loadstoragedata"]], "loadxgendata() (built-in function)": [[64, "loadxgendata"]], "md_init() (built-in function)": [[65, "md_init"]], "most() (in module most)": [[66, "most.most"]], "most_ex1_ed() (built-in function)": [[67, "most_ex1_ed"]], "most_ex2_dcopf() (built-in function)": [[68, "most_ex2_dcopf"]], "most_ex3_dcopf_w_uc() (built-in function)": [[69, "most_ex3_dcopf_w_uc"]], "most_ex4_dcopf_ss() (built-in function)": [[70, "most_ex4_dcopf_ss"]], "most_ex5_mpopf() (built-in function)": [[71, "most_ex5_mpopf"]], "most_ex6_uc() (built-in function)": [[72, "most_ex6_uc"]], "most_ex7_suc() (built-in function)": [[73, "most_ex7_suc"]], "most_summary() (built-in function)": [[74, "most_summary"]], "mostver() (built-in function)": [[75, "mostver"]], "mpoption_info_most() (built-in function)": [[76, "mpoption_info_most"]], "plot_gen() (built-in function)": [[77, "plot_gen"]], "plot_storage() (built-in function)": [[78, "plot_storage"]], "plot_uc() (built-in function)": [[79, "plot_uc"]], "plot_uc_data() (built-in function)": [[80, "plot_uc_data"]], "t_case30_most() (built-in function)": [[81, "t_case30_most"]], "t_case3_most() (built-in function)": [[82, "t_case3_most"]], "t_case_tlmp() (built-in function)": [[83, "t_case_tlmp"]], "t_case_tlmp_storage() (built-in function)": [[84, "t_case_tlmp_storage"]], "t_most_30b_1_1_0() (built-in function)": [[85, "t_most_30b_1_1_0"]], "t_most_30b_1_1_0_uc() (built-in function)": [[86, "t_most_30b_1_1_0_uc"]], "t_most_30b_1_1_17() (built-in function)": [[87, "t_most_30b_1_1_17"]], "t_most_30b_3_1_0() (built-in function)": [[88, "t_most_30b_3_1_0"]], "t_most_30b_3_1_17() (built-in function)": [[89, "t_most_30b_3_1_17"]], "t_most_3b_1_1_0() (built-in function)": [[90, "t_most_3b_1_1_0"]], "t_most_3b_1_1_2() (built-in function)": [[91, "t_most_3b_1_1_2"]], "t_most_3b_3_1_0() (built-in function)": [[92, "t_most_3b_3_1_0"]], "t_most_3b_3_1_2() (built-in function)": [[93, "t_most_3b_3_1_2"]], "t_most_fixed_res() (built-in function)": [[94, "t_most_fixed_res"]], "t_most_mpopf() (built-in function)": [[95, "t_most_mpopf"]], "t_most_sp() (built-in function)": [[96, "t_most_sp"]], "t_most_spuc() (built-in function)": [[97, "t_most_spuc"]], "t_most_suc() (built-in function)": [[98, "t_most_suc"]], "t_most_tlmp() (built-in function)": [[99, "t_most_tlmp"]], "t_most_uc() (built-in function)": [[100, "t_most_uc"]], "t_most_w_ds() (built-in function)": [[101, "t_most_w_ds"]], "test_most() (built-in function)": [[102, "test_most"]], "uniformwindprofile() (built-in function)": [[103, "uniformwindprofile"]], "add_named_set() (mp_idx_manager method)": [[106, "mp_idx_manager.add_named_set"]], "copy() (mp_idx_manager method)": [[106, "mp_idx_manager.copy"]], "describe_idx() (mp_idx_manager method)": [[106, "mp_idx_manager.describe_idx"]], "display_set() (mp_idx_manager method)": [[106, "mp_idx_manager.display_set"]], "get() (mp_idx_manager method)": [[106, "mp_idx_manager.get"]], "getn() (mp_idx_manager method)": [[106, "mp_idx_manager.getN"]], "get_idx() (mp_idx_manager method)": [[106, "mp_idx_manager.get_idx"]], "get_userdata() (mp_idx_manager method)": [[106, "mp_idx_manager.get_userdata"]], "init_indexed_name() (mp_idx_manager method)": [[106, "mp_idx_manager.init_indexed_name"]], "init_set_types() (mp_idx_manager method)": [[106, "mp_idx_manager.init_set_types"]], "mp_idx_manager (built-in class)": [[106, "mp_idx_manager"]], "mp_idx_manager() (mp_idx_manager method)": [[106, "mp_idx_manager.mp_idx_manager"]], "set_type_idx_map() (mp_idx_manager method)": [[106, "mp_idx_manager.set_type_idx_map"]], "valid_named_set_type() (mp_idx_manager method)": [[106, "mp_idx_manager.valid_named_set_type"]], "add_lin_constraint() (opt_model method)": [[107, "opt_model.add_lin_constraint"]], "add_named_set() (opt_model method)": [[107, "opt_model.add_named_set"]], "add_nln_constraint() (opt_model method)": [[107, "opt_model.add_nln_constraint"]], "add_nln_cost() (opt_model method)": [[107, "opt_model.add_nln_cost"]], "add_quad_cost() (opt_model method)": [[107, "opt_model.add_quad_cost"]], "add_var() (opt_model method)": [[107, "opt_model.add_var"]], "def_set_types() (opt_model method)": [[107, "opt_model.def_set_types"]], "display() (opt_model method)": [[107, "opt_model.display"]], "display_soln() (opt_model method)": [[107, "opt_model.display_soln"]], "eval_lin_constraint() (opt_model method)": [[107, "opt_model.eval_lin_constraint"]], "eval_nln_constraint() (opt_model method)": [[107, "opt_model.eval_nln_constraint"]], "eval_nln_constraint_hess() (opt_model method)": [[107, "opt_model.eval_nln_constraint_hess"]], "eval_nln_cost() (opt_model method)": [[107, "opt_model.eval_nln_cost"]], "eval_quad_cost() (opt_model method)": [[107, "opt_model.eval_quad_cost"]], "get_idx() (opt_model method)": [[107, "opt_model.get_idx"]], "get_soln() (opt_model method)": [[107, "opt_model.get_soln"]], "has_parsed_soln() (opt_model method)": [[107, "opt_model.has_parsed_soln"]], "init_indexed_name() (opt_model method)": [[107, "opt_model.init_indexed_name"]], "init_set_types() (opt_model method)": [[107, "opt_model.init_set_types"]], "is_mixed_integer() (opt_model method)": [[107, "opt_model.is_mixed_integer"]], "is_solved() (opt_model method)": [[107, "opt_model.is_solved"]], "lin (opt_model attribute)": [[107, "opt_model.lin"]], "nlc (opt_model attribute)": [[107, "opt_model.nlc"]], "nle (opt_model attribute)": [[107, "opt_model.nle"]], "nli (opt_model attribute)": [[107, "opt_model.nli"]], "opt_model (built-in class)": [[107, "opt_model"]], "opt_model() (opt_model method)": [[107, "opt_model.opt_model"]], "params_lin_constraint() (opt_model method)": [[107, "opt_model.params_lin_constraint"]], "params_nln_constraint() (opt_model method)": [[107, "opt_model.params_nln_constraint"]], "params_nln_cost() (opt_model method)": [[107, "opt_model.params_nln_cost"]], "params_quad_cost() (opt_model method)": [[107, "opt_model.params_quad_cost"]], "params_var() (opt_model method)": [[107, "opt_model.params_var"]], "parse_soln() (opt_model method)": [[107, "opt_model.parse_soln"]], "prob_type (opt_model attribute)": [[107, "opt_model.prob_type"]], "problem_type() (opt_model method)": [[107, "opt_model.problem_type"]], "qdc (opt_model attribute)": [[107, "opt_model.qdc"]], "set_params() (opt_model method)": [[107, "opt_model.set_params"]], "soln (opt_model attribute)": [[107, "opt_model.soln"]], "solve() (opt_model method)": [[107, "opt_model.solve"]], "var (opt_model attribute)": [[107, "opt_model.var"]], "varsets_cell2struct() (opt_model method)": [[107, "opt_model.varsets_cell2struct"]], "varsets_idx() (opt_model method)": [[107, "opt_model.varsets_idx"]], "varsets_len() (opt_model method)": [[107, "opt_model.varsets_len"]], "varsets_x() (opt_model method)": [[107, "opt_model.varsets_x"]], "convert_lin_constraint() (built-in function)": [[108, "convert_lin_constraint"]], "convert_lin_constraint_multipliers() (built-in function)": [[109, "convert_lin_constraint_multipliers"]], "cplex_options() (built-in function)": [[110, "cplex_options"]], "glpk_options() (built-in function)": [[111, "glpk_options"]], "gurobi_options() (built-in function)": [[112, "gurobi_options"]], "gurobiver() (built-in function)": [[113, "gurobiver"]], "have_feature_bpmpd() (built-in function)": [[114, "have_feature_bpmpd"]], "have_feature_catchme() (built-in function)": [[115, "have_feature_catchme"]], "have_feature_clp() (built-in function)": [[116, "have_feature_clp"]], "have_feature_cplex() (built-in function)": [[117, "have_feature_cplex"]], "have_feature_evalc() (built-in function)": [[118, "have_feature_evalc"]], "have_feature_fmincon() (built-in function)": [[119, "have_feature_fmincon"]], "have_feature_fmincon_ipm() (built-in function)": [[120, "have_feature_fmincon_ipm"]], "have_feature_fsolve() (built-in function)": [[121, "have_feature_fsolve"]], "have_feature_glpk() (built-in function)": [[122, "have_feature_glpk"]], "have_feature_gurobi() (built-in function)": [[123, "have_feature_gurobi"]], "have_feature_intlinprog() (built-in function)": [[124, "have_feature_intlinprog"]], "have_feature_ipopt() (built-in function)": [[125, "have_feature_ipopt"]], "have_feature_ipopt_auxdata() (built-in function)": [[126, "have_feature_ipopt_auxdata"]], "have_feature_isequaln() (built-in function)": [[127, "have_feature_isequaln"]], "have_feature_knitro() (built-in function)": [[128, "have_feature_knitro"]], "have_feature_knitromatlab() (built-in function)": [[129, "have_feature_knitromatlab"]], "have_feature_ktrlink() (built-in function)": [[130, "have_feature_ktrlink"]], "have_feature_linprog() (built-in function)": [[131, "have_feature_linprog"]], "have_feature_linprog_ds() (built-in function)": [[132, "have_feature_linprog_ds"]], "have_feature_mosek() (built-in function)": [[133, "have_feature_mosek"]], "have_feature_opti_clp() (built-in function)": [[134, "have_feature_opti_clp"]], "have_feature_optim() (built-in function)": [[135, "have_feature_optim"]], "have_feature_optimoptions() (built-in function)": [[136, "have_feature_optimoptions"]], "have_feature_osqp() (built-in function)": [[137, "have_feature_osqp"]], "have_feature_quadprog() (built-in function)": [[138, "have_feature_quadprog"]], "have_feature_quadprog_ls() (built-in function)": [[139, "have_feature_quadprog_ls"]], "have_feature_sdpt3() (built-in function)": [[140, "have_feature_sdpt3"]], "have_feature_sedumi() (built-in function)": [[141, "have_feature_sedumi"]], "have_feature_yalmip() (built-in function)": [[142, "have_feature_yalmip"]], "ipopt_options() (built-in function)": [[143, "ipopt_options"]], "miqps_cplex() (built-in function)": [[144, "miqps_cplex"]], "miqps_glpk() (built-in function)": [[145, "miqps_glpk"]], "miqps_gurobi() (built-in function)": [[146, "miqps_gurobi"]], "miqps_master() (built-in function)": [[147, "miqps_master"]], "miqps_mosek() (built-in function)": [[148, "miqps_mosek"]], "miqps_ot() (built-in function)": [[149, "miqps_ot"]], "mosek_options() (built-in function)": [[150, "mosek_options"]], "mosek_symbcon() (built-in function)": [[151, "mosek_symbcon"]], "mpomver() (built-in function)": [[152, "mpomver"]], "mpopt2nleqopt() (built-in function)": [[153, "mpopt2nleqopt"]], "mpopt2nlpopt() (built-in function)": [[154, "mpopt2nlpopt"]], "mpopt2pneopt() (built-in function)": [[155, "mpopt2pneopt"]], "mpopt2qpopt() (built-in function)": [[156, "mpopt2qpopt"]], "nested_struct_copy() (built-in function)": [[157, "nested_struct_copy"]], "nleqs_core() (built-in function)": [[158, "nleqs_core"]], "nleqs_fd_newton() (built-in function)": [[159, "nleqs_fd_newton"]], "nleqs_fsolve() (built-in function)": [[160, "nleqs_fsolve"]], "nleqs_gauss_seidel() (built-in function)": [[161, "nleqs_gauss_seidel"]], "nleqs_master() (built-in function)": [[162, "nleqs_master"]], "nleqs_master_ex1() (built-in function)": [[163, "nleqs_master_ex1"]], "nleqs_master_ex2() (built-in function)": [[164, "nleqs_master_ex2"]], "nleqs_newton() (built-in function)": [[165, "nleqs_newton"]], "nlp_consfcn() (built-in function)": [[166, "nlp_consfcn"]], "nlp_costfcn() (built-in function)": [[167, "nlp_costfcn"]], "nlp_hessfcn() (built-in function)": [[168, "nlp_hessfcn"]], "nlps_fmincon() (built-in function)": [[169, "nlps_fmincon"]], "nlps_ipopt() (built-in function)": [[170, "nlps_ipopt"]], "nlps_knitro() (built-in function)": [[171, "nlps_knitro"]], "nlps_master() (built-in function)": [[172, "nlps_master"]], "nlps_master_ex1() (built-in function)": [[173, "nlps_master_ex1"]], "nlps_master_ex2() (built-in function)": [[174, "nlps_master_ex2"]], "osqp_options() (built-in function)": [[175, "osqp_options"]], "osqpver() (built-in function)": [[176, "osqpver"]], "pne_callback_default() (built-in function)": [[177, "pne_callback_default"]], "pne_callback_nose() (built-in function)": [[178, "pne_callback_nose"]], "pne_callback_target_lam() (built-in function)": [[179, "pne_callback_target_lam"]], "pne_detect_events() (built-in function)": [[180, "pne_detect_events"]], "pne_detected_event() (built-in function)": [[181, "pne_detected_event"]], "pne_event_nose() (built-in function)": [[182, "pne_event_nose"]], "pne_event_target_lam() (built-in function)": [[183, "pne_event_target_lam"]], "pne_ex1() (built-in function)": [[184, "pne_ex1"]], "pne_pfcn_arc_len() (built-in function)": [[185, "pne_pfcn_arc_len"]], "pne_pfcn_natural() (built-in function)": [[186, "pne_pfcn_natural"]], "pne_pfcn_pseudo_arc_len() (built-in function)": [[187, "pne_pfcn_pseudo_arc_len"]], "pne_register_callbacks() (built-in function)": [[188, "pne_register_callbacks"]], "pne_register_events() (built-in function)": [[189, "pne_register_events"]], "pnes_master() (built-in function)": [[190, "pnes_master"]], "qp_ex1() (built-in function)": [[191, "qp_ex1"]], "qps_bpmpd() (built-in function)": [[192, "qps_bpmpd"]], "qps_clp() (built-in function)": [[193, "qps_clp"]], "qps_cplex() (built-in function)": [[194, "qps_cplex"]], "qps_glpk() (built-in function)": [[195, "qps_glpk"]], "qps_gurobi() (built-in function)": [[196, "qps_gurobi"]], "qps_ipopt() (built-in function)": [[197, "qps_ipopt"]], "qps_master() (built-in function)": [[198, "qps_master"]], "qps_mosek() (built-in function)": [[199, "qps_mosek"]], "qps_osqp() (built-in function)": [[200, "qps_osqp"]], "qps_ot() (built-in function)": [[201, "qps_ot"]], "t_miqps_master() (built-in function)": [[202, "t_miqps_master"]], "t_nested_struct_copy() (built-in function)": [[203, "t_nested_struct_copy"]], "t_nleqs_master() (built-in function)": [[204, "t_nleqs_master"]], "t_nlps_master() (built-in function)": [[205, "t_nlps_master"]], "t_om_solve_leqs() (built-in function)": [[206, "t_om_solve_leqs"]], "t_om_solve_miqps() (built-in function)": [[207, "t_om_solve_miqps"]], "t_om_solve_nleqs() (built-in function)": [[208, "t_om_solve_nleqs"]], "t_om_solve_nlps() (built-in function)": [[209, "t_om_solve_nlps"]], "t_om_solve_pne() (built-in function)": [[210, "t_om_solve_pne"]], "t_om_solve_qps() (built-in function)": [[211, "t_om_solve_qps"]], "t_opt_model() (built-in function)": [[212, "t_opt_model"]], "t_pnes_master() (built-in function)": [[213, "t_pnes_master"]], "t_qps_master() (built-in function)": [[214, "t_qps_master"]], "test_mp_opt_model() (built-in function)": [[215, "test_mp_opt_model"]], "have_feature() (built-in function)": [[218, "have_feature"]], "have_feature_matlab() (built-in function)": [[219, "have_feature_matlab"]], "have_feature_octave() (built-in function)": [[220, "have_feature_octave"]], "mptestver() (built-in function)": [[221, "mptestver"]], "t_begin() (built-in function)": [[222, "t_begin"]], "t_end() (built-in function)": [[223, "t_end"]], "t_file_match() (built-in function)": [[224, "t_file_match"]], "t_have_feature() (built-in function)": [[225, "t_have_feature"]], "t_is() (built-in function)": [[226, "t_is"]], "t_ok() (built-in function)": [[227, "t_ok"]], "t_run_tests() (built-in function)": [[228, "t_run_tests"]], "t_skip() (built-in function)": [[229, "t_skip"]], "t_str_match() (built-in function)": [[230, "t_str_match"]], "t_test_fcns() (built-in function)": [[231, "t_test_fcns"]], "test_mptest() (built-in function)": [[232, "test_mptest"]], "node_type (class in mp)": [[236, "mp.NODE_TYPE"]], "none (mp.node_type attribute)": [[236, "mp.NODE_TYPE.NONE"]], "pq (mp.node_type attribute)": [[236, "mp.NODE_TYPE.PQ"]], "pv (mp.node_type attribute)": [[236, "mp.NODE_TYPE.PV"]], "ref (mp.node_type attribute)": [[236, "mp.NODE_TYPE.REF"]], "is_valid() (mp.node_type static method)": [[236, "mp.NODE_TYPE.is_valid"]], "cost_table (class in mp)": [[237, "mp.cost_table"]], "cost_table() (mp.cost_table method)": [[237, "mp.cost_table.cost_table"]], "diff_poly_fcn() (mp.cost_table static method)": [[237, "mp.cost_table.diff_poly_fcn"]], "eval_poly_fcn() (mp.cost_table static method)": [[237, "mp.cost_table.eval_poly_fcn"]], "max_pwl_cost() (mp.cost_table method)": [[237, "mp.cost_table.max_pwl_cost"]], "poly_cost_fcn() (mp.cost_table static method)": [[237, "mp.cost_table.poly_cost_fcn"]], "poly_params() (mp.cost_table method)": [[237, "mp.cost_table.poly_params"]], "pwl_params() (mp.cost_table method)": [[237, "mp.cost_table.pwl_params"]], "cost_table_utils (class in mp)": [[238, "mp.cost_table_utils"]], "max_pwl_cost() (mp.cost_table_utils static method)": [[238, "mp.cost_table_utils.max_pwl_cost"]], "poly_params() (mp.cost_table_utils static method)": [[238, "mp.cost_table_utils.poly_params"]], "pwl_params() (mp.cost_table_utils static method)": [[238, "mp.cost_table_utils.pwl_params"]], "base_kva (mp.data_model attribute)": [[239, "mp.data_model.base_kva"]], "base_mva (mp.data_model attribute)": [[239, "mp.data_model.base_mva"]], "build() (mp.data_model method)": [[239, "mp.data_model.build"]], "build_params() (mp.data_model method)": [[239, "mp.data_model.build_params"]], "copy() (mp.data_model method)": [[239, "mp.data_model.copy"]], "count() (mp.data_model method)": [[239, "mp.data_model.count"]], "data_model (class in mp)": [[239, "mp.data_model"]], "data_model() (mp.data_model method)": [[239, "mp.data_model.data_model"]], "display() (mp.data_model method)": [[239, "mp.data_model.display"]], "initialize() (mp.data_model method)": [[239, "mp.data_model.initialize"]], "online() (mp.data_model method)": [[239, "mp.data_model.online"]], "pp_data() (mp.data_model method)": [[239, "mp.data_model.pp_data"]], "pp_flags() (mp.data_model method)": [[239, "mp.data_model.pp_flags"]], "pp_get_headers() (mp.data_model method)": [[239, "mp.data_model.pp_get_headers"]], "pp_get_headers_cnt() (mp.data_model method)": [[239, "mp.data_model.pp_get_headers_cnt"]], "pp_get_headers_ext() (mp.data_model method)": [[239, "mp.data_model.pp_get_headers_ext"]], "pp_get_headers_other() (mp.data_model method)": [[239, "mp.data_model.pp_get_headers_other"]], "pp_have_section() (mp.data_model method)": [[239, "mp.data_model.pp_have_section"]], "pp_section() (mp.data_model method)": [[239, "mp.data_model.pp_section"]], "pp_section_label() (mp.data_model method)": [[239, "mp.data_model.pp_section_label"]], "pp_section_list() (mp.data_model method)": [[239, "mp.data_model.pp_section_list"]], "pretty_print() (mp.data_model method)": [[239, "mp.data_model.pretty_print"]], "set_bus_v_lims_via_vg() (mp.data_model method)": [[239, "mp.data_model.set_bus_v_lims_via_vg"]], "source (mp.data_model attribute)": [[239, "mp.data_model.source"]], "update_status() (mp.data_model method)": [[239, "mp.data_model.update_status"]], "userdata (mp.data_model attribute)": [[239, "mp.data_model.userdata"]], "data_model_cpf (class in mp)": [[240, "mp.data_model_cpf"]], "data_model_cpf() (mp.data_model_cpf method)": [[240, "mp.data_model_cpf.data_model_cpf"]], "data_model_opf (class in mp)": [[241, "mp.data_model_opf"]], "data_model_opf() (mp.data_model_opf method)": [[241, "mp.data_model_opf.data_model_opf"]], "pp_flags() (mp.data_model_opf method)": [[241, "mp.data_model_opf.pp_flags"]], "pp_get_headers_other() (mp.data_model_opf method)": [[241, "mp.data_model_opf.pp_get_headers_other"]], "pp_section_list() (mp.data_model_opf method)": [[241, "mp.data_model_opf.pp_section_list"]], "build() (mp.dm_converter method)": [[242, "mp.dm_converter.build"]], "copy() (mp.dm_converter method)": [[242, "mp.dm_converter.copy"]], "display() (mp.dm_converter method)": [[242, "mp.dm_converter.display"]], "dm_converter (class in mp)": [[242, "mp.dm_converter"]], "export() (mp.dm_converter method)": [[242, "mp.dm_converter.export"]], "format_tag() (mp.dm_converter method)": [[242, "mp.dm_converter.format_tag"]], "import() (mp.dm_converter method)": [[242, "mp.dm_converter.import"]], "init_export() (mp.dm_converter method)": [[242, "mp.dm_converter.init_export"]], "save() (mp.dm_converter method)": [[242, "mp.dm_converter.save"]], "dm_converter_mpc2 (class in mp)": [[243, "mp.dm_converter_mpc2"]], "dm_converter_mpc2() (mp.dm_converter_mpc2 method)": [[243, "mp.dm_converter_mpc2.dm_converter_mpc2"]], "format_tag() (mp.dm_converter_mpc2 method)": [[243, "mp.dm_converter_mpc2.format_tag"]], "import() (mp.dm_converter_mpc2 method)": [[243, "mp.dm_converter_mpc2.import"]], "init_export() (mp.dm_converter_mpc2 method)": [[243, "mp.dm_converter_mpc2.init_export"]], "save() (mp.dm_converter_mpc2 method)": [[243, "mp.dm_converter_mpc2.save"]], "dm_converter_mpc2_legacy (class in mp)": [[244, "mp.dm_converter_mpc2_legacy"]], "legacy_user_mod_inputs() (mp.dm_converter_mpc2_legacy method)": [[244, "mp.dm_converter_mpc2_legacy.legacy_user_mod_inputs"]], "legacy_user_nln_constraints() (mp.dm_converter_mpc2_legacy method)": [[244, "mp.dm_converter_mpc2_legacy.legacy_user_nln_constraints"]], "id() (mp.dm_element method)": [[245, "mp.dm_element.ID"]], "id2i (mp.dm_element attribute)": [[245, "mp.dm_element.ID2i"]], "build_params() (mp.dm_element method)": [[245, "mp.dm_element.build_params"]], "copy() (mp.dm_element method)": [[245, "mp.dm_element.copy"]], "count() (mp.dm_element method)": [[245, "mp.dm_element.count"]], "cxn_idx_prop() (mp.dm_element method)": [[245, "mp.dm_element.cxn_idx_prop"]], "cxn_type() (mp.dm_element method)": [[245, "mp.dm_element.cxn_type"]], "cxn_type_prop() (mp.dm_element method)": [[245, "mp.dm_element.cxn_type_prop"]], "display() (mp.dm_element method)": [[245, "mp.dm_element.display"]], "dm_converter_element() (mp.dm_element method)": [[245, "mp.dm_element.dm_converter_element"]], "dm_element (class in mp)": [[245, "mp.dm_element"]], "export_vars() (mp.dm_element method)": [[245, "mp.dm_element.export_vars"]], "export_vars_offline_val() (mp.dm_element method)": [[245, "mp.dm_element.export_vars_offline_val"]], "i2on (mp.dm_element attribute)": [[245, "mp.dm_element.i2on"]], "init_status() (mp.dm_element method)": [[245, "mp.dm_element.init_status"]], "initialize() (mp.dm_element method)": [[245, "mp.dm_element.initialize"]], "label() (mp.dm_element method)": [[245, "mp.dm_element.label"]], "labels() (mp.dm_element method)": [[245, "mp.dm_element.labels"]], "main_table_var_names() (mp.dm_element method)": [[245, "mp.dm_element.main_table_var_names"]], "n (mp.dm_element attribute)": [[245, "mp.dm_element.n"]], "name() (mp.dm_element method)": [[245, "mp.dm_element.name"]], "nr (mp.dm_element attribute)": [[245, "mp.dm_element.nr"]], "off (mp.dm_element attribute)": [[245, "mp.dm_element.off"]], "on (mp.dm_element attribute)": [[245, "mp.dm_element.on"]], "pp_data() (mp.dm_element method)": [[245, "mp.dm_element.pp_data"]], "pp_data_cnt() (mp.dm_element method)": [[245, "mp.dm_element.pp_data_cnt"]], "pp_data_det() (mp.dm_element method)": [[245, "mp.dm_element.pp_data_det"]], "pp_data_ext() (mp.dm_element method)": [[245, "mp.dm_element.pp_data_ext"]], "pp_data_row_det() (mp.dm_element method)": [[245, "mp.dm_element.pp_data_row_det"]], "pp_data_sum() (mp.dm_element method)": [[245, "mp.dm_element.pp_data_sum"]], "pp_get_footers() (mp.dm_element method)": [[245, "mp.dm_element.pp_get_footers"]], "pp_get_footers_det() (mp.dm_element method)": [[245, "mp.dm_element.pp_get_footers_det"]], "pp_get_headers() (mp.dm_element method)": [[245, "mp.dm_element.pp_get_headers"]], "pp_get_headers_det() (mp.dm_element method)": [[245, "mp.dm_element.pp_get_headers_det"]], "pp_get_title_det() (mp.dm_element method)": [[245, "mp.dm_element.pp_get_title_det"]], "pp_have_section() (mp.dm_element method)": [[245, "mp.dm_element.pp_have_section"]], "pp_have_section_cnt() (mp.dm_element method)": [[245, "mp.dm_element.pp_have_section_cnt"]], "pp_have_section_det() (mp.dm_element method)": [[245, "mp.dm_element.pp_have_section_det"]], "pp_have_section_ext() (mp.dm_element method)": [[245, "mp.dm_element.pp_have_section_ext"]], "pp_have_section_sum() (mp.dm_element method)": [[245, "mp.dm_element.pp_have_section_sum"]], "pp_rows() (mp.dm_element method)": [[245, "mp.dm_element.pp_rows"]], "pretty_print() (mp.dm_element method)": [[245, "mp.dm_element.pretty_print"]], "rebuild() (mp.dm_element method)": [[245, "mp.dm_element.rebuild"]], "tab (mp.dm_element attribute)": [[245, "mp.dm_element.tab"]], "table_exists() (mp.dm_element method)": [[245, "mp.dm_element.table_exists"]], "update_status() (mp.dm_element method)": [[245, "mp.dm_element.update_status"]], "data_exists() (mp.dmc_element method)": [[246, "mp.dmc_element.data_exists"]], "data_field() (mp.dmc_element method)": [[246, "mp.dmc_element.data_field"]], "data_model_element() (mp.dmc_element method)": [[246, "mp.dmc_element.data_model_element"]], "data_subs() (mp.dmc_element method)": [[246, "mp.dmc_element.data_subs"]], "default_export_data_nrows() (mp.dmc_element method)": [[246, "mp.dmc_element.default_export_data_nrows"]], "default_export_data_table() (mp.dmc_element method)": [[246, "mp.dmc_element.default_export_data_table"]], "dmc_element (class in mp)": [[246, "mp.dmc_element"]], "export() (mp.dmc_element method)": [[246, "mp.dmc_element.export"]], "export_col() (mp.dmc_element method)": [[246, "mp.dmc_element.export_col"]], "export_table_values() (mp.dmc_element method)": [[246, "mp.dmc_element.export_table_values"]], "get_export_size() (mp.dmc_element method)": [[246, "mp.dmc_element.get_export_size"]], "get_export_spec() (mp.dmc_element method)": [[246, "mp.dmc_element.get_export_spec"]], "get_import_size() (mp.dmc_element method)": [[246, "mp.dmc_element.get_import_size"]], "get_import_spec() (mp.dmc_element method)": [[246, "mp.dmc_element.get_import_spec"]], "get_input_table_values() (mp.dmc_element method)": [[246, "mp.dmc_element.get_input_table_values"]], "import() (mp.dmc_element method)": [[246, "mp.dmc_element.import"]], "import_col() (mp.dmc_element method)": [[246, "mp.dmc_element.import_col"]], "import_table_values() (mp.dmc_element method)": [[246, "mp.dmc_element.import_table_values"]], "init_export_data() (mp.dmc_element method)": [[246, "mp.dmc_element.init_export_data"]], "name() (mp.dmc_element method)": [[246, "mp.dmc_element.name"]], "table_var_map() (mp.dmc_element method)": [[246, "mp.dmc_element.table_var_map"]], "data_field() (mp.dmce_branch_mpc2 method)": [[247, "mp.dmce_branch_mpc2.data_field"]], "default_export_data_table() (mp.dmce_branch_mpc2 method)": [[247, "mp.dmce_branch_mpc2.default_export_data_table"]], "dmce_branch_mpc2 (class in mp)": [[247, "mp.dmce_branch_mpc2"]], "name() (mp.dmce_branch_mpc2 method)": [[247, "mp.dmce_branch_mpc2.name"]], "table_var_map() (mp.dmce_branch_mpc2 method)": [[247, "mp.dmce_branch_mpc2.table_var_map"]], "bus_status_import() (mp.dmce_bus3p_mpc2 method)": [[248, "mp.dmce_bus3p_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus3p_mpc2 method)": [[248, "mp.dmce_bus3p_mpc2.data_field"]], "dmce_bus3p_mpc2 (class in mp)": [[248, "mp.dmce_bus3p_mpc2"]], "name() (mp.dmce_bus3p_mpc2 method)": [[248, "mp.dmce_bus3p_mpc2.name"]], "table_var_map() (mp.dmce_bus3p_mpc2 method)": [[248, "mp.dmce_bus3p_mpc2.table_var_map"]], "bus_name_export() (mp.dmce_bus_mpc2 method)": [[249, "mp.dmce_bus_mpc2.bus_name_export"]], "bus_name_import() (mp.dmce_bus_mpc2 method)": [[249, "mp.dmce_bus_mpc2.bus_name_import"]], "bus_status_import() (mp.dmce_bus_mpc2 method)": [[249, "mp.dmce_bus_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus_mpc2 method)": [[249, "mp.dmce_bus_mpc2.data_field"]], "default_export_data_table() (mp.dmce_bus_mpc2 method)": [[249, "mp.dmce_bus_mpc2.default_export_data_table"]], "dmce_bus_mpc2 (class in mp)": [[249, "mp.dmce_bus_mpc2"]], "init_export_data() (mp.dmce_bus_mpc2 method)": [[249, "mp.dmce_bus_mpc2.init_export_data"]], "name() (mp.dmce_bus_mpc2 method)": [[249, "mp.dmce_bus_mpc2.name"]], "table_var_map() (mp.dmce_bus_mpc2 method)": [[249, "mp.dmce_bus_mpc2.table_var_map"]], "data_field() (mp.dmce_buslink_mpc2 method)": [[250, "mp.dmce_buslink_mpc2.data_field"]], "dmce_buslink_mpc2 (class in mp)": [[250, "mp.dmce_buslink_mpc2"]], "name() (mp.dmce_buslink_mpc2 method)": [[250, "mp.dmce_buslink_mpc2.name"]], "table_var_map() (mp.dmce_buslink_mpc2 method)": [[250, "mp.dmce_buslink_mpc2.table_var_map"]], "data_field() (mp.dmce_gen3p_mpc2 method)": [[251, "mp.dmce_gen3p_mpc2.data_field"]], "dmce_gen3p_mpc2 (class in mp)": [[251, "mp.dmce_gen3p_mpc2"]], "name() (mp.dmce_gen3p_mpc2 method)": [[251, "mp.dmce_gen3p_mpc2.name"]], "table_var_map() (mp.dmce_gen3p_mpc2 method)": [[251, "mp.dmce_gen3p_mpc2.table_var_map"]], "cost_table2gencost() (mp.dmce_gen_mpc2 static method)": [[252, "mp.dmce_gen_mpc2.cost_table2gencost"]], "data_field() (mp.dmce_gen_mpc2 method)": [[252, "mp.dmce_gen_mpc2.data_field"]], "default_export_data_table() (mp.dmce_gen_mpc2 method)": [[252, "mp.dmce_gen_mpc2.default_export_data_table"]], "dmce_gen_mpc2 (class in mp)": [[252, "mp.dmce_gen_mpc2"]], "gen_cost_export() (mp.dmce_gen_mpc2 method)": [[252, "mp.dmce_gen_mpc2.gen_cost_export"]], "gen_cost_import() (mp.dmce_gen_mpc2 method)": [[252, "mp.dmce_gen_mpc2.gen_cost_import"]], "gencost2cost_table() (mp.dmce_gen_mpc2 static method)": [[252, "mp.dmce_gen_mpc2.gencost2cost_table"]], "name() (mp.dmce_gen_mpc2 method)": [[252, "mp.dmce_gen_mpc2.name"]], "pwl1 (mp.dmce_gen_mpc2 attribute)": [[252, "mp.dmce_gen_mpc2.pwl1"]], "start_cost_export() (mp.dmce_gen_mpc2 method)": [[252, "mp.dmce_gen_mpc2.start_cost_export"]], "start_cost_import() (mp.dmce_gen_mpc2 method)": [[252, "mp.dmce_gen_mpc2.start_cost_import"]], "table_var_map() (mp.dmce_gen_mpc2 method)": [[252, "mp.dmce_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_legacy_dcline_mpc2 method)": [[253, "mp.dmce_legacy_dcline_mpc2.data_field"]], "dcline_cost_export() (mp.dmce_legacy_dcline_mpc2 method)": [[253, "mp.dmce_legacy_dcline_mpc2.dcline_cost_export"]], "dcline_cost_import() (mp.dmce_legacy_dcline_mpc2 method)": [[253, "mp.dmce_legacy_dcline_mpc2.dcline_cost_import"]], "default_export_data_table() (mp.dmce_legacy_dcline_mpc2 method)": [[253, "mp.dmce_legacy_dcline_mpc2.default_export_data_table"]], "dmce_legacy_dcline_mpc2 (class in mp)": [[253, "mp.dmce_legacy_dcline_mpc2"]], "name() (mp.dmce_legacy_dcline_mpc2 method)": [[253, "mp.dmce_legacy_dcline_mpc2.name"]], "table_var_map() (mp.dmce_legacy_dcline_mpc2 method)": [[253, "mp.dmce_legacy_dcline_mpc2.table_var_map"]], "create_line_construction_table() (mp.dmce_line3p_mpc2 method)": [[254, "mp.dmce_line3p_mpc2.create_line_construction_table"]], "data_field() (mp.dmce_line3p_mpc2 method)": [[254, "mp.dmce_line3p_mpc2.data_field"]], "dmce_line3p_mpc2 (class in mp)": [[254, "mp.dmce_line3p_mpc2"]], "import() (mp.dmce_line3p_mpc2 method)": [[254, "mp.dmce_line3p_mpc2.import"]], "name() (mp.dmce_line3p_mpc2 method)": [[254, "mp.dmce_line3p_mpc2.name"]], "table_var_map() (mp.dmce_line3p_mpc2 method)": [[254, "mp.dmce_line3p_mpc2.table_var_map"]], "bus (mp.dmce_load3p_mpc2 attribute)": [[255, "mp.dmce_load3p_mpc2.bus"]], "data_field() (mp.dmce_load3p_mpc2 method)": [[255, "mp.dmce_load3p_mpc2.data_field"]], "dmce_load3p_mpc2 (class in mp)": [[255, "mp.dmce_load3p_mpc2"]], "name() (mp.dmce_load3p_mpc2 method)": [[255, "mp.dmce_load3p_mpc2.name"]], "table_var_map() (mp.dmce_load3p_mpc2 method)": [[255, "mp.dmce_load3p_mpc2.table_var_map"]], "bus (mp.dmce_load_mpc2 attribute)": [[256, "mp.dmce_load_mpc2.bus"]], "data_field() (mp.dmce_load_mpc2 method)": [[256, "mp.dmce_load_mpc2.data_field"]], "dmce_load_mpc2 (class in mp)": [[256, "mp.dmce_load_mpc2"]], "get_export_size() (mp.dmce_load_mpc2 method)": [[256, "mp.dmce_load_mpc2.get_export_size"]], "get_import_size() (mp.dmce_load_mpc2 method)": [[256, "mp.dmce_load_mpc2.get_import_size"]], "name() (mp.dmce_load_mpc2 method)": [[256, "mp.dmce_load_mpc2.name"]], "scale_factor_fcn() (mp.dmce_load_mpc2 method)": [[256, "mp.dmce_load_mpc2.scale_factor_fcn"]], "sys_wide_zip_loads() (mp.dmce_load_mpc2 method)": [[256, "mp.dmce_load_mpc2.sys_wide_zip_loads"]], "table_var_map() (mp.dmce_load_mpc2 method)": [[256, "mp.dmce_load_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.data_subs"]], "dmce_reserve_gen_mpc2 (class in mp)": [[257, "mp.dmce_reserve_gen_mpc2"]], "get_export_size() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.get_export_size"]], "get_import_size() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.get_import_size"]], "import() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.import"]], "import_cost() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.import_cost"]], "import_qty() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.import_qty"]], "import_ramp() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.import_ramp"]], "name() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.name"]], "table_var_map() (mp.dmce_reserve_gen_mpc2 method)": [[257, "mp.dmce_reserve_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_zone_mpc2 method)": [[258, "mp.dmce_reserve_zone_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_zone_mpc2 method)": [[258, "mp.dmce_reserve_zone_mpc2.data_subs"]], "dmce_reserve_zone_mpc2 (class in mp)": [[258, "mp.dmce_reserve_zone_mpc2"]], "import_req() (mp.dmce_reserve_zone_mpc2 method)": [[258, "mp.dmce_reserve_zone_mpc2.import_req"]], "import_zones() (mp.dmce_reserve_zone_mpc2 method)": [[258, "mp.dmce_reserve_zone_mpc2.import_zones"]], "name() (mp.dmce_reserve_zone_mpc2 method)": [[258, "mp.dmce_reserve_zone_mpc2.name"]], "table_var_map() (mp.dmce_reserve_zone_mpc2 method)": [[258, "mp.dmce_reserve_zone_mpc2.table_var_map"]], "bus (mp.dmce_shunt_mpc2 attribute)": [[259, "mp.dmce_shunt_mpc2.bus"]], "data_field() (mp.dmce_shunt_mpc2 method)": [[259, "mp.dmce_shunt_mpc2.data_field"]], "dmce_shunt_mpc2 (class in mp)": [[259, "mp.dmce_shunt_mpc2"]], "get_export_size() (mp.dmce_shunt_mpc2 method)": [[259, "mp.dmce_shunt_mpc2.get_export_size"]], "get_import_size() (mp.dmce_shunt_mpc2 method)": [[259, "mp.dmce_shunt_mpc2.get_import_size"]], "name() (mp.dmce_shunt_mpc2 method)": [[259, "mp.dmce_shunt_mpc2.name"]], "table_var_map() (mp.dmce_shunt_mpc2 method)": [[259, "mp.dmce_shunt_mpc2.table_var_map"]], "data_field() (mp.dmce_xfmr3p_mpc2 method)": [[260, "mp.dmce_xfmr3p_mpc2.data_field"]], "dmce_xfmr3p_mpc2 (class in mp)": [[260, "mp.dmce_xfmr3p_mpc2"]], "name() (mp.dmce_xfmr3p_mpc2 method)": [[260, "mp.dmce_xfmr3p_mpc2.name"]], "table_var_map() (mp.dmce_xfmr3p_mpc2 method)": [[260, "mp.dmce_xfmr3p_mpc2.table_var_map"]], "b_fr (mp.dme_branch attribute)": [[261, "mp.dme_branch.b_fr"]], "b_to (mp.dme_branch attribute)": [[261, "mp.dme_branch.b_to"]], "build_params() (mp.dme_branch method)": [[261, "mp.dme_branch.build_params"]], "cxn_idx_prop() (mp.dme_branch method)": [[261, "mp.dme_branch.cxn_idx_prop"]], "cxn_type() (mp.dme_branch method)": [[261, "mp.dme_branch.cxn_type"]], "dme_branch (class in mp)": [[261, "mp.dme_branch"]], "export_vars() (mp.dme_branch method)": [[261, "mp.dme_branch.export_vars"]], "export_vars_offline_val() (mp.dme_branch method)": [[261, "mp.dme_branch.export_vars_offline_val"]], "fbus (mp.dme_branch attribute)": [[261, "mp.dme_branch.fbus"]], "g_fr (mp.dme_branch attribute)": [[261, "mp.dme_branch.g_fr"]], "g_to (mp.dme_branch attribute)": [[261, "mp.dme_branch.g_to"]], "initialize() (mp.dme_branch method)": [[261, "mp.dme_branch.initialize"]], "label() (mp.dme_branch method)": [[261, "mp.dme_branch.label"]], "labels() (mp.dme_branch method)": [[261, "mp.dme_branch.labels"]], "main_table_var_names() (mp.dme_branch method)": [[261, "mp.dme_branch.main_table_var_names"]], "name() (mp.dme_branch method)": [[261, "mp.dme_branch.name"]], "pp_data_cnt() (mp.dme_branch method)": [[261, "mp.dme_branch.pp_data_cnt"]], "pp_data_row_det() (mp.dme_branch method)": [[261, "mp.dme_branch.pp_data_row_det"]], "pp_data_sum() (mp.dme_branch method)": [[261, "mp.dme_branch.pp_data_sum"]], "pp_get_headers_det() (mp.dme_branch method)": [[261, "mp.dme_branch.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_branch method)": [[261, "mp.dme_branch.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_branch method)": [[261, "mp.dme_branch.pp_have_section_sum"]], "r (mp.dme_branch attribute)": [[261, "mp.dme_branch.r"]], "rate_a (mp.dme_branch attribute)": [[261, "mp.dme_branch.rate_a"]], "ta (mp.dme_branch attribute)": [[261, "mp.dme_branch.ta"]], "tbus (mp.dme_branch attribute)": [[261, "mp.dme_branch.tbus"]], "tm (mp.dme_branch attribute)": [[261, "mp.dme_branch.tm"]], "update_status() (mp.dme_branch method)": [[261, "mp.dme_branch.update_status"]], "x (mp.dme_branch attribute)": [[261, "mp.dme_branch.x"]], "dme_branch_opf (class in mp)": [[262, "mp.dme_branch_opf"]], "export_vars() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.export_vars"]], "export_vars_offline_val() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.pp_get_headers_lim"]], "pp_get_title_lim() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_branch_opf method)": [[262, "mp.dme_branch_opf.pretty_print"]], "build_params() (mp.dme_bus method)": [[263, "mp.dme_bus.build_params"]], "dme_bus (class in mp)": [[263, "mp.dme_bus"]], "export_vars() (mp.dme_bus method)": [[263, "mp.dme_bus.export_vars"]], "export_vars_offline_val() (mp.dme_bus method)": [[263, "mp.dme_bus.export_vars_offline_val"]], "init_status() (mp.dme_bus method)": [[263, "mp.dme_bus.init_status"]], "label() (mp.dme_bus method)": [[263, "mp.dme_bus.label"]], "labels() (mp.dme_bus method)": [[263, "mp.dme_bus.labels"]], "main_table_var_names() (mp.dme_bus method)": [[263, "mp.dme_bus.main_table_var_names"]], "name() (mp.dme_bus method)": [[263, "mp.dme_bus.name"]], "pp_data_cnt() (mp.dme_bus method)": [[263, "mp.dme_bus.pp_data_cnt"]], "pp_data_ext() (mp.dme_bus method)": [[263, "mp.dme_bus.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus method)": [[263, "mp.dme_bus.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus method)": [[263, "mp.dme_bus.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus method)": [[263, "mp.dme_bus.pp_have_section_det"]], "pp_have_section_ext() (mp.dme_bus method)": [[263, "mp.dme_bus.pp_have_section_ext"]], "set_bus_type_pq() (mp.dme_bus method)": [[263, "mp.dme_bus.set_bus_type_pq"]], "set_bus_type_pv() (mp.dme_bus method)": [[263, "mp.dme_bus.set_bus_type_pv"]], "set_bus_type_ref() (mp.dme_bus method)": [[263, "mp.dme_bus.set_bus_type_ref"]], "type (mp.dme_bus attribute)": [[263, "mp.dme_bus.type"]], "update_status() (mp.dme_bus method)": [[263, "mp.dme_bus.update_status"]], "va_start (mp.dme_bus attribute)": [[263, "mp.dme_bus.va_start"]], "vm_control (mp.dme_bus attribute)": [[263, "mp.dme_bus.vm_control"]], "vm_lb (mp.dme_bus attribute)": [[263, "mp.dme_bus.vm_lb"]], "vm_start (mp.dme_bus attribute)": [[263, "mp.dme_bus.vm_start"]], "vm_ub (mp.dme_bus attribute)": [[263, "mp.dme_bus.vm_ub"]], "build_params() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.build_params"]], "dme_bus3p (class in mp)": [[264, "mp.dme_bus3p"]], "init_status() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.init_status"]], "label() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.label"]], "labels() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.labels"]], "main_table_var_names() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.main_table_var_names"]], "name() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.name"]], "pp_data_row_det() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.pp_have_section_det"]], "type (mp.dme_bus3p attribute)": [[264, "mp.dme_bus3p.type"]], "update_status() (mp.dme_bus3p method)": [[264, "mp.dme_bus3p.update_status"]], "va1_start (mp.dme_bus3p attribute)": [[264, "mp.dme_bus3p.va1_start"]], "va2_start (mp.dme_bus3p attribute)": [[264, "mp.dme_bus3p.va2_start"]], "va3_start (mp.dme_bus3p attribute)": [[264, "mp.dme_bus3p.va3_start"]], "vm1_start (mp.dme_bus3p attribute)": [[264, "mp.dme_bus3p.vm1_start"]], "vm2_start (mp.dme_bus3p attribute)": [[264, "mp.dme_bus3p.vm2_start"]], "vm3_start (mp.dme_bus3p attribute)": [[264, "mp.dme_bus3p.vm3_start"]], "vm_control (mp.dme_bus3p attribute)": [[264, "mp.dme_bus3p.vm_control"]], "dme_bus3p_opf (class in mp)": [[265, "mp.dme_bus3p_opf"]], "dme_bus_opf (class in mp)": [[266, "mp.dme_bus_opf"]], "export_vars() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.export_vars"]], "export_vars_offline_val() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.pp_binding_rows_lim"]], "pp_data_ext() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.pp_data_row_lim"]], "pp_get_headers_det() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_bus_opf method)": [[266, "mp.dme_bus_opf.pp_have_section_lim"]], "build_params() (mp.dme_buslink method)": [[267, "mp.dme_buslink.build_params"]], "bus (mp.dme_buslink attribute)": [[267, "mp.dme_buslink.bus"]], "bus3p (mp.dme_buslink attribute)": [[267, "mp.dme_buslink.bus3p"]], "cxn_idx_prop() (mp.dme_buslink method)": [[267, "mp.dme_buslink.cxn_idx_prop"]], "cxn_type() (mp.dme_buslink method)": [[267, "mp.dme_buslink.cxn_type"]], "dme_buslink (class in mp)": [[267, "mp.dme_buslink"]], "initialize() (mp.dme_buslink method)": [[267, "mp.dme_buslink.initialize"]], "label() (mp.dme_buslink method)": [[267, "mp.dme_buslink.label"]], "labels() (mp.dme_buslink method)": [[267, "mp.dme_buslink.labels"]], "main_table_var_names() (mp.dme_buslink method)": [[267, "mp.dme_buslink.main_table_var_names"]], "name() (mp.dme_buslink method)": [[267, "mp.dme_buslink.name"]], "pg1_start (mp.dme_buslink attribute)": [[267, "mp.dme_buslink.pg1_start"]], "pg2_start (mp.dme_buslink attribute)": [[267, "mp.dme_buslink.pg2_start"]], "pg3_start (mp.dme_buslink attribute)": [[267, "mp.dme_buslink.pg3_start"]], "pp_data_row_det() (mp.dme_buslink method)": [[267, "mp.dme_buslink.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_buslink method)": [[267, "mp.dme_buslink.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_buslink method)": [[267, "mp.dme_buslink.pp_have_section_det"]], "qg1_start (mp.dme_buslink attribute)": [[267, "mp.dme_buslink.qg1_start"]], "qg2_start (mp.dme_buslink attribute)": [[267, "mp.dme_buslink.qg2_start"]], "qg3_start (mp.dme_buslink attribute)": [[267, "mp.dme_buslink.qg3_start"]], "update_status() (mp.dme_buslink method)": [[267, "mp.dme_buslink.update_status"]], "dme_buslink_opf (class in mp)": [[268, "mp.dme_buslink_opf"]], "apply_vm_setpoint() (mp.dme_gen method)": [[269, "mp.dme_gen.apply_vm_setpoint"]], "build_params() (mp.dme_gen method)": [[269, "mp.dme_gen.build_params"]], "bus (mp.dme_gen attribute)": [[269, "mp.dme_gen.bus"]], "bus_on (mp.dme_gen attribute)": [[269, "mp.dme_gen.bus_on"]], "cxn_idx_prop() (mp.dme_gen method)": [[269, "mp.dme_gen.cxn_idx_prop"]], "cxn_type() (mp.dme_gen method)": [[269, "mp.dme_gen.cxn_type"]], "dme_gen (class in mp)": [[269, "mp.dme_gen"]], "export_vars() (mp.dme_gen method)": [[269, "mp.dme_gen.export_vars"]], "export_vars_offline_val() (mp.dme_gen method)": [[269, "mp.dme_gen.export_vars_offline_val"]], "have_cost() (mp.dme_gen method)": [[269, "mp.dme_gen.have_cost"]], "initialize() (mp.dme_gen method)": [[269, "mp.dme_gen.initialize"]], "isload() (mp.dme_gen method)": [[269, "mp.dme_gen.isload"]], "label() (mp.dme_gen method)": [[269, "mp.dme_gen.label"]], "labels() (mp.dme_gen method)": [[269, "mp.dme_gen.labels"]], "main_table_var_names() (mp.dme_gen method)": [[269, "mp.dme_gen.main_table_var_names"]], "name() (mp.dme_gen method)": [[269, "mp.dme_gen.name"]], "pg_lb (mp.dme_gen attribute)": [[269, "mp.dme_gen.pg_lb"]], "pg_start (mp.dme_gen attribute)": [[269, "mp.dme_gen.pg_start"]], "pg_ub (mp.dme_gen attribute)": [[269, "mp.dme_gen.pg_ub"]], "pp_data_row_det() (mp.dme_gen method)": [[269, "mp.dme_gen.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen method)": [[269, "mp.dme_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_gen method)": [[269, "mp.dme_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_gen method)": [[269, "mp.dme_gen.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen method)": [[269, "mp.dme_gen.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen method)": [[269, "mp.dme_gen.pp_have_section_sum"]], "qg_lb (mp.dme_gen attribute)": [[269, "mp.dme_gen.qg_lb"]], "qg_start (mp.dme_gen attribute)": [[269, "mp.dme_gen.qg_start"]], "qg_ub (mp.dme_gen attribute)": [[269, "mp.dme_gen.qg_ub"]], "update_status() (mp.dme_gen method)": [[269, "mp.dme_gen.update_status"]], "violated_q_lims() (mp.dme_gen method)": [[269, "mp.dme_gen.violated_q_lims"]], "vm_setpoint (mp.dme_gen attribute)": [[269, "mp.dme_gen.vm_setpoint"]], "apply_vm_setpoint() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.apply_vm_setpoint"]], "build_params() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.build_params"]], "bus (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.bus"]], "bus_on (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.bus_on"]], "cxn_idx_prop() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.cxn_idx_prop"]], "cxn_type() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.cxn_type"]], "dme_gen3p (class in mp)": [[270, "mp.dme_gen3p"]], "initialize() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.initialize"]], "label() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.label"]], "labels() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.labels"]], "main_table_var_names() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.main_table_var_names"]], "name() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.name"]], "pg1_start (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.pg1_start"]], "pg2_start (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.pg2_start"]], "pg3_start (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.pg3_start"]], "pp_data_row_det() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.pp_have_section_sum"]], "qg1_start (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.qg1_start"]], "qg2_start (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.qg2_start"]], "qg3_start (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.qg3_start"]], "update_status() (mp.dme_gen3p method)": [[270, "mp.dme_gen3p.update_status"]], "vm1_setpoint (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.vm1_setpoint"]], "vm2_setpoint (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.vm2_setpoint"]], "vm3_setpoint (mp.dme_gen3p attribute)": [[270, "mp.dme_gen3p.vm3_setpoint"]], "dme_gen3p_opf (class in mp)": [[271, "mp.dme_gen3p_opf"]], "build_cost_params() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.build_cost_params"]], "dme_gen_opf (class in mp)": [[272, "mp.dme_gen_opf"]], "export_vars() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.export_vars"]], "export_vars_offline_val() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.export_vars_offline_val"]], "have_cost() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.have_cost"]], "main_table_var_names() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.main_table_var_names"]], "max_pwl_gencost() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.max_pwl_gencost"]], "pp_binding_rows_lim() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_gen_opf method)": [[272, "mp.dme_gen_opf.pretty_print"]], "apply_vm_setpoints() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.apply_vm_setpoints"]], "build_params() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.build_params"]], "cxn_idx_prop() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.cxn_idx_prop"]], "cxn_type() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.cxn_type"]], "dme_legacy_dcline (class in mp)": [[273, "mp.dme_legacy_dcline"]], "export_vars() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.export_vars_offline_val"]], "fbus (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.fbus"]], "fbus_on (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.fbus_on"]], "have_cost() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.have_cost"]], "initialize() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.initialize"]], "label() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.label"]], "labels() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.labels"]], "loss0 (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.loss0"]], "loss1 (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.loss1"]], "main_table_var_names() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.main_table_var_names"]], "name() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.name"]], "p_fr_lb (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.p_fr_lb"]], "p_fr_start (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.p_fr_start"]], "p_fr_ub (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.p_fr_ub"]], "p_to_start (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.p_to_start"]], "pp_data_row_det() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.pp_data_row_det"]], "pp_data_sum() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.pp_data_sum"]], "pp_get_headers_det() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.pp_have_section_sum"]], "q_fr_lb (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.q_fr_lb"]], "q_fr_start (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.q_fr_start"]], "q_fr_ub (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.q_fr_ub"]], "q_to_lb (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.q_to_lb"]], "q_to_start (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.q_to_start"]], "q_to_ub (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.q_to_ub"]], "tbus (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.tbus"]], "tbus_on (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.tbus_on"]], "update_status() (mp.dme_legacy_dcline method)": [[273, "mp.dme_legacy_dcline.update_status"]], "vm_setpoint_fr (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.vm_setpoint_fr"]], "vm_setpoint_to (mp.dme_legacy_dcline attribute)": [[273, "mp.dme_legacy_dcline.vm_setpoint_to"]], "build_cost_params() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.build_cost_params"]], "dme_legacy_dcline_opf (class in mp)": [[274, "mp.dme_legacy_dcline_opf"]], "export_vars() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.export_vars_offline_val"]], "have_cost() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.have_cost"]], "main_table_var_names() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_legacy_dcline_opf method)": [[274, "mp.dme_legacy_dcline_opf.pretty_print"]], "build_params() (mp.dme_line3p method)": [[275, "mp.dme_line3p.build_params"]], "create_line_construction_table() (mp.dme_line3p method)": [[275, "mp.dme_line3p.create_line_construction_table"]], "cxn_idx_prop() (mp.dme_line3p method)": [[275, "mp.dme_line3p.cxn_idx_prop"]], "cxn_type() (mp.dme_line3p method)": [[275, "mp.dme_line3p.cxn_type"]], "dme_line3p (class in mp)": [[275, "mp.dme_line3p"]], "fbus (mp.dme_line3p attribute)": [[275, "mp.dme_line3p.fbus"]], "freq (mp.dme_line3p attribute)": [[275, "mp.dme_line3p.freq"]], "initialize() (mp.dme_line3p method)": [[275, "mp.dme_line3p.initialize"]], "label() (mp.dme_line3p method)": [[275, "mp.dme_line3p.label"]], "labels() (mp.dme_line3p method)": [[275, "mp.dme_line3p.labels"]], "lc (mp.dme_line3p attribute)": [[275, "mp.dme_line3p.lc"]], "lc_tab (mp.dme_line3p attribute)": [[275, "mp.dme_line3p.lc_tab"]], "lc_table_var_names() (mp.dme_line3p method)": [[275, "mp.dme_line3p.lc_table_var_names"]], "len (mp.dme_line3p attribute)": [[275, "mp.dme_line3p.len"]], "main_table_var_names() (mp.dme_line3p method)": [[275, "mp.dme_line3p.main_table_var_names"]], "name() (mp.dme_line3p method)": [[275, "mp.dme_line3p.name"]], "pp_data_row_det() (mp.dme_line3p method)": [[275, "mp.dme_line3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_line3p method)": [[275, "mp.dme_line3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_line3p method)": [[275, "mp.dme_line3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_line3p method)": [[275, "mp.dme_line3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_line3p method)": [[275, "mp.dme_line3p.pp_have_section_sum"]], "pretty_print() (mp.dme_line3p method)": [[275, "mp.dme_line3p.pretty_print"]], "symmat2vec() (mp.dme_line3p method)": [[275, "mp.dme_line3p.symmat2vec"]], "tbus (mp.dme_line3p attribute)": [[275, "mp.dme_line3p.tbus"]], "update_status() (mp.dme_line3p method)": [[275, "mp.dme_line3p.update_status"]], "vec2symmat() (mp.dme_line3p method)": [[275, "mp.dme_line3p.vec2symmat"]], "yc (mp.dme_line3p attribute)": [[275, "mp.dme_line3p.yc"]], "ys (mp.dme_line3p attribute)": [[275, "mp.dme_line3p.ys"]], "dme_line3p_opf (class in mp)": [[276, "mp.dme_line3p_opf"]], "build_params() (mp.dme_load method)": [[277, "mp.dme_load.build_params"]], "bus (mp.dme_load attribute)": [[277, "mp.dme_load.bus"]], "count() (mp.dme_load method)": [[277, "mp.dme_load.count"]], "cxn_idx_prop() (mp.dme_load method)": [[277, "mp.dme_load.cxn_idx_prop"]], "cxn_type() (mp.dme_load method)": [[277, "mp.dme_load.cxn_type"]], "dme_load (class in mp)": [[277, "mp.dme_load"]], "label() (mp.dme_load method)": [[277, "mp.dme_load.label"]], "labels() (mp.dme_load method)": [[277, "mp.dme_load.labels"]], "main_table_var_names() (mp.dme_load method)": [[277, "mp.dme_load.main_table_var_names"]], "name() (mp.dme_load method)": [[277, "mp.dme_load.name"]], "pd (mp.dme_load attribute)": [[277, "mp.dme_load.pd"]], "pd_i (mp.dme_load attribute)": [[277, "mp.dme_load.pd_i"]], "pd_z (mp.dme_load attribute)": [[277, "mp.dme_load.pd_z"]], "pp_data_row_det() (mp.dme_load method)": [[277, "mp.dme_load.pp_data_row_det"]], "pp_data_sum() (mp.dme_load method)": [[277, "mp.dme_load.pp_data_sum"]], "pp_get_footers_det() (mp.dme_load method)": [[277, "mp.dme_load.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_load method)": [[277, "mp.dme_load.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load method)": [[277, "mp.dme_load.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load method)": [[277, "mp.dme_load.pp_have_section_sum"]], "qd (mp.dme_load attribute)": [[277, "mp.dme_load.qd"]], "qd_i (mp.dme_load attribute)": [[277, "mp.dme_load.qd_i"]], "qd_z (mp.dme_load attribute)": [[277, "mp.dme_load.qd_z"]], "update_status() (mp.dme_load method)": [[277, "mp.dme_load.update_status"]], "build_params() (mp.dme_load3p method)": [[278, "mp.dme_load3p.build_params"]], "bus (mp.dme_load3p attribute)": [[278, "mp.dme_load3p.bus"]], "cxn_idx_prop() (mp.dme_load3p method)": [[278, "mp.dme_load3p.cxn_idx_prop"]], "cxn_type() (mp.dme_load3p method)": [[278, "mp.dme_load3p.cxn_type"]], "dme_load3p (class in mp)": [[278, "mp.dme_load3p"]], "initialize() (mp.dme_load3p method)": [[278, "mp.dme_load3p.initialize"]], "label() (mp.dme_load3p method)": [[278, "mp.dme_load3p.label"]], "labels() (mp.dme_load3p method)": [[278, "mp.dme_load3p.labels"]], "main_table_var_names() (mp.dme_load3p method)": [[278, "mp.dme_load3p.main_table_var_names"]], "name() (mp.dme_load3p method)": [[278, "mp.dme_load3p.name"]], "pd1 (mp.dme_load3p attribute)": [[278, "mp.dme_load3p.pd1"]], "pd2 (mp.dme_load3p attribute)": [[278, "mp.dme_load3p.pd2"]], "pd3 (mp.dme_load3p attribute)": [[278, "mp.dme_load3p.pd3"]], "pf1 (mp.dme_load3p attribute)": [[278, "mp.dme_load3p.pf1"]], "pf2 (mp.dme_load3p attribute)": [[278, "mp.dme_load3p.pf2"]], "pf3 (mp.dme_load3p attribute)": [[278, "mp.dme_load3p.pf3"]], "pp_data_row_det() (mp.dme_load3p method)": [[278, "mp.dme_load3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_load3p method)": [[278, "mp.dme_load3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_load3p method)": [[278, "mp.dme_load3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load3p method)": [[278, "mp.dme_load3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load3p method)": [[278, "mp.dme_load3p.pp_have_section_sum"]], "update_status() (mp.dme_load3p method)": [[278, "mp.dme_load3p.update_status"]], "dme_load3p_opf (class in mp)": [[279, "mp.dme_load3p_opf"]], "dme_load_cpf (class in mp)": [[280, "mp.dme_load_cpf"]], "export_vars() (mp.dme_load_cpf method)": [[280, "mp.dme_load_cpf.export_vars"]], "parameterized() (mp.dme_load_cpf method)": [[280, "mp.dme_load_cpf.parameterized"]], "dme_load_opf (class in mp)": [[281, "mp.dme_load_opf"]], "build_params() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.build_params"]], "dme_reserve_gen (class in mp)": [[282, "mp.dme_reserve_gen"]], "export_vars() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.export_vars_offline_val"]], "gen (mp.dme_reserve_gen attribute)": [[282, "mp.dme_reserve_gen.gen"]], "label() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.label"]], "labels() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.labels"]], "main_table_var_names() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.main_table_var_names"]], "name() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.name"]], "pp_binding_rows_lim() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_binding_rows_lim"]], "pp_data_row_det() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_data_row_lim"]], "pp_data_sum() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_get_headers_lim"]], "pp_have_section_det() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_have_section_det"]], "pp_have_section_lim() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_have_section_lim"]], "pp_have_section_sum() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.pp_have_section_sum"]], "r_ub (mp.dme_reserve_gen attribute)": [[282, "mp.dme_reserve_gen.r_ub"]], "update_status() (mp.dme_reserve_gen method)": [[282, "mp.dme_reserve_gen.update_status"]], "build_params() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.build_params"]], "dme_reserve_zone (class in mp)": [[283, "mp.dme_reserve_zone"]], "export_vars() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.export_vars_offline_val"]], "label() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.label"]], "labels() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.labels"]], "main_table_var_names() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.main_table_var_names"]], "name() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.name"]], "pp_data_row_det() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.pp_have_section_det"]], "req (mp.dme_reserve_zone attribute)": [[283, "mp.dme_reserve_zone.req"]], "update_status() (mp.dme_reserve_zone method)": [[283, "mp.dme_reserve_zone.update_status"]], "zones (mp.dme_reserve_zone attribute)": [[283, "mp.dme_reserve_zone.zones"]], "ctol (mp.dme_shared_opf attribute)": [[284, "mp.dme_shared_opf.ctol"]], "dme_shared_opf (class in mp)": [[284, "mp.dme_shared_opf"]], "pp_binding_rows_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_binding_rows_lim"]], "pp_data_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_data_lim"]], "pp_data_other() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_data_other"]], "pp_data_row_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_data_row_lim"]], "pp_get_footers_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_get_footers_lim"]], "pp_get_footers_other() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_get_footers_other"]], "pp_get_headers_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_get_headers_lim"]], "pp_get_headers_other() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_get_headers_other"]], "pp_get_title_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_have_section_lim"]], "pp_have_section_other() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_have_section_other"]], "pp_rows_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_rows_lim"]], "pp_rows_other() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_rows_other"]], "pp_set_tols_lim() (mp.dme_shared_opf method)": [[284, "mp.dme_shared_opf.pp_set_tols_lim"]], "ptol (mp.dme_shared_opf attribute)": [[284, "mp.dme_shared_opf.ptol"]], "bs (mp.dme_shunt attribute)": [[285, "mp.dme_shunt.bs"]], "build_params() (mp.dme_shunt method)": [[285, "mp.dme_shunt.build_params"]], "bus (mp.dme_shunt attribute)": [[285, "mp.dme_shunt.bus"]], "count() (mp.dme_shunt method)": [[285, "mp.dme_shunt.count"]], "cxn_idx_prop() (mp.dme_shunt method)": [[285, "mp.dme_shunt.cxn_idx_prop"]], "cxn_type() (mp.dme_shunt method)": [[285, "mp.dme_shunt.cxn_type"]], "dme_shunt (class in mp)": [[285, "mp.dme_shunt"]], "gs (mp.dme_shunt attribute)": [[285, "mp.dme_shunt.gs"]], "label() (mp.dme_shunt method)": [[285, "mp.dme_shunt.label"]], "labels() (mp.dme_shunt method)": [[285, "mp.dme_shunt.labels"]], "main_table_var_names() (mp.dme_shunt method)": [[285, "mp.dme_shunt.main_table_var_names"]], "name() (mp.dme_shunt method)": [[285, "mp.dme_shunt.name"]], "pp_data_row_det() (mp.dme_shunt method)": [[285, "mp.dme_shunt.pp_data_row_det"]], "pp_data_sum() (mp.dme_shunt method)": [[285, "mp.dme_shunt.pp_data_sum"]], "pp_get_footers_det() (mp.dme_shunt method)": [[285, "mp.dme_shunt.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_shunt method)": [[285, "mp.dme_shunt.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_shunt method)": [[285, "mp.dme_shunt.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_shunt method)": [[285, "mp.dme_shunt.pp_have_section_sum"]], "update_status() (mp.dme_shunt method)": [[285, "mp.dme_shunt.update_status"]], "dme_shunt_cpf (class in mp)": [[286, "mp.dme_shunt_cpf"]], "export_vars() (mp.dme_shunt_cpf method)": [[286, "mp.dme_shunt_cpf.export_vars"]], "parameterized() (mp.dme_shunt_cpf method)": [[286, "mp.dme_shunt_cpf.parameterized"]], "dme_shunt_opf (class in mp)": [[287, "mp.dme_shunt_opf"]], "build_params() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.build_params"]], "cxn_idx_prop() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.cxn_idx_prop"]], "cxn_type() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.cxn_type"]], "dme_xfmr3p (class in mp)": [[288, "mp.dme_xfmr3p"]], "fbus (mp.dme_xfmr3p attribute)": [[288, "mp.dme_xfmr3p.fbus"]], "initialize() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.initialize"]], "label() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.label"]], "labels() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.labels"]], "main_table_var_names() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.main_table_var_names"]], "name() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.name"]], "pp_data_row_det() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.pp_have_section_sum"]], "pretty_print() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.pretty_print"]], "r (mp.dme_xfmr3p attribute)": [[288, "mp.dme_xfmr3p.r"]], "tbus (mp.dme_xfmr3p attribute)": [[288, "mp.dme_xfmr3p.tbus"]], "update_status() (mp.dme_xfmr3p method)": [[288, "mp.dme_xfmr3p.update_status"]], "x (mp.dme_xfmr3p attribute)": [[288, "mp.dme_xfmr3p.x"]], "dme_xfmr3p_opf (class in mp)": [[289, "mp.dme_xfmr3p_opf"]], "element_classes (mp.element_container attribute)": [[290, "mp.element_container.element_classes"]], "element_container (class in mp)": [[290, "mp.element_container"]], "elements (mp.element_container attribute)": [[290, "mp.element_container.elements"]], "modify_element_classes() (mp.element_container method)": [[290, "mp.element_container.modify_element_classes"]], "data_model_class() (mp.extension method)": [[291, "mp.extension.data_model_class"]], "dm_converter_class() (mp.extension method)": [[291, "mp.extension.dm_converter_class"]], "dm_element_classes() (mp.extension method)": [[291, "mp.extension.dm_element_classes"]], "dmc_element_classes() (mp.extension method)": [[291, "mp.extension.dmc_element_classes"]], "extension (class in mp)": [[291, "mp.extension"]], "math_model_class() (mp.extension method)": [[291, "mp.extension.math_model_class"]], "mm_element_classes() (mp.extension method)": [[291, "mp.extension.mm_element_classes"]], "network_model_class() (mp.extension method)": [[291, "mp.extension.network_model_class"]], "nm_element_classes() (mp.extension method)": [[291, "mp.extension.nm_element_classes"]], "task_class() (mp.extension method)": [[291, "mp.extension.task_class"]], "find_form_class() (mp.form method)": [[292, "mp.form.find_form_class"]], "form (class in mp)": [[292, "mp.form"]], "form_name() (mp.form method)": [[292, "mp.form.form_name"]], "form_tag() (mp.form method)": [[292, "mp.form.form_tag"]], "get_params() (mp.form method)": [[292, "mp.form.get_params"]], "model_params() (mp.form method)": [[292, "mp.form.model_params"]], "model_vvars() (mp.form method)": [[292, "mp.form.model_vvars"]], "model_zvars() (mp.form method)": [[292, "mp.form.model_zvars"]], "l (mp.form_ac attribute)": [[293, "mp.form_ac.L"]], "m (mp.form_ac attribute)": [[293, "mp.form_ac.M"]], "n (mp.form_ac attribute)": [[293, "mp.form_ac.N"]], "y (mp.form_ac attribute)": [[293, "mp.form_ac.Y"]], "aux_data_va_vm() (mp.form_ac method)": [[293, "mp.form_ac.aux_data_va_vm"]], "form_ac (class in mp)": [[293, "mp.form_ac"]], "i (mp.form_ac attribute)": [[293, "mp.form_ac.i"]], "inln (mp.form_ac attribute)": [[293, "mp.form_ac.inln"]], "inln_hess (mp.form_ac attribute)": [[293, "mp.form_ac.inln_hess"]], "model_params() (mp.form_ac method)": [[293, "mp.form_ac.model_params"]], "model_zvars() (mp.form_ac method)": [[293, "mp.form_ac.model_zvars"]], "param_ncols (mp.form_ac attribute)": [[293, "mp.form_ac.param_ncols"]], "port_active_power2_lim_fcn() (mp.form_ac method)": [[293, "mp.form_ac.port_active_power2_lim_fcn"]], "port_active_power2_lim_hess() (mp.form_ac method)": [[293, "mp.form_ac.port_active_power2_lim_hess"]], "port_active_power_lim_fcn() (mp.form_ac method)": [[293, "mp.form_ac.port_active_power_lim_fcn"]], "port_active_power_lim_hess() (mp.form_ac method)": [[293, "mp.form_ac.port_active_power_lim_hess"]], "port_apparent_power_lim_fcn() (mp.form_ac method)": [[293, "mp.form_ac.port_apparent_power_lim_fcn"]], "port_apparent_power_lim_hess() (mp.form_ac method)": [[293, "mp.form_ac.port_apparent_power_lim_hess"]], "port_current_lim_fcn() (mp.form_ac method)": [[293, "mp.form_ac.port_current_lim_fcn"]], "port_current_lim_hess() (mp.form_ac method)": [[293, "mp.form_ac.port_current_lim_hess"]], "port_inj_current() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_current"]], "port_inj_current_hess() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_current_hess"]], "port_inj_current_hess_v() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_current_jac"]], "port_inj_power() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_power"]], "port_inj_power_hess() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_power_hess"]], "port_inj_power_hess_v() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_ac method)": [[293, "mp.form_ac.port_inj_power_jac"]], "s (mp.form_ac attribute)": [[293, "mp.form_ac.s"]], "snln (mp.form_ac attribute)": [[293, "mp.form_ac.snln"]], "snln_hess (mp.form_ac attribute)": [[293, "mp.form_ac.snln_hess"]], "aux_data_va_vm() (mp.form_acc method)": [[294, "mp.form_acc.aux_data_va_vm"]], "form_acc (class in mp)": [[294, "mp.form_acc"]], "form_name() (mp.form_acc method)": [[294, "mp.form_acc.form_name"]], "form_tag() (mp.form_acc method)": [[294, "mp.form_acc.form_tag"]], "model_vvars() (mp.form_acc method)": [[294, "mp.form_acc.model_vvars"]], "port_inj_current_hess_v() (mp.form_acc method)": [[294, "mp.form_acc.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acc method)": [[294, "mp.form_acc.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acc method)": [[294, "mp.form_acc.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acc method)": [[294, "mp.form_acc.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acc method)": [[294, "mp.form_acc.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acc method)": [[294, "mp.form_acc.port_inj_power_jac"]], "va_fcn() (mp.form_acc method)": [[294, "mp.form_acc.va_fcn"]], "va_hess() (mp.form_acc method)": [[294, "mp.form_acc.va_hess"]], "vm2_fcn() (mp.form_acc method)": [[294, "mp.form_acc.vm2_fcn"]], "vm2_hess() (mp.form_acc method)": [[294, "mp.form_acc.vm2_hess"]], "aux_data_va_vm() (mp.form_acp method)": [[295, "mp.form_acp.aux_data_va_vm"]], "form_acp (class in mp)": [[295, "mp.form_acp"]], "form_name() (mp.form_acp method)": [[295, "mp.form_acp.form_name"]], "form_tag() (mp.form_acp method)": [[295, "mp.form_acp.form_tag"]], "model_vvars() (mp.form_acp method)": [[295, "mp.form_acp.model_vvars"]], "port_inj_current_hess_v() (mp.form_acp method)": [[295, "mp.form_acp.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acp method)": [[295, "mp.form_acp.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acp method)": [[295, "mp.form_acp.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acp method)": [[295, "mp.form_acp.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acp method)": [[295, "mp.form_acp.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acp method)": [[295, "mp.form_acp.port_inj_power_jac"]], "b (mp.form_dc attribute)": [[296, "mp.form_dc.B"]], "k (mp.form_dc attribute)": [[296, "mp.form_dc.K"]], "form_dc (class in mp)": [[296, "mp.form_dc"]], "form_name() (mp.form_dc method)": [[296, "mp.form_dc.form_name"]], "form_tag() (mp.form_dc method)": [[296, "mp.form_dc.form_tag"]], "model_params() (mp.form_dc method)": [[296, "mp.form_dc.model_params"]], "model_vvars() (mp.form_dc method)": [[296, "mp.form_dc.model_vvars"]], "model_zvars() (mp.form_dc method)": [[296, "mp.form_dc.model_zvars"]], "p (mp.form_dc attribute)": [[296, "mp.form_dc.p"]], "param_ncols (mp.form_dc attribute)": [[296, "mp.form_dc.param_ncols"]], "port_inj_power() (mp.form_dc method)": [[296, "mp.form_dc.port_inj_power"]], "add_elements() (mp.mapped_array method)": [[297, "mp.mapped_array.add_elements"]], "add_names() (mp.mapped_array method)": [[297, "mp.mapped_array.add_names"]], "copy() (mp.mapped_array method)": [[297, "mp.mapped_array.copy"]], "delete_elements() (mp.mapped_array method)": [[297, "mp.mapped_array.delete_elements"]], "display() (mp.mapped_array method)": [[297, "mp.mapped_array.display"]], "has_name() (mp.mapped_array method)": [[297, "mp.mapped_array.has_name"]], "length() (mp.mapped_array method)": [[297, "mp.mapped_array.length"]], "mapped_array (class in mp)": [[297, "mp.mapped_array"]], "mapped_array() (mp.mapped_array method)": [[297, "mp.mapped_array.mapped_array"]], "name2idx() (mp.mapped_array method)": [[297, "mp.mapped_array.name2idx"]], "size() (mp.mapped_array method)": [[297, "mp.mapped_array.size"]], "subsasgn() (mp.mapped_array method)": [[297, "mp.mapped_array.subsasgn"]], "subsref() (mp.mapped_array method)": [[297, "mp.mapped_array.subsref"]], "add_aux_data() (mp.math_model method)": [[298, "mp.math_model.add_aux_data"]], "add_constraints() (mp.math_model method)": [[298, "mp.math_model.add_constraints"]], "add_costs() (mp.math_model method)": [[298, "mp.math_model.add_costs"]], "add_node_balance_constraints() (mp.math_model method)": [[298, "mp.math_model.add_node_balance_constraints"]], "add_system_constraints() (mp.math_model method)": [[298, "mp.math_model.add_system_constraints"]], "add_system_costs() (mp.math_model method)": [[298, "mp.math_model.add_system_costs"]], "add_system_vars() (mp.math_model method)": [[298, "mp.math_model.add_system_vars"]], "add_vars() (mp.math_model method)": [[298, "mp.math_model.add_vars"]], "aux_data (mp.math_model attribute)": [[298, "mp.math_model.aux_data"]], "build() (mp.math_model method)": [[298, "mp.math_model.build"]], "build_base_aux_data() (mp.math_model method)": [[298, "mp.math_model.build_base_aux_data"]], "data_model_update() (mp.math_model method)": [[298, "mp.math_model.data_model_update"]], "display() (mp.math_model method)": [[298, "mp.math_model.display"]], "form_name() (mp.math_model method)": [[298, "mp.math_model.form_name"]], "form_tag() (mp.math_model method)": [[298, "mp.math_model.form_tag"]], "math_model (class in mp)": [[298, "mp.math_model"]], "network_model_x_soln() (mp.math_model method)": [[298, "mp.math_model.network_model_x_soln"]], "solve_opts() (mp.math_model method)": [[298, "mp.math_model.solve_opts"]], "task_name() (mp.math_model method)": [[298, "mp.math_model.task_name"]], "task_tag() (mp.math_model method)": [[298, "mp.math_model.task_tag"]], "update_nm_vars() (mp.math_model method)": [[298, "mp.math_model.update_nm_vars"]], "math_model_cpf_acc (class in mp)": [[299, "mp.math_model_cpf_acc"]], "math_model_cpf_acc() (mp.math_model_cpf_acc method)": [[299, "mp.math_model_cpf_acc.math_model_cpf_acc"]], "add_node_balance_constraints() (mp.math_model_cpf_acci method)": [[300, "mp.math_model_cpf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acci method)": [[300, "mp.math_model_cpf_acci.form_name"]], "form_tag() (mp.math_model_cpf_acci method)": [[300, "mp.math_model_cpf_acci.form_tag"]], "math_model_cpf_acci (class in mp)": [[300, "mp.math_model_cpf_acci"]], "add_node_balance_constraints() (mp.math_model_cpf_accs method)": [[301, "mp.math_model_cpf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_accs method)": [[301, "mp.math_model_cpf_accs.form_name"]], "form_tag() (mp.math_model_cpf_accs method)": [[301, "mp.math_model_cpf_accs.form_tag"]], "math_model_cpf_accs (class in mp)": [[301, "mp.math_model_cpf_accs"]], "callback_vlim() (mp.math_model_cpf_acp method)": [[302, "mp.math_model_cpf_acp.callback_vlim"]], "event_vlim() (mp.math_model_cpf_acp method)": [[302, "mp.math_model_cpf_acp.event_vlim"]], "math_model_cpf_acp (class in mp)": [[302, "mp.math_model_cpf_acp"]], "math_model_cpf_acp() (mp.math_model_cpf_acp method)": [[302, "mp.math_model_cpf_acp.math_model_cpf_acp"]], "add_node_balance_constraints() (mp.math_model_cpf_acpi method)": [[303, "mp.math_model_cpf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acpi method)": [[303, "mp.math_model_cpf_acpi.form_name"]], "form_tag() (mp.math_model_cpf_acpi method)": [[303, "mp.math_model_cpf_acpi.form_tag"]], "math_model_cpf_acpi (class in mp)": [[303, "mp.math_model_cpf_acpi"]], "add_node_balance_constraints() (mp.math_model_cpf_acps method)": [[304, "mp.math_model_cpf_acps.add_node_balance_constraints"]], "expand_z_warmstart() (mp.math_model_cpf_acps method)": [[304, "mp.math_model_cpf_acps.expand_z_warmstart"]], "form_name() (mp.math_model_cpf_acps method)": [[304, "mp.math_model_cpf_acps.form_name"]], "form_tag() (mp.math_model_cpf_acps method)": [[304, "mp.math_model_cpf_acps.form_tag"]], "math_model_cpf_acps (class in mp)": [[304, "mp.math_model_cpf_acps"]], "solve_opts_warmstart() (mp.math_model_cpf_acps method)": [[304, "mp.math_model_cpf_acps.solve_opts_warmstart"]], "add_system_vars() (mp.math_model_opf method)": [[305, "mp.math_model_opf.add_system_vars"]], "build_aux_data() (mp.math_model_opf method)": [[305, "mp.math_model_opf.build_aux_data"]], "interior_va() (mp.math_model_opf method)": [[305, "mp.math_model_opf.interior_va"]], "interior_x0() (mp.math_model_opf method)": [[305, "mp.math_model_opf.interior_x0"]], "math_model_opf (class in mp)": [[305, "mp.math_model_opf"]], "task_name() (mp.math_model_opf method)": [[305, "mp.math_model_opf.task_name"]], "task_tag() (mp.math_model_opf method)": [[305, "mp.math_model_opf.task_tag"]], "math_model_opf_ac (class in mp)": [[306, "mp.math_model_opf_ac"]], "nodal_current_balance_fcn() (mp.math_model_opf_ac method)": [[306, "mp.math_model_opf_ac.nodal_current_balance_fcn"]], "nodal_current_balance_hess() (mp.math_model_opf_ac method)": [[306, "mp.math_model_opf_ac.nodal_current_balance_hess"]], "nodal_power_balance_fcn() (mp.math_model_opf_ac method)": [[306, "mp.math_model_opf_ac.nodal_power_balance_fcn"]], "nodal_power_balance_hess() (mp.math_model_opf_ac method)": [[306, "mp.math_model_opf_ac.nodal_power_balance_hess"]], "solve_opts() (mp.math_model_opf_ac method)": [[306, "mp.math_model_opf_ac.solve_opts"]], "convert_x_m2n() (mp.math_model_opf_acc method)": [[307, "mp.math_model_opf_acc.convert_x_m2n"]], "interior_va() (mp.math_model_opf_acc method)": [[307, "mp.math_model_opf_acc.interior_va"]], "math_model_opf_acc (class in mp)": [[307, "mp.math_model_opf_acc"]], "math_model_opf_acc() (mp.math_model_opf_acc method)": [[307, "mp.math_model_opf_acc.math_model_opf_acc"]], "add_node_balance_constraints() (mp.math_model_opf_acci method)": [[308, "mp.math_model_opf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acci method)": [[308, "mp.math_model_opf_acci.form_name"]], "form_tag() (mp.math_model_opf_acci method)": [[308, "mp.math_model_opf_acci.form_tag"]], "math_model_opf_acci (class in mp)": [[308, "mp.math_model_opf_acci"]], "node_power_balance_prices() (mp.math_model_opf_acci method)": [[308, "mp.math_model_opf_acci.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.add_vars"]], "build() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.build"]], "def_set_types() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.legacy_user_var_names"]], "math_model_opf_acci_legacy (class in mp)": [[309, "mp.math_model_opf_acci_legacy"]], "math_model_opf_acci_legacy() (mp.math_model_opf_acci_legacy method)": [[309, "mp.math_model_opf_acci_legacy.math_model_opf_acci_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_accs method)": [[310, "mp.math_model_opf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_accs method)": [[310, "mp.math_model_opf_accs.form_name"]], "form_tag() (mp.math_model_opf_accs method)": [[310, "mp.math_model_opf_accs.form_tag"]], "math_model_opf_accs (class in mp)": [[310, "mp.math_model_opf_accs"]], "node_power_balance_prices() (mp.math_model_opf_accs method)": [[310, "mp.math_model_opf_accs.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.add_vars"]], "build() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.build"]], "def_set_types() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.legacy_user_var_names"]], "math_model_opf_accs_legacy (class in mp)": [[311, "mp.math_model_opf_accs_legacy"]], "math_model_opf_accs_legacy() (mp.math_model_opf_accs_legacy method)": [[311, "mp.math_model_opf_accs_legacy.math_model_opf_accs_legacy"]], "convert_x_m2n() (mp.math_model_opf_acp method)": [[312, "mp.math_model_opf_acp.convert_x_m2n"]], "math_model_opf_acp (class in mp)": [[312, "mp.math_model_opf_acp"]], "math_model_opf_acp() (mp.math_model_opf_acp method)": [[312, "mp.math_model_opf_acp.math_model_opf_acp"]], "add_node_balance_constraints() (mp.math_model_opf_acpi method)": [[313, "mp.math_model_opf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acpi method)": [[313, "mp.math_model_opf_acpi.form_name"]], "form_tag() (mp.math_model_opf_acpi method)": [[313, "mp.math_model_opf_acpi.form_tag"]], "math_model_opf_acpi (class in mp)": [[313, "mp.math_model_opf_acpi"]], "node_power_balance_prices() (mp.math_model_opf_acpi method)": [[313, "mp.math_model_opf_acpi.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.add_vars"]], "build() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.build"]], "def_set_types() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.legacy_user_var_names"]], "math_model_opf_acpi_legacy (class in mp)": [[314, "mp.math_model_opf_acpi_legacy"]], "math_model_opf_acpi_legacy() (mp.math_model_opf_acpi_legacy method)": [[314, "mp.math_model_opf_acpi_legacy.math_model_opf_acpi_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_acps method)": [[315, "mp.math_model_opf_acps.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acps method)": [[315, "mp.math_model_opf_acps.form_name"]], "form_tag() (mp.math_model_opf_acps method)": [[315, "mp.math_model_opf_acps.form_tag"]], "math_model_opf_acps (class in mp)": [[315, "mp.math_model_opf_acps"]], "node_power_balance_prices() (mp.math_model_opf_acps method)": [[315, "mp.math_model_opf_acps.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.add_vars"]], "build() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.build"]], "def_set_types() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.legacy_user_var_names"]], "math_model_opf_acps_legacy (class in mp)": [[316, "mp.math_model_opf_acps_legacy"]], "math_model_opf_acps_legacy() (mp.math_model_opf_acps_legacy method)": [[316, "mp.math_model_opf_acps_legacy.math_model_opf_acps_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_dc method)": [[317, "mp.math_model_opf_dc.add_node_balance_constraints"]], "convert_x_m2n() (mp.math_model_opf_dc method)": [[317, "mp.math_model_opf_dc.convert_x_m2n"]], "form_name() (mp.math_model_opf_dc method)": [[317, "mp.math_model_opf_dc.form_name"]], "form_tag() (mp.math_model_opf_dc method)": [[317, "mp.math_model_opf_dc.form_tag"]], "math_model_opf_dc (class in mp)": [[317, "mp.math_model_opf_dc"]], "math_model_opf_dc() (mp.math_model_opf_dc method)": [[317, "mp.math_model_opf_dc.math_model_opf_dc"]], "solve_opts() (mp.math_model_opf_dc method)": [[317, "mp.math_model_opf_dc.solve_opts"]], "add_named_set() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.add_vars"]], "build() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.build"]], "def_set_types() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.legacy_user_var_names"]], "math_model_opf_dc_legacy (class in mp)": [[318, "mp.math_model_opf_dc_legacy"]], "math_model_opf_dc_legacy() (mp.math_model_opf_dc_legacy method)": [[318, "mp.math_model_opf_dc_legacy.math_model_opf_dc_legacy"]], "add_costs() (mp.math_model_pf method)": [[319, "mp.math_model_pf.add_costs"]], "add_system_vars() (mp.math_model_pf method)": [[319, "mp.math_model_pf.add_system_vars"]], "math_model_pf (class in mp)": [[319, "mp.math_model_pf"]], "solve_opts() (mp.math_model_pf method)": [[319, "mp.math_model_pf.solve_opts"]], "task_name() (mp.math_model_pf method)": [[319, "mp.math_model_pf.task_name"]], "task_tag() (mp.math_model_pf method)": [[319, "mp.math_model_pf.task_tag"]], "math_model_pf_ac (class in mp)": [[320, "mp.math_model_pf_ac"]], "math_model_pf_ac() (mp.math_model_pf_ac method)": [[320, "mp.math_model_pf_ac.math_model_pf_ac"]], "add_node_balance_constraints() (mp.math_model_pf_acci method)": [[321, "mp.math_model_pf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acci method)": [[321, "mp.math_model_pf_acci.form_name"]], "form_tag() (mp.math_model_pf_acci method)": [[321, "mp.math_model_pf_acci.form_tag"]], "math_model_pf_acci (class in mp)": [[321, "mp.math_model_pf_acci"]], "add_node_balance_constraints() (mp.math_model_pf_accs method)": [[322, "mp.math_model_pf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_accs method)": [[322, "mp.math_model_pf_accs.form_name"]], "form_tag() (mp.math_model_pf_accs method)": [[322, "mp.math_model_pf_accs.form_tag"]], "math_model_pf_accs (class in mp)": [[322, "mp.math_model_pf_accs"]], "add_node_balance_constraints() (mp.math_model_pf_acpi method)": [[323, "mp.math_model_pf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acpi method)": [[323, "mp.math_model_pf_acpi.form_name"]], "form_tag() (mp.math_model_pf_acpi method)": [[323, "mp.math_model_pf_acpi.form_tag"]], "math_model_pf_acpi (class in mp)": [[323, "mp.math_model_pf_acpi"]], "add_node_balance_constraints() (mp.math_model_pf_acps method)": [[324, "mp.math_model_pf_acps.add_node_balance_constraints"]], "fd_jac_approx() (mp.math_model_pf_acps method)": [[324, "mp.math_model_pf_acps.fd_jac_approx"]], "fdpf_b_matrix_models() (mp.math_model_pf_acps method)": [[324, "mp.math_model_pf_acps.fdpf_B_matrix_models"]], "form_name() (mp.math_model_pf_acps method)": [[324, "mp.math_model_pf_acps.form_name"]], "form_tag() (mp.math_model_pf_acps method)": [[324, "mp.math_model_pf_acps.form_tag"]], "gs_x_update() (mp.math_model_pf_acps method)": [[324, "mp.math_model_pf_acps.gs_x_update"]], "math_model_pf_acps (class in mp)": [[324, "mp.math_model_pf_acps"]], "zg_x_update() (mp.math_model_pf_acps method)": [[324, "mp.math_model_pf_acps.zg_x_update"]], "add_node_balance_constraints() (mp.math_model_pf_dc method)": [[325, "mp.math_model_pf_dc.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_dc method)": [[325, "mp.math_model_pf_dc.form_name"]], "form_tag() (mp.math_model_pf_dc method)": [[325, "mp.math_model_pf_dc.form_tag"]], "math_model_pf_dc (class in mp)": [[325, "mp.math_model_pf_dc"]], "math_model_pf_dc() (mp.math_model_pf_dc method)": [[325, "mp.math_model_pf_dc.math_model_pf_dc"]], "solve_opts() (mp.math_model_pf_dc method)": [[325, "mp.math_model_pf_dc.solve_opts"]], "add_constraints() (mp.mm_element method)": [[326, "mp.mm_element.add_constraints"]], "add_costs() (mp.mm_element method)": [[326, "mp.mm_element.add_costs"]], "add_vars() (mp.mm_element method)": [[326, "mp.mm_element.add_vars"]], "data_model_element() (mp.mm_element method)": [[326, "mp.mm_element.data_model_element"]], "data_model_update() (mp.mm_element method)": [[326, "mp.mm_element.data_model_update"]], "data_model_update_off() (mp.mm_element method)": [[326, "mp.mm_element.data_model_update_off"]], "data_model_update_on() (mp.mm_element method)": [[326, "mp.mm_element.data_model_update_on"]], "mm_element (class in mp)": [[326, "mp.mm_element"]], "name() (mp.mm_element method)": [[326, "mp.mm_element.name"]], "network_model_element() (mp.mm_element method)": [[326, "mp.mm_element.network_model_element"]], "add_legacy_cost() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.add_legacy_cost"]], "add_legacy_user_constraints() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.add_legacy_user_constraints"]], "add_legacy_user_constraints_ac() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.add_legacy_user_constraints_ac"]], "add_legacy_user_costs() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.add_legacy_user_costs"]], "add_legacy_user_vars() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.add_legacy_user_vars"]], "build_legacy() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.build_legacy"]], "def_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.def_set_types_legacy"]], "eval_legacy_cost() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.eval_legacy_cost"]], "get_mpc() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.get_mpc"]], "init_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.init_set_types_legacy"]], "mm_shared_opf_legacy (class in mp)": [[327, "mp.mm_shared_opf_legacy"]], "params_legacy_cost() (mp.mm_shared_opf_legacy method)": [[327, "mp.mm_shared_opf_legacy.params_legacy_cost"]], "build_aux_data() (mp.mm_shared_pfcpf method)": [[328, "mp.mm_shared_pfcpf.build_aux_data"]], "mm_shared_pfcpf (class in mp)": [[328, "mp.mm_shared_pfcpf"]], "add_system_varset_pf() (mp.mm_shared_pfcpf_ac method)": [[329, "mp.mm_shared_pfcpf_ac.add_system_varset_pf"]], "mm_shared_pfcpf_ac (class in mp)": [[329, "mp.mm_shared_pfcpf_ac"]], "update_z() (mp.mm_shared_pfcpf_ac method)": [[329, "mp.mm_shared_pfcpf_ac.update_z"]], "build_aux_data_i() (mp.mm_shared_pfcpf_ac_i method)": [[330, "mp.mm_shared_pfcpf_ac_i.build_aux_data_i"]], "mm_shared_pfcpf_ac_i (class in mp)": [[330, "mp.mm_shared_pfcpf_ac_i"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acc method)": [[331, "mp.mm_shared_pfcpf_acc.convert_x_m2n"]], "mm_shared_pfcpf_acc (class in mp)": [[331, "mp.mm_shared_pfcpf_acc"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acci method)": [[332, "mp.mm_shared_pfcpf_acci.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acci method)": [[332, "mp.mm_shared_pfcpf_acci.build_aux_data"]], "mm_shared_pfcpf_acci (class in mp)": [[332, "mp.mm_shared_pfcpf_acci"]], "node_balance_equations() (mp.mm_shared_pfcpf_acci method)": [[332, "mp.mm_shared_pfcpf_acci.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_accs method)": [[333, "mp.mm_shared_pfcpf_accs.add_system_vars_pf"]], "mm_shared_pfcpf_accs (class in mp)": [[333, "mp.mm_shared_pfcpf_accs"]], "node_balance_equations() (mp.mm_shared_pfcpf_accs method)": [[333, "mp.mm_shared_pfcpf_accs.node_balance_equations"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acp method)": [[334, "mp.mm_shared_pfcpf_acp.convert_x_m2n"]], "mm_shared_pfcpf_acp (class in mp)": [[334, "mp.mm_shared_pfcpf_acp"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acpi method)": [[335, "mp.mm_shared_pfcpf_acpi.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acpi method)": [[335, "mp.mm_shared_pfcpf_acpi.build_aux_data"]], "mm_shared_pfcpf_acpi (class in mp)": [[335, "mp.mm_shared_pfcpf_acpi"]], "node_balance_equations() (mp.mm_shared_pfcpf_acpi method)": [[335, "mp.mm_shared_pfcpf_acpi.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acps method)": [[336, "mp.mm_shared_pfcpf_acps.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acps method)": [[336, "mp.mm_shared_pfcpf_acps.build_aux_data"]], "mm_shared_pfcpf_acps (class in mp)": [[336, "mp.mm_shared_pfcpf_acps"]], "node_balance_equations() (mp.mm_shared_pfcpf_acps method)": [[336, "mp.mm_shared_pfcpf_acps.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_dc method)": [[337, "mp.mm_shared_pfcpf_dc.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_dc method)": [[337, "mp.mm_shared_pfcpf_dc.build_aux_data"]], "convert_x_m2n() (mp.mm_shared_pfcpf_dc method)": [[337, "mp.mm_shared_pfcpf_dc.convert_x_m2n"]], "mm_shared_pfcpf_dc (class in mp)": [[337, "mp.mm_shared_pfcpf_dc"]], "update_z() (mp.mm_shared_pfcpf_dc method)": [[337, "mp.mm_shared_pfcpf_dc.update_z"]], "mme_branch (class in mp)": [[338, "mp.mme_branch"]], "name() (mp.mme_branch method)": [[338, "mp.mme_branch.name"]], "ang_diff_params() (mp.mme_branch_opf method)": [[339, "mp.mme_branch_opf.ang_diff_params"]], "ang_diff_prices() (mp.mme_branch_opf method)": [[339, "mp.mme_branch_opf.ang_diff_prices"]], "mme_branch_opf (class in mp)": [[339, "mp.mme_branch_opf"]], "add_constraints() (mp.mme_branch_opf_ac method)": [[340, "mp.mme_branch_opf_ac.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_ac method)": [[340, "mp.mme_branch_opf_ac.data_model_update_on"]], "mme_branch_opf_ac (class in mp)": [[340, "mp.mme_branch_opf_ac"]], "add_constraints() (mp.mme_branch_opf_acc method)": [[341, "mp.mme_branch_opf_acc.add_constraints"]], "ang_diff_prices() (mp.mme_branch_opf_acc method)": [[341, "mp.mme_branch_opf_acc.ang_diff_prices"]], "mme_branch_opf_acc (class in mp)": [[341, "mp.mme_branch_opf_acc"]], "add_constraints() (mp.mme_branch_opf_acp method)": [[342, "mp.mme_branch_opf_acp.add_constraints"]], "mme_branch_opf_acp (class in mp)": [[342, "mp.mme_branch_opf_acp"]], "add_constraints() (mp.mme_branch_opf_dc method)": [[343, "mp.mme_branch_opf_dc.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_dc method)": [[343, "mp.mme_branch_opf_dc.data_model_update_on"]], "mme_branch_opf_dc (class in mp)": [[343, "mp.mme_branch_opf_dc"]], "data_model_update_on() (mp.mme_branch_pf_ac method)": [[344, "mp.mme_branch_pf_ac.data_model_update_on"]], "mme_branch_pf_ac (class in mp)": [[344, "mp.mme_branch_pf_ac"]], "data_model_update_on() (mp.mme_branch_pf_dc method)": [[345, "mp.mme_branch_pf_dc.data_model_update_on"]], "mme_branch_pf_dc (class in mp)": [[345, "mp.mme_branch_pf_dc"]], "mme_bus (class in mp)": [[346, "mp.mme_bus"]], "name() (mp.mme_bus method)": [[346, "mp.mme_bus.name"]], "data_model_update_on() (mp.mme_bus3p method)": [[347, "mp.mme_bus3p.data_model_update_on"]], "mme_bus3p (class in mp)": [[347, "mp.mme_bus3p"]], "name() (mp.mme_bus3p method)": [[347, "mp.mme_bus3p.name"]], "interior_x0() (mp.mme_bus3p_opf_acc method)": [[348, "mp.mme_bus3p_opf_acc.interior_x0"]], "mme_bus3p_opf_acc (class in mp)": [[348, "mp.mme_bus3p_opf_acc"]], "interior_x0() (mp.mme_bus3p_opf_acp method)": [[349, "mp.mme_bus3p_opf_acp.interior_x0"]], "mme_bus3p_opf_acp (class in mp)": [[349, "mp.mme_bus3p_opf_acp"]], "interior_vm() (mp.mme_bus_opf_ac method)": [[350, "mp.mme_bus_opf_ac.interior_vm"]], "mme_bus_opf_ac (class in mp)": [[350, "mp.mme_bus_opf_ac"]], "add_constraints() (mp.mme_bus_opf_acc method)": [[351, "mp.mme_bus_opf_acc.add_constraints"]], "data_model_update_on() (mp.mme_bus_opf_acc method)": [[351, "mp.mme_bus_opf_acc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acc method)": [[351, "mp.mme_bus_opf_acc.interior_x0"]], "mme_bus_opf_acc (class in mp)": [[351, "mp.mme_bus_opf_acc"]], "data_model_update_on() (mp.mme_bus_opf_acp method)": [[352, "mp.mme_bus_opf_acp.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acp method)": [[352, "mp.mme_bus_opf_acp.interior_x0"]], "mme_bus_opf_acp (class in mp)": [[352, "mp.mme_bus_opf_acp"]], "data_model_update_on() (mp.mme_bus_opf_dc method)": [[353, "mp.mme_bus_opf_dc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_dc method)": [[353, "mp.mme_bus_opf_dc.interior_x0"]], "mme_bus_opf_dc (class in mp)": [[353, "mp.mme_bus_opf_dc"]], "data_model_update_on() (mp.mme_bus_pf_ac method)": [[354, "mp.mme_bus_pf_ac.data_model_update_on"]], "mme_bus_pf_ac (class in mp)": [[354, "mp.mme_bus_pf_ac"]], "data_model_update_on() (mp.mme_bus_pf_dc method)": [[355, "mp.mme_bus_pf_dc.data_model_update_on"]], "mme_bus_pf_dc (class in mp)": [[355, "mp.mme_bus_pf_dc"]], "mme_buslink (class in mp)": [[356, "mp.mme_buslink"]], "name() (mp.mme_buslink method)": [[356, "mp.mme_buslink.name"]], "interior_x0() (mp.mme_buslink_opf method)": [[357, "mp.mme_buslink_opf.interior_x0"]], "mme_buslink_opf (class in mp)": [[357, "mp.mme_buslink_opf"]], "add_constraints() (mp.mme_buslink_opf_acc method)": [[358, "mp.mme_buslink_opf_acc.add_constraints"]], "mme_buslink_opf_acc (class in mp)": [[358, "mp.mme_buslink_opf_acc"]], "va_fcn() (mp.mme_buslink_opf_acc method)": [[358, "mp.mme_buslink_opf_acc.va_fcn"]], "va_hess() (mp.mme_buslink_opf_acc method)": [[358, "mp.mme_buslink_opf_acc.va_hess"]], "vm2_fcn() (mp.mme_buslink_opf_acc method)": [[358, "mp.mme_buslink_opf_acc.vm2_fcn"]], "vm2_hess() (mp.mme_buslink_opf_acc method)": [[358, "mp.mme_buslink_opf_acc.vm2_hess"]], "add_constraints() (mp.mme_buslink_opf_acp method)": [[359, "mp.mme_buslink_opf_acp.add_constraints"]], "mme_buslink_opf_acp (class in mp)": [[359, "mp.mme_buslink_opf_acp"]], "add_constraints() (mp.mme_buslink_pf_ac method)": [[360, "mp.mme_buslink_pf_ac.add_constraints"]], "add_vars() (mp.mme_buslink_pf_ac method)": [[360, "mp.mme_buslink_pf_ac.add_vars"]], "mme_buslink_pf_ac (class in mp)": [[360, "mp.mme_buslink_pf_ac"]], "voltage_constraints() (mp.mme_buslink_pf_ac method)": [[360, "mp.mme_buslink_pf_ac.voltage_constraints"]], "add_constraints() (mp.mme_buslink_pf_acc method)": [[361, "mp.mme_buslink_pf_acc.add_constraints"]], "mme_buslink_pf_acc (class in mp)": [[361, "mp.mme_buslink_pf_acc"]], "pf_va_fcn() (mp.mme_buslink_pf_acc method)": [[361, "mp.mme_buslink_pf_acc.pf_va_fcn"]], "pf_vm_fcn() (mp.mme_buslink_pf_acc method)": [[361, "mp.mme_buslink_pf_acc.pf_vm_fcn"]], "add_constraints() (mp.mme_buslink_pf_acp method)": [[362, "mp.mme_buslink_pf_acp.add_constraints"]], "mme_buslink_pf_acp (class in mp)": [[362, "mp.mme_buslink_pf_acp"]], "mme_gen (class in mp)": [[363, "mp.mme_gen"]], "name() (mp.mme_gen method)": [[363, "mp.mme_gen.name"]], "data_model_update_on() (mp.mme_gen3p method)": [[364, "mp.mme_gen3p.data_model_update_on"]], "mme_gen3p (class in mp)": [[364, "mp.mme_gen3p"]], "name() (mp.mme_gen3p method)": [[364, "mp.mme_gen3p.name"]], "interior_x0() (mp.mme_gen3p_opf method)": [[365, "mp.mme_gen3p_opf.interior_x0"]], "mme_gen3p_opf (class in mp)": [[365, "mp.mme_gen3p_opf"]], "add_costs() (mp.mme_gen_opf method)": [[366, "mp.mme_gen_opf.add_costs"]], "add_vars() (mp.mme_gen_opf method)": [[366, "mp.mme_gen_opf.add_vars"]], "cost (mp.mme_gen_opf attribute)": [[366, "mp.mme_gen_opf.cost"]], "interior_x0() (mp.mme_gen_opf method)": [[366, "mp.mme_gen_opf.interior_x0"]], "mme_gen_opf (class in mp)": [[366, "mp.mme_gen_opf"]], "add_constraints() (mp.mme_gen_opf_ac method)": [[367, "mp.mme_gen_opf_ac.add_constraints"]], "add_costs() (mp.mme_gen_opf_ac method)": [[367, "mp.mme_gen_opf_ac.add_costs"]], "build_cost_params() (mp.mme_gen_opf_ac method)": [[367, "mp.mme_gen_opf_ac.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_ac method)": [[367, "mp.mme_gen_opf_ac.data_model_update_on"]], "disp_load_constant_pf_constraint() (mp.mme_gen_opf_ac method)": [[367, "mp.mme_gen_opf_ac.disp_load_constant_pf_constraint"]], "has_pq_cap() (mp.mme_gen_opf_ac method)": [[367, "mp.mme_gen_opf_ac.has_pq_cap"]], "mme_gen_opf_ac (class in mp)": [[367, "mp.mme_gen_opf_ac"]], "pq_capability_constraint() (mp.mme_gen_opf_ac method)": [[367, "mp.mme_gen_opf_ac.pq_capability_constraint"]], "add_constraints() (mp.mme_gen_opf_ac_oval method)": [[368, "mp.mme_gen_opf_ac_oval.add_constraints"]], "mme_gen_opf_ac_oval (class in mp)": [[368, "mp.mme_gen_opf_ac_oval"]], "oval_pq_capability_fcn() (mp.mme_gen_opf_ac_oval method)": [[368, "mp.mme_gen_opf_ac_oval.oval_pq_capability_fcn"]], "oval_pq_capability_hess() (mp.mme_gen_opf_ac_oval method)": [[368, "mp.mme_gen_opf_ac_oval.oval_pq_capability_hess"]], "add_constraints() (mp.mme_gen_opf_dc method)": [[369, "mp.mme_gen_opf_dc.add_constraints"]], "build_cost_params() (mp.mme_gen_opf_dc method)": [[369, "mp.mme_gen_opf_dc.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_dc method)": [[369, "mp.mme_gen_opf_dc.data_model_update_on"]], "mme_gen_opf_dc (class in mp)": [[369, "mp.mme_gen_opf_dc"]], "data_model_update_on() (mp.mme_gen_pf_ac method)": [[370, "mp.mme_gen_pf_ac.data_model_update_on"]], "mme_gen_pf_ac (class in mp)": [[370, "mp.mme_gen_pf_ac"]], "data_model_update_on() (mp.mme_gen_pf_dc method)": [[371, "mp.mme_gen_pf_dc.data_model_update_on"]], "mme_gen_pf_dc (class in mp)": [[371, "mp.mme_gen_pf_dc"]], "mme_legacy_dcline (class in mp)": [[372, "mp.mme_legacy_dcline"]], "name() (mp.mme_legacy_dcline method)": [[372, "mp.mme_legacy_dcline.name"]], "add_constraints() (mp.mme_legacy_dcline_opf method)": [[373, "mp.mme_legacy_dcline_opf.add_constraints"]], "add_costs() (mp.mme_legacy_dcline_opf method)": [[373, "mp.mme_legacy_dcline_opf.add_costs"]], "add_vars() (mp.mme_legacy_dcline_opf method)": [[373, "mp.mme_legacy_dcline_opf.add_vars"]], "build_cost_params() (mp.mme_legacy_dcline_opf method)": [[373, "mp.mme_legacy_dcline_opf.build_cost_params"]], "cost (mp.mme_legacy_dcline_opf attribute)": [[373, "mp.mme_legacy_dcline_opf.cost"]], "interior_x0() (mp.mme_legacy_dcline_opf method)": [[373, "mp.mme_legacy_dcline_opf.interior_x0"]], "mme_legacy_dcline_opf (class in mp)": [[373, "mp.mme_legacy_dcline_opf"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_ac method)": [[374, "mp.mme_legacy_dcline_opf_ac.data_model_update_on"]], "mme_legacy_dcline_opf_ac (class in mp)": [[374, "mp.mme_legacy_dcline_opf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_dc method)": [[375, "mp.mme_legacy_dcline_opf_dc.data_model_update_on"]], "mme_legacy_dcline_opf_dc (class in mp)": [[375, "mp.mme_legacy_dcline_opf_dc"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_ac method)": [[376, "mp.mme_legacy_dcline_pf_ac.data_model_update_on"]], "mme_legacy_dcline_pf_ac (class in mp)": [[376, "mp.mme_legacy_dcline_pf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_dc method)": [[377, "mp.mme_legacy_dcline_pf_dc.data_model_update_on"]], "mme_legacy_dcline_pf_dc (class in mp)": [[377, "mp.mme_legacy_dcline_pf_dc"]], "data_model_update_on() (mp.mme_line3p method)": [[378, "mp.mme_line3p.data_model_update_on"]], "mme_line3p (class in mp)": [[378, "mp.mme_line3p"]], "name() (mp.mme_line3p method)": [[378, "mp.mme_line3p.name"]], "interior_x0() (mp.mme_line3p_opf method)": [[379, "mp.mme_line3p_opf.interior_x0"]], "mme_line3p_opf (class in mp)": [[379, "mp.mme_line3p_opf"]], "mme_load (class in mp)": [[380, "mp.mme_load"]], "name() (mp.mme_load method)": [[380, "mp.mme_load.name"]], "data_model_update_on() (mp.mme_load_cpf method)": [[381, "mp.mme_load_cpf.data_model_update_on"]], "mme_load_cpf (class in mp)": [[381, "mp.mme_load_cpf"]], "data_model_update_on() (mp.mme_load_pf_ac method)": [[382, "mp.mme_load_pf_ac.data_model_update_on"]], "mme_load_pf_ac (class in mp)": [[382, "mp.mme_load_pf_ac"]], "data_model_update_on() (mp.mme_load_pf_dc method)": [[383, "mp.mme_load_pf_dc.data_model_update_on"]], "mme_load_pf_dc (class in mp)": [[383, "mp.mme_load_pf_dc"]], "add_constraints() (mp.mme_reserve_gen method)": [[384, "mp.mme_reserve_gen.add_constraints"]], "add_costs() (mp.mme_reserve_gen method)": [[384, "mp.mme_reserve_gen.add_costs"]], "add_vars() (mp.mme_reserve_gen method)": [[384, "mp.mme_reserve_gen.add_vars"]], "data_model_update_on() (mp.mme_reserve_gen method)": [[384, "mp.mme_reserve_gen.data_model_update_on"]], "mme_reserve_gen (class in mp)": [[384, "mp.mme_reserve_gen"]], "name() (mp.mme_reserve_gen method)": [[384, "mp.mme_reserve_gen.name"]], "add_constraints() (mp.mme_reserve_zone method)": [[385, "mp.mme_reserve_zone.add_constraints"]], "data_model_update_on() (mp.mme_reserve_zone method)": [[385, "mp.mme_reserve_zone.data_model_update_on"]], "mme_reserve_zone (class in mp)": [[385, "mp.mme_reserve_zone"]], "name() (mp.mme_reserve_zone method)": [[385, "mp.mme_reserve_zone.name"]], "mme_shunt (class in mp)": [[386, "mp.mme_shunt"]], "name() (mp.mme_shunt method)": [[386, "mp.mme_shunt.name"]], "data_model_update_on() (mp.mme_shunt_cpf method)": [[387, "mp.mme_shunt_cpf.data_model_update_on"]], "mme_shunt_cpf (class in mp)": [[387, "mp.mme_shunt_cpf"]], "data_model_update_on() (mp.mme_shunt_pf_ac method)": [[388, "mp.mme_shunt_pf_ac.data_model_update_on"]], "mme_shunt_pf_ac (class in mp)": [[388, "mp.mme_shunt_pf_ac"]], "data_model_update_on() (mp.mme_shunt_pf_dc method)": [[389, "mp.mme_shunt_pf_dc.data_model_update_on"]], "mme_shunt_pf_dc (class in mp)": [[389, "mp.mme_shunt_pf_dc"]], "data_model_update_on() (mp.mme_xfmr3p method)": [[390, "mp.mme_xfmr3p.data_model_update_on"]], "mme_xfmr3p (class in mp)": [[390, "mp.mme_xfmr3p"]], "name() (mp.mme_xfmr3p method)": [[390, "mp.mme_xfmr3p.name"]], "interior_x0() (mp.mme_xfmr3p_opf method)": [[391, "mp.mme_xfmr3p_opf.interior_x0"]], "mme_xfmr3p_opf (class in mp)": [[391, "mp.mme_xfmr3p_opf"]], "add_node() (mp.net_model method)": [[392, "mp.net_model.add_node"]], "add_nodes() (mp.net_model method)": [[392, "mp.net_model.add_nodes"]], "add_port() (mp.net_model method)": [[392, "mp.net_model.add_port"]], "add_state() (mp.net_model method)": [[392, "mp.net_model.add_state"]], "add_states() (mp.net_model method)": [[392, "mp.net_model.add_states"]], "add_var() (mp.net_model method)": [[392, "mp.net_model.add_var"]], "add_vvars() (mp.net_model method)": [[392, "mp.net_model.add_vvars"]], "add_zvars() (mp.net_model method)": [[392, "mp.net_model.add_zvars"]], "build() (mp.net_model method)": [[392, "mp.net_model.build"]], "build_params() (mp.net_model method)": [[392, "mp.net_model.build_params"]], "def_set_types() (mp.net_model method)": [[392, "mp.net_model.def_set_types"]], "display() (mp.net_model method)": [[392, "mp.net_model.display"]], "ensure_ref_node() (mp.net_model method)": [[392, "mp.net_model.ensure_ref_node"]], "get_node_idx() (mp.net_model method)": [[392, "mp.net_model.get_node_idx"]], "get_port_idx() (mp.net_model method)": [[392, "mp.net_model.get_port_idx"]], "get_state_idx() (mp.net_model method)": [[392, "mp.net_model.get_state_idx"]], "init_set_types() (mp.net_model method)": [[392, "mp.net_model.init_set_types"]], "name() (mp.net_model method)": [[392, "mp.net_model.name"]], "net_model (class in mp)": [[392, "mp.net_model"]], "node (mp.net_model attribute)": [[392, "mp.net_model.node"]], "node_types() (mp.net_model method)": [[392, "mp.net_model.node_types"]], "np() (mp.net_model method)": [[392, "mp.net_model.np"]], "nv (mp.net_model attribute)": [[392, "mp.net_model.nv"]], "nz() (mp.net_model method)": [[392, "mp.net_model.nz"]], "params_var() (mp.net_model method)": [[392, "mp.net_model.params_var"]], "port (mp.net_model attribute)": [[392, "mp.net_model.port"]], "set_node_type_pq() (mp.net_model method)": [[392, "mp.net_model.set_node_type_pq"]], "set_node_type_pv() (mp.net_model method)": [[392, "mp.net_model.set_node_type_pv"]], "set_node_type_ref() (mp.net_model method)": [[392, "mp.net_model.set_node_type_ref"]], "set_type_idx_map() (mp.net_model method)": [[392, "mp.net_model.set_type_idx_map"]], "set_type_label() (mp.net_model method)": [[392, "mp.net_model.set_type_label"]], "stack_matrix_params() (mp.net_model method)": [[392, "mp.net_model.stack_matrix_params"]], "stack_vector_params() (mp.net_model method)": [[392, "mp.net_model.stack_vector_params"]], "state (mp.net_model attribute)": [[392, "mp.net_model.state"]], "the_np (mp.net_model attribute)": [[392, "mp.net_model.the_np"]], "the_nz (mp.net_model attribute)": [[392, "mp.net_model.the_nz"]], "build_params() (mp.net_model_ac method)": [[393, "mp.net_model_ac.build_params"]], "def_set_types() (mp.net_model_ac method)": [[393, "mp.net_model_ac.def_set_types"]], "get_va() (mp.net_model_ac method)": [[393, "mp.net_model_ac.get_va"]], "net_model_ac (class in mp)": [[393, "mp.net_model_ac"]], "nodal_complex_current_balance() (mp.net_model_ac method)": [[393, "mp.net_model_ac.nodal_complex_current_balance"]], "nodal_complex_current_balance_hess() (mp.net_model_ac method)": [[393, "mp.net_model_ac.nodal_complex_current_balance_hess"]], "nodal_complex_power_balance() (mp.net_model_ac method)": [[393, "mp.net_model_ac.nodal_complex_power_balance"]], "nodal_complex_power_balance_hess() (mp.net_model_ac method)": [[393, "mp.net_model_ac.nodal_complex_power_balance_hess"]], "port_inj_nln() (mp.net_model_ac method)": [[393, "mp.net_model_ac.port_inj_nln"]], "port_inj_nln_hess() (mp.net_model_ac method)": [[393, "mp.net_model_ac.port_inj_nln_hess"]], "port_inj_soln() (mp.net_model_ac method)": [[393, "mp.net_model_ac.port_inj_soln"]], "def_set_types() (mp.net_model_acc method)": [[394, "mp.net_model_acc.def_set_types"]], "initial_voltage_angle() (mp.net_model_acc method)": [[394, "mp.net_model_acc.initial_voltage_angle"]], "net_model_acc (class in mp)": [[394, "mp.net_model_acc"]], "net_model_acc() (mp.net_model_acc method)": [[394, "mp.net_model_acc.net_model_acc"]], "def_set_types() (mp.net_model_acp method)": [[395, "mp.net_model_acp.def_set_types"]], "initial_voltage_angle() (mp.net_model_acp method)": [[395, "mp.net_model_acp.initial_voltage_angle"]], "net_model_acp (class in mp)": [[395, "mp.net_model_acp"]], "net_model_acp() (mp.net_model_acp method)": [[395, "mp.net_model_acp.net_model_acp"]], "build_params() (mp.net_model_dc method)": [[396, "mp.net_model_dc.build_params"]], "def_set_types() (mp.net_model_dc method)": [[396, "mp.net_model_dc.def_set_types"]], "net_model_dc (class in mp)": [[396, "mp.net_model_dc"]], "net_model_dc() (mp.net_model_dc method)": [[396, "mp.net_model_dc.net_model_dc"]], "port_inj_soln() (mp.net_model_dc method)": [[396, "mp.net_model_dc.port_inj_soln"]], "va (mp.net_model_dc attribute)": [[396, "mp.net_model_dc.va"]], "z (mp.net_model_dc attribute)": [[396, "mp.net_model_dc.z"]], "c (mp.nm_element attribute)": [[397, "mp.nm_element.C"]], "d (mp.nm_element attribute)": [[397, "mp.nm_element.D"]], "add_nodes() (mp.nm_element method)": [[397, "mp.nm_element.add_nodes"]], "add_states() (mp.nm_element method)": [[397, "mp.nm_element.add_states"]], "add_vvars() (mp.nm_element method)": [[397, "mp.nm_element.add_vvars"]], "add_zvars() (mp.nm_element method)": [[397, "mp.nm_element.add_zvars"]], "build_params() (mp.nm_element method)": [[397, "mp.nm_element.build_params"]], "count() (mp.nm_element method)": [[397, "mp.nm_element.count"]], "data_model_element() (mp.nm_element method)": [[397, "mp.nm_element.data_model_element"]], "display() (mp.nm_element method)": [[397, "mp.nm_element.display"]], "get_nv_() (mp.nm_element method)": [[397, "mp.nm_element.get_nv_"]], "incidence_matrix() (mp.nm_element method)": [[397, "mp.nm_element.incidence_matrix"]], "math_model_element() (mp.nm_element method)": [[397, "mp.nm_element.math_model_element"]], "name() (mp.nm_element method)": [[397, "mp.nm_element.name"]], "nk (mp.nm_element attribute)": [[397, "mp.nm_element.nk"]], "nm_element (class in mp)": [[397, "mp.nm_element"]], "nn() (mp.nm_element method)": [[397, "mp.nm_element.nn"]], "node_indices() (mp.nm_element method)": [[397, "mp.nm_element.node_indices"]], "node_types() (mp.nm_element method)": [[397, "mp.nm_element.node_types"]], "np() (mp.nm_element method)": [[397, "mp.nm_element.np"]], "nz() (mp.nm_element method)": [[397, "mp.nm_element.nz"]], "set_node_type_pq() (mp.nm_element method)": [[397, "mp.nm_element.set_node_type_pq"]], "set_node_type_pv() (mp.nm_element method)": [[397, "mp.nm_element.set_node_type_pv"]], "set_node_type_ref() (mp.nm_element method)": [[397, "mp.nm_element.set_node_type_ref"]], "soln (mp.nm_element attribute)": [[397, "mp.nm_element.soln"]], "x2vz() (mp.nm_element method)": [[397, "mp.nm_element.x2vz"]], "name() (mp.nme_branch method)": [[398, "mp.nme_branch.name"]], "nme_branch (class in mp)": [[398, "mp.nme_branch"]], "np() (mp.nme_branch method)": [[398, "mp.nme_branch.np"]], "build_params() (mp.nme_branch_ac method)": [[399, "mp.nme_branch_ac.build_params"]], "nme_branch_ac (class in mp)": [[399, "mp.nme_branch_ac"]], "ang_diff_fcn() (mp.nme_branch_acc method)": [[400, "mp.nme_branch_acc.ang_diff_fcn"]], "ang_diff_hess() (mp.nme_branch_acc method)": [[400, "mp.nme_branch_acc.ang_diff_hess"]], "nme_branch_acc (class in mp)": [[400, "mp.nme_branch_acc"]], "nme_branch_acp (class in mp)": [[401, "mp.nme_branch_acp"]], "build_params() (mp.nme_branch_dc method)": [[402, "mp.nme_branch_dc.build_params"]], "nme_branch_dc (class in mp)": [[402, "mp.nme_branch_dc"]], "name() (mp.nme_bus method)": [[403, "mp.nme_bus.name"]], "nme_bus (class in mp)": [[403, "mp.nme_bus"]], "nn() (mp.nme_bus method)": [[403, "mp.nme_bus.nn"]], "node_types() (mp.nme_bus method)": [[403, "mp.nme_bus.node_types"]], "set_node_type_pq() (mp.nme_bus method)": [[403, "mp.nme_bus.set_node_type_pq"]], "set_node_type_pv() (mp.nme_bus method)": [[403, "mp.nme_bus.set_node_type_pv"]], "set_node_type_ref() (mp.nme_bus method)": [[403, "mp.nme_bus.set_node_type_ref"]], "name() (mp.nme_bus3p method)": [[404, "mp.nme_bus3p.name"]], "nme_bus3p (class in mp)": [[404, "mp.nme_bus3p"]], "nn() (mp.nme_bus3p method)": [[404, "mp.nme_bus3p.nn"]], "node_types() (mp.nme_bus3p method)": [[404, "mp.nme_bus3p.node_types"]], "add_vvars() (mp.nme_bus3p_acc method)": [[405, "mp.nme_bus3p_acc.add_vvars"]], "nme_bus3p_acc (class in mp)": [[405, "mp.nme_bus3p_acc"]], "add_vvars() (mp.nme_bus3p_acp method)": [[406, "mp.nme_bus3p_acp.add_vvars"]], "nme_bus3p_acp (class in mp)": [[406, "mp.nme_bus3p_acp"]], "add_vvars() (mp.nme_bus_acc method)": [[407, "mp.nme_bus_acc.add_vvars"]], "nme_bus_acc (class in mp)": [[407, "mp.nme_bus_acc"]], "add_vvars() (mp.nme_bus_acp method)": [[408, "mp.nme_bus_acp.add_vvars"]], "nme_bus_acp (class in mp)": [[408, "mp.nme_bus_acp"]], "add_vvars() (mp.nme_bus_dc method)": [[409, "mp.nme_bus_dc.add_vvars"]], "nme_bus_dc (class in mp)": [[409, "mp.nme_bus_dc"]], "add_zvars() (mp.nme_buslink method)": [[410, "mp.nme_buslink.add_zvars"]], "build_params() (mp.nme_buslink method)": [[410, "mp.nme_buslink.build_params"]], "name() (mp.nme_buslink method)": [[410, "mp.nme_buslink.name"]], "nme_buslink (class in mp)": [[410, "mp.nme_buslink"]], "np() (mp.nme_buslink method)": [[410, "mp.nme_buslink.np"]], "nz() (mp.nme_buslink method)": [[410, "mp.nme_buslink.nz"]], "voltage_constraints() (mp.nme_buslink method)": [[410, "mp.nme_buslink.voltage_constraints"]], "nme_buslink_acc (class in mp)": [[411, "mp.nme_buslink_acc"]], "nme_buslink_acp (class in mp)": [[412, "mp.nme_buslink_acp"]], "name() (mp.nme_gen method)": [[413, "mp.nme_gen.name"]], "nme_gen (class in mp)": [[413, "mp.nme_gen"]], "np() (mp.nme_gen method)": [[413, "mp.nme_gen.np"]], "nz() (mp.nme_gen method)": [[413, "mp.nme_gen.nz"]], "add_zvars() (mp.nme_gen3p method)": [[414, "mp.nme_gen3p.add_zvars"]], "build_params() (mp.nme_gen3p method)": [[414, "mp.nme_gen3p.build_params"]], "name() (mp.nme_gen3p method)": [[414, "mp.nme_gen3p.name"]], "nme_gen3p (class in mp)": [[414, "mp.nme_gen3p"]], "np() (mp.nme_gen3p method)": [[414, "mp.nme_gen3p.np"]], "nz() (mp.nme_gen3p method)": [[414, "mp.nme_gen3p.nz"]], "nme_gen3p_acc (class in mp)": [[415, "mp.nme_gen3p_acc"]], "nme_gen3p_acp (class in mp)": [[416, "mp.nme_gen3p_acp"]], "add_zvars() (mp.nme_gen_ac method)": [[417, "mp.nme_gen_ac.add_zvars"]], "build_params() (mp.nme_gen_ac method)": [[417, "mp.nme_gen_ac.build_params"]], "nme_gen_ac (class in mp)": [[417, "mp.nme_gen_ac"]], "nme_gen_acc (class in mp)": [[418, "mp.nme_gen_acc"]], "nme_gen_acp (class in mp)": [[419, "mp.nme_gen_acp"]], "add_zvars() (mp.nme_gen_dc method)": [[420, "mp.nme_gen_dc.add_zvars"]], "build_params() (mp.nme_gen_dc method)": [[420, "mp.nme_gen_dc.build_params"]], "nme_gen_dc (class in mp)": [[420, "mp.nme_gen_dc"]], "name() (mp.nme_legacy_dcline method)": [[421, "mp.nme_legacy_dcline.name"]], "nme_legacy_dcline (class in mp)": [[421, "mp.nme_legacy_dcline"]], "np() (mp.nme_legacy_dcline method)": [[421, "mp.nme_legacy_dcline.np"]], "nz() (mp.nme_legacy_dcline method)": [[421, "mp.nme_legacy_dcline.nz"]], "add_zvars() (mp.nme_legacy_dcline_ac method)": [[422, "mp.nme_legacy_dcline_ac.add_zvars"]], "build_params() (mp.nme_legacy_dcline_ac method)": [[422, "mp.nme_legacy_dcline_ac.build_params"]], "nme_legacy_dcline_ac (class in mp)": [[422, "mp.nme_legacy_dcline_ac"]], "nme_legacy_dcline_acc (class in mp)": [[423, "mp.nme_legacy_dcline_acc"]], "nme_legacy_dcline_acp (class in mp)": [[424, "mp.nme_legacy_dcline_acp"]], "add_zvars() (mp.nme_legacy_dcline_dc method)": [[425, "mp.nme_legacy_dcline_dc.add_zvars"]], "build_params() (mp.nme_legacy_dcline_dc method)": [[425, "mp.nme_legacy_dcline_dc.build_params"]], "nme_legacy_dcline_dc (class in mp)": [[425, "mp.nme_legacy_dcline_dc"]], "build_params() (mp.nme_line3p method)": [[426, "mp.nme_line3p.build_params"]], "name() (mp.nme_line3p method)": [[426, "mp.nme_line3p.name"]], "nme_line3p (class in mp)": [[426, "mp.nme_line3p"]], "np() (mp.nme_line3p method)": [[426, "mp.nme_line3p.np"]], "vec2symmat_stacked() (mp.nme_line3p method)": [[426, "mp.nme_line3p.vec2symmat_stacked"]], "name() (mp.nme_load method)": [[427, "mp.nme_load.name"]], "nme_load (class in mp)": [[427, "mp.nme_load"]], "np() (mp.nme_load method)": [[427, "mp.nme_load.np"]], "build_params() (mp.nme_load3p method)": [[428, "mp.nme_load3p.build_params"]], "name() (mp.nme_load3p method)": [[428, "mp.nme_load3p.name"]], "nme_load3p (class in mp)": [[428, "mp.nme_load3p"]], "np() (mp.nme_load3p method)": [[428, "mp.nme_load3p.np"]], "build_params() (mp.nme_load_ac method)": [[429, "mp.nme_load_ac.build_params"]], "nme_load_ac (class in mp)": [[429, "mp.nme_load_ac"]], "port_inj_current_nln() (mp.nme_load_ac method)": [[429, "mp.nme_load_ac.port_inj_current_nln"]], "port_inj_power_nln() (mp.nme_load_ac method)": [[429, "mp.nme_load_ac.port_inj_power_nln"]], "nme_load_acc (class in mp)": [[430, "mp.nme_load_acc"]], "nme_load_acp (class in mp)": [[431, "mp.nme_load_acp"]], "build_params() (mp.nme_load_dc method)": [[432, "mp.nme_load_dc.build_params"]], "nme_load_dc (class in mp)": [[432, "mp.nme_load_dc"]], "name() (mp.nme_shunt method)": [[433, "mp.nme_shunt.name"]], "nme_shunt (class in mp)": [[433, "mp.nme_shunt"]], "np() (mp.nme_shunt method)": [[433, "mp.nme_shunt.np"]], "build_params() (mp.nme_shunt_ac method)": [[434, "mp.nme_shunt_ac.build_params"]], "nme_shunt_ac (class in mp)": [[434, "mp.nme_shunt_ac"]], "nme_shunt_acc (class in mp)": [[435, "mp.nme_shunt_acc"]], "nme_shunt_acp (class in mp)": [[436, "mp.nme_shunt_acp"]], "build_params() (mp.nme_shunt_dc method)": [[437, "mp.nme_shunt_dc.build_params"]], "nme_shunt_dc (class in mp)": [[437, "mp.nme_shunt_dc"]], "build_params() (mp.nme_xfmr3p method)": [[438, "mp.nme_xfmr3p.build_params"]], "name() (mp.nme_xfmr3p method)": [[438, "mp.nme_xfmr3p.name"]], "nme_xfmr3p (class in mp)": [[438, "mp.nme_xfmr3p"]], "np() (mp.nme_xfmr3p method)": [[438, "mp.nme_xfmr3p.np"]], "data_model_build() (mp.task method)": [[439, "mp.task.data_model_build"]], "data_model_build_post() (mp.task method)": [[439, "mp.task.data_model_build_post"]], "data_model_build_pre() (mp.task method)": [[439, "mp.task.data_model_build_pre"]], "data_model_class() (mp.task method)": [[439, "mp.task.data_model_class"]], "data_model_class_default() (mp.task method)": [[439, "mp.task.data_model_class_default"]], "data_model_create() (mp.task method)": [[439, "mp.task.data_model_create"]], "dm (mp.task attribute)": [[439, "mp.task.dm"]], "dm_converter_build() (mp.task method)": [[439, "mp.task.dm_converter_build"]], "dm_converter_class() (mp.task method)": [[439, "mp.task.dm_converter_class"]], "dm_converter_class_mpc2_default() (mp.task method)": [[439, "mp.task.dm_converter_class_mpc2_default"]], "dm_converter_create() (mp.task method)": [[439, "mp.task.dm_converter_create"]], "dmc (mp.task attribute)": [[439, "mp.task.dmc"]], "et (mp.task attribute)": [[439, "mp.task.et"]], "i_dm (mp.task attribute)": [[439, "mp.task.i_dm"]], "i_mm (mp.task attribute)": [[439, "mp.task.i_mm"]], "i_nm (mp.task attribute)": [[439, "mp.task.i_nm"]], "math_model_build() (mp.task method)": [[439, "mp.task.math_model_build"]], "math_model_class() (mp.task method)": [[439, "mp.task.math_model_class"]], "math_model_class_default() (mp.task method)": [[439, "mp.task.math_model_class_default"]], "math_model_create() (mp.task method)": [[439, "mp.task.math_model_create"]], "math_model_opt() (mp.task method)": [[439, "mp.task.math_model_opt"]], "message (mp.task attribute)": [[439, "mp.task.message"]], "mm (mp.task attribute)": [[439, "mp.task.mm"]], "mm_opt (mp.task attribute)": [[439, "mp.task.mm_opt"]], "name (mp.task attribute)": [[439, "mp.task.name"]], "network_model_build() (mp.task method)": [[439, "mp.task.network_model_build"]], "network_model_build_post() (mp.task method)": [[439, "mp.task.network_model_build_post"]], "network_model_build_pre() (mp.task method)": [[439, "mp.task.network_model_build_pre"]], "network_model_class() (mp.task method)": [[439, "mp.task.network_model_class"]], "network_model_class_default() (mp.task method)": [[439, "mp.task.network_model_class_default"]], "network_model_create() (mp.task method)": [[439, "mp.task.network_model_create"]], "network_model_update() (mp.task method)": [[439, "mp.task.network_model_update"]], "network_model_x_soln() (mp.task method)": [[439, "mp.task.network_model_x_soln"]], "next_dm() (mp.task method)": [[439, "mp.task.next_dm"]], "next_mm() (mp.task method)": [[439, "mp.task.next_mm"]], "next_nm() (mp.task method)": [[439, "mp.task.next_nm"]], "nm (mp.task attribute)": [[439, "mp.task.nm"]], "print_soln() (mp.task method)": [[439, "mp.task.print_soln"]], "print_soln_header() (mp.task method)": [[439, "mp.task.print_soln_header"]], "run() (mp.task method)": [[439, "mp.task.run"]], "run_post() (mp.task method)": [[439, "mp.task.run_post"]], "run_pre() (mp.task method)": [[439, "mp.task.run_pre"]], "save_soln() (mp.task method)": [[439, "mp.task.save_soln"]], "success (mp.task attribute)": [[439, "mp.task.success"]], "tag (mp.task attribute)": [[439, "mp.task.tag"]], "task (class in mp)": [[439, "mp.task"]], "data_model_build() (mp.task_cpf method)": [[440, "mp.task_cpf.data_model_build"]], "data_model_class_default() (mp.task_cpf method)": [[440, "mp.task_cpf.data_model_class_default"]], "dm_converter_class() (mp.task_cpf method)": [[440, "mp.task_cpf.dm_converter_class"]], "math_model_class_default() (mp.task_cpf method)": [[440, "mp.task_cpf.math_model_class_default"]], "math_model_opt() (mp.task_cpf method)": [[440, "mp.task_cpf.math_model_opt"]], "network_model_build() (mp.task_cpf method)": [[440, "mp.task_cpf.network_model_build"]], "network_model_update() (mp.task_cpf method)": [[440, "mp.task_cpf.network_model_update"]], "network_model_x_soln() (mp.task_cpf method)": [[440, "mp.task_cpf.network_model_x_soln"]], "next_mm() (mp.task_cpf method)": [[440, "mp.task_cpf.next_mm"]], "run_pre() (mp.task_cpf method)": [[440, "mp.task_cpf.run_pre"]], "task_cpf (class in mp)": [[440, "mp.task_cpf"]], "task_cpf() (mp.task_cpf method)": [[440, "mp.task_cpf.task_cpf"]], "warmstart (mp.task_cpf attribute)": [[440, "mp.task_cpf.warmstart"]], "legacy_post_run() (mp.task_cpf_legacy method)": [[441, "mp.task_cpf_legacy.legacy_post_run"]], "run_post() (mp.task_cpf_legacy method)": [[441, "mp.task_cpf_legacy.run_post"]], "run_pre() (mp.task_cpf_legacy method)": [[441, "mp.task_cpf_legacy.run_pre"]], "task_cpf_legacy (class in mp)": [[441, "mp.task_cpf_legacy"]], "data_model_build_post() (mp.task_opf method)": [[442, "mp.task_opf.data_model_build_post"]], "data_model_class_default() (mp.task_opf method)": [[442, "mp.task_opf.data_model_class_default"]], "dc (mp.task_opf attribute)": [[442, "mp.task_opf.dc"]], "math_model_class_default() (mp.task_opf method)": [[442, "mp.task_opf.math_model_class_default"]], "network_model_class_default() (mp.task_opf method)": [[442, "mp.task_opf.network_model_class_default"]], "print_soln_header() (mp.task_opf method)": [[442, "mp.task_opf.print_soln_header"]], "run_pre() (mp.task_opf method)": [[442, "mp.task_opf.run_pre"]], "task_opf (class in mp)": [[442, "mp.task_opf"]], "data_model_build_post() (mp.task_opf_legacy method)": [[443, "mp.task_opf_legacy.data_model_build_post"]], "dm_converter_class_mpc2_default() (mp.task_opf_legacy method)": [[443, "mp.task_opf_legacy.dm_converter_class_mpc2_default"]], "legacy_post_run() (mp.task_opf_legacy method)": [[443, "mp.task_opf_legacy.legacy_post_run"]], "math_model_class_default() (mp.task_opf_legacy method)": [[443, "mp.task_opf_legacy.math_model_class_default"]], "run_post() (mp.task_opf_legacy method)": [[443, "mp.task_opf_legacy.run_post"]], "run_pre() (mp.task_opf_legacy method)": [[443, "mp.task_opf_legacy.run_pre"]], "task_opf_legacy (class in mp)": [[443, "mp.task_opf_legacy"]], "dc (mp.task_pf attribute)": [[444, "mp.task_pf.dc"]], "enforce_q_lims() (mp.task_pf method)": [[444, "mp.task_pf.enforce_q_lims"]], "fixed_q_idx (mp.task_pf attribute)": [[444, "mp.task_pf.fixed_q_idx"]], "fixed_q_qty (mp.task_pf attribute)": [[444, "mp.task_pf.fixed_q_qty"]], "iterations (mp.task_pf attribute)": [[444, "mp.task_pf.iterations"]], "math_model_class_default() (mp.task_pf method)": [[444, "mp.task_pf.math_model_class_default"]], "name (mp.task_pf attribute)": [[444, "mp.task_pf.name"]], "network_model_build_post() (mp.task_pf method)": [[444, "mp.task_pf.network_model_build_post"]], "network_model_class_default() (mp.task_pf method)": [[444, "mp.task_pf.network_model_class_default"]], "network_model_x_soln() (mp.task_pf method)": [[444, "mp.task_pf.network_model_x_soln"]], "next_dm() (mp.task_pf method)": [[444, "mp.task_pf.next_dm"]], "ref (mp.task_pf attribute)": [[444, "mp.task_pf.ref"]], "ref0 (mp.task_pf attribute)": [[444, "mp.task_pf.ref0"]], "run_pre() (mp.task_pf method)": [[444, "mp.task_pf.run_pre"]], "tag (mp.task_pf attribute)": [[444, "mp.task_pf.tag"]], "task_pf (class in mp)": [[444, "mp.task_pf"]], "va_ref0 (mp.task_pf attribute)": [[444, "mp.task_pf.va_ref0"]], "legacy_post_run() (mp.task_pf_legacy method)": [[445, "mp.task_pf_legacy.legacy_post_run"]], "run_post() (mp.task_pf_legacy method)": [[445, "mp.task_pf_legacy.run_post"]], "run_pre() (mp.task_pf_legacy method)": [[445, "mp.task_pf_legacy.run_pre"]], "task_pf_legacy (class in mp)": [[445, "mp.task_pf_legacy"]], "run_pre_legacy() (mp.task_shared_legacy method)": [[446, "mp.task_shared_legacy.run_pre_legacy"]], "task_shared_legacy (class in mp)": [[446, "mp.task_shared_legacy"]], "dm_element_classes() (mp.xt_3p method)": [[447, "mp.xt_3p.dm_element_classes"]], "dmc_element_classes() (mp.xt_3p method)": [[447, "mp.xt_3p.dmc_element_classes"]], "mm_element_classes() (mp.xt_3p method)": [[447, "mp.xt_3p.mm_element_classes"]], "nm_element_classes() (mp.xt_3p method)": [[447, "mp.xt_3p.nm_element_classes"]], "xt_3p (class in mp)": [[447, "mp.xt_3p"]], "dm_element_classes() (mp.xt_legacy_dcline method)": [[448, "mp.xt_legacy_dcline.dm_element_classes"]], "dmc_element_classes() (mp.xt_legacy_dcline method)": [[448, "mp.xt_legacy_dcline.dmc_element_classes"]], "mm_element_classes() (mp.xt_legacy_dcline method)": [[448, "mp.xt_legacy_dcline.mm_element_classes"]], "nm_element_classes() (mp.xt_legacy_dcline method)": [[448, "mp.xt_legacy_dcline.nm_element_classes"]], "xt_legacy_dcline (class in mp)": [[448, "mp.xt_legacy_dcline"]], "mm_element_classes() (mp.xt_oval_cap_curve method)": [[449, "mp.xt_oval_cap_curve.mm_element_classes"]], "xt_oval_cap_curve (class in mp)": [[449, "mp.xt_oval_cap_curve"]], "dm_element_classes() (mp.xt_reserves method)": [[450, "mp.xt_reserves.dm_element_classes"]], "dmc_element_classes() (mp.xt_reserves method)": [[450, "mp.xt_reserves.dmc_element_classes"]], "mm_element_classes() (mp.xt_reserves method)": [[450, "mp.xt_reserves.mm_element_classes"]], "xt_reserves (class in mp)": [[450, "mp.xt_reserves"]], "display() (mp_table method)": [[451, "mp_table.display"]], "end() (mp_table method)": [[451, "mp_table.end"]], "extract_named_args() (mp_table static method)": [[451, "mp_table.extract_named_args"]], "horzcat() (mp_table method)": [[451, "mp_table.horzcat"]], "isempty() (mp_table method)": [[451, "mp_table.isempty"]], "istable() (mp_table method)": [[451, "mp_table.istable"]], "mp_table (built-in class)": [[451, "mp_table"]], "mp_table() (mp_table method)": [[451, "mp_table.mp_table"]], "size() (mp_table method)": [[451, "mp_table.size"]], "subsasgn() (mp_table method)": [[451, "mp_table.subsasgn"]], "subsref() (mp_table method)": [[451, "mp_table.subsref"]], "vertcat() (mp_table method)": [[451, "mp_table.vertcat"]], "get_table() (mp_table_subclass method)": [[452, "mp_table_subclass.get_table"]], "mp_table_subclass (built-in class)": [[452, "mp_table_subclass"]], "set_table() (mp_table_subclass method)": [[452, "mp_table_subclass.set_table"]], "install_matpower() (built-in function)": [[454, "install_matpower"]], "mp_table_class() (built-in function)": [[455, "mp_table_class"]], "run_cpf() (built-in function)": [[456, "run_cpf"]], "run_mp() (built-in function)": [[457, "run_mp"]], "run_opf() (built-in function)": [[458, "run_opf"]], "run_pf() (built-in function)": [[459, "run_pf"]], "add_legacy_cost() (opf_model method)": [[462, "opf_model.add_legacy_cost"]], "add_named_set() (opf_model method)": [[462, "opf_model.add_named_set"]], "cost (opf_model attribute)": [[462, "opf_model.cost"]], "def_set_types() (opf_model method)": [[462, "opf_model.def_set_types"]], "display() (opf_model method)": [[462, "opf_model.display"]], "eval_legacy_cost() (opf_model method)": [[462, "opf_model.eval_legacy_cost"]], "get_mpc() (opf_model method)": [[462, "opf_model.get_mpc"]], "init_indexed_name() (opf_model method)": [[462, "opf_model.init_indexed_name"]], "init_set_types() (opf_model method)": [[462, "opf_model.init_set_types"]], "mpc (opf_model attribute)": [[462, "opf_model.mpc"]], "opf_model (built-in class)": [[462, "opf_model"]], "opf_model() (opf_model method)": [[462, "opf_model.opf_model"]], "params_legacy_cost() (opf_model method)": [[462, "opf_model.params_legacy_cost"]], "set_mpc() (opf_model method)": [[462, "opf_model.set_mpc"]], "add_userfcn() (built-in function)": [[463, "add_userfcn"]], "apply_changes() (built-in function)": [[464, "apply_changes"]], "bustypes() (built-in function)": [[465, "bustypes"]], "calc_branch_angle() (built-in function)": [[466, "calc_branch_angle"]], "calc_v_i_sum() (built-in function)": [[467, "calc_v_i_sum"]], "calc_v_pq_sum() (built-in function)": [[468, "calc_v_pq_sum"]], "calc_v_y_sum() (built-in function)": [[469, "calc_v_y_sum"]], "case_info() (built-in function)": [[470, "case_info"]], "caseformat() (built-in function)": [[471, "caseformat"]], "cdf2mpc() (built-in function)": [[472, "cdf2mpc"]], "compare_case() (built-in function)": [[473, "compare_case"]], "connected_components() (built-in function)": [[474, "connected_components"]], "cpf_corrector() (built-in function)": [[475, "cpf_corrector"]], "cpf_current_mpc() (built-in function)": [[476, "cpf_current_mpc"]], "cpf_default_callback() (built-in function)": [[477, "cpf_default_callback"]], "cpf_detect_events() (built-in function)": [[478, "cpf_detect_events"]], "cpf_flim_event() (built-in function)": [[479, "cpf_flim_event"]], "cpf_flim_event_cb() (built-in function)": [[480, "cpf_flim_event_cb"]], "cpf_nose_event() (built-in function)": [[481, "cpf_nose_event"]], "cpf_nose_event_cb() (built-in function)": [[482, "cpf_nose_event_cb"]], "cpf_p() (built-in function)": [[483, "cpf_p"]], "cpf_p_jac() (built-in function)": [[484, "cpf_p_jac"]], "cpf_plim_event() (built-in function)": [[485, "cpf_plim_event"]], "cpf_plim_event_cb() (built-in function)": [[486, "cpf_plim_event_cb"]], "cpf_predictor() (built-in function)": [[487, "cpf_predictor"]], "cpf_qlim_event() (built-in function)": [[488, "cpf_qlim_event"]], "cpf_qlim_event_cb() (built-in function)": [[489, "cpf_qlim_event_cb"]], "cpf_register_callback() (built-in function)": [[490, "cpf_register_callback"]], "cpf_register_event() (built-in function)": [[491, "cpf_register_event"]], "cpf_tangent() (built-in function)": [[492, "cpf_tangent"]], "cpf_target_lam_event() (built-in function)": [[493, "cpf_target_lam_event"]], "cpf_target_lam_event_cb() (built-in function)": [[494, "cpf_target_lam_event_cb"]], "cpf_vlim_event() (built-in function)": [[495, "cpf_vlim_event"]], "cpf_vlim_event_cb() (built-in function)": [[496, "cpf_vlim_event_cb"]], "d2abr_dv2() (built-in function)": [[497, "d2Abr_dV2"]], "d2ibr_dv2() (built-in function)": [[498, "d2Ibr_dV2"]], "d2imis_dv2() (built-in function)": [[499, "d2Imis_dV2"]], "d2imis_dvdsg() (built-in function)": [[500, "d2Imis_dVdSg"]], "d2sbr_dv2() (built-in function)": [[501, "d2Sbr_dV2"]], "d2sbus_dv2() (built-in function)": [[502, "d2Sbus_dV2"]], "dabr_dv() (built-in function)": [[503, "dAbr_dV"]], "dibr_dv() (built-in function)": [[504, "dIbr_dV"]], "dimis_dv() (built-in function)": [[505, "dImis_dV"]], "dsbr_dv() (built-in function)": [[506, "dSbr_dV"]], "dsbus_dv() (built-in function)": [[507, "dSbus_dV"]], "dcopf() (built-in function)": [[508, "dcopf"]], "dcopf_solver() (built-in function)": [[509, "dcopf_solver"]], "dcpf() (built-in function)": [[510, "dcpf"]], "define_constants() (built-in function)": [[511, "define_constants"]], "e2i_data() (built-in function)": [[512, "e2i_data"]], "e2i_field() (built-in function)": [[513, "e2i_field"]], "ext2int() (built-in function)": [[514, "ext2int"]], "extract_islands() (built-in function)": [[515, "extract_islands"]], "fdpf() (built-in function)": [[516, "fdpf"]], "feval_w_path() (built-in function)": [[517, "feval_w_path"]], "find_bridges() (built-in function)": [[518, "find_bridges"]], "find_islands() (built-in function)": [[519, "find_islands"]], "fmincopf() (built-in function)": [[520, "fmincopf"]], "gausspf() (built-in function)": [[521, "gausspf"]], "genfuels() (built-in function)": [[522, "genfuels"]], "gentypes() (built-in function)": [[523, "gentypes"]], "get_losses() (built-in function)": [[524, "get_losses"]], "get_reorder() (built-in function)": [[525, "get_reorder"]], "haspqcap() (built-in function)": [[526, "hasPQcap"]], "have_feature_e4st() (built-in function)": [[527, "have_feature_e4st"]], "have_feature_minopf() (built-in function)": [[528, "have_feature_minopf"]], "have_feature_most() (built-in function)": [[529, "have_feature_most"]], "have_feature_mp_core() (built-in function)": [[530, "have_feature_mp_core"]], "have_feature_pdipmopf() (built-in function)": [[531, "have_feature_pdipmopf"]], "have_feature_regexp_split() (built-in function)": [[532, "have_feature_regexp_split"]], "have_feature_scpdipmopf() (built-in function)": [[533, "have_feature_scpdipmopf"]], "have_feature_sdp_pf() (built-in function)": [[534, "have_feature_sdp_pf"]], "have_feature_smartmarket() (built-in function)": [[535, "have_feature_smartmarket"]], "have_feature_syngrid() (built-in function)": [[536, "have_feature_syngrid"]], "have_feature_table() (built-in function)": [[537, "have_feature_table"]], "have_feature_tralmopf() (built-in function)": [[538, "have_feature_tralmopf"]], "i2e_data() (built-in function)": [[539, "i2e_data"]], "i2e_field() (built-in function)": [[540, "i2e_field"]], "idx_brch() (built-in function)": [[541, "idx_brch"]], "idx_bus() (built-in function)": [[542, "idx_bus"]], "idx_cost() (built-in function)": [[543, "idx_cost"]], "idx_ct() (built-in function)": [[544, "idx_ct"]], "idx_dcline() (built-in function)": [[545, "idx_dcline"]], "idx_gen() (built-in function)": [[546, "idx_gen"]], "int2ext() (built-in function)": [[547, "int2ext"]], "isload() (built-in function)": [[548, "isload"]], "load2disp() (built-in function)": [[549, "load2disp"]], "loadcase() (built-in function)": [[550, "loadcase"]], "loadshed() (built-in function)": [[551, "loadshed"]], "makeaang() (built-in function)": [[552, "makeAang"]], "makeapq() (built-in function)": [[553, "makeApq"]], "makeavl() (built-in function)": [[554, "makeAvl"]], "makeay() (built-in function)": [[555, "makeAy"]], "makeb() (built-in function)": [[556, "makeB"]], "makebdc() (built-in function)": [[557, "makeBdc"]], "makejac() (built-in function)": [[558, "makeJac"]], "makelodf() (built-in function)": [[559, "makeLODF"]], "makeptdf() (built-in function)": [[560, "makePTDF"]], "makesbus() (built-in function)": [[561, "makeSbus"]], "makesdzip() (built-in function)": [[562, "makeSdzip"]], "makeybus() (built-in function)": [[563, "makeYbus"]], "make_vcorr() (built-in function)": [[564, "make_vcorr"]], "make_zpv() (built-in function)": [[565, "make_zpv"]], "margcost() (built-in function)": [[566, "margcost"]], "miqps_matpower() (built-in function)": [[567, "miqps_matpower"]], "modcost() (built-in function)": [[568, "modcost"]], "mpoption() (built-in function)": [[569, "mpoption"]], "mpoption_info_clp() (built-in function)": [[570, "mpoption_info_clp"]], "mpoption_info_cplex() (built-in function)": [[571, "mpoption_info_cplex"]], "mpoption_info_fmincon() (built-in function)": [[572, "mpoption_info_fmincon"]], "mpoption_info_glpk() (built-in function)": [[573, "mpoption_info_glpk"]], "mpoption_info_gurobi() (built-in function)": [[574, "mpoption_info_gurobi"]], "mpoption_info_intlinprog() (built-in function)": [[575, "mpoption_info_intlinprog"]], "mpoption_info_ipopt() (built-in function)": [[576, "mpoption_info_ipopt"]], "mpoption_info_knitro() (built-in function)": [[577, "mpoption_info_knitro"]], "mpoption_info_linprog() (built-in function)": [[578, "mpoption_info_linprog"]], "mpoption_info_mips() (built-in function)": [[579, "mpoption_info_mips"]], "mpoption_info_mosek() (built-in function)": [[580, "mpoption_info_mosek"]], "mpoption_info_osqp() (built-in function)": [[581, "mpoption_info_osqp"]], "mpoption_info_quadprog() (built-in function)": [[582, "mpoption_info_quadprog"]], "mpoption_old() (built-in function)": [[583, "mpoption_old"]], "mpver() (built-in function)": [[584, "mpver"]], "newtonpf() (built-in function)": [[585, "newtonpf"]], "newtonpf_i_cart() (built-in function)": [[586, "newtonpf_I_cart"]], "newtonpf_i_hybrid() (built-in function)": [[587, "newtonpf_I_hybrid"]], "newtonpf_i_polar() (built-in function)": [[588, "newtonpf_I_polar"]], "newtonpf_s_cart() (built-in function)": [[589, "newtonpf_S_cart"]], "newtonpf_s_hybrid() (built-in function)": [[590, "newtonpf_S_hybrid"]], "nlpopf_solver() (built-in function)": [[591, "nlpopf_solver"]], "opf() (built-in function)": [[592, "opf"]], "opf_args() (built-in function)": [[593, "opf_args"]], "opf_branch_ang_fcn() (built-in function)": [[594, "opf_branch_ang_fcn"]], "opf_branch_ang_hess() (built-in function)": [[595, "opf_branch_ang_hess"]], "opf_branch_flow_fcn() (built-in function)": [[596, "opf_branch_flow_fcn"]], "opf_branch_flow_hess() (built-in function)": [[597, "opf_branch_flow_hess"]], "opf_current_balance_fcn() (built-in function)": [[598, "opf_current_balance_fcn"]], "opf_current_balance_hess() (built-in function)": [[599, "opf_current_balance_hess"]], "opf_execute() (built-in function)": [[600, "opf_execute"]], "opf_gen_cost_fcn() (built-in function)": [[601, "opf_gen_cost_fcn"]], "opf_legacy_user_cost_fcn() (built-in function)": [[602, "opf_legacy_user_cost_fcn"]], "opf_nle_fcn1() (built-in function)": [[603, "opf_nle_fcn1"]], "opf_nle_hess1() (built-in function)": [[604, "opf_nle_hess1"]], "opf_power_balance_fcn() (built-in function)": [[605, "opf_power_balance_fcn"]], "opf_power_balance_hess() (built-in function)": [[606, "opf_power_balance_hess"]], "opf_setup() (built-in function)": [[607, "opf_setup"]], "opf_veq_fcn() (built-in function)": [[608, "opf_veq_fcn"]], "opf_veq_hess() (built-in function)": [[609, "opf_veq_hess"]], "opf_vlim_fcn() (built-in function)": [[610, "opf_vlim_fcn"]], "opf_vlim_hess() (built-in function)": [[611, "opf_vlim_hess"]], "opf_vref_fcn() (built-in function)": [[612, "opf_vref_fcn"]], "opf_vref_hess() (built-in function)": [[613, "opf_vref_hess"]], "order_radial() (built-in function)": [[614, "order_radial"]], "pfsoln() (built-in function)": [[615, "pfsoln"]], "poly2pwl() (built-in function)": [[616, "poly2pwl"]], "polycost() (built-in function)": [[617, "polycost"]], "pqcost() (built-in function)": [[618, "pqcost"]], "printpf() (built-in function)": [[619, "printpf"]], "psse2mpc() (built-in function)": [[620, "psse2mpc"]], "psse_convert() (built-in function)": [[621, "psse_convert"]], "psse_convert_hvdc() (built-in function)": [[622, "psse_convert_hvdc"]], "psse_convert_xfmr() (built-in function)": [[623, "psse_convert_xfmr"]], "psse_parse() (built-in function)": [[624, "psse_parse"]], "psse_parse_line() (built-in function)": [[625, "psse_parse_line"]], "psse_parse_section() (built-in function)": [[626, "psse_parse_section"]], "psse_read() (built-in function)": [[627, "psse_read"]], "qps_matpower() (built-in function)": [[628, "qps_matpower"]], "radial_pf() (built-in function)": [[629, "radial_pf"]], "remove_userfcn() (built-in function)": [[630, "remove_userfcn"]], "run_userfcn() (built-in function)": [[631, "run_userfcn"]], "runcpf() (built-in function)": [[632, "runcpf"]], "rundcopf() (built-in function)": [[633, "rundcopf"]], "rundcpf() (built-in function)": [[634, "rundcpf"]], "runduopf() (built-in function)": [[635, "runduopf"]], "runopf() (built-in function)": [[636, "runopf"]], "runopf_w_res() (built-in function)": [[637, "runopf_w_res"]], "runpf() (built-in function)": [[638, "runpf"]], "runuopf() (built-in function)": [[639, "runuopf"]], "save2psse() (built-in function)": [[640, "save2psse"]], "savecase() (built-in function)": [[641, "savecase"]], "savechgtab() (built-in function)": [[642, "savechgtab"]], "scale_load() (built-in function)": [[643, "scale_load"]], "set_reorder() (built-in function)": [[644, "set_reorder"]], "t_apply_changes() (built-in function)": [[645, "t_apply_changes"]], "t_auction_case() (built-in function)": [[646, "t_auction_case"]], "t_auction_minopf() (built-in function)": [[647, "t_auction_minopf"]], "t_auction_mips() (built-in function)": [[648, "t_auction_mips"]], "t_auction_tspopf_pdipm() (built-in function)": [[649, "t_auction_tspopf_pdipm"]], "t_case30_userfcns() (built-in function)": [[650, "t_case30_userfcns"]], "t_case9_dcline() (built-in function)": [[651, "t_case9_dcline"]], "t_case9_opf() (built-in function)": [[652, "t_case9_opf"]], "t_case9_opfv2() (built-in function)": [[653, "t_case9_opfv2"]], "t_case9_pf() (built-in function)": [[654, "t_case9_pf"]], "t_case9_pfv2() (built-in function)": [[655, "t_case9_pfv2"]], "t_case9_save2psse() (built-in function)": [[656, "t_case9_save2psse"]], "t_case_ext() (built-in function)": [[657, "t_case_ext"]], "t_case_int() (built-in function)": [[658, "t_case_int"]], "t_chgtab() (built-in function)": [[659, "t_chgtab"]], "t_cpf() (built-in function)": [[660, "t_cpf"]], "t_cpf_cb1() (built-in function)": [[661, "t_cpf_cb1"]], "t_cpf_cb2() (built-in function)": [[662, "t_cpf_cb2"]], "t_dcline() (built-in function)": [[663, "t_dcline"]], "t_ext2int2ext() (built-in function)": [[664, "t_ext2int2ext"]], "t_feval_w_path() (built-in function)": [[665, "t_feval_w_path"]], "t_get_losses() (built-in function)": [[666, "t_get_losses"]], "t_haspqcap() (built-in function)": [[667, "t_hasPQcap"]], "t_hessian() (built-in function)": [[668, "t_hessian"]], "t_islands() (built-in function)": [[669, "t_islands"]], "t_jacobian() (built-in function)": [[670, "t_jacobian"]], "t_load2disp() (built-in function)": [[671, "t_load2disp"]], "t_loadcase() (built-in function)": [[672, "t_loadcase"]], "t_makelodf() (built-in function)": [[673, "t_makeLODF"]], "t_makeptdf() (built-in function)": [[674, "t_makePTDF"]], "t_margcost() (built-in function)": [[675, "t_margcost"]], "t_miqps_matpower() (built-in function)": [[676, "t_miqps_matpower"]], "t_modcost() (built-in function)": [[677, "t_modcost"]], "t_mpoption() (built-in function)": [[678, "t_mpoption"]], "t_mpoption_ov() (built-in function)": [[679, "t_mpoption_ov"]], "t_off2case() (built-in function)": [[680, "t_off2case"]], "t_opf_dc_bpmpd() (built-in function)": [[681, "t_opf_dc_bpmpd"]], "t_opf_dc_clp() (built-in function)": [[682, "t_opf_dc_clp"]], "t_opf_dc_cplex() (built-in function)": [[683, "t_opf_dc_cplex"]], "t_opf_dc_default() (built-in function)": [[684, "t_opf_dc_default"]], "t_opf_dc_glpk() (built-in function)": [[685, "t_opf_dc_glpk"]], "t_opf_dc_gurobi() (built-in function)": [[686, "t_opf_dc_gurobi"]], "t_opf_dc_ipopt() (built-in function)": [[687, "t_opf_dc_ipopt"]], "t_opf_dc_mips() (built-in function)": [[688, "t_opf_dc_mips"]], "t_opf_dc_mips_sc() (built-in function)": [[689, "t_opf_dc_mips_sc"]], "t_opf_dc_mosek() (built-in function)": [[690, "t_opf_dc_mosek"]], "t_opf_dc_osqp() (built-in function)": [[691, "t_opf_dc_osqp"]], "t_opf_dc_ot() (built-in function)": [[692, "t_opf_dc_ot"]], "t_opf_default() (built-in function)": [[693, "t_opf_default"]], "t_opf_fmincon() (built-in function)": [[694, "t_opf_fmincon"]], "t_opf_ipopt() (built-in function)": [[695, "t_opf_ipopt"]], "t_opf_knitro() (built-in function)": [[696, "t_opf_knitro"]], "t_opf_minopf() (built-in function)": [[697, "t_opf_minopf"]], "t_opf_mips() (built-in function)": [[698, "t_opf_mips"]], "t_opf_model() (built-in function)": [[699, "t_opf_model"]], "t_opf_softlims() (built-in function)": [[700, "t_opf_softlims"]], "t_opf_tspopf_pdipm() (built-in function)": [[701, "t_opf_tspopf_pdipm"]], "t_opf_tspopf_scpdipm() (built-in function)": [[702, "t_opf_tspopf_scpdipm"]], "t_opf_tspopf_tralm() (built-in function)": [[703, "t_opf_tspopf_tralm"]], "t_opf_userfcns() (built-in function)": [[704, "t_opf_userfcns"]], "t_pf_ac() (built-in function)": [[705, "t_pf_ac"]], "t_pf_dc() (built-in function)": [[706, "t_pf_dc"]], "t_pf_radial() (built-in function)": [[707, "t_pf_radial"]], "t_printpf() (built-in function)": [[708, "t_printpf"]], "t_psse() (built-in function)": [[709, "t_psse"]], "t_qps_matpower() (built-in function)": [[710, "t_qps_matpower"]], "t_runmarket() (built-in function)": [[711, "t_runmarket"]], "t_runopf_w_res() (built-in function)": [[712, "t_runopf_w_res"]], "t_scale_load() (built-in function)": [[713, "t_scale_load"]], "t_total_load() (built-in function)": [[714, "t_total_load"]], "t_totcost() (built-in function)": [[715, "t_totcost"]], "t_vdep_load() (built-in function)": [[716, "t_vdep_load"]], "toggle_dcline() (built-in function)": [[717, "toggle_dcline"]], "toggle_iflims() (built-in function)": [[718, "toggle_iflims"]], "toggle_reserves() (built-in function)": [[719, "toggle_reserves"]], "toggle_softlims() (built-in function)": [[720, "toggle_softlims"]], "total_load() (built-in function)": [[721, "total_load"]], "totcost() (built-in function)": [[722, "totcost"]], "uopf() (built-in function)": [[723, "uopf"]], "update_mupq() (built-in function)": [[724, "update_mupq"]], "zgausspf() (built-in function)": [[725, "zgausspf"]], "mp_foo_table (built-in class)": [[729, "mp_foo_table"]], "t_case3p_a() (built-in function)": [[730, "t_case3p_a"]], "t_case3p_b() (built-in function)": [[731, "t_case3p_b"]], "t_case3p_c() (built-in function)": [[732, "t_case3p_c"]], "t_case3p_d() (built-in function)": [[733, "t_case3p_d"]], "t_case3p_e() (built-in function)": [[734, "t_case3p_e"]], "t_case3p_f() (built-in function)": [[735, "t_case3p_f"]], "t_case3p_g() (built-in function)": [[736, "t_case3p_g"]], "t_case3p_h() (built-in function)": [[737, "t_case3p_h"]], "t_case9_gizmo() (built-in function)": [[738, "t_case9_gizmo"]], "t_dmc_element() (built-in function)": [[739, "t_dmc_element"]], "t_mp_data_model() (built-in function)": [[740, "t_mp_data_model"]], "t_mp_dm_converter_mpc2() (built-in function)": [[741, "t_mp_dm_converter_mpc2"]], "t_mp_mapped_array() (built-in function)": [[742, "t_mp_mapped_array"]], "t_mp_table() (built-in function)": [[743, "t_mp_table"]], "t_mpxt_legacy_dcline() (built-in function)": [[744, "t_mpxt_legacy_dcline"]], "t_mpxt_reserves() (built-in function)": [[745, "t_mpxt_reserves"]], "t_nm_element() (built-in function)": [[746, "t_nm_element"]], "t_node_test() (built-in function)": [[747, "t_node_test"]], "t_port_inj_current_acc() (built-in function)": [[748, "t_port_inj_current_acc"]], "t_port_inj_current_acp() (built-in function)": [[749, "t_port_inj_current_acp"]], "t_port_inj_power_acc() (built-in function)": [[750, "t_port_inj_power_acc"]], "t_port_inj_power_acp() (built-in function)": [[751, "t_port_inj_power_acp"]], "t_pretty_print() (built-in function)": [[752, "t_pretty_print"]], "t_run_mp() (built-in function)": [[753, "t_run_mp"]], "t_run_mp_3p() (built-in function)": [[754, "t_run_mp_3p"]], "t_run_opf_default() (built-in function)": [[755, "t_run_opf_default"]], "test_matpower() (built-in function)": [[756, "test_matpower"]]}})