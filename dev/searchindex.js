Search.setIndex({"docnames": ["dev-manual/acknowledgments", "dev-manual/architecture", "dev-manual/customizing", "dev-manual/data-model", "dev-manual/data-model-converter", "dev-manual/index", "dev-manual/introduction", "dev-manual/math-model", "dev-manual/net-model", "dev-manual/notation", "dev-manual/references", "dev-manual/task", "howto/add-constraint", "howto/builddocs", "howto/builddocs/generate_autodoc_stubs", "howto/builddocs/generate_matpower_autodoc", "howto/builddocs/generate_source_symlinks", "howto/element", "howto/extension", "howto/gizmo-element/index", "howto/three-phase", "index", "mips/functions/have_feature_lu_vec", "mips/functions/have_feature_pardiso", "mips/functions/have_feature_pardiso_legacy", "mips/functions/have_feature_pardiso_object", "mips/functions/mips", "mips/functions/mips_example1", "mips/functions/mips_example2", "mips/functions/mipsver", "mips/functions/mplinsolve", "mips/functions/qps_mips", "mips/functions/t_mips", "mips/functions/t_mips_pardiso", "mips/functions/t_mplinsolve", "mips/functions/t_qps_mips", "mips/functions/test_mips", "mips/index", "mips/reference", "most/functions/addgen2mpc", "most/functions/addstorage", "most/functions/addwind", "most/functions/apply_profile", "most/functions/c118swf", "most/functions/ex_case3a", "most/functions/ex_case3b", "most/functions/ex_contab", "most/functions/ex_load_profile", "most/functions/ex_storage", "most/functions/ex_transmat", "most/functions/ex_wind", "most/functions/ex_wind_profile", "most/functions/ex_wind_profile_d", "most/functions/ex_wind_uc", "most/functions/ex_xgd", "most/functions/ex_xgd_ramp", "most/functions/ex_xgd_res", "most/functions/ex_xgd_uc", "most/functions/filter_ramp_transitions", "most/functions/getprofiles", "most/functions/idx_profile", "most/functions/loadgenericdata", "most/functions/loadmd", "most/functions/loadstoragedata", "most/functions/loadxgendata", "most/functions/md_init", "most/functions/most", "most/functions/most_ex1_ed", "most/functions/most_ex2_dcopf", "most/functions/most_ex3_dcopf_w_uc", "most/functions/most_ex4_dcopf_ss", "most/functions/most_ex5_mpopf", "most/functions/most_ex6_uc", "most/functions/most_ex7_suc", "most/functions/most_summary", "most/functions/mostver", "most/functions/mpoption_info_most", "most/functions/plot_gen", "most/functions/plot_storage", "most/functions/plot_uc", "most/functions/plot_uc_data", "most/functions/t_case30_most", "most/functions/t_case3_most", "most/functions/t_case_tlmp", "most/functions/t_case_tlmp_storage", "most/functions/t_most_30b_1_1_0", "most/functions/t_most_30b_1_1_0_uc", "most/functions/t_most_30b_1_1_17", "most/functions/t_most_30b_3_1_0", "most/functions/t_most_30b_3_1_17", "most/functions/t_most_3b_1_1_0", "most/functions/t_most_3b_1_1_2", "most/functions/t_most_3b_3_1_0", "most/functions/t_most_3b_3_1_2", "most/functions/t_most_fixed_res", "most/functions/t_most_mpopf", "most/functions/t_most_sp", "most/functions/t_most_spuc", "most/functions/t_most_suc", "most/functions/t_most_tlmp", "most/functions/t_most_uc", "most/functions/t_most_w_ds", "most/functions/test_most", "most/functions/uniformwindprofile", "most/index", "most/reference", "mpom/classes/mp/set_manager", "mpom/classes/mp/set_manager_opt_model", "mpom/classes/mp/sm_lin_constraint", "mpom/classes/mp/sm_nln_constraint", "mpom/classes/mp/sm_nln_cost", "mpom/classes/mp/sm_quad_cost", "mpom/classes/mp/sm_variable", "mpom/classes/mp_idx_manager", "mpom/classes/opt_model", "mpom/functions/artelys_knitro_options", "mpom/functions/convert_lin_constraint", "mpom/functions/convert_lin_constraint_multipliers", "mpom/functions/cplex_options", "mpom/functions/glpk_options", "mpom/functions/gurobi_options", "mpom/functions/gurobiver", "mpom/functions/have_feature_bpmpd", "mpom/functions/have_feature_catchme", "mpom/functions/have_feature_clp", "mpom/functions/have_feature_cplex", "mpom/functions/have_feature_evalc", "mpom/functions/have_feature_fmincon", "mpom/functions/have_feature_fmincon_ipm", "mpom/functions/have_feature_fsolve", "mpom/functions/have_feature_glpk", "mpom/functions/have_feature_gurobi", "mpom/functions/have_feature_intlinprog", "mpom/functions/have_feature_ipopt", "mpom/functions/have_feature_ipopt_auxdata", "mpom/functions/have_feature_isequaln", "mpom/functions/have_feature_knitro", "mpom/functions/have_feature_knitromatlab", "mpom/functions/have_feature_ktrlink", "mpom/functions/have_feature_linprog", "mpom/functions/have_feature_linprog_ds", "mpom/functions/have_feature_mosek", "mpom/functions/have_feature_opti_clp", "mpom/functions/have_feature_optim", "mpom/functions/have_feature_optimoptions", "mpom/functions/have_feature_osqp", "mpom/functions/have_feature_quadprog", "mpom/functions/have_feature_quadprog_ls", "mpom/functions/have_feature_sdpt3", "mpom/functions/have_feature_sedumi", "mpom/functions/have_feature_yalmip", "mpom/functions/ipopt_options", "mpom/functions/knitrover", "mpom/functions/miqps_cplex", "mpom/functions/miqps_glpk", "mpom/functions/miqps_gurobi", "mpom/functions/miqps_master", "mpom/functions/miqps_mosek", "mpom/functions/miqps_ot", "mpom/functions/mosek_options", "mpom/functions/mosek_symbcon", "mpom/functions/mpomver", "mpom/functions/mpopt2nleqopt", "mpom/functions/mpopt2nlpopt", "mpom/functions/mpopt2pneopt", "mpom/functions/mpopt2qpopt", "mpom/functions/nested_struct_copy", "mpom/functions/nleqs_core", "mpom/functions/nleqs_fd_newton", "mpom/functions/nleqs_fsolve", "mpom/functions/nleqs_gauss_seidel", "mpom/functions/nleqs_master", "mpom/functions/nleqs_master_ex1", "mpom/functions/nleqs_master_ex2", "mpom/functions/nleqs_newton", "mpom/functions/nlp_consfcn", "mpom/functions/nlp_costfcn", "mpom/functions/nlp_hessfcn", "mpom/functions/nlps_fmincon", "mpom/functions/nlps_ipopt", "mpom/functions/nlps_knitro", "mpom/functions/nlps_master", "mpom/functions/nlps_master_ex1", "mpom/functions/nlps_master_ex2", "mpom/functions/osqp_options", "mpom/functions/osqpver", "mpom/functions/pne_callback_default", "mpom/functions/pne_callback_nose", "mpom/functions/pne_callback_target_lam", "mpom/functions/pne_detect_events", "mpom/functions/pne_detected_event", "mpom/functions/pne_event_nose", "mpom/functions/pne_event_target_lam", "mpom/functions/pne_ex1", "mpom/functions/pne_pfcn_arc_len", "mpom/functions/pne_pfcn_natural", "mpom/functions/pne_pfcn_pseudo_arc_len", "mpom/functions/pne_register_callbacks", "mpom/functions/pne_register_events", "mpom/functions/pnes_master", "mpom/functions/qp_ex1", "mpom/functions/qps_bpmpd", "mpom/functions/qps_clp", "mpom/functions/qps_cplex", "mpom/functions/qps_glpk", "mpom/functions/qps_gurobi", "mpom/functions/qps_ipopt", "mpom/functions/qps_knitro", "mpom/functions/qps_master", "mpom/functions/qps_mosek", "mpom/functions/qps_osqp", "mpom/functions/qps_ot", "mpom/functions/t_miqps_master", "mpom/functions/t_nested_struct_copy", "mpom/functions/t_nleqs_master", "mpom/functions/t_nlps_master", "mpom/functions/t_om_solve_leqs", "mpom/functions/t_om_solve_miqps", "mpom/functions/t_om_solve_nleqs", "mpom/functions/t_om_solve_nlps", "mpom/functions/t_om_solve_pne", "mpom/functions/t_om_solve_qps", "mpom/functions/t_opt_model", "mpom/functions/t_pnes_master", "mpom/functions/t_qps_master", "mpom/functions/test_mp_opt_model", "mpom/index", "mpom/reference", "mptest/functions/have_feature", "mptest/functions/have_feature_matlab", "mptest/functions/have_feature_octave", "mptest/functions/mptestver", "mptest/functions/t_begin", "mptest/functions/t_end", "mptest/functions/t_file_match", "mptest/functions/t_have_feature", "mptest/functions/t_is", "mptest/functions/t_ok", "mptest/functions/t_run_tests", "mptest/functions/t_skip", "mptest/functions/t_str_match", "mptest/functions/t_test_fcns", "mptest/functions/test_mptest", "mptest/index", "mptest/reference", "ref-manual/classes/index", "ref-manual/classes/mp/NODE_TYPE", "ref-manual/classes/mp/cost_table", "ref-manual/classes/mp/cost_table_utils", "ref-manual/classes/mp/data_model", "ref-manual/classes/mp/data_model_cpf", "ref-manual/classes/mp/data_model_opf", "ref-manual/classes/mp/dm_converter", "ref-manual/classes/mp/dm_converter_mpc2", "ref-manual/classes/mp/dm_converter_mpc2_legacy", "ref-manual/classes/mp/dm_element", "ref-manual/classes/mp/dmc_element", "ref-manual/classes/mp/dmce_branch_mpc2", "ref-manual/classes/mp/dmce_bus3p_mpc2", "ref-manual/classes/mp/dmce_bus_mpc2", "ref-manual/classes/mp/dmce_buslink_mpc2", "ref-manual/classes/mp/dmce_gen3p_mpc2", "ref-manual/classes/mp/dmce_gen_mpc2", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2", "ref-manual/classes/mp/dmce_line3p_mpc2", "ref-manual/classes/mp/dmce_load3p_mpc2", "ref-manual/classes/mp/dmce_load_mpc2", "ref-manual/classes/mp/dmce_reserve_gen_mpc2", "ref-manual/classes/mp/dmce_reserve_zone_mpc2", "ref-manual/classes/mp/dmce_shunt_mpc2", "ref-manual/classes/mp/dmce_xfmr3p_mpc2", "ref-manual/classes/mp/dme_branch", "ref-manual/classes/mp/dme_branch_opf", "ref-manual/classes/mp/dme_bus", "ref-manual/classes/mp/dme_bus3p", "ref-manual/classes/mp/dme_bus3p_opf", "ref-manual/classes/mp/dme_bus_opf", "ref-manual/classes/mp/dme_buslink", "ref-manual/classes/mp/dme_buslink_opf", "ref-manual/classes/mp/dme_gen", "ref-manual/classes/mp/dme_gen3p", "ref-manual/classes/mp/dme_gen3p_opf", "ref-manual/classes/mp/dme_gen_opf", "ref-manual/classes/mp/dme_legacy_dcline", "ref-manual/classes/mp/dme_legacy_dcline_opf", "ref-manual/classes/mp/dme_line3p", "ref-manual/classes/mp/dme_line3p_opf", "ref-manual/classes/mp/dme_load", "ref-manual/classes/mp/dme_load3p", "ref-manual/classes/mp/dme_load3p_opf", "ref-manual/classes/mp/dme_load_cpf", "ref-manual/classes/mp/dme_load_opf", "ref-manual/classes/mp/dme_reserve_gen", "ref-manual/classes/mp/dme_reserve_zone", "ref-manual/classes/mp/dme_shared_opf", "ref-manual/classes/mp/dme_shunt", "ref-manual/classes/mp/dme_shunt_cpf", "ref-manual/classes/mp/dme_shunt_opf", "ref-manual/classes/mp/dme_xfmr3p", "ref-manual/classes/mp/dme_xfmr3p_opf", "ref-manual/classes/mp/element_container", "ref-manual/classes/mp/extension", "ref-manual/classes/mp/form", "ref-manual/classes/mp/form_ac", "ref-manual/classes/mp/form_acc", "ref-manual/classes/mp/form_acp", "ref-manual/classes/mp/form_dc", "ref-manual/classes/mp/mapped_array", "ref-manual/classes/mp/math_model", "ref-manual/classes/mp/math_model_cpf_acc", "ref-manual/classes/mp/math_model_cpf_acci", "ref-manual/classes/mp/math_model_cpf_accs", "ref-manual/classes/mp/math_model_cpf_acp", "ref-manual/classes/mp/math_model_cpf_acpi", "ref-manual/classes/mp/math_model_cpf_acps", "ref-manual/classes/mp/math_model_opf", "ref-manual/classes/mp/math_model_opf_ac", "ref-manual/classes/mp/math_model_opf_acc", "ref-manual/classes/mp/math_model_opf_acci", "ref-manual/classes/mp/math_model_opf_acci_legacy", "ref-manual/classes/mp/math_model_opf_accs", "ref-manual/classes/mp/math_model_opf_accs_legacy", "ref-manual/classes/mp/math_model_opf_acp", "ref-manual/classes/mp/math_model_opf_acpi", "ref-manual/classes/mp/math_model_opf_acpi_legacy", "ref-manual/classes/mp/math_model_opf_acps", "ref-manual/classes/mp/math_model_opf_acps_legacy", "ref-manual/classes/mp/math_model_opf_dc", "ref-manual/classes/mp/math_model_opf_dc_legacy", "ref-manual/classes/mp/math_model_pf", "ref-manual/classes/mp/math_model_pf_ac", "ref-manual/classes/mp/math_model_pf_acci", "ref-manual/classes/mp/math_model_pf_accs", "ref-manual/classes/mp/math_model_pf_acpi", "ref-manual/classes/mp/math_model_pf_acps", "ref-manual/classes/mp/math_model_pf_dc", "ref-manual/classes/mp/mm_element", "ref-manual/classes/mp/mm_shared_opf_legacy", "ref-manual/classes/mp/mm_shared_pfcpf", "ref-manual/classes/mp/mm_shared_pfcpf_ac", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i", "ref-manual/classes/mp/mm_shared_pfcpf_acc", "ref-manual/classes/mp/mm_shared_pfcpf_acci", "ref-manual/classes/mp/mm_shared_pfcpf_accs", "ref-manual/classes/mp/mm_shared_pfcpf_acp", "ref-manual/classes/mp/mm_shared_pfcpf_acpi", "ref-manual/classes/mp/mm_shared_pfcpf_acps", "ref-manual/classes/mp/mm_shared_pfcpf_dc", "ref-manual/classes/mp/mme_branch", "ref-manual/classes/mp/mme_branch_opf", "ref-manual/classes/mp/mme_branch_opf_ac", "ref-manual/classes/mp/mme_branch_opf_acc", "ref-manual/classes/mp/mme_branch_opf_acp", "ref-manual/classes/mp/mme_branch_opf_dc", "ref-manual/classes/mp/mme_branch_pf_ac", "ref-manual/classes/mp/mme_branch_pf_dc", "ref-manual/classes/mp/mme_bus", "ref-manual/classes/mp/mme_bus3p", "ref-manual/classes/mp/mme_bus3p_opf_acc", "ref-manual/classes/mp/mme_bus3p_opf_acp", "ref-manual/classes/mp/mme_bus_opf_ac", "ref-manual/classes/mp/mme_bus_opf_acc", "ref-manual/classes/mp/mme_bus_opf_acp", "ref-manual/classes/mp/mme_bus_opf_dc", "ref-manual/classes/mp/mme_bus_pf_ac", "ref-manual/classes/mp/mme_bus_pf_dc", "ref-manual/classes/mp/mme_buslink", "ref-manual/classes/mp/mme_buslink_opf", "ref-manual/classes/mp/mme_buslink_opf_acc", "ref-manual/classes/mp/mme_buslink_opf_acp", "ref-manual/classes/mp/mme_buslink_pf_ac", "ref-manual/classes/mp/mme_buslink_pf_acc", "ref-manual/classes/mp/mme_buslink_pf_acp", "ref-manual/classes/mp/mme_gen", "ref-manual/classes/mp/mme_gen3p", "ref-manual/classes/mp/mme_gen3p_opf", "ref-manual/classes/mp/mme_gen_opf", "ref-manual/classes/mp/mme_gen_opf_ac", "ref-manual/classes/mp/mme_gen_opf_ac_oval", "ref-manual/classes/mp/mme_gen_opf_dc", "ref-manual/classes/mp/mme_gen_pf_ac", "ref-manual/classes/mp/mme_gen_pf_dc", "ref-manual/classes/mp/mme_legacy_dcline", "ref-manual/classes/mp/mme_legacy_dcline_opf", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc", "ref-manual/classes/mp/mme_line3p", "ref-manual/classes/mp/mme_line3p_opf", "ref-manual/classes/mp/mme_load", "ref-manual/classes/mp/mme_load_cpf", "ref-manual/classes/mp/mme_load_pf_ac", "ref-manual/classes/mp/mme_load_pf_dc", "ref-manual/classes/mp/mme_reserve_gen", "ref-manual/classes/mp/mme_reserve_zone", "ref-manual/classes/mp/mme_shunt", "ref-manual/classes/mp/mme_shunt_cpf", "ref-manual/classes/mp/mme_shunt_pf_ac", "ref-manual/classes/mp/mme_shunt_pf_dc", "ref-manual/classes/mp/mme_xfmr3p", "ref-manual/classes/mp/mme_xfmr3p_opf", "ref-manual/classes/mp/net_model", "ref-manual/classes/mp/net_model_ac", "ref-manual/classes/mp/net_model_acc", "ref-manual/classes/mp/net_model_acp", "ref-manual/classes/mp/net_model_dc", "ref-manual/classes/mp/nm_element", "ref-manual/classes/mp/nme_branch", "ref-manual/classes/mp/nme_branch_ac", "ref-manual/classes/mp/nme_branch_acc", "ref-manual/classes/mp/nme_branch_acp", "ref-manual/classes/mp/nme_branch_dc", "ref-manual/classes/mp/nme_bus", "ref-manual/classes/mp/nme_bus3p", "ref-manual/classes/mp/nme_bus3p_acc", "ref-manual/classes/mp/nme_bus3p_acp", "ref-manual/classes/mp/nme_bus_acc", "ref-manual/classes/mp/nme_bus_acp", "ref-manual/classes/mp/nme_bus_dc", "ref-manual/classes/mp/nme_buslink", "ref-manual/classes/mp/nme_buslink_acc", "ref-manual/classes/mp/nme_buslink_acp", "ref-manual/classes/mp/nme_gen", "ref-manual/classes/mp/nme_gen3p", "ref-manual/classes/mp/nme_gen3p_acc", "ref-manual/classes/mp/nme_gen3p_acp", "ref-manual/classes/mp/nme_gen_ac", "ref-manual/classes/mp/nme_gen_acc", "ref-manual/classes/mp/nme_gen_acp", "ref-manual/classes/mp/nme_gen_dc", "ref-manual/classes/mp/nme_legacy_dcline", "ref-manual/classes/mp/nme_legacy_dcline_ac", "ref-manual/classes/mp/nme_legacy_dcline_acc", "ref-manual/classes/mp/nme_legacy_dcline_acp", "ref-manual/classes/mp/nme_legacy_dcline_dc", "ref-manual/classes/mp/nme_line3p", "ref-manual/classes/mp/nme_load", "ref-manual/classes/mp/nme_load3p", "ref-manual/classes/mp/nme_load_ac", "ref-manual/classes/mp/nme_load_acc", "ref-manual/classes/mp/nme_load_acp", "ref-manual/classes/mp/nme_load_dc", "ref-manual/classes/mp/nme_shunt", "ref-manual/classes/mp/nme_shunt_ac", "ref-manual/classes/mp/nme_shunt_acc", "ref-manual/classes/mp/nme_shunt_acp", "ref-manual/classes/mp/nme_shunt_dc", "ref-manual/classes/mp/nme_xfmr3p", "ref-manual/classes/mp/sm_legacy_cost", "ref-manual/classes/mp/task", "ref-manual/classes/mp/task_cpf", "ref-manual/classes/mp/task_cpf_legacy", "ref-manual/classes/mp/task_opf", "ref-manual/classes/mp/task_opf_legacy", "ref-manual/classes/mp/task_pf", "ref-manual/classes/mp/task_pf_legacy", "ref-manual/classes/mp/task_shared_legacy", "ref-manual/classes/mp/xt_3p", "ref-manual/classes/mp/xt_legacy_dcline", "ref-manual/classes/mp/xt_oval_cap_curve", "ref-manual/classes/mp/xt_reserves", "ref-manual/classes/mp_table", "ref-manual/classes/mp_table_subclass", "ref-manual/functions/index", "ref-manual/functions/install_matpower", "ref-manual/functions/mp/load_dm", "ref-manual/functions/mp_table_class", "ref-manual/functions/run_cpf", "ref-manual/functions/run_mp", "ref-manual/functions/run_opf", "ref-manual/functions/run_pf", "ref-manual/index", "ref-manual/introduction", "ref-manual/legacy/classes/opf_model", "ref-manual/legacy/functions/add_userfcn", "ref-manual/legacy/functions/apply_changes", "ref-manual/legacy/functions/bustypes", "ref-manual/legacy/functions/calc_branch_angle", "ref-manual/legacy/functions/calc_v_i_sum", "ref-manual/legacy/functions/calc_v_pq_sum", "ref-manual/legacy/functions/calc_v_y_sum", "ref-manual/legacy/functions/case_info", "ref-manual/legacy/functions/caseformat", "ref-manual/legacy/functions/cdf2mpc", "ref-manual/legacy/functions/compare_case", "ref-manual/legacy/functions/connected_components", "ref-manual/legacy/functions/cpf_corrector", "ref-manual/legacy/functions/cpf_current_mpc", "ref-manual/legacy/functions/cpf_default_callback", "ref-manual/legacy/functions/cpf_detect_events", "ref-manual/legacy/functions/cpf_flim_event", "ref-manual/legacy/functions/cpf_flim_event_cb", "ref-manual/legacy/functions/cpf_nose_event", "ref-manual/legacy/functions/cpf_nose_event_cb", "ref-manual/legacy/functions/cpf_p", "ref-manual/legacy/functions/cpf_p_jac", "ref-manual/legacy/functions/cpf_plim_event", "ref-manual/legacy/functions/cpf_plim_event_cb", "ref-manual/legacy/functions/cpf_predictor", "ref-manual/legacy/functions/cpf_qlim_event", "ref-manual/legacy/functions/cpf_qlim_event_cb", "ref-manual/legacy/functions/cpf_register_callback", "ref-manual/legacy/functions/cpf_register_event", "ref-manual/legacy/functions/cpf_tangent", "ref-manual/legacy/functions/cpf_target_lam_event", "ref-manual/legacy/functions/cpf_target_lam_event_cb", "ref-manual/legacy/functions/cpf_vlim_event", "ref-manual/legacy/functions/cpf_vlim_event_cb", "ref-manual/legacy/functions/d2Abr_dV2", "ref-manual/legacy/functions/d2Ibr_dV2", "ref-manual/legacy/functions/d2Imis_dV2", "ref-manual/legacy/functions/d2Imis_dVdSg", "ref-manual/legacy/functions/d2Sbr_dV2", "ref-manual/legacy/functions/d2Sbus_dV2", "ref-manual/legacy/functions/dAbr_dV", "ref-manual/legacy/functions/dIbr_dV", "ref-manual/legacy/functions/dImis_dV", "ref-manual/legacy/functions/dSbr_dV", "ref-manual/legacy/functions/dSbus_dV", "ref-manual/legacy/functions/dcopf", "ref-manual/legacy/functions/dcopf_solver", "ref-manual/legacy/functions/dcpf", "ref-manual/legacy/functions/define_constants", "ref-manual/legacy/functions/e2i_data", "ref-manual/legacy/functions/e2i_field", "ref-manual/legacy/functions/ext2int", "ref-manual/legacy/functions/extract_islands", "ref-manual/legacy/functions/fdpf", "ref-manual/legacy/functions/feval_w_path", "ref-manual/legacy/functions/find_bridges", "ref-manual/legacy/functions/find_islands", "ref-manual/legacy/functions/fmincopf", "ref-manual/legacy/functions/gausspf", "ref-manual/legacy/functions/genfuels", "ref-manual/legacy/functions/gentypes", "ref-manual/legacy/functions/get_losses", "ref-manual/legacy/functions/get_reorder", "ref-manual/legacy/functions/hasPQcap", "ref-manual/legacy/functions/have_feature_e4st", "ref-manual/legacy/functions/have_feature_minopf", "ref-manual/legacy/functions/have_feature_most", "ref-manual/legacy/functions/have_feature_mp_core", "ref-manual/legacy/functions/have_feature_pdipmopf", "ref-manual/legacy/functions/have_feature_regexp_split", "ref-manual/legacy/functions/have_feature_scpdipmopf", "ref-manual/legacy/functions/have_feature_sdp_pf", "ref-manual/legacy/functions/have_feature_smartmarket", "ref-manual/legacy/functions/have_feature_syngrid", "ref-manual/legacy/functions/have_feature_table", "ref-manual/legacy/functions/have_feature_tralmopf", "ref-manual/legacy/functions/i2e_data", "ref-manual/legacy/functions/i2e_field", "ref-manual/legacy/functions/idx_brch", "ref-manual/legacy/functions/idx_bus", "ref-manual/legacy/functions/idx_cost", "ref-manual/legacy/functions/idx_ct", "ref-manual/legacy/functions/idx_dcline", "ref-manual/legacy/functions/idx_gen", "ref-manual/legacy/functions/int2ext", "ref-manual/legacy/functions/isload", "ref-manual/legacy/functions/load2disp", "ref-manual/legacy/functions/loadcase", "ref-manual/legacy/functions/loadshed", "ref-manual/legacy/functions/makeAang", "ref-manual/legacy/functions/makeApq", "ref-manual/legacy/functions/makeAvl", "ref-manual/legacy/functions/makeAy", "ref-manual/legacy/functions/makeB", "ref-manual/legacy/functions/makeBdc", "ref-manual/legacy/functions/makeJac", "ref-manual/legacy/functions/makeLODF", "ref-manual/legacy/functions/makePTDF", "ref-manual/legacy/functions/makeSbus", "ref-manual/legacy/functions/makeSdzip", "ref-manual/legacy/functions/makeYbus", "ref-manual/legacy/functions/make_vcorr", "ref-manual/legacy/functions/make_zpv", "ref-manual/legacy/functions/margcost", "ref-manual/legacy/functions/miqps_matpower", "ref-manual/legacy/functions/modcost", "ref-manual/legacy/functions/mpoption", "ref-manual/legacy/functions/mpoption_info_clp", "ref-manual/legacy/functions/mpoption_info_cplex", "ref-manual/legacy/functions/mpoption_info_fmincon", "ref-manual/legacy/functions/mpoption_info_glpk", "ref-manual/legacy/functions/mpoption_info_gurobi", "ref-manual/legacy/functions/mpoption_info_intlinprog", "ref-manual/legacy/functions/mpoption_info_ipopt", "ref-manual/legacy/functions/mpoption_info_knitro", "ref-manual/legacy/functions/mpoption_info_linprog", "ref-manual/legacy/functions/mpoption_info_mips", "ref-manual/legacy/functions/mpoption_info_mosek", "ref-manual/legacy/functions/mpoption_info_osqp", "ref-manual/legacy/functions/mpoption_info_quadprog", "ref-manual/legacy/functions/mpoption_old", "ref-manual/legacy/functions/mpver", "ref-manual/legacy/functions/newtonpf", "ref-manual/legacy/functions/newtonpf_I_cart", "ref-manual/legacy/functions/newtonpf_I_hybrid", "ref-manual/legacy/functions/newtonpf_I_polar", "ref-manual/legacy/functions/newtonpf_S_cart", "ref-manual/legacy/functions/newtonpf_S_hybrid", "ref-manual/legacy/functions/nlpopf_solver", "ref-manual/legacy/functions/opf", "ref-manual/legacy/functions/opf_args", "ref-manual/legacy/functions/opf_branch_ang_fcn", "ref-manual/legacy/functions/opf_branch_ang_hess", "ref-manual/legacy/functions/opf_branch_flow_fcn", "ref-manual/legacy/functions/opf_branch_flow_hess", "ref-manual/legacy/functions/opf_current_balance_fcn", "ref-manual/legacy/functions/opf_current_balance_hess", "ref-manual/legacy/functions/opf_execute", "ref-manual/legacy/functions/opf_gen_cost_fcn", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn", "ref-manual/legacy/functions/opf_nle_fcn1", "ref-manual/legacy/functions/opf_nle_hess1", "ref-manual/legacy/functions/opf_power_balance_fcn", "ref-manual/legacy/functions/opf_power_balance_hess", "ref-manual/legacy/functions/opf_setup", "ref-manual/legacy/functions/opf_veq_fcn", "ref-manual/legacy/functions/opf_veq_hess", "ref-manual/legacy/functions/opf_vlim_fcn", "ref-manual/legacy/functions/opf_vlim_hess", "ref-manual/legacy/functions/opf_vref_fcn", "ref-manual/legacy/functions/opf_vref_hess", "ref-manual/legacy/functions/order_radial", "ref-manual/legacy/functions/pfsoln", "ref-manual/legacy/functions/poly2pwl", "ref-manual/legacy/functions/polycost", "ref-manual/legacy/functions/pqcost", "ref-manual/legacy/functions/printpf", "ref-manual/legacy/functions/psse2mpc", "ref-manual/legacy/functions/psse_convert", "ref-manual/legacy/functions/psse_convert_hvdc", "ref-manual/legacy/functions/psse_convert_xfmr", "ref-manual/legacy/functions/psse_parse", "ref-manual/legacy/functions/psse_parse_line", "ref-manual/legacy/functions/psse_parse_section", "ref-manual/legacy/functions/psse_read", "ref-manual/legacy/functions/qps_matpower", "ref-manual/legacy/functions/radial_pf", "ref-manual/legacy/functions/remove_userfcn", "ref-manual/legacy/functions/run_userfcn", "ref-manual/legacy/functions/runcpf", "ref-manual/legacy/functions/rundcopf", "ref-manual/legacy/functions/rundcpf", "ref-manual/legacy/functions/runduopf", "ref-manual/legacy/functions/runopf", "ref-manual/legacy/functions/runopf_w_res", "ref-manual/legacy/functions/runpf", "ref-manual/legacy/functions/runuopf", "ref-manual/legacy/functions/save2psse", "ref-manual/legacy/functions/savecase", "ref-manual/legacy/functions/savechgtab", "ref-manual/legacy/functions/scale_load", "ref-manual/legacy/functions/set_reorder", "ref-manual/legacy/functions/t_apply_changes", "ref-manual/legacy/functions/t_auction_case", "ref-manual/legacy/functions/t_auction_minopf", "ref-manual/legacy/functions/t_auction_mips", "ref-manual/legacy/functions/t_auction_tspopf_pdipm", "ref-manual/legacy/functions/t_case30_userfcns", "ref-manual/legacy/functions/t_case9_dcline", "ref-manual/legacy/functions/t_case9_opf", "ref-manual/legacy/functions/t_case9_opfv2", "ref-manual/legacy/functions/t_case9_pf", "ref-manual/legacy/functions/t_case9_pfv2", "ref-manual/legacy/functions/t_case9_save2psse", "ref-manual/legacy/functions/t_case_ext", "ref-manual/legacy/functions/t_case_int", "ref-manual/legacy/functions/t_chgtab", "ref-manual/legacy/functions/t_cpf", "ref-manual/legacy/functions/t_cpf_cb1", "ref-manual/legacy/functions/t_cpf_cb2", "ref-manual/legacy/functions/t_dcline", "ref-manual/legacy/functions/t_ext2int2ext", "ref-manual/legacy/functions/t_feval_w_path", "ref-manual/legacy/functions/t_get_losses", "ref-manual/legacy/functions/t_hasPQcap", "ref-manual/legacy/functions/t_hessian", "ref-manual/legacy/functions/t_islands", "ref-manual/legacy/functions/t_jacobian", "ref-manual/legacy/functions/t_load2disp", "ref-manual/legacy/functions/t_loadcase", "ref-manual/legacy/functions/t_makeLODF", "ref-manual/legacy/functions/t_makePTDF", "ref-manual/legacy/functions/t_margcost", "ref-manual/legacy/functions/t_miqps_matpower", "ref-manual/legacy/functions/t_modcost", "ref-manual/legacy/functions/t_mpoption", "ref-manual/legacy/functions/t_mpoption_ov", "ref-manual/legacy/functions/t_off2case", "ref-manual/legacy/functions/t_opf_dc_bpmpd", "ref-manual/legacy/functions/t_opf_dc_clp", "ref-manual/legacy/functions/t_opf_dc_cplex", "ref-manual/legacy/functions/t_opf_dc_default", "ref-manual/legacy/functions/t_opf_dc_glpk", "ref-manual/legacy/functions/t_opf_dc_gurobi", "ref-manual/legacy/functions/t_opf_dc_ipopt", "ref-manual/legacy/functions/t_opf_dc_mips", "ref-manual/legacy/functions/t_opf_dc_mips_sc", "ref-manual/legacy/functions/t_opf_dc_mosek", "ref-manual/legacy/functions/t_opf_dc_osqp", "ref-manual/legacy/functions/t_opf_dc_ot", "ref-manual/legacy/functions/t_opf_default", "ref-manual/legacy/functions/t_opf_fmincon", "ref-manual/legacy/functions/t_opf_ipopt", "ref-manual/legacy/functions/t_opf_knitro", "ref-manual/legacy/functions/t_opf_minopf", "ref-manual/legacy/functions/t_opf_mips", "ref-manual/legacy/functions/t_opf_model", "ref-manual/legacy/functions/t_opf_softlims", "ref-manual/legacy/functions/t_opf_tspopf_pdipm", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm", "ref-manual/legacy/functions/t_opf_tspopf_tralm", "ref-manual/legacy/functions/t_opf_userfcns", "ref-manual/legacy/functions/t_pf_ac", "ref-manual/legacy/functions/t_pf_dc", "ref-manual/legacy/functions/t_pf_radial", "ref-manual/legacy/functions/t_printpf", "ref-manual/legacy/functions/t_psse", "ref-manual/legacy/functions/t_qps_matpower", "ref-manual/legacy/functions/t_runmarket", "ref-manual/legacy/functions/t_runopf_w_res", "ref-manual/legacy/functions/t_scale_load", "ref-manual/legacy/functions/t_total_load", "ref-manual/legacy/functions/t_totcost", "ref-manual/legacy/functions/t_vdep_load", "ref-manual/legacy/functions/toggle_dcline", "ref-manual/legacy/functions/toggle_iflims", "ref-manual/legacy/functions/toggle_reserves", "ref-manual/legacy/functions/toggle_softlims", "ref-manual/legacy/functions/total_load", "ref-manual/legacy/functions/totcost", "ref-manual/legacy/functions/uopf", "ref-manual/legacy/functions/update_mupq", "ref-manual/legacy/functions/zgausspf", "ref-manual/legacy/index", "ref-manual/previous", "ref-manual/tests/index", "ref-manual/tests/mp_foo_table", "ref-manual/tests/t_case3p_a", "ref-manual/tests/t_case3p_b", "ref-manual/tests/t_case3p_c", "ref-manual/tests/t_case3p_d", "ref-manual/tests/t_case3p_e", "ref-manual/tests/t_case3p_f", "ref-manual/tests/t_case3p_g", "ref-manual/tests/t_case3p_h", "ref-manual/tests/t_case9_gizmo", "ref-manual/tests/t_dmc_element", "ref-manual/tests/t_mp_data_model", "ref-manual/tests/t_mp_dm_converter_mpc2", "ref-manual/tests/t_mp_mapped_array", "ref-manual/tests/t_mp_table", "ref-manual/tests/t_mpxt_legacy_dcline", "ref-manual/tests/t_mpxt_reserves", "ref-manual/tests/t_nm_element", "ref-manual/tests/t_node_test", "ref-manual/tests/t_port_inj_current_acc", "ref-manual/tests/t_port_inj_current_acp", "ref-manual/tests/t_port_inj_power_acc", "ref-manual/tests/t_port_inj_power_acp", "ref-manual/tests/t_pretty_print", "ref-manual/tests/t_run_mp", "ref-manual/tests/t_run_mp_3p", "ref-manual/tests/t_run_opf_default", "ref-manual/tests/test_matpower", "tech-notes", "users-manual/index"], "filenames": ["dev-manual/acknowledgments.rst", "dev-manual/architecture.rst", "dev-manual/customizing.rst", "dev-manual/data-model.rst", "dev-manual/data-model-converter.rst", "dev-manual/index.rst", "dev-manual/introduction.rst", "dev-manual/math-model.rst", "dev-manual/net-model.rst", "dev-manual/notation.rst", "dev-manual/references.rst", "dev-manual/task.rst", "howto/add-constraint.rst", "howto/builddocs.rst", "howto/builddocs/generate_autodoc_stubs.rst", "howto/builddocs/generate_matpower_autodoc.rst", "howto/builddocs/generate_source_symlinks.rst", "howto/element.rst", "howto/extension.rst", "howto/gizmo-element/index.rst", "howto/three-phase.rst", "index.rst", "mips/functions/have_feature_lu_vec.rst", "mips/functions/have_feature_pardiso.rst", "mips/functions/have_feature_pardiso_legacy.rst", "mips/functions/have_feature_pardiso_object.rst", "mips/functions/mips.rst", "mips/functions/mips_example1.rst", "mips/functions/mips_example2.rst", "mips/functions/mipsver.rst", "mips/functions/mplinsolve.rst", "mips/functions/qps_mips.rst", "mips/functions/t_mips.rst", "mips/functions/t_mips_pardiso.rst", "mips/functions/t_mplinsolve.rst", "mips/functions/t_qps_mips.rst", "mips/functions/test_mips.rst", "mips/index.rst", "mips/reference.rst", "most/functions/addgen2mpc.rst", "most/functions/addstorage.rst", "most/functions/addwind.rst", "most/functions/apply_profile.rst", "most/functions/c118swf.rst", "most/functions/ex_case3a.rst", "most/functions/ex_case3b.rst", "most/functions/ex_contab.rst", "most/functions/ex_load_profile.rst", "most/functions/ex_storage.rst", "most/functions/ex_transmat.rst", "most/functions/ex_wind.rst", "most/functions/ex_wind_profile.rst", "most/functions/ex_wind_profile_d.rst", "most/functions/ex_wind_uc.rst", "most/functions/ex_xgd.rst", "most/functions/ex_xgd_ramp.rst", "most/functions/ex_xgd_res.rst", "most/functions/ex_xgd_uc.rst", "most/functions/filter_ramp_transitions.rst", "most/functions/getprofiles.rst", "most/functions/idx_profile.rst", "most/functions/loadgenericdata.rst", "most/functions/loadmd.rst", "most/functions/loadstoragedata.rst", "most/functions/loadxgendata.rst", "most/functions/md_init.rst", "most/functions/most.rst", "most/functions/most_ex1_ed.rst", "most/functions/most_ex2_dcopf.rst", "most/functions/most_ex3_dcopf_w_uc.rst", "most/functions/most_ex4_dcopf_ss.rst", "most/functions/most_ex5_mpopf.rst", "most/functions/most_ex6_uc.rst", "most/functions/most_ex7_suc.rst", "most/functions/most_summary.rst", "most/functions/mostver.rst", "most/functions/mpoption_info_most.rst", "most/functions/plot_gen.rst", "most/functions/plot_storage.rst", "most/functions/plot_uc.rst", "most/functions/plot_uc_data.rst", "most/functions/t_case30_most.rst", "most/functions/t_case3_most.rst", "most/functions/t_case_tlmp.rst", "most/functions/t_case_tlmp_storage.rst", "most/functions/t_most_30b_1_1_0.rst", "most/functions/t_most_30b_1_1_0_uc.rst", "most/functions/t_most_30b_1_1_17.rst", "most/functions/t_most_30b_3_1_0.rst", "most/functions/t_most_30b_3_1_17.rst", "most/functions/t_most_3b_1_1_0.rst", "most/functions/t_most_3b_1_1_2.rst", "most/functions/t_most_3b_3_1_0.rst", "most/functions/t_most_3b_3_1_2.rst", "most/functions/t_most_fixed_res.rst", "most/functions/t_most_mpopf.rst", "most/functions/t_most_sp.rst", "most/functions/t_most_spuc.rst", "most/functions/t_most_suc.rst", "most/functions/t_most_tlmp.rst", "most/functions/t_most_uc.rst", "most/functions/t_most_w_ds.rst", "most/functions/test_most.rst", "most/functions/uniformwindprofile.rst", "most/index.rst", "most/reference.rst", "mpom/classes/mp/set_manager.rst", "mpom/classes/mp/set_manager_opt_model.rst", "mpom/classes/mp/sm_lin_constraint.rst", "mpom/classes/mp/sm_nln_constraint.rst", "mpom/classes/mp/sm_nln_cost.rst", "mpom/classes/mp/sm_quad_cost.rst", "mpom/classes/mp/sm_variable.rst", "mpom/classes/mp_idx_manager.rst", "mpom/classes/opt_model.rst", "mpom/functions/artelys_knitro_options.rst", "mpom/functions/convert_lin_constraint.rst", "mpom/functions/convert_lin_constraint_multipliers.rst", "mpom/functions/cplex_options.rst", "mpom/functions/glpk_options.rst", "mpom/functions/gurobi_options.rst", "mpom/functions/gurobiver.rst", "mpom/functions/have_feature_bpmpd.rst", "mpom/functions/have_feature_catchme.rst", "mpom/functions/have_feature_clp.rst", "mpom/functions/have_feature_cplex.rst", "mpom/functions/have_feature_evalc.rst", "mpom/functions/have_feature_fmincon.rst", "mpom/functions/have_feature_fmincon_ipm.rst", "mpom/functions/have_feature_fsolve.rst", "mpom/functions/have_feature_glpk.rst", "mpom/functions/have_feature_gurobi.rst", "mpom/functions/have_feature_intlinprog.rst", "mpom/functions/have_feature_ipopt.rst", "mpom/functions/have_feature_ipopt_auxdata.rst", "mpom/functions/have_feature_isequaln.rst", "mpom/functions/have_feature_knitro.rst", "mpom/functions/have_feature_knitromatlab.rst", "mpom/functions/have_feature_ktrlink.rst", "mpom/functions/have_feature_linprog.rst", "mpom/functions/have_feature_linprog_ds.rst", "mpom/functions/have_feature_mosek.rst", "mpom/functions/have_feature_opti_clp.rst", "mpom/functions/have_feature_optim.rst", "mpom/functions/have_feature_optimoptions.rst", "mpom/functions/have_feature_osqp.rst", "mpom/functions/have_feature_quadprog.rst", "mpom/functions/have_feature_quadprog_ls.rst", "mpom/functions/have_feature_sdpt3.rst", "mpom/functions/have_feature_sedumi.rst", "mpom/functions/have_feature_yalmip.rst", "mpom/functions/ipopt_options.rst", "mpom/functions/knitrover.rst", "mpom/functions/miqps_cplex.rst", "mpom/functions/miqps_glpk.rst", "mpom/functions/miqps_gurobi.rst", "mpom/functions/miqps_master.rst", "mpom/functions/miqps_mosek.rst", "mpom/functions/miqps_ot.rst", "mpom/functions/mosek_options.rst", "mpom/functions/mosek_symbcon.rst", "mpom/functions/mpomver.rst", "mpom/functions/mpopt2nleqopt.rst", "mpom/functions/mpopt2nlpopt.rst", "mpom/functions/mpopt2pneopt.rst", "mpom/functions/mpopt2qpopt.rst", "mpom/functions/nested_struct_copy.rst", "mpom/functions/nleqs_core.rst", "mpom/functions/nleqs_fd_newton.rst", "mpom/functions/nleqs_fsolve.rst", "mpom/functions/nleqs_gauss_seidel.rst", "mpom/functions/nleqs_master.rst", "mpom/functions/nleqs_master_ex1.rst", "mpom/functions/nleqs_master_ex2.rst", "mpom/functions/nleqs_newton.rst", "mpom/functions/nlp_consfcn.rst", "mpom/functions/nlp_costfcn.rst", "mpom/functions/nlp_hessfcn.rst", "mpom/functions/nlps_fmincon.rst", "mpom/functions/nlps_ipopt.rst", "mpom/functions/nlps_knitro.rst", "mpom/functions/nlps_master.rst", "mpom/functions/nlps_master_ex1.rst", "mpom/functions/nlps_master_ex2.rst", "mpom/functions/osqp_options.rst", "mpom/functions/osqpver.rst", "mpom/functions/pne_callback_default.rst", "mpom/functions/pne_callback_nose.rst", "mpom/functions/pne_callback_target_lam.rst", "mpom/functions/pne_detect_events.rst", "mpom/functions/pne_detected_event.rst", "mpom/functions/pne_event_nose.rst", "mpom/functions/pne_event_target_lam.rst", "mpom/functions/pne_ex1.rst", "mpom/functions/pne_pfcn_arc_len.rst", "mpom/functions/pne_pfcn_natural.rst", "mpom/functions/pne_pfcn_pseudo_arc_len.rst", "mpom/functions/pne_register_callbacks.rst", "mpom/functions/pne_register_events.rst", "mpom/functions/pnes_master.rst", "mpom/functions/qp_ex1.rst", "mpom/functions/qps_bpmpd.rst", "mpom/functions/qps_clp.rst", "mpom/functions/qps_cplex.rst", "mpom/functions/qps_glpk.rst", "mpom/functions/qps_gurobi.rst", "mpom/functions/qps_ipopt.rst", "mpom/functions/qps_knitro.rst", "mpom/functions/qps_master.rst", "mpom/functions/qps_mosek.rst", "mpom/functions/qps_osqp.rst", "mpom/functions/qps_ot.rst", "mpom/functions/t_miqps_master.rst", "mpom/functions/t_nested_struct_copy.rst", "mpom/functions/t_nleqs_master.rst", "mpom/functions/t_nlps_master.rst", "mpom/functions/t_om_solve_leqs.rst", "mpom/functions/t_om_solve_miqps.rst", "mpom/functions/t_om_solve_nleqs.rst", "mpom/functions/t_om_solve_nlps.rst", "mpom/functions/t_om_solve_pne.rst", "mpom/functions/t_om_solve_qps.rst", "mpom/functions/t_opt_model.rst", "mpom/functions/t_pnes_master.rst", "mpom/functions/t_qps_master.rst", "mpom/functions/test_mp_opt_model.rst", "mpom/index.rst", "mpom/reference.rst", "mptest/functions/have_feature.rst", "mptest/functions/have_feature_matlab.rst", "mptest/functions/have_feature_octave.rst", "mptest/functions/mptestver.rst", "mptest/functions/t_begin.rst", "mptest/functions/t_end.rst", "mptest/functions/t_file_match.rst", "mptest/functions/t_have_feature.rst", "mptest/functions/t_is.rst", "mptest/functions/t_ok.rst", "mptest/functions/t_run_tests.rst", "mptest/functions/t_skip.rst", "mptest/functions/t_str_match.rst", "mptest/functions/t_test_fcns.rst", "mptest/functions/test_mptest.rst", "mptest/index.rst", "mptest/reference.rst", "ref-manual/classes/index.rst", "ref-manual/classes/mp/NODE_TYPE.rst", "ref-manual/classes/mp/cost_table.rst", "ref-manual/classes/mp/cost_table_utils.rst", "ref-manual/classes/mp/data_model.rst", "ref-manual/classes/mp/data_model_cpf.rst", "ref-manual/classes/mp/data_model_opf.rst", "ref-manual/classes/mp/dm_converter.rst", "ref-manual/classes/mp/dm_converter_mpc2.rst", "ref-manual/classes/mp/dm_converter_mpc2_legacy.rst", "ref-manual/classes/mp/dm_element.rst", "ref-manual/classes/mp/dmc_element.rst", "ref-manual/classes/mp/dmce_branch_mpc2.rst", "ref-manual/classes/mp/dmce_bus3p_mpc2.rst", "ref-manual/classes/mp/dmce_bus_mpc2.rst", "ref-manual/classes/mp/dmce_buslink_mpc2.rst", "ref-manual/classes/mp/dmce_gen3p_mpc2.rst", "ref-manual/classes/mp/dmce_gen_mpc2.rst", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2.rst", "ref-manual/classes/mp/dmce_line3p_mpc2.rst", "ref-manual/classes/mp/dmce_load3p_mpc2.rst", "ref-manual/classes/mp/dmce_load_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_gen_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_zone_mpc2.rst", "ref-manual/classes/mp/dmce_shunt_mpc2.rst", "ref-manual/classes/mp/dmce_xfmr3p_mpc2.rst", "ref-manual/classes/mp/dme_branch.rst", "ref-manual/classes/mp/dme_branch_opf.rst", "ref-manual/classes/mp/dme_bus.rst", "ref-manual/classes/mp/dme_bus3p.rst", "ref-manual/classes/mp/dme_bus3p_opf.rst", "ref-manual/classes/mp/dme_bus_opf.rst", "ref-manual/classes/mp/dme_buslink.rst", "ref-manual/classes/mp/dme_buslink_opf.rst", "ref-manual/classes/mp/dme_gen.rst", "ref-manual/classes/mp/dme_gen3p.rst", "ref-manual/classes/mp/dme_gen3p_opf.rst", "ref-manual/classes/mp/dme_gen_opf.rst", "ref-manual/classes/mp/dme_legacy_dcline.rst", "ref-manual/classes/mp/dme_legacy_dcline_opf.rst", "ref-manual/classes/mp/dme_line3p.rst", "ref-manual/classes/mp/dme_line3p_opf.rst", "ref-manual/classes/mp/dme_load.rst", "ref-manual/classes/mp/dme_load3p.rst", "ref-manual/classes/mp/dme_load3p_opf.rst", "ref-manual/classes/mp/dme_load_cpf.rst", "ref-manual/classes/mp/dme_load_opf.rst", "ref-manual/classes/mp/dme_reserve_gen.rst", "ref-manual/classes/mp/dme_reserve_zone.rst", "ref-manual/classes/mp/dme_shared_opf.rst", "ref-manual/classes/mp/dme_shunt.rst", "ref-manual/classes/mp/dme_shunt_cpf.rst", "ref-manual/classes/mp/dme_shunt_opf.rst", "ref-manual/classes/mp/dme_xfmr3p.rst", "ref-manual/classes/mp/dme_xfmr3p_opf.rst", "ref-manual/classes/mp/element_container.rst", "ref-manual/classes/mp/extension.rst", "ref-manual/classes/mp/form.rst", "ref-manual/classes/mp/form_ac.rst", "ref-manual/classes/mp/form_acc.rst", "ref-manual/classes/mp/form_acp.rst", "ref-manual/classes/mp/form_dc.rst", "ref-manual/classes/mp/mapped_array.rst", "ref-manual/classes/mp/math_model.rst", "ref-manual/classes/mp/math_model_cpf_acc.rst", "ref-manual/classes/mp/math_model_cpf_acci.rst", "ref-manual/classes/mp/math_model_cpf_accs.rst", "ref-manual/classes/mp/math_model_cpf_acp.rst", "ref-manual/classes/mp/math_model_cpf_acpi.rst", "ref-manual/classes/mp/math_model_cpf_acps.rst", "ref-manual/classes/mp/math_model_opf.rst", "ref-manual/classes/mp/math_model_opf_ac.rst", "ref-manual/classes/mp/math_model_opf_acc.rst", "ref-manual/classes/mp/math_model_opf_acci.rst", "ref-manual/classes/mp/math_model_opf_acci_legacy.rst", "ref-manual/classes/mp/math_model_opf_accs.rst", "ref-manual/classes/mp/math_model_opf_accs_legacy.rst", "ref-manual/classes/mp/math_model_opf_acp.rst", "ref-manual/classes/mp/math_model_opf_acpi.rst", "ref-manual/classes/mp/math_model_opf_acpi_legacy.rst", "ref-manual/classes/mp/math_model_opf_acps.rst", "ref-manual/classes/mp/math_model_opf_acps_legacy.rst", "ref-manual/classes/mp/math_model_opf_dc.rst", "ref-manual/classes/mp/math_model_opf_dc_legacy.rst", "ref-manual/classes/mp/math_model_pf.rst", "ref-manual/classes/mp/math_model_pf_ac.rst", "ref-manual/classes/mp/math_model_pf_acci.rst", "ref-manual/classes/mp/math_model_pf_accs.rst", "ref-manual/classes/mp/math_model_pf_acpi.rst", "ref-manual/classes/mp/math_model_pf_acps.rst", "ref-manual/classes/mp/math_model_pf_dc.rst", "ref-manual/classes/mp/mm_element.rst", "ref-manual/classes/mp/mm_shared_opf_legacy.rst", "ref-manual/classes/mp/mm_shared_pfcpf.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acc.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acci.rst", "ref-manual/classes/mp/mm_shared_pfcpf_accs.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acp.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acpi.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acps.rst", "ref-manual/classes/mp/mm_shared_pfcpf_dc.rst", "ref-manual/classes/mp/mme_branch.rst", "ref-manual/classes/mp/mme_branch_opf.rst", "ref-manual/classes/mp/mme_branch_opf_ac.rst", "ref-manual/classes/mp/mme_branch_opf_acc.rst", "ref-manual/classes/mp/mme_branch_opf_acp.rst", "ref-manual/classes/mp/mme_branch_opf_dc.rst", "ref-manual/classes/mp/mme_branch_pf_ac.rst", "ref-manual/classes/mp/mme_branch_pf_dc.rst", "ref-manual/classes/mp/mme_bus.rst", "ref-manual/classes/mp/mme_bus3p.rst", "ref-manual/classes/mp/mme_bus3p_opf_acc.rst", "ref-manual/classes/mp/mme_bus3p_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_ac.rst", "ref-manual/classes/mp/mme_bus_opf_acc.rst", "ref-manual/classes/mp/mme_bus_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_dc.rst", "ref-manual/classes/mp/mme_bus_pf_ac.rst", "ref-manual/classes/mp/mme_bus_pf_dc.rst", "ref-manual/classes/mp/mme_buslink.rst", "ref-manual/classes/mp/mme_buslink_opf.rst", "ref-manual/classes/mp/mme_buslink_opf_acc.rst", "ref-manual/classes/mp/mme_buslink_opf_acp.rst", "ref-manual/classes/mp/mme_buslink_pf_ac.rst", "ref-manual/classes/mp/mme_buslink_pf_acc.rst", "ref-manual/classes/mp/mme_buslink_pf_acp.rst", "ref-manual/classes/mp/mme_gen.rst", "ref-manual/classes/mp/mme_gen3p.rst", "ref-manual/classes/mp/mme_gen3p_opf.rst", "ref-manual/classes/mp/mme_gen_opf.rst", "ref-manual/classes/mp/mme_gen_opf_ac.rst", "ref-manual/classes/mp/mme_gen_opf_ac_oval.rst", "ref-manual/classes/mp/mme_gen_opf_dc.rst", "ref-manual/classes/mp/mme_gen_pf_ac.rst", "ref-manual/classes/mp/mme_gen_pf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc.rst", "ref-manual/classes/mp/mme_line3p.rst", "ref-manual/classes/mp/mme_line3p_opf.rst", "ref-manual/classes/mp/mme_load.rst", "ref-manual/classes/mp/mme_load_cpf.rst", "ref-manual/classes/mp/mme_load_pf_ac.rst", "ref-manual/classes/mp/mme_load_pf_dc.rst", "ref-manual/classes/mp/mme_reserve_gen.rst", "ref-manual/classes/mp/mme_reserve_zone.rst", "ref-manual/classes/mp/mme_shunt.rst", "ref-manual/classes/mp/mme_shunt_cpf.rst", "ref-manual/classes/mp/mme_shunt_pf_ac.rst", "ref-manual/classes/mp/mme_shunt_pf_dc.rst", "ref-manual/classes/mp/mme_xfmr3p.rst", "ref-manual/classes/mp/mme_xfmr3p_opf.rst", "ref-manual/classes/mp/net_model.rst", "ref-manual/classes/mp/net_model_ac.rst", "ref-manual/classes/mp/net_model_acc.rst", "ref-manual/classes/mp/net_model_acp.rst", "ref-manual/classes/mp/net_model_dc.rst", "ref-manual/classes/mp/nm_element.rst", "ref-manual/classes/mp/nme_branch.rst", "ref-manual/classes/mp/nme_branch_ac.rst", "ref-manual/classes/mp/nme_branch_acc.rst", "ref-manual/classes/mp/nme_branch_acp.rst", "ref-manual/classes/mp/nme_branch_dc.rst", "ref-manual/classes/mp/nme_bus.rst", "ref-manual/classes/mp/nme_bus3p.rst", "ref-manual/classes/mp/nme_bus3p_acc.rst", "ref-manual/classes/mp/nme_bus3p_acp.rst", "ref-manual/classes/mp/nme_bus_acc.rst", "ref-manual/classes/mp/nme_bus_acp.rst", "ref-manual/classes/mp/nme_bus_dc.rst", "ref-manual/classes/mp/nme_buslink.rst", "ref-manual/classes/mp/nme_buslink_acc.rst", "ref-manual/classes/mp/nme_buslink_acp.rst", "ref-manual/classes/mp/nme_gen.rst", "ref-manual/classes/mp/nme_gen3p.rst", "ref-manual/classes/mp/nme_gen3p_acc.rst", "ref-manual/classes/mp/nme_gen3p_acp.rst", "ref-manual/classes/mp/nme_gen_ac.rst", "ref-manual/classes/mp/nme_gen_acc.rst", "ref-manual/classes/mp/nme_gen_acp.rst", "ref-manual/classes/mp/nme_gen_dc.rst", "ref-manual/classes/mp/nme_legacy_dcline.rst", "ref-manual/classes/mp/nme_legacy_dcline_ac.rst", "ref-manual/classes/mp/nme_legacy_dcline_acc.rst", "ref-manual/classes/mp/nme_legacy_dcline_acp.rst", "ref-manual/classes/mp/nme_legacy_dcline_dc.rst", "ref-manual/classes/mp/nme_line3p.rst", "ref-manual/classes/mp/nme_load.rst", "ref-manual/classes/mp/nme_load3p.rst", "ref-manual/classes/mp/nme_load_ac.rst", "ref-manual/classes/mp/nme_load_acc.rst", "ref-manual/classes/mp/nme_load_acp.rst", "ref-manual/classes/mp/nme_load_dc.rst", "ref-manual/classes/mp/nme_shunt.rst", "ref-manual/classes/mp/nme_shunt_ac.rst", "ref-manual/classes/mp/nme_shunt_acc.rst", "ref-manual/classes/mp/nme_shunt_acp.rst", "ref-manual/classes/mp/nme_shunt_dc.rst", "ref-manual/classes/mp/nme_xfmr3p.rst", "ref-manual/classes/mp/sm_legacy_cost.rst", "ref-manual/classes/mp/task.rst", "ref-manual/classes/mp/task_cpf.rst", "ref-manual/classes/mp/task_cpf_legacy.rst", "ref-manual/classes/mp/task_opf.rst", "ref-manual/classes/mp/task_opf_legacy.rst", "ref-manual/classes/mp/task_pf.rst", "ref-manual/classes/mp/task_pf_legacy.rst", "ref-manual/classes/mp/task_shared_legacy.rst", "ref-manual/classes/mp/xt_3p.rst", "ref-manual/classes/mp/xt_legacy_dcline.rst", "ref-manual/classes/mp/xt_oval_cap_curve.rst", "ref-manual/classes/mp/xt_reserves.rst", "ref-manual/classes/mp_table.rst", "ref-manual/classes/mp_table_subclass.rst", "ref-manual/functions/index.rst", "ref-manual/functions/install_matpower.rst", "ref-manual/functions/mp/load_dm.rst", "ref-manual/functions/mp_table_class.rst", "ref-manual/functions/run_cpf.rst", "ref-manual/functions/run_mp.rst", "ref-manual/functions/run_opf.rst", "ref-manual/functions/run_pf.rst", "ref-manual/index.rst", "ref-manual/introduction.rst", "ref-manual/legacy/classes/opf_model.rst", "ref-manual/legacy/functions/add_userfcn.rst", "ref-manual/legacy/functions/apply_changes.rst", "ref-manual/legacy/functions/bustypes.rst", "ref-manual/legacy/functions/calc_branch_angle.rst", "ref-manual/legacy/functions/calc_v_i_sum.rst", "ref-manual/legacy/functions/calc_v_pq_sum.rst", "ref-manual/legacy/functions/calc_v_y_sum.rst", "ref-manual/legacy/functions/case_info.rst", "ref-manual/legacy/functions/caseformat.rst", "ref-manual/legacy/functions/cdf2mpc.rst", "ref-manual/legacy/functions/compare_case.rst", "ref-manual/legacy/functions/connected_components.rst", "ref-manual/legacy/functions/cpf_corrector.rst", "ref-manual/legacy/functions/cpf_current_mpc.rst", "ref-manual/legacy/functions/cpf_default_callback.rst", "ref-manual/legacy/functions/cpf_detect_events.rst", "ref-manual/legacy/functions/cpf_flim_event.rst", "ref-manual/legacy/functions/cpf_flim_event_cb.rst", "ref-manual/legacy/functions/cpf_nose_event.rst", "ref-manual/legacy/functions/cpf_nose_event_cb.rst", "ref-manual/legacy/functions/cpf_p.rst", "ref-manual/legacy/functions/cpf_p_jac.rst", "ref-manual/legacy/functions/cpf_plim_event.rst", "ref-manual/legacy/functions/cpf_plim_event_cb.rst", "ref-manual/legacy/functions/cpf_predictor.rst", "ref-manual/legacy/functions/cpf_qlim_event.rst", "ref-manual/legacy/functions/cpf_qlim_event_cb.rst", "ref-manual/legacy/functions/cpf_register_callback.rst", "ref-manual/legacy/functions/cpf_register_event.rst", "ref-manual/legacy/functions/cpf_tangent.rst", "ref-manual/legacy/functions/cpf_target_lam_event.rst", "ref-manual/legacy/functions/cpf_target_lam_event_cb.rst", "ref-manual/legacy/functions/cpf_vlim_event.rst", "ref-manual/legacy/functions/cpf_vlim_event_cb.rst", "ref-manual/legacy/functions/d2Abr_dV2.rst", "ref-manual/legacy/functions/d2Ibr_dV2.rst", "ref-manual/legacy/functions/d2Imis_dV2.rst", "ref-manual/legacy/functions/d2Imis_dVdSg.rst", "ref-manual/legacy/functions/d2Sbr_dV2.rst", "ref-manual/legacy/functions/d2Sbus_dV2.rst", "ref-manual/legacy/functions/dAbr_dV.rst", "ref-manual/legacy/functions/dIbr_dV.rst", "ref-manual/legacy/functions/dImis_dV.rst", "ref-manual/legacy/functions/dSbr_dV.rst", "ref-manual/legacy/functions/dSbus_dV.rst", "ref-manual/legacy/functions/dcopf.rst", "ref-manual/legacy/functions/dcopf_solver.rst", "ref-manual/legacy/functions/dcpf.rst", "ref-manual/legacy/functions/define_constants.rst", "ref-manual/legacy/functions/e2i_data.rst", "ref-manual/legacy/functions/e2i_field.rst", "ref-manual/legacy/functions/ext2int.rst", "ref-manual/legacy/functions/extract_islands.rst", "ref-manual/legacy/functions/fdpf.rst", "ref-manual/legacy/functions/feval_w_path.rst", "ref-manual/legacy/functions/find_bridges.rst", "ref-manual/legacy/functions/find_islands.rst", "ref-manual/legacy/functions/fmincopf.rst", "ref-manual/legacy/functions/gausspf.rst", "ref-manual/legacy/functions/genfuels.rst", "ref-manual/legacy/functions/gentypes.rst", "ref-manual/legacy/functions/get_losses.rst", "ref-manual/legacy/functions/get_reorder.rst", "ref-manual/legacy/functions/hasPQcap.rst", "ref-manual/legacy/functions/have_feature_e4st.rst", "ref-manual/legacy/functions/have_feature_minopf.rst", "ref-manual/legacy/functions/have_feature_most.rst", "ref-manual/legacy/functions/have_feature_mp_core.rst", "ref-manual/legacy/functions/have_feature_pdipmopf.rst", "ref-manual/legacy/functions/have_feature_regexp_split.rst", "ref-manual/legacy/functions/have_feature_scpdipmopf.rst", "ref-manual/legacy/functions/have_feature_sdp_pf.rst", "ref-manual/legacy/functions/have_feature_smartmarket.rst", "ref-manual/legacy/functions/have_feature_syngrid.rst", "ref-manual/legacy/functions/have_feature_table.rst", "ref-manual/legacy/functions/have_feature_tralmopf.rst", "ref-manual/legacy/functions/i2e_data.rst", "ref-manual/legacy/functions/i2e_field.rst", "ref-manual/legacy/functions/idx_brch.rst", "ref-manual/legacy/functions/idx_bus.rst", "ref-manual/legacy/functions/idx_cost.rst", "ref-manual/legacy/functions/idx_ct.rst", "ref-manual/legacy/functions/idx_dcline.rst", "ref-manual/legacy/functions/idx_gen.rst", "ref-manual/legacy/functions/int2ext.rst", "ref-manual/legacy/functions/isload.rst", "ref-manual/legacy/functions/load2disp.rst", "ref-manual/legacy/functions/loadcase.rst", "ref-manual/legacy/functions/loadshed.rst", "ref-manual/legacy/functions/makeAang.rst", "ref-manual/legacy/functions/makeApq.rst", "ref-manual/legacy/functions/makeAvl.rst", "ref-manual/legacy/functions/makeAy.rst", "ref-manual/legacy/functions/makeB.rst", "ref-manual/legacy/functions/makeBdc.rst", "ref-manual/legacy/functions/makeJac.rst", "ref-manual/legacy/functions/makeLODF.rst", "ref-manual/legacy/functions/makePTDF.rst", "ref-manual/legacy/functions/makeSbus.rst", "ref-manual/legacy/functions/makeSdzip.rst", "ref-manual/legacy/functions/makeYbus.rst", "ref-manual/legacy/functions/make_vcorr.rst", "ref-manual/legacy/functions/make_zpv.rst", "ref-manual/legacy/functions/margcost.rst", "ref-manual/legacy/functions/miqps_matpower.rst", "ref-manual/legacy/functions/modcost.rst", "ref-manual/legacy/functions/mpoption.rst", "ref-manual/legacy/functions/mpoption_info_clp.rst", "ref-manual/legacy/functions/mpoption_info_cplex.rst", "ref-manual/legacy/functions/mpoption_info_fmincon.rst", "ref-manual/legacy/functions/mpoption_info_glpk.rst", "ref-manual/legacy/functions/mpoption_info_gurobi.rst", "ref-manual/legacy/functions/mpoption_info_intlinprog.rst", "ref-manual/legacy/functions/mpoption_info_ipopt.rst", "ref-manual/legacy/functions/mpoption_info_knitro.rst", "ref-manual/legacy/functions/mpoption_info_linprog.rst", "ref-manual/legacy/functions/mpoption_info_mips.rst", "ref-manual/legacy/functions/mpoption_info_mosek.rst", "ref-manual/legacy/functions/mpoption_info_osqp.rst", "ref-manual/legacy/functions/mpoption_info_quadprog.rst", "ref-manual/legacy/functions/mpoption_old.rst", "ref-manual/legacy/functions/mpver.rst", "ref-manual/legacy/functions/newtonpf.rst", "ref-manual/legacy/functions/newtonpf_I_cart.rst", "ref-manual/legacy/functions/newtonpf_I_hybrid.rst", "ref-manual/legacy/functions/newtonpf_I_polar.rst", "ref-manual/legacy/functions/newtonpf_S_cart.rst", "ref-manual/legacy/functions/newtonpf_S_hybrid.rst", "ref-manual/legacy/functions/nlpopf_solver.rst", "ref-manual/legacy/functions/opf.rst", "ref-manual/legacy/functions/opf_args.rst", "ref-manual/legacy/functions/opf_branch_ang_fcn.rst", "ref-manual/legacy/functions/opf_branch_ang_hess.rst", "ref-manual/legacy/functions/opf_branch_flow_fcn.rst", "ref-manual/legacy/functions/opf_branch_flow_hess.rst", "ref-manual/legacy/functions/opf_current_balance_fcn.rst", "ref-manual/legacy/functions/opf_current_balance_hess.rst", "ref-manual/legacy/functions/opf_execute.rst", "ref-manual/legacy/functions/opf_gen_cost_fcn.rst", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn.rst", "ref-manual/legacy/functions/opf_nle_fcn1.rst", "ref-manual/legacy/functions/opf_nle_hess1.rst", "ref-manual/legacy/functions/opf_power_balance_fcn.rst", "ref-manual/legacy/functions/opf_power_balance_hess.rst", "ref-manual/legacy/functions/opf_setup.rst", "ref-manual/legacy/functions/opf_veq_fcn.rst", "ref-manual/legacy/functions/opf_veq_hess.rst", "ref-manual/legacy/functions/opf_vlim_fcn.rst", "ref-manual/legacy/functions/opf_vlim_hess.rst", "ref-manual/legacy/functions/opf_vref_fcn.rst", "ref-manual/legacy/functions/opf_vref_hess.rst", "ref-manual/legacy/functions/order_radial.rst", "ref-manual/legacy/functions/pfsoln.rst", "ref-manual/legacy/functions/poly2pwl.rst", "ref-manual/legacy/functions/polycost.rst", "ref-manual/legacy/functions/pqcost.rst", "ref-manual/legacy/functions/printpf.rst", "ref-manual/legacy/functions/psse2mpc.rst", "ref-manual/legacy/functions/psse_convert.rst", "ref-manual/legacy/functions/psse_convert_hvdc.rst", "ref-manual/legacy/functions/psse_convert_xfmr.rst", "ref-manual/legacy/functions/psse_parse.rst", "ref-manual/legacy/functions/psse_parse_line.rst", "ref-manual/legacy/functions/psse_parse_section.rst", "ref-manual/legacy/functions/psse_read.rst", "ref-manual/legacy/functions/qps_matpower.rst", "ref-manual/legacy/functions/radial_pf.rst", "ref-manual/legacy/functions/remove_userfcn.rst", "ref-manual/legacy/functions/run_userfcn.rst", "ref-manual/legacy/functions/runcpf.rst", "ref-manual/legacy/functions/rundcopf.rst", "ref-manual/legacy/functions/rundcpf.rst", "ref-manual/legacy/functions/runduopf.rst", "ref-manual/legacy/functions/runopf.rst", "ref-manual/legacy/functions/runopf_w_res.rst", "ref-manual/legacy/functions/runpf.rst", "ref-manual/legacy/functions/runuopf.rst", "ref-manual/legacy/functions/save2psse.rst", "ref-manual/legacy/functions/savecase.rst", "ref-manual/legacy/functions/savechgtab.rst", "ref-manual/legacy/functions/scale_load.rst", "ref-manual/legacy/functions/set_reorder.rst", "ref-manual/legacy/functions/t_apply_changes.rst", "ref-manual/legacy/functions/t_auction_case.rst", "ref-manual/legacy/functions/t_auction_minopf.rst", "ref-manual/legacy/functions/t_auction_mips.rst", "ref-manual/legacy/functions/t_auction_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_case30_userfcns.rst", "ref-manual/legacy/functions/t_case9_dcline.rst", "ref-manual/legacy/functions/t_case9_opf.rst", "ref-manual/legacy/functions/t_case9_opfv2.rst", "ref-manual/legacy/functions/t_case9_pf.rst", "ref-manual/legacy/functions/t_case9_pfv2.rst", "ref-manual/legacy/functions/t_case9_save2psse.rst", "ref-manual/legacy/functions/t_case_ext.rst", "ref-manual/legacy/functions/t_case_int.rst", "ref-manual/legacy/functions/t_chgtab.rst", "ref-manual/legacy/functions/t_cpf.rst", "ref-manual/legacy/functions/t_cpf_cb1.rst", "ref-manual/legacy/functions/t_cpf_cb2.rst", "ref-manual/legacy/functions/t_dcline.rst", "ref-manual/legacy/functions/t_ext2int2ext.rst", "ref-manual/legacy/functions/t_feval_w_path.rst", "ref-manual/legacy/functions/t_get_losses.rst", "ref-manual/legacy/functions/t_hasPQcap.rst", "ref-manual/legacy/functions/t_hessian.rst", "ref-manual/legacy/functions/t_islands.rst", "ref-manual/legacy/functions/t_jacobian.rst", "ref-manual/legacy/functions/t_load2disp.rst", "ref-manual/legacy/functions/t_loadcase.rst", "ref-manual/legacy/functions/t_makeLODF.rst", "ref-manual/legacy/functions/t_makePTDF.rst", "ref-manual/legacy/functions/t_margcost.rst", "ref-manual/legacy/functions/t_miqps_matpower.rst", "ref-manual/legacy/functions/t_modcost.rst", "ref-manual/legacy/functions/t_mpoption.rst", "ref-manual/legacy/functions/t_mpoption_ov.rst", "ref-manual/legacy/functions/t_off2case.rst", "ref-manual/legacy/functions/t_opf_dc_bpmpd.rst", "ref-manual/legacy/functions/t_opf_dc_clp.rst", "ref-manual/legacy/functions/t_opf_dc_cplex.rst", "ref-manual/legacy/functions/t_opf_dc_default.rst", "ref-manual/legacy/functions/t_opf_dc_glpk.rst", "ref-manual/legacy/functions/t_opf_dc_gurobi.rst", "ref-manual/legacy/functions/t_opf_dc_ipopt.rst", "ref-manual/legacy/functions/t_opf_dc_mips.rst", "ref-manual/legacy/functions/t_opf_dc_mips_sc.rst", "ref-manual/legacy/functions/t_opf_dc_mosek.rst", "ref-manual/legacy/functions/t_opf_dc_osqp.rst", "ref-manual/legacy/functions/t_opf_dc_ot.rst", "ref-manual/legacy/functions/t_opf_default.rst", "ref-manual/legacy/functions/t_opf_fmincon.rst", "ref-manual/legacy/functions/t_opf_ipopt.rst", "ref-manual/legacy/functions/t_opf_knitro.rst", "ref-manual/legacy/functions/t_opf_minopf.rst", "ref-manual/legacy/functions/t_opf_mips.rst", "ref-manual/legacy/functions/t_opf_model.rst", "ref-manual/legacy/functions/t_opf_softlims.rst", "ref-manual/legacy/functions/t_opf_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_tralm.rst", "ref-manual/legacy/functions/t_opf_userfcns.rst", "ref-manual/legacy/functions/t_pf_ac.rst", "ref-manual/legacy/functions/t_pf_dc.rst", "ref-manual/legacy/functions/t_pf_radial.rst", "ref-manual/legacy/functions/t_printpf.rst", "ref-manual/legacy/functions/t_psse.rst", "ref-manual/legacy/functions/t_qps_matpower.rst", "ref-manual/legacy/functions/t_runmarket.rst", "ref-manual/legacy/functions/t_runopf_w_res.rst", "ref-manual/legacy/functions/t_scale_load.rst", "ref-manual/legacy/functions/t_total_load.rst", "ref-manual/legacy/functions/t_totcost.rst", "ref-manual/legacy/functions/t_vdep_load.rst", "ref-manual/legacy/functions/toggle_dcline.rst", "ref-manual/legacy/functions/toggle_iflims.rst", "ref-manual/legacy/functions/toggle_reserves.rst", "ref-manual/legacy/functions/toggle_softlims.rst", "ref-manual/legacy/functions/total_load.rst", "ref-manual/legacy/functions/totcost.rst", "ref-manual/legacy/functions/uopf.rst", "ref-manual/legacy/functions/update_mupq.rst", "ref-manual/legacy/functions/zgausspf.rst", "ref-manual/legacy/index.rst", "ref-manual/previous.rst", "ref-manual/tests/index.rst", "ref-manual/tests/mp_foo_table.rst", "ref-manual/tests/t_case3p_a.rst", "ref-manual/tests/t_case3p_b.rst", "ref-manual/tests/t_case3p_c.rst", "ref-manual/tests/t_case3p_d.rst", "ref-manual/tests/t_case3p_e.rst", "ref-manual/tests/t_case3p_f.rst", "ref-manual/tests/t_case3p_g.rst", "ref-manual/tests/t_case3p_h.rst", "ref-manual/tests/t_case9_gizmo.rst", "ref-manual/tests/t_dmc_element.rst", "ref-manual/tests/t_mp_data_model.rst", "ref-manual/tests/t_mp_dm_converter_mpc2.rst", "ref-manual/tests/t_mp_mapped_array.rst", "ref-manual/tests/t_mp_table.rst", "ref-manual/tests/t_mpxt_legacy_dcline.rst", "ref-manual/tests/t_mpxt_reserves.rst", "ref-manual/tests/t_nm_element.rst", "ref-manual/tests/t_node_test.rst", "ref-manual/tests/t_port_inj_current_acc.rst", "ref-manual/tests/t_port_inj_current_acp.rst", "ref-manual/tests/t_port_inj_power_acc.rst", "ref-manual/tests/t_port_inj_power_acp.rst", "ref-manual/tests/t_pretty_print.rst", "ref-manual/tests/t_run_mp.rst", "ref-manual/tests/t_run_mp_3p.rst", "ref-manual/tests/t_run_opf_default.rst", "ref-manual/tests/test_matpower.rst", "tech-notes.rst", "users-manual/index.rst"], "titles": ["<span class=\"section-number\">10. </span>Acknowledgments", "<span class=\"section-number\">3. </span>Architecture Overview", "<span class=\"section-number\">9. </span>Customizing <span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span>", "<span class=\"section-number\">5. </span>Data Model Object", "<span class=\"section-number\">6. </span>Data Model Converter Object", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Developer\u2019s Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">8. </span>Mathematical Model Object", "<span class=\"section-number\">7. </span>Network Model Object", "<span class=\"section-number\">2. </span>Notation", "<span class=\"section-number\">11. </span>References", "<span class=\"section-number\">4. </span>Task Object", "How to Add an OPF Constraint", "How to Build the Documentation", "generate_autodoc_stubs", "generate_matpower_autodoc", "generate_source_symlinks", "How to Create a New Element Type", "How to Create an Extension", "A Test Gizmo Element Type", "How to Run a Three-Phase Power Flow", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Documentation", "have_feature_lu_vec", "have_feature_pardiso", "have_feature_pardiso_legacy", "have_feature_pardiso_object", "mips", "mips_example1", "mips_example2", "mipsver", "mplinsolve", "qps_mips", "t_mips", "t_mips_pardiso", "t_mplinsolve", "t_qps_mips", "test_mips", "MIPS User\u2019s Manual", "Reference", "addgen2mpc", "addstorage", "addwind", "apply_profile", "c118swf", "ex_case3a", "ex_case3b", "ex_contab", "ex_load_profile", "ex_storage", "ex_transmat", "ex_wind", "ex_wind_profile", "ex_wind_profile_d", "ex_wind_uc", "ex_xgd", "ex_xgd_ramp", "ex_xgd_res", "ex_xgd_uc", "filter_ramp_transitions", "getprofiles", "idx_profile", "loadgenericdata", "loadmd", "loadstoragedata", "loadxgendata", "md_init", "most", "most_ex1_ed", "most_ex2_dcopf", "most_ex3_dcopf_w_uc", "most_ex4_dcopf_ss", "most_ex5_mpopf", "most_ex6_uc", "most_ex7_suc", "most_summary", "mostver", "mpoption_info_most", "plot_gen", "plot_storage", "plot_uc", "plot_uc_data", "t_case30_most", "t_case3_most", "t_case_tlmp", "t_case_tlmp_storage", "t_most_30b_1_1_0", "t_most_30b_1_1_0_uc", "t_most_30b_1_1_17", "t_most_30b_3_1_0", "t_most_30b_3_1_17", "t_most_3b_1_1_0", "t_most_3b_1_1_2", "t_most_3b_3_1_0", "t_most_3b_3_1_2", "t_most_fixed_res", "t_most_mpopf", "t_most_sp", "t_most_spuc", "t_most_suc", "t_most_tlmp", "t_most_uc", "t_most_w_ds", "test_most", "uniformwindprofile", "MOST User\u2019s Manual", "Reference", "mp.set_manager", "mp.set_manager_opt_model", "mp.sm_lin_constraint", "mp.sm_nln_constraint", "mp.sm_nln_cost", "mp.sm_quad_cost", "mp.sm_variable", "mp_idx_manager", "opt_model", "artelys_knitro_options", "convert_lin_constraint", "convert_lin_constraint_multipliers", "cplex_options", "glpk_options", "gurobi_options", "gurobiver", "have_feature_bpmpd", "have_feature_catchme", "have_feature_clp", "have_feature_cplex", "have_feature_evalc", "have_feature_fmincon", "have_feature_fmincon_ipm", "have_feature_fsolve", "have_feature_glpk", "have_feature_gurobi", "have_feature_intlinprog", "have_feature_ipopt", "have_feature_ipopt_auxdata", "have_feature_isequaln", "have_feature_knitro", "have_feature_knitromatlab", "have_feature_ktrlink", "have_feature_linprog", "have_feature_linprog_ds", "have_feature_mosek", "have_feature_opti_clp", "have_feature_optim", "have_feature_optimoptions", "have_feature_osqp", "have_feature_quadprog", "have_feature_quadprog_ls", "have_feature_sdpt3", "have_feature_sedumi", "have_feature_yalmip", "ipopt_options", "knitrover", "miqps_cplex", "miqps_glpk", "miqps_gurobi", "miqps_master", "miqps_mosek", "miqps_ot", "mosek_options", "mosek_symbcon", "mpomver", "mpopt2nleqopt", "mpopt2nlpopt", "mpopt2pneopt", "mpopt2qpopt", "nested_struct_copy", "nleqs_core", "nleqs_fd_newton", "nleqs_fsolve", "nleqs_gauss_seidel", "nleqs_master", "nleqs_master_ex1", "nleqs_master_ex2", "nleqs_newton", "nlp_consfcn", "nlp_costfcn", "nlp_hessfcn", "nlps_fmincon", "nlps_ipopt", "nlps_knitro", "nlps_master", "nlps_master_ex1", "nlps_master_ex2", "osqp_options", "osqpver", "pne_callback_default", "pne_callback_nose", "pne_callback_target_lam", "pne_detect_events", "pne_detected_event", "pne_event_nose", "pne_event_target_lam", "pne_ex1", "pne_pfcn_arc_len", "pne_pfcn_natural", "pne_pfcn_pseudo_arc_len", "pne_register_callbacks", "pne_register_events", "pnes_master", "qp_ex1", "qps_bpmpd", "qps_clp", "qps_cplex", "qps_glpk", "qps_gurobi", "qps_ipopt", "qps_knitro", "qps_master", "qps_mosek", "qps_osqp", "qps_ot", "t_miqps_master", "t_nested_struct_copy", "t_nleqs_master", "t_nlps_master", "t_om_solve_leqs", "t_om_solve_miqps", "t_om_solve_nleqs", "t_om_solve_nlps", "t_om_solve_pne", "t_om_solve_qps", "t_opt_model", "t_pnes_master", "t_qps_master", "test_mp_opt_model", "<span class=\"raw-html\">MP-Opt-Model</span> User\u2019s Manual", "Reference", "have_feature", "have_feature_matlab", "have_feature_octave", "mptestver", "t_begin", "t_end", "t_file_match", "t_have_feature", "t_is", "t_ok", "t_run_tests", "t_skip", "t_str_match", "t_test_fcns", "test_mptest", "MP-Test User\u2019s Manual", "Reference", "<span class=\"section-number\">3. </span>Classes", "mp.NODE_TYPE", "mp.cost_table", "mp.cost_table_utils", "mp.data_model", "mp.data_model_cpf", "mp.data_model_opf", "mp.dm_converter", "mp.dm_converter_mpc2", "mp.dm_converter_mpc2_legacy", "mp.dm_element", "mp.dmc_element", "mp.dmce_branch_mpc2", "mp.dmce_bus3p_mpc2", "mp.dmce_bus_mpc2", "mp.dmce_buslink_mpc2", "mp.dmce_gen3p_mpc2", "mp.dmce_gen_mpc2", "mp.dmce_legacy_dcline_mpc2", "mp.dmce_line3p_mpc2", "mp.dmce_load3p_mpc2", "mp.dmce_load_mpc2", "mp.dmce_reserve_gen_mpc2", "mp.dmce_reserve_zone_mpc2", "mp.dmce_shunt_mpc2", "mp.dmce_xfmr3p_mpc2", "mp.dme_branch", "mp.dme_branch_opf", "mp.dme_bus", "mp.dme_bus3p", "mp.dme_bus3p_opf", "mp.dme_bus_opf", "mp.dme_buslink", "mp.dme_buslink_opf", "mp.dme_gen", "mp.dme_gen3p", "mp.dme_gen3p_opf", "mp.dme_gen_opf", "mp.dme_legacy_dcline", "mp.dme_legacy_dcline_opf", "mp.dme_line3p", "mp.dme_line3p_opf", "mp.dme_load", "mp.dme_load3p", "mp.dme_load3p_opf", "mp.dme_load_cpf", "mp.dme_load_opf", "mp.dme_reserve_gen", "mp.dme_reserve_zone", "mp.dme_shared_opf", "mp.dme_shunt", "mp.dme_shunt_cpf", "mp.dme_shunt_opf", "mp.dme_xfmr3p", "mp.dme_xfmr3p_opf", "mp.element_container", "mp.extension", "mp.form", "mp.form_ac", "mp.form_acc", "mp.form_acp", "mp.form_dc", "mp.mapped_array", "mp.math_model", "mp.math_model_cpf_acc", "mp.math_model_cpf_acci", "mp.math_model_cpf_accs", "mp.math_model_cpf_acp", "mp.math_model_cpf_acpi", "mp.math_model_cpf_acps", "mp.math_model_opf", "mp.math_model_opf_ac", "mp.math_model_opf_acc", "mp.math_model_opf_acci", "mp.math_model_opf_acci_legacy", "mp.math_model_opf_accs", "mp.math_model_opf_accs_legacy", "mp.math_model_opf_acp", "mp.math_model_opf_acpi", "mp.math_model_opf_acpi_legacy", "mp.math_model_opf_acps", "mp.math_model_opf_acps_legacy", "mp.math_model_opf_dc", "mp.math_model_opf_dc_legacy", "mp.math_model_pf", "mp.math_model_pf_ac", "mp.math_model_pf_acci", "mp.math_model_pf_accs", "mp.math_model_pf_acpi", "mp.math_model_pf_acps", "mp.math_model_pf_dc", "mp.mm_element", "mp.mm_shared_opf_legacy", "mp.mm_shared_pfcpf", "mp.mm_shared_pfcpf_ac", "mp.mm_shared_pfcpf_ac_i", "mp.mm_shared_pfcpf_acc", "mp.mm_shared_pfcpf_acci", "mp.mm_shared_pfcpf_accs", "mp.mm_shared_pfcpf_acp", "mp.mm_shared_pfcpf_acpi", "mp.mm_shared_pfcpf_acps", "mp.mm_shared_pfcpf_dc", "mp.mme_branch", "mp.mme_branch_opf", "mp.mme_branch_opf_ac", "mp.mme_branch_opf_acc", "mp.mme_branch_opf_acp", "mp.mme_branch_opf_dc", "mp.mme_branch_pf_ac", "mp.mme_branch_pf_dc", "mp.mme_bus", "mp.mme_bus3p", "mp.mme_bus3p_opf_acc", "mp.mme_bus3p_opf_acp", "mp.mme_bus_opf_ac", "mp.mme_bus_opf_acc", "mp.mme_bus_opf_acp", "mp.mme_bus_opf_dc", "mp.mme_bus_pf_ac", "mp.mme_bus_pf_dc", "mp.mme_buslink", "mp.mme_buslink_opf", "mp.mme_buslink_opf_acc", "mp.mme_buslink_opf_acp", "mp.mme_buslink_pf_ac", "mp.mme_buslink_pf_acc", "mp.mme_buslink_pf_acp", "mp.mme_gen", "mp.mme_gen3p", "mp.mme_gen3p_opf", "mp.mme_gen_opf", "mp.mme_gen_opf_ac", "mp.mme_gen_opf_ac_oval", "mp.mme_gen_opf_dc", "mp.mme_gen_pf_ac", "mp.mme_gen_pf_dc", "mp.mme_legacy_dcline", "mp.mme_legacy_dcline_opf", "mp.mme_legacy_dcline_opf_ac", "mp.mme_legacy_dcline_opf_dc", "mp.mme_legacy_dcline_pf_ac", "mp.mme_legacy_dcline_pf_dc", "mp.mme_line3p", "mp.mme_line3p_opf", "mp.mme_load", "mp.mme_load_cpf", "mp.mme_load_pf_ac", "mp.mme_load_pf_dc", "mp.mme_reserve_gen", "mp.mme_reserve_zone", "mp.mme_shunt", "mp.mme_shunt_cpf", "mp.mme_shunt_pf_ac", "mp.mme_shunt_pf_dc", "mp.mme_xfmr3p", "mp.mme_xfmr3p_opf", "mp.net_model", "mp.net_model_ac", "mp.net_model_acc", "mp.net_model_acp", "mp.net_model_dc", "mp.nm_element", "mp.nme_branch", "mp.nme_branch_ac", "mp.nme_branch_acc", "mp.nme_branch_acp", "mp.nme_branch_dc", "mp.nme_bus", "mp.nme_bus3p", "mp.nme_bus3p_acc", "mp.nme_bus3p_acp", "mp.nme_bus_acc", "mp.nme_bus_acp", "mp.nme_bus_dc", "mp.nme_buslink", "mp.nme_buslink_acc", "mp.nme_buslink_acp", "mp.nme_gen", "mp.nme_gen3p", "mp.nme_gen3p_acc", "mp.nme_gen3p_acp", "mp.nme_gen_ac", "mp.nme_gen_acc", "mp.nme_gen_acp", "mp.nme_gen_dc", "mp.nme_legacy_dcline", "mp.nme_legacy_dcline_ac", "mp.nme_legacy_dcline_acc", "mp.nme_legacy_dcline_acp", "mp.nme_legacy_dcline_dc", "mp.nme_line3p", "mp.nme_load", "mp.nme_load3p", "mp.nme_load_ac", "mp.nme_load_acc", "mp.nme_load_acp", "mp.nme_load_dc", "mp.nme_shunt", "mp.nme_shunt_ac", "mp.nme_shunt_acc", "mp.nme_shunt_acp", "mp.nme_shunt_dc", "mp.nme_xfmr3p", "mp.sm_legacy_cost", "mp.task", "mp.task_cpf", "mp.task_cpf_legacy", "mp.task_opf", "mp.task_opf_legacy", "mp.task_pf", "mp.task_pf_legacy", "mp.task_shared_legacy", "mp.xt_3p", "mp.xt_legacy_dcline", "mp.xt_oval_cap_curve", "mp.xt_reserves", "mp_table", "mp_table_subclass", "<span class=\"section-number\">2. </span>Functions", "install_matpower", "mp.load_dm", "mp_table_class", "run_cpf", "run_mp", "run_opf", "run_pf", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Reference Manual", "<span class=\"section-number\">1. </span>Introduction", "opf_model", "add_userfcn", "apply_changes", "bustypes", "calc_branch_angle", "calc_v_i_sum", "calc_v_pq_sum", "calc_v_y_sum", "case_info", "caseformat", "cdf2mpc", "compare_case", "connected_components", "cpf_corrector", "cpf_current_mpc", "cpf_default_callback", "cpf_detect_events", "cpf_flim_event", "cpf_flim_event_cb", "cpf_nose_event", "cpf_nose_event_cb", "cpf_p", "cpf_p_jac", "cpf_plim_event", "cpf_plim_event_cb", "cpf_predictor", "cpf_qlim_event", "cpf_qlim_event_cb", "cpf_register_callback", "cpf_register_event", "cpf_tangent", "cpf_target_lam_event", "cpf_target_lam_event_cb", "cpf_vlim_event", "cpf_vlim_event_cb", "d2Abr_dV2", "d2Ibr_dV2", "d2Imis_dV2", "d2Imis_dVdSg", "d2Sbr_dV2", "d2Sbus_dV2", "dAbr_dV", "dIbr_dV", "dImis_dV", "dSbr_dV", "dSbus_dV", "dcopf", "dcopf_solver", "dcpf", "define_constants", "e2i_data", "e2i_field", "ext2int", "extract_islands", "fdpf", "feval_w_path", "find_bridges", "find_islands", "fmincopf", "gausspf", "genfuels", "gentypes", "get_losses", "get_reorder", "hasPQcap", "have_feature_e4st", "have_feature_minopf", "have_feature_most", "have_feature_mp_core", "have_feature_pdipmopf", "have_feature_regexp_split", "have_feature_scpdipmopf", "have_feature_sdp_pf", "have_feature_smartmarket", "have_feature_syngrid", "have_feature_table", "have_feature_tralmopf", "i2e_data", "i2e_field", "idx_brch", "idx_bus", "idx_cost", "idx_ct", "idx_dcline", "idx_gen", "int2ext", "isload", "load2disp", "loadcase", "loadshed", "makeAang", "makeApq", "makeAvl", "makeAy", "makeB", "makeBdc", "makeJac", "makeLODF", "makePTDF", "makeSbus", "makeSdzip", "makeYbus", "make_vcorr", "make_zpv", "margcost", "miqps_matpower", "modcost", "mpoption", "mpoption_info_clp", "mpoption_info_cplex", "mpoption_info_fmincon", "mpoption_info_glpk", "mpoption_info_gurobi", "mpoption_info_intlinprog", "mpoption_info_ipopt", "mpoption_info_knitro", "mpoption_info_linprog", "mpoption_info_mips", "mpoption_info_mosek", "mpoption_info_osqp", "mpoption_info_quadprog", "mpoption_old", "mpver", "newtonpf", "newtonpf_I_cart", "newtonpf_I_hybrid", "newtonpf_I_polar", "newtonpf_S_cart", "newtonpf_S_hybrid", "nlpopf_solver", "opf", "opf_args", "opf_branch_ang_fcn", "opf_branch_ang_hess", "opf_branch_flow_fcn", "opf_branch_flow_hess", "opf_current_balance_fcn", "opf_current_balance_hess", "opf_execute", "opf_gen_cost_fcn", "opf_legacy_user_cost_fcn", "opf_nle_fcn1", "opf_nle_hess1", "opf_power_balance_fcn", "opf_power_balance_hess", "opf_setup", "opf_veq_fcn", "opf_veq_hess", "opf_vlim_fcn", "opf_vlim_hess", "opf_vref_fcn", "opf_vref_hess", "order_radial", "pfsoln", "poly2pwl", "polycost", "pqcost", "printpf", "psse2mpc", "psse_convert", "psse_convert_hvdc", "psse_convert_xfmr", "psse_parse", "psse_parse_line", "psse_parse_section", "psse_read", "qps_matpower", "radial_pf", "remove_userfcn", "run_userfcn", "runcpf", "rundcopf", "rundcpf", "runduopf", "runopf", "runopf_w_res", "runpf", "runuopf", "save2psse", "savecase", "savechgtab", "scale_load", "set_reorder", "t_apply_changes", "t_auction_case", "t_auction_minopf", "t_auction_mips", "t_auction_tspopf_pdipm", "t_case30_userfcns", "t_case9_dcline", "t_case9_opf", "t_case9_opfv2", "t_case9_pf", "t_case9_pfv2", "t_case9_save2psse", "t_case_ext", "t_case_int", "t_chgtab", "t_cpf", "t_cpf_cb1", "t_cpf_cb2", "t_dcline", "t_ext2int2ext", "t_feval_w_path", "t_get_losses", "t_hasPQcap", "t_hessian", "t_islands", "t_jacobian", "t_load2disp", "t_loadcase", "t_makeLODF", "t_makePTDF", "t_margcost", "t_miqps_matpower", "t_modcost", "t_mpoption", "t_mpoption_ov", "t_off2case", "t_opf_dc_bpmpd", "t_opf_dc_clp", "t_opf_dc_cplex", "t_opf_dc_default", "t_opf_dc_glpk", "t_opf_dc_gurobi", "t_opf_dc_ipopt", "t_opf_dc_mips", "t_opf_dc_mips_sc", "t_opf_dc_mosek", "t_opf_dc_osqp", "t_opf_dc_ot", "t_opf_default", "t_opf_fmincon", "t_opf_ipopt", "t_opf_knitro", "t_opf_minopf", "t_opf_mips", "t_opf_model", "t_opf_softlims", "t_opf_tspopf_pdipm", "t_opf_tspopf_scpdipm", "t_opf_tspopf_tralm", "t_opf_userfcns", "t_pf_ac", "t_pf_dc", "t_pf_radial", "t_printpf", "t_psse", "t_qps_matpower", "t_runmarket", "t_runopf_w_res", "t_scale_load", "t_total_load", "t_totcost", "t_vdep_load", "toggle_dcline", "toggle_iflims", "toggle_reserves", "toggle_softlims", "total_load", "totcost", "uopf", "update_mupq", "zgausspf", "<span class=\"section-number\">5. </span>Legacy", "<span class=\"section-number\">6. </span>Previous Versions", "<span class=\"section-number\">4. </span>Tests", "mp_foo_table", "t_case3p_a", "t_case3p_b", "t_case3p_c", "t_case3p_d", "t_case3p_e", "t_case3p_f", "t_case3p_g", "t_case3p_h", "t_case9_gizmo", "t_dmc_element", "t_mp_data_model", "t_mp_dm_converter_mpc2", "t_mp_mapped_array", "t_mp_table", "t_mpxt_legacy_dcline", "t_mpxt_reserves", "t_nm_element", "t_node_test", "t_port_inj_current_acc", "t_port_inj_current_acp", "t_port_inj_power_acc", "t_port_inj_power_acp", "t_pretty_print", "t_run_mp", "t_run_mp_3p", "t_run_opf_default", "test_matpower", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Technical Notes", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> User\u2019s Manual"], "terms": {"matpow": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "github": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "user": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769], "": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769], "manual": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769], "extra": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "matlab": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "reg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "gnu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "octav": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "pserc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "power": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "system": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "engin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "research": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "center": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "cert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "consortium": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "electr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "reliabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "technologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "solut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "mip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "interior": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "solver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "mp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770], "test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "readm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "opt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "model": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "most": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "schedul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "tool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "technic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770], "note": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "develop": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "The": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 17, 18, 19, 20, 21, 26, 30, 31, 37, 38, 42, 43, 60, 61, 62, 66, 77, 78, 79, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 186, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 227, 228, 234, 236, 240, 243, 244, 249, 250, 251, 256, 282, 285, 301, 302, 303, 306, 307, 308, 402, 407, 450, 458, 459, 461, 463, 464, 466, 473, 474, 475, 479, 480, 481, 483, 484, 486, 489, 498, 501, 502, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 525, 526, 528, 530, 531, 533, 538, 551, 552, 553, 554, 555, 557, 558, 560, 564, 567, 569, 570, 571, 572, 574, 576, 577, 578, 581, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 626, 631, 632, 650, 652, 653, 662, 729, 730, 731, 732, 734, 737, 770], "team": 0, "would": [0, 2, 3, 4, 6, 7, 8, 12, 17, 19, 64, 113, 160, 166, 186, 248, 255, 407, 489, 732], "like": [0, 4, 6, 8, 12, 17, 42, 113, 114, 115, 118, 119, 120, 151, 159, 184, 186, 189, 234, 243, 255, 307, 407, 463, 489, 490], "support": [0, 6, 22, 24, 25, 118, 123, 126, 134, 135, 140, 144, 147, 243, 454, 467, 544], "numer": [0, 4, 6, 12, 17, 19, 20, 26, 31, 42, 60, 64, 114, 156, 166, 192, 199, 208, 228, 236, 307, 454, 489, 502, 503, 525, 552, 581, 636, 638, 656, 680, 682], "grant": [0, 243], "contract": [0, 77], "have": [0, 2, 3, 4, 6, 8, 13, 17, 19, 43, 60, 62, 81, 106, 113, 114, 117, 189, 243, 247, 378, 407, 465, 474, 477, 478, 486, 489, 527, 531, 538, 556, 604, 637, 638, 644, 655, 733, 737], "contribut": [0, 6, 17, 21], "directli": [0, 2, 3, 4, 7, 12, 17, 38, 114, 166, 169, 178, 180, 193, 200, 227, 234, 240, 243, 244, 256, 463, 466, 483, 523, 604, 605, 632, 637, 639], "indirectli": [0, 302, 303, 304, 305, 306, 450], "over": [0, 43, 66, 106, 450], "year": 0, "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 26, 30, 37, 38, 40, 41, 43, 59, 60, 62, 63, 64, 74, 76, 81, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 151, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 187, 188, 191, 192, 194, 195, 196, 199, 202, 226, 228, 234, 236, 237, 239, 240, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 271, 300, 301, 302, 303, 306, 307, 308, 336, 340, 402, 404, 405, 406, 407, 450, 451, 452, 454, 455, 456, 460, 461, 462, 463, 465, 468, 469, 470, 471, 473, 474, 475, 483, 484, 489, 492, 494, 498, 501, 502, 506, 508, 520, 521, 523, 524, 525, 526, 527, 528, 533, 534, 535, 538, 549, 551, 552, 555, 556, 559, 560, 568, 570, 572, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 603, 604, 629, 632, 636, 642, 644, 650, 655, 729, 733, 737, 738, 742, 770], "includ": [0, 1, 3, 4, 6, 8, 12, 13, 15, 17, 18, 19, 20, 21, 30, 45, 58, 63, 64, 66, 74, 77, 78, 79, 81, 109, 114, 151, 186, 199, 228, 243, 249, 250, 251, 254, 255, 271, 293, 300, 304, 308, 334, 348, 349, 350, 351, 352, 353, 354, 355, 376, 378, 383, 403, 404, 405, 407, 408, 450, 451, 455, 466, 468, 469, 470, 471, 473, 474, 482, 483, 484, 523, 526, 527, 528, 533, 535, 538, 543, 545, 549, 550, 553, 554, 557, 558, 559, 581, 595, 597, 598, 599, 600, 601, 602, 604, 605, 628, 632, 638, 639, 652, 654, 655, 676, 712, 716, 732, 733, 737], "fund": [0, 243], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 37, 40, 41, 43, 58, 59, 61, 62, 63, 64, 66, 83, 84, 95, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 129, 132, 133, 139, 140, 146, 147, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 186, 189, 194, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 227, 237, 243, 247, 248, 249, 252, 253, 255, 256, 271, 272, 283, 284, 285, 298, 300, 302, 303, 304, 305, 306, 307, 308, 317, 322, 327, 329, 331, 332, 333, 334, 336, 349, 350, 351, 353, 354, 355, 357, 361, 362, 363, 364, 365, 374, 377, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422, 425, 426, 428, 429, 430, 433, 434, 436, 438, 440, 441, 442, 445, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 463, 465, 467, 469, 473, 474, 475, 478, 479, 480, 481, 483, 489, 490, 495, 496, 498, 499, 501, 504, 515, 516, 518, 524, 525, 526, 527, 535, 536, 551, 552, 553, 557, 559, 562, 567, 569, 570, 572, 575, 577, 581, 595, 604, 608, 609, 619, 626, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 650, 651, 691, 738, 742], "u": [0, 3, 7, 13, 17, 18, 20, 26, 30, 31, 74, 106, 108, 113, 114, 116, 117, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 243, 249, 254, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 287, 288, 292, 293, 295, 298, 474, 483, 484, 487, 489, 504, 521, 538, 553, 554, 555, 557, 558, 568, 569, 573, 574, 575, 581, 595, 603, 604, 605, 629, 649, 730, 731, 735], "depart": [0, 243], "energi": [0, 77, 78, 243, 534, 535, 547], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 26, 30, 31, 36, 42, 43, 60, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91, 96, 97, 98, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 140, 151, 153, 154, 155, 156, 157, 158, 159, 166, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 181, 184, 186, 189, 190, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 228, 234, 238, 240, 242, 243, 246, 247, 249, 255, 256, 260, 271, 272, 273, 274, 276, 277, 278, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 300, 303, 304, 306, 307, 366, 367, 368, 369, 370, 371, 372, 375, 378, 402, 403, 407, 413, 420, 421, 422, 423, 437, 443, 450, 452, 454, 456, 462, 465, 474, 475, 476, 478, 483, 484, 486, 487, 489, 490, 504, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 524, 526, 527, 529, 535, 536, 538, 551, 553, 554, 555, 557, 558, 559, 560, 562, 563, 568, 569, 570, 571, 572, 573, 574, 575, 577, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 603, 604, 605, 628, 629, 630, 631, 632, 633, 635, 636, 638, 639, 641, 644, 645, 646, 647, 648, 649, 650, 651, 653, 655, 673, 730, 731, 732, 733, 735, 739, 742, 746, 768, 769, 770], "nation": [0, 243], "scienc": [0, 243], "foundat": [0, 243], "2": [0, 1, 2, 3, 4, 7, 8, 9, 12, 13, 17, 18, 19, 20, 26, 28, 30, 31, 62, 64, 76, 79, 80, 83, 91, 93, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 183, 184, 186, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 232, 233, 236, 237, 239, 243, 246, 247, 249, 252, 253, 255, 256, 271, 273, 274, 277, 280, 283, 285, 287, 288, 298, 300, 303, 304, 306, 307, 378, 402, 408, 431, 450, 462, 474, 475, 476, 479, 480, 481, 483, 485, 489, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 525, 526, 527, 529, 532, 535, 536, 538, 551, 552, 553, 554, 555, 557, 558, 559, 562, 568, 576, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 603, 604, 605, 608, 626, 629, 630, 655, 674, 730, 732, 743, 744, 745, 769], "arpa": 0, "e": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 17, 18, 19, 26, 29, 30, 42, 60, 62, 66, 75, 76, 96, 97, 98, 100, 106, 109, 113, 114, 121, 152, 156, 161, 166, 167, 178, 179, 180, 181, 185, 186, 189, 197, 198, 199, 208, 228, 231, 246, 249, 252, 255, 256, 272, 276, 282, 284, 292, 293, 300, 301, 302, 303, 304, 305, 306, 308, 336, 402, 407, 450, 451, 457, 463, 469, 474, 475, 483, 489, 490, 491, 497, 500, 503, 507, 515, 526, 535, 568, 569, 570, 572, 575, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 632, 633, 634, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 650, 651, 652, 655, 732, 733], "3": [0, 1, 2, 3, 7, 8, 9, 11, 12, 17, 18, 20, 26, 30, 31, 42, 43, 60, 62, 76, 79, 80, 88, 89, 90, 91, 92, 93, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 134, 144, 151, 153, 154, 155, 156, 157, 158, 159, 168, 170, 173, 174, 178, 179, 180, 181, 184, 186, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 232, 233, 236, 237, 239, 243, 246, 247, 249, 258, 260, 261, 264, 265, 270, 273, 274, 275, 277, 278, 280, 281, 285, 286, 288, 289, 298, 299, 300, 303, 304, 306, 307, 357, 358, 359, 366, 367, 368, 369, 370, 371, 372, 374, 375, 378, 388, 389, 400, 401, 402, 403, 414, 415, 416, 420, 421, 422, 424, 425, 426, 436, 438, 448, 450, 458, 465, 474, 475, 476, 479, 483, 489, 490, 509, 511, 512, 517, 524, 525, 527, 535, 551, 552, 553, 554, 555, 557, 558, 568, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 604, 605, 664, 665, 666, 667, 730, 742, 743, 744, 745, 746, 747, 748, 749, 750, 766, 769], "other": [0, 1, 2, 3, 5, 6, 7, 8, 17, 19, 37, 42, 60, 104, 107, 108, 109, 110, 111, 112, 113, 114, 153, 154, 155, 156, 157, 158, 171, 178, 180, 181, 186, 199, 204, 208, 236, 243, 245, 249, 255, 308, 454, 462, 465, 472, 473, 475, 483, 489, 524, 525, 534, 535, 538, 551, 552, 581, 604, 608, 609, 632, 637, 638, 644, 729, 748, 749], "part": [0, 9, 17, 19, 20, 106, 107, 108, 109, 112, 113, 243, 303, 304, 403, 404, 407, 483, 510, 511, 512, 513, 514, 516, 517, 518, 519, 530, 535, 577, 581, 620, 622, 624], "offic": [0, 243], "deliveri": [0, 243, 480, 535, 576, 626], "transmiss": [0, 1, 3, 8, 10, 19, 243, 271, 348, 349, 350, 351, 352, 353, 354, 355, 408, 479, 483], "program": [0, 6, 7, 21, 26, 31, 38, 114, 119, 124, 130, 133, 136, 142, 153, 154, 155, 156, 157, 158, 163, 165, 178, 179, 180, 181, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 243, 546, 735], "under": [0, 3, 6, 30, 43, 228, 229, 230, 243, 463, 547], "laboratori": [0, 243], "cooper": [0, 243], "agreement": [0, 243], "No": [0, 26, 243, 458, 459, 644], "de": [0, 243], "fc26": [0, 243], "09nt43321": [0, 243], "materi": [0, 243], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 26, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 58, 59, 60, 61, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 81, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 178, 179, 180, 181, 184, 186, 188, 189, 190, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 273, 274, 276, 285, 287, 300, 302, 303, 304, 305, 306, 307, 308, 336, 376, 383, 402, 403, 407, 450, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 491, 492, 497, 498, 500, 501, 502, 503, 506, 507, 508, 509, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 619, 626, 628, 629, 630, 631, 632, 636, 637, 638, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 662, 729, 730, 731, 732, 733, 734, 735, 737, 743, 744, 745, 746, 768, 770], "base": [0, 1, 3, 7, 9, 11, 14, 16, 17, 19, 20, 26, 31, 37, 43, 64, 79, 80, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 153, 154, 155, 157, 158, 168, 169, 170, 174, 178, 179, 180, 189, 191, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 226, 243, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 467, 468, 472, 474, 479, 483, 487, 488, 489, 492, 493, 504, 508, 509, 515, 540, 550, 554, 558, 573, 581, 595, 604, 613, 635, 644, 706, 707, 708, 709, 710, 713, 714, 715, 730, 736, 741, 770], "upon": [0, 3, 199, 243, 249, 581], "work": [0, 10, 17, 151, 160, 243, 248, 403, 406, 463, 464, 465, 467, 529, 581, 629, 684, 729], "Nos": [0, 243], "0532744": [0, 243], "1642341": [0, 243], "1931421": [0, 243], "ani": [0, 1, 2, 6, 7, 8, 11, 17, 19, 59, 63, 74, 106, 113, 114, 151, 162, 163, 164, 165, 166, 186, 189, 234, 243, 247, 248, 249, 255, 300, 301, 307, 336, 403, 450, 462, 465, 469, 475, 485, 489, 490, 492, 502, 508, 524, 526, 529, 538, 551, 556, 567, 573, 581, 596, 604, 639, 644, 650, 655, 656, 732, 736], "opinion": [0, 243], "find": [0, 1, 4, 9, 13, 17, 243, 454, 530, 531, 604, 729, 730, 731, 732], "conclus": [0, 243], "recommend": [0, 13, 160, 243], "express": [0, 8, 237, 243, 515, 516, 517, 518, 519, 567, 573, 608], "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 37, 38, 42, 43, 59, 60, 61, 62, 63, 64, 66, 78, 79, 80, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 186, 189, 190, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 227, 234, 236, 238, 240, 243, 244, 246, 247, 249, 250, 252, 255, 256, 271, 273, 274, 277, 279, 280, 282, 285, 287, 288, 292, 295, 298, 301, 302, 303, 306, 307, 308, 336, 378, 402, 404, 405, 406, 407, 450, 452, 454, 456, 458, 459, 462, 463, 464, 465, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 489, 492, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 521, 523, 524, 525, 526, 527, 530, 535, 538, 551, 552, 553, 554, 555, 557, 558, 561, 564, 565, 567, 569, 570, 571, 572, 573, 576, 577, 581, 595, 603, 604, 605, 606, 608, 609, 612, 626, 630, 632, 636, 637, 638, 644, 645, 646, 647, 648, 649, 650, 651, 653, 655, 656, 732, 733, 735, 747, 748, 749], "those": [0, 1, 2, 3, 6, 7, 13, 17, 43, 109, 110, 114, 160, 243, 250, 255, 463, 483, 524, 535, 538, 551, 571, 637, 638, 649, 654, 732], "author": [0, 243], "do": [0, 1, 12, 17, 66, 77, 78, 79, 80, 166, 167, 199, 243, 246, 248, 301, 403, 406, 450, 454, 465, 527, 581, 595, 655, 656, 732], "necessarili": [0, 42, 160, 243], "reflect": [0, 243], "view": [0, 243], "synthet": [0, 548], "data": [0, 1, 5, 8, 11, 12, 18, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 74, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 186, 227, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 308, 314, 336, 349, 350, 353, 354, 355, 357, 361, 362, 363, 364, 365, 374, 377, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 406, 407, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 466, 468, 469, 470, 471, 472, 474, 475, 479, 480, 481, 483, 484, 489, 491, 493, 497, 500, 505, 507, 523, 524, 525, 526, 527, 551, 552, 555, 556, 562, 565, 604, 605, 627, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 650, 651, 653, 658, 662, 663, 664, 665, 666, 667, 668, 669, 670, 735, 736, 742, 750], "grid": [0, 548], "r": [0, 9, 10, 20, 26, 30, 64, 106, 108, 112, 113, 114, 157, 167, 169, 171, 174, 199, 209, 256, 271, 285, 292, 298, 303, 403, 474, 480, 483, 487, 489, 496, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 536, 538, 553, 570, 576, 604, 605, 626, 649, 655, 731, 769], "d": [0, 4, 8, 10, 17, 19, 26, 76, 106, 166, 199, 236, 249, 252, 253, 256, 259, 307, 407, 450, 451, 452, 453, 454, 455, 456, 457, 466, 468, 469, 470, 471, 479, 480, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 576, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 626, 637, 638, 769], "project": [0, 6, 10, 21, 23, 243, 595], "A": [1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 20, 21, 26, 30, 31, 60, 61, 106, 108, 113, 114, 116, 117, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 249, 252, 254, 255, 256, 300, 308, 336, 368, 371, 376, 383, 402, 407, 474, 475, 479, 483, 524, 526, 527, 530, 537, 551, 553, 556, 567, 577, 581, 604, 605, 642, 656, 735, 769], "new": [1, 2, 3, 8, 11, 13, 18, 19, 21, 37, 39, 40, 41, 60, 66, 104, 107, 108, 109, 110, 111, 112, 114, 156, 186, 208, 226, 245, 252, 402, 450, 458, 459, 473, 476, 498, 501, 526, 559, 581, 595, 639, 644, 649], "orient": [1, 2, 6, 25, 247, 462, 463, 479, 480, 481, 626, 730], "core": [1, 2, 20, 167, 171, 472, 473, 542, 581, 770], "design": [1, 6, 8, 483, 535], "around": [1, 2, 43, 463, 468, 470, 471, 520], "concept": 1, "gener": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 42, 43, 45, 59, 63, 64, 66, 74, 77, 79, 80, 81, 96, 97, 98, 100, 103, 106, 107, 109, 110, 113, 114, 115, 118, 120, 151, 159, 189, 243, 249, 255, 261, 262, 267, 279, 280, 281, 282, 292, 293, 373, 374, 375, 376, 377, 378, 379, 380, 381, 394, 403, 423, 424, 425, 426, 427, 428, 429, 430, 453, 455, 458, 460, 461, 463, 464, 465, 468, 469, 470, 471, 473, 474, 476, 477, 479, 480, 481, 483, 489, 490, 497, 498, 500, 501, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 525, 526, 527, 528, 533, 534, 535, 538, 551, 552, 555, 556, 558, 559, 563, 565, 566, 567, 573, 576, 578, 580, 581, 595, 597, 598, 599, 600, 601, 602, 604, 605, 613, 614, 629, 630, 632, 641, 644, 647, 649, 650, 651, 664, 665, 666, 667, 729, 731, 732, 734, 735, 736, 737, 750, 769], "element": [1, 5, 9, 10, 11, 12, 18, 20, 21, 26, 42, 60, 62, 77, 78, 106, 107, 108, 109, 110, 111, 112, 113, 114, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 189, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 236, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 317, 322, 327, 330, 335, 336, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 458, 459, 460, 461, 468, 469, 470, 471, 472, 490, 524, 527, 536, 551, 580, 581, 604, 605, 613, 637, 644, 655, 656, 732, 733, 759], "wa": [1, 9, 43, 108, 109, 110, 113, 114, 186, 199, 236, 237, 239, 243, 474, 489, 552, 604, 644], "introduc": [1, 2, 9, 19], "8": [1, 7, 8, 12, 17, 18, 19, 20, 26, 31, 78, 106, 153, 154, 155, 157, 158, 167, 168, 170, 174, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 463, 483, 553, 554, 557, 558, 581, 595], "0": [1, 3, 7, 12, 13, 14, 16, 17, 18, 19, 20, 26, 28, 30, 31, 43, 60, 62, 64, 66, 74, 78, 80, 96, 97, 98, 100, 103, 106, 107, 108, 109, 110, 111, 112, 114, 120, 132, 137, 138, 153, 154, 155, 156, 157, 158, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 183, 186, 189, 190, 192, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 232, 233, 234, 236, 237, 238, 239, 240, 243, 249, 255, 295, 303, 306, 402, 403, 407, 450, 452, 454, 456, 463, 465, 474, 476, 478, 483, 484, 489, 490, 502, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 538, 553, 554, 555, 556, 557, 558, 560, 581, 595, 603, 604, 628, 631, 632, 633, 635, 636, 638, 639, 641, 644, 645, 646, 647, 648, 649, 650, 651, 655, 731, 732, 733, 735, 739, 770], "along": [1, 6, 17, 37, 104, 108, 111, 112, 189, 226, 303, 402, 474, 521, 525, 526, 552, 603, 604], "emploi": 1, "chapter": [1, 26], "give": [1, 113, 114], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 17, 19, 20, 21, 29, 40, 41, 59, 60, 61, 62, 63, 64, 65, 75, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 121, 151, 152, 161, 162, 163, 164, 165, 166, 167, 180, 185, 186, 189, 190, 194, 199, 228, 231, 245, 246, 247, 249, 250, 251, 252, 255, 256, 300, 302, 303, 304, 305, 307, 308, 315, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 358, 359, 360, 361, 362, 363, 367, 375, 376, 378, 383, 389, 401, 402, 407, 450, 462, 463, 470, 474, 475, 476, 482, 483, 484, 489, 498, 501, 508, 521, 524, 526, 527, 528, 532, 533, 534, 535, 547, 551, 555, 556, 559, 562, 572, 574, 580, 581, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 612, 619, 631, 635, 644, 648, 649, 651, 653, 654, 655, 729, 730, 732, 735, 737, 770], "primari": [1, 4, 37, 104, 226, 243], "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 37, 40, 41, 43, 61, 64, 66, 74, 76, 104, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 228, 229, 230, 232, 233, 235, 241, 243, 246, 247, 249, 255, 256, 272, 276, 282, 283, 284, 292, 293, 294, 300, 301, 303, 304, 306, 308, 312, 316, 378, 402, 403, 410, 439, 450, 452, 453, 454, 456, 457, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 475, 483, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 520, 521, 523, 524, 525, 526, 529, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 563, 570, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 611, 615, 618, 621, 623, 625, 629, 631, 642, 644, 654, 655, 673, 674, 676, 721, 735, 739, 770], "solv": [1, 6, 11, 17, 18, 20, 21, 24, 26, 28, 30, 31, 38, 43, 66, 105, 108, 109, 110, 111, 112, 113, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 183, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 227, 308, 336, 403, 406, 407, 450, 451, 466, 468, 469, 470, 471, 479, 480, 481, 484, 487, 520, 521, 522, 528, 532, 533, 581, 597, 598, 599, 600, 601, 602, 603, 604, 641, 644, 645, 646, 647, 648, 650, 651, 735, 737, 765], "steadi": [1, 6, 21, 644], "state": [1, 3, 6, 7, 8, 9, 17, 19, 21, 58, 106, 186, 199, 228, 249, 255, 302, 303, 304, 305, 306, 308, 317, 322, 327, 341, 344, 347, 402, 403, 404, 405, 406, 407, 420, 423, 424, 427, 430, 431, 432, 435, 450, 489, 526, 581, 644], "simul": [1, 3, 21, 469, 472, 475, 539, 642], "problem": [1, 2, 3, 6, 7, 8, 11, 12, 17, 18, 21, 26, 28, 31, 43, 66, 70, 71, 72, 73, 95, 105, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 183, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 249, 308, 319, 321, 324, 326, 328, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 391, 392, 393, 397, 398, 399, 401, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 468, 470, 471, 474, 489, 581, 604, 605, 644, 729, 737], "flow": [1, 3, 7, 8, 11, 12, 18, 19, 21, 26, 43, 66, 68, 69, 74, 108, 109, 255, 271, 272, 283, 284, 303, 308, 315, 327, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 353, 354, 355, 364, 365, 370, 371, 372, 380, 381, 386, 387, 392, 393, 398, 399, 450, 451, 452, 453, 454, 455, 456, 458, 459, 464, 468, 469, 470, 471, 472, 479, 480, 481, 483, 484, 487, 489, 491, 492, 496, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 528, 532, 533, 535, 536, 540, 543, 545, 546, 550, 553, 557, 568, 569, 570, 576, 581, 595, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 610, 617, 620, 622, 624, 626, 627, 631, 641, 644, 645, 646, 647, 648, 649, 650, 651, 658, 662, 664, 665, 666, 667, 668, 672, 673, 674, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 717, 718, 719, 729, 730, 732, 735, 737, 750, 767], "continu": [1, 7, 17, 18, 20, 37, 96, 104, 112, 114, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 186, 187, 188, 191, 192, 194, 195, 196, 199, 226, 250, 290, 296, 338, 339, 340, 341, 342, 343, 344, 345, 346, 402, 450, 451, 452, 458, 459, 464, 468, 472, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 504, 505, 506, 507, 508, 581, 595, 644, 672, 673, 674, 735, 770], "At": [1, 243, 478], "top": [1, 2, 79, 106, 166, 472, 581], "level": [1, 2, 26, 43, 106, 114, 153, 154, 155, 156, 157, 158, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 463, 472, 490, 523, 578, 581, 712, 716, 734], "task": [1, 3, 5, 6, 7, 12, 18, 249, 250, 251, 252, 301, 308, 336, 402, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 466, 468, 469, 470, 471, 472, 525], "construct": [1, 2, 8, 11, 17, 19, 20, 21, 62, 113, 123, 247, 249, 251, 285, 301, 402, 407, 420, 462, 463, 488, 564, 565, 566, 567, 619], "variou": [1, 2, 6, 17, 19, 21, 105, 106, 113, 156, 167, 171, 181, 186, 208, 475, 642], "layer": [1, 2, 11, 12, 17, 18, 19, 450], "desir": [1, 3, 4, 7, 8, 43, 61, 108, 109, 110, 111, 112, 114, 192, 307, 469, 572, 644, 655], "type": [1, 2, 3, 4, 7, 13, 18, 20, 21, 30, 37, 39, 42, 60, 61, 62, 104, 106, 107, 112, 113, 114, 119, 162, 163, 164, 165, 226, 228, 243, 245, 246, 247, 249, 252, 255, 256, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 300, 301, 302, 303, 306, 308, 336, 402, 403, 404, 405, 406, 407, 413, 450, 458, 459, 461, 462, 463, 469, 474, 476, 477, 483, 489, 501, 502, 534, 535, 554, 556, 581, 595, 637, 638, 732, 733], "formul": [1, 2, 5, 7, 18, 20, 114, 247, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340, 402, 404, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 439, 440, 441, 442, 444, 445, 446, 447, 458, 459, 474, 475, 483, 567, 581, 595, 604, 605, 643], "propog": 1, "back": [1, 3, 4, 17, 30, 66, 81, 106, 113, 117, 166, 174, 186, 189, 192, 249, 255, 302, 308, 402, 450, 452, 454, 456, 475, 489, 525, 559, 581], "through": [1, 2, 3, 4, 7, 8, 19, 20, 190, 196, 227, 248, 249, 463, 735], "explicit": [1, 2, 13, 19, 30, 174, 248, 483, 562, 581], "three": [1, 2, 3, 8, 11, 17, 18, 19, 21, 44, 45, 79, 82, 107, 108, 109, 110, 111, 112, 114, 186, 228, 255, 287, 301, 458, 472, 474, 483, 489, 524, 551, 574, 604, 605, 635, 655, 743, 744, 745, 746, 747, 748, 749], "structur": [1, 3, 4, 8, 17, 26, 31, 40, 41, 42, 61, 62, 65, 66, 74, 76, 113, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 186, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 255, 307, 402, 474, 489, 524, 525, 526, 527, 551, 552, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 627, 732], "decoupl": [1, 114, 168, 171, 334, 528, 568, 581, 595, 737], "one": [1, 2, 3, 4, 6, 8, 11, 17, 19, 40, 41, 42, 43, 59, 63, 64, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 160, 162, 163, 164, 165, 166, 186, 190, 199, 227, 228, 249, 255, 300, 303, 304, 307, 402, 403, 407, 463, 469, 475, 476, 483, 489, 524, 537, 551, 556, 577, 580, 581, 595, 604, 605, 639, 642, 649, 656, 731, 732, 735, 748, 749], "anoth": [1, 7, 8, 17, 19, 109, 114, 166, 192, 227, 255, 463, 505, 527], "visibl": [1, 3, 17, 19, 78, 167, 255], "paramet": [1, 4, 7, 9, 12, 17, 20, 26, 30, 60, 63, 107, 108, 109, 110, 111, 112, 114, 115, 118, 120, 159, 167, 171, 194, 195, 196, 199, 247, 248, 249, 250, 255, 285, 290, 296, 302, 303, 306, 337, 376, 379, 383, 402, 403, 406, 407, 409, 412, 420, 424, 427, 430, 432, 435, 436, 438, 439, 442, 444, 447, 448, 449, 451, 461, 474, 482, 483, 487, 496, 499, 524, 525, 528, 533, 536, 551, 552, 553, 555, 564, 565, 566, 567, 581, 595, 604, 605, 614, 652, 653, 737], "quantiti": [1, 17, 74, 199, 247, 292, 407, 461, 570, 581, 649, 655, 731], "network": [1, 2, 3, 5, 11, 12, 18, 20, 66, 255, 301, 302, 303, 304, 305, 306, 308, 309, 312, 317, 322, 327, 336, 341, 344, 347, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 466, 468, 469, 470, 471, 472, 479, 481, 482, 527, 530, 531, 581, 595, 759], "connect": [1, 8, 19, 20, 249, 255, 402, 407, 476, 486, 512, 513, 516, 518, 526, 527, 531, 538, 551, 573], "mathemat": [1, 5, 6, 8, 9, 12, 21, 114, 227, 255, 301, 308, 315, 336, 394, 395, 450, 451, 453, 455, 458, 459, 460, 461, 466, 468, 469, 470, 471, 472, 483], "being": [1, 3, 8, 17, 40, 41, 42, 58, 60, 113, 114, 153, 154, 155, 156, 157, 158, 186, 255, 300, 450, 468, 489, 559, 567, 643, 650, 770], "resepect": 1, "mathshown": [1, 3, 4, 8, 11, 12, 17, 19, 26, 30, 77, 78, 79, 80, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 565], "figur": [1, 2, 3, 4, 7, 8, 11, 12, 17, 19, 77, 78, 79, 80], "further": [1, 7, 8, 60, 336, 407, 644], "particular": [1, 2, 3, 4, 8, 17, 18, 37, 42, 43, 59, 104, 106, 113, 114, 190, 226, 243, 255, 256, 302, 336, 402, 407, 450, 534, 535, 551], "format": [1, 2, 3, 4, 5, 17, 19, 21, 40, 41, 43, 44, 45, 62, 81, 82, 83, 84, 107, 114, 249, 252, 253, 256, 301, 458, 459, 461, 472, 476, 483, 484, 538, 562, 578, 634, 635, 644, 645, 646, 647, 648, 650, 651, 652, 653, 658, 662, 663, 664, 665, 666, 667, 668, 669, 670, 734, 750], "legaci": [1, 2, 3, 17, 18, 24, 37, 104, 226, 249, 254, 263, 283, 284, 319, 321, 324, 326, 328, 337, 377, 382, 383, 384, 385, 386, 387, 431, 432, 433, 434, 435, 449, 452, 454, 456, 457, 459, 472, 473, 474, 581, 614, 672, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 717, 718, 719, 728, 756], "case": [1, 3, 4, 7, 8, 11, 12, 17, 18, 19, 39, 40, 41, 42, 43, 44, 45, 59, 61, 62, 63, 64, 77, 78, 79, 80, 81, 82, 83, 84, 95, 106, 109, 113, 114, 162, 163, 164, 165, 166, 234, 240, 249, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 308, 402, 407, 450, 452, 454, 455, 456, 457, 466, 468, 469, 470, 471, 474, 475, 476, 478, 482, 483, 484, 485, 487, 488, 489, 492, 504, 508, 521, 524, 525, 526, 527, 534, 535, 536, 538, 551, 552, 553, 554, 557, 558, 559, 561, 562, 570, 572, 575, 577, 581, 603, 604, 605, 608, 609, 610, 611, 617, 618, 619, 620, 621, 622, 623, 624, 625, 632, 633, 634, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 658, 662, 663, 664, 665, 666, 667, 668, 669, 670, 684, 732, 733, 735, 742, 743, 744, 745, 746, 747, 748, 749, 750, 766, 770], "struct": [1, 2, 3, 4, 7, 11, 12, 14, 16, 17, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 177, 178, 179, 180, 181, 184, 185, 186, 189, 190, 191, 192, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 228, 231, 247, 248, 249, 252, 253, 255, 256, 301, 303, 304, 305, 306, 307, 308, 329, 336, 376, 383, 402, 407, 449, 450, 451, 452, 454, 456, 457, 466, 468, 469, 470, 471, 474, 475, 476, 478, 483, 484, 487, 488, 489, 490, 491, 493, 497, 500, 502, 503, 505, 507, 521, 524, 525, 526, 527, 533, 534, 535, 536, 551, 552, 559, 561, 562, 570, 574, 575, 581, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 631, 632, 633, 634, 636, 638, 639, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 684, 730, 731, 732, 733, 735, 736, 737], "mpc": [1, 2, 3, 4, 17, 20, 39, 40, 41, 48, 50, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 249, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 328, 450, 452, 454, 456, 457, 466, 468, 469, 470, 471, 474, 475, 476, 478, 482, 483, 484, 488, 521, 524, 525, 526, 527, 530, 531, 534, 535, 551, 552, 557, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 575, 603, 604, 605, 608, 609, 610, 611, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 632, 633, 641, 642, 643, 652, 655, 662, 729, 730, 731, 732, 733, 735], "file": [1, 3, 6, 11, 13, 14, 15, 16, 21, 24, 37, 40, 41, 43, 44, 45, 47, 48, 50, 53, 59, 61, 62, 63, 64, 77, 78, 79, 80, 81, 82, 83, 84, 104, 107, 108, 109, 110, 111, 112, 151, 180, 226, 234, 243, 249, 252, 253, 255, 450, 465, 468, 469, 470, 471, 473, 475, 476, 482, 483, 484, 527, 529, 547, 553, 554, 557, 558, 561, 562, 581, 595, 604, 605, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 662, 663, 664, 665, 666, 667, 668, 684, 691, 750], "convers": [1, 3, 4, 17, 43, 249, 255, 472, 526, 568, 569, 575, 581, 595, 637, 638, 644, 645, 646, 647, 648, 650, 651], "servic": [1, 8, 17, 19, 20, 283, 350, 353, 354, 355, 357, 361, 362, 363, 364, 365, 374, 377, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 476, 477, 478, 483, 553, 557, 558, 567, 612, 619], "convert": [1, 3, 5, 43, 63, 64, 81, 112, 114, 116, 117, 227, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 300, 301, 308, 317, 322, 327, 341, 344, 347, 402, 450, 451, 454, 457, 458, 459, 461, 472, 475, 477, 484, 524, 525, 526, 551, 552, 559, 561, 562, 581, 628, 632, 633, 634, 635, 637, 638, 644, 650], "between": [1, 2, 3, 4, 7, 8, 17, 19, 43, 195, 234, 236, 237, 239, 240, 249, 252, 340, 402, 450, 478, 577, 581, 628], "specif": [1, 3, 7, 8, 11, 14, 16, 17, 19, 38, 60, 66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 156, 167, 168, 169, 170, 171, 174, 180, 181, 208, 227, 228, 243, 244, 249, 250, 251, 252, 254, 255, 256, 301, 302, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 402, 404, 405, 406, 407, 450, 452, 454, 456, 457, 458, 459, 460, 461, 466, 468, 469, 470, 471, 521, 535, 560, 572, 581, 603, 604, 655, 732, 770], "extern": [1, 17, 402, 475, 478, 524, 525, 526, 551, 552, 559, 644, 645, 646, 647, 648, 650, 651, 669, 732], "each": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 18, 19, 21, 42, 43, 60, 64, 77, 78, 80, 106, 107, 108, 109, 112, 113, 114, 162, 163, 164, 165, 166, 186, 199, 228, 234, 236, 238, 240, 249, 251, 252, 255, 256, 287, 293, 300, 301, 302, 303, 304, 305, 306, 307, 308, 336, 368, 369, 371, 372, 402, 403, 406, 407, 450, 458, 459, 460, 473, 474, 475, 476, 477, 478, 483, 485, 486, 489, 502, 515, 516, 518, 527, 530, 531, 536, 553, 554, 555, 557, 558, 563, 572, 574, 575, 577, 578, 580, 581, 604, 605, 636, 638, 639, 644, 649, 655, 730, 731, 732, 733, 734, 735], "plu": [1, 238], "organ": [1, 3, 6, 42, 106, 249], "collect": [1, 6, 17, 19, 74, 109, 114, 186, 303, 306, 489], "enclos": [1, 300, 637, 638], "contain": [1, 2, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 26, 30, 31, 40, 41, 42, 60, 61, 62, 63, 64, 66, 76, 106, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 160, 166, 178, 179, 180, 181, 184, 186, 189, 191, 192, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 234, 248, 249, 252, 255, 256, 300, 301, 308, 336, 402, 407, 450, 458, 459, 461, 463, 466, 468, 469, 470, 471, 472, 474, 483, 484, 489, 490, 491, 493, 497, 500, 502, 503, 505, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 525, 527, 528, 529, 533, 534, 535, 552, 562, 572, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 604, 605, 608, 609, 629, 632, 633, 635, 636, 637, 638, 644, 645, 646, 647, 648, 649, 650, 651, 652, 737, 738], "correspond": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 26, 31, 39, 40, 41, 59, 60, 63, 64, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 153, 154, 155, 156, 157, 158, 166, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 189, 190, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 236, 247, 249, 252, 255, 256, 292, 302, 303, 304, 305, 306, 307, 308, 336, 350, 353, 354, 355, 357, 361, 362, 363, 364, 365, 374, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 407, 450, 452, 454, 456, 457, 458, 459, 473, 474, 475, 476, 483, 489, 509, 510, 511, 512, 513, 514, 524, 525, 527, 536, 538, 551, 552, 560, 563, 568, 571, 572, 574, 578, 580, 581, 595, 608, 609, 613, 630, 635, 636, 637, 638, 639, 644, 650, 655, 656, 732, 733, 734, 739], "devic": [1, 17], "g": [1, 2, 3, 7, 8, 14, 16, 17, 18, 19, 26, 29, 30, 60, 66, 75, 96, 97, 98, 100, 106, 108, 109, 113, 114, 121, 152, 161, 166, 167, 170, 171, 173, 175, 178, 179, 180, 181, 185, 186, 197, 228, 231, 246, 249, 252, 255, 256, 272, 276, 282, 284, 292, 293, 295, 301, 302, 303, 304, 308, 336, 402, 403, 407, 450, 451, 454, 457, 463, 469, 474, 475, 479, 483, 489, 515, 523, 527, 554, 572, 581, 595, 596, 604, 610, 617, 637, 638, 644, 732, 735], "bu": [1, 3, 4, 12, 17, 18, 19, 20, 43, 44, 45, 60, 62, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 249, 255, 256, 258, 259, 265, 266, 269, 271, 273, 274, 275, 276, 277, 279, 280, 283, 284, 285, 287, 288, 295, 298, 336, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 407, 413, 414, 415, 416, 417, 418, 419, 453, 458, 468, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 489, 495, 496, 498, 499, 501, 504, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 530, 531, 533, 536, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 564, 568, 569, 570, 572, 573, 574, 575, 576, 577, 581, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 610, 611, 617, 618, 627, 631, 632, 634, 635, 636, 641, 644, 645, 646, 647, 648, 650, 651, 653, 655, 662, 664, 665, 666, 667, 732, 733, 735, 737, 742, 743, 744, 745, 746, 747, 748, 749, 750, 770], "line": [1, 2, 3, 8, 18, 19, 20, 43, 77, 78, 106, 113, 114, 196, 234, 238, 249, 251, 252, 255, 263, 264, 271, 274, 283, 284, 285, 286, 307, 308, 348, 349, 350, 351, 352, 353, 354, 355, 382, 383, 384, 385, 386, 387, 388, 389, 402, 407, 408, 431, 432, 433, 434, 435, 436, 458, 459, 462, 472, 474, 478, 483, 516, 518, 526, 527, 536, 538, 551, 553, 554, 555, 557, 558, 559, 569, 571, 575, 581, 595, 608, 630, 632, 634, 636, 637, 639, 644, 653, 663, 675, 729, 730, 756], "some": [1, 6, 7, 8, 12, 17, 18, 19, 20, 21, 26, 43, 45, 59, 60, 105, 113, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 236, 247, 248, 255, 304, 305, 452, 454, 456, 484, 535, 553, 554, 555, 557, 558, 581, 630, 643, 645, 646, 647, 648, 650, 651, 737, 770], "attribut": 1, "interfac": [1, 2, 6, 7, 24, 25, 31, 109, 110, 114, 153, 154, 155, 157, 158, 167, 168, 169, 170, 174, 178, 179, 180, 181, 184, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 581, 595, 662, 730, 770], "reserv": [1, 2, 18, 56, 58, 64, 66, 74, 77, 94, 267, 268, 292, 293, 301, 394, 395, 461, 472, 475, 483, 525, 552, 558, 649, 662, 716, 731], "requir": [1, 3, 6, 8, 13, 17, 18, 20, 21, 26, 42, 43, 60, 61, 62, 63, 64, 65, 66, 94, 114, 134, 138, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 167, 168, 170, 171, 178, 179, 180, 181, 189, 208, 243, 255, 293, 349, 458, 459, 461, 465, 476, 490, 538, 559, 562, 581, 595, 643, 649, 731, 732], "provid": [1, 2, 3, 4, 6, 7, 8, 12, 17, 19, 26, 30, 31, 40, 41, 42, 61, 63, 64, 79, 80, 106, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 157, 158, 159, 167, 168, 169, 170, 174, 178, 179, 180, 181, 184, 192, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 227, 248, 249, 250, 252, 255, 256, 300, 301, 302, 303, 304, 305, 306, 307, 309, 312, 314, 315, 316, 317, 319, 321, 322, 324, 326, 327, 328, 330, 335, 336, 403, 407, 450, 451, 453, 455, 457, 465, 466, 468, 469, 470, 471, 473, 474, 527, 535, 559, 567, 572, 573, 581, 613, 649, 655, 731, 733, 770], "extraordinari": 1, "flexibl": [1, 2, 8, 12, 468, 469, 470, 471, 473], "allow": [1, 2, 7, 8, 11, 12, 17, 42, 43, 60, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 166, 167, 184, 199, 228, 248, 255, 308, 474, 475, 476, 483, 560, 581, 595, 647, 651], "environ": [1, 5, 13], "ad": [1, 2, 8, 12, 13, 17, 18, 19, 39, 40, 41, 43, 59, 106, 108, 109, 110, 111, 113, 114, 186, 249, 252, 303, 304, 305, 307, 308, 314, 315, 339, 340, 347, 350, 351, 352, 353, 361, 368, 369, 370, 371, 372, 377, 379, 394, 395, 402, 474, 475, 479, 480, 481, 483, 523, 538, 553, 554, 557, 558, 635, 652, 653, 654, 733], "modifi": [1, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 42, 43, 59, 60, 76, 81, 103, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 120, 151, 159, 162, 163, 164, 165, 184, 189, 243, 249, 252, 255, 256, 300, 301, 307, 402, 407, 458, 459, 460, 461, 465, 476, 484, 489, 490, 556, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 644, 653, 655, 729, 732, 742], "exist": [1, 2, 3, 8, 12, 18, 40, 41, 66, 107, 108, 109, 110, 111, 112, 113, 114, 190, 197, 198, 228, 234, 249, 255, 256, 300, 307, 465, 484, 562, 581], "independ": [1, 7, 572], "rest": [1, 8, 551, 738], "In": [1, 2, 3, 4, 6, 7, 8, 11, 13, 17, 18, 19, 42, 43, 106, 113, 114, 199, 255, 308, 407, 450, 463, 523, 551, 572, 604, 649, 733, 735], "given": [1, 3, 4, 7, 8, 9, 12, 17, 18, 26, 40, 41, 42, 58, 62, 106, 108, 109, 110, 111, 113, 114, 117, 178, 179, 180, 181, 186, 234, 238, 249, 255, 256, 287, 402, 407, 474, 476, 483, 489, 515, 522, 524, 525, 528, 533, 553, 554, 555, 557, 558, 564, 571, 572, 578, 597, 598, 599, 600, 601, 602, 630, 631, 642, 643, 653, 734, 737], "run": [1, 2, 3, 5, 6, 12, 13, 17, 18, 19, 21, 36, 66, 102, 105, 186, 196, 197, 199, 204, 209, 225, 228, 229, 230, 232, 233, 238, 242, 243, 301, 450, 455, 464, 465, 466, 468, 469, 470, 471, 484, 502, 547, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 768, 770], "set": [1, 2, 3, 4, 7, 8, 11, 12, 14, 16, 17, 19, 26, 30, 39, 42, 43, 59, 60, 62, 63, 64, 66, 76, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 144, 151, 159, 172, 173, 178, 184, 186, 187, 188, 189, 191, 192, 193, 199, 227, 232, 238, 239, 243, 247, 249, 255, 300, 301, 302, 329, 336, 337, 378, 402, 403, 404, 405, 406, 407, 449, 453, 454, 455, 458, 459, 465, 468, 470, 471, 474, 476, 483, 489, 490, 492, 494, 498, 501, 506, 508, 520, 528, 533, 554, 555, 556, 558, 576, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 604, 605, 644, 649, 650, 729, 730, 731, 732, 737], "creat": [1, 2, 3, 4, 7, 8, 12, 13, 15, 19, 21, 58, 60, 64, 65, 66, 77, 78, 79, 80, 103, 106, 108, 111, 114, 162, 163, 164, 165, 243, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 307, 308, 315, 402, 407, 450, 454, 469, 474, 484, 559, 581, 633, 652, 653, 759], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 19, 20, 21, 26, 30, 31, 33, 37, 38, 42, 43, 59, 60, 62, 63, 64, 66, 76, 79, 80, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 227, 232, 234, 243, 244, 245, 247, 248, 249, 252, 254, 255, 256, 287, 300, 301, 302, 303, 304, 305, 306, 308, 336, 340, 341, 342, 343, 344, 345, 346, 402, 407, 450, 451, 453, 454, 455, 458, 459, 462, 463, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 479, 480, 481, 483, 484, 487, 489, 499, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 567, 568, 570, 572, 573, 576, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 620, 622, 624, 632, 638, 639, 640, 641, 644, 645, 646, 647, 648, 650, 651, 653, 654, 655, 659, 660, 661, 669, 670, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 729, 732, 733, 734, 735, 737, 767, 769, 770], "show": [1, 2, 3, 4, 7, 8, 17, 18, 19, 43], "mai": [1, 3, 8, 9, 17, 20, 26, 42, 60, 66, 106, 108, 109, 112, 114, 159, 186, 202, 243, 249, 475, 479, 483, 484, 489, 560, 581, 650, 733], "sourc": [1, 3, 4, 6, 12, 13, 14, 15, 16, 18, 19, 21, 37, 104, 166, 226, 243, 249, 252, 253, 255, 256, 450, 452, 454, 456, 457, 466, 468, 469, 470, 471, 473, 535, 567], "individu": [1, 3, 7, 8, 11, 17, 19, 20, 24, 36, 77, 78, 79, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 225, 227, 232, 233, 238, 241, 242, 249, 255, 300, 337, 474, 476, 483, 526, 536, 559, 562, 570, 572, 575, 581, 595, 604, 605, 631, 645, 646, 647, 648, 650, 651, 735, 768], "4": [1, 2, 8, 9, 11, 12, 17, 18, 20, 26, 30, 31, 42, 106, 110, 111, 113, 114, 128, 153, 154, 155, 156, 157, 158, 160, 174, 178, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 232, 233, 236, 237, 239, 243, 246, 271, 273, 274, 301, 402, 420, 456, 463, 475, 476, 479, 481, 483, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 535, 551, 553, 554, 555, 557, 558, 580, 581, 595, 733, 739, 742, 743, 744, 745, 746, 769], "label": [1, 3, 8, 17, 19, 42, 60, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 168, 199, 249, 255, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298, 302, 304, 305, 306, 402, 449, 476, 527, 556, 638], "white": 1, "circl": 1, "convent": [1, 3, 4, 5, 7, 8, 106, 107, 108, 109, 110, 111, 112, 249, 252, 255, 256, 301, 308, 336, 402, 407, 475], "throughout": [1, 3, 9, 62, 249], "codebas": [1, 738], "variabl": [1, 3, 6, 8, 9, 12, 19, 26, 31, 42, 61, 66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 249, 252, 254, 255, 256, 302, 303, 304, 305, 306, 307, 308, 315, 336, 370, 376, 383, 394, 402, 403, 404, 405, 406, 407, 415, 416, 417, 418, 419, 420, 424, 427, 430, 432, 435, 461, 462, 463, 474, 475, 483, 484, 521, 529, 566, 567, 577, 581, 595, 603, 604, 605, 614, 628, 630, 654], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 26, 29, 31, 37, 39, 40, 41, 43, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 80, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 151, 152, 159, 161, 166, 167, 184, 185, 189, 190, 198, 199, 226, 228, 231, 234, 238, 243, 247, 249, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 336, 337, 348, 356, 357, 366, 373, 374, 382, 388, 390, 394, 395, 396, 400, 402, 407, 408, 413, 414, 420, 423, 424, 431, 436, 437, 438, 443, 448, 450, 452, 453, 454, 455, 456, 457, 462, 465, 466, 468, 469, 470, 471, 474, 475, 476, 483, 484, 489, 490, 502, 503, 523, 527, 529, 553, 554, 555, 556, 557, 558, 561, 562, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 604, 605, 632, 635, 636, 638, 639, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 732, 770], "singl": [1, 2, 3, 8, 17, 18, 19, 20, 21, 26, 31, 42, 61, 79, 81, 83, 84, 96, 97, 106, 109, 113, 114, 116, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 174, 178, 179, 180, 181, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 247, 249, 255, 262, 277, 300, 301, 303, 306, 307, 402, 407, 458, 465, 474, 483, 524, 526, 527, 535, 551, 559, 572, 604, 613, 631, 637, 638, 653, 655, 733, 735, 743, 744, 745, 746, 747, 748, 749], "manag": [1, 11, 106, 107, 108, 109, 110, 111, 112, 113, 449], "overal": [1, 6, 43, 476], "process": [1, 2, 4, 6, 11, 21, 252, 254, 255, 450, 452, 454, 456, 457, 570], "pf": [1, 2, 3, 7, 11, 17, 18, 20, 74, 162, 301, 308, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 370, 371, 372, 450, 451, 455, 456, 457, 458, 459, 464, 471, 515, 523, 553, 557, 568, 569, 581, 604, 650, 728], "cpf": [1, 2, 3, 7, 11, 17, 18, 20, 250, 290, 296, 301, 308, 309, 310, 311, 312, 313, 314, 331, 332, 333, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 370, 371, 372, 391, 397, 450, 451, 452, 457, 458, 459, 464, 468, 469, 487, 489, 490, 491, 493, 495, 496, 497, 500, 502, 503, 504, 505, 507, 581, 644, 728], "opf": [1, 2, 3, 6, 7, 11, 18, 19, 20, 21, 43, 50, 54, 55, 56, 70, 71, 81, 95, 114, 115, 118, 120, 151, 159, 160, 163, 165, 184, 249, 251, 272, 275, 276, 278, 281, 282, 284, 286, 289, 291, 294, 297, 299, 301, 308, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 337, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 367, 368, 369, 375, 376, 377, 378, 379, 383, 384, 385, 389, 401, 450, 453, 454, 457, 458, 459, 460, 461, 464, 469, 470, 472, 474, 475, 483, 484, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 532, 538, 540, 543, 545, 550, 551, 553, 554, 557, 558, 581, 595, 603, 605, 608, 612, 615, 616, 619, 631, 645, 647, 648, 649, 651, 664, 665, 666, 667, 712, 716, 728, 729, 730, 731, 732, 735, 770], "ha": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 60, 103, 113, 114, 187, 188, 189, 199, 247, 255, 287, 300, 336, 402, 455, 462, 463, 475, 483, 489, 490, 494, 506, 524, 525, 526, 527, 535, 538, 551, 553, 554, 556, 557, 558, 559, 562, 572, 578, 581, 604, 605, 630, 655, 734, 735, 749], "method": [1, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 26, 30, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 140, 167, 168, 169, 170, 171, 174, 181, 199, 208, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 290, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 427, 430, 431, 432, 435, 436, 437, 438, 439, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 473, 474, 479, 480, 481, 487, 528, 533, 543, 545, 577, 581, 595, 597, 598, 599, 600, 601, 602, 604, 641, 650, 737], "up": [1, 8, 12, 13, 17, 18, 19, 20, 42, 43, 66, 108, 109, 110, 111, 113, 114, 227, 232, 243, 329, 378, 463, 465, 473, 483, 572, 595, 655, 729, 730, 731, 732], "correspnd": 1, "For": [1, 2, 3, 4, 6, 7, 8, 12, 17, 18, 19, 21, 43, 60, 62, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 160, 199, 228, 245, 247, 255, 294, 302, 303, 304, 305, 306, 402, 407, 458, 459, 460, 461, 468, 469, 470, 471, 485, 492, 494, 498, 501, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 551, 552, 556, 568, 572, 580, 581, 604, 605, 732, 733, 770], "exampl": [1, 2, 3, 4, 6, 7, 11, 14, 16, 17, 18, 19, 26, 27, 28, 31, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 67, 68, 69, 70, 71, 72, 73, 82, 83, 84, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 228, 232, 233, 234, 236, 237, 238, 239, 240, 252, 255, 301, 307, 402, 407, 465, 468, 469, 470, 471, 472, 474, 475, 476, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 525, 526, 527, 529, 534, 535, 536, 551, 552, 553, 554, 555, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 581, 595, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 655, 691, 729, 733, 735, 770], "follow": [1, 3, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 26, 28, 30, 31, 37, 38, 39, 40, 41, 42, 43, 45, 60, 62, 63, 64, 74, 77, 78, 79, 80, 81, 104, 105, 106, 109, 110, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 183, 184, 186, 189, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 227, 228, 234, 236, 237, 239, 240, 243, 244, 247, 249, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 300, 402, 403, 404, 405, 406, 466, 468, 469, 470, 471, 474, 475, 483, 484, 489, 502, 515, 516, 517, 518, 519, 521, 524, 526, 527, 534, 535, 536, 551, 555, 556, 558, 559, 561, 564, 565, 566, 581, 595, 597, 598, 599, 600, 601, 602, 603, 604, 636, 637, 638, 639, 644, 645, 646, 647, 648, 649, 650, 651, 655, 730, 731, 732, 733, 770], "9": [1, 2, 12, 17, 18, 20, 31, 43, 115, 120, 137, 138, 153, 154, 155, 157, 158, 159, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 243, 300, 402, 480, 483, 553, 554, 557, 558, 576, 581, 595, 626, 664, 665, 666, 667, 747, 748, 749, 750], "mpopt": [1, 2, 7, 12, 17, 18, 20, 66, 115, 118, 119, 120, 151, 159, 160, 162, 163, 164, 165, 184, 249, 251, 254, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 294, 295, 298, 301, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 345, 346, 347, 350, 351, 352, 353, 354, 355, 357, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 468, 469, 470, 471, 475, 479, 480, 481, 487, 488, 489, 521, 526, 528, 533, 559, 564, 568, 573, 574, 581, 597, 598, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 612, 613, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 631, 641, 644, 645, 646, 647, 648, 649, 650, 651, 732, 733, 735, 737, 770], "mpoption": [1, 2, 12, 18, 20, 66, 76, 115, 118, 119, 120, 151, 159, 160, 162, 163, 164, 165, 166, 184, 472, 528, 533, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 604, 605, 631, 641, 644, 645, 646, 647, 648, 650, 651, 690, 735, 737, 738, 770], "verbos": [1, 12, 18, 20, 26, 30, 31, 36, 66, 74, 101, 102, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 238, 242, 243, 465, 484, 490, 581, 595, 632, 633, 635, 636, 638, 639, 735, 768], "option": [1, 3, 4, 5, 6, 7, 8, 11, 13, 17, 18, 19, 26, 30, 31, 38, 39, 40, 41, 59, 61, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 144, 151, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 190, 191, 192, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 228, 232, 234, 236, 237, 238, 240, 243, 244, 247, 249, 254, 255, 256, 301, 302, 303, 304, 306, 307, 308, 316, 327, 329, 336, 378, 402, 403, 407, 450, 451, 452, 454, 455, 456, 457, 465, 466, 468, 469, 470, 471, 474, 475, 482, 483, 484, 487, 489, 495, 496, 502, 504, 516, 518, 520, 521, 524, 525, 526, 527, 528, 531, 533, 534, 535, 536, 538, 551, 552, 559, 561, 562, 563, 568, 570, 571, 572, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 617, 618, 620, 621, 622, 623, 624, 625, 631, 632, 635, 636, 637, 638, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 691, 731, 732, 733, 735, 737, 770], "task_opf": [1, 11, 245, 454, 466, 469, 470, 472], "case9": [1, 3, 4, 20, 468, 469, 470, 471, 644, 645, 646, 647, 648, 650, 651, 770], "step": [1, 3, 4, 7, 8, 11, 13, 17, 26, 114, 170, 174, 181, 186, 188, 189, 194, 195, 196, 198, 199, 208, 243, 463, 483, 487, 488, 489, 490, 495, 496, 498, 499, 501, 503, 504, 506, 545, 581, 595, 644], "list": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 61, 63, 64, 107, 108, 109, 110, 111, 112, 114, 162, 163, 164, 165, 174, 186, 249, 251, 255, 256, 300, 402, 463, 475, 476, 477, 489, 490, 522, 523, 528, 533, 534, 535, 581, 630, 637, 638, 642, 653, 735, 737], "roughli": [1, 3, 249], "equival": [1, 17, 19, 117, 240, 271, 307, 483], "perform": [1, 7, 26, 30, 31, 66, 167, 168, 169, 170, 174, 179, 180, 199, 206, 249, 499, 523, 525, 526, 528, 533, 570, 581, 597, 598, 599, 600, 601, 602, 626, 644, 656, 737], "when": [1, 2, 3, 4, 6, 8, 9, 12, 13, 17, 19, 29, 42, 43, 61, 66, 75, 77, 78, 106, 109, 110, 113, 114, 121, 152, 161, 166, 171, 185, 187, 188, 199, 228, 231, 232, 243, 245, 249, 252, 255, 307, 308, 402, 407, 450, 451, 462, 463, 474, 475, 484, 489, 492, 494, 498, 501, 506, 508, 524, 525, 572, 575, 577, 581, 596, 604, 605, 608, 644, 653, 729, 732], "It": [1, 3, 4, 6, 8, 17, 19, 20, 21, 42, 74, 108, 111, 114, 234, 243, 249, 252, 463, 469, 474, 476, 479, 480, 481, 489, 498, 501, 516, 523, 524, 527, 538, 551, 639, 735], "defin": [1, 3, 4, 6, 7, 8, 11, 12, 17, 19, 20, 26, 31, 42, 43, 59, 60, 64, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 166, 178, 179, 180, 181, 184, 186, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 236, 246, 247, 249, 250, 254, 255, 256, 282, 285, 293, 303, 306, 308, 337, 402, 403, 407, 474, 475, 476, 483, 489, 502, 523, 529, 534, 535, 538, 553, 554, 555, 556, 557, 558, 562, 572, 577, 581, 595, 604, 605, 614, 615, 616, 644, 649, 655, 662, 729, 730, 733], "well": [1, 2, 3, 8, 17, 19, 77, 78, 106, 114, 227, 307, 402, 403, 450, 454, 461, 466, 479, 480, 481, 516, 518, 523, 524, 525, 527, 528, 533, 551, 552, 556, 581, 597, 598, 599, 600, 601, 602, 604, 639, 684, 729, 737], "explicitli": [1, 8, 13, 17, 199, 403, 581, 604], "actual": [1, 6, 11, 26, 109, 178, 179, 180, 181, 234, 236, 237, 240, 256, 407, 556, 730, 733], "code": [1, 7, 13, 17, 18, 19, 20, 26, 107, 108, 109, 110, 111, 112, 114, 156, 157, 160, 166, 167, 168, 169, 170, 171, 174, 178, 180, 181, 208, 209, 228, 229, 230, 243, 247, 331, 332, 333, 334, 340, 454, 467, 484, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 523, 535, 556, 570, 581, 603, 604, 658, 659, 660, 661, 680, 682, 689, 742, 770], "thei": [1, 2, 4, 7, 8, 11, 12, 13, 17, 19, 38, 106, 109, 113, 114, 227, 236, 243, 244, 301, 303, 308, 474, 524, 525, 551, 552, 553, 554, 557, 558, 572], "return": [1, 2, 3, 4, 8, 11, 17, 19, 26, 29, 36, 40, 41, 59, 61, 63, 64, 75, 76, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 121, 151, 152, 157, 160, 161, 166, 168, 180, 185, 186, 189, 190, 198, 199, 201, 209, 225, 228, 231, 242, 246, 249, 252, 253, 255, 256, 301, 302, 303, 304, 305, 306, 307, 308, 336, 337, 360, 376, 402, 403, 407, 450, 452, 454, 456, 462, 463, 466, 467, 468, 469, 470, 471, 474, 482, 483, 486, 487, 489, 503, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 551, 552, 559, 560, 561, 562, 563, 568, 569, 570, 571, 572, 573, 574, 575, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 612, 614, 629, 630, 634, 635, 637, 638, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 671, 732, 733, 734, 735, 736, 737, 768], "call": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 26, 29, 30, 31, 38, 61, 75, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 185, 186, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 228, 231, 232, 233, 234, 236, 237, 239, 240, 244, 245, 247, 248, 249, 252, 254, 255, 256, 303, 304, 305, 307, 308, 336, 402, 403, 406, 407, 414, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 465, 468, 469, 470, 471, 474, 475, 489, 502, 503, 520, 523, 524, 525, 529, 551, 552, 567, 596, 604, 605, 642, 644, 645, 646, 647, 648, 649, 650, 651, 735], "them": [1, 2, 3, 8, 17, 19, 20, 43, 77, 78, 96, 97, 98, 100, 113, 114, 115, 117, 118, 119, 120, 151, 159, 184, 243, 249, 255, 301, 403, 406, 465, 562, 729, 730, 731, 732, 735], "overridden": [1, 2, 3, 11, 17, 18, 19, 63, 113, 178, 247, 301, 458, 459, 581], "subclass": [1, 2, 3, 4, 7, 8, 11, 12, 19, 106, 107, 113, 249, 250, 251, 252, 255, 256, 300, 302, 303, 308, 309, 312, 317, 322, 327, 330, 335, 336, 402, 403, 407, 450, 454, 463, 474, 741], "main": [1, 2, 3, 4, 6, 19, 26, 31, 37, 104, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 249, 255, 256, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 465, 468, 469, 470, 471], "specifi": [1, 2, 8, 11, 12, 17, 19, 26, 30, 31, 39, 40, 41, 59, 60, 61, 62, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 114, 153, 154, 155, 156, 157, 158, 166, 175, 177, 178, 179, 180, 181, 186, 190, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 234, 240, 247, 248, 253, 255, 256, 295, 302, 303, 306, 307, 402, 407, 450, 469, 474, 476, 479, 480, 481, 482, 486, 489, 502, 524, 525, 527, 529, 536, 538, 551, 552, 556, 561, 568, 572, 578, 581, 595, 604, 605, 612, 630, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 730, 732, 733, 734], "help": [1, 6, 21, 30, 37, 66, 104, 106, 113, 114, 119, 226, 243, 473, 474, 476, 484, 521, 581, 603, 604], "both": [1, 3, 6, 7, 8, 11, 17, 18, 19, 43, 65, 66, 78, 79, 80, 109, 114, 234, 240, 302, 303, 304, 305, 306, 307, 308, 452, 458, 459, 467, 483, 524, 536, 538, 551, 553, 560, 564, 644, 655, 732, 733], "after": [1, 2, 13, 17, 113, 115, 118, 119, 120, 151, 159, 184, 186, 249, 252, 255, 450, 451, 453, 454, 455, 475, 489, 553, 554, 555, 557, 558, 567, 650, 655, 656], "itself": [1, 8, 60, 166, 255, 308, 402, 655, 732], "also": [1, 3, 4, 6, 7, 8, 9, 11, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 40, 41, 42, 43, 59, 62, 66, 75, 76, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 282, 300, 301, 302, 303, 304, 305, 306, 307, 308, 334, 336, 402, 403, 404, 405, 406, 407, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 478, 479, 480, 481, 483, 487, 489, 492, 494, 495, 496, 498, 501, 502, 506, 508, 509, 515, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 568, 569, 570, 571, 572, 573, 575, 576, 577, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 630, 633, 634, 635, 636, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 655, 656, 663, 729, 730, 731, 732, 733, 735, 736, 737, 768], "updat": [1, 3, 4, 6, 8, 11, 19, 26, 43, 59, 66, 167, 170, 171, 174, 186, 189, 197, 198, 199, 233, 249, 252, 255, 256, 290, 296, 301, 308, 314, 336, 339, 347, 350, 353, 354, 355, 357, 361, 362, 363, 364, 365, 374, 377, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 450, 451, 452, 454, 456, 457, 475, 489, 490, 498, 501, 502, 503, 525, 552, 570, 581, 599, 602, 627, 633, 635, 638, 652, 736, 737], "basic": [1, 243, 462], "dmc_class": [1, 18, 301, 450, 454, 458, 459, 461], "dm_converter_mpc2": [1, 3, 4, 245, 249, 252, 254, 256, 472, 753], "v2": [1, 17, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 515], "dm_class": [1, 18, 301, 450, 458, 459, 461], "data_model_opf": [1, 3, 245, 294, 472], "nm_class": [1, 18, 301, 450, 458, 459], "net_model_acp": [1, 8, 245, 472], "ac": [1, 6, 7, 9, 12, 18, 20, 43, 163, 247, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 354, 358, 359, 360, 361, 362, 364, 368, 369, 370, 371, 372, 377, 378, 380, 384, 386, 391, 392, 397, 398, 403, 404, 405, 407, 409, 410, 411, 415, 416, 417, 418, 421, 422, 425, 426, 427, 428, 429, 432, 433, 434, 439, 440, 441, 444, 445, 446, 453, 455, 458, 459, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 532, 581, 595, 603, 604, 608, 609, 610, 611, 617, 618, 620, 622, 624, 644, 648, 650, 651, 705, 707, 710, 717, 767, 769, 770], "polar": [1, 2, 7, 8, 18, 20, 302, 303, 305, 308, 312, 313, 314, 322, 323, 324, 325, 326, 333, 334, 340, 344, 345, 346, 352, 359, 362, 369, 372, 405, 407, 411, 416, 418, 422, 426, 429, 434, 441, 446, 458, 459, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 581, 597, 599, 600, 602, 761, 763], "mm_class": [1, 12, 18, 301, 450, 458, 459, 460, 461], "math_model_opf_acp": [1, 7, 17, 245, 323, 326, 472], "dmc": [1, 3, 4, 249, 252, 255, 450, 451, 453, 454], "build": [1, 2, 5, 6, 19, 20, 21, 66, 108, 111, 114, 202, 227, 249, 252, 255, 308, 319, 321, 324, 326, 328, 336, 402, 403, 406, 407, 409, 412, 420, 424, 427, 430, 432, 435, 436, 438, 439, 442, 444, 447, 448, 450, 451, 472, 474, 477, 568, 569, 570, 571, 572, 573, 574, 575, 581], "dm": [1, 3, 4, 7, 8, 12, 17, 19, 43, 249, 250, 251, 252, 253, 254, 255, 256, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 290, 292, 293, 294, 295, 296, 298, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 430, 432, 435, 436, 438, 439, 442, 444, 447, 448, 450, 451, 452, 453, 454, 455, 456, 466, 468, 469, 470, 471], "nm": [1, 7, 8, 12, 17, 19, 303, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 430, 432, 435, 436, 438, 439, 442, 444, 447, 448, 450, 451, 452, 453, 454, 455, 456], "mm": [1, 7, 8, 9, 12, 17, 19, 303, 308, 309, 312, 315, 336, 337, 341, 344, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 407, 450, 451, 452, 454, 455, 456, 474], "solve_opt": [1, 7, 308, 316, 327, 329, 335], "get": [1, 2, 4, 12, 14, 16, 17, 19, 37, 43, 61, 62, 104, 113, 114, 226, 243, 247, 248, 249, 255, 256, 302, 303, 304, 305, 306, 336, 402, 403, 404, 405, 407, 450, 454, 484, 554, 555, 558, 631, 770], "network_model_x_soln": [1, 7, 308, 450, 451, 455], "soln": [1, 17, 107, 108, 109, 110, 111, 112, 114, 191, 192, 403, 406, 407, 450, 491, 493, 497, 500, 505, 507, 627], "port_inj_soln": [1, 403, 406], "comput": [1, 6, 8, 12, 26, 66, 109, 114, 153, 154, 155, 156, 157, 158, 167, 175, 176, 178, 179, 180, 181, 247, 303, 304, 305, 306, 378, 403, 406, 474, 487, 495, 496, 499, 504, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 536, 553, 572, 573, 578, 581, 599, 602, 606, 608, 610, 617, 620, 622, 624, 631, 733, 734, 735], "data_model_upd": [1, 7, 19, 255, 308, 336], "four": [1, 2, 17, 20, 43, 114, 515, 516, 518, 742], "consist": [1, 2, 3, 8, 9, 11, 17, 19, 39, 43, 106, 108, 111, 114, 407, 452, 454, 456, 474, 479, 480, 481, 489, 523, 655], "hold": [1, 17, 19, 199, 300, 483], "That": [1, 7, 8, 12, 13, 17, 19, 20, 117, 166, 248, 253, 255, 256, 302, 303, 304, 305, 306, 308, 407, 463], "etc": [1, 3, 13, 17, 18, 19, 20, 24, 66, 74, 106, 113, 167, 175, 176, 177, 186, 249, 255, 302, 308, 450, 462, 483, 489, 523, 524, 551, 581, 612, 619, 644, 645, 646, 647, 648, 650, 651, 732], "associ": [1, 6, 7, 8, 18, 106, 535, 724], "valid": [1, 3, 61, 63, 64, 76, 107, 108, 109, 110, 111, 112, 113, 114, 162, 163, 164, 165, 166, 228, 246, 255, 256, 307, 336, 402, 407, 536, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 637, 638], "field": [1, 2, 4, 14, 16, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 231, 247, 254, 255, 256, 308, 336, 376, 383, 402, 407, 451, 454, 474, 475, 476, 483, 489, 490, 492, 494, 502, 506, 508, 521, 525, 526, 527, 534, 535, 536, 552, 559, 562, 574, 581, 591, 595, 596, 603, 604, 605, 636, 638, 639, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 655, 662, 729, 730, 731, 732, 733], "identifi": [1, 3, 17, 30, 106, 113, 114, 228, 249, 252, 253, 255, 402, 450, 476, 482, 483], "can": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 26, 31, 37, 42, 60, 62, 63, 64, 66, 77, 78, 79, 80, 96, 97, 98, 100, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 153, 154, 155, 156, 157, 158, 166, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 189, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 228, 234, 236, 243, 249, 255, 256, 300, 301, 303, 304, 306, 307, 308, 402, 407, 450, 462, 463, 466, 468, 469, 470, 471, 474, 475, 478, 483, 484, 489, 490, 502, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 524, 525, 526, 527, 528, 529, 533, 536, 551, 552, 556, 568, 570, 572, 575, 576, 580, 581, 604, 605, 608, 629, 631, 641, 642, 644, 645, 646, 647, 648, 650, 651, 732, 733, 735, 737, 739, 770], "befor": [1, 2, 3, 4, 7, 8, 17, 19, 106, 113, 114, 166, 186, 234, 240, 247, 249, 450, 452, 454, 456, 475, 489, 520, 551, 567, 653, 656], "its": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 21, 26, 43, 109, 110, 111, 113, 114, 167, 169, 171, 174, 178, 179, 180, 181, 186, 199, 249, 251, 252, 255, 256, 302, 336, 402, 404, 405, 406, 407, 465, 468, 469, 470, 471, 492, 508, 537, 556, 644], "simpli": [1, 2, 3, 4, 6, 8, 9, 11, 17, 18, 20, 62, 108, 111, 114, 256, 305, 308, 474, 523, 525, 526, 527, 552, 608], "loop": [1, 3, 4, 7, 8, 186, 450, 489, 576, 577], "possibli": [1, 4, 17, 19, 31, 106, 108, 109, 110, 111, 112, 114, 116, 153, 154, 155, 156, 157, 158, 189, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 252, 402, 407, 526, 637, 638, 652], "access": [1, 6, 8, 18, 20, 21, 114, 227, 247, 248, 256, 462, 463, 474], "respect": [1, 3, 4, 7, 8, 9, 11, 17, 19, 20, 26, 30, 31, 108, 114, 153, 154, 155, 156, 157, 158, 165, 178, 179, 180, 181, 192, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 255, 303, 402, 450, 478, 483, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 524, 527, 528, 533, 536, 538, 551, 573, 574, 575, 581, 637, 638, 654, 730, 732, 737], "nme": [1, 8, 17, 302, 303, 304, 305, 306, 336, 349, 351, 368, 370, 371, 407, 414], "pull": [1, 17], "dme": [1, 3, 4, 12, 17, 19, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 336, 377, 407], "describ": [1, 2, 3, 6, 7, 12, 17, 18, 19, 20, 26, 31, 43, 62, 106, 109, 110, 113, 114, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 407, 449, 474, 483, 524, 551, 604, 644], "more": [1, 3, 6, 7, 8, 9, 12, 17, 19, 40, 41, 43, 106, 108, 109, 112, 113, 114, 155, 199, 205, 207, 210, 245, 247, 249, 252, 255, 256, 300, 301, 302, 303, 304, 305, 306, 308, 336, 402, 407, 450, 454, 458, 459, 460, 461, 462, 475, 476, 501, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 604, 605, 629, 641, 644, 645, 646, 647, 648, 650, 651, 735, 769], "detail": [1, 3, 4, 8, 9, 17, 19, 20, 21, 26, 30, 31, 36, 42, 43, 44, 45, 59, 60, 62, 66, 74, 81, 82, 83, 84, 102, 106, 109, 110, 113, 114, 115, 118, 120, 151, 153, 155, 158, 159, 171, 178, 180, 186, 187, 188, 190, 197, 199, 203, 205, 207, 210, 211, 225, 238, 242, 243, 245, 248, 249, 252, 255, 256, 301, 302, 303, 304, 305, 306, 308, 402, 407, 458, 459, 460, 461, 474, 482, 483, 484, 489, 492, 494, 498, 501, 502, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 528, 532, 533, 535, 576, 581, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 631, 633, 644, 645, 647, 648, 651, 658, 662, 663, 664, 665, 666, 667, 668, 737, 750, 768], "summari": [1, 3, 17, 18, 20, 74, 79, 80, 96, 97, 98, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 232, 233, 238, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 290, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 427, 430, 431, 432, 435, 436, 437, 438, 439, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 474, 485, 581, 595], "inherit": [1, 2, 3, 4, 7, 8, 17, 18, 19, 248, 255, 256, 302, 303, 304, 305, 306, 308, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 402, 404, 405, 406, 407, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422, 425, 426, 428, 429, 430, 433, 434, 436, 438, 440, 441, 442, 445, 446, 447, 448, 450, 451, 454, 458, 459, 463, 738], "repres": [1, 6, 8, 12, 17, 20, 42, 60, 106, 114, 303, 402, 407, 535, 536, 560, 566, 581, 604, 605], "abstract": [1, 7, 17, 19, 107, 113, 252, 255, 256, 301, 302, 303, 308, 309, 312, 315, 316, 317, 322, 329, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 356, 360, 366, 367, 370, 373, 376, 382, 383, 390, 396, 402, 403, 407, 408, 409, 413, 414, 420, 423, 424, 427, 431, 432, 437, 439, 443, 444, 450], "displai": [1, 3, 17, 19, 26, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 234, 236, 237, 239, 240, 249, 252, 255, 271, 307, 308, 402, 407, 450, 462, 463, 465, 474, 484, 632, 633, 635, 636, 638, 639], "border": 1, "concret": [1, 3, 7, 8, 17, 19, 249, 252, 256, 302, 303, 304, 305, 306, 308, 402, 404, 405, 406], "doubl": [1, 26, 30, 31, 43, 62, 108, 109, 110, 111, 112, 116, 117, 228, 236, 247, 249, 256, 271, 272, 273, 274, 276, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 303, 304, 305, 306, 308, 378, 402, 403, 404, 405, 406, 407, 450, 455, 528, 568, 637, 638, 737], "signific": [1, 108, 114, 527], "portion": [1, 4, 20, 255, 303, 574, 604, 736, 748, 749], "implement": [1, 2, 3, 4, 6, 7, 8, 11, 14, 16, 17, 18, 19, 22, 23, 24, 25, 38, 42, 105, 106, 107, 109, 110, 113, 114, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163, 166, 170, 181, 186, 199, 208, 226, 229, 230, 243, 244, 247, 248, 249, 252, 253, 255, 256, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298, 300, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 325, 327, 329, 331, 332, 333, 334, 335, 336, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 407, 408, 409, 410, 412, 413, 414, 420, 423, 424, 431, 436, 437, 438, 443, 448, 450, 451, 452, 453, 454, 455, 456, 462, 467, 474, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 565, 581, 604, 629, 649, 712, 716, 729, 730, 731, 732], "greatli": 1, "reduc": [1, 7, 26, 570, 581], "effort": 1, "involv": [1, 2, 7, 8, 17, 19], "distinguish": [1, 186, 489], "pss": [1, 4, 252, 632, 633, 634, 635, 636, 637, 638, 639, 652], "raw": [1, 4, 202, 252, 454, 521, 581, 595, 603, 604, 612, 632, 633, 634, 635, 636, 637, 638, 639, 652], "dc": [1, 7, 9, 18, 43, 55, 66, 68, 69, 70, 71, 95, 160, 165, 247, 248, 254, 263, 282, 283, 284, 302, 306, 308, 327, 328, 335, 337, 347, 353, 355, 363, 365, 379, 381, 382, 383, 384, 385, 386, 387, 393, 399, 406, 412, 419, 430, 431, 432, 433, 434, 435, 442, 447, 453, 455, 459, 472, 520, 521, 522, 527, 535, 569, 571, 572, 581, 595, 604, 634, 645, 646, 647, 663, 675, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718, 729, 730, 732, 756], "cartesian": [1, 2, 7, 8, 18, 21, 302, 303, 304, 309, 310, 311, 317, 318, 319, 320, 321, 331, 332, 340, 341, 342, 343, 351, 358, 361, 368, 371, 404, 410, 415, 417, 418, 421, 425, 428, 433, 440, 445, 458, 459, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 581, 598, 599, 600, 601, 602, 606, 607, 760, 762], "goe": [1, 106, 113], "which": [1, 2, 3, 4, 6, 7, 8, 12, 13, 17, 18, 19, 21, 26, 30, 40, 41, 42, 59, 60, 62, 63, 64, 79, 80, 108, 109, 113, 114, 138, 153, 154, 155, 156, 157, 158, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 234, 240, 246, 250, 255, 300, 302, 303, 306, 308, 336, 402, 403, 407, 467, 474, 475, 476, 483, 484, 489, 492, 498, 501, 502, 508, 523, 524, 526, 527, 528, 529, 533, 535, 537, 538, 551, 560, 575, 581, 595, 597, 598, 599, 600, 601, 602, 604, 605, 608, 630, 631, 637, 638, 644, 645, 646, 647, 648, 649, 650, 651, 653, 655, 656, 732, 733, 737, 770], "element_contain": [1, 2, 3, 4, 7, 8, 245, 249, 252, 308, 402, 472], "mixin": [1, 294, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 472], "share": [1, 3, 5, 6, 8, 17, 19, 294, 308, 331, 332, 333, 334, 340, 457, 535], "mention": [1, 11, 12, 463, 732], "abov": [1, 2, 11, 12, 13, 17, 19, 20, 26, 31, 42, 43, 63, 106, 113, 114, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 174, 178, 179, 180, 181, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 228, 244, 247, 463, 483, 538, 553, 554, 555, 557, 558, 564, 581, 595, 732, 733], "address": [1, 166, 463], "index": [1, 3, 4, 8, 9, 12, 13, 17, 19, 30, 59, 62, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 189, 190, 199, 247, 249, 255, 256, 271, 277, 279, 280, 283, 285, 287, 288, 292, 295, 298, 304, 307, 308, 378, 402, 403, 404, 405, 407, 462, 463, 474, 475, 476, 477, 479, 480, 481, 483, 489, 490, 523, 524, 525, 526, 527, 537, 551, 552, 553, 554, 555, 556, 557, 558, 567, 581, 597, 598, 599, 600, 601, 602, 612, 619, 620, 621, 622, 623, 626, 636, 638, 639, 644, 655, 656, 730, 732, 733], "suppli": [1, 26, 31, 79, 80, 106, 108, 109, 110, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 475, 524, 551, 561, 572, 581, 595, 631], "properti": [1, 2, 4, 6, 7, 8, 17, 19, 106, 107, 108, 109, 111, 112, 113, 114, 246, 249, 252, 255, 262, 265, 266, 269, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 294, 295, 298, 300, 302, 303, 306, 308, 376, 383, 402, 403, 404, 405, 406, 407, 449, 450, 451, 452, 453, 454, 455, 456, 463, 473, 474], "element_class": [1, 2, 3, 4, 7, 8, 17, 19, 249, 252, 300], "sometim": [1, 3, 7, 108, 308], "certain": [1, 4, 8, 11, 30, 451], "across": [1, 7, 8, 42, 60, 62, 308, 368, 369, 371, 372, 457, 478, 564, 730], "wai": [1, 2, 6, 12, 17, 115, 118, 119, 120, 151, 159, 160, 184, 301, 462, 581, 604, 605, 729], "match": [1, 2, 4, 42, 60, 61, 66, 114, 153, 154, 155, 156, 157, 158, 175, 177, 234, 236, 238, 240, 243, 255, 307, 368, 369, 371, 372, 525, 552, 561, 627, 743, 744, 745, 746, 748, 749], "path": [1, 13, 14, 15, 16, 61, 77, 78, 79, 80, 234, 243, 302, 464, 465, 529, 577], "current": [1, 2, 7, 9, 14, 16, 19, 20, 21, 26, 29, 30, 43, 74, 75, 77, 78, 79, 80, 110, 114, 121, 151, 152, 159, 161, 171, 181, 185, 186, 188, 189, 191, 192, 194, 195, 196, 199, 231, 271, 287, 303, 304, 305, 307, 310, 313, 316, 318, 319, 323, 324, 331, 333, 340, 342, 345, 367, 375, 389, 401, 402, 403, 450, 452, 454, 455, 456, 457, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 479, 483, 488, 489, 490, 491, 493, 495, 496, 497, 499, 500, 504, 505, 506, 507, 509, 510, 511, 512, 515, 516, 517, 529, 560, 574, 575, 576, 577, 581, 595, 596, 598, 599, 600, 608, 610, 611, 632, 652, 770], "approach": [1, 2, 17, 465], "util": [1, 21, 114, 226, 472], "first": [1, 2, 3, 4, 7, 8, 12, 17, 19, 26, 31, 43, 61, 62, 63, 64, 77, 78, 79, 80, 111, 114, 116, 151, 156, 162, 163, 165, 180, 193, 197, 200, 208, 228, 247, 301, 307, 402, 407, 462, 465, 468, 470, 471, 483, 489, 502, 509, 526, 527, 529, 562, 573, 604, 605, 629, 630, 636, 639, 644, 650, 655, 730], "we": [1, 3, 6, 8, 12, 13, 17, 18, 19, 106, 113, 114, 117, 243, 484, 577], "wrap": 1, "insid": [1, 300, 463], "inher": 1, "limit": [1, 3, 7, 11, 12, 17, 18, 19, 26, 31, 43, 74, 114, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 187, 191, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 249, 271, 272, 276, 282, 284, 303, 304, 312, 349, 360, 361, 378, 410, 451, 453, 455, 461, 489, 491, 492, 497, 498, 500, 501, 507, 508, 553, 554, 557, 558, 564, 581, 595, 604, 605, 608, 609, 644, 649, 650, 662, 712, 730, 731, 732, 735, 736], "order": [1, 2, 7, 11, 17, 19, 26, 30, 31, 42, 43, 60, 61, 62, 81, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 159, 180, 184, 197, 247, 300, 302, 407, 454, 474, 475, 479, 480, 481, 483, 502, 521, 524, 525, 526, 527, 551, 552, 555, 559, 568, 569, 570, 572, 575, 581, 595, 603, 604, 626, 644, 645, 646, 647, 648, 650, 651], "backward": [1, 20, 62, 115, 118, 120, 151, 159, 526, 559, 568, 577, 581, 604, 605, 641, 733], "compat": [1, 20, 62, 115, 118, 120, 151, 159, 454, 462, 467, 526, 559, 568, 581, 604, 605, 645, 646, 647, 648, 650, 651, 733, 770], "mechan": [1, 6, 18, 337, 729], "intern": [1, 3, 6, 17, 19, 62, 109, 113, 114, 166, 402, 407, 474, 475, 477, 483, 489, 521, 523, 524, 525, 526, 535, 551, 552, 559, 568, 569, 570, 572, 575, 603, 604, 612, 619, 641, 644, 645, 646, 647, 648, 650, 651, 670, 770], "all": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 26, 29, 31, 36, 42, 43, 60, 62, 63, 64, 65, 75, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 185, 186, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 228, 231, 236, 238, 242, 243, 246, 247, 249, 255, 256, 262, 271, 277, 279, 280, 283, 285, 287, 288, 294, 295, 298, 302, 303, 304, 305, 306, 308, 336, 338, 339, 340, 341, 344, 378, 402, 403, 404, 405, 406, 407, 450, 461, 465, 474, 475, 476, 478, 489, 492, 498, 502, 508, 510, 515, 516, 517, 518, 519, 522, 526, 527, 528, 533, 554, 556, 558, 559, 561, 562, 563, 567, 570, 575, 577, 581, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 608, 609, 612, 619, 634, 635, 638, 641, 644, 645, 646, 647, 648, 650, 651, 655, 732, 733, 737, 768], "even": [1, 2, 20, 21, 42, 43, 79, 80, 155, 186, 205, 207, 210, 489, 581, 595], "importantli": 1, "extens": [1, 5, 11, 14, 16, 17, 20, 21, 61, 228, 252, 319, 321, 324, 326, 328, 450, 458, 459, 460, 461, 466, 468, 469, 470, 471, 472, 546, 562, 652, 653, 654, 675, 729, 756, 757, 770], "suit": [1, 243], "second": [1, 3, 4, 7, 8, 12, 17, 18, 19, 20, 43, 63, 64, 79, 80, 111, 115, 118, 119, 120, 151, 159, 184, 204, 209, 228, 243, 307, 407, 450, 468, 482, 486, 527, 531, 604, 629, 631, 644, 645, 646, 647, 648, 650, 651], "abl": [1, 42, 250, 465, 483], "make": [1, 7, 8, 13, 18, 19, 21, 59, 106, 113, 114, 228, 247, 249, 252, 285, 402, 407, 457, 465, 473, 483, 567], "full": [1, 7, 8, 12, 30, 42, 106, 107, 108, 109, 110, 111, 112, 113, 114, 166, 171, 188, 192, 199, 238, 302, 303, 304, 306, 337, 378, 402, 403, 407, 474, 487, 506, 522, 528, 533, 570, 572, 575, 581, 597, 598, 599, 600, 601, 602, 605, 644, 650, 737, 770], "scope": 1, "end": [1, 2, 8, 9, 12, 17, 18, 19, 26, 43, 66, 78, 106, 108, 109, 110, 111, 112, 113, 114, 167, 169, 171, 172, 173, 174, 178, 179, 180, 181, 193, 199, 200, 228, 234, 238, 243, 255, 271, 272, 283, 284, 285, 298, 303, 306, 307, 308, 450, 462, 463, 474, 475, 478, 483, 486, 489, 515, 516, 518, 534, 535, 536, 553, 555, 557, 569, 604, 608, 609, 636, 637, 638, 639, 644, 645, 646, 647, 648, 650, 651, 653, 654], "take": [1, 4, 7, 8, 9, 12, 17, 18, 19, 43, 62, 108, 109, 110, 111, 114, 186, 197, 198, 228, 308, 403, 406, 476, 489, 502, 509, 510, 511, 512, 513, 514, 516, 517, 529, 553, 556, 557, 561, 568, 580, 733], "advantag": [1, 17, 19], "capabl": [1, 19, 38, 227, 244, 279, 377, 378, 460, 483, 538, 558, 565, 604, 736], "add": [1, 2, 3, 4, 6, 7, 8, 13, 17, 18, 19, 21, 30, 39, 40, 41, 42, 59, 60, 106, 107, 108, 109, 110, 111, 112, 113, 114, 186, 243, 245, 249, 251, 252, 254, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 307, 308, 336, 337, 376, 383, 402, 403, 404, 405, 406, 407, 415, 416, 417, 418, 419, 420, 424, 427, 430, 432, 435, 451, 452, 453, 454, 456, 458, 459, 461, 465, 474, 475, 476, 489, 556, 732], "multiphas": 1, "unbalanc": [1, 2, 3, 20, 249, 301, 458, 742], "hybrid": [1, 20, 581, 599, 602, 743, 744, 745, 746, 747, 748, 749, 766], "own": [1, 2, 3, 4, 6, 7, 8, 21, 169, 171, 186, 197, 198, 243, 244, 249, 255, 256, 336, 407, 489, 502, 527], "version": [1, 4, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 37, 38, 43, 75, 104, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 160, 161, 185, 186, 226, 228, 229, 230, 231, 243, 244, 247, 250, 252, 253, 302, 450, 465, 472, 483, 489, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 562, 568, 570, 581, 595, 596, 633, 645, 646, 647, 648, 650, 651, 653, 733, 742, 770], "run_pf": [1, 2, 17, 18, 20, 464, 466, 469, 472, 766], "run_cpf": [1, 2, 17, 18, 20, 464, 466, 469, 472, 766], "run_opf": [1, 2, 12, 17, 18, 20, 464, 466, 469, 472, 766, 767, 770], "underscor": [1, 770], "One": [1, 8, 743, 744, 745, 746], "differ": [1, 2, 4, 7, 17, 19, 20, 26, 31, 42, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 186, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 234, 236, 255, 271, 272, 308, 349, 351, 352, 353, 410, 457, 462, 475, 478, 483, 485, 489, 525, 553, 564, 576, 581, 595, 606, 607, 733], "remov": [1, 3, 13, 17, 19, 43, 249, 300, 465, 526, 530, 559, 568, 571, 581, 642, 732, 733], "offlin": [1, 3, 7, 17, 19, 249, 255, 336, 567], "equip": [1, 612, 619], "renumb": [1, 526], "buse": [1, 2, 3, 4, 8, 17, 18, 19, 20, 43, 60, 74, 249, 255, 273, 274, 279, 280, 283, 357, 361, 362, 363, 364, 365, 476, 477, 479, 480, 481, 482, 487, 489, 495, 496, 499, 501, 504, 515, 516, 517, 518, 519, 522, 526, 527, 528, 531, 533, 551, 554, 559, 564, 572, 575, 576, 577, 581, 597, 598, 599, 600, 601, 602, 620, 621, 622, 623, 626, 635, 644, 655, 732, 733, 737, 743, 744, 745, 746, 747, 748, 749], "consecut": [1, 4, 17, 62, 477, 526, 559, 568, 569, 570, 572, 575], "ext2int": [1, 472, 475, 521, 524, 525, 552, 559, 570, 575, 603, 604, 619, 669, 670, 676, 738], "int2ext": [1, 472, 475, 526, 551, 552, 669, 670, 676, 729, 730, 731, 732, 738], "result": [1, 2, 3, 8, 11, 59, 74, 77, 78, 105, 106, 108, 109, 110, 111, 112, 113, 114, 157, 175, 177, 186, 189, 209, 210, 232, 233, 234, 236, 237, 240, 243, 249, 252, 303, 308, 402, 403, 450, 452, 454, 456, 463, 465, 466, 468, 469, 470, 471, 475, 483, 484, 489, 490, 492, 494, 498, 501, 506, 508, 521, 527, 536, 561, 567, 571, 581, 595, 603, 604, 605, 612, 631, 632, 641, 644, 645, 646, 647, 648, 649, 650, 651, 673, 674, 729, 730, 731, 732, 735], "callback": [1, 2, 186, 187, 188, 189, 197, 199, 312, 454, 472, 475, 483, 489, 490, 491, 492, 493, 494, 497, 498, 500, 501, 502, 505, 506, 507, 508, 526, 581, 642, 643, 644, 673, 674, 712, 716, 724, 729, 730, 731, 732], "necessari": [1, 3, 7, 17, 112, 114, 249, 255, 336, 455, 483, 498, 501, 653, 654], "so": [1, 2, 3, 4, 7, 8, 12, 13, 17, 18, 20, 21, 26, 59, 166, 243, 246, 248, 256, 407, 458, 459, 463, 484, 630, 655], "motiv": 1, "behind": [1, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519], "facilit": [1, 21], "who": [1, 6, 107, 108, 109, 112, 234], "want": [1, 6, 17, 77, 78, 79, 80, 159, 570], "possibl": [1, 3, 19, 30, 43, 60, 77, 78, 79, 113, 580, 604, 605, 637, 644, 655, 732, 735], "overrid": [1, 2, 11, 12, 17, 18, 19, 106, 114, 115, 118, 119, 120, 151, 153, 154, 155, 157, 158, 159, 169, 178, 179, 180, 184, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 290, 296, 335, 351, 450, 462, 573, 581, 595, 641, 644, 645, 646, 647, 648, 650, 651, 691, 732], "behavior": [1, 2, 76, 166, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 655, 732], "complet": [1, 3, 7, 11, 12, 17, 18, 19, 21, 60, 108, 109, 112, 114, 174, 192, 199, 249, 450, 476, 505, 526, 559, 581, 732, 770], "often": [1, 9, 74], "see": [1, 2, 3, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 40, 41, 42, 43, 44, 45, 59, 60, 62, 66, 74, 75, 76, 81, 82, 83, 84, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 225, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 282, 300, 301, 302, 303, 304, 305, 306, 307, 308, 336, 402, 403, 404, 405, 406, 407, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 478, 479, 480, 481, 483, 484, 487, 489, 492, 494, 495, 496, 498, 501, 502, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 568, 569, 570, 571, 572, 573, 575, 576, 577, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 633, 634, 635, 636, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 655, 656, 658, 662, 663, 664, 665, 666, 667, 668, 729, 730, 731, 732, 733, 735, 736, 737, 738, 750, 768, 770], "essenti": [1, 3, 19, 301, 402], "modif": [1, 2, 6, 12, 60, 81, 301, 450, 556, 732], "addit": [1, 2, 3, 8, 12, 17, 18, 19, 20, 21, 30, 39, 42, 43, 62, 64, 105, 106, 109, 113, 249, 255, 301, 402, 466, 468, 469, 470, 471, 475, 476, 483, 521, 524, 525, 527, 535, 538, 551, 552, 554, 555, 556, 565, 603, 604, 605, 635, 643, 645, 647, 648, 649, 651, 663, 735, 770], "made": [1, 3, 58, 60, 62, 108, 109, 110, 111, 114, 228, 526, 556], "default": [1, 3, 4, 5, 6, 11, 12, 17, 18, 19, 26, 30, 31, 36, 40, 41, 61, 62, 63, 64, 66, 76, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 177, 178, 179, 180, 181, 184, 186, 190, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 232, 234, 238, 242, 247, 249, 250, 251, 255, 256, 301, 303, 306, 309, 312, 335, 336, 402, 403, 404, 405, 406, 407, 450, 451, 453, 455, 462, 465, 466, 469, 474, 483, 484, 489, 502, 524, 528, 533, 551, 558, 561, 563, 572, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 604, 605, 631, 632, 633, 635, 636, 638, 639, 641, 644, 645, 646, 647, 648, 650, 651, 655, 696, 705, 732, 733, 737, 767, 768, 770], "henc": [1, 43], "earli": 1, "cycl": [1, 7, 535], "should": [1, 6, 11, 13, 17, 19, 61, 109, 110, 114, 160, 162, 163, 165, 175, 177, 186, 243, 249, 255, 308, 407, 475, 484, 489, 525, 527, 552, 567, 572, 595, 604, 605, 620, 621, 622, 623, 655, 743, 744, 745, 746, 748, 749], "execut": [1, 5, 115, 118, 119, 120, 151, 159, 184, 197, 232, 450, 465, 502, 612, 643], "successfulli": [1, 521, 603, 604], "command": [1, 6, 21, 37, 104, 113, 114, 226, 243, 464, 465, 474, 770], "without": [1, 3, 4, 6, 7, 8, 9, 29, 43, 75, 107, 108, 109, 110, 111, 112, 113, 114, 121, 152, 161, 185, 231, 255, 489, 527, 596], "With": [2, 29, 43, 75, 108, 111, 114, 115, 118, 119, 120, 121, 151, 152, 159, 161, 184, 185, 231, 465, 474, 483, 573, 596, 732], "object": [2, 5, 6, 12, 17, 18, 19, 25, 26, 31, 66, 74, 106, 107, 108, 109, 110, 111, 112, 113, 114, 153, 154, 155, 156, 157, 158, 175, 176, 177, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 249, 250, 251, 252, 255, 256, 272, 276, 282, 284, 292, 293, 294, 300, 301, 302, 303, 307, 308, 309, 312, 315, 316, 317, 322, 329, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 402, 403, 404, 405, 406, 407, 450, 452, 453, 454, 456, 457, 462, 463, 466, 468, 469, 470, 471, 474, 475, 521, 553, 554, 557, 558, 603, 604, 612, 619, 631, 735], "architectur": [2, 5], "outlin": [2, 3], "section": [2, 3, 6, 7, 8, 9, 12, 17, 18, 19, 115, 118, 120, 151, 156, 238, 243, 249, 251, 252, 255, 256, 272, 275, 276, 278, 281, 282, 284, 285, 286, 289, 291, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 336, 402, 407, 450, 458, 459, 460, 461, 581, 632, 636, 638, 639, 738, 770], "customiz": 2, "increas": [2, 43, 199, 504], "dramat": 2, "ones": [2, 9, 17, 19, 474, 509, 513, 516, 517, 518, 519, 581], "import": [2, 3, 6, 19, 43, 249, 252, 253, 256, 264, 267], "understand": [2, 6], "how": [2, 3, 4, 8, 19, 60, 113, 166, 243, 245, 255, 465, 475, 572, 637, 638], "select": [2, 9, 18, 30, 43, 114, 160, 162, 163, 164, 165, 171, 302, 303, 304, 306, 403, 404, 405, 407, 451, 453, 455, 465, 487, 572, 644, 735], "instanti": [2, 3, 4, 7, 8, 249, 252, 450], "There": [2, 3, 8, 11, 12, 17, 42, 108, 115, 118, 119, 120, 151, 159, 184, 243, 465, 483], "sever": [2, 6, 17, 243, 483, 525], "below": [2, 3, 12, 17, 19, 20, 37, 59, 62, 63, 64, 104, 108, 109, 110, 112, 114, 178, 199, 226, 463, 474, 483, 489, 509, 515, 523, 524, 538, 551, 553, 554, 555, 557, 558, 564, 565, 604, 605, 735], "illustr": [2, 4, 7, 8, 11, 19, 113, 475], "invok": [2, 7, 186, 489, 502, 526], "fact": [2, 17, 19], "simpl": [2, 3, 7, 8, 17, 20, 66, 79, 80, 106, 109, 114, 468, 470, 471, 520, 631, 729, 765], "wrapper": [2, 6, 31, 38, 153, 154, 155, 156, 157, 158, 169, 171, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 468, 469, 470, 471, 472, 520], "run_mp": [2, 6, 464, 468, 470, 471, 472, 765], "onli": [2, 4, 7, 8, 12, 13, 17, 18, 21, 58, 59, 64, 106, 108, 109, 110, 111, 113, 114, 115, 118, 120, 151, 153, 154, 155, 156, 157, 158, 159, 166, 186, 190, 199, 208, 232, 234, 240, 243, 255, 256, 307, 336, 402, 407, 452, 454, 456, 458, 459, 462, 463, 473, 489, 509, 526, 535, 536, 538, 556, 559, 572, 573, 581, 595, 604, 605, 608, 609, 629, 630, 655, 733], "valu": [2, 3, 7, 8, 18, 19, 26, 29, 30, 31, 42, 45, 58, 59, 60, 61, 62, 63, 64, 66, 74, 75, 76, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 191, 192, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 231, 236, 246, 247, 249, 255, 256, 271, 285, 290, 296, 302, 307, 308, 402, 403, 407, 450, 452, 453, 454, 456, 457, 465, 474, 475, 476, 477, 483, 484, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 517, 519, 521, 524, 525, 527, 530, 531, 534, 535, 538, 551, 552, 554, 555, 556, 561, 568, 570, 573, 575, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 603, 604, 605, 608, 610, 617, 631, 644, 650, 655, 732, 733, 734, 735, 736], "task_class": [2, 301, 466, 469], "argument": [2, 3, 4, 7, 8, 18, 26, 29, 31, 61, 63, 64, 66, 75, 76, 77, 78, 79, 107, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 185, 186, 187, 188, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 231, 234, 240, 255, 256, 307, 462, 465, 468, 470, 471, 474, 475, 482, 489, 492, 494, 498, 501, 502, 506, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 524, 525, 526, 527, 529, 532, 538, 544, 551, 552, 567, 570, 571, 573, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 604, 605, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 735], "handl": [2, 4, 7, 8, 17, 19, 26, 77, 78, 79, 80, 106, 107, 109, 110, 113, 114, 154, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 187, 188, 197, 198, 199, 204, 226, 251, 253, 254, 255, 256, 294, 300, 301, 302, 303, 307, 312, 319, 321, 324, 326, 328, 336, 337, 338, 340, 407, 450, 451, 455, 457, 461, 465, 466, 467, 469, 483, 484, 487, 489, 492, 494, 498, 501, 504, 506, 508, 509, 527, 572, 595, 597, 598, 599, 600, 601, 602, 642], "constructor": [2, 3, 4, 7, 8, 17, 106, 107, 108, 109, 110, 111, 112, 113, 114, 247, 249, 250, 251, 253, 300, 301, 307, 309, 312, 317, 319, 321, 322, 324, 326, 327, 328, 330, 335, 404, 405, 406, 449, 450, 451, 453, 455, 462, 466, 467, 469, 474], "pass": [2, 3, 4, 7, 8, 11, 12, 15, 17, 18, 20, 26, 61, 63, 64, 115, 118, 119, 120, 151, 159, 166, 169, 174, 178, 179, 180, 181, 184, 186, 199, 228, 234, 236, 237, 238, 240, 243, 255, 308, 450, 460, 462, 466, 475, 489, 502, 524, 525, 526, 529, 551, 552, 581, 604, 605, 637, 770], "mean": [2, 3, 17, 19, 20, 42, 60, 108, 113, 114, 169, 171, 199, 287, 295, 407, 523, 553, 554, 555, 556, 557, 558, 581, 604, 605], "either": [2, 3, 6, 8, 17, 26, 42, 61, 66, 106, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 151, 156, 159, 184, 188, 208, 249, 308, 402, 463, 515, 525, 527, 538, 552, 562, 568, 581, 604, 605, 631, 637, 644, 645, 646, 647, 648, 650, 651, 653, 655, 733, 735], "two": [2, 3, 4, 5, 6, 7, 8, 12, 17, 19, 43, 79, 80, 109, 110, 111, 114, 165, 234, 236, 240, 249, 255, 307, 461, 463, 465, 468, 481, 483, 485, 517, 519, 526, 535, 538, 559, 568, 573, 577, 630, 634, 635, 636, 638, 738], "descript": [2, 3, 4, 6, 8, 12, 17, 19, 20, 21, 30, 74, 113, 114, 199, 228, 247, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 475, 476, 535, 581, 595, 644, 649], "dm_converter_class": [2, 301, 450, 451], "final": [2, 17, 19, 20, 26, 31, 60, 66, 106, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 252, 402, 450, 489, 521, 524, 527, 528, 533, 551, 597, 598, 599, 600, 601, 602, 603, 604, 733, 737], "data_model_class": [2, 301, 450], "network_model_class": [2, 301, 450], "math_model_class": [2, 301, 450], "dm_converter_class_mpc2_default": [2, 450, 454], "data_model_class_default": [2, 450, 451, 453], "network_model_class_default": [2, 450, 453, 455], "math_model_class_default": [2, 450, 451, 453, 454, 455], "tabl": [2, 4, 6, 12, 13, 18, 19, 20, 39, 40, 41, 42, 54, 55, 56, 57, 60, 62, 63, 64, 247, 248, 249, 255, 256, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 300, 301, 307, 452, 454, 456, 458, 459, 460, 461, 462, 463, 467, 476, 523, 535, 549, 556, 654, 671, 755], "last": [2, 7, 108, 114, 186, 194, 195, 196, 199, 301, 402, 462, 463, 489, 567, 630, 636, 639, 642], "cell": [2, 3, 4, 11, 12, 13, 14, 16, 17, 39, 42, 61, 62, 63, 64, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 166, 168, 186, 189, 197, 198, 199, 234, 238, 240, 247, 249, 255, 256, 285, 300, 301, 302, 303, 304, 305, 306, 307, 308, 378, 402, 407, 450, 462, 466, 468, 469, 470, 471, 474, 484, 486, 489, 490, 502, 524, 525, 527, 530, 531, 534, 535, 551, 552, 581, 613, 614, 632, 633, 635, 636, 637, 638, 639, 653, 654, 656], "arrai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 39, 42, 60, 61, 62, 63, 64, 75, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 152, 161, 166, 167, 168, 170, 172, 173, 174, 185, 186, 189, 190, 193, 197, 198, 199, 200, 228, 231, 234, 236, 237, 238, 239, 240, 247, 249, 252, 253, 255, 256, 285, 300, 301, 302, 303, 304, 305, 306, 307, 308, 336, 378, 402, 407, 450, 462, 466, 468, 469, 470, 471, 474, 484, 486, 489, 490, 502, 524, 525, 527, 530, 531, 534, 535, 551, 552, 581, 596, 613, 614, 632, 633, 635, 636, 637, 638, 639, 644, 653, 654, 656], "popul": [2, 17, 19, 454, 475, 643], "parent": [2, 12, 17, 19, 166, 255, 272, 275, 276, 278, 281, 282, 284, 286, 289, 290, 291, 296, 297, 299, 302, 403, 406, 407, 452, 454, 456], "runtim": [2, 204, 209], "done": [2, 3, 7, 8, 17, 19, 81, 166, 186, 187, 188, 248, 463, 489, 492, 494, 498, 501, 506, 508, 629, 673, 674], "delet": [2, 13, 234, 307], "replac": [2, 17, 19, 60, 79, 80, 113, 114, 234, 240, 300, 460, 476, 489, 556, 571, 581, 732], "entri": [2, 3, 4, 17, 42, 60, 106, 113, 190, 255, 256, 300, 308, 402, 637, 638], "action": [2, 11], "new_class": 2, "append": [2, 39, 40, 41, 59, 115, 118, 120, 151, 159, 251, 255, 300, 307, 475, 644, 645, 646, 647, 648, 650, 651], "old_class": 2, "isa": [2, 300], "true": [2, 17, 30, 36, 66, 77, 78, 102, 106, 107, 108, 109, 112, 113, 114, 186, 189, 225, 228, 232, 234, 236, 237, 238, 239, 240, 242, 246, 247, 249, 255, 256, 273, 274, 300, 307, 402, 407, 453, 455, 462, 463, 465, 475, 489, 538, 570, 571, 604, 631, 644, 650, 655, 732, 733, 735, 768], "typic": [2, 3, 4, 7, 8, 11, 17, 19, 249, 255, 256, 336, 407, 469, 475, 553, 554, 557, 558, 638, 639], "multipl": [2, 115, 118, 119, 120, 151, 159, 184, 197, 199, 227, 255, 407, 463, 465, 476, 489, 502, 524, 530, 551, 581, 595], "sequenti": [2, 3, 7, 8, 11, 234, 240], "modify_element_class": [2, 300], "previous": [2, 66, 114], "avail": [2, 10, 17, 19, 21, 22, 23, 24, 25, 26, 37, 104, 107, 114, 115, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 159, 165, 208, 226, 228, 229, 230, 244, 247, 292, 403, 450, 451, 457, 463, 465, 467, 468, 469, 470, 471, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 529, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 581, 595, 604, 639, 655, 769, 770], "affect": [2, 12, 42, 60, 463, 465, 556, 732], "v": [2, 8, 9, 29, 45, 75, 76, 106, 108, 109, 110, 111, 112, 114, 121, 152, 161, 168, 170, 185, 231, 285, 287, 295, 303, 337, 341, 344, 347, 402, 407, 474, 479, 480, 481, 483, 487, 488, 489, 495, 496, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 528, 533, 554, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 627, 644, 737, 760, 761, 762, 763], "voltag": [2, 3, 8, 9, 17, 18, 19, 20, 43, 249, 255, 271, 272, 273, 274, 276, 279, 280, 283, 287, 295, 302, 303, 304, 305, 306, 312, 341, 342, 343, 344, 345, 346, 351, 352, 358, 359, 360, 361, 362, 368, 369, 370, 371, 372, 402, 403, 404, 405, 406, 407, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 440, 441, 445, 446, 451, 453, 455, 458, 459, 468, 471, 478, 479, 480, 481, 483, 487, 489, 495, 496, 499, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 524, 528, 533, 536, 551, 553, 554, 557, 558, 564, 569, 570, 573, 574, 575, 576, 577, 581, 595, 597, 598, 599, 600, 601, 602, 604, 606, 607, 620, 621, 622, 623, 624, 625, 626, 641, 644, 645, 646, 647, 648, 650, 651, 728, 733, 737, 769], "represent": [2, 3, 8, 17, 18, 19, 407, 458, 459, 581, 597, 598, 599, 600, 601, 602], "balanc": [2, 3, 7, 66, 74, 249, 276, 308, 310, 311, 313, 314, 316, 318, 320, 323, 325, 327, 331, 332, 333, 334, 335, 340, 342, 343, 345, 346, 403, 511, 512, 517, 581, 597, 598, 599, 600, 601, 602, 610, 611, 617, 618, 621, 623, 625, 769], "experiment": [2, 74, 457, 581], "come": [2, 17, 20, 403, 483, 742], "These": [2, 3, 7, 17, 19, 38, 42, 60, 105, 106, 186, 197, 198, 227, 244, 407, 464, 474, 489, 502, 729, 730, 731, 732], "summar": [2, 4, 6, 9, 17, 18, 19, 20, 21, 42], "assign": [2, 4, 8, 17, 29, 75, 113, 121, 152, 161, 166, 185, 231, 249, 250, 251, 255, 256, 307, 308, 309, 312, 404, 405, 406, 462, 463, 489, 502, 554, 555, 596, 656], "exp": [2, 12, 457, 581, 770], "must": [2, 8, 12, 17, 19, 31, 39, 42, 60, 62, 66, 106, 107, 110, 113, 114, 115, 118, 119, 120, 151, 159, 184, 236, 247, 248, 249, 252, 255, 256, 302, 303, 304, 305, 306, 307, 336, 402, 407, 450, 462, 463, 465, 474, 535, 553, 554, 557, 558, 561, 567, 568, 569, 570, 572, 575, 629, 649, 729], "sinc": [2, 7, 8, 12, 17, 19, 26, 43, 113, 114, 160, 178, 179, 180, 181, 247, 462, 463, 484], "doe": [2, 6, 7, 8, 19, 42, 113, 154, 204, 255, 308, 336, 450, 462, 467, 484, 535, 562, 568, 569, 575, 581, 628, 630, 652, 737], "recogn": [2, 483], "dmc_element_class": [2, 18, 301, 458, 459, 461], "dm_element_class": [2, 18, 301, 458, 459, 461], "nm_element_class": [2, 18, 301, 458, 459], "mm_element_class": [2, 12, 18, 301, 458, 459, 460, 461], "exclude_el": 2, "exclud": [2, 732], "char": [2, 14, 15, 16, 17, 29, 30, 75, 106, 107, 108, 109, 110, 111, 112, 114, 121, 152, 161, 185, 186, 198, 228, 231, 234, 236, 237, 239, 240, 249, 252, 253, 255, 256, 300, 301, 302, 304, 305, 306, 307, 336, 402, 407, 450, 596, 638], "framework": [2, 5, 6, 12, 21, 245, 301, 452, 454, 456, 468, 469, 470, 471, 473, 738], "api": [2, 17, 38, 301, 526, 559, 604, 605], "bundl": [2, 43, 301], "togeth": [2, 17, 19, 109, 114, 301, 474], "packag": [2, 6, 15, 17, 18, 21, 243, 301, 452, 454, 456, 473, 581, 595, 596, 604, 729, 730, 731, 732], "xt_reserv": [2, 18, 245, 301, 472, 757], "co": [2, 142, 731], "fix": [2, 17, 18, 66, 94, 113, 175, 177, 301, 361, 455, 461, 472, 476, 489, 556, 561, 620, 621, 622, 623, 632, 644, 649, 655, 662, 731, 733], "zonal": [2, 18, 66, 293, 301, 461, 472, 649, 731], "standard": [2, 7, 17, 19, 20, 31, 39, 62, 63, 64, 66, 107, 108, 109, 110, 111, 112, 153, 154, 155, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 197, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 247, 249, 255, 450, 475, 483, 502, 534, 535, 613, 655, 733], "toggle_reserv": [2, 472, 475, 642, 643, 649, 738], "run_opf_w_r": 2, "7": [2, 8, 12, 17, 18, 20, 30, 31, 42, 66, 106, 114, 132, 140, 153, 154, 155, 156, 157, 158, 168, 199, 243, 308, 483, 553, 554, 557, 558, 581, 595, 738, 739, 770], "earlier": [2, 113, 483, 738, 770], "To": [2, 12, 13, 17, 18, 20, 43, 113, 114, 166, 272, 275, 276, 278, 281, 282, 284, 286, 289, 290, 291, 296, 297, 299, 463, 770], "you": [2, 3, 6, 9, 13, 17, 19, 37, 58, 60, 77, 78, 79, 80, 104, 106, 113, 114, 159, 226, 243, 247, 462, 463, 464, 465, 484, 570, 770], "mpx": [2, 12, 17, 18, 20, 301, 450, 451, 455, 466, 468, 469, 470, 471], "veri": [2, 74, 462, 527], "nine": [2, 770], "five": [2, 20, 458, 746], "someth": [2, 17, 77, 78, 79, 80, 113, 114, 115, 118, 119, 120, 151, 159, 184, 189, 243, 255, 490, 735], "complex": [2, 9, 17, 19, 236, 303, 304, 402, 403, 404, 405, 407, 451, 487, 489, 495, 496, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 528, 533, 536, 573, 574, 575, 581, 597, 598, 599, 600, 601, 602, 620, 622, 624, 644, 737, 769], "phase": [2, 3, 18, 21, 249, 258, 260, 261, 264, 265, 270, 271, 274, 275, 277, 278, 280, 281, 285, 286, 288, 289, 298, 299, 301, 357, 358, 359, 366, 367, 368, 369, 370, 371, 372, 374, 375, 388, 389, 400, 401, 414, 415, 416, 420, 421, 422, 424, 425, 426, 436, 438, 448, 458, 472, 483, 553, 569, 742, 743, 744, 745, 746, 747, 748, 749, 766], "load": [2, 3, 4, 17, 18, 19, 20, 43, 47, 59, 60, 61, 62, 63, 64, 74, 81, 105, 249, 250, 255, 265, 266, 287, 288, 289, 290, 291, 377, 390, 391, 392, 393, 402, 437, 438, 439, 440, 441, 442, 450, 457, 458, 466, 476, 479, 480, 481, 483, 511, 534, 535, 556, 558, 560, 561, 562, 563, 566, 573, 574, 581, 604, 636, 644, 655, 728, 732, 733, 742], "term": [2, 8, 12, 17, 19, 26, 108, 109, 110, 111, 113, 114, 247, 271, 283, 303, 304, 305, 403, 483, 553, 557, 730], "pleas": [2, 17, 19, 21, 26, 37, 43, 44, 45, 81, 82, 83, 84, 104, 113, 114, 151, 226, 243, 532, 579, 640, 658, 662, 663, 664, 665, 666, 667, 668, 750, 770], "xt_3p": [2, 18, 20, 245, 301, 472], "input": [3, 4, 6, 11, 12, 14, 15, 16, 17, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 228, 231, 232, 234, 236, 237, 238, 239, 240, 246, 247, 249, 252, 254, 255, 256, 300, 301, 302, 303, 304, 305, 306, 307, 308, 336, 378, 402, 403, 404, 405, 406, 407, 450, 451, 452, 454, 456, 457, 465, 466, 468, 469, 470, 471, 472, 474, 475, 478, 479, 480, 481, 484, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 520, 521, 523, 526, 527, 529, 532, 536, 553, 554, 557, 558, 559, 561, 562, 563, 570, 575, 577, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 617, 618, 620, 621, 622, 623, 624, 625, 632, 633, 634, 635, 636, 637, 638, 639, 641, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 729, 730, 731, 732, 735], "output": [3, 4, 6, 13, 14, 16, 19, 26, 29, 30, 31, 39, 40, 41, 42, 59, 61, 62, 63, 64, 65, 66, 74, 75, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 231, 234, 236, 237, 238, 240, 241, 243, 246, 247, 249, 251, 252, 255, 256, 279, 280, 282, 301, 302, 303, 304, 305, 306, 308, 336, 350, 353, 354, 355, 357, 361, 362, 363, 364, 365, 374, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 450, 452, 454, 455, 456, 457, 460, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 478, 483, 484, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 520, 521, 523, 528, 529, 532, 533, 536, 558, 563, 573, 578, 581, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 617, 618, 620, 621, 622, 623, 624, 625, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 644, 645, 646, 647, 648, 649, 650, 651, 654, 730, 731, 732, 734, 735, 737, 764], "present": [3, 17, 64, 66, 112, 114, 234, 240, 249, 474, 553, 554, 557, 558, 570, 573, 732], "encapsul": [3, 8, 114, 249, 255, 407, 474], "primarili": [3, 4, 7, 8, 249, 252, 402, 523], "class": [3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 226, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 469, 472, 473, 474, 741], "data_model": [3, 245, 250, 251, 252, 255, 256, 301, 308, 336, 402, 403, 406, 407, 450, 452, 454, 456, 466, 472, 752], "therefor": [3, 4, 7, 8, 43, 255, 308, 402, 404, 405, 406, 534, 535], "data_model_cpf": [3, 245, 472], "target": [3, 66, 188, 192, 199, 451, 468, 487, 489, 504, 505, 506, 581, 644, 655], "cost": [3, 17, 19, 26, 31, 39, 40, 41, 45, 56, 66, 81, 106, 109, 110, 111, 113, 114, 153, 154, 155, 156, 157, 158, 177, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 248, 254, 262, 279, 282, 284, 292, 308, 336, 337, 376, 377, 379, 383, 394, 449, 454, 461, 474, 475, 483, 484, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 551, 552, 555, 556, 567, 578, 580, 581, 604, 605, 613, 614, 628, 629, 630, 649, 655, 731, 732, 734, 735, 769], "nodal": [3, 7, 17, 249, 276, 316, 327, 403, 469, 470, 511, 512, 517, 581, 597, 598, 599, 600, 601, 602, 769], "price": [3, 7, 17, 66, 74, 107, 108, 109, 110, 111, 112, 114, 153, 154, 155, 156, 157, 158, 249, 272, 276, 282, 284, 292, 293, 294, 318, 320, 323, 325, 349, 351, 461, 469, 470, 521, 581, 595, 603, 604, 649, 730, 731, 732, 736, 769], "shadow": [3, 7, 17, 74, 107, 108, 109, 110, 111, 112, 114, 272, 276, 282, 284, 292, 294, 349, 351, 521, 603, 604, 649, 730, 731, 732, 736], "contraint": [3, 19], "By": [3, 4, 7, 8, 11, 17, 106, 107, 108, 109, 110, 111, 112, 249, 252, 255, 256, 301, 308, 336, 402, 407, 462, 770], "begin": [3, 4, 7, 8, 9, 17, 19, 26, 62, 66, 78, 113, 114, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 193, 199, 200, 232, 249, 252, 255, 256, 301, 303, 306, 308, 336, 402, 407, 450, 486, 526, 555, 568, 569, 570, 572, 575, 636, 639], "initi": [3, 4, 7, 8, 17, 19, 26, 43, 65, 66, 106, 112, 113, 114, 186, 199, 232, 243, 249, 252, 253, 255, 256, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 295, 298, 308, 358, 359, 360, 361, 362, 363, 367, 375, 376, 383, 389, 401, 402, 403, 404, 405, 455, 474, 475, 483, 489, 522, 528, 533, 551, 553, 557, 561, 581, 597, 598, 599, 600, 601, 602, 604, 605, 737], "proce": [3, 7, 8, 249, 735], "stage": [3, 4, 7, 8, 62, 66, 114, 153, 154, 155, 156, 157, 158, 199, 249, 252, 255, 475, 535, 642, 643, 735], "everi": 3, "read": [3, 632, 633, 634, 635, 636, 637, 638, 639], "count": [3, 7, 8, 17, 20, 186, 236, 237, 239, 249, 255, 407, 487, 489], "determin": [3, 5, 7, 8, 11, 17, 19, 30, 107, 108, 109, 110, 111, 114, 156, 171, 181, 189, 197, 199, 208, 228, 249, 255, 308, 450, 463, 465, 502, 537, 563, 581, 632, 636, 655, 656, 732], "number": [3, 4, 6, 7, 8, 9, 17, 19, 26, 29, 30, 31, 42, 60, 62, 74, 75, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 167, 168, 169, 170, 171, 174, 178, 179, 180, 185, 197, 199, 202, 206, 209, 228, 231, 232, 238, 239, 247, 249, 255, 256, 273, 303, 306, 307, 402, 407, 455, 474, 476, 477, 478, 483, 502, 526, 528, 529, 533, 536, 552, 553, 554, 555, 556, 557, 558, 559, 564, 567, 568, 569, 570, 571, 572, 575, 581, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 632, 636, 637, 638, 641, 644, 649, 729, 731, 732, 737], "instanc": [3, 5, 8, 11, 17, 19, 246, 249, 255, 407, 642], "store": [3, 7, 8, 17, 19, 60, 66, 78, 107, 108, 109, 112, 113, 114, 249, 255, 300, 303, 304, 305, 307, 407, 462, 463, 474, 525, 526, 552, 556, 729, 730, 731, 732], "nr": [3, 17, 19, 42, 255, 256, 581], "onlin": [3, 7, 8, 17, 19, 249, 255, 279, 280, 283, 292, 293, 336, 407, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 732], "statu": [3, 17, 18, 19, 20, 36, 74, 80, 102, 154, 179, 202, 204, 206, 210, 225, 242, 249, 255, 477, 483, 526, 553, 557, 558, 581, 595, 604, 729, 730, 731, 732, 768], "map": [3, 8, 19, 59, 106, 113, 199, 249, 255, 256, 293, 300, 307, 308, 402, 461, 559, 730], "id": [3, 4, 9, 17, 18, 19, 20, 60, 249, 255, 271, 277, 279, 280, 283, 285, 287, 288, 292, 295, 298, 402, 636, 637], "row": [3, 4, 8, 9, 17, 19, 30, 40, 41, 42, 59, 60, 79, 80, 108, 111, 114, 167, 168, 169, 171, 174, 199, 247, 249, 255, 256, 271, 273, 276, 279, 280, 283, 285, 287, 288, 292, 294, 295, 298, 402, 407, 462, 463, 474, 476, 483, 524, 525, 538, 551, 552, 556, 560, 572, 578, 580, 581, 595, 608, 609, 630, 644, 655, 729, 730, 732, 733, 734], "id2i": [3, 17, 19, 255], "criteria": [3, 249, 255, 644], "indic": [3, 4, 9, 11, 17, 19, 39, 40, 41, 42, 60, 63, 66, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 162, 163, 165, 186, 187, 188, 189, 198, 199, 247, 249, 255, 256, 262, 279, 280, 283, 300, 302, 303, 306, 307, 308, 402, 403, 407, 455, 465, 474, 479, 480, 481, 483, 486, 487, 489, 490, 492, 494, 495, 496, 498, 499, 501, 503, 504, 506, 508, 522, 523, 524, 526, 527, 528, 530, 531, 533, 551, 553, 554, 555, 556, 557, 558, 561, 563, 564, 565, 566, 572, 595, 597, 598, 599, 600, 601, 602, 608, 609, 613, 630, 636, 637, 638, 639, 730, 732, 737], "n": [3, 4, 9, 12, 17, 19, 30, 42, 59, 60, 63, 64, 103, 106, 109, 110, 112, 113, 114, 116, 153, 155, 156, 167, 169, 171, 174, 199, 247, 249, 254, 255, 303, 304, 305, 307, 376, 383, 402, 407, 462, 474, 483, 516, 517, 518, 519, 524, 526, 551, 555, 581, 595, 604, 605, 730, 735], "off": [3, 17, 18, 19, 20, 228, 255, 271, 476, 483, 526, 551, 553, 559, 650, 729, 730, 731, 732], "i2on": [3, 17, 255], "extract": [3, 4, 7, 17, 61, 113, 114, 243, 249, 255, 256, 285, 336, 349, 351, 407, 452, 454, 456, 462, 527, 636, 639], "calcul": [3, 249, 255, 478, 576, 577], "origin": [3, 4, 16, 17, 43, 234, 240, 249, 255, 525, 526, 559, 732], "p": [3, 9, 12, 17, 18, 20, 30, 107, 108, 109, 112, 114, 156, 194, 195, 196, 247, 248, 249, 255, 271, 273, 274, 276, 277, 279, 280, 283, 287, 288, 292, 293, 295, 298, 306, 378, 407, 483, 484, 487, 489, 495, 504, 535, 538, 553, 554, 555, 557, 558, 568, 569, 573, 574, 575, 581, 595, 608, 629, 655, 730, 742], "few": [3, 4, 7, 8, 17, 20], "per": [3, 7, 8, 12, 17, 19, 20, 64, 74, 247, 249, 271, 283, 285, 336, 370, 394, 407, 408, 413, 414, 420, 423, 424, 431, 436, 437, 438, 443, 448, 461, 476, 536, 561, 570, 573, 581, 595, 613], "unit": [3, 6, 7, 9, 17, 20, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 57, 59, 63, 66, 72, 73, 77, 78, 79, 80, 97, 98, 100, 243, 247, 249, 271, 272, 276, 282, 283, 284, 292, 293, 483, 535, 553, 554, 557, 558, 560, 570, 573, 581, 595, 613, 647, 651, 735], "mva": [3, 18, 20, 249, 271, 272, 483, 491, 553, 558, 581, 595, 635, 644], "found": [3, 12, 17, 19, 20, 21, 61, 106, 108, 109, 110, 111, 112, 113, 114, 187, 188, 247, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 494, 506, 547, 638, 639, 739, 770], "base_mva": [3, 17, 249, 377], "distribut": [3, 17, 142, 243, 285, 458, 479, 571, 576, 581, 719], "kva": [3, 20, 249, 298], "base_kva": [3, 20, 249, 298], "pretty_print": [3, 17, 249, 255, 272, 282, 284, 285, 298], "pretti": [3, 11, 19, 249, 251, 255, 272, 275, 276, 278, 281, 282, 284, 286, 289, 291, 294, 297, 299, 450, 468, 469, 470, 471, 475, 581, 595, 644, 645, 646, 647, 648, 650, 651, 764], "text": [3, 21, 199, 234, 249, 473, 636, 644], "consol": [3, 11, 74, 249, 255], "control": [3, 17, 26, 74, 114, 153, 154, 155, 156, 157, 158, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 249, 255, 273, 274, 450, 483, 545, 581, 595, 631], "cnt": [3, 17, 239, 249, 255], "total": [3, 8, 17, 18, 20, 42, 66, 106, 112, 113, 114, 199, 249, 255, 287, 292, 295, 402, 407, 455, 474, 483, 535, 536, 553, 555, 558, 649, 655, 731, 732, 733, 734], "sum": [3, 17, 77, 78, 168, 247, 249, 255, 536, 572, 613, 614, 733], "amount": [3, 106, 249, 527, 581, 595, 655, 732], "capac": [3, 18, 43, 103, 249, 292, 461], "loss": [3, 17, 18, 20, 249, 271, 273, 283, 483, 536, 553, 554, 557], "ext": [3, 17, 249, 255, 526, 552], "extrem": [3, 17, 248, 249, 255], "min": [3, 7, 12, 17, 18, 26, 31, 64, 66, 77, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 249, 483, 554, 558], "max": [3, 7, 12, 17, 18, 20, 26, 31, 62, 74, 77, 200, 202, 249, 255, 476, 491, 563, 581, 595, 649, 655, 731, 733], "det": [3, 17, 249, 255], "dispatch": [3, 12, 17, 43, 67, 74, 77, 78, 81, 249, 377, 468, 469, 470, 471, 476, 534, 535, 556, 560, 561, 563, 566, 613, 655, 732, 733], "dm_element": [3, 17, 18, 19, 245, 249, 256, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298, 301, 336, 407, 472], "where": [3, 4, 6, 7, 8, 9, 13, 17, 19, 26, 31, 42, 43, 58, 60, 62, 63, 64, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 174, 178, 179, 180, 181, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 234, 240, 243, 247, 249, 287, 300, 303, 306, 307, 308, 336, 402, 407, 463, 464, 465, 474, 476, 478, 483, 486, 489, 502, 516, 518, 523, 524, 526, 527, 534, 535, 536, 537, 551, 552, 555, 556, 559, 564, 565, 567, 571, 572, 580, 581, 599, 602, 606, 608, 631, 644, 649, 655, 656, 729, 730, 731, 732, 733, 735], "relationship": [3, 4, 6, 7, 8, 402], "here": [3, 4, 6, 7, 8, 17, 18, 26, 42, 43, 60, 114, 159, 178, 179, 180, 181, 186, 272, 276, 282, 284, 292, 293, 402, 483, 489, 509, 510, 511, 512, 513, 514, 526, 556, 559, 562], "dme_bu": [3, 19, 245, 276, 472], "dme_gen": [3, 19, 245, 282, 472], "dme_load": [3, 19, 245, 290, 291, 472], "while": [3, 8, 17, 19, 463, 483, 729], "least": [3, 6, 43, 302, 303, 304, 305, 306, 402, 463, 476, 649, 731, 735], "tab": [3, 12, 13, 17, 19, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 463, 468, 469, 470, 471], "column": [3, 4, 9, 17, 19, 26, 30, 42, 60, 62, 63, 64, 80, 108, 111, 112, 114, 168, 175, 176, 178, 179, 180, 181, 247, 255, 256, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298, 303, 306, 402, 407, 462, 463, 476, 483, 485, 522, 523, 524, 525, 528, 533, 538, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 571, 572, 573, 578, 604, 605, 607, 608, 609, 611, 613, 614, 618, 621, 623, 625, 637, 638, 655, 729, 730, 732, 733, 734, 737], "attempt": [3, 61, 228, 463, 632, 636], "common": [3, 6, 8, 10, 17, 19, 43, 156, 171, 181, 199, 208, 255, 484], "ctm": [3, 10], "uid": [3, 17, 19, 255, 271, 277, 279, 280, 283, 285, 287, 288, 292, 295, 298], "posit": [3, 20, 192, 483, 534, 535, 554, 561, 732], "integ": [3, 6, 14, 16, 17, 20, 26, 30, 31, 62, 66, 106, 108, 109, 110, 112, 114, 116, 117, 153, 154, 155, 156, 157, 158, 163, 165, 227, 232, 238, 239, 246, 247, 249, 255, 256, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298, 302, 303, 304, 306, 307, 378, 402, 403, 404, 405, 407, 450, 452, 454, 455, 456, 465, 476, 483, 554, 581, 595, 637, 638], "serv": [3, 8, 17, 301], "uniqu": [3, 8, 17, 20, 106, 113, 198, 255, 285, 402], "string": [3, 17, 19, 39, 42, 60, 61, 62, 79, 80, 113, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 166, 168, 184, 202, 208, 228, 240, 255, 256, 465, 484, 489, 502, 503, 524, 525, 527, 529, 534, 535, 551, 552, 562, 581, 604, 605, 632, 633, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 650, 651, 652, 653, 733], "source_uid": [3, 17, 19, 255], "record": [3, 20, 636, 638, 639], "besid": [3, 20], "vector": [3, 4, 7, 8, 9, 12, 17, 19, 22, 26, 30, 31, 39, 42, 59, 60, 62, 63, 64, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 186, 191, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 236, 247, 255, 256, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 295, 298, 302, 303, 304, 305, 306, 307, 308, 378, 402, 403, 404, 405, 406, 407, 451, 474, 478, 479, 480, 481, 486, 487, 489, 493, 495, 496, 499, 503, 504, 509, 510, 511, 512, 513, 514, 516, 518, 522, 524, 526, 527, 528, 530, 531, 533, 536, 538, 551, 553, 559, 560, 561, 563, 564, 566, 567, 569, 572, 573, 574, 575, 577, 578, 580, 581, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 617, 618, 620, 621, 622, 623, 624, 625, 629, 644, 655, 732, 733, 734, 737], "m": [3, 9, 13, 14, 16, 17, 18, 19, 20, 37, 40, 41, 59, 61, 62, 63, 74, 81, 104, 115, 116, 118, 119, 120, 151, 159, 184, 226, 243, 285, 303, 304, 305, 307, 402, 407, 462, 465, 475, 476, 483, 495, 529, 536, 562, 644, 645, 646, 647, 648, 650, 651, 653, 654, 659, 660, 661, 662], "time": [3, 8, 9, 17, 19, 26, 42, 60, 62, 66, 74, 106, 108, 109, 110, 111, 112, 114, 202, 204, 209, 243, 303, 306, 407, 450, 489, 502, 527, 581, 595, 604, 631, 644, 645, 646, 647, 648, 650, 651, 735], "largest": [3, 527], "n_r": 3, "enter": [3, 556], "gen": [3, 8, 12, 17, 18, 20, 39, 40, 41, 42, 60, 63, 64, 77, 79, 83, 84, 110, 111, 249, 255, 256, 262, 279, 280, 292, 293, 336, 377, 378, 402, 407, 455, 460, 468, 469, 470, 471, 474, 476, 477, 483, 484, 485, 497, 500, 511, 512, 517, 521, 523, 524, 525, 526, 527, 538, 551, 552, 556, 558, 559, 560, 562, 563, 565, 566, 570, 573, 581, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 627, 631, 636, 644, 645, 646, 647, 648, 649, 650, 651, 653, 655, 662, 729, 731, 732, 733, 735, 736], "singular": [3, 17, 19, 255], "plural": [3, 17, 19, 255], "charact": [3, 153, 154, 155, 156, 157, 158, 234, 256, 535, 637, 638, 639], "might": [3, 113, 475], "seem": [3, 737], "logic": 3, "constant": [3, 8, 9, 17, 19, 26, 60, 64, 77, 111, 114, 159, 160, 246, 247, 283, 287, 479, 480, 481, 483, 523, 553, 554, 555, 556, 557, 558, 566, 574, 581, 604], "instead": [3, 17, 26, 30, 31, 60, 109, 112, 113, 114, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 556, 579, 581, 595, 640, 732], "prevent": [3, 232], "effect": 3, "preclud": 3, "main_table_var_nam": [3, 17, 19, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 295, 298], "init_statu": [3, 255, 273, 274], "update_statu": [3, 17, 19, 249, 255, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298], "build_param": [3, 17, 19, 249, 255, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298, 402, 403, 406, 407, 409, 412, 420, 424, 427, 430, 432, 435, 436, 438, 439, 442, 444, 447, 448], "As": [3, 11, 12, 17, 18, 37, 104, 226, 243], "node": [3, 7, 9, 17, 246, 255, 273, 274, 308, 310, 311, 313, 314, 318, 320, 323, 325, 331, 332, 333, 334, 335, 339, 347, 402, 403, 404, 405, 407, 413, 414, 455, 479, 480, 481, 486, 626, 759], "port": [3, 7, 8, 9, 17, 26, 255, 271, 283, 302, 303, 306, 402, 403, 406, 407, 408, 420, 423, 424, 431, 436, 437, 438, 443, 448, 451], "hand": [3, 6, 7, 11, 17, 26, 31, 108, 114, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "inform": [3, 6, 8, 26, 40, 41, 106, 113, 178, 179, 180, 181, 186, 189, 199, 226, 228, 244, 249, 252, 255, 256, 300, 301, 303, 304, 305, 308, 336, 402, 407, 450, 458, 459, 460, 461, 476, 482, 483, 484, 489, 490, 509, 510, 513, 515, 516, 517, 519, 521, 526, 565, 573, 603, 604, 630, 735, 770], "link": [3, 13, 17, 19, 20, 255, 458, 473, 729], "branch": [3, 6, 7, 17, 18, 20, 43, 60, 74, 255, 257, 271, 272, 348, 349, 350, 351, 352, 353, 354, 355, 402, 408, 409, 410, 411, 412, 473, 474, 476, 478, 479, 480, 481, 483, 485, 486, 489, 491, 492, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 526, 527, 530, 531, 536, 551, 553, 556, 559, 562, 564, 568, 569, 570, 571, 572, 575, 577, 581, 595, 603, 604, 605, 606, 607, 608, 609, 626, 627, 631, 632, 635, 636, 644, 645, 646, 647, 648, 650, 651, 653, 730, 732, 735], "pair": [3, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 116, 117, 402, 466, 468, 469, 470, 471, 581, 729], "context": [3, 9, 108, 109, 110, 111, 112, 114, 186, 197, 489, 502], "b": [3, 7, 9, 12, 17, 19, 20, 26, 30, 31, 112, 114, 116, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 295, 300, 306, 307, 368, 371, 376, 383, 402, 462, 483, 510, 511, 512, 513, 514, 516, 517, 518, 519, 522, 523, 527, 528, 537, 553, 554, 568, 569, 581, 655, 656, 733, 737, 769], "junction": [3, 255, 407], "could": [3, 17, 106, 113, 115, 118, 119, 120, 151, 159, 184, 509, 515, 644], "coupl": 3, "cxn_type": [3, 17, 19, 255, 271, 277, 279, 280, 283, 285, 287, 288, 295, 298, 407], "cxn_idx_prop": [3, 17, 19, 255, 271, 277, 279, 280, 283, 285, 287, 288, 295, 298, 407], "fbu": [3, 17, 20, 255, 271, 283, 285, 298, 407], "tbu": [3, 17, 20, 255, 271, 283, 285, 298, 407], "automat": [3, 4, 8, 11, 13, 17, 19, 81, 106, 113, 114, 156, 171, 181, 199, 208, 249, 252, 255, 262, 307, 308, 402, 407, 450, 462, 473, 475, 483, 526, 527, 581, 595, 642], "had": [3, 43], "cxn_type_prop": [3, 255, 407], "built": [3, 7, 17, 19, 21, 26, 30, 37, 66, 104, 114, 174, 226, 243, 247, 256, 462, 474, 529, 581, 629], "mp_tabl": [3, 17, 19, 245, 463, 467, 472, 755], "mp_table_class": [3, 463, 464, 472], "abil": [4, 6, 252, 254, 462], "dure": [4, 17, 43, 252, 255, 644], "dm_convert": [4, 245, 249, 253, 254, 255, 256, 301, 450, 452, 454, 456, 472], "6": [4, 12, 17, 18, 20, 26, 30, 31, 43, 78, 144, 147, 153, 154, 155, 156, 157, 158, 178, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 256, 285, 402, 436, 448, 454, 476, 483, 553, 554, 557, 558, 581, 595, 662, 739], "yet": [4, 14, 16, 19, 37, 42, 104, 109, 110, 113, 114, 163, 226, 232, 233, 236, 237, 239, 467, 604, 770], "been": [4, 7, 17, 19, 81, 114, 117, 187, 188, 189, 336, 455, 475, 477, 483, 489, 490, 494, 506, 524, 525, 581], "onc": [4, 7, 17, 19, 243, 336, 407, 475, 655], "readi": [4, 450], "loadcas": [4, 59, 472, 483, 641, 644, 645, 646, 647, 648, 650, 651, 684, 729, 738], "same": [4, 8, 17, 19, 26, 30, 43, 45, 62, 63, 64, 106, 113, 160, 166, 168, 174, 186, 197, 198, 199, 249, 250, 256, 307, 376, 402, 407, 475, 483, 484, 489, 502, 503, 527, 536, 572, 578, 581, 595, 649, 662, 663, 730, 733, 734, 749], "again": [4, 17, 19, 43, 733], "scratch": [4, 570], "need": [4, 8, 12, 17, 19, 42, 60, 64, 108, 109, 110, 111, 113, 114, 188, 199, 243, 250, 255, 256, 304, 305, 337, 452, 454, 456, 475, 484, 506, 526, 527, 529, 560, 569, 770], "dmc_element": [4, 17, 18, 245, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 301, 472, 751], "dmce": [4, 255, 256], "get_import_spec": [4, 256], "import_table_valu": [4, 256], "thing": [4, 17, 19], "interest": [4, 9, 11, 14, 16, 190, 247, 249, 302, 303, 304, 306, 378, 402, 403, 404, 405, 407, 476, 563, 613], "vmap": [4, 17, 256], "table_var_map": [4, 17, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "vn": [4, 17, 256, 258, 259, 262, 263, 266, 267, 268], "start": [4, 6, 13, 17, 26, 31, 106, 108, 113, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 307, 308, 314, 315, 451, 474, 483, 526, 555, 567, 581, 735, 770], "col": [4, 17, 20, 42, 60, 167, 169, 171, 174, 199, 247, 256, 402, 476, 730], "c": [4, 7, 8, 17, 19, 20, 26, 31, 64, 110, 111, 112, 114, 153, 154, 155, 156, 157, 158, 172, 173, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 256, 258, 259, 285, 376, 383, 402, 407, 474, 483, 486, 535, 553, 557, 637, 638], "sf": [4, 256, 479, 480, 481, 491, 509, 515, 518, 603, 604], "sf_fcn": 4, "copi": [4, 17, 20, 76, 106, 113, 114, 166, 227, 249, 252, 255, 307, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "scale": [4, 9, 26, 30, 77, 78, 79, 80, 103, 147, 165, 174, 177, 189, 199, 247, 256, 476, 490, 556, 580, 581, 655, 732, 737], "factor": [4, 20, 24, 30, 43, 60, 103, 177, 189, 199, 256, 288, 377, 476, 483, 490, 556, 558, 566, 571, 581, 604, 655], "val": [4, 12, 17, 107, 108, 109, 110, 111, 112, 113, 114, 198, 246, 256, 307, 462, 466, 468, 469, 470, 471, 503, 524, 551, 604], "num": [4, 17, 19, 634, 635, 636, 638], "scalar": [4, 9, 17, 19, 42, 60, 61, 63, 106, 107, 108, 109, 110, 111, 112, 113, 114, 198, 236, 247, 307, 402, 483, 487, 489, 495, 496, 499, 503, 504, 527, 561, 572, 580, 581, 655, 733], "fcn": [4, 12, 17, 106, 109, 110, 113, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 186, 189, 197, 198, 199, 474, 475, 489, 490, 502, 503, 555, 642], "ifn": 4, "efn": 4, "spec": [4, 12, 17, 197, 199, 234, 240, 256, 257, 258, 259, 262, 263, 267, 268, 336, 378], "ridx": [4, 17, 256, 259, 262, 263], "get_export_spec": [4, 256], "export_table_valu": [4, 256], "init_export_data": [4, 256, 259], "relev": [4, 7, 8, 12, 17, 20, 43, 66, 107, 108, 109, 110, 111, 112, 114, 189, 308, 336, 465, 732], "data_exist": [4, 256], "fals": [4, 17, 30, 36, 77, 78, 79, 80, 102, 106, 108, 109, 114, 186, 225, 228, 232, 234, 236, 237, 238, 240, 242, 255, 402, 489, 631, 644, 650, 768], "matrix": [4, 8, 9, 11, 17, 19, 20, 26, 30, 31, 39, 40, 41, 42, 49, 62, 63, 64, 80, 108, 109, 110, 111, 113, 114, 116, 153, 154, 155, 156, 157, 158, 167, 168, 169, 171, 174, 175, 176, 177, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 236, 247, 285, 293, 302, 303, 304, 306, 378, 402, 403, 407, 450, 472, 474, 483, 485, 486, 487, 489, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 524, 526, 528, 533, 538, 551, 553, 554, 555, 557, 558, 560, 562, 563, 564, 567, 570, 571, 572, 573, 575, 578, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 613, 617, 618, 634, 635, 638, 655, 729, 733, 734, 737, 769], "pdf": [5, 6, 10, 13, 37, 77, 78, 79, 80, 96, 97, 98, 100, 104, 226, 472, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 535, 769, 770], "introduct": [5, 472], "notat": [5, 12, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 769], "overview": [5, 6, 17, 19], "hierarchi": [5, 7, 17, 19], "custom": [5, 6, 12, 18, 19, 199, 254, 301, 319, 321, 324, 326, 328, 337, 458, 459, 460, 461, 464, 527], "iter": [5, 20, 23, 26, 31, 157, 167, 168, 169, 170, 171, 174, 178, 179, 180, 186, 199, 202, 206, 209, 450, 451, 455, 479, 480, 481, 487, 489, 528, 533, 581, 595, 597, 598, 599, 600, 601, 602, 641, 644, 650, 737], "via": [5, 17, 20, 21, 59, 109, 110, 114, 166, 178, 180, 186, 197, 198, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 248, 468, 470, 471, 475, 489, 502, 581, 595, 637, 638, 688, 722], "acknowledg": 5, "purpos": [6, 17, 113, 248, 250, 251, 473], "wish": [6, 63, 64], "your": [6, 12, 18, 19, 21, 96, 97, 98, 100, 151, 160, 227, 243, 244, 463, 464, 465], "document": [6, 17, 18, 19, 20, 30, 37, 104, 118, 119, 120, 151, 153, 155, 158, 178, 179, 180, 203, 205, 206, 207, 210, 211, 226, 247, 473, 738, 739, 770], "languag": [6, 21], "scientif": 6, "commerci": 6, "product": [6, 509, 510, 511, 512, 513, 514], "mathwork": [6, 26, 31, 153, 155, 156, 157, 158, 168, 169, 170, 171, 174, 178, 179, 180, 181, 201, 203, 205, 206, 207, 208, 209, 210, 211], "free": [6, 21], "open": [6, 21, 107, 108, 109, 110, 111, 112, 482, 632, 639], "relat": [6, 7, 8, 11, 12, 21, 106, 113, 254, 303, 304, 305, 450, 526, 547, 569, 676, 721], "softwar": [6, 21, 581], "git": 6, "subrepo": 6, "except": [6, 9, 17, 26, 31, 42, 66, 76, 114, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 166, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 250, 307, 483, 489, 529, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 608, 649, 732, 749], "howev": [6, 7, 11, 17, 19, 43, 463, 770], "download": [6, 21, 96, 97, 98, 100, 243], "zip": [6, 243, 287, 457, 573, 574, 728, 733], "releas": [6, 21, 29, 75, 121, 152, 161, 185, 228, 231, 596], "depend": [6, 7, 8, 18, 60, 66, 76, 107, 112, 114, 171, 199, 202, 243, 249, 252, 256, 303, 308, 407, 451, 453, 455, 458, 459, 475, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 525, 529, 567, 573, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 608, 637, 644, 728, 733], "mptest": [6, 243], "doc": [6, 10, 13, 14, 16, 21, 115, 119, 156, 159, 180, 184, 204, 210, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 769], "have_featur": [6, 22, 23, 24, 25, 38, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 227, 229, 230, 235, 243, 244, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 770], "nonlinear": [6, 7, 8, 12, 17, 19, 21, 26, 27, 28, 38, 106, 107, 108, 109, 110, 111, 112, 113, 114, 133, 136, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 193, 199, 227, 254, 303, 378, 403, 439, 474, 581, 603, 604, 615, 616], "primal": [6, 26, 66, 114, 153, 154, 155, 156, 157, 158, 160, 181, 201, 208, 209, 543, 545, 581, 595, 604], "dual": [6, 26, 114, 119, 140, 157, 160, 181, 201, 208, 209, 304, 543, 545, 581, 595, 604], "linear": [6, 7, 8, 9, 17, 23, 26, 30, 31, 33, 34, 38, 45, 66, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 124, 130, 142, 153, 154, 155, 156, 157, 158, 165, 167, 169, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 247, 248, 254, 262, 283, 303, 306, 376, 379, 383, 474, 483, 521, 538, 555, 557, 564, 565, 566, 567, 580, 581, 595, 603, 604, 605, 606, 628, 732], "equat": [6, 7, 17, 19, 30, 114, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 193, 199, 227, 546, 581, 597, 598, 599, 600, 601, 602, 604], "easi": [6, 17, 59], "unifi": [6, 8, 10, 227, 769], "lp": [6, 114, 122, 130, 139, 141, 165, 204, 208, 224, 226, 472, 581, 595], "qp": [6, 7, 12, 31, 35, 38, 66, 74, 114, 122, 141, 145, 146, 154, 158, 165, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 221, 224, 226, 472, 581, 595, 722], "mix": [6, 7, 66, 114, 153, 154, 155, 156, 157, 158, 163, 165, 227, 300, 302, 303, 304, 305, 306, 308, 580], "switch": [6, 12, 17, 18, 19, 632], "chang": [6, 12, 18, 20, 21, 42, 43, 45, 60, 62, 112, 114, 189, 455, 458, 459, 464, 465, 476, 489, 490, 498, 501, 503, 523, 526, 534, 535, 556, 654, 671, 732], "unsupport": [6, 453], "separ": [6, 17, 19, 78, 243, 465], "resourc": 6, "sphinx": [6, 13, 14, 16, 21], "perman": [6, 465], "master": [6, 14, 16, 42, 60, 62, 226, 473], "latest": [6, 119, 159], "stabl": 6, "unreleas": [6, 21], "hopefulli": 6, "tag": [6, 22, 23, 24, 25, 106, 108, 109, 110, 111, 112, 114, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 228, 229, 230, 249, 251, 252, 253, 301, 302, 308, 407, 450, 453, 455, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "becaus": [6, 17, 19, 43, 74, 463, 559, 729], "intend": [6, 38, 109, 113, 114, 189, 227, 234, 236, 237, 239, 240, 244, 255, 464, 474, 490], "unmodifi": 6, "stick": 6, "syntax": [6, 22, 26, 31, 115, 118, 119, 120, 123, 151, 153, 154, 155, 156, 157, 158, 159, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 184, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 248, 462, 463, 604, 605, 644, 645, 646, 647, 648, 649, 650, 651, 735], "classdef": [6, 12, 17, 18, 19], "obj": [6, 12, 17, 18, 19, 26, 31, 106, 112, 113, 247, 255, 300, 307, 336, 402, 463, 604], "namespac": 6, "produc": [6, 42, 483], "html": [6, 13, 21, 115, 119, 156, 159, 179, 180, 184, 206, 210], "what": [6, 9, 109, 114, 188, 506, 581, 595, 629, 631], "hint": 6, "click": 6, "icon": [6, 473], "upper": [6, 12, 17, 18, 26, 31, 107, 108, 109, 110, 111, 112, 114, 116, 117, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 271, 272, 273, 276, 279, 282, 283, 284, 292, 304, 402, 473, 483, 498, 501, 508, 521, 538, 553, 554, 557, 558, 565, 581, 603, 604, 606, 607, 649, 730, 731, 732, 736], "right": [6, 8, 9, 13, 17, 19, 26, 31, 108, 114, 153, 154, 155, 156, 157, 158, 172, 173, 178, 179, 180, 181, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 303, 306, 473], "corner": 6, "page": [6, 184, 243, 473, 481], "cover": 6, "autom": 6, "contributor": 6, "guid": [6, 12, 17, 18, 19, 20, 156], "form": [7, 8, 9, 12, 17, 18, 30, 62, 108, 109, 110, 111, 114, 116, 117, 174, 186, 197, 198, 234, 240, 243, 245, 285, 303, 304, 305, 306, 308, 358, 359, 360, 361, 362, 363, 367, 370, 375, 376, 383, 389, 401, 402, 403, 404, 405, 406, 407, 449, 472, 474, 489, 502, 515, 516, 517, 518, 519, 521, 526, 535, 559, 570, 581, 603, 604, 605, 606, 733, 735], "x": [7, 8, 9, 17, 19, 20, 24, 25, 26, 30, 31, 42, 63, 64, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 128, 147, 153, 154, 155, 156, 157, 158, 160, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 239, 247, 255, 271, 285, 298, 303, 304, 306, 308, 316, 334, 337, 341, 342, 343, 344, 345, 346, 347, 378, 402, 403, 407, 439, 454, 463, 474, 478, 479, 483, 487, 489, 504, 509, 510, 511, 512, 513, 514, 521, 532, 536, 553, 563, 567, 571, 572, 573, 574, 580, 581, 595, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 644, 649, 729, 730, 731, 732, 733, 770], "rvec": [7, 9, 12, 26, 31, 111, 172, 173, 193, 200], "f": [7, 8, 9, 26, 31, 74, 108, 110, 111, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 193, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 255, 334, 337, 454, 474, 479, 480, 481, 483, 509, 513, 516, 518, 521, 529, 536, 553, 555, 557, 576, 577, 580, 581, 595, 603, 604, 613, 614, 629, 631, 637, 638, 645, 647, 648, 651, 735], "param": [7, 9, 12, 17, 19, 26, 31, 43, 107, 108, 109, 110, 111, 112, 114, 119, 159, 200, 283, 302], "rmat": [7, 9, 12, 26, 200], "trace": [7, 188, 192, 193, 199, 227, 506, 581, 644], "curv": [7, 186, 187, 188, 191, 192, 196, 199, 247, 279, 378, 460, 483, 484, 489, 493, 494, 505, 506, 538, 558, 565, 581, 595, 604, 644, 736], "parameter": [7, 114, 186, 188, 193, 194, 195, 196, 199, 227, 250, 290, 296, 487, 489, 495, 496, 504, 506, 581, 644], "lambda": [7, 17, 18, 26, 31, 107, 108, 109, 110, 111, 112, 114, 153, 154, 155, 156, 157, 158, 177, 178, 179, 180, 181, 188, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 250, 290, 296, 410, 451, 484, 487, 489, 493, 495, 496, 499, 504, 505, 506, 581, 604, 607, 609, 611, 616, 618, 621, 623, 625, 644], "vari": [7, 114, 255, 475], "constrain": [7, 17, 26, 28, 66, 81, 114, 153, 154, 155, 156, 157, 158, 183, 196, 604, 605, 608, 609], "min_": [7, 26, 28, 31, 183, 200], "textrm": 7, "qquad": 7, "h": [7, 12, 17, 21, 26, 31, 77, 78, 79, 80, 109, 114, 153, 154, 155, 156, 157, 158, 175, 177, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 249, 255, 303, 378, 403, 474, 479, 483, 565, 571, 572, 604, 605, 608, 735], "le": [7, 12, 17, 19, 26, 28, 31, 108, 109, 183, 200], "_": [7, 8, 12, 26, 31, 200, 403], "quadrat": [7, 17, 31, 45, 106, 111, 113, 114, 153, 154, 155, 156, 157, 158, 165, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 247, 474, 484, 581, 604, 605], "tran": [7, 9, 12, 31, 108, 109, 110, 111, 200], "q": [7, 9, 12, 17, 18, 30, 111, 114, 200, 247, 287, 295, 376, 378, 383, 455, 538, 581, 595, 639, 737], "k": [7, 9, 17, 19, 111, 112, 113, 114, 168, 186, 187, 188, 199, 247, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 294, 295, 298, 306, 312, 376, 383, 402, 407, 462, 474, 489, 492, 494, 498, 501, 506, 508, 527, 534, 535, 572, 644, 655, 673, 674, 733], "l": [7, 17, 19, 26, 30, 31, 106, 108, 113, 114, 116, 117, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 254, 283, 303, 304, 305, 474, 483, 521, 538, 565, 603, 604, 605, 649, 730, 731, 735], "math_model": [7, 245, 249, 301, 315, 329, 336, 402, 407, 450, 452, 454, 456, 472], "opt_model": [7, 66, 107, 113, 193, 200, 216, 217, 218, 219, 220, 221, 222, 226, 227, 308, 402, 474, 521, 614], "mp_idx_manag": [7, 8, 106, 114, 226, 227, 302, 308, 402, 403, 404, 405, 406], "nonzero": [7, 8], "auxiliari": [7, 303, 304, 305, 308], "appropri": [7, 9, 13, 17, 19, 26, 114, 228, 252, 302, 303, 483, 527, 562, 568, 569, 575, 655, 729], "characterist": 7, "mm_element": [7, 12, 17, 18, 245, 255, 301, 308, 348, 356, 357, 366, 373, 374, 382, 388, 390, 394, 395, 396, 400, 407, 472], "mme": [7, 336, 378, 407], "nme_bus_pf_acp": 7, "nme_bus_opf_acp": 7, "And": [7, 12, 19, 20, 458, 459], "similar": [7, 17, 43, 483, 515, 516, 518, 735], "mme_gen": [7, 245, 376, 380, 381, 472], "similarli": [7, 8, 12, 106, 109], "inject": [7, 9, 12, 17, 18, 19, 20, 271, 283, 284, 285, 295, 298, 303, 304, 305, 306, 339, 347, 378, 402, 403, 406, 451, 483, 487, 489, 504, 511, 514, 519, 522, 524, 528, 533, 536, 551, 553, 554, 557, 565, 569, 570, 572, 573, 575, 577, 597, 598, 599, 600, 601, 602, 604, 737], "aggreg": [7, 43, 77, 78, 108, 111, 112, 114, 303, 306, 403, 406, 407, 449, 474], "piecewis": [7, 17, 247, 248, 262, 376, 379, 383, 483, 555, 580, 581, 595, 628], "angl": [7, 8, 9, 18, 20, 271, 272, 273, 274, 303, 304, 305, 306, 349, 351, 352, 353, 361, 403, 404, 405, 406, 407, 410, 455, 471, 478, 483, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 524, 528, 533, 536, 551, 553, 554, 564, 569, 570, 581, 595, 597, 598, 599, 600, 601, 602, 604, 606, 607, 624, 625, 737], "mme_branch": [7, 245, 349, 354, 355, 472], "sens": 7, "respons": [7, 17, 255], "data_model_update_off": [7, 336], "zero": [7, 8, 9, 17, 19, 26, 31, 40, 41, 45, 59, 108, 111, 114, 115, 118, 120, 151, 153, 154, 155, 157, 158, 159, 175, 177, 189, 190, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 249, 302, 407, 474, 477, 483, 484, 485, 486, 489, 490, 498, 501, 503, 510, 553, 558, 564, 572, 573, 576, 581, 595, 655, 656, 733], "out": [7, 12, 17, 20, 31, 105, 153, 154, 155, 156, 157, 158, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 233, 249, 251, 453, 476, 477, 478, 482, 483, 484, 498, 501, 530, 553, 557, 558, 562, 581, 631], "data_model_update_on": [7, 17, 336, 350, 353, 354, 355, 357, 361, 362, 363, 364, 365, 374, 377, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400], "differnt": 7, "avoid": [7, 13, 66, 114, 153, 154, 155, 156, 157, 158, 189, 527], "duplic": [7, 106, 113, 114, 249, 252, 255, 307], "mm_shared_": 7, "evalu": [7, 12, 26, 108, 109, 110, 111, 112, 114, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 199, 237, 247, 304, 305, 337, 451, 474, 509, 573, 578, 606, 607, 608, 609, 610, 611, 613, 614, 617, 618, 620, 621, 622, 623, 624, 625, 628, 629, 734], "jacobian": [7, 9, 12, 26, 109, 114, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 194, 195, 196, 199, 303, 304, 305, 378, 403, 570, 581, 599, 602, 604, 608], "put": [7, 17, 19], "kei": [8, 113, 255, 256], "modular": [8, 228], "deriv": [8, 21, 109, 110, 111, 114, 167, 169, 171, 174, 199, 247, 302, 303, 304, 305, 306, 316, 410, 472, 474, 487, 489, 496, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 536, 573, 581, 595, 604, 613, 614, 629, 680, 682, 760, 761, 762, 763], "featur": [8, 11, 22, 23, 24, 25, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 199, 228, 229, 230, 462, 472, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 581, 770], "fulli": [8, 113, 770], "captur": 8, "oper": [8, 9, 17, 26, 30, 62, 114, 145, 174, 243, 407, 526, 559, 581], "condit": [8, 26, 31, 43, 58, 62, 66, 237, 243, 581, 595], "non": [8, 9, 17, 19, 26, 45, 59, 64, 66, 77, 114, 115, 118, 120, 151, 159, 167, 169, 171, 174, 175, 177, 199, 254, 302, 303, 304, 305, 306, 402, 403, 406, 407, 420, 423, 424, 427, 430, 431, 432, 435, 455, 475, 483, 484, 485, 526, 530, 581, 595, 606, 638], "z": [8, 9, 17, 19, 26, 110, 111, 112, 113, 114, 186, 199, 303, 306, 341, 344, 347, 402, 406, 407, 474, 483, 487, 489, 495, 496, 499, 504, 574, 581, 604, 605, 737], "track": [8, 106, 113, 114, 302, 308, 402, 474], "n_p": [8, 9, 303, 306], "n_z": [8, 62, 306], "tn5": [8, 9, 10, 21], "lot": [8, 108, 111, 114, 581, 595], "especi": [8, 243], "real": [8, 9, 17, 19, 26, 30, 74, 236, 303, 304, 402, 403, 404, 407, 476, 483, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 524, 536, 551, 553, 554, 556, 558, 561, 565, 569, 580, 604, 608, 610, 611, 620, 622, 624, 644, 650, 655], "predefin": [8, 17, 19], "activ": [8, 9, 12, 13, 17, 18, 20, 178, 255, 271, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 293, 295, 298, 303, 306, 339, 347, 370, 376, 378, 383, 468, 469, 470, 471, 478, 479, 480, 481, 483, 497, 498, 567, 581, 595, 613, 617, 618, 621, 623, 625, 641, 644, 655, 733], "va": [8, 9, 17, 112, 255, 273, 303, 304, 305, 306, 308, 403, 404, 405, 406, 418, 419, 471, 483, 515, 522, 523, 554, 564, 569, 604, 606], "n_": [8, 9, 247, 303], "left": [8, 9, 17, 19, 26, 31, 108, 114, 153, 154, 155, 156, 157, 158, 172, 173, 178, 179, 180, 181, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 303, 306, 732], "bb": [8, 9, 17, 306, 412], "kk": [8, 9, 17, 111, 306, 407, 430, 435, 474], "pv": [8, 9, 17, 20, 246, 273, 274, 306, 339, 402, 407, 412, 414, 442, 447, 451, 477, 479, 480, 481, 483, 487, 488, 489, 495, 496, 499, 501, 504, 522, 523, 528, 533, 535, 554, 576, 577, 597, 598, 599, 600, 601, 602, 627, 644, 650, 737, 744, 745, 748, 749], "suscept": [8, 9, 271, 285, 295, 483, 553, 554], "coeffici": [8, 9, 17, 31, 108, 111, 114, 153, 154, 155, 156, 157, 158, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 283, 303, 306, 483, 555], "gp": [8, 17, 306, 406], "cc": [8, 9, 17, 19, 303, 306, 535], "gi": [8, 303], "compon": [8, 17, 114, 191, 247, 248, 287, 303, 486, 493, 509, 515], "ilin": [8, 17, 19, 303], "slin": [8, 17, 19, 303], "arbitrari": [8, 17, 19, 113, 167, 171, 249, 255, 303, 489, 502], "snln": [8, 17, 19, 303, 403, 439], "inln": [8, 17, 19, 303, 403, 439], "six": [8, 17, 19, 20, 458, 743, 744, 745], "yy": [8, 9, 17, 19, 20, 303, 409, 436, 439, 444, 448, 742], "ll": [8, 9, 17, 19, 113, 114, 303], "nn": [8, 9, 17, 19, 303, 407, 413, 414, 420, 424, 427, 432], "iv": [8, 9, 17, 19, 303], "sv": [8, 9, 17, 19, 303, 438, 439, 535], "admitt": [8, 9, 285, 409, 436, 448, 479, 480, 481, 487, 489, 504, 510, 511, 513, 514, 528, 533, 570, 575, 581, 597, 598, 599, 600, 601, 602, 608, 609, 610, 611, 617, 618, 737], "matric": [8, 9, 17, 19, 30, 42, 62, 63, 64, 116, 168, 236, 285, 303, 402, 403, 406, 407, 483, 485, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 526, 528, 559, 562, 568, 569, 570, 575, 604, 605, 653, 656, 729, 732, 735], "rather": [8, 17, 38, 42, 108, 114, 160, 227, 244, 247, 303, 304, 378, 403, 463, 483, 523, 527, 556, 572], "dv": [8, 303, 516, 517, 518, 519], "conj": [8, 9, 303, 515, 517, 518, 519], "Then": [8, 13, 243, 249, 402, 465, 526, 604, 605], "written": [8, 21, 26, 232, 233, 236, 237, 239], "cdiag": [8, 303], "invc": [8, 303], "assum": [8, 17, 42, 43, 108, 109, 110, 111, 114, 117, 255, 285, 378, 403, 450, 452, 454, 456, 457, 466, 468, 469, 470, 471, 479, 480, 481, 484, 527, 529, 553, 554, 557, 558, 562, 564, 573, 608, 609, 619, 631, 632, 636, 644, 645, 646, 647, 648, 650, 651, 655, 733], "net_model": [8, 245, 249, 301, 303, 308, 336, 403, 404, 405, 406, 407, 414, 450, 452, 454, 456, 472], "nm_element": [8, 17, 18, 19, 245, 301, 302, 303, 304, 305, 306, 336, 402, 403, 404, 405, 406, 408, 413, 414, 420, 423, 424, 431, 436, 437, 438, 443, 448, 472, 758], "special": [8, 60, 109, 113, 462, 556], "treatment": 8, "pq": [8, 12, 20, 246, 273, 274, 279, 377, 378, 402, 407, 414, 460, 477, 483, 487, 488, 489, 495, 496, 499, 501, 504, 522, 523, 528, 533, 554, 558, 565, 597, 598, 599, 600, 601, 602, 604, 627, 644, 650, 655, 737, 743, 747, 748, 749], "node_typ": [8, 17, 245, 402, 407, 413, 414, 472], "about": [8, 189, 191, 192, 228, 476, 482, 490, 491, 493, 497, 500, 502, 503, 505, 507], "assembl": [8, 106, 108, 111, 114, 403, 474], "set_node_type_ref": [8, 402, 407, 413], "set_node_type_pv": [8, 402, 407, 413], "set_node_type_pq": [8, 402, 407, 413], "1000": [8, 20, 170, 581, 595, 732], "2000": [8, 20, 199], "nme_bus_acp": [8, 245, 472], "nme_gen_acp": [8, 245, 472], "brief": 8, "rel": [8, 14, 16, 66, 114, 153, 154, 155, 156, 157, 158, 476, 529, 581, 595], "nme_bu": [8, 245, 417, 418, 419, 472], "nme_gen": [8, 245, 427, 430, 472], "neg": [8, 107, 108, 109, 110, 111, 112, 114, 155, 156, 157, 167, 168, 169, 170, 171, 174, 180, 181, 205, 208, 209, 210, 489, 556, 730, 732], "ident": [8, 9, 17, 26, 31, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 174, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 236, 402, 474, 489, 529, 581, 644], "nme_branch": [8, 245, 409, 412, 472], "nme_load": [8, 245, 439, 442, 472], "equal": [8, 17, 26, 42, 58, 59, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 175, 177, 178, 179, 180, 181, 232, 233, 236, 237, 239, 243, 304, 360, 402, 403, 479, 480, 481, 581, 595, 603, 604, 610, 617, 620, 621, 626, 649, 655, 730, 731, 732], "consum": 8, "stack": [8, 17, 19, 109, 112, 114, 116, 303, 306, 402, 407], "seri": [8, 238, 271, 285, 298, 536], "t": [8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 58, 62, 66, 78, 113, 114, 167, 169, 171, 174, 189, 199, 243, 247, 303, 403, 450, 462, 463, 465, 467, 483, 487, 489, 490, 496, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 536, 538, 553, 557, 562, 570, 637], "cscal": [8, 9, 17, 19, 287], "y": [8, 19, 108, 109, 110, 111, 112, 114, 239, 285, 303, 304, 305, 402, 529, 567, 604], "i_": 8, "i_f": 8, "i_t": 8, "n_k": [8, 9, 17, 19, 303, 306], "cmat": [8, 9, 26, 31], "cccc": [8, 200], "1_": 8, "2_": 8, "ddot": 8, "cvec": [8, 9, 17, 19], "_f": 8, "1_f": 8, "2_f": 8, "vdot": 8, "_t": 8, "1_t": 8, "2_t": 8, "incid": [8, 9, 17, 19, 402, 403, 406, 407, 486], "character": 8, "style": [9, 156, 208, 581, 595], "theta": 9, "uptheta": 9, "cvecg": 9, "rmatg": 9, "cmatg": 9, "hat": 9, "diag": [9, 12, 111, 474, 515, 516, 517, 518, 519], "diagon": [9, 17, 19, 402], "conjug": 9, "transpos": [9, 26, 30, 108, 109, 110, 114, 178, 179, 180, 181, 194, 195, 196, 303, 304, 378, 403], "re": [9, 11, 13, 19, 114, 153, 154, 155, 156, 157, 158, 189, 209, 234, 240, 527, 650], "im": [9, 19], "imaginari": [9, 17, 19, 303, 304, 403, 404, 407, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 610, 611, 620, 622, 624], "wise": [9, 81, 628, 733], "expon": 9, "f_": [9, 110, 247], "gradient": [9, 26, 109, 110, 111, 114, 175, 176, 178, 179, 180, 181, 194, 195, 196, 247, 581, 595, 606, 608, 610, 613, 614, 617, 620, 622, 624], "w": [9, 14, 16, 43, 56, 128, 140, 147, 167, 169, 171, 174, 178, 199, 302, 303, 304, 305, 306, 314, 319, 321, 324, 326, 328, 378, 403, 474, 479, 487, 489, 496, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 535, 538, 570, 581, 595, 604, 605, 662, 712, 716, 767], "lam": [9, 12, 26, 109, 114, 117, 156, 178, 179, 180, 181, 199, 290, 296, 303, 304, 305, 316, 368, 378, 403, 487, 488, 489, 495, 496, 499, 504, 511, 512, 514, 625, 644], "hessian": [9, 12, 26, 109, 110, 114, 176, 177, 178, 179, 180, 181, 247, 303, 304, 305, 378, 403, 581, 595, 607, 609, 611, 613, 614, 616, 618, 621, 623, 625], "dimens": [9, 17, 39, 42, 60, 62, 106, 109, 110, 111, 112, 113, 114, 168, 198, 199, 255, 256, 307, 378, 402, 407, 462, 463, 503, 524, 527, 537, 551, 561, 567, 578, 655, 656, 733, 734], "j": [9, 17, 26, 62, 106, 108, 109, 110, 111, 112, 113, 114, 167, 168, 169, 171, 174, 175, 199, 247, 287, 402, 407, 462, 474, 486, 516, 517, 518, 519, 536, 570, 572, 608, 649, 731], "natur": [9, 188, 195, 199, 506, 534, 581], "log": [9, 21, 186, 189, 190, 199, 489, 490], "approx": [9, 178, 581, 595], "71828": 9, "sqrt": [9, 170], "n_n": [9, 303, 306], "size": [9, 17, 26, 43, 77, 78, 79, 80, 108, 113, 114, 186, 188, 189, 194, 195, 196, 199, 232, 233, 236, 237, 239, 243, 302, 307, 462, 463, 474, 487, 489, 490, 495, 498, 501, 506, 572, 581, 644, 655], "vvi": 9, "vri": 9, "vii": 9, "vmi": 9, "vai": 9, "magnitud": [9, 17, 18, 20, 271, 273, 274, 276, 279, 280, 283, 303, 304, 305, 360, 361, 405, 407, 453, 468, 483, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 528, 533, 536, 551, 554, 558, 570, 573, 574, 581, 595, 597, 598, 599, 600, 601, 602, 604, 620, 621, 622, 623, 644, 650, 737], "vr": [9, 303, 304, 402, 403, 404, 417, 515, 606], "vi": [9, 303, 304, 403, 404, 417, 515, 606], "vm": [9, 18, 110, 111, 114, 255, 273, 303, 304, 305, 308, 360, 403, 405, 418, 468, 474, 483, 507, 515, 523, 554, 573, 604], "dvm": [9, 510, 511, 512, 513, 514, 516, 517, 518, 519], "inv": 9, "invers": 9, "frac": [9, 12, 31, 111, 200], "z_i": 9, "_i": [9, 287], "zr": [9, 17, 19, 303, 308, 402, 403], "zi": [9, 17, 19, 303, 308, 402, 403], "j_": 9, "affin": 9, "dd": [9, 474, 576], "aa": [9, 108], "combin": [9, 114, 166, 303, 306, 407, 474, 535, 735], "ccc": [9, 19], "underlin": 9, "obtain": [9, 43, 114, 303, 304, 378, 403, 407], "multipli": [9, 17, 26, 31, 58, 60, 109, 113, 114, 117, 153, 154, 155, 156, 157, 158, 177, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 303, 304, 378, 403, 474, 476, 509, 510, 511, 512, 513, 514, 521, 553, 554, 556, 557, 558, 575, 581, 603, 604, 607, 609, 611, 618, 621, 623, 625, 730], "superscript": 9, "subscript": [9, 247, 248, 256], "carleton": 10, "coffrin": 10, "et": [10, 13, 114, 450, 604, 631, 644, 645, 646, 647, 648, 650, 651, 735], "al": [10, 13], "progress": [10, 26, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 484, 581, 595, 632, 633, 635, 636, 638, 639, 735], "www": [10, 114, 115, 118, 120, 131, 136, 141, 142, 151, 167, 168, 169, 170, 171, 174, 180, 181, 199, 201, 535, 543, 545, 550, 581, 595], "overleaf": 10, "5d94e3765cb3ba000129df3c": 10, "zimmerman": [10, 26, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 769], "octob": [10, 769], "2020": [10, 769], "org": [10, 13, 21, 23, 26, 113, 114, 119, 145, 151, 178, 179, 180, 181, 184, 208, 210, 463, 479, 480, 481, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 576, 581, 595, 769], "much": [11, 256], "task_pf": [11, 245, 451, 452, 454, 456, 457, 469, 471, 472], "task_cpf": [11, 245, 452, 468, 469, 472], "usag": [11, 307, 553, 554, 555, 557, 558, 568], "pattern": 11, "occur": [11, 60], "flowchart": 11, "satisfi": [11, 26, 30, 31, 644, 650], "reactiv": [11, 12, 17, 18, 20, 43, 66, 255, 271, 276, 277, 279, 280, 282, 283, 284, 285, 287, 295, 298, 339, 370, 376, 378, 455, 476, 479, 480, 481, 483, 500, 501, 512, 515, 524, 536, 551, 553, 554, 556, 558, 565, 567, 580, 581, 595, 604, 613, 617, 618, 621, 623, 625, 630, 641, 644, 650, 655, 733], "mark": [11, 483, 636], "star": [11, 635], "sub": [11, 21, 77, 78, 79, 80, 109, 110, 112, 113, 114, 255, 256, 454, 529, 636], "accomplish": 11, "next_dm": [11, 450, 455], "next_nm": [11, 450], "next_mm": [11, 450, 451], "empti": [11, 12, 17, 26, 31, 42, 62, 64, 65, 66, 77, 78, 79, 80, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 156, 159, 184, 189, 190, 199, 208, 228, 247, 250, 251, 252, 255, 256, 302, 303, 304, 306, 308, 367, 375, 378, 389, 401, 403, 404, 405, 450, 455, 490, 561, 573, 581, 630, 637, 638, 655, 656, 732, 733], "termin": [11, 17, 26, 66, 114, 157, 171, 178, 180, 186, 191, 192, 199, 209, 489, 492, 498, 501, 508, 521, 528, 533, 581, 595, 597, 598, 599, 600, 601, 602, 603, 604, 634, 639, 641, 644, 645, 646, 647, 648, 650, 651, 737], "On": [11, 26], "trigger": [11, 187, 188, 191, 192, 492, 494, 498, 501, 506, 508, 644], "enforc": [11, 451, 455, 566, 581, 595], "constraint": [11, 17, 18, 21, 26, 31, 66, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 153, 154, 155, 156, 157, 158, 175, 177, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 247, 254, 272, 276, 292, 294, 303, 304, 308, 310, 311, 313, 314, 318, 320, 323, 325, 327, 331, 332, 333, 334, 335, 336, 349, 350, 351, 352, 353, 361, 368, 369, 370, 371, 372, 377, 378, 379, 394, 395, 403, 420, 461, 472, 474, 475, 521, 524, 538, 551, 564, 565, 566, 567, 581, 595, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 649, 731, 732, 736], "print_soln": [11, 450], "print": [11, 19, 29, 36, 74, 75, 102, 105, 113, 121, 152, 161, 185, 225, 231, 232, 233, 236, 237, 238, 239, 242, 249, 251, 255, 272, 275, 276, 278, 281, 282, 284, 286, 289, 291, 294, 297, 299, 450, 453, 465, 468, 469, 470, 471, 475, 482, 484, 485, 581, 595, 596, 631, 644, 645, 646, 647, 648, 650, 651, 735, 764, 768], "save_soln": [11, 450], "save": [11, 26, 77, 78, 79, 80, 96, 97, 98, 100, 108, 113, 114, 252, 253, 403, 406, 450, 452, 454, 456, 465, 468, 469, 470, 471, 475, 483, 484, 525, 527, 561, 632, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654], "shape": [12, 460], "_0": [12, 17, 283], "lower": [12, 17, 26, 31, 107, 108, 109, 110, 111, 112, 114, 116, 117, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 247, 271, 272, 273, 276, 279, 282, 283, 284, 292, 402, 483, 501, 508, 521, 538, 553, 554, 557, 558, 565, 581, 603, 604, 606, 607, 649, 730, 731, 732, 736], "bound": [12, 17, 19, 26, 31, 107, 108, 109, 110, 111, 112, 114, 116, 117, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 249, 271, 272, 273, 276, 279, 282, 283, 284, 292, 304, 402, 521, 538, 581, 603, 604, 606, 607], "mathrm": [12, 17, 26, 31, 200, 247, 283, 303, 403], "belong": [12, 245, 248, 340, 649, 655, 731, 733], "mme_gen_opf_ac": [12, 245, 378, 472], "mme_gen_opf_ac_ov": [12, 245, 460, 472], "If": [12, 13, 17, 26, 36, 61, 62, 63, 64, 77, 78, 102, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 151, 159, 167, 169, 171, 174, 178, 179, 180, 181, 184, 188, 189, 225, 228, 232, 234, 236, 242, 243, 255, 302, 307, 463, 465, 474, 483, 484, 506, 516, 517, 518, 519, 524, 525, 526, 527, 538, 551, 552, 553, 556, 559, 561, 562, 564, 570, 571, 572, 573, 581, 604, 605, 628, 630, 631, 644, 650, 652, 653, 654, 655, 656, 732, 733, 735, 768], "write": [12, 107, 108, 109, 110, 111, 112, 243, 475, 549, 653, 654], "h_": [12, 303, 378], "der": [12, 109, 110, 111, 629], "pp": [12, 17, 26, 479, 480, 576, 626], "muv": [12, 26, 303, 378], "qq": [12, 111, 114], "add_nln_constraint": [12, 113, 114, 474], "xx": [12, 17, 112, 114, 247, 304, 368, 371, 378, 410, 474], "furthermor": [12, 43], "subset": [12, 42, 60, 76, 106, 107, 108, 109, 110, 111, 112, 113, 114, 247, 303, 304, 306, 378, 403, 404, 405, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "idx": [12, 17, 19, 39, 40, 41, 42, 59, 77, 78, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 189, 199, 247, 248, 255, 273, 279, 302, 303, 304, 305, 306, 307, 308, 337, 339, 378, 402, 403, 404, 405, 407, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 430, 432, 435, 439, 474, 490, 537, 561, 595, 620, 621, 622, 623, 644, 656, 732], "47": [12, 18, 20], "49": [12, 18, 106, 113, 402], "dh": [12, 26, 109, 114, 175, 178, 179, 180, 181, 303, 378, 608], "oval_pq_capability_fcn": [12, 378], "p0": [12, 378], "q0": [12, 378, 460], "a2": [12, 378], "b2": [12, 378], "deal": [12, 114, 729], "ng": [12, 64, 74, 247, 248, 483, 512, 524, 534, 535, 551, 567, 573, 580, 581, 595, 630, 649, 655, 731, 733], "length": [12, 20, 42, 60, 153, 154, 155, 156, 157, 158, 168, 189, 194, 196, 285, 307, 487, 489, 499, 581], "isempti": [12, 17, 462, 463], "nargout": [12, 26, 167, 169, 171, 174, 178, 179, 180, 181, 199], "dhdp": 12, "spdiag": [12, 17], "dhdq": 12, "50": [12, 18, 43, 197, 307, 502, 655], "53": [12, 502], "d2h": [12, 114, 303, 378, 609], "oval_pq_capability_hess": [12, 378], "zz": [12, 19], "spars": [12, 19, 23, 30, 31, 114, 116, 153, 154, 155, 156, 157, 158, 175, 176, 177, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 302, 303, 304, 378, 403, 407, 474, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 573, 604, 605], "d2h_pp": 12, "d2h_qq": 12, "now": [12, 17, 37, 104, 226, 483, 770], "add_constraint": [12, 17, 308, 336, 350, 351, 352, 353, 361, 368, 369, 370, 371, 372, 377, 378, 379, 383, 394, 395], "pqoval": 12, "pg": [12, 17, 18, 64, 74, 108, 110, 111, 112, 113, 114, 279, 402, 427, 430, 468, 469, 470, 471, 474, 477, 479, 480, 481, 483, 484, 497, 523, 555, 558, 565, 566, 567, 573, 578, 581, 604, 629, 649, 655, 731, 733, 734], "qg": [12, 18, 66, 108, 110, 114, 279, 427, 474, 477, 483, 500, 523, 558, 565, 566, 567, 573, 581, 604, 629, 630, 650, 655, 733], "data_model_el": [12, 17, 19, 256, 336, 407], "p_lb": 12, "pg_lb": [12, 279, 402], "p_ub": 12, "pg_ub": [12, 279, 402], "q_lb": 12, "qg_lb": [12, 279], "q_ub": 12, "qg_ub": [12, 279], "squar": [12, 303, 304, 378, 509, 515], "horizont": [12, 79, 80, 199, 378, 407, 462, 463, 556], "radiu": 12, "vertic": [12, 77, 78, 79, 80, 114, 199, 378, 402, 462, 463, 556], "hess": [12, 106, 109, 113, 114, 474], "let": [12, 17, 19, 474, 515, 580, 581, 595], "know": [12, 339], "our": [12, 17, 19, 243, 484], "place": [12, 114, 475, 537, 559, 576, 656, 732], "xt_oval_cap_curv": [12, 245, 472], "task_tag": [12, 18, 301, 308, 315, 329, 458, 459, 460, 461], "otherwis": [12, 14, 16, 18, 63, 64, 106, 109, 110, 113, 114, 189, 199, 228, 236, 237, 238, 247, 255, 402, 403, 407, 465, 467, 474, 484, 486, 490, 492, 504, 508, 521, 603, 604, 630, 631, 632, 633, 635, 636, 638, 639, 649, 653, 654, 731, 732, 733], "39": [12, 18, 595], "bind": [12, 17, 26, 581, 595, 732], "expect": [12, 17, 19, 20, 38, 66, 105, 106, 109, 114, 199, 227, 232, 234, 236, 238, 240, 244, 253, 454, 477, 484, 492, 508, 729, 730, 731, 732], "restrict": [12, 66, 460], "case39": 12, "10": [12, 13, 17, 18, 20, 26, 28, 31, 43, 153, 154, 155, 157, 158, 167, 168, 170, 173, 174, 178, 179, 180, 181, 183, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 234, 236, 240, 292, 462, 476, 479, 480, 481, 483, 484, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 553, 554, 557, 558, 576, 581, 595, 655, 732, 733, 769], "______": 12, "_______": 12, "671": 12, "59": [12, 18, 20, 479], "140": [12, 156], "646": 12, "300": [12, 18, 156, 208, 595], "16": [12, 19, 20, 111, 483, 553, 554, 557, 558, 595], "299": 12, "99": [12, 18, 201], "652": 12, "115": [12, 18, 595], "12": [12, 17, 18, 20, 108, 200, 232, 233, 236, 237, 239, 243, 483, 553, 554, 557, 558, 747, 748, 749], "508": [12, 18], "139": 12, "61": [12, 18, 480, 576, 595], "661": 12, "45": 12, "222": 12, "93": [12, 43, 106, 113, 402, 595], "580": [12, 595], "60": [12, 18, 20, 307, 595], "645": 12, "564": 12, "8208": 12, "654": 12, "03": [12, 18, 20], "32": [12, 18, 595], "735": 12, "689": [12, 20], "81": [12, 18, 595], "886": 12, "682": 12, "74": 12, "171": 12, "94": [12, 484], "639": 12, "42": [12, 20, 204, 595], "128": 12, "46": 12, "672": 12, "253": 12, "14": [12, 18, 20, 483, 553, 554, 557, 558], "641": 12, "75": [12, 18], "147": 12, "08": [12, 43], "507": 12, "89": [12, 17, 18, 43, 595], "85": [12, 18, 20, 595], "223": 12, "649": 12, "87": [12, 18, 106, 113, 402, 481, 595], "164": 12, "86": [12, 595], "579": 12, "41": [12, 19, 20, 502, 595], "125": [12, 18], "563": 12, "73": [12, 595], "121": [12, 595], "662": 12, "51": [12, 18, 197, 502], "8392": 12, "701": 12, "248": 12, "notic": [12, 17, 19], "display_soln": [12, 107, 108, 109, 110, 111, 112, 114], "nli": [12, 109, 113, 114, 254, 454, 474, 603, 604], "nonlin": [12, 114], "ineq": [12, 117], "ub": [12, 17, 18], "mu_ub": [12, 17, 292], "3e": 12, "06": [12, 18, 20, 484], "90806": 12, "07": 12, "270": [12, 18], "778": 12, "9e": 12, "28": 12, "8787": 12, "7e": 12, "117": 12, "1e": [12, 26, 66, 78, 114, 115, 120, 153, 154, 155, 156, 157, 158, 159, 167, 168, 170, 174, 178, 199, 271, 581, 595], "779": 12, "782": 12, "8e": 12, "103": 12, "48": [12, 18, 481], "459": 12, "163": 12, "4e": 12, "566": [12, 18], "547": 12, "31337": 12, "03857": 12, "lib": [12, 13, 14, 16, 17, 18, 19, 20, 243], "instal": [13, 15, 29, 38, 75, 105, 121, 152, 161, 185, 227, 231, 244, 465, 472, 596, 604, 770], "python": 13, "virtual": 13, "unix": [13, 234, 240], "maco": 13, "window": [13, 77, 78, 79, 80, 234, 240], "python3": 13, "venv": 13, "env": 13, "bin": 13, "script": [13, 238, 484, 523], "confirm": 13, "leav": [13, 573, 630], "finish": [13, 166, 233, 450], "deactiv": 13, "sphinxcontrib": 13, "matlabdomain": 13, "md": [13, 21, 58, 59, 62, 65, 77, 78, 79], "rtd": 13, "theme": 13, "pip": 13, "texliv": 13, "latex": [13, 21], "directori": [13, 14, 15, 16, 77, 78, 79, 80, 96, 97, 98, 100, 151, 243, 464, 465, 529], "latexpdf": 13, "twice": [13, 407, 655, 732], "pick": 13, "ensur": [13, 402, 489], "content": [13, 17, 60, 115, 118, 119, 120, 151, 159, 184, 234, 462, 463, 637, 644], "cross": 13, "date": [13, 29, 75, 121, 152, 161, 185, 228, 231, 596], "everyth": [13, 232, 581, 595, 770], "properli": [13, 108, 111, 243], "creation": [13, 17, 548, 765], "rst": [13, 14, 15, 16], "stub": [13, 14, 15, 16], "mani": [13, 20, 108, 243, 644, 737], "pars": [13, 107, 108, 109, 112, 114, 605, 636, 637, 638], "analyz": 13, "symlink": [13, 14, 15, 16], "subdirectori": 13, "generate_matpower_autodoc": 13, "hard": [13, 19, 732], "prompt": [13, 243, 465], "rebuild": [13, 249, 255, 570], "ref": [13, 14, 15, 17, 20, 246, 273, 274, 307, 402, 407, 414, 455, 477, 487, 488, 489, 501, 522, 523, 528, 533, 554, 597, 598, 599, 600, 601, 602, 624, 625, 627, 644, 737, 746, 748, 749], "generate_autodoc_stub": [13, 15], "generate_source_symlink": [13, 15], "j\u00f8rgen": 13, "cederberg": 13, "2024": [13, 20, 228, 549], "contrib": 13, "21": [13, 20, 483, 553, 557, 558, 562, 747, 748, 749], "zenodo": [13, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 769], "doi": [13, 26, 479, 480, 481, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 576, 769], "5281": [13, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 769], "7746009": 13, "dest": [14, 16], "success": [14, 16, 20, 36, 102, 107, 108, 109, 110, 111, 112, 157, 186, 209, 225, 242, 243, 450, 452, 454, 456, 465, 479, 480, 481, 489, 521, 522, 581, 595, 603, 604, 612, 631, 641, 644, 645, 646, 647, 648, 649, 650, 651, 735, 768], "err_list": [14, 16], "stub_typ": [14, 16], "destdir": [14, 16], "prepend": [14, 16], "dir": [14, 16], "gh_base_url": [14, 16], "url": [14, 16], "mod": [14, 16], "modul": [14, 16], "pkg": [14, 16], "src_path": [14, 16], "o": [14, 16], "error": [14, 16, 61, 114, 166, 249, 255, 463, 534, 535, 562, 630, 655], "fatal": [14, 16, 166], "blob": [14, 16], "class1": [14, 16], "class2": [14, 16], "class3": [14, 16], "class4": [14, 16], "func1": [14, 16], "func2": [14, 16], "func3": [14, 16], "func4": [14, 16], "install_dir": 15, "src": 16, "demonstr": [17, 18], "transform": [17, 18, 19, 20, 43, 270, 271, 298, 299, 348, 349, 350, 351, 352, 353, 354, 355, 400, 401, 408, 448, 458, 483, 484, 553, 604, 605, 632, 635, 742], "discuss": [17, 19], "exactli": [17, 188, 189, 484, 506], "p_": [17, 283], "p_1": 17, "_1": [17, 19, 283], "diagram": [17, 19], "_2": [17, 19], "_k": [17, 19], "p_k": 17, "q_k": 17, "p_2": 17, "q_1": 17, "q_2": 17, "setpoint": [17, 20, 249, 279, 280, 283, 483, 557, 558, 644], "appli": [17, 42, 43, 59, 60, 115, 118, 119, 120, 151, 153, 154, 155, 156, 157, 158, 159, 166, 177, 184, 199, 234, 240, 255, 463, 466, 468, 469, 470, 471, 476, 479, 480, 481, 556, 572, 580, 581, 604, 605], "implmement": [17, 19], "legacy_dclin": [17, 18, 459], "whose": [17, 60, 106, 107, 108, 109, 110, 111, 112, 113, 114, 168, 186, 238, 407, 465, 482, 525, 530, 552, 562, 571, 572, 581, 620, 621, 622, 623, 637, 644, 730, 732], "role": 17, "piec": [17, 81, 255, 628, 630], "flag": [17, 26, 31, 66, 74, 77, 78, 79, 80, 107, 108, 109, 110, 111, 112, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 187, 188, 189, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 249, 251, 255, 450, 489, 490, 492, 494, 503, 506, 508, 521, 528, 533, 581, 595, 597, 598, 599, 600, 601, 602, 603, 604, 641, 644, 645, 646, 647, 648, 650, 651, 655, 735, 737], "physic": [17, 19], "dme_dclin": 17, "extend": [17, 38, 227, 244, 483], "dme_dcline_opf": 17, "bus_fr": [17, 271, 283, 285, 298], "bus_to": [17, 271, 283, 285, 298], "loss0": [17, 283, 557], "loss1": [17, 283, 557], "vm_setpoint_fr": [17, 283], "vm_setpoint_to": [17, 283], "p_fr_lb": [17, 283], "p_fr_ub": [17, 283], "q_fr_lb": [17, 283], "q_fr_ub": [17, 283], "q_to_lb": [17, 283], "q_to_ub": [17, 283], "p_fr": [17, 18, 283], "q_fr": [17, 283], "p_to": [17, 283], "q_to": [17, 283], "dme_legacy_dclin": [17, 18, 245, 284, 459, 472], "fbus_on": [17, 283], "tbus_on": [17, 283], "p_fr_start": [17, 283], "p_to_start": [17, 283], "q_fr_start": [17, 283], "q_to_start": [17, 283], "th": [17, 247, 402, 407, 483, 555, 572], "_start": 17, "horzcat": [17, 19, 255, 462, 463], "export_var": [17, 255, 271, 272, 273, 276, 279, 282, 283, 284, 290, 292, 293, 296], "var": [17, 60, 61, 106, 107, 108, 109, 110, 111, 112, 113, 114, 199, 255, 403, 404, 405, 406, 454, 474, 475, 483, 521, 535, 557, 566, 603, 604, 644], "export_vars_offline_v": [17, 255, 271, 272, 273, 276, 279, 282, 283, 284, 292, 293, 336], "info": [17, 19, 22, 23, 24, 25, 29, 39, 75, 76, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 161, 166, 179, 185, 189, 191, 192, 206, 228, 229, 230, 231, 255, 407, 484, 490, 491, 493, 497, 500, 502, 503, 505, 507, 521, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 603, 604, 632, 633, 635, 636, 638, 639, 644, 645, 646, 647, 648, 650, 651, 735], "b2i": [17, 19], "alreadi": [17, 19, 40, 41, 66, 113, 114, 524, 525, 526], "turn": [17, 19, 228, 271, 476, 483, 553], "bus_dm": 17, "isol": [17, 19, 246, 273, 274, 482, 483, 486, 526, 527, 531, 551, 554, 559], "fill": [17, 19, 39, 300, 605], "set_bus_type_pv": [17, 273], "vm_control": [17, 273, 274], "reli": [17, 19], "global": [17, 232, 233, 236, 237, 239, 246, 770], "apply_vm_setpoint": [17, 279, 280, 283], "i_fr": 17, "i_to": 17, "vm_start": [17, 273], "pp_have_section_sum": [17, 255, 271, 279, 280, 283, 285, 287, 288, 292, 295, 298], "pp_data_sum": [17, 255, 271, 279, 280, 283, 285, 287, 288, 292, 295, 298], "torf": [17, 107, 114, 228, 246, 249, 255, 256, 307, 462, 538, 560], "pp_arg": [17, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 294, 295, 298], "out_": [17, 249, 251, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 294, 295, 298], "fd": [17, 114, 168, 171, 173, 249, 255, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 292, 293, 294, 295, 298, 450, 453, 475, 482, 581, 631], "fprintf": 17, "29": [17, 228, 243], "2f": 17, "mw": [17, 18, 74, 276, 279, 282, 283, 284, 287, 292, 293, 295, 476, 483, 484, 536, 553, 554, 557, 558, 563, 581, 595, 629, 649, 655, 730, 731, 732], "mvar": [17, 18, 43, 276, 279, 282, 283, 284, 287, 292, 295, 483, 536, 553, 554, 557, 558, 581, 732], "pp_have_section_det": [17, 255, 271, 273, 274, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298], "pp_get_headers_det": [17, 255, 271, 273, 274, 276, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298], "pp_data_det": [17, 255], "header": [17, 106, 249, 251, 255, 450], "third": [17, 42, 43], "inj": [17, 18], "1234567": 17, "123456789": 17, "90": [17, 18, 595], "123456": 17, "str": [17, 113, 255, 462, 637], "pp_data_row_det": [17, 255, 271, 273, 274, 276, 277, 279, 280, 283, 285, 287, 288, 292, 293, 295, 298], "sprintf": [17, 19], "7d": 17, "9d": 17, "6d": 17, "themselv": [17, 106, 113, 114, 300, 516, 518, 604, 605], "chose": 17, "keep": [17, 20, 106, 113, 114, 300, 474], "check": [17, 38, 61, 76, 113, 166, 227, 228, 233, 241, 244, 246, 255, 256, 307, 453, 538, 560, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 630, 729, 730, 731, 732], "against": 17, "dme_legacy_dcline_opf": [17, 18, 245, 459, 472], "mu_p_fr_lb": [17, 284], "mu_p_fr_ub": [17, 284], "mu_q_fr_lb": [17, 284], "mu_q_fr_ub": [17, 284], "mu_q_to_lb": [17, 284], "mu_q_to_ub": [17, 284], "polynomi": [17, 81, 247, 248, 376, 377, 383, 483, 523, 555, 580, 613, 614, 628, 629], "breakpoint": [17, 247], "appear": [17, 106, 113, 114, 474], "cost_tabl": [17, 245, 248, 282, 284, 376, 463, 472], "have_cost": [17, 279, 282, 283, 284], "routin": [17, 37, 104, 176, 226, 243, 526, 562], "whether": [17, 66, 77, 78, 79, 80, 108, 113, 114, 153, 154, 155, 156, 157, 158, 189, 198, 199, 229, 230, 234, 237, 240, 458, 459, 465, 490, 503, 524, 528, 533, 551, 597, 598, 599, 600, 601, 602, 630, 737], "build_cost_param": [17, 282, 284, 377, 379, 383], "conveni": [17, 523, 572], "cost_table_util": [17, 245, 247, 472], "ismemb": [17, 534, 535], "variablenam": [17, 462], "poli": [17, 247, 383], "poly_param": [17, 247, 248, 376], "pwl": [17, 247, 248, 376, 383, 604], "pwl_param": [17, 247, 248, 376], "els": [17, 18, 228, 243, 655], "lim": [17, 249, 251, 272, 275, 276, 278, 281, 282, 284, 286, 289, 291, 294, 297, 299, 304, 557, 581, 730, 732], "lb": [17, 18, 307], "pp_have_section_lim": [17, 272, 276, 282, 284, 292, 294], "pp_binding_rows_lim": [17, 272, 276, 282, 284, 292, 294], "pp_get_headers_lim": [17, 272, 276, 282, 284, 292, 294], "pp_data_row_lim": [17, 272, 276, 282, 284, 292, 294], "ctol": [17, 294], "ptol": [17, 294], "dme_shared_opf": [17, 245, 272, 275, 276, 278, 281, 282, 284, 286, 289, 291, 292, 293, 297, 299, 472], "mu": [17, 18, 26, 109, 114, 117, 178, 179, 180, 181, 454, 509, 510, 513, 521, 603, 604, 649, 730, 731], "890": 17, "12345": 17, "78": 17, "mu_lb": [17, 292], "3f": 17, "dcline": [17, 527, 557, 634, 729], "dclinecost": 17, "dmce_legacy_dcline_mpc2": [17, 18, 245, 459, 472], "data_field": [17, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "df": [17, 26, 110, 111, 114, 176, 178, 179, 180, 181, 247, 256, 337, 474, 581, 595, 604, 613, 614, 629], "default_export_data_t": [17, 256, 257, 259, 262, 263], "retriev": [17, 113, 307, 462, 463, 581, 595], "default_export_data_nrow": [17, 256], "dt": [17, 256], "idx_dclin": [17, 472, 663, 729, 738], "qmaxt": [17, 557], "major": [17, 581, 595], "directi": 17, "gcip_fcn": 17, "ob": 17, "dcline_cost_import": [17, 263], "gcep_fcn": 17, "dcline_cost_export": [17, 263], "br_statu": [17, 476, 523, 553, 557], "f_bu": [17, 509, 513, 523, 553, 557], "t_bu": [17, 523, 553, 557], "vf": [17, 483, 516, 518, 536, 553, 557], "vt": [17, 106, 112, 113, 114, 402, 474, 483, 536, 553, 557], "pmin": [17, 45, 64, 77, 112, 114, 460, 483, 484, 523, 557, 558, 560, 628, 655, 732, 733, 735], "pmax": [17, 43, 64, 77, 103, 112, 114, 460, 476, 483, 484, 489, 497, 498, 523, 557, 558, 560, 628, 644, 649, 731, 732], "qminf": [17, 557], "qmaxf": [17, 557], "qmint": [17, 557], "qf": [17, 515, 523, 553, 557], "pt": [17, 128, 523, 553, 557, 581, 604], "qt": [17, 523, 553, 557], "isfield": 17, "mu_pmin": [17, 523, 557, 558, 736], "mu_pmax": [17, 523, 557, 558, 736], "mu_qminf": [17, 557], "mu_qmaxf": [17, 557], "mu_qmint": [17, 557], "mu_qmaxt": [17, 557], "static": [17, 112, 246, 247, 248, 262, 462, 489, 535], "dmce_gen_mpc2": [17, 245, 472], "gencost": [17, 20, 39, 40, 41, 60, 63, 64, 262, 474, 483, 521, 523, 524, 526, 551, 555, 562, 567, 578, 580, 603, 604, 605, 613, 629, 630, 645, 647, 648, 651, 653, 655, 729, 734, 735], "gencost2cost_t": [17, 262], "cost_table2gencost": [17, 262], "next": [17, 19, 63, 64, 113, 114, 160, 186, 188, 189, 450, 463, 489, 498, 499, 501, 506, 650, 655, 735], "nme_legacy_dclin": [17, 245, 432, 435, 472], "np": [17, 19, 402, 407, 408, 420, 423, 424, 431, 436, 437, 438, 443, 448, 535], "nz": [17, 19, 142, 402, 407, 420, 423, 424, 431, 655], "anyth": [17, 19, 232, 581, 595], "nme_legacy_dcline_ac": [17, 245, 433, 434, 472], "form_ac": [17, 19, 245, 304, 305, 306, 403, 404, 405, 472, 760, 761, 762, 763], "add_zvar": [17, 19, 402, 407, 420, 424, 427, 430, 432, 435], "ndc": [17, 729], "nk": [17, 19, 407], "add_var": [17, 19, 113, 114, 308, 319, 321, 324, 326, 328, 336, 370, 376, 383, 394, 402, 407, 474], "pdcf": [17, 432, 435], "qdcf": [17, 432], "pdct": [17, 432, 435], "inf": [17, 31, 64, 108, 112, 114, 153, 154, 155, 156, 157, 158, 167, 168, 170, 174, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 402, 581, 595, 732], "qdct": [17, 432], "spey": 17, "add_vvar": [17, 19, 402, 407, 415, 416, 417, 418, 419], "defer": [17, 19], "recal": [17, 19], "omit": [17, 19, 106, 113, 114, 249, 252, 255, 307, 308, 402, 407, 462, 474], "30": [17, 18, 43, 85, 86, 87, 88, 89, 168, 204, 307, 483, 555, 558, 581, 595, 662], "proper": [17, 62, 465], "becom": [17, 19, 26, 43, 248, 581], "identii": 17, "nme_legacy_dcline_acc": [17, 18, 245, 459, 472], "form_acc": [17, 19, 245, 303, 305, 404, 410, 415, 417, 421, 425, 428, 433, 440, 445, 472], "nme_legacy_dcline_acp": [17, 18, 245, 459, 472], "form_acp": [17, 19, 245, 303, 304, 405, 411, 416, 418, 422, 426, 429, 434, 436, 438, 441, 446, 448, 472], "nme_legacy_dcline_dc": [17, 18, 245, 459, 472], "form_dc": [17, 245, 303, 304, 305, 406, 412, 419, 430, 435, 442, 447, 472], "z_1": 17, "z_2": 17, "analog": 17, "incorpor": [17, 19, 43], "impli": 17, "beyond": [17, 43, 524, 551, 637, 638], "mme_legacy_dclin": [17, 245, 383, 386, 387, 472], "slightli": [17, 650], "mme_legacy_dcline_pf_ac": [17, 18, 245, 459, 472], "get_idx": [17, 113, 114], "s_fr": 17, "gs_": [17, 303, 403], "i1": [17, 106, 108, 113, 114, 247, 308, 337, 376, 383, 402, 462, 474], "iN": [17, 106, 108, 113, 114, 308, 337, 402, 462, 474], "s_to": 17, "imag": [17, 403, 404, 536], "mme_legacy_dcline_pf_dc": [17, 18, 245, 459, 472], "31": [17, 18, 595], "mme_legacy_dcline_opf": [17, 245, 384, 385, 472], "ccv": [17, 247, 567, 604], "just": [17, 255, 450, 463], "ydc": 17, "dimenion": 17, "add_lin_constraint": [17, 113, 114, 474], "dcline_legaci": 17, "ycondc": 17, "add_cost": [17, 308, 329, 336, 376, 377, 383, 394], "kind": [17, 255], "less": [17, 30, 236, 247, 523], "than": [17, 26, 58, 74, 108, 109, 114, 160, 236, 247, 303, 304, 378, 403, 462, 475, 483, 523, 527, 556, 562, 572, 581, 604, 605, 626, 637, 638, 656], "greater": [17, 58, 115, 120], "have_quad_cost": [17, 247, 376, 383], "add_quad_cost": [17, 113, 114, 474], "polpdcf": 17, "higher": [17, 197, 236, 247, 502], "i3": [17, 247, 376, 383], "cost_pdcf": 17, "poly_cost_fcn": [17, 247], "poly_coef": [17, 247], "add_nln_cost": [17, 113, 114, 474], "pwldc": 17, "interior_x0": [17, 315, 358, 359, 361, 362, 363, 367, 375, 376, 383, 389, 401], "x0": [17, 26, 31, 112, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 315, 358, 359, 361, 362, 363, 367, 375, 376, 383, 389, 401], "feasibl": [17, 26, 43, 118, 581, 595], "vv": [17, 113, 114, 436], "maxc": [17, 247, 248], "max_pwl_cost": [17, 247, 248], "ab": [17, 198, 503, 515, 516, 517, 518, 519, 536], "mathmat": [17, 336, 450, 452, 454, 456], "mme_legacy_dcline_opf_ac": [17, 18, 245, 459, 472], "network_model_el": [17, 336], "vm_setpoint": [17, 279, 453], "sign": [17, 191, 199, 493, 503], "swap": 17, "mme_legacy_dcline_opf_dc": [17, 18, 245, 459, 472], "were": [17, 43, 109, 114, 233, 483, 559], "side": [17, 20, 108, 114, 744, 745, 746, 749], "net_model_dc": [17, 245, 472], "mme_legacy_opf_dcline_ac": 17, "math_model_opf_acc": [17, 245, 318, 321, 472], "inclus": [17, 634], "explain": [17, 515, 516, 517, 518, 519], "xt_legacy_dclin": [17, 18, 245, 472, 756], "t_case9_dclin": [17, 18, 472, 729, 738], "go": [17, 577], "gizmo": [17, 750], "entir": [18, 62, 109, 114, 303, 306, 526, 559, 733], "20": [18, 26, 43, 106, 197, 204, 307, 402, 476, 483, 484, 489, 502, 553, 557, 558, 581, 595, 655, 733], "_element_class": [18, 458, 459], "fmt": [18, 301, 458, 459, 461], "mpc2": [18, 252, 253, 301, 458, 459, 461, 485, 527], "v_cartesian": [18, 451, 453, 455, 581], "immedi": [18, 475], "succeed": [18, 20, 199, 452, 454, 456, 465, 641, 644, 645, 646, 647, 648, 650, 651], "27": [18, 20, 168], "23": [18, 557, 558], "setup": [18, 20, 316, 327], "04": [18, 581, 595], "6518": 18, "hr": [18, 483, 732], "area": [18, 43, 60, 273, 476, 483, 526, 538, 554, 556, 558, 559, 562, 581, 595, 604, 605, 632, 636, 653, 655, 733, 735], "zone": [18, 43, 62, 268, 273, 293, 395, 461, 483, 523, 525, 552, 554, 649, 655, 731, 733], "319": 18, "820": 18, "900": 18, "110": [18, 43], "315": 18, "00": [18, 20, 243], "124": [18, 595], "40": [18, 19, 156, 307, 484, 502, 581, 595], "minimum": [18, 174, 199, 483, 553, 554, 558, 581, 644], "maximum": [18, 26, 31, 43, 157, 167, 168, 169, 170, 171, 174, 178, 180, 199, 209, 236, 247, 248, 483, 485, 523, 528, 533, 553, 554, 558, 581, 595, 597, 598, 599, 600, 601, 602, 644, 649, 731, 732, 737], "066": 18, "100": [18, 20, 43, 208, 476, 595, 655, 732], "deg": [18, 20, 732], "11": [18, 20, 30, 31, 43, 134, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 228, 483, 553, 554, 557, 558, 595, 655], "lmp": 18, "mwh": [18, 74, 484, 561], "24": [18, 103, 558, 595], "62": [18, 20, 595], "mvarh": 18, "43": 18, "mag": [18, 405], "pu": [18, 581, 732], "ang": [18, 405, 597, 598, 599, 600, 601, 602], "000": 18, "15": [18, 19, 20, 43, 111, 402, 481, 483, 553, 554, 557, 558], "954": 18, "107": 18, "035": 18, "277": 18, "047": 18, "623": 18, "094": 18, "470": 18, "967": 18, "298": 18, "078": [18, 20], "952": 18, "085": 18, "992": 18, "600": [18, 156, 208, 595], "081": 18, "160": 18, "476": 18, "427": 18, "097": 18, "205": 18, "043": 18, "112": [18, 595], "067": 18, "079": 18, "consumpt": 18, "35": [18, 20, 595], "19": [18, 20, 483, 553, 557, 558, 595], "54": [18, 43], "18": [18, 20, 31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 243, 483, 553, 557, 558, 595], "68": [18, 113, 595], "25": [18, 43, 307, 462, 558, 595, 732], "88": [18, 595], "02": [18, 20], "65": [18, 595], "37": [18, 168, 595], "38": [18, 43, 106, 113, 402, 595], "69": [18, 595], "64": [18, 20, 595], "13": [18, 20, 43, 115, 156, 234, 240, 483, 553, 554, 557, 558], "70": [18, 43, 595], "01": [18, 20, 484, 581], "58": [18, 595], "131": 18, "95": [18, 20, 26, 554, 581, 595], "34": [18, 20, 43, 595], "36": [18, 595], "97": [18, 20, 595], "92": [18, 595], "84": [18, 20, 595], "231": 18, "197": 18, "010": 18, "046": 18, "250": [18, 43, 208, 595], "98": [18, 20, 481], "22": [18, 26, 43, 557, 558], "mu_sm_fr": 18, "sm_fr": 18, "sm_ub": 18, "sm_to": 18, "mu_sm_to": 18, "762": [18, 479], "375": 18, "760": 18, "prototyp": [18, 20, 301, 472], "wider": 19, "rang": [19, 43, 628], "fictiti": 19, "wide": [19, 60, 457, 556, 655], "verifi": [19, 243], "facil": 19, "sai": 19, "_g": 19, "proport": [19, 572], "imped": [19, 20, 285, 287, 479, 480, 481, 483, 536, 574, 576, 577, 581], "_3": 19, "_4": 19, "_5": 19, "_6": 19, "_7": 19, "_8": 19, "dme_gizmo": 19, "bus_1": 19, "bus_2": 19, "bus_3": 19, "y1r": 19, "y1i": 19, "y2r": 19, "y2i": 19, "m1r": 19, "m1i": 19, "m2r": 19, "m2i": 19, "lr": 19, "li": 19, "ir": 19, "ii": [19, 60], "ni": 19, "sr": 19, "si": [19, 403], "zr1": 19, "zi1": 19, "zr2": 19, "zi2": 19, "bus1": 19, "bus2": 19, "bus3": 19, "until": [19, 462, 581, 735], "look": [19, 20, 166, 243, 562], "dme_branch": [19, 245, 272, 472], "focu": 19, "assumpt": [19, 567], "nme_gizmo": 19, "nme_gizmo_ac": 19, "17": [19, 20, 31, 43, 87, 89, 106, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 483, 553, 554, 557, 558, 595, 729], "zmax": 19, "vname_r": 19, "d_gizmo": 19, "vname_i": 19, "y1": [19, 529], "1j": 19, "y2": 19, "m1": 19, "m2": 19, "ss": 19, "j1": [19, 58, 462], "j2": [19, 58], "j3": 19, "arbitrarili": 19, "obei": 19, "zr1_gizmo": 19, "nme_gizmo_acc": 19, "nme_gizmo_acp": 19, "xt_gizmo": 19, "mind": 20, "enhanc": 20, "plan": [20, 74, 535], "futur": [20, 64, 114, 465, 568, 581, 733], "don": [20, 189, 465, 490, 570], "t_run_mp_3p": [20, 472, 740], "t_case3p_a": [20, 472, 740, 743, 744, 745, 746, 748, 749], "residu": [20, 534], "375e": 20, "042e": 20, "287e": 20, "179e": 20, "961e": 20, "570e": 20, "967e": 20, "405e": 20, "05": [20, 26, 199, 476, 581], "400e": 20, "090e": 20, "908e": 20, "newton": [20, 26, 114, 162, 164, 167, 168, 169, 171, 172, 173, 174, 487, 570, 581, 595, 597, 598, 599, 600, 601, 602, 650], "converg": [20, 114, 155, 156, 167, 168, 169, 170, 171, 174, 179, 180, 181, 205, 206, 207, 208, 210, 487, 521, 528, 533, 597, 598, 599, 600, 601, 602, 603, 604, 631, 644, 737], "ph": [20, 26], "6109": 20, "kw": [20, 280, 285, 288, 298], "4206": 20, "kvar": [20, 280, 285, 298], "5450": 20, "2442": 20, "561": 20, "1173": 20, "590": 20, "kv": [20, 43, 273, 274, 298, 483, 554], "1996": 20, "120": 20, "1637": 20, "1105": 20, "0821": 20, "119": 20, "26": [20, 595], "3055": 20, "2547": 20, "123": [20, 595], "2028": 20, "114": [20, 595], "79": [20, 481], "1750": 20, "9298": 20, "126": 20, "80": [20, 43], "8327": 20, "102": 20, "1341": 20, "970": 20, "52": [20, 502, 595], "2096": 20, "2672": 20, "1894": 20, "1275": 20, "8500": 20, "1800": 20, "9000": 20, "2375": 20, "9500": 20, "229": 20, "345": 20, "66": [20, 595], "152": 20, "455": 20, "1036": 20, "1364": 20, "230": 20, "144": 20, "72": [20, 595], "1323": 20, "881": 20, "2043": 20, "1133": 20, "2598": 20, "1508": 20, "1337": 20, "963": 20, "2074": 20, "1319": 20, "2652": 20, "1830": 20, "790": 20, "871": 20, "780": 20, "xfrm": 20, "xfmr": [20, 635], "substat": 20, "4bu": [20, 742], "unb": [20, 742], "dss": [20, 742], "bal": [20, 742], "opendss": [20, 742], "ieee": [20, 26, 43, 479, 480, 484, 576, 626, 742], "ground": [20, 742], "wye": [20, 742], "sourceforg": [20, 742], "net": [20, 450, 742], "electricdss": [20, 742], "head": [20, 742], "tree": [20, 742], "trunk": [20, 742], "distrib": [20, 742], "ieeetestcas": [20, 742], "basemva": [20, 474, 483, 484, 509, 510, 511, 513, 514, 516, 517, 518, 519, 521, 536, 558, 562, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 603, 604, 605, 613, 627, 631, 635, 645, 646, 647, 648, 650, 651, 653, 735, 736], "freq": [20, 285], "frequenc": [20, 285], "hz": [20, 285], "basekva": 20, "busid": 20, "basekv": [20, 43, 483, 554], "vm1": [20, 274], "vm2": [20, 274], "vm3": [20, 274, 416], "va1": [20, 274], "va2": [20, 274], "va3": [20, 274, 416], "brid": 20, "lcid": 20, "len": [20, 199, 285], "5280": 20, "2500": [20, 581, 595], "xfid": 20, "6000": 20, "ldid": 20, "ldbu": 20, "pd1": [20, 288], "pd2": [20, 288], "pd3": [20, 288], "ldpf1": 20, "ldpf2": 20, "ldpf3": 20, "genid": 20, "gbu": 20, "vg1": 20, "vg2": 20, "vg3": 20, "pg1": [20, 280], "pg2": [20, 280], "pg3": [20, 280, 424], "qg1": [20, 280], "qg2": [20, 280], "qg3": [20, 280, 424], "r11": 20, "r21": 20, "r31": 20, "r22": 20, "r32": 20, "r33": 20, "x11": 20, "x21": 20, "x31": 20, "x22": 20, "x32": 20, "x33": 20, "c11": 20, "c21": 20, "c31": 20, "c22": 20, "c32": 20, "c33": 20, "457541": 20, "15594": 20, "153474": 20, "466617": 20, "157996": 20, "461462": 20, "501648": 20, "384909": 20, "04813": 20, "423624": 20, "06502": 20, "0671": 20, "86241": 20, "85323": 20, "875": 20, "09098": 20, "3254": 20, "xfrm3p": 20, "mile": [20, 285], "configur": 20, "referenc": [20, 113, 114, 285, 604, 605], "hertz": 20, "dme_bus3p": [20, 245, 275, 458, 472], "slack": [20, 26, 339, 347, 479, 480, 481, 572, 576, 577, 581, 597, 598, 599, 600, 601, 602, 644, 650], "nomin": [20, 271, 287, 295, 483, 553, 573, 574, 733], "degre": [20, 174, 271, 272, 273, 274, 284, 478, 483, 553, 554, 581], "dme_line3p": [20, 245, 286, 458, 472], "dme_xfmr3p": [20, 245, 299, 458, 472], "resist": [20, 271, 285, 298, 483, 553], "reactanc": [20, 271, 285, 298, 483, 553], "dme_load3p": [20, 245, 289, 458, 472], "demand": [20, 66, 287, 288, 295, 479, 480, 481, 483, 554, 560, 561, 574, 733], "lpf1": 20, "lpf2": 20, "lpf3": 20, "dme_gen3p": [20, 245, 281, 458, 472], "3x3": [20, 285], "capacit": 20, "nf": [20, 285], "dme_buslink": [20, 245, 278, 458, 472], "linid": 20, "bus3pid": 20, "t_case3p_b": [20, 472, 740], "t_case3p_c": [20, 472, 740], "t_case3p_d": [20, 472, 740], "t_case3p_": [20, 472, 740], "t_case3p_f": [20, 472, 740], "t_case3p_g": [20, 472, 740, 749], "t_case3p_h": [20, 472, 740], "nlp": [21, 26, 32, 33, 38, 114, 163, 178, 179, 180, 181, 215, 219, 226], "site": [21, 43, 62], "consult": 21, "relnot": 21, "appendix": [21, 581], "goal": [21, 106], "restructur": 21, "still": [21, 109, 114, 232, 233, 236, 237, 239, 243, 483, 732], "tn1": 21, "auction": [21, 547, 658, 659, 660, 661, 723], "tn2": [21, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519], "tn3": [21, 511, 512, 517], "tn4": [21, 510, 511, 512, 513, 514, 516, 517, 518, 519], "cite": 21, "donat": 21, "detect": [22, 23, 24, 25, 38, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 186, 189, 190, 191, 192, 198, 199, 227, 228, 229, 230, 243, 244, 472, 489, 490, 491, 493, 497, 500, 503, 505, 507, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 581, 639], "lu": [22, 30, 174, 581], "privat": [22, 23, 24, 25, 37, 104, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 226, 229, 230, 243, 472, 474, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "lu_vec": 22, "pardiso": [23, 24, 25, 26, 30, 33, 581], "parallel": [23, 43], "direct": [23, 30, 166, 199, 486, 504, 655, 730], "have_feature_pardiso_legaci": [23, 25, 37, 38], "have_feature_pardiso_object": [23, 24, 37, 38], "pardiso_legaci": 24, "v5": 24, "mex": [24, 114, 151, 181, 208, 581, 595], "have_feature_pardiso": [24, 25, 37, 38], "pardiso_object": 25, "v6": [25, 113, 160], "later": [25, 113, 128, 132, 134, 137, 140, 144, 147, 307, 466, 525, 532, 581, 595], "f_fcn": [26, 178, 179, 180, 181], "xmin": [26, 31, 112, 114, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "xmax": [26, 31, 112, 114, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "gh_fcn": [26, 178, 179, 180, 181], "hess_fcn": [26, 178, 179, 180, 181], "exitflag": [26, 31, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "minim": [26, 27, 178, 179, 180, 181, 182], "subject": [26, 28, 31, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 183, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 534, 535], "inequ": [26, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 175, 177, 178, 179, 180, 181, 474, 581, 595, 603, 604, 608, 732], "9th": [26, 178, 179, 180, 181], "d2f": [26, 110, 111, 114, 176, 178, 179, 180, 181, 247, 337, 474, 581, 595, 604, 613, 614, 629], "infti": [26, 31, 200], "dg": [26, 109, 114, 175, 178, 179, 180, 181, 304, 454, 581, 595, 604, 610, 617], "lagrangian": [26, 177, 178, 179, 180, 181], "lxx": [26, 177, 178, 179, 180, 181], "eqnonlin": [26, 107, 108, 109, 110, 111, 112, 114, 177, 178, 179, 180, 181], "ineqnonlin": [26, 107, 108, 109, 110, 111, 112, 114, 177, 178, 179, 180, 181], "parenthes": [26, 114, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "linsolv": [26, 581], "feastol": [26, 115, 581], "toler": [26, 66, 114, 118, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 198, 199, 236, 294, 503, 528, 533, 581, 595, 597, 598, 599, 600, 601, 602, 641, 645, 646, 647, 648, 650, 651, 737], "gradtol": [26, 581], "comptol": [26, 581], "complementar": 26, "costtol": [26, 581], "max_it": [26, 151, 159, 167, 168, 169, 170, 171, 174, 178, 184, 199, 581], "150": [26, 581, 595], "step_control": [26, 114, 181, 208, 581], "enabl": [26, 199, 581, 729, 730, 731, 732], "sc": [26, 114, 160, 181, 208, 535, 581, 595, 701], "red_it": [26, 581], "reduct": [26, 581, 595], "cost_mult": [26, 177, 178, 179, 180, 181], "improv": [26, 43, 735], "3rd": [26, 42, 114, 234, 240, 474, 476, 517, 519, 524, 525, 527, 551, 552, 730], "xi": [26, 581], "99995": [26, 581], "alpha": [26, 66, 184, 247, 580, 581], "sigma": [26, 581], "z0": [26, 254, 483, 581, 604, 605, 735], "alpha_min": [26, 581], "alpha_p": 26, "alpha_d": 26, "smaller": [26, 42, 479, 480, 481, 581, 626, 656], "rho_min": [26, 581], "rho_t": [26, 581], "rho_max": [26, 581], "mu_threshold": [26, 581], "kt": [26, 581], "forc": [26, 114, 581], "max_steps": [26, 581], "1e10": [26, 581], "norm": [26, 167, 168, 170, 174, 194, 581], "exce": [26, 581, 644], "full_hist": 26, "hist": [26, 31, 167, 168, 170, 174], "trajectori": [26, 31, 62, 167, 168, 170, 174], "altern": [26, 30, 31, 62, 114, 116, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 174, 178, 179, 180, 181, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 645, 646, 647, 648, 650, 651], "algorithm": [26, 30, 114, 156, 160, 167, 168, 169, 170, 171, 174, 178, 181, 208, 530, 532, 568, 581, 595, 604, 641, 645, 646, 647, 648, 650, 651, 735], "exit": [26, 31, 36, 102, 107, 108, 109, 110, 111, 112, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 171, 174, 178, 179, 180, 181, 186, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 242, 489, 768], "reach": [26, 31, 187, 188, 189, 199, 489, 490, 492, 498, 501, 506, 508, 581, 644], "fail": [26, 31, 179, 199, 206, 234, 236, 237, 240, 241, 452, 454, 456, 581, 641, 644, 645, 646, 647, 648, 650, 651], "feascond": [26, 31], "gradcond": [26, 31], "compcond": [26, 31], "costcond": [26, 31], "gamma": [26, 31], "stepsiz": [26, 31, 199, 644], "alphap": [26, 31], "alphad": [26, 31], "messag": [26, 31, 66, 114, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 174, 189, 199, 201, 234, 236, 237, 239, 240, 450, 484, 490, 562, 581, 595, 632, 633, 635, 636, 638, 644, 654], "langrang": [26, 31, 114, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "kuhn": [26, 31, 114, 153, 154, 155, 156, 157, 158, 177, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 553, 554, 557, 558, 609], "tucker": [26, 31, 114, 153, 154, 155, 156, 157, 158, 177, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 553, 554, 557, 558, 609], "mu_l": [26, 31, 107, 108, 109, 110, 111, 112, 113, 114, 117, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "mu_u": [26, 31, 107, 108, 109, 110, 111, 112, 113, 114, 117, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "almost": [26, 31, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 174, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "fmincon": [26, 114, 127, 128, 163, 175, 176, 177, 178, 179, 180, 181, 183, 532, 581, 584, 595, 706], "toolbox": [26, 31, 37, 104, 114, 127, 128, 129, 132, 138, 139, 140, 142, 143, 144, 146, 147, 153, 155, 156, 157, 158, 159, 168, 169, 170, 171, 174, 178, 179, 180, 181, 201, 203, 205, 206, 207, 208, 209, 210, 211, 226, 243, 581, 595, 596], "aeq": [26, 31, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "beq": [26, 31, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "en": [26, 178, 179, 180, 181], "wikipedia": [26, 178, 179, 180, 181], "wiki": [26, 178, 179, 180, 181], "nonlinear_program": [26, 178, 179, 180, 181], "f2": [26, 168, 170, 178, 179, 180, 181, 483, 555], "gh2": [26, 178, 179, 180, 181], "hess2": [26, 178, 179, 180, 181], "nargin": [26, 178, 179, 180, 181, 243], "rai": 26, "wang": 26, "hi": 26, "phd": 26, "dissert": 26, "applic": [26, 115, 118, 119, 120, 151, 159, 184, 535, 546], "multi": [26, 166, 463, 581], "period": [26, 42, 58, 60, 62, 66, 74, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 103, 581, 735], "secur": [26, 43, 62, 70, 73, 81], "market": 26, "thesi": 26, "cornel": [26, 201, 543, 545, 550, 581, 595], "univers": 26, "2007": 26, "murillo": 26, "sanchez": 26, "thoma": 26, "issu": [26, 243, 463, 481], "transact": [26, 479, 480, 576, 626], "vol": [26, 479, 480, 576, 626], "aug": [26, 43], "1185": 26, "1193": 26, "1109": [26, 479, 480, 576], "tpwr": 26, "901301": 26, "unconstrain": [27, 182, 483, 553, 564, 608, 609], "banana": [27, 182], "x_1": [28, 172, 173, 183, 193, 247], "x_2": [28, 172, 173, 183, 193, 247], "x_3": [28, 183], "varargin": [29, 75, 77, 78, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 152, 161, 170, 174, 185, 231, 247, 264, 267, 307, 314, 319, 321, 324, 326, 328, 337, 402, 407, 449, 462, 466, 468, 469, 470, 471, 474, 520, 527, 529, 532, 579, 581, 595, 596, 604, 640, 643, 649, 653, 735], "mpver": [29, 75, 121, 152, 161, 185, 472, 738], "previou": [30, 186, 194, 195, 196, 199, 472, 487, 489, 490, 495, 496, 499, 504, 581, 645, 646, 647, 648, 650, 651], "qa": 30, "gilbert": [30, 174, 581], "peierl": [30, 174, 581], "permut": 30, "umfpack": [30, 174, 581], "rh": [30, 116, 247, 474, 567], "alwai": [30, 42, 66, 114, 186, 489, 529], "backslash": [30, 114, 174, 581], "decomposit": [30, 581], "substitut": [30, 581], "short": [30, 168, 252, 271, 302, 304, 305, 306, 483, 553], "cut": 30, "overhead": 30, "thu": [30, 42], "better": [30, 74, 581], "small": [30, 174, 581], "nout": 30, "vec": 30, "thresh": [30, 114], "lu3": [30, 174, 581], "lu3a": 30, "lu4": [30, 174, 581], "lu5": [30, 174, 581], "lu3m": 30, "lu3am": 30, "lu4m": 30, "lu5m": 30, "paren": [30, 66, 114], "arg": [30, 61, 114, 154, 174, 199, 204, 402, 462, 475, 489, 502, 509, 581], "amd": [30, 174, 581], "pivot": 30, "threshold": [30, 58, 114], "mtype": 30, "nonsymmetr": 30, "iparm": 30, "1st": [30, 42, 60, 61, 108, 186, 303, 403, 476, 489, 509, 510, 511, 512, 513, 514, 604, 730], "2nd": [30, 42, 234, 240, 303, 402, 403, 474, 476, 509, 510, 511, 512, 513, 514, 524, 525, 527, 538, 551, 552, 604, 680, 730], "dparm": 30, "tr": [30, 108, 114], "miss": [31, 39, 61, 109, 110, 112, 114, 302, 303, 306, 403, 404, 405, 605], "quadprog": [31, 114, 146, 147, 153, 155, 156, 157, 158, 201, 203, 205, 206, 207, 208, 209, 210, 211, 581, 594, 595], "v8doc": [31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211], "sa": [31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211], "sashtml": [31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211], "iml": [31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211], "chap8": [31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211], "sect12": [31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211], "htm": [31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211], "1003": [31, 153, 154, 155, 157, 158, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211], "quiet": [32, 33, 34, 35, 67, 68, 69, 70, 71, 72, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 657, 659, 660, 661, 672, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767], "mplinsolv": [34, 37, 38, 114, 174, 581], "qps_mip": [35, 37, 38, 208], "exit_on_fail": [36, 102, 225, 242, 768], "unless": [36, 63, 102, 166, 225, 234, 236, 237, 239, 240, 242, 308, 402, 464, 465, 604, 644, 645, 646, 647, 648, 650, 651, 768], "t_run_test": [36, 102, 225, 232, 233, 234, 236, 237, 239, 240, 242, 243, 244, 768], "all_ok": [36, 102, 225, 238, 242, 768], "web": [37, 104, 226, 770], "asid": [37, 104, 226], "mipsver": [37, 38], "mips_example1": [37, 38], "mips_example2": [37, 38], "test_mip": [37, 38], "t_mip": [37, 38], "t_mips_pardiso": [37, 38], "t_mplinsolv": [37, 38], "t_qps_mip": [37, 38], "have_feature_lu_vec": [37, 38], "mpci": [39, 62], "fuel": [39, 534, 535], "new_mpc": [39, 40, 41], "gen_typ": 39, "insert": [39, 255, 256, 653], "bottom": [39, 79, 662], "genfuel": [39, 40, 41, 62, 472, 483, 527, 535, 738], "unknown": [39, 534, 535], "newli": [39, 40, 41, 59, 255, 450], "storag": [40, 42, 48, 60, 63, 66, 74, 77, 78, 79, 84, 99, 534, 535, 560], "xgd": [40, 41, 42, 59, 60, 62, 64], "sd": [40, 42, 62, 63, 439, 479, 480, 481, 574], "xgen": 40, "storagedata": [40, 42, 60, 62, 63], "new_xgd": [40, 41], "new_sd": 40, "storageunitdata": 40, "xgendata": [40, 41, 42, 54, 55, 56, 57, 60, 62, 63, 64], "mat": [40, 41, 59, 61, 62, 63, 64, 483, 562, 644, 645, 646, 647, 648, 650, 651, 653, 654], "xgd_tabl": [40, 41, 64], "filenam": [40, 41, 652, 653, 654], "loadstoragedata": [40, 62, 104, 105], "sd_tabl": [40, 63], "ess": [40, 534], "loadxgendata": [40, 41, 59, 62, 104, 105], "wind": [41, 50, 51, 52, 53, 59, 62, 103, 534, 535, 635], "windunitdata": 41, "profil": [42, 47, 51, 52, 59, 60, 62, 103], "argin": 42, "dim": [42, 60, 62, 307, 462, 524, 525, 527, 537, 551, 552, 656], "chgtab": [42, 476, 654], "chgtabsi": 42, "xgdi": [42, 62], "sdi": 42, "ctset": 42, "dimension": [42, 59, 62, 63, 64, 106, 109, 113, 303, 304, 378, 402, 403, 524, 551], "chgtype": [42, 60], "nt": [42, 49, 60, 62, 74, 103], "nj_max": [42, 60, 74], "idx_profil": [42, 59, 62, 103, 104, 105], "chgtabi": 42, "storagei": [42, 62], "ctsetsi": 42, "contingencydata": [42, 60], "nor": 42, "scenario": [42, 60, 62, 74, 103], "conting": [42, 43, 46, 60, 62, 66, 74, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93], "expand": [42, 62, 108], "singleton": [42, 60], "ignor": [42, 60, 114, 166, 204, 234, 349, 526, 559, 581, 595, 632, 732], "mpcdata": [42, 60], "mandatori": 42, "oppos": [42, 66, 228, 247, 378, 462, 463, 483, 570], "nj": [42, 103], "unspecifi": [42, 534, 732], "probabl": [42, 49, 58, 62, 476, 556, 570], "correctli": 42, "inconsist": 42, "resp": 42, "ie": [42, 149, 581], "dedic": 42, "binari": [42, 112, 114, 153, 154, 155, 156, 157, 158, 402, 535], "span": 42, "cghtype": 42, "118": 43, "caseformat": [43, 44, 45, 81, 82, 83, 84, 472, 484, 523, 604, 641, 644, 645, 646, 647, 648, 650, 651, 658, 662, 663, 664, 665, 666, 667, 668, 738, 750], "ieee118cdf": 43, "txt": [43, 234, 240, 483, 581, 595, 636, 638], "sep": 43, "2004": 43, "cdf2matp": 43, "rev": [43, 632, 636, 652], "warn": [43, 66, 114, 153, 154, 155, 156, 157, 158, 484, 632, 633, 635, 636, 638, 654], "cdf": [43, 484], "lab": [43, 483], "ec": [43, 483], "uw": [43, 483], "edu": [43, 149, 201, 483, 543, 545, 550, 581, 595], "pstca": [43, 483], "psap": 43, "mar": [43, 549], "2006": 43, "archiv": 43, "1961": 43, "2010": [43, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 769], "cm": 43, "cz": 43, "group": [43, 59, 159, 482, 486, 527, 531], "thermal": 43, "cabl": 43, "safe": 43, "config": 43, "345kv": 43, "circuit": [43, 483], "161": 43, "138kv": 43, "split": [43, 145, 544, 630], "ramp_agc": [43, 523, 558], "ramp_10": [43, 523, 558], "ramp_30": [43, 523, 558], "c118": 43, "2012": 43, "consider": 43, "compromis": 43, "procedur": [43, 581], "synchron": [43, 534, 535], "capacitor": 43, "decreas": 43, "104": 43, "hydro": [43, 534], "close": [43, 484], "geograph": 43, "locat": [43, 108, 109, 110, 111, 198, 199, 243, 464, 465, 503, 527, 529, 644], "retir": 43, "yield": [43, 484, 575], "minu": [43, 573], "chosen": [43, 60], "impact": 43, "deviat": [43, 644, 650], "criterion": [43, 199, 581], "wors": 43, "worst": 43, "upgrad": 43, "76": 43, "caus": [43, 199, 228, 644], "infeas": [43, 154, 157, 201, 202, 204, 209, 484, 644], "exceed": [43, 202, 732], "appar": [43, 271, 303, 515, 581, 595, 608], "enough": [43, 201, 538], "77": 43, "addition": [43, 644, 645, 646, 647, 648, 650, 651], "330": 43, "defici": 43, "difficult": 43, "resort": 43, "wherea": 43, "stochast": [45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 66, 70, 73, 98], "commit": [45, 46, 47, 48, 51, 52, 53, 57, 60, 66, 72, 73, 74, 79, 80, 97, 98, 100], "ex_case3a": [45, 104, 105], "startup": [45, 279, 465, 483, 523, 555], "shutdown": [45, 483, 523, 555], "transit": [49, 58, 62, 78], "definit": [49, 255, 546], "determinist": [52, 62, 67, 68, 69, 71, 72, 95, 581, 595], "multiperiod": [55, 66, 71, 95], "ramp": [55, 58, 74, 77, 99, 292, 483, 558], "md0": 58, "mask": [58, 571], "taken": [58, 95, 114, 162, 163, 165, 199, 479, 480, 481, 483, 518, 519, 551, 552, 553, 564, 572, 626, 638, 644, 729], "transmat": [58, 62], "ve": 58, "profilesi": [59, 62], "profiles0": 59, "mycas": [59, 536], "myxgendata": 59, "iwind": 59, "addwind": [59, 104, 105], "mywindunit": 59, "mywindprofil": 59, "loadmd": [59, 60, 66, 104, 105], "mytransmat": 59, "apply_profil": [59, 62, 104, 105], "pr_rep": 60, "pr_rel": 60, "pr_add": 60, "pr_tcont": 60, "pr_type": 60, "pr_tmpcd": 60, "pr_txgd": 60, "pr_tctd": 60, "pr_tstgd": 60, "pr_chgtype": 60, "question": [60, 228, 732], "offer": [60, 64], "ct_tbu": [60, 523, 556], "ct_tgen": [60, 476, 523, 556], "ct_tbrch": [60, 476, 523, 556], "ct_tareabu": [60, 523, 556], "ct_tareagen": [60, 523, 556], "ct_tareabrch": [60, 523, 556], "ct_tload": [60, 523, 556], "ct_tareaload": [60, 476, 523, 556], "ct_tgencost": [60, 523, 556], "ct_tareagencost": [60, 523, 556], "commitsch": [60, 64], "initialpg": [60, 64], "rampwearcostcoeff": [60, 64], "positiveactivereservepric": [60, 64], "positiveactivereservequant": [60, 64], "negativeactivereservepric": [60, 64], "negativeactivereservequant": [60, 64], "positiveactivedeltapric": [60, 64], "negativeactivedeltapric": [60, 64], "positiveloadfollowreservepric": [60, 64], "positiveloadfollowreservequant": [60, 64], "negativeloadfollowreservepric": [60, 64], "negativeloadfollowreservequant": [60, 64], "minstoragelevel": [60, 63], "maxstoragelevel": [60, 63], "outeff": [60, 63], "ineff": [60, 63], "lossfactor": [60, 63], "rho": [60, 63], "usual": [60, 521, 581, 595, 603, 604], "idx_ct": [60, 472, 476, 523, 738], "ct_col": [60, 523, 556], "old": [60, 115, 118, 120, 151, 156, 159, 208, 526, 556, 559, 568, 581, 595], "vale": 60, "pre": [60, 113, 247, 254, 452, 454, 456, 457], "iii": 60, "interpret": [60, 300, 637, 638], "whenev": 60, "expans": 60, "within": [60, 106, 108, 113, 114, 247, 248, 402, 460, 463, 474, 492, 508, 567], "varfil": 61, "vartyp": 61, "varnam": 61, "prioriti": [61, 186, 197, 489, 502, 581], "throw": [61, 114], "regardless": [61, 160, 477], "transmati": 62, "contabi": 62, "trajdatai": 62, "contab": 62, "trajdata": 62, "n_t": [62, 74], "n_j": [62, 74], "horizon": [62, 66, 74], "older": [62, 462], "centroid": 62, "n_w": 62, "colnam": [63, 64], "correpsond": 63, "md_init": [63, 104, 105], "unitidx": 63, "expectedterminalstorageaim": 63, "expectedterminalstoragemin": 63, "expectedterminalstoragemax": 63, "initialstorag": 63, "initialstoragelowerbound": 63, "initialstorageupperbound": 63, "initialstoragecost": 63, "terminalstoragepric": 63, "terminalchargingprice0": 63, "terminaldischargingprice0": 63, "terminalchargingpricek": 63, "terminaldischargingpricek": 63, "terminalpg": 64, "commitkei": [64, 66], "initialst": 64, "minup": 64, "mindown": 64, "potenti": [64, 450, 489, 644], "fueltyp": 64, "gen_statu": [64, 476, 523, 558], "mdi": 66, "mdo": [66, 74], "func": [66, 166, 541], "cplex": [66, 114, 118, 125, 153, 156, 165, 203, 208, 581, 583, 595, 695], "gurobi": [66, 114, 115, 120, 121, 131, 155, 156, 165, 205, 208, 227, 581, 586, 595, 698], "build_model": 66, "miqp": [66, 114, 141, 153, 155, 156, 157, 165, 212, 217, 226, 472, 688], "coordin": [66, 199, 247, 450, 483, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 527, 555, 581, 597, 598, 600, 601, 606, 607, 769], "solve_model": 66, "resolve_new_cost": 66, "unchang": [66, 526], "dc_model": 66, "fixed_r": 66, "contstraint": 66, "never": 66, "q_coordin": 66, "security_constraint": 66, "terminal_target": 66, "cyclic": 66, "simultan": [66, 109, 114, 407, 581, 595], "uc": [66, 69, 79, 80, 86], "down": [66, 647, 651, 735], "roll": [66, 186, 189, 489], "happen": 66, "alg": [66, 114, 156, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 178, 181, 183, 199, 208, 334, 568, 581, 604], "miqps_mast": [66, 114, 125, 130, 131, 132, 141, 153, 154, 155, 157, 158, 165, 212, 226, 227, 579], "qps_master": [66, 114, 122, 124, 125, 130, 131, 133, 134, 139, 140, 141, 142, 145, 146, 147, 165, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 224, 226, 227, 640], "skip_pric": [66, 114, 153, 154, 155, 156, 157, 158], "skip": [66, 114, 153, 154, 155, 156, 157, 158, 166, 239, 243], "price_stage_warn_tol": [66, 114, 153, 154, 155, 156, 157, 158], "mi": [66, 114, 153, 154, 155, 156, 157, 158], "econom": [67, 539], "consid": [74, 236, 407, 534, 535], "noth": [74, 249, 255, 301, 308, 450, 581, 595], "though": [74, 460], "incomplet": 74, "nb": [74, 109, 112, 114, 479, 480, 481, 487, 489, 504, 509, 511, 512, 513, 514, 535, 564, 572, 574, 576, 577, 581, 595, 603, 644, 655, 733], "n_b": 74, "n_g": 74, "nl": [74, 478, 479, 480, 481, 509, 510, 513, 516, 518, 536, 576, 577, 603], "n_l": 74, "nc_max": 74, "n_c": 74, "rup": 74, "upward": 74, "rdn": 74, "downward": 74, "lamp": 74, "muf": 74, "selector": [76, 451, 453, 455, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "default_opt": [76, 115, 118, 119, 120, 151, 159, 184, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "valid_opt": [76, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "nested_struct_copi": [76, 213, 226, 227, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "plot": [77, 78, 79, 80, 96, 97, 98, 100, 105, 186, 199, 489, 581], "option1_nam": [77, 78, 79], "option1_valu": [77, 78, 79], "parenthesi": [77, 78, 79, 80], "saveit": [77, 78, 79, 80], "saveal": [77, 78, 79], "savepath": [77, 78, 79, 80, 465], "savenam": [77, 78, 79, 80], "placehold": [77, 78, 79, 80, 109, 114, 199], "size_factor": [77, 78, 79, 80], "font": [77, 78, 79, 80], "marker": [77, 78, 79, 80], "show_pc": 77, "pc": 77, "show_variable_pmax": 77, "show_limit": 77, "show_conting": 77, "show_reserv": 77, "show_grid": [77, 78], "divid": [77, 78], "staircas": 78, "evenli": [78, 103, 628], "align": 78, "smooth": [78, 581, 595], "displac": 78, "sort_tol": 78, "round": 78, "nearest": 78, "sort": 78, "show_expected_initi": 78, "show_expected_fin": 78, "show_adjusted_dispatch": 78, "show_dispatch": 78, "md2": 79, "titl": [79, 80, 199, 255], "subtitl": [79, 80], "legend": [79, 80, 199], "uc1": [79, 80], "uc2": [79, 80], "xlabel": [79, 80, 199], "axi": [79, 80, 199, 655], "ylabel": [79, 80, 199], "rowlabel": [79, 80], "pff": 79, "optin": 80, "red": [80, 307], "status": [80, 249], "grai": 80, "case30": [81, 645, 646, 647, 648, 650, 651, 662], "case30v19": 81, "segment": [81, 483, 555], "tlmp": [83, 84, 99], "cong": [83, 84], "chen": [83, 84], "most_ex5_mpopf": [95, 104, 105], "create_plot": [96, 97, 98, 100], "create_pdf": [96, 97, 98, 100], "savedir": [96, 97, 98, 100], "choic": [96, 97, 98, 100, 199, 243, 572, 581], "sp_plot": 96, "spuc_plot": 97, "suc_plot": 98, "deteminist": 100, "uc_plot": 100, "dynam": [101, 735], "space": [103, 628], "getprofil": [103, 104, 105], "most_summari": [104, 105], "plot_gen": [104, 105], "plot_storag": [104, 105], "plot_uc": [104, 105], "plot_uc_data": [104, 105], "mostver": [104, 105], "addgen2mpc": [104, 105], "addstorag": [104, 105], "filter_ramp_transit": [104, 105], "uniformwindprofil": [104, 105], "most_ex1_": [104, 105], "most_ex2_dcopf": [104, 105], "most_ex3_dcopf_w_uc": [104, 105], "most_ex4_dcopf_ss": [104, 105], "most_ex6_uc": [104, 105], "most_ex7_suc": [104, 105], "ex_case3b": [104, 105], "ex_contab": [104, 105], "ex_load_profil": [104, 105], "ex_storag": [104, 105], "ex_transmat": [104, 105], "ex_wind": [104, 105], "ex_wind_profil": [104, 105], "ex_wind_profile_d": [104, 105], "ex_wind_uc": [104, 105], "ex_xgd": [104, 105], "ex_xgd_ramp": [104, 105], "ex_xgd_r": [104, 105], "ex_xgd_uc": [104, 105], "test_most": [104, 105], "t_most_3b_1_1_0": [104, 105], "t_most_3b_1_1_2": [104, 105], "t_most_3b_3_1_0": [104, 105], "t_most_3b_3_1_2": [104, 105], "t_most_30b_1_1_0": [104, 105], "t_most_30b_1_1_17": [104, 105], "t_most_30b_3_1_0": [104, 105], "t_most_30b_3_1_17": [104, 105], "t_most_fixed_r": [104, 105], "t_most_30b_1_1_0_uc": [104, 105], "t_most_sp": [104, 105], "t_most_spuc": [104, 105], "t_most_mpopf": [104, 105], "t_most_uc": [104, 105], "t_most_suc": [104, 105], "t_most_tlmp": [104, 105], "t_most_w_d": [104, 105], "c118swf": [104, 105], "t_case30_most": [104, 105], "t_case3_most": [104, 105], "t_case_tlmp": [104, 105], "t_case_tlmp_storag": [104, 105], "loadgenericdata": [104, 105], "mpoption_info_most": [104, 105], "sm": [106, 107, 449], "block": [106, 107, 108, 109, 110, 111, 112, 113, 114, 168, 262, 402, 474, 524, 551, 604], "entiti": [106, 107], "shallow": [106, 113, 114], "describe_idx": [106, 113, 114], "get_n": [106, 113], "init_indexed_nam": [106, 108, 109, 110, 111, 112, 113, 114, 474], "set_type_idx_map": [106, 113, 402], "foo": [106, 113, 114, 166, 243], "bar": [106, 113, 114, 243], "suppos": [106, 113], "charg": [106, 483, 535, 536, 553], "fleet": 106, "vehicl": 106, "week": 106, "daili": 106, "discharg": 106, "drive": 106, "batteri": [106, 535], "dai": 106, "battery_st": 106, "new_sm": 106, "sm_var": 106, "idx_list": [106, 107, 108, 109, 110, 111, 112, 113, 114, 337, 402, 474], "v0": [106, 112, 113, 114, 402, 474, 528, 533, 597, 598, 599, 600, 601, 602, 737], "vl": [106, 108, 112, 113, 114, 402, 474, 604], "vu": [106, 112, 113, 114, 402, 474], "sm_lin": 106, "varset": [106, 109, 110, 113, 114, 337, 474], "sm_nle": 106, "computed_bi": [106, 113, 474], "sm_nli": 106, "sm_qdc": 106, "cp": [106, 113, 337, 474, 535, 614], "sm_nlc": 106, "tell": 106, "361": [106, 113], "semicolon": [106, 113, 114, 249, 252, 255, 307, 308, 402, 407, 462, 474], "retun": [106, 249, 252, 255, 307, 308, 402, 407, 462], "dim_list": [106, 113, 114], "group_by_nam": [106, 113, 402], "boolean": [106, 107, 108, 109, 112, 228, 232, 234, 236, 237, 238, 240, 246, 247, 249, 255, 256, 402, 407, 465], "consolid": [106, 113, 402], "lin": [106, 108, 113, 114, 454, 474, 521, 603, 604], "set_manag": [107, 108, 109, 110, 111, 112, 113, 114, 226, 227, 449], "set_param": [107, 108, 109, 110, 111, 112, 114], "has_parsed_soln": [107, 114], "fid": [107, 108, 109, 110, 111, 112, 114, 637], "sm_variabl": [107, 108, 109, 110, 111, 114, 226, 227], "among": [107, 108, 109, 110, 111, 112, 243], "eflag": [107, 108, 109, 110, 111, 112, 114], "failur": [107, 108, 109, 110, 111, 112, 114, 156, 167, 168, 169, 170, 171, 174, 180, 181, 208, 450], "fileid": [107, 108, 109, 110, 111, 112], "parse_soln": [107, 108, 109, 112, 114], "stash": [107, 108, 109, 112, 114], "set_manager_opt_model": [108, 109, 110, 111, 112, 226, 227, 449], "cach": [108, 111, 112, 114, 228, 449, 453, 455, 474], "eval": [108, 109, 110, 111, 114, 179, 206], "get_soln": [108, 109, 110, 111, 112, 114], "fetch": [108, 109, 110, 111, 112, 114], "memori": [108, 114, 201, 581, 595], "avl": [108, 114, 566], "lvl": [108, 114, 566], "uvl": [108, 114, 566], "subsequ": [108, 111, 112, 114, 186, 228, 474, 498, 501, 526], "pmi": [108, 109, 114, 603, 604], "ax_u": [108, 114], "l_ax": [108, 114], "otheris": [108, 109, 110, 111], "n_x": [108, 109, 110, 111], "mu_l_pmis_5_3": 108, "effici": [108, 109, 112, 114, 479, 523, 567], "nln": [109, 603, 604], "nle": [109, 113, 114, 254, 454, 474, 603, 604], "eval_hess": [109, 114], "account": [109, 110], "g_": [109, 295, 304], "implment": [109, 110], "nlps_master": [109, 114, 127, 128, 133, 134, 136, 163, 178, 179, 180, 182, 183, 215, 226, 227], "friend": [109, 114, 162, 163, 164, 165], "d2g": [109, 114, 304, 403, 611, 618], "likewis": [109, 114, 474], "qmi": [109, 114, 603, 604], "iseq": [109, 114], "dg_pmis_5_3": 109, "nlc": [110, 113, 114, 474], "fcn1": [110, 114], "my_cost_function1": [110, 114], "other_arg": [110, 114], "fcn2": [110, 114], "my_cost_function2": [110, 114], "mycost1": [110, 114], "mycost2": [110, 114], "df_pg_2_4": [110, 111], "qdc": [111, 113, 114, 474], "conform": [111, 114, 567], "quad_cost1": [111, 114], "q1": [111, 114], "c1": [111, 114, 483, 484, 555], "lin_cost2": [111, 114], "c2": [111, 114, 484], "k2": [111, 114], "varsets_idx": [112, 114], "varsets_len": [112, 114], "varsets_x": [112, 114], "varsets_cell2struct": [112, 114], "accept": [112, 114, 300], "vmin": [112, 114, 484, 507, 523, 554, 581, 732], "vmax": [112, 114, 484, 507, 523, 554, 581, 732], "nx": [112, 114, 153, 154, 155, 156, 157, 158, 186, 187, 188, 199, 312, 474, 489, 492, 494, 498, 501, 506, 508, 673, 674], "pg0": [112, 114, 402], "zij0": [112, 114, 402], "zijmin": [112, 114], "zijmax": [112, 114], "ztype": [112, 114, 402], "yl": 112, "yu": 112, "va0": [112, 522], "vau": 112, "vat": 112, "mupmin": [112, 114], "mupmax": [112, 114], "murmin_2_3": 112, "nv": [112, 114, 402], "return_vector": 112, "presenc": 112, "def_set_typ": [113, 114, 319, 321, 324, 326, 328, 402, 403, 404, 405, 406, 474], "set_typ": [113, 114, 402, 474], "userdata": [113, 114, 249], "add_named_set": [113, 319, 321, 324, 326, 328, 402, 474], "declar": 113, "init_set_typ": [113, 319, 321, 324, 326, 328, 402, 474], "ideal": [113, 248, 475], "due": [113, 114], "bug": [113, 201, 463], "alter": 113, "savannah": [113, 463], "52614": 113, "workaround": 113, "sure": 113, "add_": [113, 114], "valid_named_set_typ": 113, "public": [113, 474], "display_set": 113, "screen": [113, 484, 581, 595], "get_userdata": [113, 114], "retreiv": [113, 114, 474], "getn": [113, 114], "params_": 113, "a_struct": [113, 114], "an_obj": 113, "stype": 113, "sname": 113, "deprec": [113, 114, 483, 566, 568, 579, 581, 603, 640, 688, 722, 733], "field1": 113, "field2": 113, "var_ord": 113, "unpack": 113, "pmismatch": [113, 114], "idx1": [113, 114, 407], "idx2": [113, 114, 407], "set_type1": [113, 114], "set_type2": [113, 114], "mu_l_foo": [113, 114], "mu_u_foo": [113, 114], "nbar": [113, 114], "prefer": [113, 114, 523], "haven": [113, 114], "om": [114, 175, 176, 177, 337, 454, 474, 475, 521, 603, 604, 608, 609, 610, 611, 612, 617, 618, 619, 643], "intial": 114, "params_var": [114, 402], "params_lin_constraint": 114, "params_nln_constraint": 114, "eval_nln_constraint": 114, "eval_nln_constraint_hess": 114, "params_nln_cost": 114, "params_quad_cost": 114, "eval_nln_cost": 114, "eval_quad_cost": 114, "problem_typ": 114, "is_solv": 114, "indentifi": 114, "ghne": 114, "ghni": 114, "ghl": 114, "prob_typ": 114, "jac": [114, 167, 168, 169, 171, 174, 199, 604, 735], "leq": [114, 216], "nleq": [114, 162, 214, 218, 226], "prob": [114, 174], "lagrang": [114, 177, 554, 607, 611, 618, 621, 623, 625], "an_om": 114, "sm_nln_cost": [114, 226, 227], "sm_quad_cost": [114, 226, 227], "4th": [114, 402, 474, 476, 510, 512, 514, 524, 525, 551, 552], "is_mixed_integ": 114, "sm_nln_constraint": [114, 226, 227], "sm_lin_constraint": [114, 226, 227], "IN": [114, 474], "5th": [114, 476, 511, 513, 516, 518, 551], "6th": [114, 476], "pgcost": 114, "lin_con_1": 114, "nle_con_b": 114, "eval_lin_constraint": 114, "dg_b_2_3": 114, "unbound": [114, 154, 202, 204, 483, 553, 564, 732], "nleqs_mast": [114, 129, 162, 167, 168, 169, 170, 172, 173, 174, 199, 214, 226, 227], "mosek": [114, 141, 156, 157, 159, 160, 165, 208, 209, 581, 592, 595, 702], "linprog": [114, 139, 140, 156, 158, 204, 208, 211, 581, 590, 595], "glpk": [114, 119, 130, 154, 156, 165, 204, 208, 581, 585, 697], "bpmpd": [114, 122, 165, 201, 208, 581, 595], "milp": [114, 130, 132, 141, 153, 154, 155, 156, 157, 165, 212, 227, 472], "tbx": [114, 156, 208, 532, 704], "intlingprog": 114, "minlp": [114, 163], "art": [114, 115, 136, 137, 138, 152, 163, 180, 181, 207, 581, 589, 595, 708], "knitro": [114, 115, 136, 137, 138, 152, 163, 180, 181, 183, 207, 208, 581, 589, 595, 708], "bpmpd_mex": [114, 122, 201, 208, 581, 595, 693], "clp": [114, 124, 142, 202, 208, 581, 582, 694], "fast": [114, 168, 171, 334, 528, 568, 581, 595, 737], "newon": 114, "fsolv": [114, 129, 162, 164, 168, 169, 170, 171, 174], "gauss": [114, 167, 170, 171, 533, 581, 595, 737], "seidel": [114, 167, 170, 171, 533, 581, 595], "ipopt": [114, 133, 134, 151, 163, 179, 181, 183, 206, 208, 581, 588, 595, 707], "coin": [114, 124, 133, 142, 151, 179, 181, 202, 206, 208, 581, 595], "pure": [114, 181, 208, 581, 595], "mips_opt": [114, 181, 208], "variant": [114, 181, 208, 595], "osqp": [114, 145, 184, 185, 208, 210, 227, 581, 593, 703], "ot": [114, 156, 165, 208, 535, 581], "intlinprog": [114, 132, 156, 158, 587], "bp_opt": [114, 201, 208], "bp": [114, 122, 201, 208, 528, 568], "clp_opt": [114, 202, 208], "cplex_opt": [114, 153, 156, 203, 208, 226, 227, 581, 595], "fd_opt": [114, 168, 171], "nleqs_fd_newton": [114, 171, 226, 227], "fmincon_opt": [114, 178, 181], "fsolve_opt": [114, 169, 171], "glpk_opt": [114, 154, 156, 204, 208], "grb_opt": [114, 120, 155, 156, 205, 208, 595], "gs_opt": [114, 170, 171], "nleqs_gauss_seidel": [114, 167, 171, 226, 227], "intlinprog_opt": [114, 156, 158], "ipopt_opt": [114, 179, 181, 206, 208, 226, 227, 581, 595], "knitro_opt": [114, 115, 180, 181, 207, 208, 581, 595], "leq_opt": 114, "absolut": [114, 476, 529], "linprog_opt": [114, 156, 158, 208, 211], "mosek_opt": [114, 156, 157, 208, 209, 226, 227, 581, 595], "newton_opt": [114, 171, 174], "nleqs_newton": [114, 167, 171, 226, 227], "osqp_opt": [114, 208, 210, 226, 227, 581], "quadprog_opt": [114, 208, 211], "relax_integ": 114, "relax": [114, 546, 581, 732], "elaps": [114, 243, 450, 604, 631, 644, 645, 646, 647, 648, 650, 651], "sec": [114, 249, 483, 558], "pnes_mast": [114, 164, 186, 191, 192, 193, 197, 198, 223, 226, 227], "mp_linsolv": 114, "constrainst": 114, "recheck": 114, "pne": [114, 164, 186, 194, 195, 196, 197, 198, 220, 223, 226], "dx": 114, "nne": 114, "nni": 114, "nnc": 114, "st": [114, 479, 480, 481, 491, 509, 518, 535, 603, 604], "fname": [115, 118, 119, 120, 151, 159, 184, 252, 253, 450, 529, 561, 581, 631, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "normal": [115, 118, 119, 120, 151, 159, 184, 186, 194, 195, 196, 248, 487, 489, 495, 496, 499, 504, 608, 644, 649, 730, 732], "modified_opt": [115, 118, 119, 120, 151, 159, 184], "violat": [115, 118, 120, 151, 159, 180, 184, 294, 491, 492, 497, 498, 500, 501, 507, 508, 581, 595, 650, 732], "feasibilitytol": [115, 120], "displayinterv": [115, 120], "outputflag": [115, 120], "logtoconsol": [115, 120], "tol_x": [115, 178, 180, 581], "xtol": [115, 581], "tol_f": [115, 178, 180, 581], "ftol": 115, "maxit": [115, 180, 581], "opt_fnam": [115, 118, 119, 120, 151, 159, 184, 581], "knitro_user_options_": 115, "Their": [115, 118, 119, 120, 151, 159, 184, 576], "preced": [115, 118, 119, 120, 151, 159, 162, 163, 164, 165, 184], "knitro_user_options_3": 115, "3000": [115, 120], "app": 115, "ieq": [116, 117], "igt": [116, 117], "ilt": [116, 117], "ae": [116, 117], "ai": [116, 117, 567], "bi": [116, 117], "convert_lin_constraint_multipli": [116, 226, 227], "eq": 117, "convert_lin_constraint": [117, 226, 227], "cplexoptimset": 118, "simplex": [118, 140, 160, 581, 595], "barrier": [118, 581, 595], "conflict": 118, "sift": [118, 581, 595], "tune": 118, "lpmethod": [118, 581], "qpmethod": [118, 581], "cplex_user_options_": 118, "cplex_user_options_3": 118, "thread": [118, 120, 581, 595], "refactor": 118, "timelimit": [118, 120, 581, 595], "10000": 118, "ibm": [118, 125, 581], "knowledgecent": 118, "sssa5p": 118, "cplexlp": [118, 125, 153, 203], "cplexqp": [118, 125, 153, 203], "msglev": 119, "glpk_user_options_3": 119, "lpsolver": 119, "gurobi_user_options_": 120, "gurobi_user_options_3": 120, "optimalitytol": 120, "barconvtol": 120, "iterationlimit": 120, "bariterlimit": 120, "200": [120, 208, 581, 595], "crossov": 120, "presolv": 120, "bpopt": 122, "catch": 123, "me": 123, "catchm": 123, "try": 123, "OR": [124, 133, 142, 202], "ilog": 125, "evalc": 126, "ver": [128, 140], "int": [128, 526], "mtd": 128, "fmincon_ipm": 128, "kit": [130, 154, 204], "r2014a": 132, "ipopt_auxdata": 134, "isequaln": 135, "knitromatlab": [136, 137, 180], "knitro_nlp": [137, 180], "have_feature_knitro": [137, 138, 226, 227], "ktrlink": 138, "prior": [138, 186, 489], "have_feature_linprog_d": [139, 226, 227], "availblti": 140, "linprog_d": 140, "r2014b": 140, "have_feature_linprog": [140, 226, 227], "mosekopt": [141, 157, 159, 209], "opti_clp": 142, "opti": 142, "inverseproblem": 142, "have_feature_clp": [142, 226, 227], "optimopt": [144, 169, 178, 581], "have_feature_optim": [144, 226, 227], "have_feature_quadprog_l": [146, 226, 227], "larg": [147, 165, 178, 479, 527, 581], "quadprog_l": 147, "convex": 147, "have_feature_quadprog": [147, 226, 227], "sdpt3": 148, "sdp": [148, 149, 581], "sqlp": 148, "sedumi": [149, 581], "lehigh": [149, 581], "yalmip": [150, 581], "platform": 150, "io": [150, 179, 206, 581], "constr_viol_tol": 151, "print_level": 151, "ipopt_user_options_": 151, "ipopt_user_options_3": 151, "nlp_scaling_method": 151, "none": [151, 189, 199, 228, 246, 490, 523, 554, 732], "500": [151, 156, 208, 581, 595], "derivative_test": 151, "knitro_solv": 152, "vtype": [153, 154, 155, 156, 157, 158, 302, 402], "semi": [153, 155, 156, 546], "cplexmiqp": 153, "cplexmilp": 153, "glkp": 154, "dummi": [154, 204], "NOT": [154, 202, 204, 529, 581, 595], "errnum": [154, 204], "700": [156, 208, 595], "tour": 156, "node009": 156, "195": 156, "273": 156, "1365": 156, "msk_dpar_intpnt_tol_pfea": 159, "lp_alg": [159, 581], "msk_ipar_optim": [159, 581, 595], "msk_ipar_intpnt_max_iter": [159, 581, 595], "gap_tol": [159, 581], "msk_dpar_intpnt_tol_rel_gap": [159, 581, 595], "max_tim": [159, 581], "msk_dpar_optimizer_max_tim": [159, 581, 595], "num_thread": [159, 581], "msk_ipar_intpnt_num_thread": [159, 581, 595], "mosek_user_options_": 159, "mosek_user_options_3": 159, "msk_dpar_intpnt_tol_dfea": 159, "msk_ipar_sim_max_iter": 159, "5000000": 159, "manaul": 159, "symbol": [159, 160], "mosek_symbcon": [159, 226, 227, 581], "stuct": 160, "safer": 160, "mosek_lp_alg": [160, 595], "v7": 160, "msk_optimizer_dual_simplex": 160, "nleqopt": 162, "nlpopt": 163, "pneopt": 164, "qpopt": 165, "nest": [166, 462, 463, 525, 527, 552], "destin": 166, "recurs": 166, "manner": 166, "valid_field": 166, "invalid": 166, "copy_mod": 166, "pointer": 166, "heirarchi": 166, "home": 166, "t_nested_struct_copi": [166, 226, 227], "sp": [167, 581], "default_max_it": 167, "need_jac": 167, "update_fcn": 167, "partial": [167, 169, 171, 174, 199, 303, 496, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 536, 573, 682], "tol": [167, 168, 169, 170, 171, 174, 178, 180, 198, 479, 480, 481, 503, 581, 595], "normf": [167, 168, 170, 174], "normdx": 167, "chilimath": [167, 169, 171, 174, 199], "lesson": [167, 169, 171, 174, 199], "advanc": [167, 169, 171, 174, 199], "algebra": [167, 169, 171, 174, 199], "f1": [167, 169, 171, 174, 483, 555], "newton_update_fcn": 167, "jac_approx_fcn": 168, "jj": 168, "approxim": [168, 174, 499, 581], "christi": [168, 170], "patton": [168, 170], "luk": [168, 170], "youtub": [168, 170], "watch": [168, 170], "pjg4yhtgerg": [168, 170], "57": [168, 170, 173], "jac_approx_fcn2": 168, "optimset": [169, 178, 581], "nleqs_cor": [170, 171, 174, 226, 227], "x_update_fcn": 170, "x_update_fcn2": 170, "core_sp": 171, "nleqs_fsolv": [171, 226, 227], "lin_solv": [174, 581], "larger": [174, 581, 656], "decomp": 174, "substitutn": 174, "reorder": [174, 475, 524, 525, 551, 552, 581], "suitabl": [175, 176, 177, 178, 581, 634, 654], "tini": [175, 177], "sparsiti": [175, 177], "nlp_costfcn": [175, 177, 226, 227], "nlp_hessfcn": [175, 176, 226, 227], "nlp_consfcn": [176, 177, 226, 227], "bfg": [178, 581, 595], "lbfg": [178, 581, 595], "exact": [178, 581, 595], "finit": [178, 581, 595], "sqp": [178, 581], "ipreturncodes__inc_8h_sourc": [179, 206], "cpu": [179, 206], "aret": 180, "3_referencemanu": 180, "knitromatlabrefer": 180, "funccount": 180, "constrviol": 180, "firstorderopt": 180, "measur": 180, "nlps_fmincon": [181, 226, 227], "nlps_ipopt": [181, 226, 227], "nlps_knitro": [181, 226, 227], "eps_prim_inf": 184, "osqp_user_options_3": 184, "polish": 184, "5000": [184, 561], "solver_set": [184, 210], "cx": [186, 187, 188, 191, 192, 312, 489, 491, 492, 493, 494, 497, 498, 500, 501, 505, 506, 507, 508, 673, 674], "px": [186, 187, 188, 312, 489, 492, 494, 498, 501, 506, 508, 673, 674], "regist": [186, 189, 197, 198, 489, 490, 502, 503, 526], "pne_register_callback": [186, 199, 226, 227], "cb": [186, 199, 489], "recent": [186, 489], "x_hat": [186, 199], "predictor": [186, 199, 451, 489, 499, 504, 644], "corrector": [186, 199, 451, 487, 489, 644], "tangent": [186, 191, 194, 195, 196, 199, 487, 489, 493, 495, 496, 499, 504, 644], "default_step": [186, 199, 489], "default_parm": [186, 199, 489], "this_step": [186, 489], "this_parm": [186, 489], "parm": [186, 199, 489], "event": [186, 187, 188, 189, 190, 191, 192, 198, 199, 312, 489, 490, 491, 492, 493, 494, 497, 498, 500, 501, 503, 505, 506, 507, 508, 644], "pne_detect_ev": [186, 190, 226, 227], "care": [186, 489], "efv": [186, 191, 192], "propos": [186, 189, 489], "done_msg": [186, 187, 188, 199, 644], "reason": [186, 247, 489], "warmstart": [186, 199, 451], "warm": [186, 199, 314, 451], "rollback": [186, 189, 198, 489, 490, 492, 494, 498, 501, 503, 506, 508, 644, 673, 674], "retri": [186, 489], "request": [186, 189, 198, 453, 455, 489, 490, 498, 501, 503], "msg": [186, 187, 188, 189, 199, 234, 236, 237, 239, 240, 489, 490, 492, 494, 498, 501, 506, 508, 631, 644], "negat": [186, 489], "my_cback": [186, 197, 199], "nose": [187, 191, 199, 489, 493, 494, 581, 644], "pne_event_nos": [187, 192, 198, 226, 227], "rais": [187, 188, 492, 494, 506, 508], "pne_callback_default": [187, 188, 197, 199, 226, 227], "target_lam": [188, 189, 490, 506], "pne_event_target_lam": [188, 191, 198, 226, 227], "predict": [188, 196, 199, 487, 495, 496, 499, 504, 506, 644], "overshoot": [188, 506], "adjust": [188, 290, 296, 453, 506], "reg_ev": [189, 198], "nefv": 189, "cefv": 189, "critical_ev": [189, 490], "eidx": [189, 490], "interv": [189, 190, 490], "critic": [189, 199, 490, 570, 644], "step_scal": [189, 490], "linearli": [189, 490, 604, 605], "interpol": [189, 249, 451, 490], "estim": [189, 490, 581], "qlim": [189, 490, 501], "event_log": 190, "ev": 190, "search": [190, 562], "detec": 190, "pne_mast": 191, "stop_at": [191, 192, 199, 581, 644], "pne_register_ev": [191, 192, 199, 226, 227], "xp": [194, 195, 196, 199], "zp": [194, 195, 196, 199], "arc": [194, 196, 199, 581], "dp": [194, 195, 196], "distanc": 194, "paramer": [194, 195, 196], "pne_pfcn_natur": [194, 196, 226, 227], "pne_pfcn_pseudo_arc_len": [194, 195, 226, 227], "pne_pfcn_arc_len": [195, 196, 226, 227], "pseudo": [196, 199, 581], "lie": [196, 460], "hyperplan": 196, "orthogon": 196, "correct": [196, 199, 455, 480, 576, 581, 626, 644], "reg_cb": 197, "pne_callback_nos": [197, 226, 227], "pne_callback_target_lam": [197, 226, 227], "my_ev": [198, 199], "default_event_tol": [198, 199], "nleqs_opt": 199, "solve_bas": 199, "stop": [199, 581], "lam_stop": [199, 581], "adapt_step": [199, 581, 644], "toggl": [199, 228, 581], "adapt": [199, 581, 644], "disabl": [199, 581, 729, 730, 731, 732, 770], "adapt_step_damp": [199, 581], "damp": [199, 581, 595], "adapt_step_tol": [199, 581], "adapt_step_w": 199, "step_min": [199, 581], "step_max": [199, 581], "target_lam_tol": [199, 581], "nose_tol": [199, 581], "output_fcn": 199, "increment": [199, 236, 237, 239, 581], "paus": [199, 581], "yfcn": 199, "idx_default": 199, "xname": 199, "yname": 199, "xfcn": 199, "title2": 199, "ne": [199, 249], "lam_hat": [199, 487, 489, 499, 644], "max_lam": [199, 644], "cont_step": 199, "counter": [199, 232, 233, 450], "opposit": [199, 730], "dir_from_jac_eig": 199, "smallest": 199, "eigenvalu": 199, "pnes_callback_default": 199, "f1p": 199, "suboptim": 201, "explan": [202, 604, 605], "gkpk": 204, "knitro_qp": 207, "knitro_lp": 207, "400": [208, 581, 595], "artelys_knitro_opt": [226, 227], "glpk_option": [226, 227], "gurobi_opt": [226, 227, 581, 595], "mpopt2nleqopt": [226, 227], "mpopt2nlpopt": [226, 227], "mpopt2pneopt": [226, 227], "mpopt2qpopt": [226, 227], "gurobiv": [226, 227], "knitrov": [226, 227], "mpomver": [226, 227], "osqpver": [226, 227], "miqps_cplex": [226, 227], "miqps_glpk": [226, 227], "miqps_gurobi": [226, 227], "miqps_mosek": [226, 227], "miqps_ot": [226, 227], "pne_detected_ev": [226, 227], "qps_bpmpd": [226, 227], "qps_clp": [226, 227], "qps_cplex": [226, 227], "qps_glpk": [226, 227], "qps_gurobi": [226, 227], "qps_ipopt": [226, 227], "qps_knitro": [226, 227], "qps_mosek": [226, 227], "qps_osqp": [226, 227], "qps_ot": [226, 227], "nleqs_master_ex1": [226, 227], "nleqs_master_ex2": [226, 227], "nlps_master_ex1": [226, 227], "nlps_master_ex2": [226, 227], "pne_ex1": [226, 227], "qp_ex1": [226, 227], "test_mp_opt_model": [226, 227], "t_miqps_mast": [226, 227], "t_nleqs_mast": [226, 227], "t_nlps_master": [226, 227], "t_om_solve_leq": [226, 227], "t_om_solve_miqp": [226, 227], "t_om_solve_nleq": [226, 227], "t_om_solve_nlp": [226, 227], "t_om_solve_pn": [226, 227], "t_om_solve_qp": [226, 227], "t_opt_model": [226, 227], "t_pnes_mast": [226, 227], "t_qps_master": [226, 227], "have_feature_bpmpd": [226, 227], "have_feature_catchm": [226, 227], "have_feature_cplex": [226, 227], "have_feature_evalc": [226, 227], "have_feature_fmincon_ipm": [226, 227], "have_feature_fmincon": [226, 227], "have_feature_fsolv": [226, 227], "have_feature_glpk": [226, 227], "have_feature_gurobi": [226, 227], "have_feature_intlinprog": [226, 227], "have_feature_ipopt_auxdata": [226, 227], "have_feature_ipopt": [226, 227], "have_feature_isequaln": [226, 227], "have_feature_knitromatlab": [226, 227], "have_feature_ktrlink": [226, 227], "have_feature_mosek": [226, 227], "have_feature_opti_clp": [226, 227], "have_feature_optimopt": [226, 227], "have_feature_osqp": [226, 227], "have_feature_sdpt3": [226, 227], "have_feature_sedumi": [226, 227], "have_feature_yalmip": [226, 227], "rtype": 228, "ver_str": 228, "vstr": 228, "ver_num": 228, "vnum": 228, "rdate": 228, "all_info": 228, "clear_cach": 228, "availabl": 228, "clear": 228, "011004": 228, "feb": 228, "av": 228, "have_feature_": 228, "disp": [228, 307], "have_feature_matlab": [228, 243, 244], "have_feature_octav": [228, 243, 244], "num_of_test": 232, "t_ok": [232, 233, 234, 236, 239, 240, 241, 243, 244], "t_i": [232, 233, 234, 237, 239, 240, 241, 243, 244], "t_file_match": [232, 233, 236, 237, 239, 240, 241, 243, 244], "t_str_match": [232, 233, 234, 236, 237, 239, 241, 243, 244], "t_skip": [232, 233, 234, 236, 237, 240, 243, 244], "t_end": [232, 234, 236, 237, 238, 239, 240, 243, 244], "pi": [232, 233, 236, 237, 239, 243, 536], "statist": 233, "t_begin": [233, 234, 236, 237, 238, 239, 240, 243, 244], "got_fnam": 234, "exp_fnam": 234, "rep": [234, 240], "del_got_fnam": 234, "ok": [234, 236, 237, 240, 243], "compar": [234, 240, 485, 554, 555, 638], "regexprep": [234, 240], "strrep": [234, 240], "eol": [234, 240], "test_generated_output": [234, 240], "expected_output": [234, 240], "mytest": [234, 240], "got": [236, 240], "prec": 236, "nan": [236, 571, 637, 638], "cond": 237, "expr": 237, "test_nam": 238, "t_loadcas": [238, 472, 738], "t_jacobian": [238, 472, 738], "t_hessian": [238, 472, 738], "strcmp": 240, "fileread": [240, 632, 639], "familiar": 243, "clone": 243, "repositori": 243, "mptestxxx": 243, "xxx": 243, "kept": [243, 489], "denot": [243, 272, 276, 282, 284, 292, 293, 580], "test_mptest": [243, 244], "resembl": 243, "t_test_fcn": [243, 244], "t_have_featur": [243, 244], "mptest_ex1": 243, "test_everything_ex1": 243, "09": 243, "mptestver": [243, 244], "guidelin": 243, "report": [243, 535, 581, 595], "claus": 243, "bsd": 243, "agenc": 243, "task_pf_legaci": [245, 472], "task_cpf_legaci": [245, 472], "task_opf_legaci": [245, 254, 472], "task_shared_legaci": [245, 452, 454, 456, 472], "dme_branch_opf": [245, 472], "dme_bus_opf": [245, 472], "dme_gen_opf": [245, 472], "dme_load_cpf": [245, 472], "dme_load_opf": [245, 472], "dme_shunt_cpf": [245, 472], "dme_shunt": [245, 296, 297, 472], "dme_shunt_opf": [245, 472], "dm_converter_mpc2_legaci": [245, 454, 472], "dmce_branch_mpc2": [245, 472], "dmce_bus_mpc2": [245, 472], "dmce_load_mpc2": [245, 457, 472], "dmce_shunt_mpc2": [245, 472], "net_model_ac": [245, 404, 405, 472], "net_model_acc": [245, 472], "nme_branch_ac": [245, 410, 411, 472], "nme_branch_acc": [245, 472], "nme_branch_acp": [245, 472], "nme_branch_dc": [245, 472], "nme_bus_acc": [245, 472], "nme_bus_dc": [245, 472], "nme_gen_ac": [245, 428, 429, 472], "nme_gen_acc": [245, 472], "nme_gen_dc": [245, 472], "nme_load_ac": [245, 440, 441, 472], "nme_load_acc": [245, 472], "nme_load_acp": [245, 472], "nme_load_dc": [245, 472], "nme_shunt": [245, 444, 447, 472], "nme_shunt_ac": [245, 445, 446, 472], "nme_shunt_acc": [245, 472], "nme_shunt_acp": [245, 472], "nme_shunt_dc": [245, 472], "math_model_pf": [245, 330, 335, 472], "math_model_pf_ac": [245, 331, 332, 333, 334, 472], "math_model_pf_acci": [245, 472], "math_model_pf_acc": [245, 472], "math_model_pf_acpi": [245, 472], "math_model_pf_acp": [245, 472], "math_model_pf_dc": [245, 472], "math_model_cpf_acc": [245, 310, 472], "math_model_cpf_acci": [245, 472], "math_model_cpf_acp": [245, 313, 472], "math_model_cpf_acpi": [245, 472], "math_model_opf": [245, 308, 316, 327, 472], "math_model_opf_ac": [245, 317, 322, 472], "math_model_opf_acci": [245, 319, 472], "math_model_opf_acci_legaci": [245, 472], "math_model_opf_accs_legaci": [245, 472], "math_model_opf_acpi": [245, 324, 472], "math_model_opf_acpi_legaci": [245, 472], "math_model_opf_acps_legaci": [245, 472], "math_model_opf_dc": [245, 328, 472], "math_model_opf_dc_legaci": [245, 472], "mm_shared_pfcpf": [245, 308, 339, 347, 472], "mm_shared_pfcpf_ac": [245, 341, 344, 472], "mm_shared_pfcpf_ac_i": [245, 342, 345, 472], "mm_shared_pfcpf_acc": [245, 311, 332, 342, 472], "mm_shared_pfcpf_acci": [245, 310, 331, 472], "mm_shared_pfcpf_acp": [245, 314, 334, 345, 472], "mm_shared_pfcpf_acpi": [245, 313, 333, 472], "mm_shared_pfcpf_dc": [245, 335, 472], "mm_shared_opf_legaci": [245, 319, 321, 324, 326, 328, 454, 472], "mme_branch_pf_ac": [245, 472], "mme_branch_pf_dc": [245, 472], "mme_branch_opf": [245, 350, 353, 472], "mme_branch_opf_ac": [245, 351, 352, 472], "mme_branch_opf_acc": [245, 472], "mme_branch_opf_acp": [245, 472], "mme_branch_opf_dc": [245, 472], "mme_bu": [245, 360, 363, 364, 365, 472], "mme_bus_pf_ac": [245, 472], "mme_bus_pf_dc": [245, 472], "mme_bus_opf_ac": [245, 361, 362, 472], "mme_bus_opf_acc": [245, 472], "mme_bus_opf_acp": [245, 472], "mme_bus_opf_dc": [245, 472], "mme_gen_pf_ac": [245, 472], "mme_gen_pf_dc": [245, 472], "mme_gen_opf": [245, 377, 379, 472], "mme_gen_opf_dc": [245, 472], "mme_load": [245, 392, 393, 472], "mme_load_pf_ac": [245, 391, 472], "mme_load_pf_dc": [245, 472], "mme_load_cpf": [245, 472], "mme_shunt": [245, 398, 399, 472], "mme_shunt_pf_ac": [245, 397, 472], "mme_shunt_pf_dc": [245, 472], "mme_shunt_cpf": [245, 472], "mp_table_subclass": [245, 247, 248, 472, 741], "mapped_arrai": [245, 300, 472, 754], "sm_legacy_cost": [245, 472], "dmce_reserve_gen_mpc2": [245, 461, 472], "dmce_reserve_zone_mpc2": [245, 461, 472], "dme_reserve_gen": [245, 461, 472], "dme_reserve_zon": [245, 461, 472], "mme_reserve_gen": [245, 461, 472], "mme_reserve_zon": [245, 461, 472], "dmce_bus3p_mpc2": [245, 458, 472], "dmce_gen3p_mpc2": [245, 458, 472], "dmce_load3p_mpc2": [245, 458, 472], "dmce_line3p_mpc2": [245, 458, 472], "dmce_xfmr3p_mpc2": [245, 458, 472], "dmce_buslink_mpc2": [245, 458, 472], "dme_bus3p_opf": [245, 458, 472], "dme_gen3p_opf": [245, 458, 472], "dme_load3p_opf": [245, 458, 472], "dme_line3p_opf": [245, 458, 472], "dme_xfmr3p_opf": [245, 458, 472], "dme_buslink_opf": [245, 458, 472], "nme_bus3p": [245, 415, 416, 472], "nme_bus3p_acc": [245, 458, 472], "nme_bus3p_acp": [245, 458, 472], "nme_gen3p": [245, 425, 426, 472], "nme_gen3p_acc": [245, 458, 472], "nme_gen3p_acp": [245, 458, 472], "nme_load3p": [245, 458, 472], "nme_line3p": [245, 458, 472], "nme_xfmr3p": [245, 458, 472], "nme_buslink": [245, 421, 422, 472], "nme_buslink_acc": [245, 458, 472], "nme_buslink_acp": [245, 458, 472], "mme_bus3p": [245, 358, 359, 458, 472], "mme_gen3p": [245, 375, 458, 472], "mme_line3p": [245, 389, 458, 472], "mme_xfmr3p": [245, 401, 458, 472], "mme_buslink": [245, 367, 370, 472], "mme_buslink_pf_ac": [245, 371, 372, 472], "mme_buslink_pf_acc": [245, 458, 472], "mme_buslink_pf_acp": [245, 458, 472], "mme_bus3p_opf_acc": [245, 458, 472], "mme_bus3p_opf_acp": [245, 458, 472], "mme_gen3p_opf": [245, 458, 472], "mme_line3p_opf": [245, 458, 472], "mme_xfmr3p_opf": [245, 458, 472], "mme_buslink_opf": [245, 368, 369, 472], "mme_buslink_opf_acc": [245, 458, 472], "mme_buslink_opf_acp": [245, 458, 472], "enumer": 246, "is_valid": 246, "seal": [246, 463], "poly_n": 247, "pwl_n": 247, "pwl_qty": 247, "pwl_cost": 247, "dot": [247, 462, 463], "var_nam": [247, 256, 462, 463], "subsref": [247, 248, 256, 307, 462, 463], "subsasgn": [247, 248, 307, 462, 463], "deleg": [247, 303, 463], "readabl": [247, 302, 304, 305, 306, 402], "c_0": 247, "c_1": 247, "c_n": 247, "c_j": 247, "f_1": 247, "f_2": 247, "x_n": 247, "f_n": 247, "quantii": 247, "x_j": 247, "piecwis": 247, "f_j": 247, "pu_bas": [247, 248], "polynmi": 247, "i0": [247, 307, 376, 383], "i2": [247, 376, 383, 526, 559], "x_scale": 247, "ccm": 247, "sum_": 247, "f_i": 247, "x_i": 247, "eval_poly_fcn": 247, "diff_poly_fcn": 247, "cumbersom": 248, "pp_flag": [249, 251], "pp_section_label": 249, "pp_section_list": [249, 251], "pp_have_sect": [249, 255], "pp_section": 249, "pp_get_head": [249, 255], "pp_get_headers_cnt": 249, "pp_get_headers_ext": 249, "pp_data": [249, 255], "set_bus_v_lims_via_vg": 249, "bus3p": [249, 277, 458], "new_dm": [249, 255], "elm": 249, "s0": 249, "s1": 249, "suppress": [249, 581], "blank_lin": 249, "blank": 249, "pp_get_headers_oth": [249, 251, 294], "use_vg": [249, 581], "fraction": [249, 581], "shunt": [250, 269, 271, 285, 295, 296, 297, 396, 397, 398, 399, 443, 444, 445, 446, 447, 479, 480, 481, 483, 536, 554, 632, 636], "format_tag": [252, 253], "export": [252, 253, 255, 256, 290, 296, 336, 452, 454, 456, 652], "init_export": [252, 253], "new_dmc": 252, "prepar": [252, 255, 349], "fname_out": 252, "classic": 253, "legacy_user_mod_input": 254, "legacy_user_nln_constraint": 254, "fparm": [254, 474, 483, 604, 605, 735], "h1": 254, "cw": [254, 474, 483, 604, 605, 735], "zl": [254, 483, 604, 605, 735], "zu": [254, 483, 604, 605, 735], "user_constraint": 254, "undefin": 255, "table_exist": 255, "dm_converter_el": 255, "pp_row": 255, "pp_get_foot": 255, "footer": 255, "pp_have_section_cnt": 255, "pp_data_cnt": [255, 271, 273], "pp_have_section_ext": [255, 273], "pp_data_ext": [255, 273, 276], "pp_get_title_det": 255, "pp_get_footers_det": [255, 271, 279, 287, 292, 295], "nc": [255, 256], "sole": 255, "subclass_var1": 255, "subclass_var2": 255, "pp_have_section_oth": [255, 294], "pp_data_oth": [255, 294], "newlin": 255, "data_sub": [256, 267, 268], "get_import_s": [256, 266, 267, 269], "get_export_s": [256, 266, 267, 269], "get_input_table_valu": 256, "import_col": 256, "export_col": 256, "bus_status_import": [258, 259], "bus_name_import": 259, "bus_name_export": 259, "buslink": [260, 277, 278, 366, 367, 368, 369, 370, 371, 372, 420, 421, 422, 458], "pwl1": 262, "start_cost_import": 262, "start_cost_export": 262, "gen_cost_import": 262, "p_or_q": 262, "gen_cost_export": 262, "gencost0": 262, "create_line_construction_t": [264, 285], "lc": [264, 285], "scale_factor_fcn": 266, "zip_sf": 266, "sys_wide_zip_load": [266, 457, 581], "import_cost": 267, "import_qti": 267, "import_ramp": 267, "import_req": 268, "import_zon": 268, "g_fr": 271, "conduct": [271, 295, 483, 554], "b_fr": 271, "g_to": 271, "b_to": 271, "sm_ub_a": 271, "long": [271, 483, 553], "rate": [271, 292, 483, 527, 553, 558], "sm_ub_b": 271, "sm_ub_c": 271, "emerg": [271, 483, 553], "cm_ub_a": 271, "cm_ub_b": 271, "cm_ub_c": 271, "vad_lb": 271, "vad_ub": 271, "tm": 271, "ratio": [271, 483, 553, 581, 595, 655], "ta": 271, "shift": [271, 483, 523, 553, 556, 569, 580, 732], "pl_fr": 271, "ql_fr": 271, "pl_to": 271, "ql_to": 271, "psh_fr": 271, "qsh_fr": 271, "psh_to": 271, "qsh_to": 271, "xformer": 271, "radian": [271, 273, 274, 522, 570], "rate_a": [271, 523, 553, 732], "loss_tol": 271, "mu_flow_fr_ub": 272, "mu_flow_to_ub": 272, "mu_vad_lb": 272, "mu_vad_ub": 272, "usd": [272, 276, 279, 282, 284, 292, 293], "pp_get_title_lim": [272, 294], "base_kv": [273, 274, 298, 523, 554], "vm_lb": 273, "vm_ub": 273, "va_start": 273, "set_bus_type_ref": 273, "set_bus_type_pq": 273, "vm1_start": 274, "vm2_start": 274, "vm3_start": 274, "va1_start": 274, "va2_start": 274, "va3_start": 274, "lam_p": [276, 469, 470, 523, 554], "lam_q": [276, 523, 554], "mu_vm_lb": 276, "mu_vm_ub": 276, "pg1_start": [277, 280], "pg2_start": [277, 280], "pg3_start": [277, 280], "qg1_start": [277, 280], "qg2_start": [277, 280], "qg3_start": [277, 280], "startup_cost_cold": 279, "cold": 279, "pc1": [279, 483, 523, 538, 558, 565], "pc2": [279, 483, 523, 538, 558, 565], "qc1_lb": 279, "qc1_ub": 279, "qc2_lb": 279, "qc2_ub": 279, "bus_on": [279, 280], "pg_start": 279, "qg_start": 279, "violated_q_lim": 279, "isload": [279, 472, 563, 655, 732, 733, 738], "vm1_setpoint": 280, "vm2_setpoint": 280, "vm3_setpoint": 280, "cost_pg": [282, 284], "cost_qg": 282, "mu_pg_lb": 282, "mu_pg_ub": [282, 292], "mu_qg_lb": 282, "mu_qg_ub": 282, "max_pwl_gencost": 282, "fr": 283, "pl1_fr": [285, 298], "ql1_fr": [285, 298], "pl2_fr": [285, 298], "ql2_fr": [285, 298], "pl3_fr": [285, 298], "ql3_fr": [285, 298], "pl1_to": [285, 298], "ql1_to": [285, 298], "pl2_to": [285, 298], "ql2_to": [285, 298], "pl3_to": [285, 298], "ql3_to": [285, 298], "lc_tab": 285, "symmetr": [285, 604, 605], "ohm": 285, "lc_y_idx": 285, "yc": 285, "lc_table_var_nam": 285, "vec2symmat": 285, "symmat2vec": 285, "pd": [287, 483, 523, 554, 655, 733], "p_p": 287, "qd": [287, 483, 523, 554, 655, 733], "q_p": 287, "pd_i": 287, "p_i": 287, "qd_i": 287, "q_i": 287, "pd_z": 287, "p_z": 287, "qd_z": 287, "q_z": 287, "_p": 287, "_z": 287, "pf1": 288, "pf2": 288, "pf3": 288, "dmb": [290, 296], "dmt": [290, 296], "qty": [292, 595, 649, 731], "ramp10": 292, "minut": [292, 483, 558], "alloc": [292, 339, 347, 581, 595], "r_lb": 292, "r_ub": 292, "total_cost": 292, "prc": [292, 293, 649, 731], "req": [293, 649, 731], "pp_set_tols_lim": 294, "pp_rows_oth": 294, "pp_get_footers_oth": 294, "pp_rows_lim": 294, "pp_get_footers_lim": 294, "pp_data_lim": 294, "b_": 295, "absorb": 295, "class_list": 300, "aspect": [301, 461], "xt": 301, "form_nam": [302, 304, 305, 306, 308, 310, 311, 313, 314, 318, 320, 323, 325, 327, 331, 332, 333, 334, 335], "form_tag": [302, 304, 305, 306, 308, 310, 311, 313, 314, 318, 320, 323, 325, 327, 331, 332, 333, 334, 335], "model_param": [302, 303, 306], "model_vvar": [302, 304, 305, 306], "model_zvar": [302, 303, 306], "get_param": 302, "find_form_class": 302, "acc": [302, 304], "acp": [302, 305, 308], "properi": 302, "p1": [302, 483, 555], "p2": [302, 483, 555], "pn": [302, 483, 555], "pa": 302, "namea": 302, "pb": 302, "nameb": 302, "canon": 302, "form_class": 302, "netork": 302, "longest": 302, "params_ncol": [303, 306], "inln_hess": 303, "snln_hess": 303, "port_inj_curr": [303, 304, 305, 403, 760, 761], "port_inj_pow": [303, 304, 305, 306, 403, 762, 763], "port_inj_current_hess": [303, 304, 305, 403], "port_inj_power_hess": [303, 304, 305, 403], "port_inj_current_jac": [303, 304, 305], "port_inj_current_hess_v": [303, 304, 305], "port_inj_current_hess_vz": [303, 304, 305], "port_inj_power_jac": [303, 304, 305], "port_inj_power_hess_v": [303, 304, 305], "port_inj_power_hess_vz": [303, 304, 305], "port_apparent_power_lim_fcn": 303, "port_active_power_lim_fcn": 303, "port_active_power2_lim_fcn": 303, "port_current_lim_fcn": 303, "port_apparent_power_lim_hess": 303, "port_active_power_lim_hess": 303, "port_active_power2_lim_hess": 303, "port_current_lim_hess": 303, "aux_data_va_vm": [303, 304, 305], "param_ncol": [303, 306], "x_": [303, 304, 305, 403, 407, 439], "sysx": [303, 304, 305, 306, 403, 407, 439], "iv1": 303, "iv2": 303, "izr": 303, "izi": 303, "gi_": 303, "formula": [303, 536], "sv1": 303, "sv2": 303, "szr": 303, "szi": 303, "mulipli": [303, 304, 378, 403], "v_": [303, 304, 305, 339, 407], "invdiagv": [303, 304, 305], "diagslincj": [303, 304, 305], "z_": [303, 304, 305, 339, 407], "diaginv": [303, 304, 305], "dlamj": [303, 304, 305], "diagv": [303, 304, 305], "diagvi": [303, 304, 305], "diagilincj": [303, 304, 305], "hmax": 303, "repesent": [304, 305], "va_fcn": [304, 368], "va_hess": [304, 368], "vm2_fcn": [304, 368], "vm2_hess": [304, 368], "iu": 304, "iw": 304, "iuu": 304, "iuw": 304, "iww": 304, "iuzr": 304, "iuzi": 304, "iwzr": 304, "iwzi": 304, "su": 304, "sw": 304, "suu": 304, "suw": 304, "sww": 304, "suzr": 304, "suzi": 304, "swzr": 304, "swzi": 304, "connvert": 304, "va_lb": 304, "va_ub": 304, "vm2_lb": 304, "vm2_ub": 304, "iva": 305, "ivm": 305, "ivava": 305, "ivavm": 305, "ivmvm": 305, "ivazr": 305, "ivazi": 305, "ivmzr": 305, "ivmzi": 305, "sva": 305, "svm": 305, "svava": 305, "svavm": 305, "svmvm": 305, "svazr": 305, "svazi": 305, "svmzr": 305, "svmzi": 305, "ma": 307, "width": 307, "height": 307, "depth": 307, "treat": [307, 477, 479, 480, 481], "add_el": 307, "color": 307, "weight": [307, 572, 581], "delete_el": 307, "has_nam": 307, "add_nam": 307, "name2idx": 307, "new_obj": 307, "num_el": 307, "overwrit": 307, "corrspond": 307, "aux_data": 308, "task_nam": [308, 315, 329], "add_aux_data": 308, "build_base_aux_data": 308, "add_system_var": [308, 315, 329], "add_system_constraint": [308, 319, 321, 324, 326, 328], "add_node_balance_constraint": [308, 310, 311, 313, 314, 318, 320, 323, 325, 327, 331, 332, 333, 334, 335], "add_system_cost": [308, 319, 321, 324, 326, 328], "update_nm_var": 308, "build_aux_data": [308, 315, 338, 342, 345, 346, 347], "mmx": [308, 317, 322, 327, 341, 344, 347], "nm_var": 308, "var_map": 308, "nm_var_typ": 308, "nm_i1": 308, "nm_in": 308, "nm_idx": 308, "mm_i1": 308, "mm_in": 308, "mm_idx": 308, "convert_x_m2n": [308, 317, 322, 327, 341, 344, 347], "math_model_cpf": [309, 312], "event_vlim": 312, "callback_vlim": 312, "expand_z_warmstart": 314, "solve_opts_warmstart": 314, "interior_va": [315, 317], "nodal_current_balance_fcn": 316, "nodal_power_balance_fcn": 316, "nodal_current_balance_hess": 316, "nodal_power_balance_hess": 316, "node_power_balance_pric": [318, 320, 323, 325], "formluat": [319, 321, 324, 326, 328], "legacy_user_var_nam": [319, 321, 324, 326, 328], "gs_x_updat": 334, "zg_x_updat": 334, "fd_jac_approx": 334, "fdpf_b_matrix_model": 334, "accordingli": [336, 498, 501], "mod_set_types_legaci": 337, "init_set_types_legaci": 337, "get_mpc": [337, 474, 643], "build_legaci": 337, "add_legacy_user_var": 337, "add_legacy_user_cost": 337, "add_legacy_user_constraint": 337, "add_legacy_user_constraints_ac": 337, "add_legacy_cost": [337, 449, 474], "eval_legacy_cost": [337, 474], "params_legacy_cost": [337, 474], "add_system_varset_pf": 339, "vvar": 339, "typ": 339, "update_z": [339, 347], "sinj": 339, "formuat": [340, 341, 342, 343, 344, 345, 346], "build_aux_data_i": 340, "only_v": [341, 344, 347], "pf_convert": [341, 344, 347], "add_system_vars_pf": [342, 343, 345, 346, 347], "node_balance_equ": [342, 343, 345, 346], "fdpf": [346, 472, 568, 738], "ang_diff_param": 349, "ang_diff_pric": [349, 351], "interior_vm": 360, "avg": 360, "clip": 360, "voltage_constraint": [370, 420], "pf_va_fcn": 371, "pf_vm_fcn": 371, "poly_p": 376, "poly_q": 376, "actv": [376, 383], "bulid": [377, 379], "pq_capability_constraint": 377, "makeapq": [377, 472, 736, 738], "has_pq_cap": 377, "upper_low": 377, "haspqcap": [377, 472, 679, 738], "disp_load_constant_pf_constraint": 377, "makeavl": [377, 472, 738], "oval": [378, 460], "cap": [378, 565], "rectangular": 378, "radii": 378, "the_np": 402, "the_nz": 402, "add_nod": [402, 407], "add_stat": [402, 407], "stack_matrix_param": 402, "stack_vector_param": 402, "add_port": 402, "set_type_label": 402, "get_node_idx": 402, "get_port_idx": 402, "get_state_idx": 402, "ensure_ref_nod": 402, "vnotz": 402, "unus": [402, 483], "vr0": 402, "vrmin": 402, "vrmax": 402, "zij_lb": 402, "zij_ub": 402, "nidx": [402, 407], "pidx": 402, "sidx": [402, 638], "skip_ensure_ref": 402, "ntv": [402, 407, 414], "by_elm": 402, "implicitli": 403, "port_inj_nln": 403, "port_inj_nln_hess": 403, "nodal_complex_current_bal": 403, "nodal_complex_power_bal": 403, "nodal_complex_current_balance_hess": 403, "nodal_complex_power_balance_hess": 403, "get_va": 403, "gv1": 403, "gv2": 403, "gzr": 403, "gzi": 403, "snln_": 403, "inln_": 403, "kcl": 403, "initial_voltage_angl": [404, 405], "math_model_el": 407, "get_nv_": 407, "x2vz": 407, "node_indic": 407, "incidence_matrix": 407, "nv_": 407, "vi_": 407, "cd": 407, "ang_diff_fcn": 410, "aang": [410, 564, 606, 607], "lang": [410, 564, 606, 607], "uang": [410, 564, 606, 607], "ang_diff_hess": 410, "vr3": 415, "vi3": 415, "plink": 420, "qlink": 420, "vec2symmat_stack": 436, "port_inj_current_nln": 439, "port_inj_power_nln": 439, "opf_model": [449, 454, 472, 604, 711, 738], "interact": [450, 465, 523], "mm_opt": 450, "i_dm": 450, "i_nm": 450, "i_mm": 450, "didn": 450, "load_dm": [450, 464, 472], "run_pr": [450, 451, 452, 453, 454, 455, 456, 457], "run_post": [450, 452, 454, 456], "print_soln_head": [450, 453], "dm_converter_cr": 450, "data_model_cr": 450, "data_model_build": [450, 451], "data_model_build_pr": 450, "data_model_build_post": [450, 453, 454], "network_model_cr": 450, "network_model_build": [450, 451], "network_model_build_pr": 450, "network_model_build_post": [450, 455], "network_model_upd": [450, 451], "math_model_cr": 450, "math_model_build": 450, "math_model_opt": [450, 451], "propag": 450, "mpoopt": 450, "handel": 450, "dm_converter_build": 450, "restart": 451, "superclass": [451, 453, 454, 455], "clam": 451, "plam": 451, "cv": 451, "current_bal": [451, 453, 455, 581], "legacy_post_run": [452, 454, 456], "post": [452, 454, 456], "run_pre_legaci": [452, 454, 456, 457], "printout": 453, "variat": 454, "opf_execut": [454, 472, 619, 738], "dcopf_solv": [454, 472, 738], "nlpopf_solv": [454, 472, 738], "ref0": 455, "va_ref0": 455, "fixed_q_idx": 455, "fixed_q_qti": 455, "enforce_q_lim": [455, 581, 595, 644, 650], "move": 457, "optimi": [458, 459], "gen3p": 458, "load3p": 458, "line3p": 458, "xfmr3p": 458, "half": [460, 538], "region": [460, 550, 581, 595], "qmin": [460, 483, 500, 523, 558, 655, 732, 733], "qmax": [460, 483, 500, 523, 558, 655, 732, 733], "gen_opf_ac": 460, "gen_opf_ac_ov": 460, "reserve_gen": 461, "reserve_zon": 461, "var1": [462, 467], "var2": [462, 467], "name1": [462, 581, 595], "name2": [462, 581, 595], "rownam": 462, "dimensionnam": 462, "focus": 462, "join": 462, "istabl": [462, 463], "concaten": [462, 463], "vertcat": [462, 463], "unfortun": 462, "realli": 462, "last_var": 462, "last_row": 462, "sub_t": 462, "jn": 462, "var_": 462, "t1": [462, 463], "t2": [462, 463], "extract_named_arg": 462, "row_nam": 462, "dim_nam": 462, "act": 463, "isn": 463, "cannot": [463, 535], "fine": 463, "php": 463, "65037": 463, "emul": 463, "get_tabl": 463, "set_tabl": 463, "install_matpow": [464, 472], "save_it": 465, "rm_oldpath": 465, "assist": 465, "session": [465, 770], "addpath": 465, "silent": 465, "mode": [465, 644, 770], "my": 465, "temporarili": 465, "matpower8": 465, "uninstal": 465, "nativ": [467, 581], "tablici": [467, 549], "table_class": 467, "print_fnam": [468, 469, 470, 471], "soln_fnam": [468, 469, 470, 471], "case9target": [468, 644], "miscellan": 472, "test_matpow": [472, 740], "t_mp_mapped_arrai": [472, 740], "t_mp_tabl": [472, 740], "t_mp_data_model": [472, 740], "t_dmc_element": [472, 740], "t_mp_dm_converter_mpc2": [472, 740], "t_nm_element": [472, 740], "t_port_inj_current_acc": [472, 740], "t_port_inj_current_acp": [472, 740], "t_port_inj_power_acc": [472, 740], "t_port_inj_power_acp": [472, 740], "t_node_test": [472, 740], "t_run_mp": [472, 740], "t_run_opf_default": [472, 740], "t_pretty_print": [472, 740], "t_mpxt_legacy_dclin": [472, 740], "t_mpxt_reserv": [472, 740], "mp_foo_tabl": [472, 740], "t_case9_gizmo": [472, 740], "runpf": [472, 522, 528, 533, 536, 581, 597, 598, 599, 600, 601, 602, 644, 646, 729, 737, 738], "runcpf": [472, 487, 489, 502, 503, 581, 738], "runopf": [472, 581, 604, 631, 645, 649, 651, 729, 738, 770], "runuopf": [472, 647, 648, 735, 738], "rundcpf": [472, 522, 650, 738], "rundcopf": [472, 520, 647, 648, 738], "runduopf": [472, 645, 651, 738], "runopf_w_r": [472, 475, 642, 643, 724, 731, 738], "cdf2mpc": [472, 738], "printpf": [472, 475, 720, 738], "psse2mpc": [472, 636, 638, 639, 721, 738], "save2pss": [472, 668, 738], "savecas": [472, 475, 483, 534, 535, 738], "savechgtab": [472, 738], "e2i_data": [472, 525, 526, 551, 676, 738], "e2i_field": [472, 524, 526, 552, 676, 738], "i2e_data": [472, 524, 552, 559, 676, 738], "i2e_field": [472, 525, 551, 559, 676, 738], "get_reord": [472, 656, 676, 738], "set_reord": [472, 537, 676, 738], "calc_v_i_sum": [472, 738], "calc_v_pq_sum": [472, 577, 738], "calc_v_y_sum": [472, 738], "dcpf": [472, 569, 738], "gausspf": [472, 738], "make_vcorr": [472, 738], "make_zpv": [472, 738], "newtonpf": [472, 598, 599, 600, 601, 602, 738], "newtonpf_i_cart": [472, 597, 600, 601, 602, 738], "newtonpf_i_hybrid": [472, 738], "newtonpf_i_polar": [472, 597, 598, 599, 601, 602, 738], "newtonpf_s_cart": [472, 597, 598, 599, 600, 738], "newtonpf_s_hybrid": [472, 738], "order_radi": [472, 738], "pfsoln": [472, 738], "radial_pf": [472, 479, 480, 481, 576, 626, 738], "zgausspf": [472, 738], "cpf_corrector": [472, 495, 496, 738], "cpf_current_mpc": [472, 738], "cpf_default_callback": [472, 492, 494, 498, 501, 502, 506, 508, 581, 738], "cpf_detect_ev": [472, 489, 738], "cpf_flim_ev": [472, 492, 738], "cpf_flim_event_cb": [472, 502, 738], "cpf_nose_ev": [472, 494, 738], "cpf_nose_event_cb": [472, 492, 502, 738], "cpf_p": [472, 738], "cpf_p_jac": [472, 738], "cpf_plim_ev": [472, 498, 738], "cpf_plim_event_cb": [472, 502, 738], "cpf_predictor": [472, 495, 496, 738], "cpf_qlim_ev": [472, 501, 738], "cpf_qlim_event_cb": [472, 502, 738], "cpf_register_callback": [472, 489, 738], "cpf_register_ev": [472, 738], "cpf_tangent": [472, 738], "cpf_target_lam_ev": [472, 506, 738], "cpf_target_lam_event_cb": [472, 502, 738], "cpf_vlim_ev": [472, 508, 738], "cpf_vlim_event_cb": [472, 502, 738], "dcopf": [472, 604, 738], "fmincopf": [472, 738], "uopf": [472, 604, 738], "makeaang": [472, 606, 607, 738], "makeai": [472, 738], "margcost": [472, 687, 738], "opf_arg": [472, 738], "opf_setup": [472, 612, 738], "opf_branch_ang_fcn": [472, 607, 738], "opf_branch_ang_hess": [472, 606, 738], "opf_branch_flow_fcn": [472, 609, 738], "opf_branch_flow_hess": [472, 608, 738], "opf_current_balance_fcn": [472, 611, 738], "opf_current_balance_hess": [472, 738], "opf_gen_cost_fcn": [472, 738], "opf_legacy_user_cost_fcn": [472, 738], "opf_power_balance_fcn": [472, 618, 738], "opf_power_balance_hess": [472, 610, 617, 738], "opf_veq_fcn": [472, 621, 738], "opf_veq_hess": [472, 620, 738], "opf_vlim_fcn": [472, 623, 738], "opf_vlim_hess": [472, 622, 738], "opf_vref_fcn": [472, 625, 738], "opf_vref_hess": [472, 624, 738], "totcost": [472, 727, 738], "update_mupq": [472, 738], "add_userfcn": [472, 483, 642, 643, 729, 730, 731, 732, 738], "remove_userfcn": [472, 475, 643, 729, 730, 731, 732, 738], "run_userfcn": [472, 475, 642, 729, 730, 731, 732, 738], "toggle_dclin": [472, 475, 557, 663, 675, 738], "toggle_iflim": [472, 475, 642, 643, 738], "toggle_softlim": [472, 475, 478, 738], "dibr_dv": [472, 509, 515, 738], "dsbr_dv": [472, 509, 515, 738], "dabr_dv": [472, 509, 738], "dimis_dv": [472, 738], "dsbus_dv": [472, 738], "d2ibr_dv2": [472, 738], "d2sbr_dv2": [472, 509, 738], "d2abr_dv2": [472, 738], "d2imis_dv2": [472, 738], "d2imis_dvdsg": [472, 738], "d2sbus_dv2": [472, 738], "miqps_matpow": [472, 688, 738], "qps_matpow": [472, 722, 738], "makeb": [472, 738], "makebdc": [472, 738], "makejac": [472, 575, 738], "makelodf": [472, 572, 685, 738], "makeptdf": [472, 571, 686, 738], "makesbu": [472, 511, 517, 575, 738], "makesdzip": [472, 738], "makeybu": [472, 509, 510, 511, 513, 514, 516, 517, 518, 519, 570, 573, 738], "apply_chang": [472, 523, 556, 654, 657, 671, 738], "bustyp": [472, 738], "calc_branch_angl": [472, 738], "case_info": [472, 527, 681, 738], "compare_cas": [472, 738], "define_const": [472, 553, 554, 555, 558, 738], "extract_island": [472, 531, 681, 738], "feval_w_path": [472, 677, 738], "find_bridg": [472, 571, 738], "find_island": [472, 482, 527, 681, 738], "gentyp": [472, 483, 527, 534, 738], "get_loss": [472, 678, 738], "idx_brch": [472, 483, 523, 738], "idx_bu": [472, 476, 483, 523, 738], "idx_cost": [472, 476, 483, 523, 738], "idx_gen": [472, 476, 483, 523, 738], "load2disp": [472, 683, 738], "loadsh": [472, 738], "modcost": [472, 556, 655, 689, 738], "poly2pwl": [472, 738], "polycost": [472, 628, 738], "pqcost": [472, 738], "scale_load": [472, 725, 733, 738], "total_load": [472, 655, 726, 738], "have_feature_e4st": [472, 738], "have_feature_minopf": [472, 738], "have_feature_most": [472, 738], "have_feature_mp_cor": [472, 738], "have_feature_pdipmopf": [472, 738], "have_feature_regexp_split": [472, 738], "have_feature_scpdipmopf": [472, 738], "have_feature_sdp_pf": [472, 738], "have_feature_smartmarket": [472, 738], "have_feature_syngrid": [472, 738], "have_feature_t": [472, 738], "have_feature_tralmopf": [472, 738], "connected_compon": [472, 527, 531, 681, 738], "mpoption_info_clp": [472, 738], "mpoption_info_cplex": [472, 738], "mpoption_info_fmincon": [472, 738], "mpoption_info_glpk": [472, 738], "mpoption_info_gurobi": [472, 738], "mpoption_info_intlinprog": [472, 738], "mpoption_info_ipopt": [472, 738], "mpoption_info_knitro": [472, 738], "mpoption_info_linprog": [472, 738], "mpoption_info_mip": [472, 738], "mpoption_info_mosek": [472, 738], "mpoption_info_osqp": [472, 738], "mpoption_info_quadprog": [472, 738], "mpoption_old": [472, 738], "psse_convert": [472, 634, 635, 738], "psse_convert_hvdc": [472, 738], "psse_convert_xfmr": [472, 738], "psse_pars": [472, 638, 738], "psse_parse_lin": [472, 636, 738], "psse_parse_sect": [472, 636, 738], "psse_read": [472, 633, 634, 635, 636, 638, 738], "t_apply_chang": [472, 738], "t_auction_minopf": [472, 738], "t_auction_mip": [472, 738], "t_auction_tspopf_pdipm": [472, 738], "t_chgtab": [472, 738], "t_cpf": [472, 738], "t_dcline": [472, 738], "t_ext2int2ext": [472, 738], "t_feval_w_path": [472, 738], "t_get_loss": [472, 738], "t_haspqcap": [472, 738], "t_island": [472, 738], "t_load2disp": [472, 738], "t_makelodf": [472, 738], "t_makeptdf": [472, 738], "t_margcost": [472, 738], "t_miqps_matpow": [472, 738], "t_modcost": [472, 738], "t_mpoption": [472, 738], "t_mpoption_ov": [472, 738], "t_off2cas": [472, 738], "t_opf_dc_bpmpd": [472, 738], "t_opf_dc_clp": [472, 738], "t_opf_dc_cplex": [472, 738], "t_opf_dc_default": [472, 738], "t_opf_dc_glpk": [472, 738], "t_opf_dc_gurobi": [472, 738], "t_opf_dc_ipopt": [472, 738], "t_opf_dc_mip": [472, 738], "t_opf_dc_mips_sc": [472, 738], "t_opf_dc_mosek": [472, 738], "t_opf_dc_osqp": [472, 738], "t_opf_dc_ot": [472, 738], "t_opf_default": [472, 738], "t_opf_fmincon": [472, 738], "t_opf_ipopt": [472, 738], "t_opf_knitro": [472, 738], "t_opf_minopf": [472, 738], "t_opf_mip": [472, 738], "t_opf_model": [472, 738], "t_opf_softlim": [472, 732, 738], "t_opf_tspopf_pdipm": [472, 738], "t_opf_tspopf_scpdipm": [472, 738], "t_opf_tspopf_tralm": [472, 738], "t_opf_userfcn": [472, 738], "t_pf_ac": [472, 738], "t_pf_dc": [472, 738], "t_pf_radial": [472, 738], "t_printpf": [472, 738], "t_psse": [472, 738], "t_qps_matpow": [472, 738], "t_runmarket": [472, 738], "t_runopf_w_r": [472, 738], "t_scale_load": [472, 738], "t_total_load": [472, 738], "t_totcost": [472, 738], "t_vdep_load": [472, 738], "opf_nle_fcn1": [472, 738], "opf_nle_hess1": [472, 738], "t_auction_cas": [472, 738], "t_case30_userfcn": [472, 649, 730, 731, 738], "t_case9_opf": [472, 738], "t_case9_opfv2": [472, 663, 738], "t_case9_pf": [472, 738], "t_case9_pfv2": [472, 738], "t_case9_save2pss": [472, 738], "t_case_ext": [472, 738], "t_case_int": [472, 738], "t_cpf_cb1": [472, 738], "t_cpf_cb2": [472, 738], "rr": 474, "set_mpc": 474, "f_u": 474, "nw": 474, "ddl": 474, "ddq": 474, "dl": [474, 534, 535], "dq": 474, "buld_cost_param": 474, "get_cost_param": [474, 614], "cp1": 474, "n1": 474, "cw1": 474, "cp2": 474, "n2": 474, "cw2": 474, "usr1": 474, "usr2": 474, "allow_multipl": 475, "userfcn": [475, 604, 605, 642, 643, 712, 716, 729, 730, 731, 732, 735], "freshli": 475, "presum": 475, "userfcn_reserves_ext2int": 475, "userfcn_reserves_formul": 475, "userfcn_reserves_int2ext": 475, "descriptor": [475, 631], "userfcn_reserves_printpf": 475, "prefix": 475, "mpc_modifi": 476, "mpc_origin": 476, "best": 476, "idx_branch": 476, "7th": 476, "ct_rep": [476, 523, 556], "ct_load_all_p": [476, 523, 556], "ct_rel": [476, 523, 556], "delta": 478, "TO": 478, "af": [478, 515], "vslack": [479, 480, 481], "zb": [479, 480, 481, 576, 577], "ybf": [479, 480, 481], "ybt": [479, 480, 481], "yd": [479, 480, 481, 577], "vg": [479, 480, 481, 483, 523, 558, 581], "summat": [479, 480, 481, 581], "qpv": [479, 480, 481], "sslack": [479, 480, 481], "iter_max": [479, 480, 481], "indici": [479, 480, 481, 577, 626], "principl": [479, 480, 481, 626], "send": [479, 480, 481, 626], "receiv": [479, 480, 481, 626], "addmitt": [479, 480, 481], "shirmohammadi": 479, "hong": 479, "semlyen": 479, "luo": 479, "compens": [479, 535], "weakli": [479, 481], "mesh": [479, 481], "753": 479, "1988": 479, "192932": 479, "1309": 479, "1316": 479, "nov": 479, "1990": 479, "99382": 479, "vcpf": 480, "rajic": [480, 576, 626], "ackovski": [480, 576, 626], "taleski": [480, 481, 576, 626], "1056": [480, 576, 626], "1062": [480, 576, 626], "apr": [480, 576, 626], "1994": [480, 576, 626], "296308": [480, 576], "dragoslav": 481, "raji\u010di\u0107": 481, "rubin": 481, "novel": 481, "radial": [481, 581], "analysi": 481, "volum": 481, "decemb": 481, "1998": 481, "1016": 481, "s0378": 481, "7796": 481, "00067": 481, "island": [482, 527, 530, 531, 571], "fopen": [482, 631], "pti": 483, "item": 483, "idx_area": 483, "regard": 483, "bus_nam": [483, 527, 635], "maxvm": [483, 554], "minvm": [483, 554], "machin": [483, 558], "remot": 483, "mbase": [483, 523, 558], "qc1min": [483, 523, 538, 558, 565], "qc1max": [483, 523, 538, 558, 565], "qc2min": [483, 523, 538, 558, 565], "qc2max": [483, 523, 538, 558, 565], "agc": [483, 558], "timescal": [483, 558], "apf": [483, 523, 558], "particip": [483, 558], "ratea": [483, 553, 644], "unlimit": 483, "rateb": [483, 553], "ratec": [483, 553], "tap": [483, 484, 523, 553], "delai": 483, "gf": [483, 534], "bf": [483, 569], "gt": [483, 535], "bt": [483, 535], "angmin": [483, 523, 553, 564, 732], "360": [483, 553, 564], "angmax": [483, 523, 553, 564, 732], "dollar": [483, 555], "fn": [483, 555], "break": [483, 530, 555, 576], "cn": [483, 555], "c0": [483, 484, 555], "highest": [483, 555], "longer": 483, "price_ref_bu": 483, "cdf_file_nam": 484, "mpc_name": [484, 632], "comment": [484, 632, 636, 637, 638, 639, 653, 654], "ieee300": 484, "mpc1": [485, 527], "unvisit": 486, "graph": 486, "ybu": [487, 488, 489, 504, 509, 510, 511, 513, 514, 516, 517, 518, 519, 528, 533, 570, 575, 597, 598, 599, 600, 601, 602, 610, 611, 617, 618, 627, 737], "sbusb": [487, 489, 504], "v_hat": [487, 489, 499, 644], "sbust": [487, 489, 504], "vprv": [487, 495, 496, 504], "lamprv": [487, 495, 496, 504], "lprv": 487, "scheme": [487, 644], "mpct": 488, "yf": [488, 489, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 570, 575, 608, 609, 627], "yt": [488, 489, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 570, 575, 608, 609, 627], "mpc_base": [488, 489], "mpc_target": [488, 489], "evnt": [489, 492, 494, 498, 501, 506, 508, 673, 674], "cb_data": [489, 491, 492, 493, 494, 497, 498, 500, 501, 505, 506, 507, 508, 673, 674], "cb_arg": [489, 492, 494, 498, 501, 502, 506, 508, 673, 674], "paramter": 489, "cb_state": 489, "ef": [489, 491, 493, 497, 500, 505, 507], "idx_pmax": 489, "underli": [489, 770], "job": 489, "user_callback": [489, 502, 581], "cpf_event": [490, 503], "cef": 490, "pef": 490, "sratea": 491, "flim": 492, "dp_dv": 496, "dp_dlam": 496, "plim": 498, "encount": [498, 501], "transfer": [498, 501, 572, 644], "choos": [498, 501, 581, 595], "remain": [501, 528, 533, 597, 598, 599, 600, 601, 602, 644, 650, 732, 737], "cpf_callback": 502, "zprv": 504, "postiv": 504, "vlim": [508, 622], "d2f_dv2": 509, "df_dv1": 509, "df_dv2": 509, "h11": 509, "h12": 509, "h21": 509, "h22": 509, "cf": [509, 513, 516, 518], "dsf_dv1": 509, "dsf_dv2": 509, "dst_dv1": 509, "dst_dv2": 509, "dv1": [509, 515], "daf_dv1": [509, 515], "dv2": [509, 515], "daf_dv2": [509, 515], "februari": [509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 769], "3237866": [509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 769], "ybr": [510, 513], "vcart": [510, 511, 512, 513, 514, 516, 517, 518, 519], "haa": [510, 513], "hav": [510, 513], "hva": [510, 513], "hvv": [510, 513], "hrr": [510, 513], "hri": [510, 513], "hir": [510, 513], "hii": [510, 513], "dva": [510, 511, 512, 513, 514, 516, 517, 518, 519], "dibr_dva": 510, "dibr_dvm": 510, "dvr": [510, 511, 512, 513, 514, 516, 517, 518, 519], "dibr_dvr": 510, "dvi": [510, 511, 512, 513, 514, 516, 517, 518, 519], "dibr_dvi": 510, "sereet": [510, 511, 512, 513, 514, 516, 517, 518, 519, 769], "april": [510, 511, 512, 513, 514, 516, 517, 518, 519, 769], "2018": [510, 511, 512, 513, 514, 516, 517, 518, 519, 769], "3237909": [510, 511, 512, 513, 514, 516, 517, 518, 519, 769], "sbu": [511, 517, 528, 533, 573, 597, 598, 599, 600, 601, 602, 737], "gaa": [511, 514], "gav": [511, 514], "gva": [511, 514], "gvv": [511, 514], "grr": [511, 512, 514], "gir": [511, 512, 514], "gii": [511, 512, 514], "dimis_dva": [511, 517], "dimis_dvm": [511, 517], "gri": [511, 512, 514], "dimis_dvr": [511, 517], "dimis_dvi": [511, 517], "addendum": [511, 512, 517, 769], "3237900": [511, 512, 517, 769], "cg": 512, "sg": [512, 573], "gsv": 512, "gen_bu": [512, 523, 558], "gpa": 512, "gpv": 512, "gqa": 512, "gqv": 512, "dimis_dpg": 512, "dimis_dqg": 512, "gpr": 512, "gpi": 512, "gqr": 512, "gqi": 512, "cbr": 513, "brch": 513, "dsbr_dva": 513, "dsbr_dvm": 513, "dsbr_dvr": 513, "dsbr_dvi": 513, "dsbus_dva": [514, 519], "dsbus_dvm": [514, 519, 573], "dsbus_dvr": [514, 519], "dsbus_dvi": [514, 519], "dff_dv1": 515, "dff_dv2": 515, "dft_dv1": 515, "dft_dv2": 515, "ff": 515, "ft": 515, "dat_dv1": 515, "dat_dv2": 515, "sensit": [515, 523, 570], "daf": 515, "dpf": 515, "dqf": 515, "v1": 515, "il": [515, 608, 609], "dif_dva": 516, "dif_dvm": 516, "dit_dva": 516, "dit_dvm": 516, "IF": 516, "IT": [516, 535], "dif_dvr": 516, "dif_dvi": 516, "dit_dvr": 516, "dit_dvi": 516, "dvf": [516, 518], "dif": [516, 518], "imi": 517, "ibu": [517, 519], "idg": 517, "di": [517, 519], "dimi": 517, "dsf_dva": 518, "dsf_dvm": 518, "dst_dva": 518, "dst_dvm": 518, "dsf_dvr": 518, "dsf_dvi": 518, "dst_dvr": 518, "dst_dvi": 518, "dsf": 518, "mino": [521, 540, 581, 595, 603, 604, 709], "xr": [521, 603, 604, 735], "pimul": [521, 603, 604, 735], "pbu": 522, "swing": [522, 528, 533, 597, 598, 599, 600, 601, 602, 737], "bus_i": [523, 554], "bus_typ": [523, 554], "bus_area": [523, 554, 655, 733], "mu_vmax": [523, 554, 732], "mu_vmin": [523, 554], "br_r": [523, 553], "br_x": [523, 553], "br_b": [523, 553], "rate_b": [523, 553], "rate_c": [523, 553], "mu_sf": [523, 553, 732], "mu_st": [523, 553, 732], "mu_angmin": [523, 553], "mu_angmax": [523, 553], "mu_qmax": [523, 558, 736], "mu_qmin": [523, 558, 736], "ramp_q": [523, 558], "pw_linear": [523, 555], "ncost": [523, 555], "ct_label": [523, 556], "ct_prob": [523, 556], "ct_tabl": [523, 556], "ct_row": [523, 556], "ct_chgtype": [523, 556], "ct_add": [523, 556], "ct_newval": [523, 556], "ct_load_all_pq": [523, 556], "ct_load_fix_pq": [523, 556], "ct_load_dis_pq": [523, 556], "ct_load_fix_p": [523, 556], "ct_load_dis_p": [523, 556], "ct_modcost_f": [523, 556], "ct_modcost_x": [523, 556], "frequent": 523, "high": [523, 535, 712, 716], "concern": 523, "accord": [524, 551, 637, 655, 732], "disturb": [524, 551], "a_int": [524, 551], "a_ext": [524, 551], "gencost_int": [524, 551], "gencost_ext": [524, 551], "revers": [526, 535], "external_bus_numb": [526, 559], "internal_bus_numb": [526, 559], "matow": [526, 559], "e2i": 526, "mpc_arrai": 527, "mpc_k": 527, "travers": 527, "elimin": [527, 644], "mpc_list": 527, "traver": 527, "mpc3": 527, "bus_label": 527, "gen_nam": 527, "emiss": 527, "genloc": 527, "bpp": [528, 568, 737], "prime": [528, 535, 568, 737], "guess": [528, 533, 597, 598, 599, 600, 601, 602, 737], "fpath": 529, "x1": 529, "xn": 529, "yn": 529, "feval": 529, "caller": 529, "testfunct": 529, "mytestfcn": 529, "x2": 529, "bridg": [530, 571], "nonbridg": 530, "filter": [530, 567], "tarjan": 530, "520": [532, 595], "unord": [534, 535], "biomass": 534, "coal": [534, 535], "dfo": 534, "distil": 534, "oil": 534, "diesel": [534, 535], "fo1": 534, "fo2": 534, "fo4": 534, "geotherm": [534, 535], "hydrop": 534, "pump": [534, 535, 560], "jetfuel": 534, "jet": [534, 535], "lng": 534, "liquefi": 534, "ga": [534, 535], "nuclear": [534, 535], "refus": 534, "municip": 534, "solid": [534, 535], "wast": 534, "rfo": 534, "fo5": 534, "fo6": 534, "solar": [534, 535], "syncgen": 534, "condensor": 534, "wasteheat": 534, "heat": 534, "wood": 534, "eia": 535, "860": 535, "instruct": [535, 604, 605], "mover": 535, "gov": 535, "survei": 535, "eia_860": 535, "ba": 535, "ce": 535, "compress": 535, "air": 535, "concentr": 535, "fw": 535, "flywheel": 535, "hydraul": 535, "turbin": 535, "steam": 535, "combust": 535, "ic": [535, 581], "piston": 535, "reciproc": 535, "ca": 535, "ct": 535, "integr": 535, "gasif": 535, "shaft": 535, "plant": 535, "hydrokinet": 535, "axial": 535, "hb": 535, "wave": 535, "buoi": 535, "hk": 535, "hy": 535, "hydroelectr": 535, "water": 535, "pipelin": 535, "photovolta": 535, "wt": 535, "onshor": 535, "offshor": 535, "fc": 535, "powerworld": 535, "un": 535, "je": 535, "boil": 535, "reactor": 535, "graphit": 535, "nh": 535, "temperatur": 535, "pressur": 535, "turbo": 535, "condens": 535, "ti": 535, "motor": 535, "w1": 535, "w2": 535, "w3": 535, "w4": 535, "chg": 536, "fchg": 536, "tchg": 536, "dloss_dv": 536, "dchg_dvm": 536, "tau": 536, "bc": 536, "total_system_real_loss": 536, "total_system_reac_loss": 536, "hilo": 538, "slope": [538, 736], "intersect": 538, "plane": 538, "box": 538, "smart": 538, "redund": 538, "e4st": 539, "environment": 539, "minopf": [540, 581, 595, 659], "mp_core": [542, 770], "pdipmopf": [543, 661], "tspopf": [543, 545, 550, 581, 595, 604], "regexp": 544, "regexp_split": 544, "scpdipmopf": 545, "sdp_pf": [546, 581], "mx": [546, 548], "smartmarket": 547, "runmarket": 547, "syngrid": 548, "r2013b": 549, "apjank": 549, "tralmopf": 550, "trust": [550, 581, 595], "augment": [550, 581, 595], "langrangian": [550, 581, 595], "oldval": [551, 552], "a_orig": 551, "gencost_orig": 551, "ploss": 553, "mismatch": [554, 581, 595, 604], "restor": 559, "revert": 559, "AND": [560, 732], "revis": [560, 632, 636], "sensibl": 560, "elast": 560, "mpc0": 561, "voll": 561, "lost": 561, "casefil": 562, "doesn": 562, "abort": 562, "fewer": 562, "ild": 563, "curtail": 563, "shed": 563, "nld": 563, "total_load_sh": 563, "iang": 564, "apqh": 565, "ubpqh": 565, "apql": 565, "ubpql": 565, "trapezoid": 565, "constain": 565, "ipqh": 565, "ipql": 565, "ivl": 566, "pgba": 567, "qgba": 567, "yba": 567, "BY": 567, "basin": [567, 604], "fdxb": [568, 581], "fdbx": [568, 581], "pf_alg": [568, 595], "bbu": 569, "pbusinj": 569, "pfinj": 569, "fulljac": 570, "ptdf": [571, 572], "mask_bridg": 571, "outag": 571, "lodf": 571, "nbr": [571, 572], "bus_idx": 572, "txfr": 572, "rand": 572, "v_corr": 576, "seen": 576, "zpv": 577, "mutual": 577, "joint": 577, "forward": [577, 641], "sweep": [577, 641], "margin": [578, 655, 732], "marginalcost": 578, "modtyp": [580, 655], "newgencost": 580, "f_alpha": 580, "scale_f": [580, 655], "scale_x": [580, 655], "shift_f": 580, "shift_x": 580, "value1": [581, 595], "value2": [581, 595], "embed": 581, "opt0": 581, "opt_vector": 581, "uppercas": 581, "permit": 581, "sh": 581, "ip": 581, "ih": 581, "xb": [581, 595], "bx": [581, 595], "zg": 581, "implicit": [581, 737], "pqsum": 581, "isum": 581, "ysum": 581, "vcorr": 581, "expens": [581, 595, 647, 651], "enforce_p_lim": [581, 644], "enforce_v_lim": [581, 644], "enforce_flow_lim": [581, 644], "p_lims_tol": 581, "q_lims_tol": 581, "v_lims_tol": 581, "flow_lims_tol": 581, "pdipm": [581, 595, 604, 713], "sdpopf": 581, "semidefinit": 581, "tralm": [581, 595, 715], "op": 581, "analyt": 581, "5e": [581, 595], "setpt": 581, "averag": 581, "flow_lim": [581, 608], "ignore_angle_lim": 581, "diff": 581, "softlim": [581, 712, 732], "soft": [581, 712, 732], "strategi": 581, "decid": [581, 595], "return_raw_d": [581, 595], "littl": [581, 595], "sys_sum": 581, "area_sum": 581, "out_line_lim": [581, 595], "out_pg_lim": [581, 595], "out_qg_lim": [581, 595], "pwr": 581, "suppress_detail": 581, "complementari": [581, 595], "cntrl": 581, "concurr": [581, 595], "auto": [581, 595], "knitro_user_options_n": [581, 595], "rowtol": 581, "majdamp": 581, "mindamp": 581, "minor": [581, 595], "penalti": [581, 595], "major_it": 581, "minor_it": 581, "fort": [581, 595], "1200": [581, 595], "supbasic_lim": 581, "superbas": [581, 595], "mult_pric": 581, "gap": [581, 595], "smooth_ratio": 581, "primaltol": 581, "dualtol": 581, "use_legacy_cor": [581, 770], "bypass": [581, 770], "pw": 581, "qw": 581, "pf_tol": 595, "opf_alg": 595, "565": 595, "pf_max_it": 595, "pf_max_it_fd": 595, "pf_max_it_g": 595, "pf_dc": 595, "540": 595, "560": 595, "545": 595, "550": 595, "opf_viol": 595, "constr_tol_x": 595, "constr_tol_f": 595, "constr_max_it": 595, "opf_flow_lim": 595, "opf_ignore_ang_lim": 595, "opf_alg_dc": 595, "out_al": 595, "33": [595, 652], "out_sys_sum": 595, "out_area_sum": 595, "out_bu": 595, "out_branch": 595, "out_gen": 595, "out_all_lim": 595, "out_v_lim": 595, "44": 595, "out_forc": 595, "55": 595, "fmc_alg": 595, "mns_feastol": 595, "mns_rowtol": 595, "63": 595, "mns_xtol": 595, "mns_majdamp": 595, "mns_mindamp": 595, "mns_penalty_parm": 595, "67": 595, "mns_major_it": 595, "mns_minor_it": 595, "mns_max_it": 595, "mns_verbos": 595, "71": 595, "mns_core": 595, "mns_supbasic_lim": 595, "mns_mult_pric": 595, "pdipm_feastol": 595, "82": 595, "pdipm_gradtol": 595, "83": 595, "pdipm_comptol": 595, "pdipm_costtol": 595, "pdipm_max_it": 595, "scpdipm_red_it": 595, "tralm_feastol": 595, "tralm_primetol": 595, "tralm_dualtol": 595, "tralm_costtol": 595, "91": 595, "tralm_major_it": 595, "tralm_minor_it": 595, "smoothing_ratio": 595, "cplex_lpmethod": 595, "96": 595, "cplex_qpmethod": 595, "111": 595, "mosek_max_it": 595, "113": 595, "mosek_gap_tol": 595, "mosek_max_tim": 595, "mosek_num_thread": 595, "116": 595, "grb_method": 595, "122": 595, "grb_timelimit": 595, "grb_thread": 595, "raphson": [597, 598, 599, 600, 601, 602], "latter": [604, 735], "encod": [604, 605], "fun": 604, "mistmatch": 604, "pqh": 604, "pql": 604, "ycon": 604, "au": 605, "lbu": 605, "ubu": 605, "vadif": 606, "dvadif": 606, "d2vadif": 607, "ig": 613, "veq": 620, "dveq": 620, "d2veq": 621, "dvlim": 622, "d2vlim": 623, "vref": 624, "dvref": 624, "d2vref": 625, "bus0": 627, "gen0": 627, "branch0": 627, "npt": 628, "pwlcost": 628, "too": [629, 644], "effeci": 629, "polyv": 629, "polyd": 629, "pcost": 630, "qcost": 630, "ON": 630, "stdout": 631, "fclose": 631, "rawfile_nam": [632, 639], "identif": 632, "hvdc": [632, 634], "accumul": [633, 635, 636, 638], "twodc": [634, 636], "trans2": [635, 636], "trans3": [635, 636], "OF": [636, 638, 639], "swshunt": 636, "templat": [637, 638], "float": [637, 638], "sscanf": [637, 638], "quot": [637, 638], "strip": [637, 638], "rv": 643, "basecasedata": 644, "targetcasedata": 644, "solvedcas": [644, 645, 646, 647, 648, 649, 650, 651], "nstep": 644, "nevent": 644, "fal": 644, "induc": 644, "bifurc": 644, "target_lam_v": 644, "did": 644, "event_nam": 644, "casedata": [645, 646, 647, 648, 649, 650, 651], "decommit": [647, 651, 735], "heurist": [647, 651], "shut": [647, 651, 735], "nrz": [649, 731], "ngr": [649, 731], "rmin": [649, 731], "rmax": [649, 731], "rawver": 652, "overwritten": [652, 653], "casestruct": 653, "pssecon2chgtab": 654, "extent": 654, "dmd": 655, "load_zon": [655, 733], "ONES": 655, "benefit": 655, "untouch": 656, "pad": 656, "iflim": [662, 716], "off2cas": 692, "scpdipm": 714, "runmkt": 723, "smartmkt": 723, "on_off": [729, 730, 731, 732], "t_f": [729, 730, 731, 732], "caution": 729, "results1": 729, "results2": 729, "nif": 730, "busnum": 732, "base_cost": 732, "hl_mod": 732, "hl": 732, "hl_val": 732, "overload": 732, "ovl_cost": 732, "reativ": 733, "realiz": 733, "totalcost": 734, "sequenc": 735, "candid": 735, "gain": 735, "mu_pqh": 736, "mu_pql": 736, "seriou": 737, "out_ac": 758, "multip": 759, "wrt": [760, 761, 762, 763], "uniform": 769, "3237850": 769, "tech": 769, "4110676": 769, "decrib": 770, "Or": 770, "mainli": 770}, "objects": {"": [[475, 0, 1, "", "add_userfcn"], [476, 0, 1, "", "apply_changes"], [42, 0, 1, "", "apply_profile"], [115, 0, 1, "", "artelys_knitro_options"], [478, 0, 1, "", "calc_branch_angle"], [479, 0, 1, "", "calc_v_i_sum"], [480, 0, 1, "", "calc_v_pq_sum"], [481, 0, 1, "", "calc_v_y_sum"], [482, 0, 1, "", "case_info"], [485, 0, 1, "", "compare_case"], [486, 0, 1, "", "connected_components"], [116, 0, 1, "", "convert_lin_constraint"], [117, 0, 1, "", "convert_lin_constraint_multipliers"], [487, 0, 1, "", "cpf_corrector"], [488, 0, 1, "", "cpf_current_mpc"], [489, 0, 1, "", "cpf_default_callback"], [490, 0, 1, "", "cpf_detect_events"], [491, 0, 1, "", "cpf_flim_event"], [492, 0, 1, "", "cpf_flim_event_cb"], [493, 0, 1, "", "cpf_nose_event"], [494, 0, 1, "", "cpf_nose_event_cb"], [495, 0, 1, "", "cpf_p"], [496, 0, 1, "", "cpf_p_jac"], [497, 0, 1, "", "cpf_plim_event"], [498, 0, 1, "", "cpf_plim_event_cb"], [499, 0, 1, "", "cpf_predictor"], [500, 0, 1, "", "cpf_qlim_event"], [501, 0, 1, "", "cpf_qlim_event_cb"], [502, 0, 1, "", "cpf_register_callback"], [503, 0, 1, "", "cpf_register_event"], [504, 0, 1, "", "cpf_tangent"], [505, 0, 1, "", "cpf_target_lam_event"], [506, 0, 1, "", "cpf_target_lam_event_cb"], [507, 0, 1, "", "cpf_vlim_event"], [508, 0, 1, "", "cpf_vlim_event_cb"], [118, 0, 1, "", "cplex_options"], [509, 0, 1, "", "d2Abr_dV2"], [510, 0, 1, "", "d2Ibr_dV2"], [511, 0, 1, "", "d2Imis_dV2"], [512, 0, 1, "", "d2Imis_dVdSg"], [513, 0, 1, "", "d2Sbr_dV2"], [514, 0, 1, "", "d2Sbus_dV2"], [515, 0, 1, "", "dAbr_dV"], [516, 0, 1, "", "dIbr_dV"], [517, 0, 1, "", "dImis_dV"], [518, 0, 1, "", "dSbr_dV"], [519, 0, 1, "", "dSbus_dV"], [521, 0, 1, "", "dcopf_solver"], [523, 0, 1, "", "define_constants"], [524, 0, 1, "", "e2i_data"], [525, 0, 1, "", "e2i_field"], [44, 0, 1, "", "ex_case3a"], [45, 0, 1, "", "ex_case3b"], [46, 0, 1, "", "ex_contab"], [47, 0, 1, "", "ex_load_profile"], [48, 0, 1, "", "ex_storage"], [49, 0, 1, "", "ex_transmat"], [50, 0, 1, "", "ex_wind"], [51, 0, 1, "", "ex_wind_profile"], [52, 0, 1, "", "ex_wind_profile_d"], [53, 0, 1, "", "ex_wind_uc"], [54, 0, 1, "", "ex_xgd"], [55, 0, 1, "", "ex_xgd_ramp"], [56, 0, 1, "", "ex_xgd_res"], [57, 0, 1, "", "ex_xgd_uc"], [527, 0, 1, "", "extract_islands"], [529, 0, 1, "", "feval_w_path"], [58, 0, 1, "", "filter_ramp_transitions"], [530, 0, 1, "", "find_bridges"], [531, 0, 1, "", "find_islands"], [14, 0, 1, "", "generate_autodoc_stubs"], [15, 0, 1, "", "generate_matpower_autodoc"], [16, 0, 1, "", "generate_source_symlinks"], [536, 0, 1, "", "get_losses"], [537, 0, 1, "", "get_reorder"], [119, 0, 1, "", "glpk_options"], [120, 0, 1, "", "gurobi_options"], [538, 0, 1, "", "hasPQcap"], [228, 0, 1, "", "have_feature"], [122, 0, 1, "", "have_feature_bpmpd"], [123, 0, 1, "", "have_feature_catchme"], [124, 0, 1, "", "have_feature_clp"], [125, 0, 1, "", "have_feature_cplex"], [539, 0, 1, "", "have_feature_e4st"], [126, 0, 1, "", "have_feature_evalc"], [127, 0, 1, "", "have_feature_fmincon"], [128, 0, 1, "", "have_feature_fmincon_ipm"], [129, 0, 1, "", "have_feature_fsolve"], [130, 0, 1, "", "have_feature_glpk"], [131, 0, 1, "", "have_feature_gurobi"], [132, 0, 1, "", "have_feature_intlinprog"], [133, 0, 1, "", "have_feature_ipopt"], [134, 0, 1, "", "have_feature_ipopt_auxdata"], [135, 0, 1, "", "have_feature_isequaln"], [136, 0, 1, "", "have_feature_knitro"], [137, 0, 1, "", "have_feature_knitromatlab"], [138, 0, 1, "", "have_feature_ktrlink"], [139, 0, 1, "", "have_feature_linprog"], [140, 0, 1, "", "have_feature_linprog_ds"], [22, 0, 1, "", "have_feature_lu_vec"], [229, 0, 1, "", "have_feature_matlab"], [540, 0, 1, "", "have_feature_minopf"], [141, 0, 1, "", "have_feature_mosek"], [541, 0, 1, "", "have_feature_most"], [542, 0, 1, "", "have_feature_mp_core"], [230, 0, 1, "", "have_feature_octave"], [142, 0, 1, "", "have_feature_opti_clp"], [143, 0, 1, "", "have_feature_optim"], [144, 0, 1, "", "have_feature_optimoptions"], [145, 0, 1, "", "have_feature_osqp"], [23, 0, 1, "", "have_feature_pardiso"], [24, 0, 1, "", "have_feature_pardiso_legacy"], [25, 0, 1, "", "have_feature_pardiso_object"], [543, 0, 1, "", "have_feature_pdipmopf"], [146, 0, 1, "", "have_feature_quadprog"], [147, 0, 1, "", "have_feature_quadprog_ls"], [544, 0, 1, "", "have_feature_regexp_split"], [545, 0, 1, "", "have_feature_scpdipmopf"], [546, 0, 1, "", "have_feature_sdp_pf"], [148, 0, 1, "", "have_feature_sdpt3"], [149, 0, 1, "", "have_feature_sedumi"], [547, 0, 1, "", "have_feature_smartmarket"], [548, 0, 1, "", "have_feature_syngrid"], [549, 0, 1, "", "have_feature_table"], [550, 0, 1, "", "have_feature_tralmopf"], [150, 0, 1, "", "have_feature_yalmip"], [551, 0, 1, "", "i2e_data"], [552, 0, 1, "", "i2e_field"], [553, 0, 1, "", "idx_brch"], [554, 0, 1, "", "idx_bus"], [555, 0, 1, "", "idx_cost"], [556, 0, 1, "", "idx_ct"], [557, 0, 1, "", "idx_dcline"], [558, 0, 1, "", "idx_gen"], [60, 0, 1, "", "idx_profile"], [465, 0, 1, "", "install_matpower"], [151, 0, 1, "", "ipopt_options"], [564, 0, 1, "", "makeAang"], [565, 0, 1, "", "makeApq"], [566, 0, 1, "", "makeAvl"], [567, 0, 1, "", "makeAy"], [568, 0, 1, "", "makeB"], [569, 0, 1, "", "makeBdc"], [570, 0, 1, "", "makeJac"], [571, 0, 1, "", "makeLODF"], [572, 0, 1, "", "makePTDF"], [573, 0, 1, "", "makeSbus"], [574, 0, 1, "", "makeSdzip"], [575, 0, 1, "", "makeYbus"], [576, 0, 1, "", "make_vcorr"], [577, 0, 1, "", "make_zpv"], [65, 0, 1, "", "md_init"], [27, 0, 1, "", "mips_example1"], [28, 0, 1, "", "mips_example2"], [153, 0, 1, "", "miqps_cplex"], [154, 0, 1, "", "miqps_glpk"], [155, 0, 1, "", "miqps_gurobi"], [156, 0, 1, "", "miqps_master"], [579, 0, 1, "", "miqps_matpower"], [157, 0, 1, "", "miqps_mosek"], [158, 0, 1, "", "miqps_ot"], [159, 0, 1, "", "mosek_options"], [160, 0, 1, "", "mosek_symbcon"], [67, 0, 1, "", "most_ex1_ed"], [68, 0, 1, "", "most_ex2_dcopf"], [69, 0, 1, "", "most_ex3_dcopf_w_uc"], [70, 0, 1, "", "most_ex4_dcopf_ss"], [71, 0, 1, "", "most_ex5_mpopf"], [72, 0, 1, "", "most_ex6_uc"], [73, 0, 1, "", "most_ex7_suc"], [74, 0, 1, "", "most_summary"], [741, 1, 1, "", "mp_foo_table"], [113, 1, 1, "", "mp_idx_manager"], [462, 1, 1, "", "mp_table"], [467, 0, 1, "", "mp_table_class"], [463, 1, 1, "", "mp_table_subclass"], [582, 0, 1, "", "mpoption_info_clp"], [583, 0, 1, "", "mpoption_info_cplex"], [584, 0, 1, "", "mpoption_info_fmincon"], [585, 0, 1, "", "mpoption_info_glpk"], [586, 0, 1, "", "mpoption_info_gurobi"], [587, 0, 1, "", "mpoption_info_intlinprog"], [588, 0, 1, "", "mpoption_info_ipopt"], [589, 0, 1, "", "mpoption_info_knitro"], [590, 0, 1, "", "mpoption_info_linprog"], [591, 0, 1, "", "mpoption_info_mips"], [592, 0, 1, "", "mpoption_info_mosek"], [76, 0, 1, "", "mpoption_info_most"], [593, 0, 1, "", "mpoption_info_osqp"], [594, 0, 1, "", "mpoption_info_quadprog"], [595, 0, 1, "", "mpoption_old"], [166, 0, 1, "", "nested_struct_copy"], [598, 0, 1, "", "newtonpf_I_cart"], [599, 0, 1, "", "newtonpf_I_hybrid"], [600, 0, 1, "", "newtonpf_I_polar"], [601, 0, 1, "", "newtonpf_S_cart"], [602, 0, 1, "", "newtonpf_S_hybrid"], [167, 0, 1, "", "nleqs_core"], [168, 0, 1, "", "nleqs_fd_newton"], [169, 0, 1, "", "nleqs_fsolve"], [170, 0, 1, "", "nleqs_gauss_seidel"], [171, 0, 1, "", "nleqs_master"], [172, 0, 1, "", "nleqs_master_ex1"], [173, 0, 1, "", "nleqs_master_ex2"], [174, 0, 1, "", "nleqs_newton"], [175, 0, 1, "", "nlp_consfcn"], [176, 0, 1, "", "nlp_costfcn"], [177, 0, 1, "", "nlp_hessfcn"], [603, 0, 1, "", "nlpopf_solver"], [178, 0, 1, "", "nlps_fmincon"], [179, 0, 1, "", "nlps_ipopt"], [180, 0, 1, "", "nlps_knitro"], [181, 0, 1, "", "nlps_master"], [182, 0, 1, "", "nlps_master_ex1"], [183, 0, 1, "", "nlps_master_ex2"], [605, 0, 1, "", "opf_args"], [606, 0, 1, "", "opf_branch_ang_fcn"], [607, 0, 1, "", "opf_branch_ang_hess"], [608, 0, 1, "", "opf_branch_flow_fcn"], [609, 0, 1, "", "opf_branch_flow_hess"], [610, 0, 1, "", "opf_current_balance_fcn"], [611, 0, 1, "", "opf_current_balance_hess"], [612, 0, 1, "", "opf_execute"], [613, 0, 1, "", "opf_gen_cost_fcn"], [614, 0, 1, "", "opf_legacy_user_cost_fcn"], [474, 1, 1, "", "opf_model"], [615, 0, 1, "", "opf_nle_fcn1"], [616, 0, 1, "", "opf_nle_hess1"], [617, 0, 1, "", "opf_power_balance_fcn"], [618, 0, 1, "", "opf_power_balance_hess"], [619, 0, 1, "", "opf_setup"], [620, 0, 1, "", "opf_veq_fcn"], [621, 0, 1, "", "opf_veq_hess"], [622, 0, 1, "", "opf_vlim_fcn"], [623, 0, 1, "", "opf_vlim_hess"], [624, 0, 1, "", "opf_vref_fcn"], [625, 0, 1, "", "opf_vref_hess"], [114, 1, 1, "", "opt_model"], [626, 0, 1, "", "order_radial"], [184, 0, 1, "", "osqp_options"], [77, 0, 1, "", "plot_gen"], [78, 0, 1, "", "plot_storage"], [79, 0, 1, "", "plot_uc"], [80, 0, 1, "", "plot_uc_data"], [186, 0, 1, "", "pne_callback_default"], [187, 0, 1, "", "pne_callback_nose"], [188, 0, 1, "", "pne_callback_target_lam"], [189, 0, 1, "", "pne_detect_events"], [190, 0, 1, "", "pne_detected_event"], [191, 0, 1, "", "pne_event_nose"], [192, 0, 1, "", "pne_event_target_lam"], [193, 0, 1, "", "pne_ex1"], [194, 0, 1, "", "pne_pfcn_arc_len"], [195, 0, 1, "", "pne_pfcn_natural"], [196, 0, 1, "", "pne_pfcn_pseudo_arc_len"], [197, 0, 1, "", "pne_register_callbacks"], [198, 0, 1, "", "pne_register_events"], [199, 0, 1, "", "pnes_master"], [633, 0, 1, "", "psse_convert"], [634, 0, 1, "", "psse_convert_hvdc"], [635, 0, 1, "", "psse_convert_xfmr"], [636, 0, 1, "", "psse_parse"], [637, 0, 1, "", "psse_parse_line"], [638, 0, 1, "", "psse_parse_section"], [639, 0, 1, "", "psse_read"], [200, 0, 1, "", "qp_ex1"], [201, 0, 1, "", "qps_bpmpd"], [202, 0, 1, "", "qps_clp"], [203, 0, 1, "", "qps_cplex"], [204, 0, 1, "", "qps_glpk"], [205, 0, 1, "", "qps_gurobi"], [206, 0, 1, "", "qps_ipopt"], [207, 0, 1, "", "qps_knitro"], [208, 0, 1, "", "qps_master"], [640, 0, 1, "", "qps_matpower"], [31, 0, 1, "", "qps_mips"], [209, 0, 1, "", "qps_mosek"], [210, 0, 1, "", "qps_osqp"], [211, 0, 1, "", "qps_ot"], [641, 0, 1, "", "radial_pf"], [642, 0, 1, "", "remove_userfcn"], [468, 0, 1, "", "run_cpf"], [469, 0, 1, "", "run_mp"], [470, 0, 1, "", "run_opf"], [471, 0, 1, "", "run_pf"], [643, 0, 1, "", "run_userfcn"], [649, 0, 1, "", "runopf_w_res"], [655, 0, 1, "", "scale_load"], [656, 0, 1, "", "set_reorder"], [657, 0, 1, "", "t_apply_changes"], [658, 0, 1, "", "t_auction_case"], [659, 0, 1, "", "t_auction_minopf"], [660, 0, 1, "", "t_auction_mips"], [661, 0, 1, "", "t_auction_tspopf_pdipm"], [232, 0, 1, "", "t_begin"], [81, 0, 1, "", "t_case30_most"], [662, 0, 1, "", "t_case30_userfcns"], [82, 0, 1, "", "t_case3_most"], [742, 0, 1, "", "t_case3p_a"], [743, 0, 1, "", "t_case3p_b"], [744, 0, 1, "", "t_case3p_c"], [745, 0, 1, "", "t_case3p_d"], [746, 0, 1, "", "t_case3p_e"], [747, 0, 1, "", "t_case3p_f"], [748, 0, 1, "", "t_case3p_g"], [749, 0, 1, "", "t_case3p_h"], [663, 0, 1, "", "t_case9_dcline"], [750, 0, 1, "", "t_case9_gizmo"], [664, 0, 1, "", "t_case9_opf"], [665, 0, 1, "", "t_case9_opfv2"], [666, 0, 1, "", "t_case9_pf"], [667, 0, 1, "", "t_case9_pfv2"], [668, 0, 1, "", "t_case9_save2psse"], [669, 0, 1, "", "t_case_ext"], [670, 0, 1, "", "t_case_int"], [83, 0, 1, "", "t_case_tlmp"], [84, 0, 1, "", "t_case_tlmp_storage"], [671, 0, 1, "", "t_chgtab"], [672, 0, 1, "", "t_cpf"], [673, 0, 1, "", "t_cpf_cb1"], [674, 0, 1, "", "t_cpf_cb2"], [675, 0, 1, "", "t_dcline"], [751, 0, 1, "", "t_dmc_element"], [233, 0, 1, "", "t_end"], [676, 0, 1, "", "t_ext2int2ext"], [677, 0, 1, "", "t_feval_w_path"], [234, 0, 1, "", "t_file_match"], [678, 0, 1, "", "t_get_losses"], [679, 0, 1, "", "t_hasPQcap"], [235, 0, 1, "", "t_have_feature"], [680, 0, 1, "", "t_hessian"], [236, 0, 1, "", "t_is"], [681, 0, 1, "", "t_islands"], [682, 0, 1, "", "t_jacobian"], [683, 0, 1, "", "t_load2disp"], [684, 0, 1, "", "t_loadcase"], [685, 0, 1, "", "t_makeLODF"], [686, 0, 1, "", "t_makePTDF"], [687, 0, 1, "", "t_margcost"], [32, 0, 1, "", "t_mips"], [33, 0, 1, "", "t_mips_pardiso"], [212, 0, 1, "", "t_miqps_master"], [688, 0, 1, "", "t_miqps_matpower"], [689, 0, 1, "", "t_modcost"], [85, 0, 1, "", "t_most_30b_1_1_0"], [86, 0, 1, "", "t_most_30b_1_1_0_uc"], [87, 0, 1, "", "t_most_30b_1_1_17"], [88, 0, 1, "", "t_most_30b_3_1_0"], [89, 0, 1, "", "t_most_30b_3_1_17"], [90, 0, 1, "", "t_most_3b_1_1_0"], [91, 0, 1, "", "t_most_3b_1_1_2"], [92, 0, 1, "", "t_most_3b_3_1_0"], [93, 0, 1, "", "t_most_3b_3_1_2"], [94, 0, 1, "", "t_most_fixed_res"], [95, 0, 1, "", "t_most_mpopf"], [96, 0, 1, "", "t_most_sp"], [97, 0, 1, "", "t_most_spuc"], [98, 0, 1, "", "t_most_suc"], [99, 0, 1, "", "t_most_tlmp"], [100, 0, 1, "", "t_most_uc"], [101, 0, 1, "", "t_most_w_ds"], [752, 0, 1, "", "t_mp_data_model"], [753, 0, 1, "", "t_mp_dm_converter_mpc2"], [754, 0, 1, "", "t_mp_mapped_array"], [755, 0, 1, "", "t_mp_table"], [34, 0, 1, "", "t_mplinsolve"], [690, 0, 1, "", "t_mpoption"], [691, 0, 1, "", "t_mpoption_ov"], [756, 0, 1, "", "t_mpxt_legacy_dcline"], [757, 0, 1, "", "t_mpxt_reserves"], [213, 0, 1, "", "t_nested_struct_copy"], [214, 0, 1, "", "t_nleqs_master"], [215, 0, 1, "", "t_nlps_master"], [758, 0, 1, "", "t_nm_element"], [759, 0, 1, "", "t_node_test"], [692, 0, 1, "", "t_off2case"], [237, 0, 1, "", "t_ok"], [216, 0, 1, "", "t_om_solve_leqs"], [217, 0, 1, "", "t_om_solve_miqps"], [218, 0, 1, "", "t_om_solve_nleqs"], [219, 0, 1, "", "t_om_solve_nlps"], [220, 0, 1, "", "t_om_solve_pne"], [221, 0, 1, "", "t_om_solve_qps"], [693, 0, 1, "", "t_opf_dc_bpmpd"], [694, 0, 1, "", "t_opf_dc_clp"], [695, 0, 1, "", "t_opf_dc_cplex"], [696, 0, 1, "", "t_opf_dc_default"], [697, 0, 1, "", "t_opf_dc_glpk"], [698, 0, 1, "", "t_opf_dc_gurobi"], [699, 0, 1, "", "t_opf_dc_ipopt"], [700, 0, 1, "", "t_opf_dc_mips"], [701, 0, 1, "", "t_opf_dc_mips_sc"], [702, 0, 1, "", "t_opf_dc_mosek"], [703, 0, 1, "", "t_opf_dc_osqp"], [704, 0, 1, "", "t_opf_dc_ot"], [705, 0, 1, "", "t_opf_default"], [706, 0, 1, "", "t_opf_fmincon"], [707, 0, 1, "", "t_opf_ipopt"], [708, 0, 1, "", "t_opf_knitro"], [709, 0, 1, "", "t_opf_minopf"], [710, 0, 1, "", "t_opf_mips"], [711, 0, 1, "", "t_opf_model"], [712, 0, 1, "", "t_opf_softlims"], [713, 0, 1, "", "t_opf_tspopf_pdipm"], [714, 0, 1, "", "t_opf_tspopf_scpdipm"], [715, 0, 1, "", "t_opf_tspopf_tralm"], [716, 0, 1, "", "t_opf_userfcns"], [222, 0, 1, "", "t_opt_model"], [717, 0, 1, "", "t_pf_ac"], [718, 0, 1, "", "t_pf_dc"], [719, 0, 1, "", "t_pf_radial"], [223, 0, 1, "", "t_pnes_master"], [760, 0, 1, "", "t_port_inj_current_acc"], [761, 0, 1, "", "t_port_inj_current_acp"], [762, 0, 1, "", "t_port_inj_power_acc"], [763, 0, 1, "", "t_port_inj_power_acp"], [764, 0, 1, "", "t_pretty_print"], [720, 0, 1, "", "t_printpf"], [721, 0, 1, "", "t_psse"], [224, 0, 1, "", "t_qps_master"], [722, 0, 1, "", "t_qps_matpower"], [35, 0, 1, "", "t_qps_mips"], [765, 0, 1, "", "t_run_mp"], [766, 0, 1, "", "t_run_mp_3p"], [767, 0, 1, "", "t_run_opf_default"], [238, 0, 1, "", "t_run_tests"], [723, 0, 1, "", "t_runmarket"], [724, 0, 1, "", "t_runopf_w_res"], [725, 0, 1, "", "t_scale_load"], [239, 0, 1, "", "t_skip"], [240, 0, 1, "", "t_str_match"], [241, 0, 1, "", "t_test_fcns"], [726, 0, 1, "", "t_total_load"], [727, 0, 1, "", "t_totcost"], [728, 0, 1, "", "t_vdep_load"], [768, 0, 1, "", "test_matpower"], [36, 0, 1, "", "test_mips"], [102, 0, 1, "", "test_most"], [225, 0, 1, "", "test_mp_opt_model"], [242, 0, 1, "", "test_mptest"], [729, 0, 1, "", "toggle_dcline"], [730, 0, 1, "", "toggle_iflims"], [731, 0, 1, "", "toggle_reserves"], [732, 0, 1, "", "toggle_softlims"], [733, 0, 1, "", "total_load"], [736, 0, 1, "", "update_mupq"]], "mips": [[26, 0, 1, "", "mips"]], "most": [[66, 0, 1, "", "most"]], "mp": [[246, 1, 1, "", "NODE_TYPE"], [247, 1, 1, "", "cost_table"], [248, 1, 1, "", "cost_table_utils"], [249, 1, 1, "", "data_model"], [250, 1, 1, "", "data_model_cpf"], [251, 1, 1, "", "data_model_opf"], [252, 1, 1, "", "dm_converter"], [253, 1, 1, "", "dm_converter_mpc2"], [254, 1, 1, "", "dm_converter_mpc2_legacy"], [255, 1, 1, "", "dm_element"], [256, 1, 1, "", "dmc_element"], [257, 1, 1, "", "dmce_branch_mpc2"], [258, 1, 1, "", "dmce_bus3p_mpc2"], [259, 1, 1, "", "dmce_bus_mpc2"], [260, 1, 1, "", "dmce_buslink_mpc2"], [261, 1, 1, "", "dmce_gen3p_mpc2"], [262, 1, 1, "", "dmce_gen_mpc2"], [263, 1, 1, "", "dmce_legacy_dcline_mpc2"], [264, 1, 1, "", "dmce_line3p_mpc2"], [265, 1, 1, "", "dmce_load3p_mpc2"], [266, 1, 1, "", "dmce_load_mpc2"], [267, 1, 1, "", "dmce_reserve_gen_mpc2"], [268, 1, 1, "", "dmce_reserve_zone_mpc2"], [269, 1, 1, "", "dmce_shunt_mpc2"], [270, 1, 1, "", "dmce_xfmr3p_mpc2"], [271, 1, 1, "", "dme_branch"], [272, 1, 1, "", "dme_branch_opf"], [273, 1, 1, "", "dme_bus"], [274, 1, 1, "", "dme_bus3p"], [275, 1, 1, "", "dme_bus3p_opf"], [276, 1, 1, "", "dme_bus_opf"], [277, 1, 1, "", "dme_buslink"], [278, 1, 1, "", "dme_buslink_opf"], [279, 1, 1, "", "dme_gen"], [280, 1, 1, "", "dme_gen3p"], [281, 1, 1, "", "dme_gen3p_opf"], [282, 1, 1, "", "dme_gen_opf"], [283, 1, 1, "", "dme_legacy_dcline"], [284, 1, 1, "", "dme_legacy_dcline_opf"], [285, 1, 1, "", "dme_line3p"], [286, 1, 1, "", "dme_line3p_opf"], [287, 1, 1, "", "dme_load"], [288, 1, 1, "", "dme_load3p"], [289, 1, 1, "", "dme_load3p_opf"], [290, 1, 1, "", "dme_load_cpf"], [291, 1, 1, "", "dme_load_opf"], [292, 1, 1, "", "dme_reserve_gen"], [293, 1, 1, "", "dme_reserve_zone"], [294, 1, 1, "", "dme_shared_opf"], [295, 1, 1, "", "dme_shunt"], [296, 1, 1, "", "dme_shunt_cpf"], [297, 1, 1, "", "dme_shunt_opf"], [298, 1, 1, "", "dme_xfmr3p"], [299, 1, 1, "", "dme_xfmr3p_opf"], [300, 1, 1, "", "element_container"], [301, 1, 1, "", "extension"], [302, 1, 1, "", "form"], [303, 1, 1, "", "form_ac"], [304, 1, 1, "", "form_acc"], [305, 1, 1, "", "form_acp"], [306, 1, 1, "", "form_dc"], [466, 0, 1, "", "load_dm"], [307, 1, 1, "", "mapped_array"], [308, 1, 1, "", "math_model"], [309, 1, 1, "", "math_model_cpf_acc"], [310, 1, 1, "", "math_model_cpf_acci"], [311, 1, 1, "", "math_model_cpf_accs"], [312, 1, 1, "", "math_model_cpf_acp"], [313, 1, 1, "", "math_model_cpf_acpi"], [314, 1, 1, "", "math_model_cpf_acps"], [315, 1, 1, "", "math_model_opf"], [316, 1, 1, "", "math_model_opf_ac"], [317, 1, 1, "", "math_model_opf_acc"], [318, 1, 1, "", "math_model_opf_acci"], [319, 1, 1, "", "math_model_opf_acci_legacy"], [320, 1, 1, "", "math_model_opf_accs"], [321, 1, 1, "", "math_model_opf_accs_legacy"], [322, 1, 1, "", "math_model_opf_acp"], [323, 1, 1, "", "math_model_opf_acpi"], [324, 1, 1, "", "math_model_opf_acpi_legacy"], [325, 1, 1, "", "math_model_opf_acps"], [326, 1, 1, "", "math_model_opf_acps_legacy"], [327, 1, 1, "", "math_model_opf_dc"], [328, 1, 1, "", "math_model_opf_dc_legacy"], [329, 1, 1, "", "math_model_pf"], [330, 1, 1, "", "math_model_pf_ac"], [331, 1, 1, "", "math_model_pf_acci"], [332, 1, 1, "", "math_model_pf_accs"], [333, 1, 1, "", "math_model_pf_acpi"], [334, 1, 1, "", "math_model_pf_acps"], [335, 1, 1, "", "math_model_pf_dc"], [336, 1, 1, "", "mm_element"], [337, 1, 1, "", "mm_shared_opf_legacy"], [338, 1, 1, "", "mm_shared_pfcpf"], [339, 1, 1, "", "mm_shared_pfcpf_ac"], [340, 1, 1, "", "mm_shared_pfcpf_ac_i"], [341, 1, 1, "", "mm_shared_pfcpf_acc"], [342, 1, 1, "", "mm_shared_pfcpf_acci"], [343, 1, 1, "", "mm_shared_pfcpf_accs"], [344, 1, 1, "", "mm_shared_pfcpf_acp"], [345, 1, 1, "", "mm_shared_pfcpf_acpi"], [346, 1, 1, "", "mm_shared_pfcpf_acps"], [347, 1, 1, "", "mm_shared_pfcpf_dc"], [348, 1, 1, "", "mme_branch"], [349, 1, 1, "", "mme_branch_opf"], [350, 1, 1, "", "mme_branch_opf_ac"], [351, 1, 1, "", "mme_branch_opf_acc"], [352, 1, 1, "", "mme_branch_opf_acp"], [353, 1, 1, "", "mme_branch_opf_dc"], [354, 1, 1, "", "mme_branch_pf_ac"], [355, 1, 1, "", "mme_branch_pf_dc"], [356, 1, 1, "", "mme_bus"], [357, 1, 1, "", "mme_bus3p"], [358, 1, 1, "", "mme_bus3p_opf_acc"], [359, 1, 1, "", "mme_bus3p_opf_acp"], [360, 1, 1, "", "mme_bus_opf_ac"], [361, 1, 1, "", "mme_bus_opf_acc"], [362, 1, 1, "", "mme_bus_opf_acp"], [363, 1, 1, "", "mme_bus_opf_dc"], [364, 1, 1, "", "mme_bus_pf_ac"], [365, 1, 1, "", "mme_bus_pf_dc"], [366, 1, 1, "", "mme_buslink"], [367, 1, 1, "", "mme_buslink_opf"], [368, 1, 1, "", "mme_buslink_opf_acc"], [369, 1, 1, "", "mme_buslink_opf_acp"], [370, 1, 1, "", "mme_buslink_pf_ac"], [371, 1, 1, "", "mme_buslink_pf_acc"], [372, 1, 1, "", "mme_buslink_pf_acp"], [373, 1, 1, "", "mme_gen"], [374, 1, 1, "", "mme_gen3p"], [375, 1, 1, "", "mme_gen3p_opf"], [376, 1, 1, "", "mme_gen_opf"], [377, 1, 1, "", "mme_gen_opf_ac"], [378, 1, 1, "", "mme_gen_opf_ac_oval"], [379, 1, 1, "", "mme_gen_opf_dc"], [380, 1, 1, "", "mme_gen_pf_ac"], [381, 1, 1, "", "mme_gen_pf_dc"], [382, 1, 1, "", "mme_legacy_dcline"], [383, 1, 1, "", "mme_legacy_dcline_opf"], [384, 1, 1, "", "mme_legacy_dcline_opf_ac"], [385, 1, 1, "", "mme_legacy_dcline_opf_dc"], [386, 1, 1, "", "mme_legacy_dcline_pf_ac"], [387, 1, 1, "", "mme_legacy_dcline_pf_dc"], [388, 1, 1, "", "mme_line3p"], [389, 1, 1, "", "mme_line3p_opf"], [390, 1, 1, "", "mme_load"], [391, 1, 1, "", "mme_load_cpf"], [392, 1, 1, "", "mme_load_pf_ac"], [393, 1, 1, "", "mme_load_pf_dc"], [394, 1, 1, "", "mme_reserve_gen"], [395, 1, 1, "", "mme_reserve_zone"], [396, 1, 1, "", "mme_shunt"], [397, 1, 1, "", "mme_shunt_cpf"], [398, 1, 1, "", "mme_shunt_pf_ac"], [399, 1, 1, "", "mme_shunt_pf_dc"], [400, 1, 1, "", "mme_xfmr3p"], [401, 1, 1, "", "mme_xfmr3p_opf"], [402, 1, 1, "", "net_model"], [403, 1, 1, "", "net_model_ac"], [404, 1, 1, "", "net_model_acc"], [405, 1, 1, "", "net_model_acp"], [406, 1, 1, "", "net_model_dc"], [407, 1, 1, "", "nm_element"], [408, 1, 1, "", "nme_branch"], [409, 1, 1, "", "nme_branch_ac"], [410, 1, 1, "", "nme_branch_acc"], [411, 1, 1, "", "nme_branch_acp"], [412, 1, 1, "", "nme_branch_dc"], [413, 1, 1, "", "nme_bus"], [414, 1, 1, "", "nme_bus3p"], [415, 1, 1, "", "nme_bus3p_acc"], [416, 1, 1, "", "nme_bus3p_acp"], [417, 1, 1, "", "nme_bus_acc"], [418, 1, 1, "", "nme_bus_acp"], [419, 1, 1, "", "nme_bus_dc"], [420, 1, 1, "", "nme_buslink"], [421, 1, 1, "", "nme_buslink_acc"], [422, 1, 1, "", "nme_buslink_acp"], [423, 1, 1, "", "nme_gen"], [424, 1, 1, "", "nme_gen3p"], [425, 1, 1, "", "nme_gen3p_acc"], [426, 1, 1, "", "nme_gen3p_acp"], [427, 1, 1, "", "nme_gen_ac"], [428, 1, 1, "", "nme_gen_acc"], [429, 1, 1, "", "nme_gen_acp"], [430, 1, 1, "", "nme_gen_dc"], [431, 1, 1, "", "nme_legacy_dcline"], [432, 1, 1, "", "nme_legacy_dcline_ac"], [433, 1, 1, "", "nme_legacy_dcline_acc"], [434, 1, 1, "", "nme_legacy_dcline_acp"], [435, 1, 1, "", "nme_legacy_dcline_dc"], [436, 1, 1, "", "nme_line3p"], [437, 1, 1, "", "nme_load"], [438, 1, 1, "", "nme_load3p"], [439, 1, 1, "", "nme_load_ac"], [440, 1, 1, "", "nme_load_acc"], [441, 1, 1, "", "nme_load_acp"], [442, 1, 1, "", "nme_load_dc"], [443, 1, 1, "", "nme_shunt"], [444, 1, 1, "", "nme_shunt_ac"], [445, 1, 1, "", "nme_shunt_acc"], [446, 1, 1, "", "nme_shunt_acp"], [447, 1, 1, "", "nme_shunt_dc"], [448, 1, 1, "", "nme_xfmr3p"], [106, 1, 1, "", "set_manager"], [107, 1, 1, "", "set_manager_opt_model"], [449, 1, 1, "", "sm_legacy_cost"], [108, 1, 1, "", "sm_lin_constraint"], [109, 1, 1, "", "sm_nln_constraint"], [110, 1, 1, "", "sm_nln_cost"], [111, 1, 1, "", "sm_quad_cost"], [112, 1, 1, "", "sm_variable"], [450, 1, 1, "", "task"], [451, 1, 1, "", "task_cpf"], [452, 1, 1, "", "task_cpf_legacy"], [453, 1, 1, "", "task_opf"], [454, 1, 1, "", "task_opf_legacy"], [455, 1, 1, "", "task_pf"], [456, 1, 1, "", "task_pf_legacy"], [457, 1, 1, "", "task_shared_legacy"], [458, 1, 1, "", "xt_3p"], [459, 1, 1, "", "xt_legacy_dcline"], [460, 1, 1, "", "xt_oval_cap_curve"], [461, 1, 1, "", "xt_reserves"]], "mp.NODE_TYPE": [[246, 2, 1, "", "NONE"], [246, 2, 1, "", "PQ"], [246, 2, 1, "", "PV"], [246, 2, 1, "", "REF"], [246, 3, 1, "", "is_valid"]], "mp.cost_table": [[247, 4, 1, "", "cost_table"], [247, 3, 1, "", "diff_poly_fcn"], [247, 3, 1, "", "eval_poly_fcn"], [247, 4, 1, "", "max_pwl_cost"], [247, 3, 1, "", "poly_cost_fcn"], [247, 4, 1, "", "poly_params"], [247, 4, 1, "", "pwl_params"]], "mp.cost_table_utils": [[248, 3, 1, "", "max_pwl_cost"], [248, 3, 1, "", "poly_params"], [248, 3, 1, "", "pwl_params"]], "mp.data_model": [[249, 2, 1, "", "base_kva"], [249, 2, 1, "", "base_mva"], [249, 4, 1, "", "build"], [249, 4, 1, "", "build_params"], [249, 4, 1, "", "copy"], [249, 4, 1, "", "count"], [249, 4, 1, "", "data_model"], [249, 4, 1, "", "display"], [249, 4, 1, "", "initialize"], [249, 4, 1, "", "online"], [249, 4, 1, "", "pp_data"], [249, 4, 1, "", "pp_flags"], [249, 4, 1, "", "pp_get_headers"], [249, 4, 1, "", "pp_get_headers_cnt"], [249, 4, 1, "", "pp_get_headers_ext"], [249, 4, 1, "", "pp_get_headers_other"], [249, 4, 1, "", "pp_have_section"], [249, 4, 1, "", "pp_section"], [249, 4, 1, "", "pp_section_label"], [249, 4, 1, "", "pp_section_list"], [249, 4, 1, "", "pretty_print"], [249, 4, 1, "", "rebuild"], [249, 4, 1, "", "set_bus_v_lims_via_vg"], [249, 2, 1, "", "source"], [249, 4, 1, "", "update_status"], [249, 2, 1, "", "userdata"]], "mp.data_model_cpf": [[250, 4, 1, "", "data_model_cpf"]], "mp.data_model_opf": [[251, 4, 1, "", "data_model_opf"], [251, 4, 1, "", "pp_flags"], [251, 4, 1, "", "pp_get_headers_other"], [251, 4, 1, "", "pp_section_list"]], "mp.dm_converter": [[252, 4, 1, "", "build"], [252, 4, 1, "", "copy"], [252, 4, 1, "", "display"], [252, 4, 1, "", "export"], [252, 4, 1, "", "format_tag"], [252, 4, 1, "", "import"], [252, 4, 1, "", "init_export"], [252, 4, 1, "", "save"]], "mp.dm_converter_mpc2": [[253, 4, 1, "", "dm_converter_mpc2"], [253, 4, 1, "", "format_tag"], [253, 4, 1, "", "import"], [253, 4, 1, "", "init_export"], [253, 4, 1, "", "save"]], "mp.dm_converter_mpc2_legacy": [[254, 4, 1, "", "legacy_user_mod_inputs"], [254, 4, 1, "", "legacy_user_nln_constraints"]], "mp.dm_element": [[255, 4, 1, "", "ID"], [255, 2, 1, "", "ID2i"], [255, 4, 1, "", "build_params"], [255, 4, 1, "", "copy"], [255, 4, 1, "", "count"], [255, 4, 1, "", "cxn_idx_prop"], [255, 4, 1, "", "cxn_type"], [255, 4, 1, "", "cxn_type_prop"], [255, 4, 1, "", "display"], [255, 4, 1, "", "dm_converter_element"], [255, 4, 1, "", "export_vars"], [255, 4, 1, "", "export_vars_offline_val"], [255, 2, 1, "", "i2on"], [255, 4, 1, "", "init_status"], [255, 4, 1, "", "initialize"], [255, 4, 1, "", "label"], [255, 4, 1, "", "labels"], [255, 4, 1, "", "main_table_var_names"], [255, 2, 1, "", "n"], [255, 4, 1, "", "name"], [255, 2, 1, "", "nr"], [255, 2, 1, "", "off"], [255, 2, 1, "", "on"], [255, 4, 1, "", "pp_data"], [255, 4, 1, "", "pp_data_cnt"], [255, 4, 1, "", "pp_data_det"], [255, 4, 1, "", "pp_data_ext"], [255, 4, 1, "", "pp_data_row_det"], [255, 4, 1, "", "pp_data_sum"], [255, 4, 1, "", "pp_get_footers"], [255, 4, 1, "", "pp_get_footers_det"], [255, 4, 1, "", "pp_get_headers"], [255, 4, 1, "", "pp_get_headers_det"], [255, 4, 1, "", "pp_get_title_det"], [255, 4, 1, "", "pp_have_section"], [255, 4, 1, "", "pp_have_section_cnt"], [255, 4, 1, "", "pp_have_section_det"], [255, 4, 1, "", "pp_have_section_ext"], [255, 4, 1, "", "pp_have_section_sum"], [255, 4, 1, "", "pp_rows"], [255, 4, 1, "", "pretty_print"], [255, 4, 1, "", "rebuild"], [255, 2, 1, "", "tab"], [255, 4, 1, "", "table_exists"], [255, 4, 1, "", "update_status"]], "mp.dmc_element": [[256, 4, 1, "", "data_exists"], [256, 4, 1, "", "data_field"], [256, 4, 1, "", "data_model_element"], [256, 4, 1, "", "data_subs"], [256, 4, 1, "", "default_export_data_nrows"], [256, 4, 1, "", "default_export_data_table"], [256, 4, 1, "", "export"], [256, 4, 1, "", "export_col"], [256, 4, 1, "", "export_table_values"], [256, 4, 1, "", "get_export_size"], [256, 4, 1, "", "get_export_spec"], [256, 4, 1, "", "get_import_size"], [256, 4, 1, "", "get_import_spec"], [256, 4, 1, "", "get_input_table_values"], [256, 4, 1, "", "import"], [256, 4, 1, "", "import_col"], [256, 4, 1, "", "import_table_values"], [256, 4, 1, "", "init_export_data"], [256, 4, 1, "", "name"], [256, 4, 1, "", "table_var_map"]], "mp.dmce_branch_mpc2": [[257, 4, 1, "", "data_field"], [257, 4, 1, "", "default_export_data_table"], [257, 4, 1, "", "name"], [257, 4, 1, "", "table_var_map"]], "mp.dmce_bus3p_mpc2": [[258, 4, 1, "", "bus_status_import"], [258, 4, 1, "", "data_field"], [258, 4, 1, "", "name"], [258, 4, 1, "", "table_var_map"]], "mp.dmce_bus_mpc2": [[259, 4, 1, "", "bus_name_export"], [259, 4, 1, "", "bus_name_import"], [259, 4, 1, "", "bus_status_import"], [259, 4, 1, "", "data_field"], [259, 4, 1, "", "default_export_data_table"], [259, 4, 1, "", "init_export_data"], [259, 4, 1, "", "name"], [259, 4, 1, "", "table_var_map"]], "mp.dmce_buslink_mpc2": [[260, 4, 1, "", "data_field"], [260, 4, 1, "", "name"], [260, 4, 1, "", "table_var_map"]], "mp.dmce_gen3p_mpc2": [[261, 4, 1, "", "data_field"], [261, 4, 1, "", "name"], [261, 4, 1, "", "table_var_map"]], "mp.dmce_gen_mpc2": [[262, 3, 1, "", "cost_table2gencost"], [262, 4, 1, "", "data_field"], [262, 4, 1, "", "default_export_data_table"], [262, 4, 1, "", "gen_cost_export"], [262, 4, 1, "", "gen_cost_import"], [262, 3, 1, "", "gencost2cost_table"], [262, 4, 1, "", "name"], [262, 2, 1, "", "pwl1"], [262, 4, 1, "", "start_cost_export"], [262, 4, 1, "", "start_cost_import"], [262, 4, 1, "", "table_var_map"]], "mp.dmce_legacy_dcline_mpc2": [[263, 4, 1, "", "data_field"], [263, 4, 1, "", "dcline_cost_export"], [263, 4, 1, "", "dcline_cost_import"], [263, 4, 1, "", "default_export_data_table"], [263, 4, 1, "", "name"], [263, 4, 1, "", "table_var_map"]], "mp.dmce_line3p_mpc2": [[264, 4, 1, "", "create_line_construction_table"], [264, 4, 1, "", "data_field"], [264, 4, 1, "", "import"], [264, 4, 1, "", "name"], [264, 4, 1, "", "table_var_map"]], "mp.dmce_load3p_mpc2": [[265, 2, 1, "", "bus"], [265, 4, 1, "", "data_field"], [265, 4, 1, "", "name"], [265, 4, 1, "", "table_var_map"]], "mp.dmce_load_mpc2": [[266, 2, 1, "", "bus"], [266, 4, 1, "", "data_field"], [266, 4, 1, "", "get_export_size"], [266, 4, 1, "", "get_import_size"], [266, 4, 1, "", "name"], [266, 4, 1, "", "scale_factor_fcn"], [266, 4, 1, "", "sys_wide_zip_loads"], [266, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_gen_mpc2": [[267, 4, 1, "", "data_field"], [267, 4, 1, "", "data_subs"], [267, 4, 1, "", "get_export_size"], [267, 4, 1, "", "get_import_size"], [267, 4, 1, "", "import"], [267, 4, 1, "", "import_cost"], [267, 4, 1, "", "import_qty"], [267, 4, 1, "", "import_ramp"], [267, 4, 1, "", "name"], [267, 4, 1, "", "table_var_map"]], "mp.dmce_reserve_zone_mpc2": [[268, 4, 1, "", "data_field"], [268, 4, 1, "", "data_subs"], [268, 4, 1, "", "import_req"], [268, 4, 1, "", "import_zones"], [268, 4, 1, "", "name"], [268, 4, 1, "", "table_var_map"]], "mp.dmce_shunt_mpc2": [[269, 2, 1, "", "bus"], [269, 4, 1, "", "data_field"], [269, 4, 1, "", "get_export_size"], [269, 4, 1, "", "get_import_size"], [269, 4, 1, "", "name"], [269, 4, 1, "", "table_var_map"]], "mp.dmce_xfmr3p_mpc2": [[270, 4, 1, "", "data_field"], [270, 4, 1, "", "name"], [270, 4, 1, "", "table_var_map"]], "mp.dme_branch": [[271, 2, 1, "", "b_fr"], [271, 2, 1, "", "b_to"], [271, 4, 1, "", "build_params"], [271, 4, 1, "", "cxn_idx_prop"], [271, 4, 1, "", "cxn_type"], [271, 4, 1, "", "export_vars"], [271, 4, 1, "", "export_vars_offline_val"], [271, 2, 1, "", "fbus"], [271, 2, 1, "", "g_fr"], [271, 2, 1, "", "g_to"], [271, 4, 1, "", "initialize"], [271, 4, 1, "", "label"], [271, 4, 1, "", "labels"], [271, 2, 1, "", "loss_tol"], [271, 4, 1, "", "main_table_var_names"], [271, 4, 1, "", "name"], [271, 4, 1, "", "pp_data_cnt"], [271, 4, 1, "", "pp_data_row_det"], [271, 4, 1, "", "pp_data_sum"], [271, 4, 1, "", "pp_get_footers_det"], [271, 4, 1, "", "pp_get_headers_det"], [271, 4, 1, "", "pp_have_section_det"], [271, 4, 1, "", "pp_have_section_sum"], [271, 2, 1, "", "r"], [271, 2, 1, "", "rate_a"], [271, 2, 1, "", "ta"], [271, 2, 1, "", "tbus"], [271, 2, 1, "", "tm"], [271, 4, 1, "", "update_status"], [271, 2, 1, "", "x"]], "mp.dme_branch_opf": [[272, 4, 1, "", "export_vars"], [272, 4, 1, "", "export_vars_offline_val"], [272, 4, 1, "", "main_table_var_names"], [272, 4, 1, "", "pp_binding_rows_lim"], [272, 4, 1, "", "pp_data_row_lim"], [272, 4, 1, "", "pp_get_headers_lim"], [272, 4, 1, "", "pp_get_title_lim"], [272, 4, 1, "", "pp_have_section_lim"], [272, 4, 1, "", "pretty_print"]], "mp.dme_bus": [[273, 4, 1, "", "build_params"], [273, 4, 1, "", "export_vars"], [273, 4, 1, "", "export_vars_offline_val"], [273, 4, 1, "", "init_status"], [273, 4, 1, "", "label"], [273, 4, 1, "", "labels"], [273, 4, 1, "", "main_table_var_names"], [273, 4, 1, "", "name"], [273, 4, 1, "", "pp_data_cnt"], [273, 4, 1, "", "pp_data_ext"], [273, 4, 1, "", "pp_data_row_det"], [273, 4, 1, "", "pp_get_headers_det"], [273, 4, 1, "", "pp_have_section_det"], [273, 4, 1, "", "pp_have_section_ext"], [273, 4, 1, "", "set_bus_type_pq"], [273, 4, 1, "", "set_bus_type_pv"], [273, 4, 1, "", "set_bus_type_ref"], [273, 2, 1, "", "type"], [273, 4, 1, "", "update_status"], [273, 2, 1, "", "va_start"], [273, 2, 1, "", "vm_control"], [273, 2, 1, "", "vm_lb"], [273, 2, 1, "", "vm_start"], [273, 2, 1, "", "vm_ub"]], "mp.dme_bus3p": [[274, 4, 1, "", "build_params"], [274, 4, 1, "", "init_status"], [274, 4, 1, "", "label"], [274, 4, 1, "", "labels"], [274, 4, 1, "", "main_table_var_names"], [274, 4, 1, "", "name"], [274, 4, 1, "", "pp_data_row_det"], [274, 4, 1, "", "pp_get_headers_det"], [274, 4, 1, "", "pp_have_section_det"], [274, 2, 1, "", "type"], [274, 4, 1, "", "update_status"], [274, 2, 1, "", "va1_start"], [274, 2, 1, "", "va2_start"], [274, 2, 1, "", "va3_start"], [274, 2, 1, "", "vm1_start"], [274, 2, 1, "", "vm2_start"], [274, 2, 1, "", "vm3_start"], [274, 2, 1, "", "vm_control"]], "mp.dme_bus_opf": [[276, 4, 1, "", "export_vars"], [276, 4, 1, "", "export_vars_offline_val"], [276, 4, 1, "", "main_table_var_names"], [276, 4, 1, "", "pp_binding_rows_lim"], [276, 4, 1, "", "pp_data_ext"], [276, 4, 1, "", "pp_data_row_det"], [276, 4, 1, "", "pp_data_row_lim"], [276, 4, 1, "", "pp_get_headers_det"], [276, 4, 1, "", "pp_get_headers_lim"], [276, 4, 1, "", "pp_have_section_lim"]], "mp.dme_buslink": [[277, 4, 1, "", "build_params"], [277, 2, 1, "", "bus"], [277, 2, 1, "", "bus3p"], [277, 4, 1, "", "cxn_idx_prop"], [277, 4, 1, "", "cxn_type"], [277, 4, 1, "", "initialize"], [277, 4, 1, "", "label"], [277, 4, 1, "", "labels"], [277, 4, 1, "", "main_table_var_names"], [277, 4, 1, "", "name"], [277, 2, 1, "", "pg1_start"], [277, 2, 1, "", "pg2_start"], [277, 2, 1, "", "pg3_start"], [277, 4, 1, "", "pp_data_row_det"], [277, 4, 1, "", "pp_get_headers_det"], [277, 4, 1, "", "pp_have_section_det"], [277, 2, 1, "", "qg1_start"], [277, 2, 1, "", "qg2_start"], [277, 2, 1, "", "qg3_start"], [277, 4, 1, "", "update_status"]], "mp.dme_gen": [[279, 4, 1, "", "apply_vm_setpoint"], [279, 4, 1, "", "build_params"], [279, 2, 1, "", "bus"], [279, 2, 1, "", "bus_on"], [279, 4, 1, "", "cxn_idx_prop"], [279, 4, 1, "", "cxn_type"], [279, 4, 1, "", "export_vars"], [279, 4, 1, "", "export_vars_offline_val"], [279, 4, 1, "", "have_cost"], [279, 4, 1, "", "initialize"], [279, 4, 1, "", "isload"], [279, 4, 1, "", "label"], [279, 4, 1, "", "labels"], [279, 4, 1, "", "main_table_var_names"], [279, 4, 1, "", "name"], [279, 2, 1, "", "pg_lb"], [279, 2, 1, "", "pg_start"], [279, 2, 1, "", "pg_ub"], [279, 4, 1, "", "pp_data_row_det"], [279, 4, 1, "", "pp_data_sum"], [279, 4, 1, "", "pp_get_footers_det"], [279, 4, 1, "", "pp_get_headers_det"], [279, 4, 1, "", "pp_have_section_det"], [279, 4, 1, "", "pp_have_section_sum"], [279, 2, 1, "", "qg_lb"], [279, 2, 1, "", "qg_start"], [279, 2, 1, "", "qg_ub"], [279, 4, 1, "", "update_status"], [279, 4, 1, "", "violated_q_lims"], [279, 2, 1, "", "vm_setpoint"]], "mp.dme_gen3p": [[280, 4, 1, "", "apply_vm_setpoint"], [280, 4, 1, "", "build_params"], [280, 2, 1, "", "bus"], [280, 2, 1, "", "bus_on"], [280, 4, 1, "", "cxn_idx_prop"], [280, 4, 1, "", "cxn_type"], [280, 4, 1, "", "initialize"], [280, 4, 1, "", "label"], [280, 4, 1, "", "labels"], [280, 4, 1, "", "main_table_var_names"], [280, 4, 1, "", "name"], [280, 2, 1, "", "pg1_start"], [280, 2, 1, "", "pg2_start"], [280, 2, 1, "", "pg3_start"], [280, 4, 1, "", "pp_data_row_det"], [280, 4, 1, "", "pp_data_sum"], [280, 4, 1, "", "pp_get_headers_det"], [280, 4, 1, "", "pp_have_section_det"], [280, 4, 1, "", "pp_have_section_sum"], [280, 2, 1, "", "qg1_start"], [280, 2, 1, "", "qg2_start"], [280, 2, 1, "", "qg3_start"], [280, 4, 1, "", "update_status"], [280, 2, 1, "", "vm1_setpoint"], [280, 2, 1, "", "vm2_setpoint"], [280, 2, 1, "", "vm3_setpoint"]], "mp.dme_gen_opf": [[282, 4, 1, "", "build_cost_params"], [282, 4, 1, "", "export_vars"], [282, 4, 1, "", "export_vars_offline_val"], [282, 4, 1, "", "have_cost"], [282, 4, 1, "", "main_table_var_names"], [282, 4, 1, "", "max_pwl_gencost"], [282, 4, 1, "", "pp_binding_rows_lim"], [282, 4, 1, "", "pp_data_row_lim"], [282, 4, 1, "", "pp_get_headers_lim"], [282, 4, 1, "", "pp_have_section_lim"], [282, 4, 1, "", "pretty_print"]], "mp.dme_legacy_dcline": [[283, 4, 1, "", "apply_vm_setpoints"], [283, 4, 1, "", "build_params"], [283, 4, 1, "", "cxn_idx_prop"], [283, 4, 1, "", "cxn_type"], [283, 4, 1, "", "export_vars"], [283, 4, 1, "", "export_vars_offline_val"], [283, 2, 1, "", "fbus"], [283, 2, 1, "", "fbus_on"], [283, 4, 1, "", "have_cost"], [283, 4, 1, "", "initialize"], [283, 4, 1, "", "label"], [283, 4, 1, "", "labels"], [283, 2, 1, "", "loss0"], [283, 2, 1, "", "loss1"], [283, 4, 1, "", "main_table_var_names"], [283, 4, 1, "", "name"], [283, 2, 1, "", "p_fr_lb"], [283, 2, 1, "", "p_fr_start"], [283, 2, 1, "", "p_fr_ub"], [283, 2, 1, "", "p_to_start"], [283, 4, 1, "", "pp_data_row_det"], [283, 4, 1, "", "pp_data_sum"], [283, 4, 1, "", "pp_get_headers_det"], [283, 4, 1, "", "pp_have_section_det"], [283, 4, 1, "", "pp_have_section_sum"], [283, 2, 1, "", "q_fr_lb"], [283, 2, 1, "", "q_fr_start"], [283, 2, 1, "", "q_fr_ub"], [283, 2, 1, "", "q_to_lb"], [283, 2, 1, "", "q_to_start"], [283, 2, 1, "", "q_to_ub"], [283, 2, 1, "", "tbus"], [283, 2, 1, "", "tbus_on"], [283, 4, 1, "", "update_status"], [283, 2, 1, "", "vm_setpoint_fr"], [283, 2, 1, "", "vm_setpoint_to"]], "mp.dme_legacy_dcline_opf": [[284, 4, 1, "", "build_cost_params"], [284, 4, 1, "", "export_vars"], [284, 4, 1, "", "export_vars_offline_val"], [284, 4, 1, "", "have_cost"], [284, 4, 1, "", "main_table_var_names"], [284, 4, 1, "", "pp_binding_rows_lim"], [284, 4, 1, "", "pp_data_row_lim"], [284, 4, 1, "", "pp_get_headers_lim"], [284, 4, 1, "", "pp_have_section_lim"], [284, 4, 1, "", "pretty_print"]], "mp.dme_line3p": [[285, 4, 1, "", "build_params"], [285, 4, 1, "", "create_line_construction_table"], [285, 4, 1, "", "cxn_idx_prop"], [285, 4, 1, "", "cxn_type"], [285, 2, 1, "", "fbus"], [285, 2, 1, "", "freq"], [285, 4, 1, "", "initialize"], [285, 4, 1, "", "label"], [285, 4, 1, "", "labels"], [285, 2, 1, "", "lc"], [285, 2, 1, "", "lc_tab"], [285, 4, 1, "", "lc_table_var_names"], [285, 2, 1, "", "lc_y_idx"], [285, 2, 1, "", "len"], [285, 4, 1, "", "main_table_var_names"], [285, 4, 1, "", "name"], [285, 4, 1, "", "pp_data_row_det"], [285, 4, 1, "", "pp_data_sum"], [285, 4, 1, "", "pp_get_headers_det"], [285, 4, 1, "", "pp_have_section_det"], [285, 4, 1, "", "pp_have_section_sum"], [285, 4, 1, "", "pretty_print"], [285, 4, 1, "", "symmat2vec"], [285, 2, 1, "", "tbus"], [285, 4, 1, "", "update_status"], [285, 4, 1, "", "vec2symmat"], [285, 2, 1, "", "yc"], [285, 2, 1, "", "ys"]], "mp.dme_load": [[287, 4, 1, "", "build_params"], [287, 2, 1, "", "bus"], [287, 4, 1, "", "cxn_idx_prop"], [287, 4, 1, "", "cxn_type"], [287, 4, 1, "", "initialize"], [287, 4, 1, "", "label"], [287, 4, 1, "", "labels"], [287, 4, 1, "", "main_table_var_names"], [287, 4, 1, "", "name"], [287, 2, 1, "", "pd"], [287, 2, 1, "", "pd_i"], [287, 2, 1, "", "pd_z"], [287, 4, 1, "", "pp_data_row_det"], [287, 4, 1, "", "pp_data_sum"], [287, 4, 1, "", "pp_get_footers_det"], [287, 4, 1, "", "pp_get_headers_det"], [287, 4, 1, "", "pp_have_section_det"], [287, 4, 1, "", "pp_have_section_sum"], [287, 2, 1, "", "qd"], [287, 2, 1, "", "qd_i"], [287, 2, 1, "", "qd_z"], [287, 4, 1, "", "update_status"]], "mp.dme_load3p": [[288, 4, 1, "", "build_params"], [288, 2, 1, "", "bus"], [288, 4, 1, "", "cxn_idx_prop"], [288, 4, 1, "", "cxn_type"], [288, 4, 1, "", "initialize"], [288, 4, 1, "", "label"], [288, 4, 1, "", "labels"], [288, 4, 1, "", "main_table_var_names"], [288, 4, 1, "", "name"], [288, 2, 1, "", "pd1"], [288, 2, 1, "", "pd2"], [288, 2, 1, "", "pd3"], [288, 2, 1, "", "pf1"], [288, 2, 1, "", "pf2"], [288, 2, 1, "", "pf3"], [288, 4, 1, "", "pp_data_row_det"], [288, 4, 1, "", "pp_data_sum"], [288, 4, 1, "", "pp_get_headers_det"], [288, 4, 1, "", "pp_have_section_det"], [288, 4, 1, "", "pp_have_section_sum"], [288, 4, 1, "", "update_status"]], "mp.dme_load_cpf": [[290, 4, 1, "", "export_vars"], [290, 4, 1, "", "parameterized"]], "mp.dme_reserve_gen": [[292, 4, 1, "", "build_params"], [292, 4, 1, "", "export_vars"], [292, 4, 1, "", "export_vars_offline_val"], [292, 2, 1, "", "gen"], [292, 4, 1, "", "label"], [292, 4, 1, "", "labels"], [292, 4, 1, "", "main_table_var_names"], [292, 4, 1, "", "name"], [292, 4, 1, "", "pp_binding_rows_lim"], [292, 4, 1, "", "pp_data_row_det"], [292, 4, 1, "", "pp_data_row_lim"], [292, 4, 1, "", "pp_data_sum"], [292, 4, 1, "", "pp_get_footers_det"], [292, 4, 1, "", "pp_get_headers_det"], [292, 4, 1, "", "pp_get_headers_lim"], [292, 4, 1, "", "pp_have_section_det"], [292, 4, 1, "", "pp_have_section_lim"], [292, 4, 1, "", "pp_have_section_sum"], [292, 2, 1, "", "r_ub"], [292, 4, 1, "", "update_status"]], "mp.dme_reserve_zone": [[293, 4, 1, "", "build_params"], [293, 4, 1, "", "export_vars"], [293, 4, 1, "", "export_vars_offline_val"], [293, 4, 1, "", "label"], [293, 4, 1, "", "labels"], [293, 4, 1, "", "main_table_var_names"], [293, 4, 1, "", "name"], [293, 4, 1, "", "pp_data_row_det"], [293, 4, 1, "", "pp_get_headers_det"], [293, 4, 1, "", "pp_have_section_det"], [293, 2, 1, "", "req"], [293, 4, 1, "", "update_status"], [293, 2, 1, "", "zones"]], "mp.dme_shared_opf": [[294, 2, 1, "", "ctol"], [294, 4, 1, "", "pp_binding_rows_lim"], [294, 4, 1, "", "pp_data_lim"], [294, 4, 1, "", "pp_data_other"], [294, 4, 1, "", "pp_data_row_lim"], [294, 4, 1, "", "pp_get_footers_lim"], [294, 4, 1, "", "pp_get_footers_other"], [294, 4, 1, "", "pp_get_headers_lim"], [294, 4, 1, "", "pp_get_headers_other"], [294, 4, 1, "", "pp_get_title_lim"], [294, 4, 1, "", "pp_have_section_lim"], [294, 4, 1, "", "pp_have_section_other"], [294, 4, 1, "", "pp_rows_lim"], [294, 4, 1, "", "pp_rows_other"], [294, 4, 1, "", "pp_set_tols_lim"], [294, 2, 1, "", "ptol"]], "mp.dme_shunt": [[295, 2, 1, "", "bs"], [295, 4, 1, "", "build_params"], [295, 2, 1, "", "bus"], [295, 4, 1, "", "cxn_idx_prop"], [295, 4, 1, "", "cxn_type"], [295, 2, 1, "", "gs"], [295, 4, 1, "", "initialize"], [295, 4, 1, "", "label"], [295, 4, 1, "", "labels"], [295, 4, 1, "", "main_table_var_names"], [295, 4, 1, "", "name"], [295, 4, 1, "", "pp_data_row_det"], [295, 4, 1, "", "pp_data_sum"], [295, 4, 1, "", "pp_get_footers_det"], [295, 4, 1, "", "pp_get_headers_det"], [295, 4, 1, "", "pp_have_section_det"], [295, 4, 1, "", "pp_have_section_sum"], [295, 4, 1, "", "update_status"]], "mp.dme_shunt_cpf": [[296, 4, 1, "", "export_vars"], [296, 4, 1, "", "parameterized"]], "mp.dme_xfmr3p": [[298, 4, 1, "", "build_params"], [298, 4, 1, "", "cxn_idx_prop"], [298, 4, 1, "", "cxn_type"], [298, 2, 1, "", "fbus"], [298, 4, 1, "", "initialize"], [298, 4, 1, "", "label"], [298, 4, 1, "", "labels"], [298, 4, 1, "", "main_table_var_names"], [298, 4, 1, "", "name"], [298, 4, 1, "", "pp_data_row_det"], [298, 4, 1, "", "pp_data_sum"], [298, 4, 1, "", "pp_get_headers_det"], [298, 4, 1, "", "pp_have_section_det"], [298, 4, 1, "", "pp_have_section_sum"], [298, 4, 1, "", "pretty_print"], [298, 2, 1, "", "r"], [298, 2, 1, "", "tbus"], [298, 4, 1, "", "update_status"], [298, 2, 1, "", "x"]], "mp.element_container": [[300, 2, 1, "", "element_classes"], [300, 2, 1, "", "elements"], [300, 4, 1, "", "modify_element_classes"]], "mp.extension": [[301, 4, 1, "", "data_model_class"], [301, 4, 1, "", "dm_converter_class"], [301, 4, 1, "", "dm_element_classes"], [301, 4, 1, "", "dmc_element_classes"], [301, 4, 1, "", "math_model_class"], [301, 4, 1, "", "mm_element_classes"], [301, 4, 1, "", "network_model_class"], [301, 4, 1, "", "nm_element_classes"], [301, 4, 1, "", "task_class"]], "mp.form": [[302, 4, 1, "", "find_form_class"], [302, 4, 1, "", "form_name"], [302, 4, 1, "", "form_tag"], [302, 4, 1, "", "get_params"], [302, 4, 1, "", "model_params"], [302, 4, 1, "", "model_vvars"], [302, 4, 1, "", "model_zvars"]], "mp.form_ac": [[303, 2, 1, "", "L"], [303, 2, 1, "", "M"], [303, 2, 1, "", "N"], [303, 2, 1, "", "Y"], [303, 4, 1, "", "aux_data_va_vm"], [303, 2, 1, "", "i"], [303, 2, 1, "", "inln"], [303, 2, 1, "", "inln_hess"], [303, 4, 1, "", "model_params"], [303, 4, 1, "", "model_zvars"], [303, 2, 1, "", "param_ncols"], [303, 4, 1, "", "port_active_power2_lim_fcn"], [303, 4, 1, "", "port_active_power2_lim_hess"], [303, 4, 1, "", "port_active_power_lim_fcn"], [303, 4, 1, "", "port_active_power_lim_hess"], [303, 4, 1, "", "port_apparent_power_lim_fcn"], [303, 4, 1, "", "port_apparent_power_lim_hess"], [303, 4, 1, "", "port_current_lim_fcn"], [303, 4, 1, "", "port_current_lim_hess"], [303, 4, 1, "", "port_inj_current"], [303, 4, 1, "", "port_inj_current_hess"], [303, 4, 1, "", "port_inj_current_hess_v"], [303, 4, 1, "", "port_inj_current_hess_vz"], [303, 4, 1, "", "port_inj_current_jac"], [303, 4, 1, "", "port_inj_power"], [303, 4, 1, "", "port_inj_power_hess"], [303, 4, 1, "", "port_inj_power_hess_v"], [303, 4, 1, "", "port_inj_power_hess_vz"], [303, 4, 1, "", "port_inj_power_jac"], [303, 2, 1, "", "s"], [303, 2, 1, "", "snln"], [303, 2, 1, "", "snln_hess"]], "mp.form_acc": [[304, 4, 1, "", "aux_data_va_vm"], [304, 4, 1, "", "form_name"], [304, 4, 1, "", "form_tag"], [304, 4, 1, "", "model_vvars"], [304, 4, 1, "", "port_inj_current_hess_v"], [304, 4, 1, "", "port_inj_current_hess_vz"], [304, 4, 1, "", "port_inj_current_jac"], [304, 4, 1, "", "port_inj_power_hess_v"], [304, 4, 1, "", "port_inj_power_hess_vz"], [304, 4, 1, "", "port_inj_power_jac"], [304, 4, 1, "", "va_fcn"], [304, 4, 1, "", "va_hess"], [304, 4, 1, "", "vm2_fcn"], [304, 4, 1, "", "vm2_hess"]], "mp.form_acp": [[305, 4, 1, "", "aux_data_va_vm"], [305, 4, 1, "", "form_name"], [305, 4, 1, "", "form_tag"], [305, 4, 1, "", "model_vvars"], [305, 4, 1, "", "port_inj_current_hess_v"], [305, 4, 1, "", "port_inj_current_hess_vz"], [305, 4, 1, "", "port_inj_current_jac"], [305, 4, 1, "", "port_inj_power_hess_v"], [305, 4, 1, "", "port_inj_power_hess_vz"], [305, 4, 1, "", "port_inj_power_jac"]], "mp.form_dc": [[306, 2, 1, "", "B"], [306, 2, 1, "", "K"], [306, 4, 1, "", "form_name"], [306, 4, 1, "", "form_tag"], [306, 4, 1, "", "model_params"], [306, 4, 1, "", "model_vvars"], [306, 4, 1, "", "model_zvars"], [306, 2, 1, "", "p"], [306, 2, 1, "", "param_ncols"], [306, 4, 1, "", "port_inj_power"]], "mp.mapped_array": [[307, 4, 1, "", "add_elements"], [307, 4, 1, "", "add_names"], [307, 4, 1, "", "copy"], [307, 4, 1, "", "delete_elements"], [307, 4, 1, "", "display"], [307, 4, 1, "", "has_name"], [307, 4, 1, "", "length"], [307, 4, 1, "", "mapped_array"], [307, 4, 1, "", "name2idx"], [307, 4, 1, "", "size"], [307, 4, 1, "", "subsasgn"], [307, 4, 1, "", "subsref"]], "mp.math_model": [[308, 4, 1, "", "add_aux_data"], [308, 4, 1, "", "add_constraints"], [308, 4, 1, "", "add_costs"], [308, 4, 1, "", "add_node_balance_constraints"], [308, 4, 1, "", "add_system_constraints"], [308, 4, 1, "", "add_system_costs"], [308, 4, 1, "", "add_system_vars"], [308, 4, 1, "", "add_vars"], [308, 2, 1, "", "aux_data"], [308, 4, 1, "", "build"], [308, 4, 1, "", "build_base_aux_data"], [308, 4, 1, "", "data_model_update"], [308, 4, 1, "", "display"], [308, 4, 1, "", "form_name"], [308, 4, 1, "", "form_tag"], [308, 4, 1, "", "network_model_x_soln"], [308, 4, 1, "", "solve_opts"], [308, 4, 1, "", "task_name"], [308, 4, 1, "", "task_tag"], [308, 4, 1, "", "update_nm_vars"]], "mp.math_model_cpf_acc": [[309, 4, 1, "", "math_model_cpf_acc"]], "mp.math_model_cpf_acci": [[310, 4, 1, "", "add_node_balance_constraints"], [310, 4, 1, "", "form_name"], [310, 4, 1, "", "form_tag"]], "mp.math_model_cpf_accs": [[311, 4, 1, "", "add_node_balance_constraints"], [311, 4, 1, "", "form_name"], [311, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acp": [[312, 4, 1, "", "callback_vlim"], [312, 4, 1, "", "event_vlim"], [312, 4, 1, "", "math_model_cpf_acp"]], "mp.math_model_cpf_acpi": [[313, 4, 1, "", "add_node_balance_constraints"], [313, 4, 1, "", "form_name"], [313, 4, 1, "", "form_tag"]], "mp.math_model_cpf_acps": [[314, 4, 1, "", "add_node_balance_constraints"], [314, 4, 1, "", "expand_z_warmstart"], [314, 4, 1, "", "form_name"], [314, 4, 1, "", "form_tag"], [314, 4, 1, "", "solve_opts_warmstart"]], "mp.math_model_opf": [[315, 4, 1, "", "add_system_vars"], [315, 4, 1, "", "build_aux_data"], [315, 4, 1, "", "interior_va"], [315, 4, 1, "", "interior_x0"], [315, 4, 1, "", "task_name"], [315, 4, 1, "", "task_tag"]], "mp.math_model_opf_ac": [[316, 4, 1, "", "nodal_current_balance_fcn"], [316, 4, 1, "", "nodal_current_balance_hess"], [316, 4, 1, "", "nodal_power_balance_fcn"], [316, 4, 1, "", "nodal_power_balance_hess"], [316, 4, 1, "", "solve_opts"]], "mp.math_model_opf_acc": [[317, 4, 1, "", "convert_x_m2n"], [317, 4, 1, "", "interior_va"], [317, 4, 1, "", "math_model_opf_acc"]], "mp.math_model_opf_acci": [[318, 4, 1, "", "add_node_balance_constraints"], [318, 4, 1, "", "form_name"], [318, 4, 1, "", "form_tag"], [318, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acci_legacy": [[319, 4, 1, "", "add_named_set"], [319, 4, 1, "", "add_system_constraints"], [319, 4, 1, "", "add_system_costs"], [319, 4, 1, "", "add_vars"], [319, 4, 1, "", "build"], [319, 4, 1, "", "def_set_types"], [319, 4, 1, "", "init_set_types"], [319, 4, 1, "", "legacy_user_var_names"], [319, 4, 1, "", "math_model_opf_acci_legacy"]], "mp.math_model_opf_accs": [[320, 4, 1, "", "add_node_balance_constraints"], [320, 4, 1, "", "form_name"], [320, 4, 1, "", "form_tag"], [320, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_accs_legacy": [[321, 4, 1, "", "add_named_set"], [321, 4, 1, "", "add_system_constraints"], [321, 4, 1, "", "add_system_costs"], [321, 4, 1, "", "add_vars"], [321, 4, 1, "", "build"], [321, 4, 1, "", "def_set_types"], [321, 4, 1, "", "init_set_types"], [321, 4, 1, "", "legacy_user_var_names"], [321, 4, 1, "", "math_model_opf_accs_legacy"]], "mp.math_model_opf_acp": [[322, 4, 1, "", "convert_x_m2n"], [322, 4, 1, "", "math_model_opf_acp"]], "mp.math_model_opf_acpi": [[323, 4, 1, "", "add_node_balance_constraints"], [323, 4, 1, "", "form_name"], [323, 4, 1, "", "form_tag"], [323, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acpi_legacy": [[324, 4, 1, "", "add_named_set"], [324, 4, 1, "", "add_system_constraints"], [324, 4, 1, "", "add_system_costs"], [324, 4, 1, "", "add_vars"], [324, 4, 1, "", "build"], [324, 4, 1, "", "def_set_types"], [324, 4, 1, "", "init_set_types"], [324, 4, 1, "", "legacy_user_var_names"], [324, 4, 1, "", "math_model_opf_acpi_legacy"]], "mp.math_model_opf_acps": [[325, 4, 1, "", "add_node_balance_constraints"], [325, 4, 1, "", "form_name"], [325, 4, 1, "", "form_tag"], [325, 4, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acps_legacy": [[326, 4, 1, "", "add_named_set"], [326, 4, 1, "", "add_system_constraints"], [326, 4, 1, "", "add_system_costs"], [326, 4, 1, "", "add_vars"], [326, 4, 1, "", "build"], [326, 4, 1, "", "def_set_types"], [326, 4, 1, "", "init_set_types"], [326, 4, 1, "", "legacy_user_var_names"], [326, 4, 1, "", "math_model_opf_acps_legacy"]], "mp.math_model_opf_dc": [[327, 4, 1, "", "add_node_balance_constraints"], [327, 4, 1, "", "convert_x_m2n"], [327, 4, 1, "", "form_name"], [327, 4, 1, "", "form_tag"], [327, 4, 1, "", "math_model_opf_dc"], [327, 4, 1, "", "solve_opts"]], "mp.math_model_opf_dc_legacy": [[328, 4, 1, "", "add_named_set"], [328, 4, 1, "", "add_system_constraints"], [328, 4, 1, "", "add_system_costs"], [328, 4, 1, "", "add_vars"], [328, 4, 1, "", "build"], [328, 4, 1, "", "def_set_types"], [328, 4, 1, "", "init_set_types"], [328, 4, 1, "", "legacy_user_var_names"], [328, 4, 1, "", "math_model_opf_dc_legacy"]], "mp.math_model_pf": [[329, 4, 1, "", "add_costs"], [329, 4, 1, "", "add_system_vars"], [329, 4, 1, "", "solve_opts"], [329, 4, 1, "", "task_name"], [329, 4, 1, "", "task_tag"]], "mp.math_model_pf_ac": [[330, 4, 1, "", "math_model_pf_ac"]], "mp.math_model_pf_acci": [[331, 4, 1, "", "add_node_balance_constraints"], [331, 4, 1, "", "form_name"], [331, 4, 1, "", "form_tag"]], "mp.math_model_pf_accs": [[332, 4, 1, "", "add_node_balance_constraints"], [332, 4, 1, "", "form_name"], [332, 4, 1, "", "form_tag"]], "mp.math_model_pf_acpi": [[333, 4, 1, "", "add_node_balance_constraints"], [333, 4, 1, "", "form_name"], [333, 4, 1, "", "form_tag"]], "mp.math_model_pf_acps": [[334, 4, 1, "", "add_node_balance_constraints"], [334, 4, 1, "", "fd_jac_approx"], [334, 4, 1, "", "fdpf_B_matrix_models"], [334, 4, 1, "", "form_name"], [334, 4, 1, "", "form_tag"], [334, 4, 1, "", "gs_x_update"], [334, 4, 1, "", "zg_x_update"]], "mp.math_model_pf_dc": [[335, 4, 1, "", "add_node_balance_constraints"], [335, 4, 1, "", "form_name"], [335, 4, 1, "", "form_tag"], [335, 4, 1, "", "math_model_pf_dc"], [335, 4, 1, "", "solve_opts"]], "mp.mm_element": [[336, 4, 1, "", "add_constraints"], [336, 4, 1, "", "add_costs"], [336, 4, 1, "", "add_vars"], [336, 4, 1, "", "data_model_element"], [336, 4, 1, "", "data_model_update"], [336, 4, 1, "", "data_model_update_off"], [336, 4, 1, "", "data_model_update_on"], [336, 4, 1, "", "name"], [336, 4, 1, "", "network_model_element"]], "mp.mm_shared_opf_legacy": [[337, 4, 1, "", "add_legacy_cost"], [337, 4, 1, "", "add_legacy_user_constraints"], [337, 4, 1, "", "add_legacy_user_constraints_ac"], [337, 4, 1, "", "add_legacy_user_costs"], [337, 4, 1, "", "add_legacy_user_vars"], [337, 4, 1, "", "build_legacy"], [337, 4, 1, "", "eval_legacy_cost"], [337, 4, 1, "", "get_mpc"], [337, 4, 1, "", "init_set_types_legacy"], [337, 4, 1, "", "mod_set_types_legacy"], [337, 4, 1, "", "params_legacy_cost"]], "mp.mm_shared_pfcpf": [[338, 4, 1, "", "build_aux_data"]], "mp.mm_shared_pfcpf_ac": [[339, 4, 1, "", "add_system_varset_pf"], [339, 4, 1, "", "update_z"]], "mp.mm_shared_pfcpf_ac_i": [[340, 4, 1, "", "build_aux_data_i"]], "mp.mm_shared_pfcpf_acc": [[341, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acci": [[342, 4, 1, "", "add_system_vars_pf"], [342, 4, 1, "", "build_aux_data"], [342, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_accs": [[343, 4, 1, "", "add_system_vars_pf"], [343, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acp": [[344, 4, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acpi": [[345, 4, 1, "", "add_system_vars_pf"], [345, 4, 1, "", "build_aux_data"], [345, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acps": [[346, 4, 1, "", "add_system_vars_pf"], [346, 4, 1, "", "build_aux_data"], [346, 4, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_dc": [[347, 4, 1, "", "add_system_vars_pf"], [347, 4, 1, "", "build_aux_data"], [347, 4, 1, "", "convert_x_m2n"], [347, 4, 1, "", "update_z"]], "mp.mme_branch": [[348, 4, 1, "", "name"]], "mp.mme_branch_opf": [[349, 4, 1, "", "ang_diff_params"], [349, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_ac": [[350, 4, 1, "", "add_constraints"], [350, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_opf_acc": [[351, 4, 1, "", "add_constraints"], [351, 4, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_acp": [[352, 4, 1, "", "add_constraints"]], "mp.mme_branch_opf_dc": [[353, 4, 1, "", "add_constraints"], [353, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_ac": [[354, 4, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_dc": [[355, 4, 1, "", "data_model_update_on"]], "mp.mme_bus": [[356, 4, 1, "", "name"]], "mp.mme_bus3p": [[357, 4, 1, "", "data_model_update_on"], [357, 4, 1, "", "name"]], "mp.mme_bus3p_opf_acc": [[358, 4, 1, "", "interior_x0"]], "mp.mme_bus3p_opf_acp": [[359, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_ac": [[360, 4, 1, "", "interior_vm"]], "mp.mme_bus_opf_acc": [[361, 4, 1, "", "add_constraints"], [361, 4, 1, "", "data_model_update_on"], [361, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_acp": [[362, 4, 1, "", "data_model_update_on"], [362, 4, 1, "", "interior_x0"]], "mp.mme_bus_opf_dc": [[363, 4, 1, "", "data_model_update_on"], [363, 4, 1, "", "interior_x0"]], "mp.mme_bus_pf_ac": [[364, 4, 1, "", "data_model_update_on"]], "mp.mme_bus_pf_dc": [[365, 4, 1, "", "data_model_update_on"]], "mp.mme_buslink": [[366, 4, 1, "", "name"]], "mp.mme_buslink_opf": [[367, 4, 1, "", "interior_x0"]], "mp.mme_buslink_opf_acc": [[368, 4, 1, "", "add_constraints"], [368, 4, 1, "", "va_fcn"], [368, 4, 1, "", "va_hess"], [368, 4, 1, "", "vm2_fcn"], [368, 4, 1, "", "vm2_hess"]], "mp.mme_buslink_opf_acp": [[369, 4, 1, "", "add_constraints"]], "mp.mme_buslink_pf_ac": [[370, 4, 1, "", "add_constraints"], [370, 4, 1, "", "add_vars"], [370, 4, 1, "", "voltage_constraints"]], "mp.mme_buslink_pf_acc": [[371, 4, 1, "", "add_constraints"], [371, 4, 1, "", "pf_va_fcn"], [371, 4, 1, "", "pf_vm_fcn"]], "mp.mme_buslink_pf_acp": [[372, 4, 1, "", "add_constraints"]], "mp.mme_gen": [[373, 4, 1, "", "name"]], "mp.mme_gen3p": [[374, 4, 1, "", "data_model_update_on"], [374, 4, 1, "", "name"]], "mp.mme_gen3p_opf": [[375, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf": [[376, 4, 1, "", "add_costs"], [376, 4, 1, "", "add_vars"], [376, 2, 1, "", "cost"], [376, 4, 1, "", "interior_x0"]], "mp.mme_gen_opf_ac": [[377, 4, 1, "", "add_constraints"], [377, 4, 1, "", "add_costs"], [377, 4, 1, "", "build_cost_params"], [377, 4, 1, "", "data_model_update_on"], [377, 4, 1, "", "disp_load_constant_pf_constraint"], [377, 4, 1, "", "has_pq_cap"], [377, 4, 1, "", "pq_capability_constraint"]], "mp.mme_gen_opf_ac_oval": [[378, 4, 1, "", "add_constraints"], [378, 4, 1, "", "oval_pq_capability_fcn"], [378, 4, 1, "", "oval_pq_capability_hess"]], "mp.mme_gen_opf_dc": [[379, 4, 1, "", "add_constraints"], [379, 4, 1, "", "build_cost_params"], [379, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_ac": [[380, 4, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_dc": [[381, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline": [[382, 4, 1, "", "name"]], "mp.mme_legacy_dcline_opf": [[383, 4, 1, "", "add_constraints"], [383, 4, 1, "", "add_costs"], [383, 4, 1, "", "add_vars"], [383, 4, 1, "", "build_cost_params"], [383, 2, 1, "", "cost"], [383, 4, 1, "", "interior_x0"]], "mp.mme_legacy_dcline_opf_ac": [[384, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_opf_dc": [[385, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_ac": [[386, 4, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_dc": [[387, 4, 1, "", "data_model_update_on"]], "mp.mme_line3p": [[388, 4, 1, "", "data_model_update_on"], [388, 4, 1, "", "name"]], "mp.mme_line3p_opf": [[389, 4, 1, "", "interior_x0"]], "mp.mme_load": [[390, 4, 1, "", "name"]], "mp.mme_load_cpf": [[391, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_ac": [[392, 4, 1, "", "data_model_update_on"]], "mp.mme_load_pf_dc": [[393, 4, 1, "", "data_model_update_on"]], "mp.mme_reserve_gen": [[394, 4, 1, "", "add_constraints"], [394, 4, 1, "", "add_costs"], [394, 4, 1, "", "add_vars"], [394, 4, 1, "", "data_model_update_on"], [394, 4, 1, "", "name"]], "mp.mme_reserve_zone": [[395, 4, 1, "", "add_constraints"], [395, 4, 1, "", "data_model_update_on"], [395, 4, 1, "", "name"]], "mp.mme_shunt": [[396, 4, 1, "", "name"]], "mp.mme_shunt_cpf": [[397, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_ac": [[398, 4, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_dc": [[399, 4, 1, "", "data_model_update_on"]], "mp.mme_xfmr3p": [[400, 4, 1, "", "data_model_update_on"], [400, 4, 1, "", "name"]], "mp.mme_xfmr3p_opf": [[401, 4, 1, "", "interior_x0"]], "mp.net_model": [[402, 4, 1, "", "add_node"], [402, 4, 1, "", "add_nodes"], [402, 4, 1, "", "add_port"], [402, 4, 1, "", "add_state"], [402, 4, 1, "", "add_states"], [402, 4, 1, "", "add_var"], [402, 4, 1, "", "add_vvars"], [402, 4, 1, "", "add_zvars"], [402, 4, 1, "", "build"], [402, 4, 1, "", "build_params"], [402, 4, 1, "", "def_set_types"], [402, 4, 1, "", "display"], [402, 4, 1, "", "ensure_ref_node"], [402, 4, 1, "", "get_node_idx"], [402, 4, 1, "", "get_port_idx"], [402, 4, 1, "", "get_state_idx"], [402, 4, 1, "", "init_set_types"], [402, 4, 1, "", "name"], [402, 2, 1, "", "node"], [402, 4, 1, "", "node_types"], [402, 4, 1, "", "np"], [402, 2, 1, "", "nv"], [402, 4, 1, "", "nz"], [402, 4, 1, "", "params_var"], [402, 2, 1, "", "port"], [402, 4, 1, "", "set_node_type_pq"], [402, 4, 1, "", "set_node_type_pv"], [402, 4, 1, "", "set_node_type_ref"], [402, 4, 1, "", "set_type_idx_map"], [402, 4, 1, "", "set_type_label"], [402, 4, 1, "", "stack_matrix_params"], [402, 4, 1, "", "stack_vector_params"], [402, 2, 1, "", "state"], [402, 2, 1, "", "the_np"], [402, 2, 1, "", "the_nz"]], "mp.net_model_ac": [[403, 4, 1, "", "build_params"], [403, 4, 1, "", "def_set_types"], [403, 4, 1, "", "get_va"], [403, 4, 1, "", "nodal_complex_current_balance"], [403, 4, 1, "", "nodal_complex_current_balance_hess"], [403, 4, 1, "", "nodal_complex_power_balance"], [403, 4, 1, "", "nodal_complex_power_balance_hess"], [403, 4, 1, "", "port_inj_nln"], [403, 4, 1, "", "port_inj_nln_hess"], [403, 4, 1, "", "port_inj_soln"]], "mp.net_model_acc": [[404, 4, 1, "", "def_set_types"], [404, 4, 1, "", "initial_voltage_angle"], [404, 4, 1, "", "net_model_acc"]], "mp.net_model_acp": [[405, 4, 1, "", "def_set_types"], [405, 4, 1, "", "initial_voltage_angle"], [405, 4, 1, "", "net_model_acp"]], "mp.net_model_dc": [[406, 4, 1, "", "build_params"], [406, 4, 1, "", "def_set_types"], [406, 4, 1, "", "net_model_dc"], [406, 4, 1, "", "port_inj_soln"], [406, 2, 1, "", "va"], [406, 2, 1, "", "z"]], "mp.nm_element": [[407, 2, 1, "", "C"], [407, 2, 1, "", "D"], [407, 4, 1, "", "add_nodes"], [407, 4, 1, "", "add_states"], [407, 4, 1, "", "add_vvars"], [407, 4, 1, "", "add_zvars"], [407, 4, 1, "", "build_params"], [407, 4, 1, "", "count"], [407, 4, 1, "", "data_model_element"], [407, 4, 1, "", "display"], [407, 4, 1, "", "get_nv_"], [407, 4, 1, "", "incidence_matrix"], [407, 4, 1, "", "math_model_element"], [407, 4, 1, "", "name"], [407, 2, 1, "", "nk"], [407, 4, 1, "", "nn"], [407, 4, 1, "", "node_indices"], [407, 4, 1, "", "node_types"], [407, 4, 1, "", "np"], [407, 4, 1, "", "nz"], [407, 4, 1, "", "set_node_type_pq"], [407, 4, 1, "", "set_node_type_pv"], [407, 4, 1, "", "set_node_type_ref"], [407, 2, 1, "", "soln"], [407, 4, 1, "", "x2vz"]], "mp.nme_branch": [[408, 4, 1, "", "name"], [408, 4, 1, "", "np"]], "mp.nme_branch_ac": [[409, 4, 1, "", "build_params"]], "mp.nme_branch_acc": [[410, 4, 1, "", "ang_diff_fcn"], [410, 4, 1, "", "ang_diff_hess"]], "mp.nme_branch_dc": [[412, 4, 1, "", "build_params"]], "mp.nme_bus": [[413, 4, 1, "", "name"], [413, 4, 1, "", "nn"], [413, 4, 1, "", "node_types"], [413, 4, 1, "", "set_node_type_pq"], [413, 4, 1, "", "set_node_type_pv"], [413, 4, 1, "", "set_node_type_ref"]], "mp.nme_bus3p": [[414, 4, 1, "", "name"], [414, 4, 1, "", "nn"], [414, 4, 1, "", "node_types"]], "mp.nme_bus3p_acc": [[415, 4, 1, "", "add_vvars"]], "mp.nme_bus3p_acp": [[416, 4, 1, "", "add_vvars"]], "mp.nme_bus_acc": [[417, 4, 1, "", "add_vvars"]], "mp.nme_bus_acp": [[418, 4, 1, "", "add_vvars"]], "mp.nme_bus_dc": [[419, 4, 1, "", "add_vvars"]], "mp.nme_buslink": [[420, 4, 1, "", "add_zvars"], [420, 4, 1, "", "build_params"], [420, 4, 1, "", "name"], [420, 4, 1, "", "np"], [420, 4, 1, "", "nz"], [420, 4, 1, "", "voltage_constraints"]], "mp.nme_gen": [[423, 4, 1, "", "name"], [423, 4, 1, "", "np"], [423, 4, 1, "", "nz"]], "mp.nme_gen3p": [[424, 4, 1, "", "add_zvars"], [424, 4, 1, "", "build_params"], [424, 4, 1, "", "name"], [424, 4, 1, "", "np"], [424, 4, 1, "", "nz"]], "mp.nme_gen_ac": [[427, 4, 1, "", "add_zvars"], [427, 4, 1, "", "build_params"]], "mp.nme_gen_dc": [[430, 4, 1, "", "add_zvars"], [430, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline": [[431, 4, 1, "", "name"], [431, 4, 1, "", "np"], [431, 4, 1, "", "nz"]], "mp.nme_legacy_dcline_ac": [[432, 4, 1, "", "add_zvars"], [432, 4, 1, "", "build_params"]], "mp.nme_legacy_dcline_dc": [[435, 4, 1, "", "add_zvars"], [435, 4, 1, "", "build_params"]], "mp.nme_line3p": [[436, 4, 1, "", "build_params"], [436, 4, 1, "", "name"], [436, 4, 1, "", "np"], [436, 4, 1, "", "vec2symmat_stacked"]], "mp.nme_load": [[437, 4, 1, "", "name"], [437, 4, 1, "", "np"]], "mp.nme_load3p": [[438, 4, 1, "", "build_params"], [438, 4, 1, "", "name"], [438, 4, 1, "", "np"]], "mp.nme_load_ac": [[439, 4, 1, "", "build_params"], [439, 4, 1, "", "port_inj_current_nln"], [439, 4, 1, "", "port_inj_power_nln"]], "mp.nme_load_dc": [[442, 4, 1, "", "build_params"]], "mp.nme_shunt": [[443, 4, 1, "", "name"], [443, 4, 1, "", "np"]], "mp.nme_shunt_ac": [[444, 4, 1, "", "build_params"]], "mp.nme_shunt_dc": [[447, 4, 1, "", "build_params"]], "mp.nme_xfmr3p": [[448, 4, 1, "", "build_params"], [448, 4, 1, "", "name"], [448, 4, 1, "", "np"]], "mp.set_manager": [[106, 2, 1, "", "N"], [106, 2, 1, "", "NS"], [106, 4, 1, "", "add"], [106, 4, 1, "", "copy"], [106, 2, 1, "", "data"], [106, 4, 1, "", "describe_idx"], [106, 4, 1, "", "display"], [106, 4, 1, "", "get_N"], [106, 2, 1, "", "idx"], [106, 4, 1, "", "init_indexed_name"], [106, 2, 1, "", "label"], [106, 2, 1, "", "order"], [106, 4, 1, "", "set_manager"], [106, 4, 1, "", "set_type_idx_map"]], "mp.set_manager_opt_model": [[107, 4, 1, "", "display_soln"], [107, 4, 1, "", "has_parsed_soln"], [107, 4, 1, "", "params"], [107, 4, 1, "", "parse_soln"], [107, 4, 1, "", "set_manager_opt_model"], [107, 4, 1, "", "set_params"], [107, 2, 1, "", "soln"]], "mp.sm_legacy_cost": [[449, 2, 1, "", "cache"], [449, 4, 1, "", "sm_legacy_cost"]], "mp.sm_lin_constraint": [[108, 4, 1, "", "add"], [108, 2, 1, "", "cache"], [108, 4, 1, "", "display_soln"], [108, 4, 1, "", "eval"], [108, 4, 1, "", "get_soln"], [108, 4, 1, "", "params"], [108, 4, 1, "", "parse_soln"], [108, 4, 1, "", "set_params"], [108, 4, 1, "", "sm_lin_constraint"]], "mp.sm_nln_constraint": [[109, 4, 1, "", "add"], [109, 4, 1, "", "display_soln"], [109, 4, 1, "", "eval"], [109, 4, 1, "", "eval_hess"], [109, 4, 1, "", "get_soln"], [109, 4, 1, "", "params"], [109, 4, 1, "", "parse_soln"], [109, 4, 1, "", "set_params"], [109, 4, 1, "", "sm_nln_constraint"]], "mp.sm_nln_cost": [[110, 4, 1, "", "add"], [110, 4, 1, "", "display_soln"], [110, 4, 1, "", "eval"], [110, 4, 1, "", "get_soln"], [110, 4, 1, "", "params"], [110, 4, 1, "", "set_params"], [110, 4, 1, "", "sm_nln_cost"]], "mp.sm_quad_cost": [[111, 4, 1, "", "add"], [111, 2, 1, "", "cache"], [111, 4, 1, "", "display_soln"], [111, 4, 1, "", "eval"], [111, 4, 1, "", "get_soln"], [111, 4, 1, "", "params"], [111, 4, 1, "", "set_params"], [111, 4, 1, "", "sm_quad_cost"]], "mp.sm_variable": [[112, 4, 1, "", "add"], [112, 2, 1, "", "cache"], [112, 4, 1, "", "display_soln"], [112, 4, 1, "", "get_soln"], [112, 4, 1, "", "params"], [112, 4, 1, "", "parse_soln"], [112, 4, 1, "", "set_params"], [112, 4, 1, "", "sm_variable"], [112, 3, 1, "", "varsets_cell2struct"], [112, 4, 1, "", "varsets_idx"], [112, 4, 1, "", "varsets_len"], [112, 4, 1, "", "varsets_x"]], "mp.task": [[450, 4, 1, "", "data_model_build"], [450, 4, 1, "", "data_model_build_post"], [450, 4, 1, "", "data_model_build_pre"], [450, 4, 1, "", "data_model_class"], [450, 4, 1, "", "data_model_class_default"], [450, 4, 1, "", "data_model_create"], [450, 2, 1, "", "dm"], [450, 4, 1, "", "dm_converter_build"], [450, 4, 1, "", "dm_converter_class"], [450, 4, 1, "", "dm_converter_class_mpc2_default"], [450, 4, 1, "", "dm_converter_create"], [450, 2, 1, "", "dmc"], [450, 2, 1, "", "et"], [450, 2, 1, "", "i_dm"], [450, 2, 1, "", "i_mm"], [450, 2, 1, "", "i_nm"], [450, 4, 1, "", "load_dm"], [450, 4, 1, "", "math_model_build"], [450, 4, 1, "", "math_model_class"], [450, 4, 1, "", "math_model_class_default"], [450, 4, 1, "", "math_model_create"], [450, 4, 1, "", "math_model_opt"], [450, 2, 1, "", "message"], [450, 2, 1, "", "mm"], [450, 2, 1, "", "mm_opt"], [450, 2, 1, "", "name"], [450, 4, 1, "", "network_model_build"], [450, 4, 1, "", "network_model_build_post"], [450, 4, 1, "", "network_model_build_pre"], [450, 4, 1, "", "network_model_class"], [450, 4, 1, "", "network_model_class_default"], [450, 4, 1, "", "network_model_create"], [450, 4, 1, "", "network_model_update"], [450, 4, 1, "", "network_model_x_soln"], [450, 4, 1, "", "next_dm"], [450, 4, 1, "", "next_mm"], [450, 4, 1, "", "next_nm"], [450, 2, 1, "", "nm"], [450, 4, 1, "", "print_soln"], [450, 4, 1, "", "print_soln_header"], [450, 4, 1, "", "run"], [450, 4, 1, "", "run_post"], [450, 4, 1, "", "run_pre"], [450, 4, 1, "", "save_soln"], [450, 2, 1, "", "success"], [450, 2, 1, "", "tag"]], "mp.task_cpf": [[451, 4, 1, "", "data_model_build"], [451, 4, 1, "", "data_model_class_default"], [451, 4, 1, "", "dm_converter_class"], [451, 4, 1, "", "math_model_class_default"], [451, 4, 1, "", "math_model_opt"], [451, 4, 1, "", "network_model_build"], [451, 4, 1, "", "network_model_update"], [451, 4, 1, "", "network_model_x_soln"], [451, 4, 1, "", "next_mm"], [451, 4, 1, "", "run_pre"], [451, 4, 1, "", "task_cpf"], [451, 2, 1, "", "warmstart"]], "mp.task_cpf_legacy": [[452, 4, 1, "", "legacy_post_run"], [452, 4, 1, "", "run_post"], [452, 4, 1, "", "run_pre"]], "mp.task_opf": [[453, 4, 1, "", "data_model_build_post"], [453, 4, 1, "", "data_model_class_default"], [453, 2, 1, "", "dc"], [453, 4, 1, "", "math_model_class_default"], [453, 4, 1, "", "network_model_class_default"], [453, 4, 1, "", "print_soln_header"], [453, 4, 1, "", "run_pre"]], "mp.task_opf_legacy": [[454, 4, 1, "", "data_model_build_post"], [454, 4, 1, "", "dm_converter_class_mpc2_default"], [454, 4, 1, "", "legacy_post_run"], [454, 4, 1, "", "math_model_class_default"], [454, 4, 1, "", "run_post"], [454, 4, 1, "", "run_pre"]], "mp.task_pf": [[455, 2, 1, "", "dc"], [455, 4, 1, "", "enforce_q_lims"], [455, 2, 1, "", "fixed_q_idx"], [455, 2, 1, "", "fixed_q_qty"], [455, 2, 1, "", "iterations"], [455, 4, 1, "", "math_model_class_default"], [455, 2, 1, "", "name"], [455, 4, 1, "", "network_model_build_post"], [455, 4, 1, "", "network_model_class_default"], [455, 4, 1, "", "network_model_x_soln"], [455, 4, 1, "", "next_dm"], [455, 2, 1, "", "ref"], [455, 2, 1, "", "ref0"], [455, 4, 1, "", "run_pre"], [455, 2, 1, "", "tag"], [455, 2, 1, "", "va_ref0"]], "mp.task_pf_legacy": [[456, 4, 1, "", "legacy_post_run"], [456, 4, 1, "", "run_post"], [456, 4, 1, "", "run_pre"]], "mp.task_shared_legacy": [[457, 4, 1, "", "run_pre_legacy"]], "mp.xt_3p": [[458, 4, 1, "", "dm_element_classes"], [458, 4, 1, "", "dmc_element_classes"], [458, 4, 1, "", "mm_element_classes"], [458, 4, 1, "", "nm_element_classes"]], "mp.xt_legacy_dcline": [[459, 4, 1, "", "dm_element_classes"], [459, 4, 1, "", "dmc_element_classes"], [459, 4, 1, "", "mm_element_classes"], [459, 4, 1, "", "nm_element_classes"]], "mp.xt_oval_cap_curve": [[460, 4, 1, "", "mm_element_classes"]], "mp.xt_reserves": [[461, 4, 1, "", "dm_element_classes"], [461, 4, 1, "", "dmc_element_classes"], [461, 4, 1, "", "mm_element_classes"]], "mp_idx_manager": [[113, 4, 1, "", "add_named_set"], [113, 4, 1, "", "copy"], [113, 4, 1, "", "describe_idx"], [113, 4, 1, "", "display_set"], [113, 4, 1, "", "get"], [113, 4, 1, "", "getN"], [113, 4, 1, "", "get_idx"], [113, 4, 1, "", "get_userdata"], [113, 4, 1, "", "init_indexed_name"], [113, 4, 1, "", "init_set_types"], [113, 4, 1, "", "mp_idx_manager"], [113, 4, 1, "", "set_type_idx_map"], [113, 4, 1, "", "valid_named_set_type"]], "mp_table": [[462, 4, 1, "", "display"], [462, 4, 1, "", "end"], [462, 3, 1, "", "extract_named_args"], [462, 4, 1, "", "horzcat"], [462, 4, 1, "", "isempty"], [462, 4, 1, "", "istable"], [462, 4, 1, "", "mp_table"], [462, 4, 1, "", "size"], [462, 4, 1, "", "subsasgn"], [462, 4, 1, "", "subsref"], [462, 4, 1, "", "vertcat"]], "mp_table_subclass": [[463, 4, 1, "", "get_table"], [463, 4, 1, "", "set_table"]], "opf_model": [[474, 4, 1, "", "add_legacy_cost"], [474, 4, 1, "", "add_named_set"], [474, 2, 1, "", "cost"], [474, 4, 1, "", "def_set_types"], [474, 4, 1, "", "display"], [474, 4, 1, "", "eval_legacy_cost"], [474, 4, 1, "", "get_mpc"], [474, 4, 1, "", "init_set_types"], [474, 2, 1, "", "mpc"], [474, 4, 1, "", "opf_model"], [474, 4, 1, "", "params_legacy_cost"], [474, 4, 1, "", "set_mpc"]], "opt_model": [[114, 4, 1, "", "add_lin_constraint"], [114, 4, 1, "", "add_nln_constraint"], [114, 4, 1, "", "add_nln_cost"], [114, 4, 1, "", "add_quad_cost"], [114, 4, 1, "", "add_var"], [114, 4, 1, "", "copy"], [114, 4, 1, "", "def_set_types"], [114, 4, 1, "", "display"], [114, 4, 1, "", "display_soln"], [114, 4, 1, "", "eval_lin_constraint"], [114, 4, 1, "", "eval_nln_constraint"], [114, 4, 1, "", "eval_nln_constraint_hess"], [114, 4, 1, "", "eval_nln_cost"], [114, 4, 1, "", "eval_quad_cost"], [114, 4, 1, "", "get_idx"], [114, 4, 1, "", "get_soln"], [114, 4, 1, "", "has_parsed_soln"], [114, 4, 1, "", "init_indexed_name"], [114, 4, 1, "", "is_mixed_integer"], [114, 4, 1, "", "is_solved"], [114, 2, 1, "", "lin"], [114, 2, 1, "", "nlc"], [114, 2, 1, "", "nle"], [114, 2, 1, "", "nli"], [114, 4, 1, "", "opt_model"], [114, 4, 1, "", "params_lin_constraint"], [114, 4, 1, "", "params_nln_constraint"], [114, 4, 1, "", "params_nln_cost"], [114, 4, 1, "", "params_quad_cost"], [114, 4, 1, "", "params_var"], [114, 4, 1, "", "parse_soln"], [114, 2, 1, "", "prob_type"], [114, 4, 1, "", "problem_type"], [114, 2, 1, "", "qdc"], [114, 4, 1, "", "set_params"], [114, 2, 1, "", "soln"], [114, 4, 1, "", "solve"], [114, 2, 1, "", "var"], [114, 4, 1, "", "varsets_cell2struct"], [114, 4, 1, "", "varsets_idx"], [114, 4, 1, "", "varsets_len"], [114, 4, 1, "", "varsets_x"]]}, "objtypes": {"0": "mat:function", "1": "mat:class", "2": "mat:attribute", "3": "mat:staticmethod", "4": "mat:method"}, "objnames": {"0": ["mat", "function", "MATLAB function"], "1": ["mat", "class", "MATLAB class"], "2": ["mat", "attribute", "MATLAB attribute"], "3": ["mat", "staticmethod", "MATLAB static method"], "4": ["mat", "method", "MATLAB method"]}, "titleterms": {"acknowledg": [0, 243], "architectur": 1, "overview": [1, 21], "m": [1, 2, 5, 6, 12, 21, 245, 464, 472, 738, 740, 769, 770], "span": [1, 2, 5, 6, 12, 21, 245, 464, 472, 738, 740, 769, 770], "style": [1, 2, 5, 6, 12, 21, 245, 464, 472, 738, 740, 769, 770], "font": [1, 2, 5, 6, 12, 21, 245, 464, 472, 738, 740, 769, 770], "size": [1, 2, 5, 6, 12, 21, 245, 464, 472, 738, 740, 769, 770], "smaller": [1, 2, 5, 6, 12, 21, 245, 464, 472, 738, 740, 769, 770], "atpow": [1, 2, 5, 6, 12, 21, 245, 464, 472, 738, 740, 769, 770], "matpow": [1, 2, 5, 6, 12, 21, 245, 464, 472, 738, 740, 769, 770], "object": [1, 3, 4, 7, 8, 11], "instanc": 1, "class": [1, 2, 7, 227, 245, 738], "hierarchi": 1, "two": 1, "framework": [1, 770], "custom": [1, 2, 17], "default": 2, "determin": 2, "task": [2, 11, 17, 245, 450], "model": [2, 3, 4, 7, 8, 11, 17, 19, 226, 227, 245], "data": [2, 3, 4, 7, 17, 19, 20, 245, 738, 740], "convert": [2, 4, 11, 17, 19, 245], "specif": [2, 4], "method": [2, 3, 11], "element": [2, 3, 4, 7, 8, 17, 19, 245, 769], "modifi": 2, "via": [2, 12], "option": [2, 12, 227], "extens": [2, 12, 18, 19, 245, 301], "build": [3, 4, 7, 8, 11, 13, 17, 738], "system": 3, "level": [3, 464, 738], "paramet": [3, 8, 19], "print": [3, 17], "tabl": [3, 17], "properti": 3, "connect": [3, 17], "import": [4, 17], "export": [4, 17], "variabl": [4, 7, 17], "map": [4, 17], "valu": [4, 17], "develop": [5, 6], "": [5, 37, 104, 226, 243, 770], "manual": [5, 13, 21, 37, 104, 226, 243, 472, 770], "introduct": [6, 473], "environ": 6, "github": 6, "repositori": 6, "convent": 6, "mathemat": [7, 17, 19, 245], "solv": 7, "math": 7, "updat": [7, 13, 17], "network": [7, 8, 17, 19, 245], "ad": 7, "constraint": [7, 12, 245], "cost": 7, "share": 7, "formul": [8, 17, 19], "dc": [8, 17, 245], "ac": [8, 17, 19], "complex": 8, "power": [8, 17, 20, 738], "inject": 8, "current": [8, 769], "node": 8, "type": [8, 17, 19], "exampl": [8, 12, 20, 38, 105, 227, 245], "bu": 8, "gener": 8, "branch": 8, "load": 8, "aggreg": 8, "notat": 9, "refer": [10, 13, 37, 38, 104, 105, 226, 227, 244, 472], "run": [11, 20], "iter": 11, "execut": 11, "other": [11, 21, 38, 105, 244, 464, 738], "how": [12, 13, 17, 18, 20, 21], "add": 12, "an": [12, 18], "opf": [12, 17, 245, 604, 738, 769], "function": [12, 13, 17, 38, 105, 227, 244, 464, 738], "deriv": [12, 738, 769], "implement": [12, 227], "us": [12, 17, 18], "new": [12, 17, 770], "origin": 12, "box": 12, "capabl": 12, "curv": 12, "oval": 12, "see": [12, 17, 18], "also": [12, 17, 18], "document": [13, 21, 243], "util": [13, 227, 738], "generate_autodoc_stub": 14, "generate_matpower_autodoc": 15, "generate_source_symlink": 16, "creat": [17, 18], "transmiss": 17, "line": [17, 245], "name": 17, "main": [17, 38, 105], "output": [17, 738], "stage": 17, "pretti": 17, "subclass": 17, "field": 17, "sourc": 17, "all": [17, 19, 21], "cartesian": [17, 19, 769], "v": [17, 19], "polar": [17, 19], "flow": [17, 20, 738, 769], "optim": 17, "A": 19, "test": [19, 38, 105, 227, 243, 244, 738, 740], "gizmo": 19, "3": 19, "port": 19, "compon": 19, "three": [20, 245], "phase": [20, 245], "format": 20, "bus3p": 20, "line3p": 20, "xfmr3p": 20, "load3p": 20, "gen3p": 20, "lc": 20, "buslink": 20, "case": 20, "home": 21, "get": 21, "start": 21, "more": 21, "legaci": [21, 245, 738, 770], "pdf": 21, "To": 21, "guid": 21, "tech": 21, "note": [21, 769], "public": 21, "link": 21, "have_feature_lu_vec": 22, "have_feature_pardiso": 23, "have_feature_pardiso_legaci": 24, "have_feature_pardiso_object": 25, "mip": [26, 37, 38], "mips_example1": 27, "mips_example2": 28, "mipsver": 29, "mplinsolv": 30, "qps_mip": 31, "t_mip": 32, "t_mips_pardiso": 33, "t_mplinsolv": 34, "t_qps_mip": 35, "test_mip": 36, "user": [37, 104, 226, 243, 245, 738, 770], "privat": [38, 105, 227, 244, 738], "addgen2mpc": 39, "addstorag": 40, "addwind": 41, "apply_profil": 42, "c118swf": 43, "ex_case3a": 44, "ex_case3b": 45, "ex_contab": 46, "ex_load_profil": 47, "ex_storag": 48, "ex_transmat": 49, "ex_wind": 50, "ex_wind_profil": 51, "ex_wind_profile_d": 52, "ex_wind_uc": 53, "ex_xgd": 54, "ex_xgd_ramp": 55, "ex_xgd_r": 56, "ex_xgd_uc": 57, "filter_ramp_transit": 58, "getprofil": 59, "idx_profil": 60, "loadgenericdata": 61, "loadmd": 62, "loadstoragedata": 63, "loadxgendata": 64, "md_init": 65, "most": [66, 104, 105], "most_ex1_": 67, "most_ex2_dcopf": 68, "most_ex3_dcopf_w_uc": 69, "most_ex4_dcopf_ss": 70, "most_ex5_mpopf": 71, "most_ex6_uc": 72, "most_ex7_suc": 73, "most_summari": 74, "mostver": 75, "mpoption_info_most": 76, "plot_gen": 77, "plot_storag": 78, "plot_uc": 79, "plot_uc_data": 80, "t_case30_most": 81, "t_case3_most": 82, "t_case_tlmp": 83, "t_case_tlmp_storag": 84, "t_most_30b_1_1_0": 85, "t_most_30b_1_1_0_uc": 86, "t_most_30b_1_1_17": 87, "t_most_30b_3_1_0": 88, "t_most_30b_3_1_17": 89, "t_most_3b_1_1_0": 90, "t_most_3b_1_1_2": 91, "t_most_3b_3_1_0": 92, "t_most_3b_3_1_2": 93, "t_most_fixed_r": 94, "t_most_mpopf": 95, "t_most_sp": 96, "t_most_spuc": 97, "t_most_suc": 98, "t_most_tlmp": 99, "t_most_uc": 100, "t_most_w_d": 101, "test_most": 102, "uniformwindprofil": 103, "mp": [106, 107, 108, 109, 110, 111, 112, 226, 227, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 769], "set_manag": 106, "set_manager_opt_model": 107, "sm_lin_constraint": 108, "sm_nln_constraint": 109, "sm_nln_cost": 110, "sm_quad_cost": 111, "sm_variabl": 112, "mp_idx_manag": 113, "opt_model": 114, "artelys_knitro_opt": 115, "convert_lin_constraint": 116, "convert_lin_constraint_multipli": 117, "cplex_opt": 118, "glpk_option": 119, "gurobi_opt": 120, "gurobiv": 121, "have_feature_bpmpd": 122, "have_feature_catchm": 123, "have_feature_clp": 124, "have_feature_cplex": 125, "have_feature_evalc": 126, "have_feature_fmincon": 127, "have_feature_fmincon_ipm": 128, "have_feature_fsolv": 129, "have_feature_glpk": 130, "have_feature_gurobi": 131, "have_feature_intlinprog": 132, "have_feature_ipopt": 133, "have_feature_ipopt_auxdata": 134, "have_feature_isequaln": 135, "have_feature_knitro": 136, "have_feature_knitromatlab": 137, "have_feature_ktrlink": 138, "have_feature_linprog": 139, "have_feature_linprog_d": 140, "have_feature_mosek": 141, "have_feature_opti_clp": 142, "have_feature_optim": 143, "have_feature_optimopt": 144, "have_feature_osqp": 145, "have_feature_quadprog": 146, "have_feature_quadprog_l": 147, "have_feature_sdpt3": 148, "have_feature_sedumi": 149, "have_feature_yalmip": 150, "ipopt_opt": 151, "knitrov": 152, "miqps_cplex": 153, "miqps_glpk": 154, "miqps_gurobi": 155, "miqps_mast": 156, "miqps_mosek": 157, "miqps_ot": 158, "mosek_opt": 159, "mosek_symbcon": 160, "mpomver": 161, "mpopt2nleqopt": 162, "mpopt2nlpopt": 163, "mpopt2pneopt": 164, "mpopt2qpopt": 165, "nested_struct_copi": 166, "nleqs_cor": 167, "nleqs_fd_newton": 168, "nleqs_fsolv": 169, "nleqs_gauss_seidel": 170, "nleqs_mast": 171, "nleqs_master_ex1": 172, "nleqs_master_ex2": 173, "nleqs_newton": 174, "nlp_consfcn": 175, "nlp_costfcn": 176, "nlp_hessfcn": 177, "nlps_fmincon": 178, "nlps_ipopt": 179, "nlps_knitro": 180, "nlps_master": 181, "nlps_master_ex1": 182, "nlps_master_ex2": 183, "osqp_opt": 184, "osqpver": 185, "pne_callback_default": 186, "pne_callback_nos": 187, "pne_callback_target_lam": 188, "pne_detect_ev": 189, "pne_detected_ev": 190, "pne_event_nos": 191, "pne_event_target_lam": 192, "pne_ex1": 193, "pne_pfcn_arc_len": 194, "pne_pfcn_natur": 195, "pne_pfcn_pseudo_arc_len": 196, "pne_register_callback": 197, "pne_register_ev": 198, "pnes_mast": 199, "qp_ex1": 200, "qps_bpmpd": 201, "qps_clp": 202, "qps_cplex": 203, "qps_glpk": 204, "qps_gurobi": 205, "qps_ipopt": 206, "qps_knitro": 207, "qps_master": 208, "qps_mosek": 209, "qps_osqp": 210, "qps_ot": 211, "t_miqps_mast": 212, "t_nested_struct_copi": 213, "t_nleqs_mast": 214, "t_nlps_master": 215, "t_om_solve_leq": 216, "t_om_solve_miqp": 217, "t_om_solve_nleq": 218, "t_om_solve_nlp": 219, "t_om_solve_pn": 220, "t_om_solve_qp": 221, "t_opt_model": 222, "t_pnes_mast": 223, "t_qps_master": 224, "test_mp_opt_model": 225, "opt": [226, 227], "mpom": [226, 227], "master": 227, "handl": 227, "version": [227, 739], "inform": 227, "solver": [227, 738], "interfac": 227, "miqp": [227, 738], "nleq": 227, "nlp": 227, "pne": 227, "lp": [227, 738], "qp": [227, 738], "have_featur": 228, "have_feature_matlab": 229, "have_feature_octav": 230, "mptestver": 231, "t_begin": 232, "t_end": 233, "t_file_match": 234, "t_have_featur": 235, "t_i": 236, "t_ok": 237, "t_run_test": 238, "t_skip": 239, "t_str_match": 240, "t_test_fcn": 241, "test_mptest": 242, "instal": [243, 464], "usag": 243, "contribut": 243, "licens": 243, "core": 245, "contain": 245, "mixin": 245, "miscellan": 245, "base": 245, "fix": 245, "zonal": 245, "reserv": 245, "prototyp": 245, "node_typ": 246, "cost_tabl": 247, "cost_table_util": 248, "data_model": 249, "data_model_cpf": 250, "data_model_opf": 251, "dm_convert": 252, "dm_converter_mpc2": 253, "dm_converter_mpc2_legaci": 254, "dm_element": 255, "dmc_element": 256, "dmce_branch_mpc2": 257, "dmce_bus3p_mpc2": 258, "dmce_bus_mpc2": 259, "dmce_buslink_mpc2": 260, "dmce_gen3p_mpc2": 261, "dmce_gen_mpc2": 262, "dmce_legacy_dcline_mpc2": 263, "dmce_line3p_mpc2": 264, "dmce_load3p_mpc2": 265, "dmce_load_mpc2": 266, "dmce_reserve_gen_mpc2": 267, "dmce_reserve_zone_mpc2": 268, "dmce_shunt_mpc2": 269, "dmce_xfmr3p_mpc2": 270, "dme_branch": 271, "dme_branch_opf": 272, "dme_bu": 273, "dme_bus3p": 274, "dme_bus3p_opf": 275, "dme_bus_opf": 276, "dme_buslink": 277, "dme_buslink_opf": 278, "dme_gen": 279, "dme_gen3p": 280, "dme_gen3p_opf": 281, "dme_gen_opf": 282, "dme_legacy_dclin": 283, "dme_legacy_dcline_opf": 284, "dme_line3p": 285, "dme_line3p_opf": 286, "dme_load": 287, "dme_load3p": 288, "dme_load3p_opf": 289, "dme_load_cpf": 290, "dme_load_opf": 291, "dme_reserve_gen": 292, "dme_reserve_zon": 293, "dme_shared_opf": 294, "dme_shunt": 295, "dme_shunt_cpf": 296, "dme_shunt_opf": 297, "dme_xfmr3p": 298, "dme_xfmr3p_opf": 299, "element_contain": 300, "form": 302, "form_ac": 303, "form_acc": 304, "form_acp": 305, "form_dc": 306, "mapped_arrai": 307, "math_model": 308, "math_model_cpf_acc": [309, 311], "math_model_cpf_acci": 310, "math_model_cpf_acp": [312, 314], "math_model_cpf_acpi": 313, "math_model_opf": 315, "math_model_opf_ac": 316, "math_model_opf_acc": [317, 320], "math_model_opf_acci": 318, "math_model_opf_acci_legaci": 319, "math_model_opf_accs_legaci": 321, "math_model_opf_acp": [322, 325], "math_model_opf_acpi": 323, "math_model_opf_acpi_legaci": 324, "math_model_opf_acps_legaci": 326, "math_model_opf_dc": 327, "math_model_opf_dc_legaci": 328, "math_model_pf": 329, "math_model_pf_ac": 330, "math_model_pf_acci": 331, "math_model_pf_acc": 332, "math_model_pf_acpi": 333, "math_model_pf_acp": 334, "math_model_pf_dc": 335, "mm_element": 336, "mm_shared_opf_legaci": 337, "mm_shared_pfcpf": 338, "mm_shared_pfcpf_ac": 339, "mm_shared_pfcpf_ac_i": 340, "mm_shared_pfcpf_acc": [341, 343], "mm_shared_pfcpf_acci": 342, "mm_shared_pfcpf_acp": [344, 346], "mm_shared_pfcpf_acpi": 345, "mm_shared_pfcpf_dc": 347, "mme_branch": 348, "mme_branch_opf": 349, "mme_branch_opf_ac": 350, "mme_branch_opf_acc": 351, "mme_branch_opf_acp": 352, "mme_branch_opf_dc": 353, "mme_branch_pf_ac": 354, "mme_branch_pf_dc": 355, "mme_bu": 356, "mme_bus3p": 357, "mme_bus3p_opf_acc": 358, "mme_bus3p_opf_acp": 359, "mme_bus_opf_ac": 360, "mme_bus_opf_acc": 361, "mme_bus_opf_acp": 362, "mme_bus_opf_dc": 363, "mme_bus_pf_ac": 364, "mme_bus_pf_dc": 365, "mme_buslink": 366, "mme_buslink_opf": 367, "mme_buslink_opf_acc": 368, "mme_buslink_opf_acp": 369, "mme_buslink_pf_ac": 370, "mme_buslink_pf_acc": 371, "mme_buslink_pf_acp": 372, "mme_gen": 373, "mme_gen3p": 374, "mme_gen3p_opf": 375, "mme_gen_opf": 376, "mme_gen_opf_ac": 377, "mme_gen_opf_ac_ov": 378, "mme_gen_opf_dc": 379, "mme_gen_pf_ac": 380, "mme_gen_pf_dc": 381, "mme_legacy_dclin": 382, "mme_legacy_dcline_opf": 383, "mme_legacy_dcline_opf_ac": 384, "mme_legacy_dcline_opf_dc": 385, "mme_legacy_dcline_pf_ac": 386, "mme_legacy_dcline_pf_dc": 387, "mme_line3p": 388, "mme_line3p_opf": 389, "mme_load": 390, "mme_load_cpf": 391, "mme_load_pf_ac": 392, "mme_load_pf_dc": 393, "mme_reserve_gen": 394, "mme_reserve_zon": 395, "mme_shunt": 396, "mme_shunt_cpf": 397, "mme_shunt_pf_ac": 398, "mme_shunt_pf_dc": 399, "mme_xfmr3p": 400, "mme_xfmr3p_opf": 401, "net_model": 402, "net_model_ac": 403, "net_model_acc": 404, "net_model_acp": 405, "net_model_dc": 406, "nm_element": 407, "nme_branch": 408, "nme_branch_ac": 409, "nme_branch_acc": 410, "nme_branch_acp": 411, "nme_branch_dc": 412, "nme_bu": 413, "nme_bus3p": 414, "nme_bus3p_acc": 415, "nme_bus3p_acp": 416, "nme_bus_acc": 417, "nme_bus_acp": 418, "nme_bus_dc": 419, "nme_buslink": 420, "nme_buslink_acc": 421, "nme_buslink_acp": 422, "nme_gen": 423, "nme_gen3p": 424, "nme_gen3p_acc": 425, "nme_gen3p_acp": 426, "nme_gen_ac": 427, "nme_gen_acc": 428, "nme_gen_acp": 429, "nme_gen_dc": 430, "nme_legacy_dclin": 431, "nme_legacy_dcline_ac": 432, "nme_legacy_dcline_acc": 433, "nme_legacy_dcline_acp": 434, "nme_legacy_dcline_dc": 435, "nme_line3p": 436, "nme_load": 437, "nme_load3p": 438, "nme_load_ac": 439, "nme_load_acc": 440, "nme_load_acp": 441, "nme_load_dc": 442, "nme_shunt": 443, "nme_shunt_ac": 444, "nme_shunt_acc": 445, "nme_shunt_acp": 446, "nme_shunt_dc": 447, "nme_xfmr3p": 448, "sm_legacy_cost": 449, "task_cpf": 451, "task_cpf_legaci": 452, "task_opf": 453, "task_opf_legaci": 454, "task_pf": 455, "task_pf_legaci": 456, "task_shared_legaci": 457, "xt_3p": 458, "xt_legacy_dclin": 459, "xt_oval_cap_curv": 460, "xt_reserv": 461, "mp_tabl": 462, "mp_table_subclass": 463, "limit": 463, "top": [464, 738], "simul": [464, 738], "install_matpow": 465, "load_dm": 466, "mp_table_class": 467, "run_cpf": 468, "run_mp": 469, "run_opf": 470, "run_pf": 471, "opf_model": 474, "add_userfcn": 475, "apply_chang": 476, "bustyp": 477, "calc_branch_angl": 478, "calc_v_i_sum": 479, "calc_v_pq_sum": 480, "calc_v_y_sum": 481, "case_info": 482, "caseformat": 483, "cdf2mpc": 484, "compare_cas": 485, "connected_compon": 486, "cpf_corrector": 487, "cpf_current_mpc": 488, "cpf_default_callback": 489, "cpf_detect_ev": 490, "cpf_flim_ev": 491, "cpf_flim_event_cb": 492, "cpf_nose_ev": 493, "cpf_nose_event_cb": 494, "cpf_p": 495, "cpf_p_jac": 496, "cpf_plim_ev": 497, "cpf_plim_event_cb": 498, "cpf_predictor": 499, "cpf_qlim_ev": 500, "cpf_qlim_event_cb": 501, "cpf_register_callback": 502, "cpf_register_ev": 503, "cpf_tangent": 504, "cpf_target_lam_ev": 505, "cpf_target_lam_event_cb": 506, "cpf_vlim_ev": 507, "cpf_vlim_event_cb": 508, "d2abr_dv2": 509, "d2ibr_dv2": 510, "d2imis_dv2": 511, "d2imis_dvdsg": 512, "d2sbr_dv2": 513, "d2sbus_dv2": 514, "dabr_dv": 515, "dibr_dv": 516, "dimis_dv": 517, "dsbr_dv": 518, "dsbus_dv": 519, "dcopf": 520, "dcopf_solv": 521, "dcpf": 522, "define_const": 523, "e2i_data": 524, "e2i_field": 525, "ext2int": 526, "extract_island": 527, "fdpf": 528, "feval_w_path": 529, "find_bridg": 530, "find_island": 531, "fmincopf": 532, "gausspf": 533, "genfuel": 534, "gentyp": 535, "get_loss": 536, "get_reord": 537, "haspqcap": 538, "have_feature_e4st": 539, "have_feature_minopf": 540, "have_feature_most": 541, "have_feature_mp_cor": 542, "have_feature_pdipmopf": 543, "have_feature_regexp_split": 544, "have_feature_scpdipmopf": 545, "have_feature_sdp_pf": 546, "have_feature_smartmarket": 547, "have_feature_syngrid": 548, "have_feature_t": 549, "have_feature_tralmopf": 550, "i2e_data": 551, "i2e_field": 552, "idx_brch": 553, "idx_bu": 554, "idx_cost": 555, "idx_ct": 556, "idx_dclin": 557, "idx_gen": 558, "int2ext": 559, "isload": 560, "load2disp": 561, "loadcas": 562, "loadsh": 563, "makeaang": 564, "makeapq": 565, "makeavl": 566, "makeai": 567, "makeb": 568, "makebdc": 569, "makejac": 570, "makelodf": 571, "makeptdf": 572, "makesbu": 573, "makesdzip": 574, "makeybu": 575, "make_vcorr": 576, "make_zpv": 577, "margcost": 578, "miqps_matpow": 579, "modcost": 580, "mpoption": 581, "mpoption_info_clp": 582, "mpoption_info_cplex": 583, "mpoption_info_fmincon": 584, "mpoption_info_glpk": 585, "mpoption_info_gurobi": 586, "mpoption_info_intlinprog": 587, "mpoption_info_ipopt": 588, "mpoption_info_knitro": 589, "mpoption_info_linprog": 590, "mpoption_info_mip": 591, "mpoption_info_mosek": 592, "mpoption_info_osqp": 593, "mpoption_info_quadprog": 594, "mpoption_old": 595, "mpver": 596, "newtonpf": 597, "newtonpf_i_cart": 598, "newtonpf_i_hybrid": 599, "newtonpf_i_polar": 600, "newtonpf_s_cart": 601, "newtonpf_s_hybrid": 602, "nlpopf_solv": 603, "opf_arg": 605, "opf_branch_ang_fcn": 606, "opf_branch_ang_hess": 607, "opf_branch_flow_fcn": 608, "opf_branch_flow_hess": 609, "opf_current_balance_fcn": 610, "opf_current_balance_hess": 611, "opf_execut": 612, "opf_gen_cost_fcn": 613, "opf_legacy_user_cost_fcn": 614, "opf_nle_fcn1": 615, "opf_nle_hess1": 616, "opf_power_balance_fcn": 617, "opf_power_balance_hess": 618, "opf_setup": 619, "opf_veq_fcn": 620, "opf_veq_hess": 621, "opf_vlim_fcn": 622, "opf_vlim_hess": 623, "opf_vref_fcn": 624, "opf_vref_hess": 625, "order_radi": 626, "pfsoln": 627, "poly2pwl": 628, "polycost": 629, "pqcost": 630, "printpf": 631, "psse2mpc": 632, "psse_convert": 633, "psse_convert_hvdc": 634, "psse_convert_xfmr": 635, "psse_pars": 636, "psse_parse_lin": 637, "psse_parse_sect": 638, "psse_read": 639, "qps_matpow": 640, "radial_pf": 641, "remove_userfcn": 642, "run_userfcn": 643, "runcpf": 644, "rundcopf": 645, "rundcpf": 646, "runduopf": 647, "runopf": 648, "runopf_w_r": 649, "runpf": 650, "runuopf": 651, "save2pss": 652, "savecas": 653, "savechgtab": 654, "scale_load": 655, "set_reord": 656, "t_apply_chang": 657, "t_auction_cas": 658, "t_auction_minopf": 659, "t_auction_mip": 660, "t_auction_tspopf_pdipm": 661, "t_case30_userfcn": 662, "t_case9_dclin": 663, "t_case9_opf": 664, "t_case9_opfv2": 665, "t_case9_pf": 666, "t_case9_pfv2": 667, "t_case9_save2pss": 668, "t_case_ext": 669, "t_case_int": 670, "t_chgtab": 671, "t_cpf": 672, "t_cpf_cb1": 673, "t_cpf_cb2": 674, "t_dcline": 675, "t_ext2int2ext": 676, "t_feval_w_path": 677, "t_get_loss": 678, "t_haspqcap": 679, "t_hessian": 680, "t_island": 681, "t_jacobian": 682, "t_load2disp": 683, "t_loadcas": 684, "t_makelodf": 685, "t_makeptdf": 686, "t_margcost": 687, "t_miqps_matpow": 688, "t_modcost": 689, "t_mpoption": 690, "t_mpoption_ov": 691, "t_off2cas": 692, "t_opf_dc_bpmpd": 693, "t_opf_dc_clp": 694, "t_opf_dc_cplex": 695, "t_opf_dc_default": 696, "t_opf_dc_glpk": 697, "t_opf_dc_gurobi": 698, "t_opf_dc_ipopt": 699, "t_opf_dc_mip": 700, "t_opf_dc_mips_sc": 701, "t_opf_dc_mosek": 702, "t_opf_dc_osqp": 703, "t_opf_dc_ot": 704, "t_opf_default": 705, "t_opf_fmincon": 706, "t_opf_ipopt": 707, "t_opf_knitro": 708, "t_opf_minopf": 709, "t_opf_mip": 710, "t_opf_model": 711, "t_opf_softlim": 712, "t_opf_tspopf_pdipm": 713, "t_opf_tspopf_scpdipm": 714, "t_opf_tspopf_tralm": 715, "t_opf_userfcn": 716, "t_pf_ac": 717, "t_pf_dc": 718, "t_pf_radial": 719, "t_printpf": 720, "t_psse": 721, "t_qps_matpow": 722, "t_runmarket": 723, "t_runopf_w_r": 724, "t_scale_load": 725, "t_total_load": 726, "t_totcost": 727, "t_vdep_load": 728, "toggle_dclin": 729, "toggle_iflim": 730, "toggle_reserv": 731, "toggle_softlim": 732, "total_load": 733, "totcost": 734, "uopf": 735, "update_mupq": 736, "zgausspf": 737, "input": 738, "convers": 738, "continu": 738, "wrapper": 738, "callback": 738, "milp": 738, "matrix": 738, "featur": 738, "detect": 738, "previou": 739, "mp_foo_tabl": 741, "t_case3p_a": 742, "t_case3p_b": 743, "t_case3p_c": 744, "t_case3p_d": 745, "t_case3p_": 746, "t_case3p_f": 747, "t_case3p_g": 748, "t_case3p_h": 749, "t_case9_gizmo": 750, "t_dmc_element": 751, "t_mp_data_model": 752, "t_mp_dm_converter_mpc2": 753, "t_mp_mapped_arrai": 754, "t_mp_tabl": 755, "t_mpxt_legacy_dclin": 756, "t_mpxt_reserv": 757, "t_nm_element": 758, "t_node_test": 759, "t_port_inj_current_acc": 760, "t_port_inj_current_acp": 761, "t_port_inj_power_acc": 762, "t_port_inj_power_acp": 763, "t_pretty_print": 764, "t_run_mp": 765, "t_run_mp_3p": 766, "t_run_opf_default": 767, "test_matpow": 768, "technic": 769, "tn1": 769, "auction": 769, "tn2": 769, "tn3": 769, "tn4": 769, "tn5": 769, "flexibl": 770}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Acknowledgments": [[0, "acknowledgments"], [243, "acknowledgments"]], "Architecture Overview": [[1, "architecture-overview"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Object Instances": [[1, "matpower-object-instances"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Class Hierarchies": [[1, "matpower-class-hierarchies"]], "Two M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Frameworks": [[1, "two-matpower-frameworks"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Customization": [[1, "matpower-customization"]], "Customizing M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{}": [[2, "customizing-matpower"]], "Default Class Determination": [[2, "default-class-determination"]], "Task Class": [[2, "task-class"]], "Model and Data Converter Classes": [[2, "model-and-data-converter-classes"]], "Class Specification Methods of a Task": [[2, "id7"]], "Element Classes": [[2, "element-classes"]], "Element Class Modifiers": [[2, "id8"]], "Customization via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Options": [[2, "customization-via-matpower-options"]], "Class Customization Options": [[2, "id9"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extensions": [[2, "matpower-extensions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Methods": [[2, "id10"]], "Data Model Object": [[3, "data-model-object"]], "Data Models": [[3, "data-models"]], "Building a Data Model": [[3, "building-a-data-model"]], "System Level Parameters": [[3, "system-level-parameters"]], "Printing a Data Model": [[3, "printing-a-data-model"]], "Data Model Elements": [[3, "data-model-elements"]], "Data Tables": [[3, "data-tables"]], "Properties": [[3, "properties"]], "Data Model Element Properties": [[3, "id6"]], "Methods": [[3, "methods"]], "Connections": [[3, "connections"]], "Data Model Converter Object": [[4, "data-model-converter-object"]], "Data Model Converters": [[4, "data-model-converters"]], "Building a Data Model Converter": [[4, "building-a-data-model-converter"]], "Importing Data": [[4, "importing-data"]], "Exporting Data": [[4, "exporting-data"]], "Data Model Converter Elements": [[4, "data-model-converter-elements"]], "Data Import Specifications": [[4, "data-import-specifications"]], "Variable Map Values": [[4, "id5"]], "Data Export Specifications": [[4, "data-export-specifications"]], "Introduction": [[6, "introduction"], [473, "introduction"]], "Development Environment": [[6, "development-environment"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} GitHub Repositories": [[6, "id1"]], "Conventions": [[6, "conventions"]], "Mathematical Model Object": [[7, "mathematical-model-object"]], "Mathematical Models": [[7, "mathematical-models"]], "Building a Mathematical Model": [[7, "building-a-mathematical-model"]], "Solving a Math Model": [[7, "solving-a-math-model"]], "Updating Network and Data Models": [[7, "updating-network-and-data-models"]], "Mathematical Model Elements": [[7, "mathematical-model-elements"]], "Adding Variables, Constraints, and Costs": [[7, "adding-variables-constraints-and-costs"]], "Updating Data Model Elements": [[7, "updating-data-model-elements"]], "Shared Classes": [[7, "shared-classes"]], "Network Model Object": [[8, "network-model-object"]], "Network Model Formulations": [[8, "network-model-formulations"]], "DC Formulation": [[8, "dc-formulation"], [17, "dc-formulation"]], "AC Formulations": [[8, "ac-formulations"], [17, "ac-formulations"], [19, "ac-formulations"]], "Complex Power Injections": [[8, "complex-power-injections"]], "Complex Current Injections": [[8, "complex-current-injections"]], "Network Models": [[8, "network-models"]], "Building a Network Model": [[8, "building-a-network-model"]], "Node Types": [[8, "node-types"]], "Network Model Elements": [[8, "network-model-elements"]], "Example Elements": [[8, "example-elements"]], "Bus": [[8, "bus"]], "Generator": [[8, "generator"]], "Branch": [[8, "branch"]], "Load": [[8, "load"]], "Building Element Parameters": [[8, "building-element-parameters"]], "Aggregation": [[8, "aggregation"]], "Notation": [[9, "notation"]], "References": [[10, "references"]], "Task Object": [[11, "task-object"]], "Running a Task": [[11, "running-a-task"]], "Building Model and Converter Objects": [[11, "building-model-and-converter-objects"]], "Iterative Execution": [[11, "iterative-execution"]], "Other Methods": [[11, "other-methods"]], "How to Add an OPF Constraint": [[12, "how-to-add-an-opf-constraint"]], "Function and Derivatives": [[12, "function-and-derivatives"]], "Implementation": [[12, "implementation"]], "Using the New Constraint": [[12, "using-the-new-constraint"]], "Example": [[12, "example"]], "Original \u201cbox\u201d capability curves": [[12, "original-box-capability-curves"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} options": [[12, "oval-capability-curves-via-matpower-options"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} extension": [[12, "oval-capability-curves-via-matpower-extension"]], "See Also": [[12, "see-also"], [17, "see-also"], [18, "see-also"]], "How to Build the Documentation": [[13, "how-to-build-the-documentation"]], "Updating the Reference Manual": [[13, "updating-the-reference-manual"]], "Reference Manual Utility Functions": [[13, "reference-manual-utility-functions"]], "How to Create a New Element Type": [[17, "how-to-create-a-new-element-type"]], "DC Transmission Line": [[17, "dc-transmission-line"]], "Data Model Element": [[17, "data-model-element"], [19, "data-model-element"]], "DC Line Data Model": [[17, "id2"]], "Naming": [[17, "naming"]], "Connectivity": [[17, "connectivity"]], "Main Data Table": [[17, "main-data-table"]], "Output Values": [[17, "output-values"]], "Building the Element in Stages": [[17, "building-the-element-in-stages"]], "Pretty Printing": [[17, "pretty-printing"]], "OPF Subclass": [[17, "opf-subclass"]], "Data Model Converter Element": [[17, "data-model-converter-element"], [19, "data-model-converter-element"]], "Main Field in Data Source": [[17, "main-field-in-data-source"]], "Table Variable Map": [[17, "table-variable-map"]], "Custom Import/Export Functions": [[17, "custom-import-export-functions"]], "Network Model Element": [[17, "network-model-element"], [19, "network-model-element"]], "All Formulations": [[17, "all-formulations"], [19, "all-formulations"]], "AC Cartesian vs Polar Formulations": [[17, "ac-cartesian-vs-polar-formulations"], [19, "ac-cartesian-vs-polar-formulations"]], "Mathematical Model Element": [[17, "mathematical-model-element"], [19, "mathematical-model-element"]], "All Tasks and Formulations": [[17, "all-tasks-and-formulations"]], "Power Flow": [[17, "power-flow"]], "Optimal Power Flow": [[17, "optimal-power-flow"]], "Data Model Update": [[17, "data-model-update"]], "AC Optimal Power Flow": [[17, "ac-optimal-power-flow"]], "DC Optimal Power Flow": [[17, "dc-optimal-power-flow"]], "Using the New Element": [[17, "using-the-new-element"]], "How to Create an Extension": [[18, "how-to-create-an-extension"]], "Using the Extension": [[18, "using-the-extension"]], "A Test Gizmo Element Type": [[19, "a-test-gizmo-element-type"]], "3-Port Gizmo": [[19, "port-gizmo"]], "Gizmo Components/Parameters": [[19, "id2"]], "Gizmo Data Model": [[19, "id3"]], "Gizmo Extension": [[19, "gizmo-extension"]], "How to Run a Three-Phase Power Flow": [[20, "how-to-run-a-three-phase-power-flow"]], "Data Format": [[20, "data-format"]], "bus3p": [[20, "bus3p"]], "line3p": [[20, "line3p"]], "xfmr3p": [[20, "xfmr3p"]], "load3p": [[20, "load3p"]], "gen3p": [[20, "gen3p"]], "lc": [[20, "lc"]], "buslink": [[20, "buslink"]], "Example Cases": [[20, "example-cases"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Documentation": [[21, "matpower-documentation"]], "Home": [[21, null]], "Get Started": [[21, null]], "Overview": [[21, "overview"]], "Manuals": [[21, null]], "More Manuals": [[21, "more-manuals"]], "All Legacy PDF Manuals": [[21, "all-legacy-pdf-manuals"]], "How To Guides": [[21, null]], "Tech Notes": [[21, null]], "Publications": [[21, "publications"]], "Other Links": [[21, null]], "MIPS User\u2019s Manual": [[37, "mips-user-s-manual"]], "Reference": [[37, "reference"], [38, "reference"], [104, "reference"], [105, "reference"], [226, "reference"], [227, "reference"], [244, "reference"]], "Main MIPS Functions": [[38, "main-mips-functions"]], "Other Function": [[38, "other-function"]], "MIPS Examples": [[38, "mips-examples"]], "MIPS Tests": [[38, "mips-tests"]], "Private Functions": [[38, "private-functions"], [105, "private-functions"], [227, "private-functions"], [244, "private-functions"]], "MOST User\u2019s Manual": [[104, "most-user-s-manual"]], "Main MOST Functions": [[105, "main-most-functions"]], "Other Functions": [[105, "other-functions"], [244, "other-functions"], [464, "other-functions"], [738, "other-functions"]], "MOST Examples": [[105, "most-examples"]], "MOST Tests": [[105, "most-tests"]], "MP-Opt-Model\\mpom{} User\u2019s Manual": [[226, "mpom-user-s-manual"]], "MP-Opt-Model\\mpom{} Classes": [[227, "mpom-classes"]], "MP-Opt-Model\\mpom{} Functions": [[227, "mpom-functions"]], "Master Functions": [[227, "master-functions"]], "Utility Functions": [[227, "utility-functions"], [738, "utility-functions"]], "Options Handling Functions": [[227, "options-handling-functions"]], "Version Information Functions": [[227, "version-information-functions"]], "Solver Interfaces & Implementations": [[227, "solver-interfaces-implementations"]], "MIQP Solver": [[227, "miqp-solver"]], "NLEQ Solver": [[227, "nleq-solver"]], "NLP Solver": [[227, "nlp-solver"]], "PNE Solver": [[227, "pne-solver"]], "LP/QP Solver": [[227, "lp-qp-solver"]], "MP-Opt-Model\\mpom{} Examples": [[227, "mpom-examples"]], "MP-Opt-Model\\mpom{} Tests": [[227, "mpom-tests"]], "MP-Test User\u2019s Manual": [[243, "mp-test-user-s-manual"]], "Installation": [[243, "installation"]], "Usage": [[243, "usage"]], "Documentation": [[243, "documentation"]], "Contributing": [[243, "contributing"]], "License": [[243, "license"]], "Testing Functions": [[244, "testing-functions"]], "Tests of MP-Test": [[244, "tests-of-mp-test"]], "Classes": [[245, "classes"]], "Task Classes": [[245, "task-classes"]], "Core Task Classes": [[245, "core-task-classes"]], "Legacy Task Classes": [[245, "legacy-task-classes"]], "Data Model Classes": [[245, "data-model-classes"]], "Containers": [[245, "containers"], [245, "id1"], [245, "id3"], [245, "id5"]], "Elements": [[245, "elements"], [245, "id2"], [245, "id4"], [245, "id6"]], "Element Mixins": [[245, "element-mixins"]], "Data Model Converter Classes": [[245, "data-model-converter-classes"]], "Network Model Classes": [[245, "network-model-classes"]], "Mathematical Model Classes": [[245, "mathematical-model-classes"]], "Container Mixins": [[245, "container-mixins"]], "Miscellaneous Classes": [[245, "miscellaneous-classes"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Classes": [[245, "matpower-extension-classes"]], "Base": [[245, "base"]], "OPF Fixed Zonal Reserves Extension": [[245, "opf-fixed-zonal-reserves-extension"]], "Three-Phase Prototype Extension": [[245, "three-phase-prototype-extension"]], "Legacy DC Line Extension": [[245, "legacy-dc-line-extension"]], "Example User Constraint Extension": [[245, "example-user-constraint-extension"]], "Functions": [[464, "functions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Installer": [[464, "matpower-installer"]], "Top-Level Simulation Functions": [[464, "top-level-simulation-functions"], [738, "top-level-simulation-functions"]], "Legacy": [[738, "legacy"]], "Legacy Class": [[738, "legacy-class"]], "Legacy Functions": [[738, "legacy-functions"]], "Input/Output Functions": [[738, "input-output-functions"]], "Data Conversion Functions": [[738, "data-conversion-functions"]], "Power Flow Functions": [[738, "power-flow-functions"]], "Continuation Power Flow Functions": [[738, "continuation-power-flow-functions"]], "OPF and Wrapper Functions": [[738, "opf-and-wrapper-functions"]], "Other OPF Functions": [[738, "other-opf-functions"]], "OPF User Callback Functions": [[738, "opf-user-callback-functions"]], "Power Flow Derivative Functions": [[738, "power-flow-derivative-functions"]], "LP, QP, MILP & MIQP Solver Functions": [[738, "lp-qp-milp-miqp-solver-functions"]], "Matrix Building Functions": [[738, "matrix-building-functions"]], "Private Feature Detection Functions": [[738, "private-feature-detection-functions"]], "Legacy Tests": [[738, "legacy-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[738, "legacy-matpower-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[738, "legacy-matpower-test-data"]], "Previous Versions": [[739, "previous-versions"]], "Tests": [[740, "tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[740, "matpower-tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[740, "matpower-test-data"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Technical Notes": [[769, "matpower-technical-notes"]], "[TN1] Auctions and OPFs": [[769, "tn1-auctions-and-opfs"]], "[TN2] Flows/Derivatives": [[769, "tn2-flows-derivatives"]], "[TN3] Flows/Derivatives, Current": [[769, "tn3-flows-derivatives-current"]], "[TN4] Flows/Derivatives, Cartesian": [[769, "tn4-flows-derivatives-cartesian"]], "[TN5] MP-Element": [[769, "tn5-mp-element"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} User\u2019s Manual": [[770, "matpower-user-s-manual"]], "Legacy Framework": [[770, "legacy-framework"]], "New Flexible Framework": [[770, "new-flexible-framework"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Developer\u2019s Manual": [[5, "matpower-developer-s-manual"]], "generate_autodoc_stubs": [[14, "generate-autodoc-stubs"]], "generate_matpower_autodoc": [[15, "generate-matpower-autodoc"]], "generate_source_symlinks": [[16, "generate-source-symlinks"]], "have_feature_lu_vec": [[22, "have-feature-lu-vec"]], "have_feature_pardiso": [[23, "have-feature-pardiso"]], "have_feature_pardiso_legacy": [[24, "have-feature-pardiso-legacy"]], "have_feature_pardiso_object": [[25, "have-feature-pardiso-object"]], "mips": [[26, "mips"]], "mips_example1": [[27, "mips-example1"]], "mips_example2": [[28, "mips-example2"]], "mipsver": [[29, "mipsver"]], "mplinsolve": [[30, "mplinsolve"]], "qps_mips": [[31, "qps-mips"]], "t_mips": [[32, "t-mips"]], "t_mips_pardiso": [[33, "t-mips-pardiso"]], "t_mplinsolve": [[34, "t-mplinsolve"]], "t_qps_mips": [[35, "t-qps-mips"]], "test_mips": [[36, "test-mips"]], "addgen2mpc": [[39, "addgen2mpc"]], "addstorage": [[40, "addstorage"]], "addwind": [[41, "addwind"]], "apply_profile": [[42, "apply-profile"]], "c118swf": [[43, "c118swf"]], "ex_case3a": [[44, "ex-case3a"]], "ex_case3b": [[45, "ex-case3b"]], "ex_contab": [[46, "ex-contab"]], "ex_load_profile": [[47, "ex-load-profile"]], "ex_storage": [[48, "ex-storage"]], "ex_transmat": [[49, "ex-transmat"]], "ex_wind": [[50, "ex-wind"]], "ex_wind_profile": [[51, "ex-wind-profile"]], "ex_wind_profile_d": [[52, "ex-wind-profile-d"]], "ex_wind_uc": [[53, "ex-wind-uc"]], "ex_xgd": [[54, "ex-xgd"]], "ex_xgd_ramp": [[55, "ex-xgd-ramp"]], "ex_xgd_res": [[56, "ex-xgd-res"]], "ex_xgd_uc": [[57, "ex-xgd-uc"]], "filter_ramp_transitions": [[58, "filter-ramp-transitions"]], "getprofiles": [[59, "getprofiles"]], "idx_profile": [[60, "idx-profile"]], "loadgenericdata": [[61, "loadgenericdata"]], "loadmd": [[62, "loadmd"]], "loadstoragedata": [[63, "loadstoragedata"]], "loadxgendata": [[64, "loadxgendata"]], "md_init": [[65, "md-init"]], "most": [[66, "most"]], "most_ex1_ed": [[67, "most-ex1-ed"]], "most_ex2_dcopf": [[68, "most-ex2-dcopf"]], "most_ex3_dcopf_w_uc": [[69, "most-ex3-dcopf-w-uc"]], "most_ex4_dcopf_ss": [[70, "most-ex4-dcopf-ss"]], "most_ex5_mpopf": [[71, "most-ex5-mpopf"]], "most_ex6_uc": [[72, "most-ex6-uc"]], "most_ex7_suc": [[73, "most-ex7-suc"]], "most_summary": [[74, "most-summary"]], "mostver": [[75, "mostver"]], "mpoption_info_most": [[76, "mpoption-info-most"]], "plot_gen": [[77, "plot-gen"]], "plot_storage": [[78, "plot-storage"]], "plot_uc": [[79, "plot-uc"]], "plot_uc_data": [[80, "plot-uc-data"]], "t_case30_most": [[81, "t-case30-most"]], "t_case3_most": [[82, "t-case3-most"]], "t_case_tlmp": [[83, "t-case-tlmp"]], "t_case_tlmp_storage": [[84, "t-case-tlmp-storage"]], "t_most_30b_1_1_0": [[85, "t-most-30b-1-1-0"]], "t_most_30b_1_1_0_uc": [[86, "t-most-30b-1-1-0-uc"]], "t_most_30b_1_1_17": [[87, "t-most-30b-1-1-17"]], "t_most_30b_3_1_0": [[88, "t-most-30b-3-1-0"]], "t_most_30b_3_1_17": [[89, "t-most-30b-3-1-17"]], "t_most_3b_1_1_0": [[90, "t-most-3b-1-1-0"]], "t_most_3b_1_1_2": [[91, "t-most-3b-1-1-2"]], "t_most_3b_3_1_0": [[92, "t-most-3b-3-1-0"]], "t_most_3b_3_1_2": [[93, "t-most-3b-3-1-2"]], "t_most_fixed_res": [[94, "t-most-fixed-res"]], "t_most_mpopf": [[95, "t-most-mpopf"]], "t_most_sp": [[96, "t-most-sp"]], "t_most_spuc": [[97, "t-most-spuc"]], "t_most_suc": [[98, "t-most-suc"]], "t_most_tlmp": [[99, "t-most-tlmp"]], "t_most_uc": [[100, "t-most-uc"]], "t_most_w_ds": [[101, "t-most-w-ds"]], "test_most": [[102, "test-most"]], "uniformwindprofile": [[103, "uniformwindprofile"]], "mp.set_manager": [[106, "mp-set-manager"]], "mp.set_manager_opt_model": [[107, "mp-set-manager-opt-model"]], "mp.sm_lin_constraint": [[108, "mp-sm-lin-constraint"]], "mp.sm_nln_constraint": [[109, "mp-sm-nln-constraint"]], "mp.sm_nln_cost": [[110, "mp-sm-nln-cost"]], "mp.sm_quad_cost": [[111, "mp-sm-quad-cost"]], "mp.sm_variable": [[112, "mp-sm-variable"]], "mp_idx_manager": [[113, "mp-idx-manager"]], "opt_model": [[114, "opt-model"]], "artelys_knitro_options": [[115, "artelys-knitro-options"]], "convert_lin_constraint": [[116, "convert-lin-constraint"]], "convert_lin_constraint_multipliers": [[117, "convert-lin-constraint-multipliers"]], "cplex_options": [[118, "cplex-options"]], "glpk_options": [[119, "glpk-options"]], "gurobi_options": [[120, "gurobi-options"]], "gurobiver": [[121, "gurobiver"]], "have_feature_bpmpd": [[122, "have-feature-bpmpd"]], "have_feature_catchme": [[123, "have-feature-catchme"]], "have_feature_clp": [[124, "have-feature-clp"]], "have_feature_cplex": [[125, "have-feature-cplex"]], "have_feature_evalc": [[126, "have-feature-evalc"]], "have_feature_fmincon": [[127, "have-feature-fmincon"]], "have_feature_fmincon_ipm": [[128, "have-feature-fmincon-ipm"]], "have_feature_fsolve": [[129, "have-feature-fsolve"]], "have_feature_glpk": [[130, "have-feature-glpk"]], "have_feature_gurobi": [[131, "have-feature-gurobi"]], "have_feature_intlinprog": [[132, "have-feature-intlinprog"]], "have_feature_ipopt": [[133, "have-feature-ipopt"]], "have_feature_ipopt_auxdata": [[134, "have-feature-ipopt-auxdata"]], "have_feature_isequaln": [[135, "have-feature-isequaln"]], "have_feature_knitro": [[136, "have-feature-knitro"]], "have_feature_knitromatlab": [[137, "have-feature-knitromatlab"]], "have_feature_ktrlink": [[138, "have-feature-ktrlink"]], "have_feature_linprog": [[139, "have-feature-linprog"]], "have_feature_linprog_ds": [[140, "have-feature-linprog-ds"]], "have_feature_mosek": [[141, "have-feature-mosek"]], "have_feature_opti_clp": [[142, "have-feature-opti-clp"]], "have_feature_optim": [[143, "have-feature-optim"]], "have_feature_optimoptions": [[144, "have-feature-optimoptions"]], "have_feature_osqp": [[145, "have-feature-osqp"]], "have_feature_quadprog": [[146, "have-feature-quadprog"]], "have_feature_quadprog_ls": [[147, "have-feature-quadprog-ls"]], "have_feature_sdpt3": [[148, "have-feature-sdpt3"]], "have_feature_sedumi": [[149, "have-feature-sedumi"]], "have_feature_yalmip": [[150, "have-feature-yalmip"]], "ipopt_options": [[151, "ipopt-options"]], "knitrover": [[152, "knitrover"]], "miqps_cplex": [[153, "miqps-cplex"]], "miqps_glpk": [[154, "miqps-glpk"]], "miqps_gurobi": [[155, "miqps-gurobi"]], "miqps_master": [[156, "miqps-master"]], "miqps_mosek": [[157, "miqps-mosek"]], "miqps_ot": [[158, "miqps-ot"]], "mosek_options": [[159, "mosek-options"]], "mosek_symbcon": [[160, "mosek-symbcon"]], "mpomver": [[161, "mpomver"]], "mpopt2nleqopt": [[162, "mpopt2nleqopt"]], "mpopt2nlpopt": [[163, "mpopt2nlpopt"]], "mpopt2pneopt": [[164, "mpopt2pneopt"]], "mpopt2qpopt": [[165, "mpopt2qpopt"]], "nested_struct_copy": [[166, "nested-struct-copy"]], "nleqs_core": [[167, "nleqs-core"]], "nleqs_fd_newton": [[168, "nleqs-fd-newton"]], "nleqs_fsolve": [[169, "nleqs-fsolve"]], "nleqs_gauss_seidel": [[170, "nleqs-gauss-seidel"]], "nleqs_master": [[171, "nleqs-master"]], "nleqs_master_ex1": [[172, "nleqs-master-ex1"]], "nleqs_master_ex2": [[173, "nleqs-master-ex2"]], "nleqs_newton": [[174, "nleqs-newton"]], "nlp_consfcn": [[175, "nlp-consfcn"]], "nlp_costfcn": [[176, "nlp-costfcn"]], "nlp_hessfcn": [[177, "nlp-hessfcn"]], "nlps_fmincon": [[178, "nlps-fmincon"]], "nlps_ipopt": [[179, "nlps-ipopt"]], "nlps_knitro": [[180, "nlps-knitro"]], "nlps_master": [[181, "nlps-master"]], "nlps_master_ex1": [[182, "nlps-master-ex1"]], "nlps_master_ex2": [[183, "nlps-master-ex2"]], "osqp_options": [[184, "osqp-options"]], "osqpver": [[185, "osqpver"]], "pne_callback_default": [[186, "pne-callback-default"]], "pne_callback_nose": [[187, "pne-callback-nose"]], "pne_callback_target_lam": [[188, "pne-callback-target-lam"]], "pne_detect_events": [[189, "pne-detect-events"]], "pne_detected_event": [[190, "pne-detected-event"]], "pne_event_nose": [[191, "pne-event-nose"]], "pne_event_target_lam": [[192, "pne-event-target-lam"]], "pne_ex1": [[193, "pne-ex1"]], "pne_pfcn_arc_len": [[194, "pne-pfcn-arc-len"]], "pne_pfcn_natural": [[195, "pne-pfcn-natural"]], "pne_pfcn_pseudo_arc_len": [[196, "pne-pfcn-pseudo-arc-len"]], "pne_register_callbacks": [[197, "pne-register-callbacks"]], "pne_register_events": [[198, "pne-register-events"]], "pnes_master": [[199, "pnes-master"]], "qp_ex1": [[200, "qp-ex1"]], "qps_bpmpd": [[201, "qps-bpmpd"]], "qps_clp": [[202, "qps-clp"]], "qps_cplex": [[203, "qps-cplex"]], "qps_glpk": [[204, "qps-glpk"]], "qps_gurobi": [[205, "qps-gurobi"]], "qps_ipopt": [[206, "qps-ipopt"]], "qps_knitro": [[207, "qps-knitro"]], "qps_master": [[208, "qps-master"]], "qps_mosek": [[209, "qps-mosek"]], "qps_osqp": [[210, "qps-osqp"]], "qps_ot": [[211, "qps-ot"]], "t_miqps_master": [[212, "t-miqps-master"]], "t_nested_struct_copy": [[213, "t-nested-struct-copy"]], "t_nleqs_master": [[214, "t-nleqs-master"]], "t_nlps_master": [[215, "t-nlps-master"]], "t_om_solve_leqs": [[216, "t-om-solve-leqs"]], "t_om_solve_miqps": [[217, "t-om-solve-miqps"]], "t_om_solve_nleqs": [[218, "t-om-solve-nleqs"]], "t_om_solve_nlps": [[219, "t-om-solve-nlps"]], "t_om_solve_pne": [[220, "t-om-solve-pne"]], "t_om_solve_qps": [[221, "t-om-solve-qps"]], "t_opt_model": [[222, "t-opt-model"]], "t_pnes_master": [[223, "t-pnes-master"]], "t_qps_master": [[224, "t-qps-master"]], "test_mp_opt_model": [[225, "test-mp-opt-model"]], "have_feature": [[228, "have-feature"]], "have_feature_matlab": [[229, "have-feature-matlab"]], "have_feature_octave": [[230, "have-feature-octave"]], "mptestver": [[231, "mptestver"]], "t_begin": [[232, "t-begin"]], "t_end": [[233, "t-end"]], "t_file_match": [[234, "t-file-match"]], "t_have_feature": [[235, "t-have-feature"]], "t_is": [[236, "t-is"]], "t_ok": [[237, "t-ok"]], "t_run_tests": [[238, "t-run-tests"]], "t_skip": [[239, "t-skip"]], "t_str_match": [[240, "t-str-match"]], "t_test_fcns": [[241, "t-test-fcns"]], "test_mptest": [[242, "test-mptest"]], "mp.NODE_TYPE": [[246, "mp-node-type"]], "mp.cost_table": [[247, "mp-cost-table"]], "mp.cost_table_utils": [[248, "mp-cost-table-utils"]], "mp.data_model": [[249, "mp-data-model"]], "mp.data_model_cpf": [[250, "mp-data-model-cpf"]], "mp.data_model_opf": [[251, "mp-data-model-opf"]], "mp.dm_converter": [[252, "mp-dm-converter"]], "mp.dm_converter_mpc2": [[253, "mp-dm-converter-mpc2"]], "mp.dm_converter_mpc2_legacy": [[254, "mp-dm-converter-mpc2-legacy"]], "mp.dm_element": [[255, "mp-dm-element"]], "mp.dmc_element": [[256, "mp-dmc-element"]], "mp.dmce_branch_mpc2": [[257, "mp-dmce-branch-mpc2"]], "mp.dmce_bus3p_mpc2": [[258, "mp-dmce-bus3p-mpc2"]], "mp.dmce_bus_mpc2": [[259, "mp-dmce-bus-mpc2"]], "mp.dmce_buslink_mpc2": [[260, "mp-dmce-buslink-mpc2"]], "mp.dmce_gen3p_mpc2": [[261, "mp-dmce-gen3p-mpc2"]], "mp.dmce_gen_mpc2": [[262, "mp-dmce-gen-mpc2"]], "mp.dmce_legacy_dcline_mpc2": [[263, "mp-dmce-legacy-dcline-mpc2"]], "mp.dmce_line3p_mpc2": [[264, "mp-dmce-line3p-mpc2"]], "mp.dmce_load3p_mpc2": [[265, "mp-dmce-load3p-mpc2"]], "mp.dmce_load_mpc2": [[266, "mp-dmce-load-mpc2"]], "mp.dmce_reserve_gen_mpc2": [[267, "mp-dmce-reserve-gen-mpc2"]], "mp.dmce_reserve_zone_mpc2": [[268, "mp-dmce-reserve-zone-mpc2"]], "mp.dmce_shunt_mpc2": [[269, "mp-dmce-shunt-mpc2"]], "mp.dmce_xfmr3p_mpc2": [[270, "mp-dmce-xfmr3p-mpc2"]], "mp.dme_branch": [[271, "mp-dme-branch"]], "mp.dme_branch_opf": [[272, "mp-dme-branch-opf"]], "mp.dme_bus": [[273, "mp-dme-bus"]], "mp.dme_bus3p": [[274, "mp-dme-bus3p"]], "mp.dme_bus3p_opf": [[275, "mp-dme-bus3p-opf"]], "mp.dme_bus_opf": [[276, "mp-dme-bus-opf"]], "mp.dme_buslink": [[277, "mp-dme-buslink"]], "mp.dme_buslink_opf": [[278, "mp-dme-buslink-opf"]], "mp.dme_gen": [[279, "mp-dme-gen"]], "mp.dme_gen3p": [[280, "mp-dme-gen3p"]], "mp.dme_gen3p_opf": [[281, "mp-dme-gen3p-opf"]], "mp.dme_gen_opf": [[282, "mp-dme-gen-opf"]], "mp.dme_legacy_dcline": [[283, "mp-dme-legacy-dcline"]], "mp.dme_legacy_dcline_opf": [[284, "mp-dme-legacy-dcline-opf"]], "mp.dme_line3p": [[285, "mp-dme-line3p"]], "mp.dme_line3p_opf": [[286, "mp-dme-line3p-opf"]], "mp.dme_load": [[287, "mp-dme-load"]], "mp.dme_load3p": [[288, "mp-dme-load3p"]], "mp.dme_load3p_opf": [[289, "mp-dme-load3p-opf"]], "mp.dme_load_cpf": [[290, "mp-dme-load-cpf"]], "mp.dme_load_opf": [[291, "mp-dme-load-opf"]], "mp.dme_reserve_gen": [[292, "mp-dme-reserve-gen"]], "mp.dme_reserve_zone": [[293, "mp-dme-reserve-zone"]], "mp.dme_shared_opf": [[294, "mp-dme-shared-opf"]], "mp.dme_shunt": [[295, "mp-dme-shunt"]], "mp.dme_shunt_cpf": [[296, "mp-dme-shunt-cpf"]], "mp.dme_shunt_opf": [[297, "mp-dme-shunt-opf"]], "mp.dme_xfmr3p": [[298, "mp-dme-xfmr3p"]], "mp.dme_xfmr3p_opf": [[299, "mp-dme-xfmr3p-opf"]], "mp.element_container": [[300, "mp-element-container"]], "mp.extension": [[301, "mp-extension"]], "mp.form": [[302, "mp-form"]], "mp.form_ac": [[303, "mp-form-ac"]], "mp.form_acc": [[304, "mp-form-acc"]], "mp.form_acp": [[305, "mp-form-acp"]], "mp.form_dc": [[306, "mp-form-dc"]], "mp.mapped_array": [[307, "mp-mapped-array"]], "mp.math_model": [[308, "mp-math-model"]], "mp.math_model_cpf_acc": [[309, "mp-math-model-cpf-acc"]], "mp.math_model_cpf_acci": [[310, "mp-math-model-cpf-acci"]], "mp.math_model_cpf_accs": [[311, "mp-math-model-cpf-accs"]], "mp.math_model_cpf_acp": [[312, "mp-math-model-cpf-acp"]], "mp.math_model_cpf_acpi": [[313, "mp-math-model-cpf-acpi"]], "mp.math_model_cpf_acps": [[314, "mp-math-model-cpf-acps"]], "mp.math_model_opf": [[315, "mp-math-model-opf"]], "mp.math_model_opf_ac": [[316, "mp-math-model-opf-ac"]], "mp.math_model_opf_acc": [[317, "mp-math-model-opf-acc"]], "mp.math_model_opf_acci": [[318, "mp-math-model-opf-acci"]], "mp.math_model_opf_acci_legacy": [[319, "mp-math-model-opf-acci-legacy"]], "mp.math_model_opf_accs": [[320, "mp-math-model-opf-accs"]], "mp.math_model_opf_accs_legacy": [[321, "mp-math-model-opf-accs-legacy"]], "mp.math_model_opf_acp": [[322, "mp-math-model-opf-acp"]], "mp.math_model_opf_acpi": [[323, "mp-math-model-opf-acpi"]], "mp.math_model_opf_acpi_legacy": [[324, "mp-math-model-opf-acpi-legacy"]], "mp.math_model_opf_acps": [[325, "mp-math-model-opf-acps"]], "mp.math_model_opf_acps_legacy": [[326, "mp-math-model-opf-acps-legacy"]], "mp.math_model_opf_dc": [[327, "mp-math-model-opf-dc"]], "mp.math_model_opf_dc_legacy": [[328, "mp-math-model-opf-dc-legacy"]], "mp.math_model_pf": [[329, "mp-math-model-pf"]], "mp.math_model_pf_ac": [[330, "mp-math-model-pf-ac"]], "mp.math_model_pf_acci": [[331, "mp-math-model-pf-acci"]], "mp.math_model_pf_accs": [[332, "mp-math-model-pf-accs"]], "mp.math_model_pf_acpi": [[333, "mp-math-model-pf-acpi"]], "mp.math_model_pf_acps": [[334, "mp-math-model-pf-acps"]], "mp.math_model_pf_dc": [[335, "mp-math-model-pf-dc"]], "mp.mm_element": [[336, "mp-mm-element"]], "mp.mm_shared_opf_legacy": [[337, "mp-mm-shared-opf-legacy"]], "mp.mm_shared_pfcpf": [[338, "mp-mm-shared-pfcpf"]], "mp.mm_shared_pfcpf_ac": [[339, "mp-mm-shared-pfcpf-ac"]], "mp.mm_shared_pfcpf_ac_i": [[340, "mp-mm-shared-pfcpf-ac-i"]], "mp.mm_shared_pfcpf_acc": [[341, "mp-mm-shared-pfcpf-acc"]], "mp.mm_shared_pfcpf_acci": [[342, "mp-mm-shared-pfcpf-acci"]], "mp.mm_shared_pfcpf_accs": [[343, "mp-mm-shared-pfcpf-accs"]], "mp.mm_shared_pfcpf_acp": [[344, "mp-mm-shared-pfcpf-acp"]], "mp.mm_shared_pfcpf_acpi": [[345, "mp-mm-shared-pfcpf-acpi"]], "mp.mm_shared_pfcpf_acps": [[346, "mp-mm-shared-pfcpf-acps"]], "mp.mm_shared_pfcpf_dc": [[347, "mp-mm-shared-pfcpf-dc"]], "mp.mme_branch": [[348, "mp-mme-branch"]], "mp.mme_branch_opf": [[349, "mp-mme-branch-opf"]], "mp.mme_branch_opf_ac": [[350, "mp-mme-branch-opf-ac"]], "mp.mme_branch_opf_acc": [[351, "mp-mme-branch-opf-acc"]], "mp.mme_branch_opf_acp": [[352, "mp-mme-branch-opf-acp"]], "mp.mme_branch_opf_dc": [[353, "mp-mme-branch-opf-dc"]], "mp.mme_branch_pf_ac": [[354, "mp-mme-branch-pf-ac"]], "mp.mme_branch_pf_dc": [[355, "mp-mme-branch-pf-dc"]], "mp.mme_bus": [[356, "mp-mme-bus"]], "mp.mme_bus3p": [[357, "mp-mme-bus3p"]], "mp.mme_bus3p_opf_acc": [[358, "mp-mme-bus3p-opf-acc"]], "mp.mme_bus3p_opf_acp": [[359, "mp-mme-bus3p-opf-acp"]], "mp.mme_bus_opf_ac": [[360, "mp-mme-bus-opf-ac"]], "mp.mme_bus_opf_acc": [[361, "mp-mme-bus-opf-acc"]], "mp.mme_bus_opf_acp": [[362, "mp-mme-bus-opf-acp"]], "mp.mme_bus_opf_dc": [[363, "mp-mme-bus-opf-dc"]], "mp.mme_bus_pf_ac": [[364, "mp-mme-bus-pf-ac"]], "mp.mme_bus_pf_dc": [[365, "mp-mme-bus-pf-dc"]], "mp.mme_buslink": [[366, "mp-mme-buslink"]], "mp.mme_buslink_opf": [[367, "mp-mme-buslink-opf"]], "mp.mme_buslink_opf_acc": [[368, "mp-mme-buslink-opf-acc"]], "mp.mme_buslink_opf_acp": [[369, "mp-mme-buslink-opf-acp"]], "mp.mme_buslink_pf_ac": [[370, "mp-mme-buslink-pf-ac"]], "mp.mme_buslink_pf_acc": [[371, "mp-mme-buslink-pf-acc"]], "mp.mme_buslink_pf_acp": [[372, "mp-mme-buslink-pf-acp"]], "mp.mme_gen": [[373, "mp-mme-gen"]], "mp.mme_gen3p": [[374, "mp-mme-gen3p"]], "mp.mme_gen3p_opf": [[375, "mp-mme-gen3p-opf"]], "mp.mme_gen_opf": [[376, "mp-mme-gen-opf"]], "mp.mme_gen_opf_ac": [[377, "mp-mme-gen-opf-ac"]], "mp.mme_gen_opf_ac_oval": [[378, "mp-mme-gen-opf-ac-oval"]], "mp.mme_gen_opf_dc": [[379, "mp-mme-gen-opf-dc"]], "mp.mme_gen_pf_ac": [[380, "mp-mme-gen-pf-ac"]], "mp.mme_gen_pf_dc": [[381, "mp-mme-gen-pf-dc"]], "mp.mme_legacy_dcline": [[382, "mp-mme-legacy-dcline"]], "mp.mme_legacy_dcline_opf": [[383, "mp-mme-legacy-dcline-opf"]], "mp.mme_legacy_dcline_opf_ac": [[384, "mp-mme-legacy-dcline-opf-ac"]], "mp.mme_legacy_dcline_opf_dc": [[385, "mp-mme-legacy-dcline-opf-dc"]], "mp.mme_legacy_dcline_pf_ac": [[386, "mp-mme-legacy-dcline-pf-ac"]], "mp.mme_legacy_dcline_pf_dc": [[387, "mp-mme-legacy-dcline-pf-dc"]], "mp.mme_line3p": [[388, "mp-mme-line3p"]], "mp.mme_line3p_opf": [[389, "mp-mme-line3p-opf"]], "mp.mme_load": [[390, "mp-mme-load"]], "mp.mme_load_cpf": [[391, "mp-mme-load-cpf"]], "mp.mme_load_pf_ac": [[392, "mp-mme-load-pf-ac"]], "mp.mme_load_pf_dc": [[393, "mp-mme-load-pf-dc"]], "mp.mme_reserve_gen": [[394, "mp-mme-reserve-gen"]], "mp.mme_reserve_zone": [[395, "mp-mme-reserve-zone"]], "mp.mme_shunt": [[396, "mp-mme-shunt"]], "mp.mme_shunt_cpf": [[397, "mp-mme-shunt-cpf"]], "mp.mme_shunt_pf_ac": [[398, "mp-mme-shunt-pf-ac"]], "mp.mme_shunt_pf_dc": [[399, "mp-mme-shunt-pf-dc"]], "mp.mme_xfmr3p": [[400, "mp-mme-xfmr3p"]], "mp.mme_xfmr3p_opf": [[401, "mp-mme-xfmr3p-opf"]], "mp.net_model": [[402, "mp-net-model"]], "mp.net_model_ac": [[403, "mp-net-model-ac"]], "mp.net_model_acc": [[404, "mp-net-model-acc"]], "mp.net_model_acp": [[405, "mp-net-model-acp"]], "mp.net_model_dc": [[406, "mp-net-model-dc"]], "mp.nm_element": [[407, "mp-nm-element"]], "mp.nme_branch": [[408, "mp-nme-branch"]], "mp.nme_branch_ac": [[409, "mp-nme-branch-ac"]], "mp.nme_branch_acc": [[410, "mp-nme-branch-acc"]], "mp.nme_branch_acp": [[411, "mp-nme-branch-acp"]], "mp.nme_branch_dc": [[412, "mp-nme-branch-dc"]], "mp.nme_bus": [[413, "mp-nme-bus"]], "mp.nme_bus3p": [[414, "mp-nme-bus3p"]], "mp.nme_bus3p_acc": [[415, "mp-nme-bus3p-acc"]], "mp.nme_bus3p_acp": [[416, "mp-nme-bus3p-acp"]], "mp.nme_bus_acc": [[417, "mp-nme-bus-acc"]], "mp.nme_bus_acp": [[418, "mp-nme-bus-acp"]], "mp.nme_bus_dc": [[419, "mp-nme-bus-dc"]], "mp.nme_buslink": [[420, "mp-nme-buslink"]], "mp.nme_buslink_acc": [[421, "mp-nme-buslink-acc"]], "mp.nme_buslink_acp": [[422, "mp-nme-buslink-acp"]], "mp.nme_gen": [[423, "mp-nme-gen"]], "mp.nme_gen3p": [[424, "mp-nme-gen3p"]], "mp.nme_gen3p_acc": [[425, "mp-nme-gen3p-acc"]], "mp.nme_gen3p_acp": [[426, "mp-nme-gen3p-acp"]], "mp.nme_gen_ac": [[427, "mp-nme-gen-ac"]], "mp.nme_gen_acc": [[428, "mp-nme-gen-acc"]], "mp.nme_gen_acp": [[429, "mp-nme-gen-acp"]], "mp.nme_gen_dc": [[430, "mp-nme-gen-dc"]], "mp.nme_legacy_dcline": [[431, "mp-nme-legacy-dcline"]], "mp.nme_legacy_dcline_ac": [[432, "mp-nme-legacy-dcline-ac"]], "mp.nme_legacy_dcline_acc": [[433, "mp-nme-legacy-dcline-acc"]], "mp.nme_legacy_dcline_acp": [[434, "mp-nme-legacy-dcline-acp"]], "mp.nme_legacy_dcline_dc": [[435, "mp-nme-legacy-dcline-dc"]], "mp.nme_line3p": [[436, "mp-nme-line3p"]], "mp.nme_load": [[437, "mp-nme-load"]], "mp.nme_load3p": [[438, "mp-nme-load3p"]], "mp.nme_load_ac": [[439, "mp-nme-load-ac"]], "mp.nme_load_acc": [[440, "mp-nme-load-acc"]], "mp.nme_load_acp": [[441, "mp-nme-load-acp"]], "mp.nme_load_dc": [[442, "mp-nme-load-dc"]], "mp.nme_shunt": [[443, "mp-nme-shunt"]], "mp.nme_shunt_ac": [[444, "mp-nme-shunt-ac"]], "mp.nme_shunt_acc": [[445, "mp-nme-shunt-acc"]], "mp.nme_shunt_acp": [[446, "mp-nme-shunt-acp"]], "mp.nme_shunt_dc": [[447, "mp-nme-shunt-dc"]], "mp.nme_xfmr3p": [[448, "mp-nme-xfmr3p"]], "mp.sm_legacy_cost": [[449, "mp-sm-legacy-cost"]], "mp.task": [[450, "mp-task"]], "mp.task_cpf": [[451, "mp-task-cpf"]], "mp.task_cpf_legacy": [[452, "mp-task-cpf-legacy"]], "mp.task_opf": [[453, "mp-task-opf"]], "mp.task_opf_legacy": [[454, "mp-task-opf-legacy"]], "mp.task_pf": [[455, "mp-task-pf"]], "mp.task_pf_legacy": [[456, "mp-task-pf-legacy"]], "mp.task_shared_legacy": [[457, "mp-task-shared-legacy"]], "mp.xt_3p": [[458, "mp-xt-3p"]], "mp.xt_legacy_dcline": [[459, "mp-xt-legacy-dcline"]], "mp.xt_oval_cap_curve": [[460, "mp-xt-oval-cap-curve"]], "mp.xt_reserves": [[461, "mp-xt-reserves"]], "mp_table": [[462, "mp-table"]], "mp_table_subclass": [[463, "mp-table-subclass"]], "Limitations": [[463, null]], "install_matpower": [[465, "install-matpower"]], "mp.load_dm": [[466, "mp-load-dm"]], "mp_table_class": [[467, "mp-table-class"]], "run_cpf": [[468, "run-cpf"]], "run_mp": [[469, "run-mp"]], "run_opf": [[470, "run-opf"]], "run_pf": [[471, "run-pf"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Reference Manual": [[472, "matpower-reference-manual"]], "opf_model": [[474, "opf-model"]], "add_userfcn": [[475, "add-userfcn"]], "apply_changes": [[476, "apply-changes"]], "bustypes": [[477, "bustypes"]], "calc_branch_angle": [[478, "calc-branch-angle"]], "calc_v_i_sum": [[479, "calc-v-i-sum"]], "calc_v_pq_sum": [[480, "calc-v-pq-sum"]], "calc_v_y_sum": [[481, "calc-v-y-sum"]], "case_info": [[482, "case-info"]], "caseformat": [[483, "caseformat"]], "cdf2mpc": [[484, "cdf2mpc"]], "compare_case": [[485, "compare-case"]], "connected_components": [[486, "connected-components"]], "cpf_corrector": [[487, "cpf-corrector"]], "cpf_current_mpc": [[488, "cpf-current-mpc"]], "cpf_default_callback": [[489, "cpf-default-callback"]], "cpf_detect_events": [[490, "cpf-detect-events"]], "cpf_flim_event": [[491, "cpf-flim-event"]], "cpf_flim_event_cb": [[492, "cpf-flim-event-cb"]], "cpf_nose_event": [[493, "cpf-nose-event"]], "cpf_nose_event_cb": [[494, "cpf-nose-event-cb"]], "cpf_p": [[495, "cpf-p"]], "cpf_p_jac": [[496, "cpf-p-jac"]], "cpf_plim_event": [[497, "cpf-plim-event"]], "cpf_plim_event_cb": [[498, "cpf-plim-event-cb"]], "cpf_predictor": [[499, "cpf-predictor"]], "cpf_qlim_event": [[500, "cpf-qlim-event"]], "cpf_qlim_event_cb": [[501, "cpf-qlim-event-cb"]], "cpf_register_callback": [[502, "cpf-register-callback"]], "cpf_register_event": [[503, "cpf-register-event"]], "cpf_tangent": [[504, "cpf-tangent"]], "cpf_target_lam_event": [[505, "cpf-target-lam-event"]], "cpf_target_lam_event_cb": [[506, "cpf-target-lam-event-cb"]], "cpf_vlim_event": [[507, "cpf-vlim-event"]], "cpf_vlim_event_cb": [[508, "cpf-vlim-event-cb"]], "d2Abr_dV2": [[509, "d2abr-dv2"]], "d2Ibr_dV2": [[510, "d2ibr-dv2"]], "d2Imis_dV2": [[511, "d2imis-dv2"]], "d2Imis_dVdSg": [[512, "d2imis-dvdsg"]], "d2Sbr_dV2": [[513, "d2sbr-dv2"]], "d2Sbus_dV2": [[514, "d2sbus-dv2"]], "dAbr_dV": [[515, "dabr-dv"]], "dIbr_dV": [[516, "dibr-dv"]], "dImis_dV": [[517, "dimis-dv"]], "dSbr_dV": [[518, "dsbr-dv"]], "dSbus_dV": [[519, "dsbus-dv"]], "dcopf": [[520, "dcopf"]], "dcopf_solver": [[521, "dcopf-solver"]], "dcpf": [[522, "dcpf"]], "define_constants": [[523, "define-constants"]], "e2i_data": [[524, "e2i-data"]], "e2i_field": [[525, "e2i-field"]], "ext2int": [[526, "ext2int"]], "extract_islands": [[527, "extract-islands"]], "fdpf": [[528, "fdpf"]], "feval_w_path": [[529, "feval-w-path"]], "find_bridges": [[530, "find-bridges"]], "find_islands": [[531, "find-islands"]], "fmincopf": [[532, "fmincopf"]], "gausspf": [[533, "gausspf"]], "genfuels": [[534, "genfuels"]], "gentypes": [[535, "gentypes"]], "get_losses": [[536, "get-losses"]], "get_reorder": [[537, "get-reorder"]], "hasPQcap": [[538, "haspqcap"]], "have_feature_e4st": [[539, "have-feature-e4st"]], "have_feature_minopf": [[540, "have-feature-minopf"]], "have_feature_most": [[541, "have-feature-most"]], "have_feature_mp_core": [[542, "have-feature-mp-core"]], "have_feature_pdipmopf": [[543, "have-feature-pdipmopf"]], "have_feature_regexp_split": [[544, "have-feature-regexp-split"]], "have_feature_scpdipmopf": [[545, "have-feature-scpdipmopf"]], "have_feature_sdp_pf": [[546, "have-feature-sdp-pf"]], "have_feature_smartmarket": [[547, "have-feature-smartmarket"]], "have_feature_syngrid": [[548, "have-feature-syngrid"]], "have_feature_table": [[549, "have-feature-table"]], "have_feature_tralmopf": [[550, "have-feature-tralmopf"]], "i2e_data": [[551, "i2e-data"]], "i2e_field": [[552, "i2e-field"]], "idx_brch": [[553, "idx-brch"]], "idx_bus": [[554, "idx-bus"]], "idx_cost": [[555, "idx-cost"]], "idx_ct": [[556, "idx-ct"]], "idx_dcline": [[557, "idx-dcline"]], "idx_gen": [[558, "idx-gen"]], "int2ext": [[559, "int2ext"]], "isload": [[560, "isload"]], "load2disp": [[561, "load2disp"]], "loadcase": [[562, "loadcase"]], "loadshed": [[563, "loadshed"]], "makeAang": [[564, "makeaang"]], "makeApq": [[565, "makeapq"]], "makeAvl": [[566, "makeavl"]], "makeAy": [[567, "makeay"]], "makeB": [[568, "makeb"]], "makeBdc": [[569, "makebdc"]], "makeJac": [[570, "makejac"]], "makeLODF": [[571, "makelodf"]], "makePTDF": [[572, "makeptdf"]], "makeSbus": [[573, "makesbus"]], "makeSdzip": [[574, "makesdzip"]], "makeYbus": [[575, "makeybus"]], "make_vcorr": [[576, "make-vcorr"]], "make_zpv": [[577, "make-zpv"]], "margcost": [[578, "margcost"]], "miqps_matpower": [[579, "miqps-matpower"]], "modcost": [[580, "modcost"]], "mpoption": [[581, "mpoption"]], "mpoption_info_clp": [[582, "mpoption-info-clp"]], "mpoption_info_cplex": [[583, "mpoption-info-cplex"]], "mpoption_info_fmincon": [[584, "mpoption-info-fmincon"]], "mpoption_info_glpk": [[585, "mpoption-info-glpk"]], "mpoption_info_gurobi": [[586, "mpoption-info-gurobi"]], "mpoption_info_intlinprog": [[587, "mpoption-info-intlinprog"]], "mpoption_info_ipopt": [[588, "mpoption-info-ipopt"]], "mpoption_info_knitro": [[589, "mpoption-info-knitro"]], "mpoption_info_linprog": [[590, "mpoption-info-linprog"]], "mpoption_info_mips": [[591, "mpoption-info-mips"]], "mpoption_info_mosek": [[592, "mpoption-info-mosek"]], "mpoption_info_osqp": [[593, "mpoption-info-osqp"]], "mpoption_info_quadprog": [[594, "mpoption-info-quadprog"]], "mpoption_old": [[595, "mpoption-old"]], "mpver": [[596, "mpver"]], "newtonpf": [[597, "newtonpf"]], "newtonpf_I_cart": [[598, "newtonpf-i-cart"]], "newtonpf_I_hybrid": [[599, "newtonpf-i-hybrid"]], "newtonpf_I_polar": [[600, "newtonpf-i-polar"]], "newtonpf_S_cart": [[601, "newtonpf-s-cart"]], "newtonpf_S_hybrid": [[602, "newtonpf-s-hybrid"]], "nlpopf_solver": [[603, "nlpopf-solver"]], "opf": [[604, "opf"]], "opf_args": [[605, "opf-args"]], "opf_branch_ang_fcn": [[606, "opf-branch-ang-fcn"]], "opf_branch_ang_hess": [[607, "opf-branch-ang-hess"]], "opf_branch_flow_fcn": [[608, "opf-branch-flow-fcn"]], "opf_branch_flow_hess": [[609, "opf-branch-flow-hess"]], "opf_current_balance_fcn": [[610, "opf-current-balance-fcn"]], "opf_current_balance_hess": [[611, "opf-current-balance-hess"]], "opf_execute": [[612, "opf-execute"]], "opf_gen_cost_fcn": [[613, "opf-gen-cost-fcn"]], "opf_legacy_user_cost_fcn": [[614, "opf-legacy-user-cost-fcn"]], "opf_nle_fcn1": [[615, "opf-nle-fcn1"]], "opf_nle_hess1": [[616, "opf-nle-hess1"]], "opf_power_balance_fcn": [[617, "opf-power-balance-fcn"]], "opf_power_balance_hess": [[618, "opf-power-balance-hess"]], "opf_setup": [[619, "opf-setup"]], "opf_veq_fcn": [[620, "opf-veq-fcn"]], "opf_veq_hess": [[621, "opf-veq-hess"]], "opf_vlim_fcn": [[622, "opf-vlim-fcn"]], "opf_vlim_hess": [[623, "opf-vlim-hess"]], "opf_vref_fcn": [[624, "opf-vref-fcn"]], "opf_vref_hess": [[625, "opf-vref-hess"]], "order_radial": [[626, "order-radial"]], "pfsoln": [[627, "pfsoln"]], "poly2pwl": [[628, "poly2pwl"]], "polycost": [[629, "polycost"]], "pqcost": [[630, "pqcost"]], "printpf": [[631, "printpf"]], "psse2mpc": [[632, "psse2mpc"]], "psse_convert": [[633, "psse-convert"]], "psse_convert_hvdc": [[634, "psse-convert-hvdc"]], "psse_convert_xfmr": [[635, "psse-convert-xfmr"]], "psse_parse": [[636, "psse-parse"]], "psse_parse_line": [[637, "psse-parse-line"]], "psse_parse_section": [[638, "psse-parse-section"]], "psse_read": [[639, "psse-read"]], "qps_matpower": [[640, "qps-matpower"]], "radial_pf": [[641, "radial-pf"]], "remove_userfcn": [[642, "remove-userfcn"]], "run_userfcn": [[643, "run-userfcn"]], "runcpf": [[644, "runcpf"]], "rundcopf": [[645, "rundcopf"]], "rundcpf": [[646, "rundcpf"]], "runduopf": [[647, "runduopf"]], "runopf": [[648, "runopf"]], "runopf_w_res": [[649, "runopf-w-res"]], "runpf": [[650, "runpf"]], "runuopf": [[651, "runuopf"]], "save2psse": [[652, "save2psse"]], "savecase": [[653, "savecase"]], "savechgtab": [[654, "savechgtab"]], "scale_load": [[655, "scale-load"]], "set_reorder": [[656, "set-reorder"]], "t_apply_changes": [[657, "t-apply-changes"]], "t_auction_case": [[658, "t-auction-case"]], "t_auction_minopf": [[659, "t-auction-minopf"]], "t_auction_mips": [[660, "t-auction-mips"]], "t_auction_tspopf_pdipm": [[661, "t-auction-tspopf-pdipm"]], "t_case30_userfcns": [[662, "t-case30-userfcns"]], "t_case9_dcline": [[663, "t-case9-dcline"]], "t_case9_opf": [[664, "t-case9-opf"]], "t_case9_opfv2": [[665, "t-case9-opfv2"]], "t_case9_pf": [[666, "t-case9-pf"]], "t_case9_pfv2": [[667, "t-case9-pfv2"]], "t_case9_save2psse": [[668, "t-case9-save2psse"]], "t_case_ext": [[669, "t-case-ext"]], "t_case_int": [[670, "t-case-int"]], "t_chgtab": [[671, "t-chgtab"]], "t_cpf": [[672, "t-cpf"]], "t_cpf_cb1": [[673, "t-cpf-cb1"]], "t_cpf_cb2": [[674, "t-cpf-cb2"]], "t_dcline": [[675, "t-dcline"]], "t_ext2int2ext": [[676, "t-ext2int2ext"]], "t_feval_w_path": [[677, "t-feval-w-path"]], "t_get_losses": [[678, "t-get-losses"]], "t_hasPQcap": [[679, "t-haspqcap"]], "t_hessian": [[680, "t-hessian"]], "t_islands": [[681, "t-islands"]], "t_jacobian": [[682, "t-jacobian"]], "t_load2disp": [[683, "t-load2disp"]], "t_loadcase": [[684, "t-loadcase"]], "t_makeLODF": [[685, "t-makelodf"]], "t_makePTDF": [[686, "t-makeptdf"]], "t_margcost": [[687, "t-margcost"]], "t_miqps_matpower": [[688, "t-miqps-matpower"]], "t_modcost": [[689, "t-modcost"]], "t_mpoption": [[690, "t-mpoption"]], "t_mpoption_ov": [[691, "t-mpoption-ov"]], "t_off2case": [[692, "t-off2case"]], "t_opf_dc_bpmpd": [[693, "t-opf-dc-bpmpd"]], "t_opf_dc_clp": [[694, "t-opf-dc-clp"]], "t_opf_dc_cplex": [[695, "t-opf-dc-cplex"]], "t_opf_dc_default": [[696, "t-opf-dc-default"]], "t_opf_dc_glpk": [[697, "t-opf-dc-glpk"]], "t_opf_dc_gurobi": [[698, "t-opf-dc-gurobi"]], "t_opf_dc_ipopt": [[699, "t-opf-dc-ipopt"]], "t_opf_dc_mips": [[700, "t-opf-dc-mips"]], "t_opf_dc_mips_sc": [[701, "t-opf-dc-mips-sc"]], "t_opf_dc_mosek": [[702, "t-opf-dc-mosek"]], "t_opf_dc_osqp": [[703, "t-opf-dc-osqp"]], "t_opf_dc_ot": [[704, "t-opf-dc-ot"]], "t_opf_default": [[705, "t-opf-default"]], "t_opf_fmincon": [[706, "t-opf-fmincon"]], "t_opf_ipopt": [[707, "t-opf-ipopt"]], "t_opf_knitro": [[708, "t-opf-knitro"]], "t_opf_minopf": [[709, "t-opf-minopf"]], "t_opf_mips": [[710, "t-opf-mips"]], "t_opf_model": [[711, "t-opf-model"]], "t_opf_softlims": [[712, "t-opf-softlims"]], "t_opf_tspopf_pdipm": [[713, "t-opf-tspopf-pdipm"]], "t_opf_tspopf_scpdipm": [[714, "t-opf-tspopf-scpdipm"]], "t_opf_tspopf_tralm": [[715, "t-opf-tspopf-tralm"]], "t_opf_userfcns": [[716, "t-opf-userfcns"]], "t_pf_ac": [[717, "t-pf-ac"]], "t_pf_dc": [[718, "t-pf-dc"]], "t_pf_radial": [[719, "t-pf-radial"]], "t_printpf": [[720, "t-printpf"]], "t_psse": [[721, "t-psse"]], "t_qps_matpower": [[722, "t-qps-matpower"]], "t_runmarket": [[723, "t-runmarket"]], "t_runopf_w_res": [[724, "t-runopf-w-res"]], "t_scale_load": [[725, "t-scale-load"]], "t_total_load": [[726, "t-total-load"]], "t_totcost": [[727, "t-totcost"]], "t_vdep_load": [[728, "t-vdep-load"]], "toggle_dcline": [[729, "toggle-dcline"]], "toggle_iflims": [[730, "toggle-iflims"]], "toggle_reserves": [[731, "toggle-reserves"]], "toggle_softlims": [[732, "toggle-softlims"]], "total_load": [[733, "total-load"]], "totcost": [[734, "totcost"]], "uopf": [[735, "uopf"]], "update_mupq": [[736, "update-mupq"]], "zgausspf": [[737, "zgausspf"]], "mp_foo_table": [[741, "mp-foo-table"]], "t_case3p_a": [[742, "t-case3p-a"]], "t_case3p_b": [[743, "t-case3p-b"]], "t_case3p_c": [[744, "t-case3p-c"]], "t_case3p_d": [[745, "t-case3p-d"]], "t_case3p_e": [[746, "t-case3p-e"]], "t_case3p_f": [[747, "t-case3p-f"]], "t_case3p_g": [[748, "t-case3p-g"]], "t_case3p_h": [[749, "t-case3p-h"]], "t_case9_gizmo": [[750, "t-case9-gizmo"]], "t_dmc_element": [[751, "t-dmc-element"]], "t_mp_data_model": [[752, "t-mp-data-model"]], "t_mp_dm_converter_mpc2": [[753, "t-mp-dm-converter-mpc2"]], "t_mp_mapped_array": [[754, "t-mp-mapped-array"]], "t_mp_table": [[755, "t-mp-table"]], "t_mpxt_legacy_dcline": [[756, "t-mpxt-legacy-dcline"]], "t_mpxt_reserves": [[757, "t-mpxt-reserves"]], "t_nm_element": [[758, "t-nm-element"]], "t_node_test": [[759, "t-node-test"]], "t_port_inj_current_acc": [[760, "t-port-inj-current-acc"]], "t_port_inj_current_acp": [[761, "t-port-inj-current-acp"]], "t_port_inj_power_acc": [[762, "t-port-inj-power-acc"]], "t_port_inj_power_acp": [[763, "t-port-inj-power-acp"]], "t_pretty_print": [[764, "t-pretty-print"]], "t_run_mp": [[765, "t-run-mp"]], "t_run_mp_3p": [[766, "t-run-mp-3p"]], "t_run_opf_default": [[767, "t-run-opf-default"]], "test_matpower": [[768, "test-matpower"]]}, "indexentries": {"generate_autodoc_stubs() (built-in function)": [[14, "generate_autodoc_stubs"]], "generate_matpower_autodoc() (built-in function)": [[15, "generate_matpower_autodoc"]], "generate_source_symlinks() (built-in function)": [[16, "generate_source_symlinks"]], "have_feature_lu_vec() (built-in function)": [[22, "have_feature_lu_vec"]], "have_feature_pardiso() (built-in function)": [[23, "have_feature_pardiso"]], "have_feature_pardiso_legacy() (built-in function)": [[24, "have_feature_pardiso_legacy"]], "have_feature_pardiso_object() (built-in function)": [[25, "have_feature_pardiso_object"]], "mips() (in module mips)": [[26, "mips.mips"]], "mips_example1() (built-in function)": [[27, "mips_example1"]], "mips_example2() (built-in function)": [[28, "mips_example2"]], "mipsver() (built-in function)": [[29, "mipsver"]], "mplinsolve() (built-in function)": [[30, "mplinsolve"]], "qps_mips() (built-in function)": [[31, "qps_mips"]], "t_mips() (built-in function)": [[32, "t_mips"]], "t_mips_pardiso() (built-in function)": [[33, "t_mips_pardiso"]], "t_mplinsolve() (built-in function)": [[34, "t_mplinsolve"]], "t_qps_mips() (built-in function)": [[35, "t_qps_mips"]], "test_mips() (built-in function)": [[36, "test_mips"]], "addgen2mpc() (built-in function)": [[39, "addgen2mpc"]], "addstorage() (built-in function)": [[40, "addstorage"]], "addwind() (built-in function)": [[41, "addwind"]], "apply_profile() (built-in function)": [[42, "apply_profile"]], "c118swf() (built-in function)": [[43, "c118swf"]], "ex_case3a() (built-in function)": [[44, "ex_case3a"]], "ex_case3b() (built-in function)": [[45, "ex_case3b"]], "ex_contab() (built-in function)": [[46, "ex_contab"]], "ex_load_profile() (built-in function)": [[47, "ex_load_profile"]], "ex_storage() (built-in function)": [[48, "ex_storage"]], "ex_transmat() (built-in function)": [[49, "ex_transmat"]], "ex_wind() (built-in function)": [[50, "ex_wind"]], "ex_wind_profile() (built-in function)": [[51, "ex_wind_profile"]], "ex_wind_profile_d() (built-in function)": [[52, "ex_wind_profile_d"]], "ex_wind_uc() (built-in function)": [[53, "ex_wind_uc"]], "ex_xgd() (built-in function)": [[54, "ex_xgd"]], "ex_xgd_ramp() (built-in function)": [[55, "ex_xgd_ramp"]], "ex_xgd_res() (built-in function)": [[56, "ex_xgd_res"]], "ex_xgd_uc() (built-in function)": [[57, "ex_xgd_uc"]], "filter_ramp_transitions() (built-in function)": [[58, "filter_ramp_transitions"]], "getprofiles() (built-in function)": [[59, "getprofiles"]], "idx_profile() (built-in function)": [[60, "idx_profile"]], "loadgenericdata() (built-in function)": [[61, "loadgenericdata"]], "loadmd() (built-in function)": [[62, "loadmd"]], "loadstoragedata() (built-in function)": [[63, "loadstoragedata"]], "loadxgendata() (built-in function)": [[64, "loadxgendata"]], "md_init() (built-in function)": [[65, "md_init"]], "most() (in module most)": [[66, "most.most"]], "most_ex1_ed() (built-in function)": [[67, "most_ex1_ed"]], "most_ex2_dcopf() (built-in function)": [[68, "most_ex2_dcopf"]], "most_ex3_dcopf_w_uc() (built-in function)": [[69, "most_ex3_dcopf_w_uc"]], "most_ex4_dcopf_ss() (built-in function)": [[70, "most_ex4_dcopf_ss"]], "most_ex5_mpopf() (built-in function)": [[71, "most_ex5_mpopf"]], "most_ex6_uc() (built-in function)": [[72, "most_ex6_uc"]], "most_ex7_suc() (built-in function)": [[73, "most_ex7_suc"]], "most_summary() (built-in function)": [[74, "most_summary"]], "mostver() (built-in function)": [[75, "mostver"]], "mpoption_info_most() (built-in function)": [[76, "mpoption_info_most"]], "plot_gen() (built-in function)": [[77, "plot_gen"]], "plot_storage() (built-in function)": [[78, "plot_storage"]], "plot_uc() (built-in function)": [[79, "plot_uc"]], "plot_uc_data() (built-in function)": [[80, "plot_uc_data"]], "t_case30_most() (built-in function)": [[81, "t_case30_most"]], "t_case3_most() (built-in function)": [[82, "t_case3_most"]], "t_case_tlmp() (built-in function)": [[83, "t_case_tlmp"]], "t_case_tlmp_storage() (built-in function)": [[84, "t_case_tlmp_storage"]], "t_most_30b_1_1_0() (built-in function)": [[85, "t_most_30b_1_1_0"]], "t_most_30b_1_1_0_uc() (built-in function)": [[86, "t_most_30b_1_1_0_uc"]], "t_most_30b_1_1_17() (built-in function)": [[87, "t_most_30b_1_1_17"]], "t_most_30b_3_1_0() (built-in function)": [[88, "t_most_30b_3_1_0"]], "t_most_30b_3_1_17() (built-in function)": [[89, "t_most_30b_3_1_17"]], "t_most_3b_1_1_0() (built-in function)": [[90, "t_most_3b_1_1_0"]], "t_most_3b_1_1_2() (built-in function)": [[91, "t_most_3b_1_1_2"]], "t_most_3b_3_1_0() (built-in function)": [[92, "t_most_3b_3_1_0"]], "t_most_3b_3_1_2() (built-in function)": [[93, "t_most_3b_3_1_2"]], "t_most_fixed_res() (built-in function)": [[94, "t_most_fixed_res"]], "t_most_mpopf() (built-in function)": [[95, "t_most_mpopf"]], "t_most_sp() (built-in function)": [[96, "t_most_sp"]], "t_most_spuc() (built-in function)": [[97, "t_most_spuc"]], "t_most_suc() (built-in function)": [[98, "t_most_suc"]], "t_most_tlmp() (built-in function)": [[99, "t_most_tlmp"]], "t_most_uc() (built-in function)": [[100, "t_most_uc"]], "t_most_w_ds() (built-in function)": [[101, "t_most_w_ds"]], "test_most() (built-in function)": [[102, "test_most"]], "uniformwindprofile() (built-in function)": [[103, "uniformwindprofile"]], "n (mp.set_manager attribute)": [[106, "mp.set_manager.N"]], "ns (mp.set_manager attribute)": [[106, "mp.set_manager.NS"]], "add() (mp.set_manager method)": [[106, "mp.set_manager.add"]], "copy() (mp.set_manager method)": [[106, "mp.set_manager.copy"]], "data (mp.set_manager attribute)": [[106, "mp.set_manager.data"]], "describe_idx() (mp.set_manager method)": [[106, "mp.set_manager.describe_idx"]], "display() (mp.set_manager method)": [[106, "mp.set_manager.display"]], "get_n() (mp.set_manager method)": [[106, "mp.set_manager.get_N"]], "idx (mp.set_manager attribute)": [[106, "mp.set_manager.idx"]], "init_indexed_name() (mp.set_manager method)": [[106, "mp.set_manager.init_indexed_name"]], "label (mp.set_manager attribute)": [[106, "mp.set_manager.label"]], "order (mp.set_manager attribute)": [[106, "mp.set_manager.order"]], "set_manager (class in mp)": [[106, "mp.set_manager"]], "set_manager() (mp.set_manager method)": [[106, "mp.set_manager.set_manager"]], "set_type_idx_map() (mp.set_manager method)": [[106, "mp.set_manager.set_type_idx_map"]], "display_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.display_soln"]], "has_parsed_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.has_parsed_soln"]], "params() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.params"]], "parse_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.parse_soln"]], "set_manager_opt_model (class in mp)": [[107, "mp.set_manager_opt_model"]], "set_manager_opt_model() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.set_manager_opt_model"]], "set_params() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.set_params"]], "soln (mp.set_manager_opt_model attribute)": [[107, "mp.set_manager_opt_model.soln"]], "add() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.add"]], "cache (mp.sm_lin_constraint attribute)": [[108, "mp.sm_lin_constraint.cache"]], "display_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.display_soln"]], "eval() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.eval"]], "get_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.get_soln"]], "params() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.params"]], "parse_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.parse_soln"]], "set_params() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.set_params"]], "sm_lin_constraint (class in mp)": [[108, "mp.sm_lin_constraint"]], "sm_lin_constraint() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.sm_lin_constraint"]], "add() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.add"]], "display_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.display_soln"]], "eval() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.eval"]], "eval_hess() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.eval_hess"]], "get_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.get_soln"]], "params() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.params"]], "parse_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.parse_soln"]], "set_params() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.set_params"]], "sm_nln_constraint (class in mp)": [[109, "mp.sm_nln_constraint"]], "sm_nln_constraint() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.sm_nln_constraint"]], "add() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.add"]], "display_soln() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.display_soln"]], "eval() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.eval"]], "get_soln() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.get_soln"]], "params() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.params"]], "set_params() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.set_params"]], "sm_nln_cost (class in mp)": [[110, "mp.sm_nln_cost"]], "sm_nln_cost() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.sm_nln_cost"]], "add() (mp.sm_quad_cost method)": [[111, "mp.sm_quad_cost.add"]], "cache (mp.sm_quad_cost attribute)": [[111, "mp.sm_quad_cost.cache"]], "display_soln() (mp.sm_quad_cost method)": [[111, "mp.sm_quad_cost.display_soln"]], "eval() (mp.sm_quad_cost method)": [[111, "mp.sm_quad_cost.eval"]], "get_soln() (mp.sm_quad_cost method)": [[111, "mp.sm_quad_cost.get_soln"]], "params() (mp.sm_quad_cost method)": [[111, "mp.sm_quad_cost.params"]], "set_params() (mp.sm_quad_cost method)": [[111, "mp.sm_quad_cost.set_params"]], "sm_quad_cost (class in mp)": [[111, "mp.sm_quad_cost"]], "sm_quad_cost() (mp.sm_quad_cost method)": [[111, "mp.sm_quad_cost.sm_quad_cost"]], "add() (mp.sm_variable method)": [[112, "mp.sm_variable.add"]], "cache (mp.sm_variable attribute)": [[112, "mp.sm_variable.cache"]], "display_soln() (mp.sm_variable method)": [[112, "mp.sm_variable.display_soln"]], "get_soln() (mp.sm_variable method)": [[112, "mp.sm_variable.get_soln"]], "params() (mp.sm_variable method)": [[112, "mp.sm_variable.params"]], "parse_soln() (mp.sm_variable method)": [[112, "mp.sm_variable.parse_soln"]], "set_params() (mp.sm_variable method)": [[112, "mp.sm_variable.set_params"]], "sm_variable (class in mp)": [[112, "mp.sm_variable"]], "sm_variable() (mp.sm_variable method)": [[112, "mp.sm_variable.sm_variable"]], "varsets_cell2struct() (mp.sm_variable static method)": [[112, "mp.sm_variable.varsets_cell2struct"]], "varsets_idx() (mp.sm_variable method)": [[112, "mp.sm_variable.varsets_idx"]], "varsets_len() (mp.sm_variable method)": [[112, "mp.sm_variable.varsets_len"]], "varsets_x() (mp.sm_variable method)": [[112, "mp.sm_variable.varsets_x"]], "add_named_set() (mp_idx_manager method)": [[113, "mp_idx_manager.add_named_set"]], "copy() (mp_idx_manager method)": [[113, "mp_idx_manager.copy"]], "describe_idx() (mp_idx_manager method)": [[113, "mp_idx_manager.describe_idx"]], "display_set() (mp_idx_manager method)": [[113, "mp_idx_manager.display_set"]], "get() (mp_idx_manager method)": [[113, "mp_idx_manager.get"]], "getn() (mp_idx_manager method)": [[113, "mp_idx_manager.getN"]], "get_idx() (mp_idx_manager method)": [[113, "mp_idx_manager.get_idx"]], "get_userdata() (mp_idx_manager method)": [[113, "mp_idx_manager.get_userdata"]], "init_indexed_name() (mp_idx_manager method)": [[113, "mp_idx_manager.init_indexed_name"]], "init_set_types() (mp_idx_manager method)": [[113, "mp_idx_manager.init_set_types"]], "mp_idx_manager (built-in class)": [[113, "mp_idx_manager"]], "mp_idx_manager() (mp_idx_manager method)": [[113, "mp_idx_manager.mp_idx_manager"]], "set_type_idx_map() (mp_idx_manager method)": [[113, "mp_idx_manager.set_type_idx_map"]], "valid_named_set_type() (mp_idx_manager method)": [[113, "mp_idx_manager.valid_named_set_type"]], "add_lin_constraint() (opt_model method)": [[114, "opt_model.add_lin_constraint"]], "add_nln_constraint() (opt_model method)": [[114, "opt_model.add_nln_constraint"]], "add_nln_cost() (opt_model method)": [[114, "opt_model.add_nln_cost"]], "add_quad_cost() (opt_model method)": [[114, "opt_model.add_quad_cost"]], "add_var() (opt_model method)": [[114, "opt_model.add_var"]], "copy() (opt_model method)": [[114, "opt_model.copy"]], "def_set_types() (opt_model method)": [[114, "opt_model.def_set_types"]], "display() (opt_model method)": [[114, "opt_model.display"]], "display_soln() (opt_model method)": [[114, "opt_model.display_soln"]], "eval_lin_constraint() (opt_model method)": [[114, "opt_model.eval_lin_constraint"]], "eval_nln_constraint() (opt_model method)": [[114, "opt_model.eval_nln_constraint"]], "eval_nln_constraint_hess() (opt_model method)": [[114, "opt_model.eval_nln_constraint_hess"]], "eval_nln_cost() (opt_model method)": [[114, "opt_model.eval_nln_cost"]], "eval_quad_cost() (opt_model method)": [[114, "opt_model.eval_quad_cost"]], "get_idx() (opt_model method)": [[114, "opt_model.get_idx"]], "get_soln() (opt_model method)": [[114, "opt_model.get_soln"]], "has_parsed_soln() (opt_model method)": [[114, "opt_model.has_parsed_soln"]], "init_indexed_name() (opt_model method)": [[114, "opt_model.init_indexed_name"]], "is_mixed_integer() (opt_model method)": [[114, "opt_model.is_mixed_integer"]], "is_solved() (opt_model method)": [[114, "opt_model.is_solved"]], "lin (opt_model attribute)": [[114, "opt_model.lin"]], "nlc (opt_model attribute)": [[114, "opt_model.nlc"]], "nle (opt_model attribute)": [[114, "opt_model.nle"]], "nli (opt_model attribute)": [[114, "opt_model.nli"]], "opt_model (built-in class)": [[114, "opt_model"]], "opt_model() (opt_model method)": [[114, "opt_model.opt_model"]], "params_lin_constraint() (opt_model method)": [[114, "opt_model.params_lin_constraint"]], "params_nln_constraint() (opt_model method)": [[114, "opt_model.params_nln_constraint"]], "params_nln_cost() (opt_model method)": [[114, "opt_model.params_nln_cost"]], "params_quad_cost() (opt_model method)": [[114, "opt_model.params_quad_cost"]], "params_var() (opt_model method)": [[114, "opt_model.params_var"]], "parse_soln() (opt_model method)": [[114, "opt_model.parse_soln"]], "prob_type (opt_model attribute)": [[114, "opt_model.prob_type"]], "problem_type() (opt_model method)": [[114, "opt_model.problem_type"]], "qdc (opt_model attribute)": [[114, "opt_model.qdc"]], "set_params() (opt_model method)": [[114, "opt_model.set_params"]], "soln (opt_model attribute)": [[114, "opt_model.soln"]], "solve() (opt_model method)": [[114, "opt_model.solve"]], "var (opt_model attribute)": [[114, "opt_model.var"]], "varsets_cell2struct() (opt_model method)": [[114, "opt_model.varsets_cell2struct"]], "varsets_idx() (opt_model method)": [[114, "opt_model.varsets_idx"]], "varsets_len() (opt_model method)": [[114, "opt_model.varsets_len"]], "varsets_x() (opt_model method)": [[114, "opt_model.varsets_x"]], "artelys_knitro_options() (built-in function)": [[115, "artelys_knitro_options"]], "convert_lin_constraint() (built-in function)": [[116, "convert_lin_constraint"]], "convert_lin_constraint_multipliers() (built-in function)": [[117, "convert_lin_constraint_multipliers"]], "cplex_options() (built-in function)": [[118, "cplex_options"]], "glpk_options() (built-in function)": [[119, "glpk_options"]], "gurobi_options() (built-in function)": [[120, "gurobi_options"]], "gurobiver() (built-in function)": [[121, "gurobiver"]], "have_feature_bpmpd() (built-in function)": [[122, "have_feature_bpmpd"]], "have_feature_catchme() (built-in function)": [[123, "have_feature_catchme"]], "have_feature_clp() (built-in function)": [[124, "have_feature_clp"]], "have_feature_cplex() (built-in function)": [[125, "have_feature_cplex"]], "have_feature_evalc() (built-in function)": [[126, "have_feature_evalc"]], "have_feature_fmincon() (built-in function)": [[127, "have_feature_fmincon"]], "have_feature_fmincon_ipm() (built-in function)": [[128, "have_feature_fmincon_ipm"]], "have_feature_fsolve() (built-in function)": [[129, "have_feature_fsolve"]], "have_feature_glpk() (built-in function)": [[130, "have_feature_glpk"]], "have_feature_gurobi() (built-in function)": [[131, "have_feature_gurobi"]], "have_feature_intlinprog() (built-in function)": [[132, "have_feature_intlinprog"]], "have_feature_ipopt() (built-in function)": [[133, "have_feature_ipopt"]], "have_feature_ipopt_auxdata() (built-in function)": [[134, "have_feature_ipopt_auxdata"]], "have_feature_isequaln() (built-in function)": [[135, "have_feature_isequaln"]], "have_feature_knitro() (built-in function)": [[136, "have_feature_knitro"]], "have_feature_knitromatlab() (built-in function)": [[137, "have_feature_knitromatlab"]], "have_feature_ktrlink() (built-in function)": [[138, "have_feature_ktrlink"]], "have_feature_linprog() (built-in function)": [[139, "have_feature_linprog"]], "have_feature_linprog_ds() (built-in function)": [[140, "have_feature_linprog_ds"]], "have_feature_mosek() (built-in function)": [[141, "have_feature_mosek"]], "have_feature_opti_clp() (built-in function)": [[142, "have_feature_opti_clp"]], "have_feature_optim() (built-in function)": [[143, "have_feature_optim"]], "have_feature_optimoptions() (built-in function)": [[144, "have_feature_optimoptions"]], "have_feature_osqp() (built-in function)": [[145, "have_feature_osqp"]], "have_feature_quadprog() (built-in function)": [[146, "have_feature_quadprog"]], "have_feature_quadprog_ls() (built-in function)": [[147, "have_feature_quadprog_ls"]], "have_feature_sdpt3() (built-in function)": [[148, "have_feature_sdpt3"]], "have_feature_sedumi() (built-in function)": [[149, "have_feature_sedumi"]], "have_feature_yalmip() (built-in function)": [[150, "have_feature_yalmip"]], "ipopt_options() (built-in function)": [[151, "ipopt_options"]], "knitrover() (built-in function)": [[152, "knitrover"]], "miqps_cplex() (built-in function)": [[153, "miqps_cplex"]], "miqps_glpk() (built-in function)": [[154, "miqps_glpk"]], "miqps_gurobi() (built-in function)": [[155, "miqps_gurobi"]], "miqps_master() (built-in function)": [[156, "miqps_master"]], "miqps_mosek() (built-in function)": [[157, "miqps_mosek"]], "miqps_ot() (built-in function)": [[158, "miqps_ot"]], "mosek_options() (built-in function)": [[159, "mosek_options"]], "mosek_symbcon() (built-in function)": [[160, "mosek_symbcon"]], "mpomver() (built-in function)": [[161, "mpomver"]], "mpopt2nleqopt() (built-in function)": [[162, "mpopt2nleqopt"]], "mpopt2nlpopt() (built-in function)": [[163, "mpopt2nlpopt"]], "mpopt2pneopt() (built-in function)": [[164, "mpopt2pneopt"]], "mpopt2qpopt() (built-in function)": [[165, "mpopt2qpopt"]], "nested_struct_copy() (built-in function)": [[166, "nested_struct_copy"]], "nleqs_core() (built-in function)": [[167, "nleqs_core"]], "nleqs_fd_newton() (built-in function)": [[168, "nleqs_fd_newton"]], "nleqs_fsolve() (built-in function)": [[169, "nleqs_fsolve"]], "nleqs_gauss_seidel() (built-in function)": [[170, "nleqs_gauss_seidel"]], "nleqs_master() (built-in function)": [[171, "nleqs_master"]], "nleqs_master_ex1() (built-in function)": [[172, "nleqs_master_ex1"]], "nleqs_master_ex2() (built-in function)": [[173, "nleqs_master_ex2"]], "nleqs_newton() (built-in function)": [[174, "nleqs_newton"]], "nlp_consfcn() (built-in function)": [[175, "nlp_consfcn"]], "nlp_costfcn() (built-in function)": [[176, "nlp_costfcn"]], "nlp_hessfcn() (built-in function)": [[177, "nlp_hessfcn"]], "nlps_fmincon() (built-in function)": [[178, "nlps_fmincon"]], "nlps_ipopt() (built-in function)": [[179, "nlps_ipopt"]], "nlps_knitro() (built-in function)": [[180, "nlps_knitro"]], "nlps_master() (built-in function)": [[181, "nlps_master"]], "nlps_master_ex1() (built-in function)": [[182, "nlps_master_ex1"]], "nlps_master_ex2() (built-in function)": [[183, "nlps_master_ex2"]], "osqp_options() (built-in function)": [[184, "osqp_options"]], "osqpver() (built-in function)": [[185, "osqpver"]], "pne_callback_default() (built-in function)": [[186, "pne_callback_default"]], "pne_callback_nose() (built-in function)": [[187, "pne_callback_nose"]], "pne_callback_target_lam() (built-in function)": [[188, "pne_callback_target_lam"]], "pne_detect_events() (built-in function)": [[189, "pne_detect_events"]], "pne_detected_event() (built-in function)": [[190, "pne_detected_event"]], "pne_event_nose() (built-in function)": [[191, "pne_event_nose"]], "pne_event_target_lam() (built-in function)": [[192, "pne_event_target_lam"]], "pne_ex1() (built-in function)": [[193, "pne_ex1"]], "pne_pfcn_arc_len() (built-in function)": [[194, "pne_pfcn_arc_len"]], "pne_pfcn_natural() (built-in function)": [[195, "pne_pfcn_natural"]], "pne_pfcn_pseudo_arc_len() (built-in function)": [[196, "pne_pfcn_pseudo_arc_len"]], "pne_register_callbacks() (built-in function)": [[197, "pne_register_callbacks"]], "pne_register_events() (built-in function)": [[198, "pne_register_events"]], "pnes_master() (built-in function)": [[199, "pnes_master"]], "qp_ex1() (built-in function)": [[200, "qp_ex1"]], "qps_bpmpd() (built-in function)": [[201, "qps_bpmpd"]], "qps_clp() (built-in function)": [[202, "qps_clp"]], "qps_cplex() (built-in function)": [[203, "qps_cplex"]], "qps_glpk() (built-in function)": [[204, "qps_glpk"]], "qps_gurobi() (built-in function)": [[205, "qps_gurobi"]], "qps_ipopt() (built-in function)": [[206, "qps_ipopt"]], "qps_knitro() (built-in function)": [[207, "qps_knitro"]], "qps_master() (built-in function)": [[208, "qps_master"]], "qps_mosek() (built-in function)": [[209, "qps_mosek"]], "qps_osqp() (built-in function)": [[210, "qps_osqp"]], "qps_ot() (built-in function)": [[211, "qps_ot"]], "t_miqps_master() (built-in function)": [[212, "t_miqps_master"]], "t_nested_struct_copy() (built-in function)": [[213, "t_nested_struct_copy"]], "t_nleqs_master() (built-in function)": [[214, "t_nleqs_master"]], "t_nlps_master() (built-in function)": [[215, "t_nlps_master"]], "t_om_solve_leqs() (built-in function)": [[216, "t_om_solve_leqs"]], "t_om_solve_miqps() (built-in function)": [[217, "t_om_solve_miqps"]], "t_om_solve_nleqs() (built-in function)": [[218, "t_om_solve_nleqs"]], "t_om_solve_nlps() (built-in function)": [[219, "t_om_solve_nlps"]], "t_om_solve_pne() (built-in function)": [[220, "t_om_solve_pne"]], "t_om_solve_qps() (built-in function)": [[221, "t_om_solve_qps"]], "t_opt_model() (built-in function)": [[222, "t_opt_model"]], "t_pnes_master() (built-in function)": [[223, "t_pnes_master"]], "t_qps_master() (built-in function)": [[224, "t_qps_master"]], "test_mp_opt_model() (built-in function)": [[225, "test_mp_opt_model"]], "have_feature() (built-in function)": [[228, "have_feature"]], "have_feature_matlab() (built-in function)": [[229, "have_feature_matlab"]], "have_feature_octave() (built-in function)": [[230, "have_feature_octave"]], "mptestver() (built-in function)": [[231, "mptestver"]], "t_begin() (built-in function)": [[232, "t_begin"]], "t_end() (built-in function)": [[233, "t_end"]], "t_file_match() (built-in function)": [[234, "t_file_match"]], "t_have_feature() (built-in function)": [[235, "t_have_feature"]], "t_is() (built-in function)": [[236, "t_is"]], "t_ok() (built-in function)": [[237, "t_ok"]], "t_run_tests() (built-in function)": [[238, "t_run_tests"]], "t_skip() (built-in function)": [[239, "t_skip"]], "t_str_match() (built-in function)": [[240, "t_str_match"]], "t_test_fcns() (built-in function)": [[241, "t_test_fcns"]], "test_mptest() (built-in function)": [[242, "test_mptest"]], "node_type (class in mp)": [[246, "mp.NODE_TYPE"]], "none (mp.node_type attribute)": [[246, "mp.NODE_TYPE.NONE"]], "pq (mp.node_type attribute)": [[246, "mp.NODE_TYPE.PQ"]], "pv (mp.node_type attribute)": [[246, "mp.NODE_TYPE.PV"]], "ref (mp.node_type attribute)": [[246, "mp.NODE_TYPE.REF"]], "is_valid() (mp.node_type static method)": [[246, "mp.NODE_TYPE.is_valid"]], "cost_table (class in mp)": [[247, "mp.cost_table"]], "cost_table() (mp.cost_table method)": [[247, "mp.cost_table.cost_table"]], "diff_poly_fcn() (mp.cost_table static method)": [[247, "mp.cost_table.diff_poly_fcn"]], "eval_poly_fcn() (mp.cost_table static method)": [[247, "mp.cost_table.eval_poly_fcn"]], "max_pwl_cost() (mp.cost_table method)": [[247, "mp.cost_table.max_pwl_cost"]], "poly_cost_fcn() (mp.cost_table static method)": [[247, "mp.cost_table.poly_cost_fcn"]], "poly_params() (mp.cost_table method)": [[247, "mp.cost_table.poly_params"]], "pwl_params() (mp.cost_table method)": [[247, "mp.cost_table.pwl_params"]], "cost_table_utils (class in mp)": [[248, "mp.cost_table_utils"]], "max_pwl_cost() (mp.cost_table_utils static method)": [[248, "mp.cost_table_utils.max_pwl_cost"]], "poly_params() (mp.cost_table_utils static method)": [[248, "mp.cost_table_utils.poly_params"]], "pwl_params() (mp.cost_table_utils static method)": [[248, "mp.cost_table_utils.pwl_params"]], "base_kva (mp.data_model attribute)": [[249, "mp.data_model.base_kva"]], "base_mva (mp.data_model attribute)": [[249, "mp.data_model.base_mva"]], "build() (mp.data_model method)": [[249, "mp.data_model.build"]], "build_params() (mp.data_model method)": [[249, "mp.data_model.build_params"]], "copy() (mp.data_model method)": [[249, "mp.data_model.copy"]], "count() (mp.data_model method)": [[249, "mp.data_model.count"]], "data_model (class in mp)": [[249, "mp.data_model"]], "data_model() (mp.data_model method)": [[249, "mp.data_model.data_model"]], "display() (mp.data_model method)": [[249, "mp.data_model.display"]], "initialize() (mp.data_model method)": [[249, "mp.data_model.initialize"]], "online() (mp.data_model method)": [[249, "mp.data_model.online"]], "pp_data() (mp.data_model method)": [[249, "mp.data_model.pp_data"]], "pp_flags() (mp.data_model method)": [[249, "mp.data_model.pp_flags"]], "pp_get_headers() (mp.data_model method)": [[249, "mp.data_model.pp_get_headers"]], "pp_get_headers_cnt() (mp.data_model method)": [[249, "mp.data_model.pp_get_headers_cnt"]], "pp_get_headers_ext() (mp.data_model method)": [[249, "mp.data_model.pp_get_headers_ext"]], "pp_get_headers_other() (mp.data_model method)": [[249, "mp.data_model.pp_get_headers_other"]], "pp_have_section() (mp.data_model method)": [[249, "mp.data_model.pp_have_section"]], "pp_section() (mp.data_model method)": [[249, "mp.data_model.pp_section"]], "pp_section_label() (mp.data_model method)": [[249, "mp.data_model.pp_section_label"]], "pp_section_list() (mp.data_model method)": [[249, "mp.data_model.pp_section_list"]], "pretty_print() (mp.data_model method)": [[249, "mp.data_model.pretty_print"]], "rebuild() (mp.data_model method)": [[249, "mp.data_model.rebuild"]], "set_bus_v_lims_via_vg() (mp.data_model method)": [[249, "mp.data_model.set_bus_v_lims_via_vg"]], "source (mp.data_model attribute)": [[249, "mp.data_model.source"]], "update_status() (mp.data_model method)": [[249, "mp.data_model.update_status"]], "userdata (mp.data_model attribute)": [[249, "mp.data_model.userdata"]], "data_model_cpf (class in mp)": [[250, "mp.data_model_cpf"]], "data_model_cpf() (mp.data_model_cpf method)": [[250, "mp.data_model_cpf.data_model_cpf"]], "data_model_opf (class in mp)": [[251, "mp.data_model_opf"]], "data_model_opf() (mp.data_model_opf method)": [[251, "mp.data_model_opf.data_model_opf"]], "pp_flags() (mp.data_model_opf method)": [[251, "mp.data_model_opf.pp_flags"]], "pp_get_headers_other() (mp.data_model_opf method)": [[251, "mp.data_model_opf.pp_get_headers_other"]], "pp_section_list() (mp.data_model_opf method)": [[251, "mp.data_model_opf.pp_section_list"]], "build() (mp.dm_converter method)": [[252, "mp.dm_converter.build"]], "copy() (mp.dm_converter method)": [[252, "mp.dm_converter.copy"]], "display() (mp.dm_converter method)": [[252, "mp.dm_converter.display"]], "dm_converter (class in mp)": [[252, "mp.dm_converter"]], "export() (mp.dm_converter method)": [[252, "mp.dm_converter.export"]], "format_tag() (mp.dm_converter method)": [[252, "mp.dm_converter.format_tag"]], "import() (mp.dm_converter method)": [[252, "mp.dm_converter.import"]], "init_export() (mp.dm_converter method)": [[252, "mp.dm_converter.init_export"]], "save() (mp.dm_converter method)": [[252, "mp.dm_converter.save"]], "dm_converter_mpc2 (class in mp)": [[253, "mp.dm_converter_mpc2"]], "dm_converter_mpc2() (mp.dm_converter_mpc2 method)": [[253, "mp.dm_converter_mpc2.dm_converter_mpc2"]], "format_tag() (mp.dm_converter_mpc2 method)": [[253, "mp.dm_converter_mpc2.format_tag"]], "import() (mp.dm_converter_mpc2 method)": [[253, "mp.dm_converter_mpc2.import"]], "init_export() (mp.dm_converter_mpc2 method)": [[253, "mp.dm_converter_mpc2.init_export"]], "save() (mp.dm_converter_mpc2 method)": [[253, "mp.dm_converter_mpc2.save"]], "dm_converter_mpc2_legacy (class in mp)": [[254, "mp.dm_converter_mpc2_legacy"]], "legacy_user_mod_inputs() (mp.dm_converter_mpc2_legacy method)": [[254, "mp.dm_converter_mpc2_legacy.legacy_user_mod_inputs"]], "legacy_user_nln_constraints() (mp.dm_converter_mpc2_legacy method)": [[254, "mp.dm_converter_mpc2_legacy.legacy_user_nln_constraints"]], "id() (mp.dm_element method)": [[255, "mp.dm_element.ID"]], "id2i (mp.dm_element attribute)": [[255, "mp.dm_element.ID2i"]], "build_params() (mp.dm_element method)": [[255, "mp.dm_element.build_params"]], "copy() (mp.dm_element method)": [[255, "mp.dm_element.copy"]], "count() (mp.dm_element method)": [[255, "mp.dm_element.count"]], "cxn_idx_prop() (mp.dm_element method)": [[255, "mp.dm_element.cxn_idx_prop"]], "cxn_type() (mp.dm_element method)": [[255, "mp.dm_element.cxn_type"]], "cxn_type_prop() (mp.dm_element method)": [[255, "mp.dm_element.cxn_type_prop"]], "display() (mp.dm_element method)": [[255, "mp.dm_element.display"]], "dm_converter_element() (mp.dm_element method)": [[255, "mp.dm_element.dm_converter_element"]], "dm_element (class in mp)": [[255, "mp.dm_element"]], "export_vars() (mp.dm_element method)": [[255, "mp.dm_element.export_vars"]], "export_vars_offline_val() (mp.dm_element method)": [[255, "mp.dm_element.export_vars_offline_val"]], "i2on (mp.dm_element attribute)": [[255, "mp.dm_element.i2on"]], "init_status() (mp.dm_element method)": [[255, "mp.dm_element.init_status"]], "initialize() (mp.dm_element method)": [[255, "mp.dm_element.initialize"]], "label() (mp.dm_element method)": [[255, "mp.dm_element.label"]], "labels() (mp.dm_element method)": [[255, "mp.dm_element.labels"]], "main_table_var_names() (mp.dm_element method)": [[255, "mp.dm_element.main_table_var_names"]], "n (mp.dm_element attribute)": [[255, "mp.dm_element.n"]], "name() (mp.dm_element method)": [[255, "mp.dm_element.name"]], "nr (mp.dm_element attribute)": [[255, "mp.dm_element.nr"]], "off (mp.dm_element attribute)": [[255, "mp.dm_element.off"]], "on (mp.dm_element attribute)": [[255, "mp.dm_element.on"]], "pp_data() (mp.dm_element method)": [[255, "mp.dm_element.pp_data"]], "pp_data_cnt() (mp.dm_element method)": [[255, "mp.dm_element.pp_data_cnt"]], "pp_data_det() (mp.dm_element method)": [[255, "mp.dm_element.pp_data_det"]], "pp_data_ext() (mp.dm_element method)": [[255, "mp.dm_element.pp_data_ext"]], "pp_data_row_det() (mp.dm_element method)": [[255, "mp.dm_element.pp_data_row_det"]], "pp_data_sum() (mp.dm_element method)": [[255, "mp.dm_element.pp_data_sum"]], "pp_get_footers() (mp.dm_element method)": [[255, "mp.dm_element.pp_get_footers"]], "pp_get_footers_det() (mp.dm_element method)": [[255, "mp.dm_element.pp_get_footers_det"]], "pp_get_headers() (mp.dm_element method)": [[255, "mp.dm_element.pp_get_headers"]], "pp_get_headers_det() (mp.dm_element method)": [[255, "mp.dm_element.pp_get_headers_det"]], "pp_get_title_det() (mp.dm_element method)": [[255, "mp.dm_element.pp_get_title_det"]], "pp_have_section() (mp.dm_element method)": [[255, "mp.dm_element.pp_have_section"]], "pp_have_section_cnt() (mp.dm_element method)": [[255, "mp.dm_element.pp_have_section_cnt"]], "pp_have_section_det() (mp.dm_element method)": [[255, "mp.dm_element.pp_have_section_det"]], "pp_have_section_ext() (mp.dm_element method)": [[255, "mp.dm_element.pp_have_section_ext"]], "pp_have_section_sum() (mp.dm_element method)": [[255, "mp.dm_element.pp_have_section_sum"]], "pp_rows() (mp.dm_element method)": [[255, "mp.dm_element.pp_rows"]], "pretty_print() (mp.dm_element method)": [[255, "mp.dm_element.pretty_print"]], "rebuild() (mp.dm_element method)": [[255, "mp.dm_element.rebuild"]], "tab (mp.dm_element attribute)": [[255, "mp.dm_element.tab"]], "table_exists() (mp.dm_element method)": [[255, "mp.dm_element.table_exists"]], "update_status() (mp.dm_element method)": [[255, "mp.dm_element.update_status"]], "data_exists() (mp.dmc_element method)": [[256, "mp.dmc_element.data_exists"]], "data_field() (mp.dmc_element method)": [[256, "mp.dmc_element.data_field"]], "data_model_element() (mp.dmc_element method)": [[256, "mp.dmc_element.data_model_element"]], "data_subs() (mp.dmc_element method)": [[256, "mp.dmc_element.data_subs"]], "default_export_data_nrows() (mp.dmc_element method)": [[256, "mp.dmc_element.default_export_data_nrows"]], "default_export_data_table() (mp.dmc_element method)": [[256, "mp.dmc_element.default_export_data_table"]], "dmc_element (class in mp)": [[256, "mp.dmc_element"]], "export() (mp.dmc_element method)": [[256, "mp.dmc_element.export"]], "export_col() (mp.dmc_element method)": [[256, "mp.dmc_element.export_col"]], "export_table_values() (mp.dmc_element method)": [[256, "mp.dmc_element.export_table_values"]], "get_export_size() (mp.dmc_element method)": [[256, "mp.dmc_element.get_export_size"]], "get_export_spec() (mp.dmc_element method)": [[256, "mp.dmc_element.get_export_spec"]], "get_import_size() (mp.dmc_element method)": [[256, "mp.dmc_element.get_import_size"]], "get_import_spec() (mp.dmc_element method)": [[256, "mp.dmc_element.get_import_spec"]], "get_input_table_values() (mp.dmc_element method)": [[256, "mp.dmc_element.get_input_table_values"]], "import() (mp.dmc_element method)": [[256, "mp.dmc_element.import"]], "import_col() (mp.dmc_element method)": [[256, "mp.dmc_element.import_col"]], "import_table_values() (mp.dmc_element method)": [[256, "mp.dmc_element.import_table_values"]], "init_export_data() (mp.dmc_element method)": [[256, "mp.dmc_element.init_export_data"]], "name() (mp.dmc_element method)": [[256, "mp.dmc_element.name"]], "table_var_map() (mp.dmc_element method)": [[256, "mp.dmc_element.table_var_map"]], "data_field() (mp.dmce_branch_mpc2 method)": [[257, "mp.dmce_branch_mpc2.data_field"]], "default_export_data_table() (mp.dmce_branch_mpc2 method)": [[257, "mp.dmce_branch_mpc2.default_export_data_table"]], "dmce_branch_mpc2 (class in mp)": [[257, "mp.dmce_branch_mpc2"]], "name() (mp.dmce_branch_mpc2 method)": [[257, "mp.dmce_branch_mpc2.name"]], "table_var_map() (mp.dmce_branch_mpc2 method)": [[257, "mp.dmce_branch_mpc2.table_var_map"]], "bus_status_import() (mp.dmce_bus3p_mpc2 method)": [[258, "mp.dmce_bus3p_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus3p_mpc2 method)": [[258, "mp.dmce_bus3p_mpc2.data_field"]], "dmce_bus3p_mpc2 (class in mp)": [[258, "mp.dmce_bus3p_mpc2"]], "name() (mp.dmce_bus3p_mpc2 method)": [[258, "mp.dmce_bus3p_mpc2.name"]], "table_var_map() (mp.dmce_bus3p_mpc2 method)": [[258, "mp.dmce_bus3p_mpc2.table_var_map"]], "bus_name_export() (mp.dmce_bus_mpc2 method)": [[259, "mp.dmce_bus_mpc2.bus_name_export"]], "bus_name_import() (mp.dmce_bus_mpc2 method)": [[259, "mp.dmce_bus_mpc2.bus_name_import"]], "bus_status_import() (mp.dmce_bus_mpc2 method)": [[259, "mp.dmce_bus_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus_mpc2 method)": [[259, "mp.dmce_bus_mpc2.data_field"]], "default_export_data_table() (mp.dmce_bus_mpc2 method)": [[259, "mp.dmce_bus_mpc2.default_export_data_table"]], "dmce_bus_mpc2 (class in mp)": [[259, "mp.dmce_bus_mpc2"]], "init_export_data() (mp.dmce_bus_mpc2 method)": [[259, "mp.dmce_bus_mpc2.init_export_data"]], "name() (mp.dmce_bus_mpc2 method)": [[259, "mp.dmce_bus_mpc2.name"]], "table_var_map() (mp.dmce_bus_mpc2 method)": [[259, "mp.dmce_bus_mpc2.table_var_map"]], "data_field() (mp.dmce_buslink_mpc2 method)": [[260, "mp.dmce_buslink_mpc2.data_field"]], "dmce_buslink_mpc2 (class in mp)": [[260, "mp.dmce_buslink_mpc2"]], "name() (mp.dmce_buslink_mpc2 method)": [[260, "mp.dmce_buslink_mpc2.name"]], "table_var_map() (mp.dmce_buslink_mpc2 method)": [[260, "mp.dmce_buslink_mpc2.table_var_map"]], "data_field() (mp.dmce_gen3p_mpc2 method)": [[261, "mp.dmce_gen3p_mpc2.data_field"]], "dmce_gen3p_mpc2 (class in mp)": [[261, "mp.dmce_gen3p_mpc2"]], "name() (mp.dmce_gen3p_mpc2 method)": [[261, "mp.dmce_gen3p_mpc2.name"]], "table_var_map() (mp.dmce_gen3p_mpc2 method)": [[261, "mp.dmce_gen3p_mpc2.table_var_map"]], "cost_table2gencost() (mp.dmce_gen_mpc2 static method)": [[262, "mp.dmce_gen_mpc2.cost_table2gencost"]], "data_field() (mp.dmce_gen_mpc2 method)": [[262, "mp.dmce_gen_mpc2.data_field"]], "default_export_data_table() (mp.dmce_gen_mpc2 method)": [[262, "mp.dmce_gen_mpc2.default_export_data_table"]], "dmce_gen_mpc2 (class in mp)": [[262, "mp.dmce_gen_mpc2"]], "gen_cost_export() (mp.dmce_gen_mpc2 method)": [[262, "mp.dmce_gen_mpc2.gen_cost_export"]], "gen_cost_import() (mp.dmce_gen_mpc2 method)": [[262, "mp.dmce_gen_mpc2.gen_cost_import"]], "gencost2cost_table() (mp.dmce_gen_mpc2 static method)": [[262, "mp.dmce_gen_mpc2.gencost2cost_table"]], "name() (mp.dmce_gen_mpc2 method)": [[262, "mp.dmce_gen_mpc2.name"]], "pwl1 (mp.dmce_gen_mpc2 attribute)": [[262, "mp.dmce_gen_mpc2.pwl1"]], "start_cost_export() (mp.dmce_gen_mpc2 method)": [[262, "mp.dmce_gen_mpc2.start_cost_export"]], "start_cost_import() (mp.dmce_gen_mpc2 method)": [[262, "mp.dmce_gen_mpc2.start_cost_import"]], "table_var_map() (mp.dmce_gen_mpc2 method)": [[262, "mp.dmce_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_legacy_dcline_mpc2 method)": [[263, "mp.dmce_legacy_dcline_mpc2.data_field"]], "dcline_cost_export() (mp.dmce_legacy_dcline_mpc2 method)": [[263, "mp.dmce_legacy_dcline_mpc2.dcline_cost_export"]], "dcline_cost_import() (mp.dmce_legacy_dcline_mpc2 method)": [[263, "mp.dmce_legacy_dcline_mpc2.dcline_cost_import"]], "default_export_data_table() (mp.dmce_legacy_dcline_mpc2 method)": [[263, "mp.dmce_legacy_dcline_mpc2.default_export_data_table"]], "dmce_legacy_dcline_mpc2 (class in mp)": [[263, "mp.dmce_legacy_dcline_mpc2"]], "name() (mp.dmce_legacy_dcline_mpc2 method)": [[263, "mp.dmce_legacy_dcline_mpc2.name"]], "table_var_map() (mp.dmce_legacy_dcline_mpc2 method)": [[263, "mp.dmce_legacy_dcline_mpc2.table_var_map"]], "create_line_construction_table() (mp.dmce_line3p_mpc2 method)": [[264, "mp.dmce_line3p_mpc2.create_line_construction_table"]], "data_field() (mp.dmce_line3p_mpc2 method)": [[264, "mp.dmce_line3p_mpc2.data_field"]], "dmce_line3p_mpc2 (class in mp)": [[264, "mp.dmce_line3p_mpc2"]], "import() (mp.dmce_line3p_mpc2 method)": [[264, "mp.dmce_line3p_mpc2.import"]], "name() (mp.dmce_line3p_mpc2 method)": [[264, "mp.dmce_line3p_mpc2.name"]], "table_var_map() (mp.dmce_line3p_mpc2 method)": [[264, "mp.dmce_line3p_mpc2.table_var_map"]], "bus (mp.dmce_load3p_mpc2 attribute)": [[265, "mp.dmce_load3p_mpc2.bus"]], "data_field() (mp.dmce_load3p_mpc2 method)": [[265, "mp.dmce_load3p_mpc2.data_field"]], "dmce_load3p_mpc2 (class in mp)": [[265, "mp.dmce_load3p_mpc2"]], "name() (mp.dmce_load3p_mpc2 method)": [[265, "mp.dmce_load3p_mpc2.name"]], "table_var_map() (mp.dmce_load3p_mpc2 method)": [[265, "mp.dmce_load3p_mpc2.table_var_map"]], "bus (mp.dmce_load_mpc2 attribute)": [[266, "mp.dmce_load_mpc2.bus"]], "data_field() (mp.dmce_load_mpc2 method)": [[266, "mp.dmce_load_mpc2.data_field"]], "dmce_load_mpc2 (class in mp)": [[266, "mp.dmce_load_mpc2"]], "get_export_size() (mp.dmce_load_mpc2 method)": [[266, "mp.dmce_load_mpc2.get_export_size"]], "get_import_size() (mp.dmce_load_mpc2 method)": [[266, "mp.dmce_load_mpc2.get_import_size"]], "name() (mp.dmce_load_mpc2 method)": [[266, "mp.dmce_load_mpc2.name"]], "scale_factor_fcn() (mp.dmce_load_mpc2 method)": [[266, "mp.dmce_load_mpc2.scale_factor_fcn"]], "sys_wide_zip_loads() (mp.dmce_load_mpc2 method)": [[266, "mp.dmce_load_mpc2.sys_wide_zip_loads"]], "table_var_map() (mp.dmce_load_mpc2 method)": [[266, "mp.dmce_load_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.data_subs"]], "dmce_reserve_gen_mpc2 (class in mp)": [[267, "mp.dmce_reserve_gen_mpc2"]], "get_export_size() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.get_export_size"]], "get_import_size() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.get_import_size"]], "import() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.import"]], "import_cost() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.import_cost"]], "import_qty() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.import_qty"]], "import_ramp() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.import_ramp"]], "name() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.name"]], "table_var_map() (mp.dmce_reserve_gen_mpc2 method)": [[267, "mp.dmce_reserve_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_zone_mpc2 method)": [[268, "mp.dmce_reserve_zone_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_zone_mpc2 method)": [[268, "mp.dmce_reserve_zone_mpc2.data_subs"]], "dmce_reserve_zone_mpc2 (class in mp)": [[268, "mp.dmce_reserve_zone_mpc2"]], "import_req() (mp.dmce_reserve_zone_mpc2 method)": [[268, "mp.dmce_reserve_zone_mpc2.import_req"]], "import_zones() (mp.dmce_reserve_zone_mpc2 method)": [[268, "mp.dmce_reserve_zone_mpc2.import_zones"]], "name() (mp.dmce_reserve_zone_mpc2 method)": [[268, "mp.dmce_reserve_zone_mpc2.name"]], "table_var_map() (mp.dmce_reserve_zone_mpc2 method)": [[268, "mp.dmce_reserve_zone_mpc2.table_var_map"]], "bus (mp.dmce_shunt_mpc2 attribute)": [[269, "mp.dmce_shunt_mpc2.bus"]], "data_field() (mp.dmce_shunt_mpc2 method)": [[269, "mp.dmce_shunt_mpc2.data_field"]], "dmce_shunt_mpc2 (class in mp)": [[269, "mp.dmce_shunt_mpc2"]], "get_export_size() (mp.dmce_shunt_mpc2 method)": [[269, "mp.dmce_shunt_mpc2.get_export_size"]], "get_import_size() (mp.dmce_shunt_mpc2 method)": [[269, "mp.dmce_shunt_mpc2.get_import_size"]], "name() (mp.dmce_shunt_mpc2 method)": [[269, "mp.dmce_shunt_mpc2.name"]], "table_var_map() (mp.dmce_shunt_mpc2 method)": [[269, "mp.dmce_shunt_mpc2.table_var_map"]], "data_field() (mp.dmce_xfmr3p_mpc2 method)": [[270, "mp.dmce_xfmr3p_mpc2.data_field"]], "dmce_xfmr3p_mpc2 (class in mp)": [[270, "mp.dmce_xfmr3p_mpc2"]], "name() (mp.dmce_xfmr3p_mpc2 method)": [[270, "mp.dmce_xfmr3p_mpc2.name"]], "table_var_map() (mp.dmce_xfmr3p_mpc2 method)": [[270, "mp.dmce_xfmr3p_mpc2.table_var_map"]], "b_fr (mp.dme_branch attribute)": [[271, "mp.dme_branch.b_fr"]], "b_to (mp.dme_branch attribute)": [[271, "mp.dme_branch.b_to"]], "build_params() (mp.dme_branch method)": [[271, "mp.dme_branch.build_params"]], "cxn_idx_prop() (mp.dme_branch method)": [[271, "mp.dme_branch.cxn_idx_prop"]], "cxn_type() (mp.dme_branch method)": [[271, "mp.dme_branch.cxn_type"]], "dme_branch (class in mp)": [[271, "mp.dme_branch"]], "export_vars() (mp.dme_branch method)": [[271, "mp.dme_branch.export_vars"]], "export_vars_offline_val() (mp.dme_branch method)": [[271, "mp.dme_branch.export_vars_offline_val"]], "fbus (mp.dme_branch attribute)": [[271, "mp.dme_branch.fbus"]], "g_fr (mp.dme_branch attribute)": [[271, "mp.dme_branch.g_fr"]], "g_to (mp.dme_branch attribute)": [[271, "mp.dme_branch.g_to"]], "initialize() (mp.dme_branch method)": [[271, "mp.dme_branch.initialize"]], "label() (mp.dme_branch method)": [[271, "mp.dme_branch.label"]], "labels() (mp.dme_branch method)": [[271, "mp.dme_branch.labels"]], "loss_tol (mp.dme_branch attribute)": [[271, "mp.dme_branch.loss_tol"]], "main_table_var_names() (mp.dme_branch method)": [[271, "mp.dme_branch.main_table_var_names"]], "name() (mp.dme_branch method)": [[271, "mp.dme_branch.name"]], "pp_data_cnt() (mp.dme_branch method)": [[271, "mp.dme_branch.pp_data_cnt"]], "pp_data_row_det() (mp.dme_branch method)": [[271, "mp.dme_branch.pp_data_row_det"]], "pp_data_sum() (mp.dme_branch method)": [[271, "mp.dme_branch.pp_data_sum"]], "pp_get_footers_det() (mp.dme_branch method)": [[271, "mp.dme_branch.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_branch method)": [[271, "mp.dme_branch.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_branch method)": [[271, "mp.dme_branch.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_branch method)": [[271, "mp.dme_branch.pp_have_section_sum"]], "r (mp.dme_branch attribute)": [[271, "mp.dme_branch.r"]], "rate_a (mp.dme_branch attribute)": [[271, "mp.dme_branch.rate_a"]], "ta (mp.dme_branch attribute)": [[271, "mp.dme_branch.ta"]], "tbus (mp.dme_branch attribute)": [[271, "mp.dme_branch.tbus"]], "tm (mp.dme_branch attribute)": [[271, "mp.dme_branch.tm"]], "update_status() (mp.dme_branch method)": [[271, "mp.dme_branch.update_status"]], "x (mp.dme_branch attribute)": [[271, "mp.dme_branch.x"]], "dme_branch_opf (class in mp)": [[272, "mp.dme_branch_opf"]], "export_vars() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.export_vars"]], "export_vars_offline_val() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.pp_get_headers_lim"]], "pp_get_title_lim() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_branch_opf method)": [[272, "mp.dme_branch_opf.pretty_print"]], "build_params() (mp.dme_bus method)": [[273, "mp.dme_bus.build_params"]], "dme_bus (class in mp)": [[273, "mp.dme_bus"]], "export_vars() (mp.dme_bus method)": [[273, "mp.dme_bus.export_vars"]], "export_vars_offline_val() (mp.dme_bus method)": [[273, "mp.dme_bus.export_vars_offline_val"]], "init_status() (mp.dme_bus method)": [[273, "mp.dme_bus.init_status"]], "label() (mp.dme_bus method)": [[273, "mp.dme_bus.label"]], "labels() (mp.dme_bus method)": [[273, "mp.dme_bus.labels"]], "main_table_var_names() (mp.dme_bus method)": [[273, "mp.dme_bus.main_table_var_names"]], "name() (mp.dme_bus method)": [[273, "mp.dme_bus.name"]], "pp_data_cnt() (mp.dme_bus method)": [[273, "mp.dme_bus.pp_data_cnt"]], "pp_data_ext() (mp.dme_bus method)": [[273, "mp.dme_bus.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus method)": [[273, "mp.dme_bus.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus method)": [[273, "mp.dme_bus.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus method)": [[273, "mp.dme_bus.pp_have_section_det"]], "pp_have_section_ext() (mp.dme_bus method)": [[273, "mp.dme_bus.pp_have_section_ext"]], "set_bus_type_pq() (mp.dme_bus method)": [[273, "mp.dme_bus.set_bus_type_pq"]], "set_bus_type_pv() (mp.dme_bus method)": [[273, "mp.dme_bus.set_bus_type_pv"]], "set_bus_type_ref() (mp.dme_bus method)": [[273, "mp.dme_bus.set_bus_type_ref"]], "type (mp.dme_bus attribute)": [[273, "mp.dme_bus.type"]], "update_status() (mp.dme_bus method)": [[273, "mp.dme_bus.update_status"]], "va_start (mp.dme_bus attribute)": [[273, "mp.dme_bus.va_start"]], "vm_control (mp.dme_bus attribute)": [[273, "mp.dme_bus.vm_control"]], "vm_lb (mp.dme_bus attribute)": [[273, "mp.dme_bus.vm_lb"]], "vm_start (mp.dme_bus attribute)": [[273, "mp.dme_bus.vm_start"]], "vm_ub (mp.dme_bus attribute)": [[273, "mp.dme_bus.vm_ub"]], "build_params() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.build_params"]], "dme_bus3p (class in mp)": [[274, "mp.dme_bus3p"]], "init_status() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.init_status"]], "label() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.label"]], "labels() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.labels"]], "main_table_var_names() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.main_table_var_names"]], "name() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.name"]], "pp_data_row_det() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.pp_have_section_det"]], "type (mp.dme_bus3p attribute)": [[274, "mp.dme_bus3p.type"]], "update_status() (mp.dme_bus3p method)": [[274, "mp.dme_bus3p.update_status"]], "va1_start (mp.dme_bus3p attribute)": [[274, "mp.dme_bus3p.va1_start"]], "va2_start (mp.dme_bus3p attribute)": [[274, "mp.dme_bus3p.va2_start"]], "va3_start (mp.dme_bus3p attribute)": [[274, "mp.dme_bus3p.va3_start"]], "vm1_start (mp.dme_bus3p attribute)": [[274, "mp.dme_bus3p.vm1_start"]], "vm2_start (mp.dme_bus3p attribute)": [[274, "mp.dme_bus3p.vm2_start"]], "vm3_start (mp.dme_bus3p attribute)": [[274, "mp.dme_bus3p.vm3_start"]], "vm_control (mp.dme_bus3p attribute)": [[274, "mp.dme_bus3p.vm_control"]], "dme_bus3p_opf (class in mp)": [[275, "mp.dme_bus3p_opf"]], "dme_bus_opf (class in mp)": [[276, "mp.dme_bus_opf"]], "export_vars() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.export_vars"]], "export_vars_offline_val() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.pp_binding_rows_lim"]], "pp_data_ext() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.pp_data_row_lim"]], "pp_get_headers_det() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_bus_opf method)": [[276, "mp.dme_bus_opf.pp_have_section_lim"]], "build_params() (mp.dme_buslink method)": [[277, "mp.dme_buslink.build_params"]], "bus (mp.dme_buslink attribute)": [[277, "mp.dme_buslink.bus"]], "bus3p (mp.dme_buslink attribute)": [[277, "mp.dme_buslink.bus3p"]], "cxn_idx_prop() (mp.dme_buslink method)": [[277, "mp.dme_buslink.cxn_idx_prop"]], "cxn_type() (mp.dme_buslink method)": [[277, "mp.dme_buslink.cxn_type"]], "dme_buslink (class in mp)": [[277, "mp.dme_buslink"]], "initialize() (mp.dme_buslink method)": [[277, "mp.dme_buslink.initialize"]], "label() (mp.dme_buslink method)": [[277, "mp.dme_buslink.label"]], "labels() (mp.dme_buslink method)": [[277, "mp.dme_buslink.labels"]], "main_table_var_names() (mp.dme_buslink method)": [[277, "mp.dme_buslink.main_table_var_names"]], "name() (mp.dme_buslink method)": [[277, "mp.dme_buslink.name"]], "pg1_start (mp.dme_buslink attribute)": [[277, "mp.dme_buslink.pg1_start"]], "pg2_start (mp.dme_buslink attribute)": [[277, "mp.dme_buslink.pg2_start"]], "pg3_start (mp.dme_buslink attribute)": [[277, "mp.dme_buslink.pg3_start"]], "pp_data_row_det() (mp.dme_buslink method)": [[277, "mp.dme_buslink.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_buslink method)": [[277, "mp.dme_buslink.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_buslink method)": [[277, "mp.dme_buslink.pp_have_section_det"]], "qg1_start (mp.dme_buslink attribute)": [[277, "mp.dme_buslink.qg1_start"]], "qg2_start (mp.dme_buslink attribute)": [[277, "mp.dme_buslink.qg2_start"]], "qg3_start (mp.dme_buslink attribute)": [[277, "mp.dme_buslink.qg3_start"]], "update_status() (mp.dme_buslink method)": [[277, "mp.dme_buslink.update_status"]], "dme_buslink_opf (class in mp)": [[278, "mp.dme_buslink_opf"]], "apply_vm_setpoint() (mp.dme_gen method)": [[279, "mp.dme_gen.apply_vm_setpoint"]], "build_params() (mp.dme_gen method)": [[279, "mp.dme_gen.build_params"]], "bus (mp.dme_gen attribute)": [[279, "mp.dme_gen.bus"]], "bus_on (mp.dme_gen attribute)": [[279, "mp.dme_gen.bus_on"]], "cxn_idx_prop() (mp.dme_gen method)": [[279, "mp.dme_gen.cxn_idx_prop"]], "cxn_type() (mp.dme_gen method)": [[279, "mp.dme_gen.cxn_type"]], "dme_gen (class in mp)": [[279, "mp.dme_gen"]], "export_vars() (mp.dme_gen method)": [[279, "mp.dme_gen.export_vars"]], "export_vars_offline_val() (mp.dme_gen method)": [[279, "mp.dme_gen.export_vars_offline_val"]], "have_cost() (mp.dme_gen method)": [[279, "mp.dme_gen.have_cost"]], "initialize() (mp.dme_gen method)": [[279, "mp.dme_gen.initialize"]], "isload() (mp.dme_gen method)": [[279, "mp.dme_gen.isload"]], "label() (mp.dme_gen method)": [[279, "mp.dme_gen.label"]], "labels() (mp.dme_gen method)": [[279, "mp.dme_gen.labels"]], "main_table_var_names() (mp.dme_gen method)": [[279, "mp.dme_gen.main_table_var_names"]], "name() (mp.dme_gen method)": [[279, "mp.dme_gen.name"]], "pg_lb (mp.dme_gen attribute)": [[279, "mp.dme_gen.pg_lb"]], "pg_start (mp.dme_gen attribute)": [[279, "mp.dme_gen.pg_start"]], "pg_ub (mp.dme_gen attribute)": [[279, "mp.dme_gen.pg_ub"]], "pp_data_row_det() (mp.dme_gen method)": [[279, "mp.dme_gen.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen method)": [[279, "mp.dme_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_gen method)": [[279, "mp.dme_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_gen method)": [[279, "mp.dme_gen.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen method)": [[279, "mp.dme_gen.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen method)": [[279, "mp.dme_gen.pp_have_section_sum"]], "qg_lb (mp.dme_gen attribute)": [[279, "mp.dme_gen.qg_lb"]], "qg_start (mp.dme_gen attribute)": [[279, "mp.dme_gen.qg_start"]], "qg_ub (mp.dme_gen attribute)": [[279, "mp.dme_gen.qg_ub"]], "update_status() (mp.dme_gen method)": [[279, "mp.dme_gen.update_status"]], "violated_q_lims() (mp.dme_gen method)": [[279, "mp.dme_gen.violated_q_lims"]], "vm_setpoint (mp.dme_gen attribute)": [[279, "mp.dme_gen.vm_setpoint"]], "apply_vm_setpoint() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.apply_vm_setpoint"]], "build_params() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.build_params"]], "bus (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.bus"]], "bus_on (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.bus_on"]], "cxn_idx_prop() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.cxn_idx_prop"]], "cxn_type() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.cxn_type"]], "dme_gen3p (class in mp)": [[280, "mp.dme_gen3p"]], "initialize() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.initialize"]], "label() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.label"]], "labels() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.labels"]], "main_table_var_names() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.main_table_var_names"]], "name() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.name"]], "pg1_start (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.pg1_start"]], "pg2_start (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.pg2_start"]], "pg3_start (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.pg3_start"]], "pp_data_row_det() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.pp_have_section_sum"]], "qg1_start (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.qg1_start"]], "qg2_start (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.qg2_start"]], "qg3_start (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.qg3_start"]], "update_status() (mp.dme_gen3p method)": [[280, "mp.dme_gen3p.update_status"]], "vm1_setpoint (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.vm1_setpoint"]], "vm2_setpoint (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.vm2_setpoint"]], "vm3_setpoint (mp.dme_gen3p attribute)": [[280, "mp.dme_gen3p.vm3_setpoint"]], "dme_gen3p_opf (class in mp)": [[281, "mp.dme_gen3p_opf"]], "build_cost_params() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.build_cost_params"]], "dme_gen_opf (class in mp)": [[282, "mp.dme_gen_opf"]], "export_vars() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.export_vars"]], "export_vars_offline_val() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.export_vars_offline_val"]], "have_cost() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.have_cost"]], "main_table_var_names() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.main_table_var_names"]], "max_pwl_gencost() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.max_pwl_gencost"]], "pp_binding_rows_lim() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_gen_opf method)": [[282, "mp.dme_gen_opf.pretty_print"]], "apply_vm_setpoints() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.apply_vm_setpoints"]], "build_params() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.build_params"]], "cxn_idx_prop() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.cxn_idx_prop"]], "cxn_type() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.cxn_type"]], "dme_legacy_dcline (class in mp)": [[283, "mp.dme_legacy_dcline"]], "export_vars() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.export_vars_offline_val"]], "fbus (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.fbus"]], "fbus_on (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.fbus_on"]], "have_cost() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.have_cost"]], "initialize() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.initialize"]], "label() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.label"]], "labels() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.labels"]], "loss0 (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.loss0"]], "loss1 (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.loss1"]], "main_table_var_names() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.main_table_var_names"]], "name() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.name"]], "p_fr_lb (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.p_fr_lb"]], "p_fr_start (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.p_fr_start"]], "p_fr_ub (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.p_fr_ub"]], "p_to_start (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.p_to_start"]], "pp_data_row_det() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.pp_data_row_det"]], "pp_data_sum() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.pp_data_sum"]], "pp_get_headers_det() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.pp_have_section_sum"]], "q_fr_lb (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.q_fr_lb"]], "q_fr_start (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.q_fr_start"]], "q_fr_ub (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.q_fr_ub"]], "q_to_lb (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.q_to_lb"]], "q_to_start (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.q_to_start"]], "q_to_ub (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.q_to_ub"]], "tbus (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.tbus"]], "tbus_on (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.tbus_on"]], "update_status() (mp.dme_legacy_dcline method)": [[283, "mp.dme_legacy_dcline.update_status"]], "vm_setpoint_fr (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.vm_setpoint_fr"]], "vm_setpoint_to (mp.dme_legacy_dcline attribute)": [[283, "mp.dme_legacy_dcline.vm_setpoint_to"]], "build_cost_params() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.build_cost_params"]], "dme_legacy_dcline_opf (class in mp)": [[284, "mp.dme_legacy_dcline_opf"]], "export_vars() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.export_vars_offline_val"]], "have_cost() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.have_cost"]], "main_table_var_names() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_legacy_dcline_opf method)": [[284, "mp.dme_legacy_dcline_opf.pretty_print"]], "build_params() (mp.dme_line3p method)": [[285, "mp.dme_line3p.build_params"]], "create_line_construction_table() (mp.dme_line3p method)": [[285, "mp.dme_line3p.create_line_construction_table"]], "cxn_idx_prop() (mp.dme_line3p method)": [[285, "mp.dme_line3p.cxn_idx_prop"]], "cxn_type() (mp.dme_line3p method)": [[285, "mp.dme_line3p.cxn_type"]], "dme_line3p (class in mp)": [[285, "mp.dme_line3p"]], "fbus (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.fbus"]], "freq (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.freq"]], "initialize() (mp.dme_line3p method)": [[285, "mp.dme_line3p.initialize"]], "label() (mp.dme_line3p method)": [[285, "mp.dme_line3p.label"]], "labels() (mp.dme_line3p method)": [[285, "mp.dme_line3p.labels"]], "lc (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.lc"]], "lc_tab (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.lc_tab"]], "lc_table_var_names() (mp.dme_line3p method)": [[285, "mp.dme_line3p.lc_table_var_names"]], "lc_y_idx (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.lc_y_idx"]], "len (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.len"]], "main_table_var_names() (mp.dme_line3p method)": [[285, "mp.dme_line3p.main_table_var_names"]], "name() (mp.dme_line3p method)": [[285, "mp.dme_line3p.name"]], "pp_data_row_det() (mp.dme_line3p method)": [[285, "mp.dme_line3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_line3p method)": [[285, "mp.dme_line3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_line3p method)": [[285, "mp.dme_line3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_line3p method)": [[285, "mp.dme_line3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_line3p method)": [[285, "mp.dme_line3p.pp_have_section_sum"]], "pretty_print() (mp.dme_line3p method)": [[285, "mp.dme_line3p.pretty_print"]], "symmat2vec() (mp.dme_line3p method)": [[285, "mp.dme_line3p.symmat2vec"]], "tbus (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.tbus"]], "update_status() (mp.dme_line3p method)": [[285, "mp.dme_line3p.update_status"]], "vec2symmat() (mp.dme_line3p method)": [[285, "mp.dme_line3p.vec2symmat"]], "yc (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.yc"]], "ys (mp.dme_line3p attribute)": [[285, "mp.dme_line3p.ys"]], "dme_line3p_opf (class in mp)": [[286, "mp.dme_line3p_opf"]], "build_params() (mp.dme_load method)": [[287, "mp.dme_load.build_params"]], "bus (mp.dme_load attribute)": [[287, "mp.dme_load.bus"]], "cxn_idx_prop() (mp.dme_load method)": [[287, "mp.dme_load.cxn_idx_prop"]], "cxn_type() (mp.dme_load method)": [[287, "mp.dme_load.cxn_type"]], "dme_load (class in mp)": [[287, "mp.dme_load"]], "initialize() (mp.dme_load method)": [[287, "mp.dme_load.initialize"]], "label() (mp.dme_load method)": [[287, "mp.dme_load.label"]], "labels() (mp.dme_load method)": [[287, "mp.dme_load.labels"]], "main_table_var_names() (mp.dme_load method)": [[287, "mp.dme_load.main_table_var_names"]], "name() (mp.dme_load method)": [[287, "mp.dme_load.name"]], "pd (mp.dme_load attribute)": [[287, "mp.dme_load.pd"]], "pd_i (mp.dme_load attribute)": [[287, "mp.dme_load.pd_i"]], "pd_z (mp.dme_load attribute)": [[287, "mp.dme_load.pd_z"]], "pp_data_row_det() (mp.dme_load method)": [[287, "mp.dme_load.pp_data_row_det"]], "pp_data_sum() (mp.dme_load method)": [[287, "mp.dme_load.pp_data_sum"]], "pp_get_footers_det() (mp.dme_load method)": [[287, "mp.dme_load.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_load method)": [[287, "mp.dme_load.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load method)": [[287, "mp.dme_load.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load method)": [[287, "mp.dme_load.pp_have_section_sum"]], "qd (mp.dme_load attribute)": [[287, "mp.dme_load.qd"]], "qd_i (mp.dme_load attribute)": [[287, "mp.dme_load.qd_i"]], "qd_z (mp.dme_load attribute)": [[287, "mp.dme_load.qd_z"]], "update_status() (mp.dme_load method)": [[287, "mp.dme_load.update_status"]], "build_params() (mp.dme_load3p method)": [[288, "mp.dme_load3p.build_params"]], "bus (mp.dme_load3p attribute)": [[288, "mp.dme_load3p.bus"]], "cxn_idx_prop() (mp.dme_load3p method)": [[288, "mp.dme_load3p.cxn_idx_prop"]], "cxn_type() (mp.dme_load3p method)": [[288, "mp.dme_load3p.cxn_type"]], "dme_load3p (class in mp)": [[288, "mp.dme_load3p"]], "initialize() (mp.dme_load3p method)": [[288, "mp.dme_load3p.initialize"]], "label() (mp.dme_load3p method)": [[288, "mp.dme_load3p.label"]], "labels() (mp.dme_load3p method)": [[288, "mp.dme_load3p.labels"]], "main_table_var_names() (mp.dme_load3p method)": [[288, "mp.dme_load3p.main_table_var_names"]], "name() (mp.dme_load3p method)": [[288, "mp.dme_load3p.name"]], "pd1 (mp.dme_load3p attribute)": [[288, "mp.dme_load3p.pd1"]], "pd2 (mp.dme_load3p attribute)": [[288, "mp.dme_load3p.pd2"]], "pd3 (mp.dme_load3p attribute)": [[288, "mp.dme_load3p.pd3"]], "pf1 (mp.dme_load3p attribute)": [[288, "mp.dme_load3p.pf1"]], "pf2 (mp.dme_load3p attribute)": [[288, "mp.dme_load3p.pf2"]], "pf3 (mp.dme_load3p attribute)": [[288, "mp.dme_load3p.pf3"]], "pp_data_row_det() (mp.dme_load3p method)": [[288, "mp.dme_load3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_load3p method)": [[288, "mp.dme_load3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_load3p method)": [[288, "mp.dme_load3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load3p method)": [[288, "mp.dme_load3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load3p method)": [[288, "mp.dme_load3p.pp_have_section_sum"]], "update_status() (mp.dme_load3p method)": [[288, "mp.dme_load3p.update_status"]], "dme_load3p_opf (class in mp)": [[289, "mp.dme_load3p_opf"]], "dme_load_cpf (class in mp)": [[290, "mp.dme_load_cpf"]], "export_vars() (mp.dme_load_cpf method)": [[290, "mp.dme_load_cpf.export_vars"]], "parameterized() (mp.dme_load_cpf method)": [[290, "mp.dme_load_cpf.parameterized"]], "dme_load_opf (class in mp)": [[291, "mp.dme_load_opf"]], "build_params() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.build_params"]], "dme_reserve_gen (class in mp)": [[292, "mp.dme_reserve_gen"]], "export_vars() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.export_vars_offline_val"]], "gen (mp.dme_reserve_gen attribute)": [[292, "mp.dme_reserve_gen.gen"]], "label() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.label"]], "labels() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.labels"]], "main_table_var_names() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.main_table_var_names"]], "name() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.name"]], "pp_binding_rows_lim() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_binding_rows_lim"]], "pp_data_row_det() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_data_row_lim"]], "pp_data_sum() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_get_headers_lim"]], "pp_have_section_det() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_have_section_det"]], "pp_have_section_lim() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_have_section_lim"]], "pp_have_section_sum() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.pp_have_section_sum"]], "r_ub (mp.dme_reserve_gen attribute)": [[292, "mp.dme_reserve_gen.r_ub"]], "update_status() (mp.dme_reserve_gen method)": [[292, "mp.dme_reserve_gen.update_status"]], "build_params() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.build_params"]], "dme_reserve_zone (class in mp)": [[293, "mp.dme_reserve_zone"]], "export_vars() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.export_vars_offline_val"]], "label() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.label"]], "labels() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.labels"]], "main_table_var_names() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.main_table_var_names"]], "name() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.name"]], "pp_data_row_det() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.pp_have_section_det"]], "req (mp.dme_reserve_zone attribute)": [[293, "mp.dme_reserve_zone.req"]], "update_status() (mp.dme_reserve_zone method)": [[293, "mp.dme_reserve_zone.update_status"]], "zones (mp.dme_reserve_zone attribute)": [[293, "mp.dme_reserve_zone.zones"]], "ctol (mp.dme_shared_opf attribute)": [[294, "mp.dme_shared_opf.ctol"]], "dme_shared_opf (class in mp)": [[294, "mp.dme_shared_opf"]], "pp_binding_rows_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_binding_rows_lim"]], "pp_data_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_data_lim"]], "pp_data_other() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_data_other"]], "pp_data_row_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_data_row_lim"]], "pp_get_footers_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_get_footers_lim"]], "pp_get_footers_other() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_get_footers_other"]], "pp_get_headers_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_get_headers_lim"]], "pp_get_headers_other() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_get_headers_other"]], "pp_get_title_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_have_section_lim"]], "pp_have_section_other() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_have_section_other"]], "pp_rows_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_rows_lim"]], "pp_rows_other() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_rows_other"]], "pp_set_tols_lim() (mp.dme_shared_opf method)": [[294, "mp.dme_shared_opf.pp_set_tols_lim"]], "ptol (mp.dme_shared_opf attribute)": [[294, "mp.dme_shared_opf.ptol"]], "bs (mp.dme_shunt attribute)": [[295, "mp.dme_shunt.bs"]], "build_params() (mp.dme_shunt method)": [[295, "mp.dme_shunt.build_params"]], "bus (mp.dme_shunt attribute)": [[295, "mp.dme_shunt.bus"]], "cxn_idx_prop() (mp.dme_shunt method)": [[295, "mp.dme_shunt.cxn_idx_prop"]], "cxn_type() (mp.dme_shunt method)": [[295, "mp.dme_shunt.cxn_type"]], "dme_shunt (class in mp)": [[295, "mp.dme_shunt"]], "gs (mp.dme_shunt attribute)": [[295, "mp.dme_shunt.gs"]], "initialize() (mp.dme_shunt method)": [[295, "mp.dme_shunt.initialize"]], "label() (mp.dme_shunt method)": [[295, "mp.dme_shunt.label"]], "labels() (mp.dme_shunt method)": [[295, "mp.dme_shunt.labels"]], "main_table_var_names() (mp.dme_shunt method)": [[295, "mp.dme_shunt.main_table_var_names"]], "name() (mp.dme_shunt method)": [[295, "mp.dme_shunt.name"]], "pp_data_row_det() (mp.dme_shunt method)": [[295, "mp.dme_shunt.pp_data_row_det"]], "pp_data_sum() (mp.dme_shunt method)": [[295, "mp.dme_shunt.pp_data_sum"]], "pp_get_footers_det() (mp.dme_shunt method)": [[295, "mp.dme_shunt.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_shunt method)": [[295, "mp.dme_shunt.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_shunt method)": [[295, "mp.dme_shunt.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_shunt method)": [[295, "mp.dme_shunt.pp_have_section_sum"]], "update_status() (mp.dme_shunt method)": [[295, "mp.dme_shunt.update_status"]], "dme_shunt_cpf (class in mp)": [[296, "mp.dme_shunt_cpf"]], "export_vars() (mp.dme_shunt_cpf method)": [[296, "mp.dme_shunt_cpf.export_vars"]], "parameterized() (mp.dme_shunt_cpf method)": [[296, "mp.dme_shunt_cpf.parameterized"]], "dme_shunt_opf (class in mp)": [[297, "mp.dme_shunt_opf"]], "build_params() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.build_params"]], "cxn_idx_prop() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.cxn_idx_prop"]], "cxn_type() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.cxn_type"]], "dme_xfmr3p (class in mp)": [[298, "mp.dme_xfmr3p"]], "fbus (mp.dme_xfmr3p attribute)": [[298, "mp.dme_xfmr3p.fbus"]], "initialize() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.initialize"]], "label() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.label"]], "labels() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.labels"]], "main_table_var_names() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.main_table_var_names"]], "name() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.name"]], "pp_data_row_det() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.pp_have_section_sum"]], "pretty_print() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.pretty_print"]], "r (mp.dme_xfmr3p attribute)": [[298, "mp.dme_xfmr3p.r"]], "tbus (mp.dme_xfmr3p attribute)": [[298, "mp.dme_xfmr3p.tbus"]], "update_status() (mp.dme_xfmr3p method)": [[298, "mp.dme_xfmr3p.update_status"]], "x (mp.dme_xfmr3p attribute)": [[298, "mp.dme_xfmr3p.x"]], "dme_xfmr3p_opf (class in mp)": [[299, "mp.dme_xfmr3p_opf"]], "element_classes (mp.element_container attribute)": [[300, "mp.element_container.element_classes"]], "element_container (class in mp)": [[300, "mp.element_container"]], "elements (mp.element_container attribute)": [[300, "mp.element_container.elements"]], "modify_element_classes() (mp.element_container method)": [[300, "mp.element_container.modify_element_classes"]], "data_model_class() (mp.extension method)": [[301, "mp.extension.data_model_class"]], "dm_converter_class() (mp.extension method)": [[301, "mp.extension.dm_converter_class"]], "dm_element_classes() (mp.extension method)": [[301, "mp.extension.dm_element_classes"]], "dmc_element_classes() (mp.extension method)": [[301, "mp.extension.dmc_element_classes"]], "extension (class in mp)": [[301, "mp.extension"]], "math_model_class() (mp.extension method)": [[301, "mp.extension.math_model_class"]], "mm_element_classes() (mp.extension method)": [[301, "mp.extension.mm_element_classes"]], "network_model_class() (mp.extension method)": [[301, "mp.extension.network_model_class"]], "nm_element_classes() (mp.extension method)": [[301, "mp.extension.nm_element_classes"]], "task_class() (mp.extension method)": [[301, "mp.extension.task_class"]], "find_form_class() (mp.form method)": [[302, "mp.form.find_form_class"]], "form (class in mp)": [[302, "mp.form"]], "form_name() (mp.form method)": [[302, "mp.form.form_name"]], "form_tag() (mp.form method)": [[302, "mp.form.form_tag"]], "get_params() (mp.form method)": [[302, "mp.form.get_params"]], "model_params() (mp.form method)": [[302, "mp.form.model_params"]], "model_vvars() (mp.form method)": [[302, "mp.form.model_vvars"]], "model_zvars() (mp.form method)": [[302, "mp.form.model_zvars"]], "l (mp.form_ac attribute)": [[303, "mp.form_ac.L"]], "m (mp.form_ac attribute)": [[303, "mp.form_ac.M"]], "n (mp.form_ac attribute)": [[303, "mp.form_ac.N"]], "y (mp.form_ac attribute)": [[303, "mp.form_ac.Y"]], "aux_data_va_vm() (mp.form_ac method)": [[303, "mp.form_ac.aux_data_va_vm"]], "form_ac (class in mp)": [[303, "mp.form_ac"]], "i (mp.form_ac attribute)": [[303, "mp.form_ac.i"]], "inln (mp.form_ac attribute)": [[303, "mp.form_ac.inln"]], "inln_hess (mp.form_ac attribute)": [[303, "mp.form_ac.inln_hess"]], "model_params() (mp.form_ac method)": [[303, "mp.form_ac.model_params"]], "model_zvars() (mp.form_ac method)": [[303, "mp.form_ac.model_zvars"]], "param_ncols (mp.form_ac attribute)": [[303, "mp.form_ac.param_ncols"]], "port_active_power2_lim_fcn() (mp.form_ac method)": [[303, "mp.form_ac.port_active_power2_lim_fcn"]], "port_active_power2_lim_hess() (mp.form_ac method)": [[303, "mp.form_ac.port_active_power2_lim_hess"]], "port_active_power_lim_fcn() (mp.form_ac method)": [[303, "mp.form_ac.port_active_power_lim_fcn"]], "port_active_power_lim_hess() (mp.form_ac method)": [[303, "mp.form_ac.port_active_power_lim_hess"]], "port_apparent_power_lim_fcn() (mp.form_ac method)": [[303, "mp.form_ac.port_apparent_power_lim_fcn"]], "port_apparent_power_lim_hess() (mp.form_ac method)": [[303, "mp.form_ac.port_apparent_power_lim_hess"]], "port_current_lim_fcn() (mp.form_ac method)": [[303, "mp.form_ac.port_current_lim_fcn"]], "port_current_lim_hess() (mp.form_ac method)": [[303, "mp.form_ac.port_current_lim_hess"]], "port_inj_current() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_current"]], "port_inj_current_hess() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_current_hess"]], "port_inj_current_hess_v() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_current_jac"]], "port_inj_power() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_power"]], "port_inj_power_hess() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_power_hess"]], "port_inj_power_hess_v() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_ac method)": [[303, "mp.form_ac.port_inj_power_jac"]], "s (mp.form_ac attribute)": [[303, "mp.form_ac.s"]], "snln (mp.form_ac attribute)": [[303, "mp.form_ac.snln"]], "snln_hess (mp.form_ac attribute)": [[303, "mp.form_ac.snln_hess"]], "aux_data_va_vm() (mp.form_acc method)": [[304, "mp.form_acc.aux_data_va_vm"]], "form_acc (class in mp)": [[304, "mp.form_acc"]], "form_name() (mp.form_acc method)": [[304, "mp.form_acc.form_name"]], "form_tag() (mp.form_acc method)": [[304, "mp.form_acc.form_tag"]], "model_vvars() (mp.form_acc method)": [[304, "mp.form_acc.model_vvars"]], "port_inj_current_hess_v() (mp.form_acc method)": [[304, "mp.form_acc.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acc method)": [[304, "mp.form_acc.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acc method)": [[304, "mp.form_acc.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acc method)": [[304, "mp.form_acc.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acc method)": [[304, "mp.form_acc.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acc method)": [[304, "mp.form_acc.port_inj_power_jac"]], "va_fcn() (mp.form_acc method)": [[304, "mp.form_acc.va_fcn"]], "va_hess() (mp.form_acc method)": [[304, "mp.form_acc.va_hess"]], "vm2_fcn() (mp.form_acc method)": [[304, "mp.form_acc.vm2_fcn"]], "vm2_hess() (mp.form_acc method)": [[304, "mp.form_acc.vm2_hess"]], "aux_data_va_vm() (mp.form_acp method)": [[305, "mp.form_acp.aux_data_va_vm"]], "form_acp (class in mp)": [[305, "mp.form_acp"]], "form_name() (mp.form_acp method)": [[305, "mp.form_acp.form_name"]], "form_tag() (mp.form_acp method)": [[305, "mp.form_acp.form_tag"]], "model_vvars() (mp.form_acp method)": [[305, "mp.form_acp.model_vvars"]], "port_inj_current_hess_v() (mp.form_acp method)": [[305, "mp.form_acp.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acp method)": [[305, "mp.form_acp.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acp method)": [[305, "mp.form_acp.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acp method)": [[305, "mp.form_acp.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acp method)": [[305, "mp.form_acp.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acp method)": [[305, "mp.form_acp.port_inj_power_jac"]], "b (mp.form_dc attribute)": [[306, "mp.form_dc.B"]], "k (mp.form_dc attribute)": [[306, "mp.form_dc.K"]], "form_dc (class in mp)": [[306, "mp.form_dc"]], "form_name() (mp.form_dc method)": [[306, "mp.form_dc.form_name"]], "form_tag() (mp.form_dc method)": [[306, "mp.form_dc.form_tag"]], "model_params() (mp.form_dc method)": [[306, "mp.form_dc.model_params"]], "model_vvars() (mp.form_dc method)": [[306, "mp.form_dc.model_vvars"]], "model_zvars() (mp.form_dc method)": [[306, "mp.form_dc.model_zvars"]], "p (mp.form_dc attribute)": [[306, "mp.form_dc.p"]], "param_ncols (mp.form_dc attribute)": [[306, "mp.form_dc.param_ncols"]], "port_inj_power() (mp.form_dc method)": [[306, "mp.form_dc.port_inj_power"]], "add_elements() (mp.mapped_array method)": [[307, "mp.mapped_array.add_elements"]], "add_names() (mp.mapped_array method)": [[307, "mp.mapped_array.add_names"]], "copy() (mp.mapped_array method)": [[307, "mp.mapped_array.copy"]], "delete_elements() (mp.mapped_array method)": [[307, "mp.mapped_array.delete_elements"]], "display() (mp.mapped_array method)": [[307, "mp.mapped_array.display"]], "has_name() (mp.mapped_array method)": [[307, "mp.mapped_array.has_name"]], "length() (mp.mapped_array method)": [[307, "mp.mapped_array.length"]], "mapped_array (class in mp)": [[307, "mp.mapped_array"]], "mapped_array() (mp.mapped_array method)": [[307, "mp.mapped_array.mapped_array"]], "name2idx() (mp.mapped_array method)": [[307, "mp.mapped_array.name2idx"]], "size() (mp.mapped_array method)": [[307, "mp.mapped_array.size"]], "subsasgn() (mp.mapped_array method)": [[307, "mp.mapped_array.subsasgn"]], "subsref() (mp.mapped_array method)": [[307, "mp.mapped_array.subsref"]], "add_aux_data() (mp.math_model method)": [[308, "mp.math_model.add_aux_data"]], "add_constraints() (mp.math_model method)": [[308, "mp.math_model.add_constraints"]], "add_costs() (mp.math_model method)": [[308, "mp.math_model.add_costs"]], "add_node_balance_constraints() (mp.math_model method)": [[308, "mp.math_model.add_node_balance_constraints"]], "add_system_constraints() (mp.math_model method)": [[308, "mp.math_model.add_system_constraints"]], "add_system_costs() (mp.math_model method)": [[308, "mp.math_model.add_system_costs"]], "add_system_vars() (mp.math_model method)": [[308, "mp.math_model.add_system_vars"]], "add_vars() (mp.math_model method)": [[308, "mp.math_model.add_vars"]], "aux_data (mp.math_model attribute)": [[308, "mp.math_model.aux_data"]], "build() (mp.math_model method)": [[308, "mp.math_model.build"]], "build_base_aux_data() (mp.math_model method)": [[308, "mp.math_model.build_base_aux_data"]], "data_model_update() (mp.math_model method)": [[308, "mp.math_model.data_model_update"]], "display() (mp.math_model method)": [[308, "mp.math_model.display"]], "form_name() (mp.math_model method)": [[308, "mp.math_model.form_name"]], "form_tag() (mp.math_model method)": [[308, "mp.math_model.form_tag"]], "math_model (class in mp)": [[308, "mp.math_model"]], "network_model_x_soln() (mp.math_model method)": [[308, "mp.math_model.network_model_x_soln"]], "solve_opts() (mp.math_model method)": [[308, "mp.math_model.solve_opts"]], "task_name() (mp.math_model method)": [[308, "mp.math_model.task_name"]], "task_tag() (mp.math_model method)": [[308, "mp.math_model.task_tag"]], "update_nm_vars() (mp.math_model method)": [[308, "mp.math_model.update_nm_vars"]], "math_model_cpf_acc (class in mp)": [[309, "mp.math_model_cpf_acc"]], "math_model_cpf_acc() (mp.math_model_cpf_acc method)": [[309, "mp.math_model_cpf_acc.math_model_cpf_acc"]], "add_node_balance_constraints() (mp.math_model_cpf_acci method)": [[310, "mp.math_model_cpf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acci method)": [[310, "mp.math_model_cpf_acci.form_name"]], "form_tag() (mp.math_model_cpf_acci method)": [[310, "mp.math_model_cpf_acci.form_tag"]], "math_model_cpf_acci (class in mp)": [[310, "mp.math_model_cpf_acci"]], "add_node_balance_constraints() (mp.math_model_cpf_accs method)": [[311, "mp.math_model_cpf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_accs method)": [[311, "mp.math_model_cpf_accs.form_name"]], "form_tag() (mp.math_model_cpf_accs method)": [[311, "mp.math_model_cpf_accs.form_tag"]], "math_model_cpf_accs (class in mp)": [[311, "mp.math_model_cpf_accs"]], "callback_vlim() (mp.math_model_cpf_acp method)": [[312, "mp.math_model_cpf_acp.callback_vlim"]], "event_vlim() (mp.math_model_cpf_acp method)": [[312, "mp.math_model_cpf_acp.event_vlim"]], "math_model_cpf_acp (class in mp)": [[312, "mp.math_model_cpf_acp"]], "math_model_cpf_acp() (mp.math_model_cpf_acp method)": [[312, "mp.math_model_cpf_acp.math_model_cpf_acp"]], "add_node_balance_constraints() (mp.math_model_cpf_acpi method)": [[313, "mp.math_model_cpf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acpi method)": [[313, "mp.math_model_cpf_acpi.form_name"]], "form_tag() (mp.math_model_cpf_acpi method)": [[313, "mp.math_model_cpf_acpi.form_tag"]], "math_model_cpf_acpi (class in mp)": [[313, "mp.math_model_cpf_acpi"]], "add_node_balance_constraints() (mp.math_model_cpf_acps method)": [[314, "mp.math_model_cpf_acps.add_node_balance_constraints"]], "expand_z_warmstart() (mp.math_model_cpf_acps method)": [[314, "mp.math_model_cpf_acps.expand_z_warmstart"]], "form_name() (mp.math_model_cpf_acps method)": [[314, "mp.math_model_cpf_acps.form_name"]], "form_tag() (mp.math_model_cpf_acps method)": [[314, "mp.math_model_cpf_acps.form_tag"]], "math_model_cpf_acps (class in mp)": [[314, "mp.math_model_cpf_acps"]], "solve_opts_warmstart() (mp.math_model_cpf_acps method)": [[314, "mp.math_model_cpf_acps.solve_opts_warmstart"]], "add_system_vars() (mp.math_model_opf method)": [[315, "mp.math_model_opf.add_system_vars"]], "build_aux_data() (mp.math_model_opf method)": [[315, "mp.math_model_opf.build_aux_data"]], "interior_va() (mp.math_model_opf method)": [[315, "mp.math_model_opf.interior_va"]], "interior_x0() (mp.math_model_opf method)": [[315, "mp.math_model_opf.interior_x0"]], "math_model_opf (class in mp)": [[315, "mp.math_model_opf"]], "task_name() (mp.math_model_opf method)": [[315, "mp.math_model_opf.task_name"]], "task_tag() (mp.math_model_opf method)": [[315, "mp.math_model_opf.task_tag"]], "math_model_opf_ac (class in mp)": [[316, "mp.math_model_opf_ac"]], "nodal_current_balance_fcn() (mp.math_model_opf_ac method)": [[316, "mp.math_model_opf_ac.nodal_current_balance_fcn"]], "nodal_current_balance_hess() (mp.math_model_opf_ac method)": [[316, "mp.math_model_opf_ac.nodal_current_balance_hess"]], "nodal_power_balance_fcn() (mp.math_model_opf_ac method)": [[316, "mp.math_model_opf_ac.nodal_power_balance_fcn"]], "nodal_power_balance_hess() (mp.math_model_opf_ac method)": [[316, "mp.math_model_opf_ac.nodal_power_balance_hess"]], "solve_opts() (mp.math_model_opf_ac method)": [[316, "mp.math_model_opf_ac.solve_opts"]], "convert_x_m2n() (mp.math_model_opf_acc method)": [[317, "mp.math_model_opf_acc.convert_x_m2n"]], "interior_va() (mp.math_model_opf_acc method)": [[317, "mp.math_model_opf_acc.interior_va"]], "math_model_opf_acc (class in mp)": [[317, "mp.math_model_opf_acc"]], "math_model_opf_acc() (mp.math_model_opf_acc method)": [[317, "mp.math_model_opf_acc.math_model_opf_acc"]], "add_node_balance_constraints() (mp.math_model_opf_acci method)": [[318, "mp.math_model_opf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acci method)": [[318, "mp.math_model_opf_acci.form_name"]], "form_tag() (mp.math_model_opf_acci method)": [[318, "mp.math_model_opf_acci.form_tag"]], "math_model_opf_acci (class in mp)": [[318, "mp.math_model_opf_acci"]], "node_power_balance_prices() (mp.math_model_opf_acci method)": [[318, "mp.math_model_opf_acci.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.add_vars"]], "build() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.build"]], "def_set_types() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.legacy_user_var_names"]], "math_model_opf_acci_legacy (class in mp)": [[319, "mp.math_model_opf_acci_legacy"]], "math_model_opf_acci_legacy() (mp.math_model_opf_acci_legacy method)": [[319, "mp.math_model_opf_acci_legacy.math_model_opf_acci_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_accs method)": [[320, "mp.math_model_opf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_accs method)": [[320, "mp.math_model_opf_accs.form_name"]], "form_tag() (mp.math_model_opf_accs method)": [[320, "mp.math_model_opf_accs.form_tag"]], "math_model_opf_accs (class in mp)": [[320, "mp.math_model_opf_accs"]], "node_power_balance_prices() (mp.math_model_opf_accs method)": [[320, "mp.math_model_opf_accs.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.add_vars"]], "build() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.build"]], "def_set_types() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.legacy_user_var_names"]], "math_model_opf_accs_legacy (class in mp)": [[321, "mp.math_model_opf_accs_legacy"]], "math_model_opf_accs_legacy() (mp.math_model_opf_accs_legacy method)": [[321, "mp.math_model_opf_accs_legacy.math_model_opf_accs_legacy"]], "convert_x_m2n() (mp.math_model_opf_acp method)": [[322, "mp.math_model_opf_acp.convert_x_m2n"]], "math_model_opf_acp (class in mp)": [[322, "mp.math_model_opf_acp"]], "math_model_opf_acp() (mp.math_model_opf_acp method)": [[322, "mp.math_model_opf_acp.math_model_opf_acp"]], "add_node_balance_constraints() (mp.math_model_opf_acpi method)": [[323, "mp.math_model_opf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acpi method)": [[323, "mp.math_model_opf_acpi.form_name"]], "form_tag() (mp.math_model_opf_acpi method)": [[323, "mp.math_model_opf_acpi.form_tag"]], "math_model_opf_acpi (class in mp)": [[323, "mp.math_model_opf_acpi"]], "node_power_balance_prices() (mp.math_model_opf_acpi method)": [[323, "mp.math_model_opf_acpi.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.add_vars"]], "build() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.build"]], "def_set_types() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.legacy_user_var_names"]], "math_model_opf_acpi_legacy (class in mp)": [[324, "mp.math_model_opf_acpi_legacy"]], "math_model_opf_acpi_legacy() (mp.math_model_opf_acpi_legacy method)": [[324, "mp.math_model_opf_acpi_legacy.math_model_opf_acpi_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_acps method)": [[325, "mp.math_model_opf_acps.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acps method)": [[325, "mp.math_model_opf_acps.form_name"]], "form_tag() (mp.math_model_opf_acps method)": [[325, "mp.math_model_opf_acps.form_tag"]], "math_model_opf_acps (class in mp)": [[325, "mp.math_model_opf_acps"]], "node_power_balance_prices() (mp.math_model_opf_acps method)": [[325, "mp.math_model_opf_acps.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.add_vars"]], "build() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.build"]], "def_set_types() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.legacy_user_var_names"]], "math_model_opf_acps_legacy (class in mp)": [[326, "mp.math_model_opf_acps_legacy"]], "math_model_opf_acps_legacy() (mp.math_model_opf_acps_legacy method)": [[326, "mp.math_model_opf_acps_legacy.math_model_opf_acps_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_dc method)": [[327, "mp.math_model_opf_dc.add_node_balance_constraints"]], "convert_x_m2n() (mp.math_model_opf_dc method)": [[327, "mp.math_model_opf_dc.convert_x_m2n"]], "form_name() (mp.math_model_opf_dc method)": [[327, "mp.math_model_opf_dc.form_name"]], "form_tag() (mp.math_model_opf_dc method)": [[327, "mp.math_model_opf_dc.form_tag"]], "math_model_opf_dc (class in mp)": [[327, "mp.math_model_opf_dc"]], "math_model_opf_dc() (mp.math_model_opf_dc method)": [[327, "mp.math_model_opf_dc.math_model_opf_dc"]], "solve_opts() (mp.math_model_opf_dc method)": [[327, "mp.math_model_opf_dc.solve_opts"]], "add_named_set() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.add_vars"]], "build() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.build"]], "def_set_types() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.legacy_user_var_names"]], "math_model_opf_dc_legacy (class in mp)": [[328, "mp.math_model_opf_dc_legacy"]], "math_model_opf_dc_legacy() (mp.math_model_opf_dc_legacy method)": [[328, "mp.math_model_opf_dc_legacy.math_model_opf_dc_legacy"]], "add_costs() (mp.math_model_pf method)": [[329, "mp.math_model_pf.add_costs"]], "add_system_vars() (mp.math_model_pf method)": [[329, "mp.math_model_pf.add_system_vars"]], "math_model_pf (class in mp)": [[329, "mp.math_model_pf"]], "solve_opts() (mp.math_model_pf method)": [[329, "mp.math_model_pf.solve_opts"]], "task_name() (mp.math_model_pf method)": [[329, "mp.math_model_pf.task_name"]], "task_tag() (mp.math_model_pf method)": [[329, "mp.math_model_pf.task_tag"]], "math_model_pf_ac (class in mp)": [[330, "mp.math_model_pf_ac"]], "math_model_pf_ac() (mp.math_model_pf_ac method)": [[330, "mp.math_model_pf_ac.math_model_pf_ac"]], "add_node_balance_constraints() (mp.math_model_pf_acci method)": [[331, "mp.math_model_pf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acci method)": [[331, "mp.math_model_pf_acci.form_name"]], "form_tag() (mp.math_model_pf_acci method)": [[331, "mp.math_model_pf_acci.form_tag"]], "math_model_pf_acci (class in mp)": [[331, "mp.math_model_pf_acci"]], "add_node_balance_constraints() (mp.math_model_pf_accs method)": [[332, "mp.math_model_pf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_accs method)": [[332, "mp.math_model_pf_accs.form_name"]], "form_tag() (mp.math_model_pf_accs method)": [[332, "mp.math_model_pf_accs.form_tag"]], "math_model_pf_accs (class in mp)": [[332, "mp.math_model_pf_accs"]], "add_node_balance_constraints() (mp.math_model_pf_acpi method)": [[333, "mp.math_model_pf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acpi method)": [[333, "mp.math_model_pf_acpi.form_name"]], "form_tag() (mp.math_model_pf_acpi method)": [[333, "mp.math_model_pf_acpi.form_tag"]], "math_model_pf_acpi (class in mp)": [[333, "mp.math_model_pf_acpi"]], "add_node_balance_constraints() (mp.math_model_pf_acps method)": [[334, "mp.math_model_pf_acps.add_node_balance_constraints"]], "fd_jac_approx() (mp.math_model_pf_acps method)": [[334, "mp.math_model_pf_acps.fd_jac_approx"]], "fdpf_b_matrix_models() (mp.math_model_pf_acps method)": [[334, "mp.math_model_pf_acps.fdpf_B_matrix_models"]], "form_name() (mp.math_model_pf_acps method)": [[334, "mp.math_model_pf_acps.form_name"]], "form_tag() (mp.math_model_pf_acps method)": [[334, "mp.math_model_pf_acps.form_tag"]], "gs_x_update() (mp.math_model_pf_acps method)": [[334, "mp.math_model_pf_acps.gs_x_update"]], "math_model_pf_acps (class in mp)": [[334, "mp.math_model_pf_acps"]], "zg_x_update() (mp.math_model_pf_acps method)": [[334, "mp.math_model_pf_acps.zg_x_update"]], "add_node_balance_constraints() (mp.math_model_pf_dc method)": [[335, "mp.math_model_pf_dc.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_dc method)": [[335, "mp.math_model_pf_dc.form_name"]], "form_tag() (mp.math_model_pf_dc method)": [[335, "mp.math_model_pf_dc.form_tag"]], "math_model_pf_dc (class in mp)": [[335, "mp.math_model_pf_dc"]], "math_model_pf_dc() (mp.math_model_pf_dc method)": [[335, "mp.math_model_pf_dc.math_model_pf_dc"]], "solve_opts() (mp.math_model_pf_dc method)": [[335, "mp.math_model_pf_dc.solve_opts"]], "add_constraints() (mp.mm_element method)": [[336, "mp.mm_element.add_constraints"]], "add_costs() (mp.mm_element method)": [[336, "mp.mm_element.add_costs"]], "add_vars() (mp.mm_element method)": [[336, "mp.mm_element.add_vars"]], "data_model_element() (mp.mm_element method)": [[336, "mp.mm_element.data_model_element"]], "data_model_update() (mp.mm_element method)": [[336, "mp.mm_element.data_model_update"]], "data_model_update_off() (mp.mm_element method)": [[336, "mp.mm_element.data_model_update_off"]], "data_model_update_on() (mp.mm_element method)": [[336, "mp.mm_element.data_model_update_on"]], "mm_element (class in mp)": [[336, "mp.mm_element"]], "name() (mp.mm_element method)": [[336, "mp.mm_element.name"]], "network_model_element() (mp.mm_element method)": [[336, "mp.mm_element.network_model_element"]], "add_legacy_cost() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.add_legacy_cost"]], "add_legacy_user_constraints() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.add_legacy_user_constraints"]], "add_legacy_user_constraints_ac() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.add_legacy_user_constraints_ac"]], "add_legacy_user_costs() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.add_legacy_user_costs"]], "add_legacy_user_vars() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.add_legacy_user_vars"]], "build_legacy() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.build_legacy"]], "eval_legacy_cost() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.eval_legacy_cost"]], "get_mpc() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.get_mpc"]], "init_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.init_set_types_legacy"]], "mm_shared_opf_legacy (class in mp)": [[337, "mp.mm_shared_opf_legacy"]], "mod_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.mod_set_types_legacy"]], "params_legacy_cost() (mp.mm_shared_opf_legacy method)": [[337, "mp.mm_shared_opf_legacy.params_legacy_cost"]], "build_aux_data() (mp.mm_shared_pfcpf method)": [[338, "mp.mm_shared_pfcpf.build_aux_data"]], "mm_shared_pfcpf (class in mp)": [[338, "mp.mm_shared_pfcpf"]], "add_system_varset_pf() (mp.mm_shared_pfcpf_ac method)": [[339, "mp.mm_shared_pfcpf_ac.add_system_varset_pf"]], "mm_shared_pfcpf_ac (class in mp)": [[339, "mp.mm_shared_pfcpf_ac"]], "update_z() (mp.mm_shared_pfcpf_ac method)": [[339, "mp.mm_shared_pfcpf_ac.update_z"]], "build_aux_data_i() (mp.mm_shared_pfcpf_ac_i method)": [[340, "mp.mm_shared_pfcpf_ac_i.build_aux_data_i"]], "mm_shared_pfcpf_ac_i (class in mp)": [[340, "mp.mm_shared_pfcpf_ac_i"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acc method)": [[341, "mp.mm_shared_pfcpf_acc.convert_x_m2n"]], "mm_shared_pfcpf_acc (class in mp)": [[341, "mp.mm_shared_pfcpf_acc"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acci method)": [[342, "mp.mm_shared_pfcpf_acci.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acci method)": [[342, "mp.mm_shared_pfcpf_acci.build_aux_data"]], "mm_shared_pfcpf_acci (class in mp)": [[342, "mp.mm_shared_pfcpf_acci"]], "node_balance_equations() (mp.mm_shared_pfcpf_acci method)": [[342, "mp.mm_shared_pfcpf_acci.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_accs method)": [[343, "mp.mm_shared_pfcpf_accs.add_system_vars_pf"]], "mm_shared_pfcpf_accs (class in mp)": [[343, "mp.mm_shared_pfcpf_accs"]], "node_balance_equations() (mp.mm_shared_pfcpf_accs method)": [[343, "mp.mm_shared_pfcpf_accs.node_balance_equations"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acp method)": [[344, "mp.mm_shared_pfcpf_acp.convert_x_m2n"]], "mm_shared_pfcpf_acp (class in mp)": [[344, "mp.mm_shared_pfcpf_acp"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acpi method)": [[345, "mp.mm_shared_pfcpf_acpi.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acpi method)": [[345, "mp.mm_shared_pfcpf_acpi.build_aux_data"]], "mm_shared_pfcpf_acpi (class in mp)": [[345, "mp.mm_shared_pfcpf_acpi"]], "node_balance_equations() (mp.mm_shared_pfcpf_acpi method)": [[345, "mp.mm_shared_pfcpf_acpi.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acps method)": [[346, "mp.mm_shared_pfcpf_acps.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acps method)": [[346, "mp.mm_shared_pfcpf_acps.build_aux_data"]], "mm_shared_pfcpf_acps (class in mp)": [[346, "mp.mm_shared_pfcpf_acps"]], "node_balance_equations() (mp.mm_shared_pfcpf_acps method)": [[346, "mp.mm_shared_pfcpf_acps.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_dc method)": [[347, "mp.mm_shared_pfcpf_dc.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_dc method)": [[347, "mp.mm_shared_pfcpf_dc.build_aux_data"]], "convert_x_m2n() (mp.mm_shared_pfcpf_dc method)": [[347, "mp.mm_shared_pfcpf_dc.convert_x_m2n"]], "mm_shared_pfcpf_dc (class in mp)": [[347, "mp.mm_shared_pfcpf_dc"]], "update_z() (mp.mm_shared_pfcpf_dc method)": [[347, "mp.mm_shared_pfcpf_dc.update_z"]], "mme_branch (class in mp)": [[348, "mp.mme_branch"]], "name() (mp.mme_branch method)": [[348, "mp.mme_branch.name"]], "ang_diff_params() (mp.mme_branch_opf method)": [[349, "mp.mme_branch_opf.ang_diff_params"]], "ang_diff_prices() (mp.mme_branch_opf method)": [[349, "mp.mme_branch_opf.ang_diff_prices"]], "mme_branch_opf (class in mp)": [[349, "mp.mme_branch_opf"]], "add_constraints() (mp.mme_branch_opf_ac method)": [[350, "mp.mme_branch_opf_ac.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_ac method)": [[350, "mp.mme_branch_opf_ac.data_model_update_on"]], "mme_branch_opf_ac (class in mp)": [[350, "mp.mme_branch_opf_ac"]], "add_constraints() (mp.mme_branch_opf_acc method)": [[351, "mp.mme_branch_opf_acc.add_constraints"]], "ang_diff_prices() (mp.mme_branch_opf_acc method)": [[351, "mp.mme_branch_opf_acc.ang_diff_prices"]], "mme_branch_opf_acc (class in mp)": [[351, "mp.mme_branch_opf_acc"]], "add_constraints() (mp.mme_branch_opf_acp method)": [[352, "mp.mme_branch_opf_acp.add_constraints"]], "mme_branch_opf_acp (class in mp)": [[352, "mp.mme_branch_opf_acp"]], "add_constraints() (mp.mme_branch_opf_dc method)": [[353, "mp.mme_branch_opf_dc.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_dc method)": [[353, "mp.mme_branch_opf_dc.data_model_update_on"]], "mme_branch_opf_dc (class in mp)": [[353, "mp.mme_branch_opf_dc"]], "data_model_update_on() (mp.mme_branch_pf_ac method)": [[354, "mp.mme_branch_pf_ac.data_model_update_on"]], "mme_branch_pf_ac (class in mp)": [[354, "mp.mme_branch_pf_ac"]], "data_model_update_on() (mp.mme_branch_pf_dc method)": [[355, "mp.mme_branch_pf_dc.data_model_update_on"]], "mme_branch_pf_dc (class in mp)": [[355, "mp.mme_branch_pf_dc"]], "mme_bus (class in mp)": [[356, "mp.mme_bus"]], "name() (mp.mme_bus method)": [[356, "mp.mme_bus.name"]], "data_model_update_on() (mp.mme_bus3p method)": [[357, "mp.mme_bus3p.data_model_update_on"]], "mme_bus3p (class in mp)": [[357, "mp.mme_bus3p"]], "name() (mp.mme_bus3p method)": [[357, "mp.mme_bus3p.name"]], "interior_x0() (mp.mme_bus3p_opf_acc method)": [[358, "mp.mme_bus3p_opf_acc.interior_x0"]], "mme_bus3p_opf_acc (class in mp)": [[358, "mp.mme_bus3p_opf_acc"]], "interior_x0() (mp.mme_bus3p_opf_acp method)": [[359, "mp.mme_bus3p_opf_acp.interior_x0"]], "mme_bus3p_opf_acp (class in mp)": [[359, "mp.mme_bus3p_opf_acp"]], "interior_vm() (mp.mme_bus_opf_ac method)": [[360, "mp.mme_bus_opf_ac.interior_vm"]], "mme_bus_opf_ac (class in mp)": [[360, "mp.mme_bus_opf_ac"]], "add_constraints() (mp.mme_bus_opf_acc method)": [[361, "mp.mme_bus_opf_acc.add_constraints"]], "data_model_update_on() (mp.mme_bus_opf_acc method)": [[361, "mp.mme_bus_opf_acc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acc method)": [[361, "mp.mme_bus_opf_acc.interior_x0"]], "mme_bus_opf_acc (class in mp)": [[361, "mp.mme_bus_opf_acc"]], "data_model_update_on() (mp.mme_bus_opf_acp method)": [[362, "mp.mme_bus_opf_acp.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acp method)": [[362, "mp.mme_bus_opf_acp.interior_x0"]], "mme_bus_opf_acp (class in mp)": [[362, "mp.mme_bus_opf_acp"]], "data_model_update_on() (mp.mme_bus_opf_dc method)": [[363, "mp.mme_bus_opf_dc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_dc method)": [[363, "mp.mme_bus_opf_dc.interior_x0"]], "mme_bus_opf_dc (class in mp)": [[363, "mp.mme_bus_opf_dc"]], "data_model_update_on() (mp.mme_bus_pf_ac method)": [[364, "mp.mme_bus_pf_ac.data_model_update_on"]], "mme_bus_pf_ac (class in mp)": [[364, "mp.mme_bus_pf_ac"]], "data_model_update_on() (mp.mme_bus_pf_dc method)": [[365, "mp.mme_bus_pf_dc.data_model_update_on"]], "mme_bus_pf_dc (class in mp)": [[365, "mp.mme_bus_pf_dc"]], "mme_buslink (class in mp)": [[366, "mp.mme_buslink"]], "name() (mp.mme_buslink method)": [[366, "mp.mme_buslink.name"]], "interior_x0() (mp.mme_buslink_opf method)": [[367, "mp.mme_buslink_opf.interior_x0"]], "mme_buslink_opf (class in mp)": [[367, "mp.mme_buslink_opf"]], "add_constraints() (mp.mme_buslink_opf_acc method)": [[368, "mp.mme_buslink_opf_acc.add_constraints"]], "mme_buslink_opf_acc (class in mp)": [[368, "mp.mme_buslink_opf_acc"]], "va_fcn() (mp.mme_buslink_opf_acc method)": [[368, "mp.mme_buslink_opf_acc.va_fcn"]], "va_hess() (mp.mme_buslink_opf_acc method)": [[368, "mp.mme_buslink_opf_acc.va_hess"]], "vm2_fcn() (mp.mme_buslink_opf_acc method)": [[368, "mp.mme_buslink_opf_acc.vm2_fcn"]], "vm2_hess() (mp.mme_buslink_opf_acc method)": [[368, "mp.mme_buslink_opf_acc.vm2_hess"]], "add_constraints() (mp.mme_buslink_opf_acp method)": [[369, "mp.mme_buslink_opf_acp.add_constraints"]], "mme_buslink_opf_acp (class in mp)": [[369, "mp.mme_buslink_opf_acp"]], "add_constraints() (mp.mme_buslink_pf_ac method)": [[370, "mp.mme_buslink_pf_ac.add_constraints"]], "add_vars() (mp.mme_buslink_pf_ac method)": [[370, "mp.mme_buslink_pf_ac.add_vars"]], "mme_buslink_pf_ac (class in mp)": [[370, "mp.mme_buslink_pf_ac"]], "voltage_constraints() (mp.mme_buslink_pf_ac method)": [[370, "mp.mme_buslink_pf_ac.voltage_constraints"]], "add_constraints() (mp.mme_buslink_pf_acc method)": [[371, "mp.mme_buslink_pf_acc.add_constraints"]], "mme_buslink_pf_acc (class in mp)": [[371, "mp.mme_buslink_pf_acc"]], "pf_va_fcn() (mp.mme_buslink_pf_acc method)": [[371, "mp.mme_buslink_pf_acc.pf_va_fcn"]], "pf_vm_fcn() (mp.mme_buslink_pf_acc method)": [[371, "mp.mme_buslink_pf_acc.pf_vm_fcn"]], "add_constraints() (mp.mme_buslink_pf_acp method)": [[372, "mp.mme_buslink_pf_acp.add_constraints"]], "mme_buslink_pf_acp (class in mp)": [[372, "mp.mme_buslink_pf_acp"]], "mme_gen (class in mp)": [[373, "mp.mme_gen"]], "name() (mp.mme_gen method)": [[373, "mp.mme_gen.name"]], "data_model_update_on() (mp.mme_gen3p method)": [[374, "mp.mme_gen3p.data_model_update_on"]], "mme_gen3p (class in mp)": [[374, "mp.mme_gen3p"]], "name() (mp.mme_gen3p method)": [[374, "mp.mme_gen3p.name"]], "interior_x0() (mp.mme_gen3p_opf method)": [[375, "mp.mme_gen3p_opf.interior_x0"]], "mme_gen3p_opf (class in mp)": [[375, "mp.mme_gen3p_opf"]], "add_costs() (mp.mme_gen_opf method)": [[376, "mp.mme_gen_opf.add_costs"]], "add_vars() (mp.mme_gen_opf method)": [[376, "mp.mme_gen_opf.add_vars"]], "cost (mp.mme_gen_opf attribute)": [[376, "mp.mme_gen_opf.cost"]], "interior_x0() (mp.mme_gen_opf method)": [[376, "mp.mme_gen_opf.interior_x0"]], "mme_gen_opf (class in mp)": [[376, "mp.mme_gen_opf"]], "add_constraints() (mp.mme_gen_opf_ac method)": [[377, "mp.mme_gen_opf_ac.add_constraints"]], "add_costs() (mp.mme_gen_opf_ac method)": [[377, "mp.mme_gen_opf_ac.add_costs"]], "build_cost_params() (mp.mme_gen_opf_ac method)": [[377, "mp.mme_gen_opf_ac.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_ac method)": [[377, "mp.mme_gen_opf_ac.data_model_update_on"]], "disp_load_constant_pf_constraint() (mp.mme_gen_opf_ac method)": [[377, "mp.mme_gen_opf_ac.disp_load_constant_pf_constraint"]], "has_pq_cap() (mp.mme_gen_opf_ac method)": [[377, "mp.mme_gen_opf_ac.has_pq_cap"]], "mme_gen_opf_ac (class in mp)": [[377, "mp.mme_gen_opf_ac"]], "pq_capability_constraint() (mp.mme_gen_opf_ac method)": [[377, "mp.mme_gen_opf_ac.pq_capability_constraint"]], "add_constraints() (mp.mme_gen_opf_ac_oval method)": [[378, "mp.mme_gen_opf_ac_oval.add_constraints"]], "mme_gen_opf_ac_oval (class in mp)": [[378, "mp.mme_gen_opf_ac_oval"]], "oval_pq_capability_fcn() (mp.mme_gen_opf_ac_oval method)": [[378, "mp.mme_gen_opf_ac_oval.oval_pq_capability_fcn"]], "oval_pq_capability_hess() (mp.mme_gen_opf_ac_oval method)": [[378, "mp.mme_gen_opf_ac_oval.oval_pq_capability_hess"]], "add_constraints() (mp.mme_gen_opf_dc method)": [[379, "mp.mme_gen_opf_dc.add_constraints"]], "build_cost_params() (mp.mme_gen_opf_dc method)": [[379, "mp.mme_gen_opf_dc.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_dc method)": [[379, "mp.mme_gen_opf_dc.data_model_update_on"]], "mme_gen_opf_dc (class in mp)": [[379, "mp.mme_gen_opf_dc"]], "data_model_update_on() (mp.mme_gen_pf_ac method)": [[380, "mp.mme_gen_pf_ac.data_model_update_on"]], "mme_gen_pf_ac (class in mp)": [[380, "mp.mme_gen_pf_ac"]], "data_model_update_on() (mp.mme_gen_pf_dc method)": [[381, "mp.mme_gen_pf_dc.data_model_update_on"]], "mme_gen_pf_dc (class in mp)": [[381, "mp.mme_gen_pf_dc"]], "mme_legacy_dcline (class in mp)": [[382, "mp.mme_legacy_dcline"]], "name() (mp.mme_legacy_dcline method)": [[382, "mp.mme_legacy_dcline.name"]], "add_constraints() (mp.mme_legacy_dcline_opf method)": [[383, "mp.mme_legacy_dcline_opf.add_constraints"]], "add_costs() (mp.mme_legacy_dcline_opf method)": [[383, "mp.mme_legacy_dcline_opf.add_costs"]], "add_vars() (mp.mme_legacy_dcline_opf method)": [[383, "mp.mme_legacy_dcline_opf.add_vars"]], "build_cost_params() (mp.mme_legacy_dcline_opf method)": [[383, "mp.mme_legacy_dcline_opf.build_cost_params"]], "cost (mp.mme_legacy_dcline_opf attribute)": [[383, "mp.mme_legacy_dcline_opf.cost"]], "interior_x0() (mp.mme_legacy_dcline_opf method)": [[383, "mp.mme_legacy_dcline_opf.interior_x0"]], "mme_legacy_dcline_opf (class in mp)": [[383, "mp.mme_legacy_dcline_opf"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_ac method)": [[384, "mp.mme_legacy_dcline_opf_ac.data_model_update_on"]], "mme_legacy_dcline_opf_ac (class in mp)": [[384, "mp.mme_legacy_dcline_opf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_dc method)": [[385, "mp.mme_legacy_dcline_opf_dc.data_model_update_on"]], "mme_legacy_dcline_opf_dc (class in mp)": [[385, "mp.mme_legacy_dcline_opf_dc"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_ac method)": [[386, "mp.mme_legacy_dcline_pf_ac.data_model_update_on"]], "mme_legacy_dcline_pf_ac (class in mp)": [[386, "mp.mme_legacy_dcline_pf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_dc method)": [[387, "mp.mme_legacy_dcline_pf_dc.data_model_update_on"]], "mme_legacy_dcline_pf_dc (class in mp)": [[387, "mp.mme_legacy_dcline_pf_dc"]], "data_model_update_on() (mp.mme_line3p method)": [[388, "mp.mme_line3p.data_model_update_on"]], "mme_line3p (class in mp)": [[388, "mp.mme_line3p"]], "name() (mp.mme_line3p method)": [[388, "mp.mme_line3p.name"]], "interior_x0() (mp.mme_line3p_opf method)": [[389, "mp.mme_line3p_opf.interior_x0"]], "mme_line3p_opf (class in mp)": [[389, "mp.mme_line3p_opf"]], "mme_load (class in mp)": [[390, "mp.mme_load"]], "name() (mp.mme_load method)": [[390, "mp.mme_load.name"]], "data_model_update_on() (mp.mme_load_cpf method)": [[391, "mp.mme_load_cpf.data_model_update_on"]], "mme_load_cpf (class in mp)": [[391, "mp.mme_load_cpf"]], "data_model_update_on() (mp.mme_load_pf_ac method)": [[392, "mp.mme_load_pf_ac.data_model_update_on"]], "mme_load_pf_ac (class in mp)": [[392, "mp.mme_load_pf_ac"]], "data_model_update_on() (mp.mme_load_pf_dc method)": [[393, "mp.mme_load_pf_dc.data_model_update_on"]], "mme_load_pf_dc (class in mp)": [[393, "mp.mme_load_pf_dc"]], "add_constraints() (mp.mme_reserve_gen method)": [[394, "mp.mme_reserve_gen.add_constraints"]], "add_costs() (mp.mme_reserve_gen method)": [[394, "mp.mme_reserve_gen.add_costs"]], "add_vars() (mp.mme_reserve_gen method)": [[394, "mp.mme_reserve_gen.add_vars"]], "data_model_update_on() (mp.mme_reserve_gen method)": [[394, "mp.mme_reserve_gen.data_model_update_on"]], "mme_reserve_gen (class in mp)": [[394, "mp.mme_reserve_gen"]], "name() (mp.mme_reserve_gen method)": [[394, "mp.mme_reserve_gen.name"]], "add_constraints() (mp.mme_reserve_zone method)": [[395, "mp.mme_reserve_zone.add_constraints"]], "data_model_update_on() (mp.mme_reserve_zone method)": [[395, "mp.mme_reserve_zone.data_model_update_on"]], "mme_reserve_zone (class in mp)": [[395, "mp.mme_reserve_zone"]], "name() (mp.mme_reserve_zone method)": [[395, "mp.mme_reserve_zone.name"]], "mme_shunt (class in mp)": [[396, "mp.mme_shunt"]], "name() (mp.mme_shunt method)": [[396, "mp.mme_shunt.name"]], "data_model_update_on() (mp.mme_shunt_cpf method)": [[397, "mp.mme_shunt_cpf.data_model_update_on"]], "mme_shunt_cpf (class in mp)": [[397, "mp.mme_shunt_cpf"]], "data_model_update_on() (mp.mme_shunt_pf_ac method)": [[398, "mp.mme_shunt_pf_ac.data_model_update_on"]], "mme_shunt_pf_ac (class in mp)": [[398, "mp.mme_shunt_pf_ac"]], "data_model_update_on() (mp.mme_shunt_pf_dc method)": [[399, "mp.mme_shunt_pf_dc.data_model_update_on"]], "mme_shunt_pf_dc (class in mp)": [[399, "mp.mme_shunt_pf_dc"]], "data_model_update_on() (mp.mme_xfmr3p method)": [[400, "mp.mme_xfmr3p.data_model_update_on"]], "mme_xfmr3p (class in mp)": [[400, "mp.mme_xfmr3p"]], "name() (mp.mme_xfmr3p method)": [[400, "mp.mme_xfmr3p.name"]], "interior_x0() (mp.mme_xfmr3p_opf method)": [[401, "mp.mme_xfmr3p_opf.interior_x0"]], "mme_xfmr3p_opf (class in mp)": [[401, "mp.mme_xfmr3p_opf"]], "add_node() (mp.net_model method)": [[402, "mp.net_model.add_node"]], "add_nodes() (mp.net_model method)": [[402, "mp.net_model.add_nodes"]], "add_port() (mp.net_model method)": [[402, "mp.net_model.add_port"]], "add_state() (mp.net_model method)": [[402, "mp.net_model.add_state"]], "add_states() (mp.net_model method)": [[402, "mp.net_model.add_states"]], "add_var() (mp.net_model method)": [[402, "mp.net_model.add_var"]], "add_vvars() (mp.net_model method)": [[402, "mp.net_model.add_vvars"]], "add_zvars() (mp.net_model method)": [[402, "mp.net_model.add_zvars"]], "build() (mp.net_model method)": [[402, "mp.net_model.build"]], "build_params() (mp.net_model method)": [[402, "mp.net_model.build_params"]], "def_set_types() (mp.net_model method)": [[402, "mp.net_model.def_set_types"]], "display() (mp.net_model method)": [[402, "mp.net_model.display"]], "ensure_ref_node() (mp.net_model method)": [[402, "mp.net_model.ensure_ref_node"]], "get_node_idx() (mp.net_model method)": [[402, "mp.net_model.get_node_idx"]], "get_port_idx() (mp.net_model method)": [[402, "mp.net_model.get_port_idx"]], "get_state_idx() (mp.net_model method)": [[402, "mp.net_model.get_state_idx"]], "init_set_types() (mp.net_model method)": [[402, "mp.net_model.init_set_types"]], "name() (mp.net_model method)": [[402, "mp.net_model.name"]], "net_model (class in mp)": [[402, "mp.net_model"]], "node (mp.net_model attribute)": [[402, "mp.net_model.node"]], "node_types() (mp.net_model method)": [[402, "mp.net_model.node_types"]], "np() (mp.net_model method)": [[402, "mp.net_model.np"]], "nv (mp.net_model attribute)": [[402, "mp.net_model.nv"]], "nz() (mp.net_model method)": [[402, "mp.net_model.nz"]], "params_var() (mp.net_model method)": [[402, "mp.net_model.params_var"]], "port (mp.net_model attribute)": [[402, "mp.net_model.port"]], "set_node_type_pq() (mp.net_model method)": [[402, "mp.net_model.set_node_type_pq"]], "set_node_type_pv() (mp.net_model method)": [[402, "mp.net_model.set_node_type_pv"]], "set_node_type_ref() (mp.net_model method)": [[402, "mp.net_model.set_node_type_ref"]], "set_type_idx_map() (mp.net_model method)": [[402, "mp.net_model.set_type_idx_map"]], "set_type_label() (mp.net_model method)": [[402, "mp.net_model.set_type_label"]], "stack_matrix_params() (mp.net_model method)": [[402, "mp.net_model.stack_matrix_params"]], "stack_vector_params() (mp.net_model method)": [[402, "mp.net_model.stack_vector_params"]], "state (mp.net_model attribute)": [[402, "mp.net_model.state"]], "the_np (mp.net_model attribute)": [[402, "mp.net_model.the_np"]], "the_nz (mp.net_model attribute)": [[402, "mp.net_model.the_nz"]], "build_params() (mp.net_model_ac method)": [[403, "mp.net_model_ac.build_params"]], "def_set_types() (mp.net_model_ac method)": [[403, "mp.net_model_ac.def_set_types"]], "get_va() (mp.net_model_ac method)": [[403, "mp.net_model_ac.get_va"]], "net_model_ac (class in mp)": [[403, "mp.net_model_ac"]], "nodal_complex_current_balance() (mp.net_model_ac method)": [[403, "mp.net_model_ac.nodal_complex_current_balance"]], "nodal_complex_current_balance_hess() (mp.net_model_ac method)": [[403, "mp.net_model_ac.nodal_complex_current_balance_hess"]], "nodal_complex_power_balance() (mp.net_model_ac method)": [[403, "mp.net_model_ac.nodal_complex_power_balance"]], "nodal_complex_power_balance_hess() (mp.net_model_ac method)": [[403, "mp.net_model_ac.nodal_complex_power_balance_hess"]], "port_inj_nln() (mp.net_model_ac method)": [[403, "mp.net_model_ac.port_inj_nln"]], "port_inj_nln_hess() (mp.net_model_ac method)": [[403, "mp.net_model_ac.port_inj_nln_hess"]], "port_inj_soln() (mp.net_model_ac method)": [[403, "mp.net_model_ac.port_inj_soln"]], "def_set_types() (mp.net_model_acc method)": [[404, "mp.net_model_acc.def_set_types"]], "initial_voltage_angle() (mp.net_model_acc method)": [[404, "mp.net_model_acc.initial_voltage_angle"]], "net_model_acc (class in mp)": [[404, "mp.net_model_acc"]], "net_model_acc() (mp.net_model_acc method)": [[404, "mp.net_model_acc.net_model_acc"]], "def_set_types() (mp.net_model_acp method)": [[405, "mp.net_model_acp.def_set_types"]], "initial_voltage_angle() (mp.net_model_acp method)": [[405, "mp.net_model_acp.initial_voltage_angle"]], "net_model_acp (class in mp)": [[405, "mp.net_model_acp"]], "net_model_acp() (mp.net_model_acp method)": [[405, "mp.net_model_acp.net_model_acp"]], "build_params() (mp.net_model_dc method)": [[406, "mp.net_model_dc.build_params"]], "def_set_types() (mp.net_model_dc method)": [[406, "mp.net_model_dc.def_set_types"]], "net_model_dc (class in mp)": [[406, "mp.net_model_dc"]], "net_model_dc() (mp.net_model_dc method)": [[406, "mp.net_model_dc.net_model_dc"]], "port_inj_soln() (mp.net_model_dc method)": [[406, "mp.net_model_dc.port_inj_soln"]], "va (mp.net_model_dc attribute)": [[406, "mp.net_model_dc.va"]], "z (mp.net_model_dc attribute)": [[406, "mp.net_model_dc.z"]], "c (mp.nm_element attribute)": [[407, "mp.nm_element.C"]], "d (mp.nm_element attribute)": [[407, "mp.nm_element.D"]], "add_nodes() (mp.nm_element method)": [[407, "mp.nm_element.add_nodes"]], "add_states() (mp.nm_element method)": [[407, "mp.nm_element.add_states"]], "add_vvars() (mp.nm_element method)": [[407, "mp.nm_element.add_vvars"]], "add_zvars() (mp.nm_element method)": [[407, "mp.nm_element.add_zvars"]], "build_params() (mp.nm_element method)": [[407, "mp.nm_element.build_params"]], "count() (mp.nm_element method)": [[407, "mp.nm_element.count"]], "data_model_element() (mp.nm_element method)": [[407, "mp.nm_element.data_model_element"]], "display() (mp.nm_element method)": [[407, "mp.nm_element.display"]], "get_nv_() (mp.nm_element method)": [[407, "mp.nm_element.get_nv_"]], "incidence_matrix() (mp.nm_element method)": [[407, "mp.nm_element.incidence_matrix"]], "math_model_element() (mp.nm_element method)": [[407, "mp.nm_element.math_model_element"]], "name() (mp.nm_element method)": [[407, "mp.nm_element.name"]], "nk (mp.nm_element attribute)": [[407, "mp.nm_element.nk"]], "nm_element (class in mp)": [[407, "mp.nm_element"]], "nn() (mp.nm_element method)": [[407, "mp.nm_element.nn"]], "node_indices() (mp.nm_element method)": [[407, "mp.nm_element.node_indices"]], "node_types() (mp.nm_element method)": [[407, "mp.nm_element.node_types"]], "np() (mp.nm_element method)": [[407, "mp.nm_element.np"]], "nz() (mp.nm_element method)": [[407, "mp.nm_element.nz"]], "set_node_type_pq() (mp.nm_element method)": [[407, "mp.nm_element.set_node_type_pq"]], "set_node_type_pv() (mp.nm_element method)": [[407, "mp.nm_element.set_node_type_pv"]], "set_node_type_ref() (mp.nm_element method)": [[407, "mp.nm_element.set_node_type_ref"]], "soln (mp.nm_element attribute)": [[407, "mp.nm_element.soln"]], "x2vz() (mp.nm_element method)": [[407, "mp.nm_element.x2vz"]], "name() (mp.nme_branch method)": [[408, "mp.nme_branch.name"]], "nme_branch (class in mp)": [[408, "mp.nme_branch"]], "np() (mp.nme_branch method)": [[408, "mp.nme_branch.np"]], "build_params() (mp.nme_branch_ac method)": [[409, "mp.nme_branch_ac.build_params"]], "nme_branch_ac (class in mp)": [[409, "mp.nme_branch_ac"]], "ang_diff_fcn() (mp.nme_branch_acc method)": [[410, "mp.nme_branch_acc.ang_diff_fcn"]], "ang_diff_hess() (mp.nme_branch_acc method)": [[410, "mp.nme_branch_acc.ang_diff_hess"]], "nme_branch_acc (class in mp)": [[410, "mp.nme_branch_acc"]], "nme_branch_acp (class in mp)": [[411, "mp.nme_branch_acp"]], "build_params() (mp.nme_branch_dc method)": [[412, "mp.nme_branch_dc.build_params"]], "nme_branch_dc (class in mp)": [[412, "mp.nme_branch_dc"]], "name() (mp.nme_bus method)": [[413, "mp.nme_bus.name"]], "nme_bus (class in mp)": [[413, "mp.nme_bus"]], "nn() (mp.nme_bus method)": [[413, "mp.nme_bus.nn"]], "node_types() (mp.nme_bus method)": [[413, "mp.nme_bus.node_types"]], "set_node_type_pq() (mp.nme_bus method)": [[413, "mp.nme_bus.set_node_type_pq"]], "set_node_type_pv() (mp.nme_bus method)": [[413, "mp.nme_bus.set_node_type_pv"]], "set_node_type_ref() (mp.nme_bus method)": [[413, "mp.nme_bus.set_node_type_ref"]], "name() (mp.nme_bus3p method)": [[414, "mp.nme_bus3p.name"]], "nme_bus3p (class in mp)": [[414, "mp.nme_bus3p"]], "nn() (mp.nme_bus3p method)": [[414, "mp.nme_bus3p.nn"]], "node_types() (mp.nme_bus3p method)": [[414, "mp.nme_bus3p.node_types"]], "add_vvars() (mp.nme_bus3p_acc method)": [[415, "mp.nme_bus3p_acc.add_vvars"]], "nme_bus3p_acc (class in mp)": [[415, "mp.nme_bus3p_acc"]], "add_vvars() (mp.nme_bus3p_acp method)": [[416, "mp.nme_bus3p_acp.add_vvars"]], "nme_bus3p_acp (class in mp)": [[416, "mp.nme_bus3p_acp"]], "add_vvars() (mp.nme_bus_acc method)": [[417, "mp.nme_bus_acc.add_vvars"]], "nme_bus_acc (class in mp)": [[417, "mp.nme_bus_acc"]], "add_vvars() (mp.nme_bus_acp method)": [[418, "mp.nme_bus_acp.add_vvars"]], "nme_bus_acp (class in mp)": [[418, "mp.nme_bus_acp"]], "add_vvars() (mp.nme_bus_dc method)": [[419, "mp.nme_bus_dc.add_vvars"]], "nme_bus_dc (class in mp)": [[419, "mp.nme_bus_dc"]], "add_zvars() (mp.nme_buslink method)": [[420, "mp.nme_buslink.add_zvars"]], "build_params() (mp.nme_buslink method)": [[420, "mp.nme_buslink.build_params"]], "name() (mp.nme_buslink method)": [[420, "mp.nme_buslink.name"]], "nme_buslink (class in mp)": [[420, "mp.nme_buslink"]], "np() (mp.nme_buslink method)": [[420, "mp.nme_buslink.np"]], "nz() (mp.nme_buslink method)": [[420, "mp.nme_buslink.nz"]], "voltage_constraints() (mp.nme_buslink method)": [[420, "mp.nme_buslink.voltage_constraints"]], "nme_buslink_acc (class in mp)": [[421, "mp.nme_buslink_acc"]], "nme_buslink_acp (class in mp)": [[422, "mp.nme_buslink_acp"]], "name() (mp.nme_gen method)": [[423, "mp.nme_gen.name"]], "nme_gen (class in mp)": [[423, "mp.nme_gen"]], "np() (mp.nme_gen method)": [[423, "mp.nme_gen.np"]], "nz() (mp.nme_gen method)": [[423, "mp.nme_gen.nz"]], "add_zvars() (mp.nme_gen3p method)": [[424, "mp.nme_gen3p.add_zvars"]], "build_params() (mp.nme_gen3p method)": [[424, "mp.nme_gen3p.build_params"]], "name() (mp.nme_gen3p method)": [[424, "mp.nme_gen3p.name"]], "nme_gen3p (class in mp)": [[424, "mp.nme_gen3p"]], "np() (mp.nme_gen3p method)": [[424, "mp.nme_gen3p.np"]], "nz() (mp.nme_gen3p method)": [[424, "mp.nme_gen3p.nz"]], "nme_gen3p_acc (class in mp)": [[425, "mp.nme_gen3p_acc"]], "nme_gen3p_acp (class in mp)": [[426, "mp.nme_gen3p_acp"]], "add_zvars() (mp.nme_gen_ac method)": [[427, "mp.nme_gen_ac.add_zvars"]], "build_params() (mp.nme_gen_ac method)": [[427, "mp.nme_gen_ac.build_params"]], "nme_gen_ac (class in mp)": [[427, "mp.nme_gen_ac"]], "nme_gen_acc (class in mp)": [[428, "mp.nme_gen_acc"]], "nme_gen_acp (class in mp)": [[429, "mp.nme_gen_acp"]], "add_zvars() (mp.nme_gen_dc method)": [[430, "mp.nme_gen_dc.add_zvars"]], "build_params() (mp.nme_gen_dc method)": [[430, "mp.nme_gen_dc.build_params"]], "nme_gen_dc (class in mp)": [[430, "mp.nme_gen_dc"]], "name() (mp.nme_legacy_dcline method)": [[431, "mp.nme_legacy_dcline.name"]], "nme_legacy_dcline (class in mp)": [[431, "mp.nme_legacy_dcline"]], "np() (mp.nme_legacy_dcline method)": [[431, "mp.nme_legacy_dcline.np"]], "nz() (mp.nme_legacy_dcline method)": [[431, "mp.nme_legacy_dcline.nz"]], "add_zvars() (mp.nme_legacy_dcline_ac method)": [[432, "mp.nme_legacy_dcline_ac.add_zvars"]], "build_params() (mp.nme_legacy_dcline_ac method)": [[432, "mp.nme_legacy_dcline_ac.build_params"]], "nme_legacy_dcline_ac (class in mp)": [[432, "mp.nme_legacy_dcline_ac"]], "nme_legacy_dcline_acc (class in mp)": [[433, "mp.nme_legacy_dcline_acc"]], "nme_legacy_dcline_acp (class in mp)": [[434, "mp.nme_legacy_dcline_acp"]], "add_zvars() (mp.nme_legacy_dcline_dc method)": [[435, "mp.nme_legacy_dcline_dc.add_zvars"]], "build_params() (mp.nme_legacy_dcline_dc method)": [[435, "mp.nme_legacy_dcline_dc.build_params"]], "nme_legacy_dcline_dc (class in mp)": [[435, "mp.nme_legacy_dcline_dc"]], "build_params() (mp.nme_line3p method)": [[436, "mp.nme_line3p.build_params"]], "name() (mp.nme_line3p method)": [[436, "mp.nme_line3p.name"]], "nme_line3p (class in mp)": [[436, "mp.nme_line3p"]], "np() (mp.nme_line3p method)": [[436, "mp.nme_line3p.np"]], "vec2symmat_stacked() (mp.nme_line3p method)": [[436, "mp.nme_line3p.vec2symmat_stacked"]], "name() (mp.nme_load method)": [[437, "mp.nme_load.name"]], "nme_load (class in mp)": [[437, "mp.nme_load"]], "np() (mp.nme_load method)": [[437, "mp.nme_load.np"]], "build_params() (mp.nme_load3p method)": [[438, "mp.nme_load3p.build_params"]], "name() (mp.nme_load3p method)": [[438, "mp.nme_load3p.name"]], "nme_load3p (class in mp)": [[438, "mp.nme_load3p"]], "np() (mp.nme_load3p method)": [[438, "mp.nme_load3p.np"]], "build_params() (mp.nme_load_ac method)": [[439, "mp.nme_load_ac.build_params"]], "nme_load_ac (class in mp)": [[439, "mp.nme_load_ac"]], "port_inj_current_nln() (mp.nme_load_ac method)": [[439, "mp.nme_load_ac.port_inj_current_nln"]], "port_inj_power_nln() (mp.nme_load_ac method)": [[439, "mp.nme_load_ac.port_inj_power_nln"]], "nme_load_acc (class in mp)": [[440, "mp.nme_load_acc"]], "nme_load_acp (class in mp)": [[441, "mp.nme_load_acp"]], "build_params() (mp.nme_load_dc method)": [[442, "mp.nme_load_dc.build_params"]], "nme_load_dc (class in mp)": [[442, "mp.nme_load_dc"]], "name() (mp.nme_shunt method)": [[443, "mp.nme_shunt.name"]], "nme_shunt (class in mp)": [[443, "mp.nme_shunt"]], "np() (mp.nme_shunt method)": [[443, "mp.nme_shunt.np"]], "build_params() (mp.nme_shunt_ac method)": [[444, "mp.nme_shunt_ac.build_params"]], "nme_shunt_ac (class in mp)": [[444, "mp.nme_shunt_ac"]], "nme_shunt_acc (class in mp)": [[445, "mp.nme_shunt_acc"]], "nme_shunt_acp (class in mp)": [[446, "mp.nme_shunt_acp"]], "build_params() (mp.nme_shunt_dc method)": [[447, "mp.nme_shunt_dc.build_params"]], "nme_shunt_dc (class in mp)": [[447, "mp.nme_shunt_dc"]], "build_params() (mp.nme_xfmr3p method)": [[448, "mp.nme_xfmr3p.build_params"]], "name() (mp.nme_xfmr3p method)": [[448, "mp.nme_xfmr3p.name"]], "nme_xfmr3p (class in mp)": [[448, "mp.nme_xfmr3p"]], "np() (mp.nme_xfmr3p method)": [[448, "mp.nme_xfmr3p.np"]], "cache (mp.sm_legacy_cost attribute)": [[449, "mp.sm_legacy_cost.cache"]], "sm_legacy_cost (class in mp)": [[449, "mp.sm_legacy_cost"]], "sm_legacy_cost() (mp.sm_legacy_cost method)": [[449, "mp.sm_legacy_cost.sm_legacy_cost"]], "data_model_build() (mp.task method)": [[450, "mp.task.data_model_build"]], "data_model_build_post() (mp.task method)": [[450, "mp.task.data_model_build_post"]], "data_model_build_pre() (mp.task method)": [[450, "mp.task.data_model_build_pre"]], "data_model_class() (mp.task method)": [[450, "mp.task.data_model_class"]], "data_model_class_default() (mp.task method)": [[450, "mp.task.data_model_class_default"]], "data_model_create() (mp.task method)": [[450, "mp.task.data_model_create"]], "dm (mp.task attribute)": [[450, "mp.task.dm"]], "dm_converter_build() (mp.task method)": [[450, "mp.task.dm_converter_build"]], "dm_converter_class() (mp.task method)": [[450, "mp.task.dm_converter_class"]], "dm_converter_class_mpc2_default() (mp.task method)": [[450, "mp.task.dm_converter_class_mpc2_default"]], "dm_converter_create() (mp.task method)": [[450, "mp.task.dm_converter_create"]], "dmc (mp.task attribute)": [[450, "mp.task.dmc"]], "et (mp.task attribute)": [[450, "mp.task.et"]], "i_dm (mp.task attribute)": [[450, "mp.task.i_dm"]], "i_mm (mp.task attribute)": [[450, "mp.task.i_mm"]], "i_nm (mp.task attribute)": [[450, "mp.task.i_nm"]], "load_dm() (mp.task method)": [[450, "mp.task.load_dm"]], "math_model_build() (mp.task method)": [[450, "mp.task.math_model_build"]], "math_model_class() (mp.task method)": [[450, "mp.task.math_model_class"]], "math_model_class_default() (mp.task method)": [[450, "mp.task.math_model_class_default"]], "math_model_create() (mp.task method)": [[450, "mp.task.math_model_create"]], "math_model_opt() (mp.task method)": [[450, "mp.task.math_model_opt"]], "message (mp.task attribute)": [[450, "mp.task.message"]], "mm (mp.task attribute)": [[450, "mp.task.mm"]], "mm_opt (mp.task attribute)": [[450, "mp.task.mm_opt"]], "name (mp.task attribute)": [[450, "mp.task.name"]], "network_model_build() (mp.task method)": [[450, "mp.task.network_model_build"]], "network_model_build_post() (mp.task method)": [[450, "mp.task.network_model_build_post"]], "network_model_build_pre() (mp.task method)": [[450, "mp.task.network_model_build_pre"]], "network_model_class() (mp.task method)": [[450, "mp.task.network_model_class"]], "network_model_class_default() (mp.task method)": [[450, "mp.task.network_model_class_default"]], "network_model_create() (mp.task method)": [[450, "mp.task.network_model_create"]], "network_model_update() (mp.task method)": [[450, "mp.task.network_model_update"]], "network_model_x_soln() (mp.task method)": [[450, "mp.task.network_model_x_soln"]], "next_dm() (mp.task method)": [[450, "mp.task.next_dm"]], "next_mm() (mp.task method)": [[450, "mp.task.next_mm"]], "next_nm() (mp.task method)": [[450, "mp.task.next_nm"]], "nm (mp.task attribute)": [[450, "mp.task.nm"]], "print_soln() (mp.task method)": [[450, "mp.task.print_soln"]], "print_soln_header() (mp.task method)": [[450, "mp.task.print_soln_header"]], "run() (mp.task method)": [[450, "mp.task.run"]], "run_post() (mp.task method)": [[450, "mp.task.run_post"]], "run_pre() (mp.task method)": [[450, "mp.task.run_pre"]], "save_soln() (mp.task method)": [[450, "mp.task.save_soln"]], "success (mp.task attribute)": [[450, "mp.task.success"]], "tag (mp.task attribute)": [[450, "mp.task.tag"]], "task (class in mp)": [[450, "mp.task"]], "data_model_build() (mp.task_cpf method)": [[451, "mp.task_cpf.data_model_build"]], "data_model_class_default() (mp.task_cpf method)": [[451, "mp.task_cpf.data_model_class_default"]], "dm_converter_class() (mp.task_cpf method)": [[451, "mp.task_cpf.dm_converter_class"]], "math_model_class_default() (mp.task_cpf method)": [[451, "mp.task_cpf.math_model_class_default"]], "math_model_opt() (mp.task_cpf method)": [[451, "mp.task_cpf.math_model_opt"]], "network_model_build() (mp.task_cpf method)": [[451, "mp.task_cpf.network_model_build"]], "network_model_update() (mp.task_cpf method)": [[451, "mp.task_cpf.network_model_update"]], "network_model_x_soln() (mp.task_cpf method)": [[451, "mp.task_cpf.network_model_x_soln"]], "next_mm() (mp.task_cpf method)": [[451, "mp.task_cpf.next_mm"]], "run_pre() (mp.task_cpf method)": [[451, "mp.task_cpf.run_pre"]], "task_cpf (class in mp)": [[451, "mp.task_cpf"]], "task_cpf() (mp.task_cpf method)": [[451, "mp.task_cpf.task_cpf"]], "warmstart (mp.task_cpf attribute)": [[451, "mp.task_cpf.warmstart"]], "legacy_post_run() (mp.task_cpf_legacy method)": [[452, "mp.task_cpf_legacy.legacy_post_run"]], "run_post() (mp.task_cpf_legacy method)": [[452, "mp.task_cpf_legacy.run_post"]], "run_pre() (mp.task_cpf_legacy method)": [[452, "mp.task_cpf_legacy.run_pre"]], "task_cpf_legacy (class in mp)": [[452, "mp.task_cpf_legacy"]], "data_model_build_post() (mp.task_opf method)": [[453, "mp.task_opf.data_model_build_post"]], "data_model_class_default() (mp.task_opf method)": [[453, "mp.task_opf.data_model_class_default"]], "dc (mp.task_opf attribute)": [[453, "mp.task_opf.dc"]], "math_model_class_default() (mp.task_opf method)": [[453, "mp.task_opf.math_model_class_default"]], "network_model_class_default() (mp.task_opf method)": [[453, "mp.task_opf.network_model_class_default"]], "print_soln_header() (mp.task_opf method)": [[453, "mp.task_opf.print_soln_header"]], "run_pre() (mp.task_opf method)": [[453, "mp.task_opf.run_pre"]], "task_opf (class in mp)": [[453, "mp.task_opf"]], "data_model_build_post() (mp.task_opf_legacy method)": [[454, "mp.task_opf_legacy.data_model_build_post"]], "dm_converter_class_mpc2_default() (mp.task_opf_legacy method)": [[454, "mp.task_opf_legacy.dm_converter_class_mpc2_default"]], "legacy_post_run() (mp.task_opf_legacy method)": [[454, "mp.task_opf_legacy.legacy_post_run"]], "math_model_class_default() (mp.task_opf_legacy method)": [[454, "mp.task_opf_legacy.math_model_class_default"]], "run_post() (mp.task_opf_legacy method)": [[454, "mp.task_opf_legacy.run_post"]], "run_pre() (mp.task_opf_legacy method)": [[454, "mp.task_opf_legacy.run_pre"]], "task_opf_legacy (class in mp)": [[454, "mp.task_opf_legacy"]], "dc (mp.task_pf attribute)": [[455, "mp.task_pf.dc"]], "enforce_q_lims() (mp.task_pf method)": [[455, "mp.task_pf.enforce_q_lims"]], "fixed_q_idx (mp.task_pf attribute)": [[455, "mp.task_pf.fixed_q_idx"]], "fixed_q_qty (mp.task_pf attribute)": [[455, "mp.task_pf.fixed_q_qty"]], "iterations (mp.task_pf attribute)": [[455, "mp.task_pf.iterations"]], "math_model_class_default() (mp.task_pf method)": [[455, "mp.task_pf.math_model_class_default"]], "name (mp.task_pf attribute)": [[455, "mp.task_pf.name"]], "network_model_build_post() (mp.task_pf method)": [[455, "mp.task_pf.network_model_build_post"]], "network_model_class_default() (mp.task_pf method)": [[455, "mp.task_pf.network_model_class_default"]], "network_model_x_soln() (mp.task_pf method)": [[455, "mp.task_pf.network_model_x_soln"]], "next_dm() (mp.task_pf method)": [[455, "mp.task_pf.next_dm"]], "ref (mp.task_pf attribute)": [[455, "mp.task_pf.ref"]], "ref0 (mp.task_pf attribute)": [[455, "mp.task_pf.ref0"]], "run_pre() (mp.task_pf method)": [[455, "mp.task_pf.run_pre"]], "tag (mp.task_pf attribute)": [[455, "mp.task_pf.tag"]], "task_pf (class in mp)": [[455, "mp.task_pf"]], "va_ref0 (mp.task_pf attribute)": [[455, "mp.task_pf.va_ref0"]], "legacy_post_run() (mp.task_pf_legacy method)": [[456, "mp.task_pf_legacy.legacy_post_run"]], "run_post() (mp.task_pf_legacy method)": [[456, "mp.task_pf_legacy.run_post"]], "run_pre() (mp.task_pf_legacy method)": [[456, "mp.task_pf_legacy.run_pre"]], "task_pf_legacy (class in mp)": [[456, "mp.task_pf_legacy"]], "run_pre_legacy() (mp.task_shared_legacy method)": [[457, "mp.task_shared_legacy.run_pre_legacy"]], "task_shared_legacy (class in mp)": [[457, "mp.task_shared_legacy"]], "dm_element_classes() (mp.xt_3p method)": [[458, "mp.xt_3p.dm_element_classes"]], "dmc_element_classes() (mp.xt_3p method)": [[458, "mp.xt_3p.dmc_element_classes"]], "mm_element_classes() (mp.xt_3p method)": [[458, "mp.xt_3p.mm_element_classes"]], "nm_element_classes() (mp.xt_3p method)": [[458, "mp.xt_3p.nm_element_classes"]], "xt_3p (class in mp)": [[458, "mp.xt_3p"]], "dm_element_classes() (mp.xt_legacy_dcline method)": [[459, "mp.xt_legacy_dcline.dm_element_classes"]], "dmc_element_classes() (mp.xt_legacy_dcline method)": [[459, "mp.xt_legacy_dcline.dmc_element_classes"]], "mm_element_classes() (mp.xt_legacy_dcline method)": [[459, "mp.xt_legacy_dcline.mm_element_classes"]], "nm_element_classes() (mp.xt_legacy_dcline method)": [[459, "mp.xt_legacy_dcline.nm_element_classes"]], "xt_legacy_dcline (class in mp)": [[459, "mp.xt_legacy_dcline"]], "mm_element_classes() (mp.xt_oval_cap_curve method)": [[460, "mp.xt_oval_cap_curve.mm_element_classes"]], "xt_oval_cap_curve (class in mp)": [[460, "mp.xt_oval_cap_curve"]], "dm_element_classes() (mp.xt_reserves method)": [[461, "mp.xt_reserves.dm_element_classes"]], "dmc_element_classes() (mp.xt_reserves method)": [[461, "mp.xt_reserves.dmc_element_classes"]], "mm_element_classes() (mp.xt_reserves method)": [[461, "mp.xt_reserves.mm_element_classes"]], "xt_reserves (class in mp)": [[461, "mp.xt_reserves"]], "display() (mp_table method)": [[462, "mp_table.display"]], "end() (mp_table method)": [[462, "mp_table.end"]], "extract_named_args() (mp_table static method)": [[462, "mp_table.extract_named_args"]], "horzcat() (mp_table method)": [[462, "mp_table.horzcat"]], "isempty() (mp_table method)": [[462, "mp_table.isempty"]], "istable() (mp_table method)": [[462, "mp_table.istable"]], "mp_table (built-in class)": [[462, "mp_table"]], "mp_table() (mp_table method)": [[462, "mp_table.mp_table"]], "size() (mp_table method)": [[462, "mp_table.size"]], "subsasgn() (mp_table method)": [[462, "mp_table.subsasgn"]], "subsref() (mp_table method)": [[462, "mp_table.subsref"]], "vertcat() (mp_table method)": [[462, "mp_table.vertcat"]], "get_table() (mp_table_subclass method)": [[463, "mp_table_subclass.get_table"]], "mp_table_subclass (built-in class)": [[463, "mp_table_subclass"]], "set_table() (mp_table_subclass method)": [[463, "mp_table_subclass.set_table"]], "install_matpower() (built-in function)": [[465, "install_matpower"]], "load_dm() (in module mp)": [[466, "mp.load_dm"]], "mp_table_class() (built-in function)": [[467, "mp_table_class"]], "run_cpf() (built-in function)": [[468, "run_cpf"]], "run_mp() (built-in function)": [[469, "run_mp"]], "run_opf() (built-in function)": [[470, "run_opf"]], "run_pf() (built-in function)": [[471, "run_pf"]], "add_legacy_cost() (opf_model method)": [[474, "opf_model.add_legacy_cost"]], "add_named_set() (opf_model method)": [[474, "opf_model.add_named_set"]], "cost (opf_model attribute)": [[474, "opf_model.cost"]], "def_set_types() (opf_model method)": [[474, "opf_model.def_set_types"]], "display() (opf_model method)": [[474, "opf_model.display"]], "eval_legacy_cost() (opf_model method)": [[474, "opf_model.eval_legacy_cost"]], "get_mpc() (opf_model method)": [[474, "opf_model.get_mpc"]], "init_set_types() (opf_model method)": [[474, "opf_model.init_set_types"]], "mpc (opf_model attribute)": [[474, "opf_model.mpc"]], "opf_model (built-in class)": [[474, "opf_model"]], "opf_model() (opf_model method)": [[474, "opf_model.opf_model"]], "params_legacy_cost() (opf_model method)": [[474, "opf_model.params_legacy_cost"]], "set_mpc() (opf_model method)": [[474, "opf_model.set_mpc"]], "add_userfcn() (built-in function)": [[475, "add_userfcn"]], "apply_changes() (built-in function)": [[476, "apply_changes"]], "bustypes() (built-in function)": [[477, "bustypes"]], "calc_branch_angle() (built-in function)": [[478, "calc_branch_angle"]], "calc_v_i_sum() (built-in function)": [[479, "calc_v_i_sum"]], "calc_v_pq_sum() (built-in function)": [[480, "calc_v_pq_sum"]], "calc_v_y_sum() (built-in function)": [[481, "calc_v_y_sum"]], "case_info() (built-in function)": [[482, "case_info"]], "caseformat() (built-in function)": [[483, "caseformat"]], "cdf2mpc() (built-in function)": [[484, "cdf2mpc"]], "compare_case() (built-in function)": [[485, "compare_case"]], "connected_components() (built-in function)": [[486, "connected_components"]], "cpf_corrector() (built-in function)": [[487, "cpf_corrector"]], "cpf_current_mpc() (built-in function)": [[488, "cpf_current_mpc"]], "cpf_default_callback() (built-in function)": [[489, "cpf_default_callback"]], "cpf_detect_events() (built-in function)": [[490, "cpf_detect_events"]], "cpf_flim_event() (built-in function)": [[491, "cpf_flim_event"]], "cpf_flim_event_cb() (built-in function)": [[492, "cpf_flim_event_cb"]], "cpf_nose_event() (built-in function)": [[493, "cpf_nose_event"]], "cpf_nose_event_cb() (built-in function)": [[494, "cpf_nose_event_cb"]], "cpf_p() (built-in function)": [[495, "cpf_p"]], "cpf_p_jac() (built-in function)": [[496, "cpf_p_jac"]], "cpf_plim_event() (built-in function)": [[497, "cpf_plim_event"]], "cpf_plim_event_cb() (built-in function)": [[498, "cpf_plim_event_cb"]], "cpf_predictor() (built-in function)": [[499, "cpf_predictor"]], "cpf_qlim_event() (built-in function)": [[500, "cpf_qlim_event"]], "cpf_qlim_event_cb() (built-in function)": [[501, "cpf_qlim_event_cb"]], "cpf_register_callback() (built-in function)": [[502, "cpf_register_callback"]], "cpf_register_event() (built-in function)": [[503, "cpf_register_event"]], "cpf_tangent() (built-in function)": [[504, "cpf_tangent"]], "cpf_target_lam_event() (built-in function)": [[505, "cpf_target_lam_event"]], "cpf_target_lam_event_cb() (built-in function)": [[506, "cpf_target_lam_event_cb"]], "cpf_vlim_event() (built-in function)": [[507, "cpf_vlim_event"]], "cpf_vlim_event_cb() (built-in function)": [[508, "cpf_vlim_event_cb"]], "d2abr_dv2() (built-in function)": [[509, "d2Abr_dV2"]], "d2ibr_dv2() (built-in function)": [[510, "d2Ibr_dV2"]], "d2imis_dv2() (built-in function)": [[511, "d2Imis_dV2"]], "d2imis_dvdsg() (built-in function)": [[512, "d2Imis_dVdSg"]], "d2sbr_dv2() (built-in function)": [[513, "d2Sbr_dV2"]], "d2sbus_dv2() (built-in function)": [[514, "d2Sbus_dV2"]], "dabr_dv() (built-in function)": [[515, "dAbr_dV"]], "dibr_dv() (built-in function)": [[516, "dIbr_dV"]], "dimis_dv() (built-in function)": [[517, "dImis_dV"]], "dsbr_dv() (built-in function)": [[518, "dSbr_dV"]], "dsbus_dv() (built-in function)": [[519, "dSbus_dV"]], "dcopf() (built-in function)": [[520, "dcopf"]], "dcopf_solver() (built-in function)": [[521, "dcopf_solver"]], "dcpf() (built-in function)": [[522, "dcpf"]], "define_constants() (built-in function)": [[523, "define_constants"]], "e2i_data() (built-in function)": [[524, "e2i_data"]], "e2i_field() (built-in function)": [[525, "e2i_field"]], "ext2int() (built-in function)": [[526, "ext2int"]], "extract_islands() (built-in function)": [[527, "extract_islands"]], "fdpf() (built-in function)": [[528, "fdpf"]], "feval_w_path() (built-in function)": [[529, "feval_w_path"]], "find_bridges() (built-in function)": [[530, "find_bridges"]], "find_islands() (built-in function)": [[531, "find_islands"]], "fmincopf() (built-in function)": [[532, "fmincopf"]], "gausspf() (built-in function)": [[533, "gausspf"]], "genfuels() (built-in function)": [[534, "genfuels"]], "gentypes() (built-in function)": [[535, "gentypes"]], "get_losses() (built-in function)": [[536, "get_losses"]], "get_reorder() (built-in function)": [[537, "get_reorder"]], "haspqcap() (built-in function)": [[538, "hasPQcap"]], "have_feature_e4st() (built-in function)": [[539, "have_feature_e4st"]], "have_feature_minopf() (built-in function)": [[540, "have_feature_minopf"]], "have_feature_most() (built-in function)": [[541, "have_feature_most"]], "have_feature_mp_core() (built-in function)": [[542, "have_feature_mp_core"]], "have_feature_pdipmopf() (built-in function)": [[543, "have_feature_pdipmopf"]], "have_feature_regexp_split() (built-in function)": [[544, "have_feature_regexp_split"]], "have_feature_scpdipmopf() (built-in function)": [[545, "have_feature_scpdipmopf"]], "have_feature_sdp_pf() (built-in function)": [[546, "have_feature_sdp_pf"]], "have_feature_smartmarket() (built-in function)": [[547, "have_feature_smartmarket"]], "have_feature_syngrid() (built-in function)": [[548, "have_feature_syngrid"]], "have_feature_table() (built-in function)": [[549, "have_feature_table"]], "have_feature_tralmopf() (built-in function)": [[550, "have_feature_tralmopf"]], "i2e_data() (built-in function)": [[551, "i2e_data"]], "i2e_field() (built-in function)": [[552, "i2e_field"]], "idx_brch() (built-in function)": [[553, "idx_brch"]], "idx_bus() (built-in function)": [[554, "idx_bus"]], "idx_cost() (built-in function)": [[555, "idx_cost"]], "idx_ct() (built-in function)": [[556, "idx_ct"]], "idx_dcline() (built-in function)": [[557, "idx_dcline"]], "idx_gen() (built-in function)": [[558, "idx_gen"]], "int2ext() (built-in function)": [[559, "int2ext"]], "isload() (built-in function)": [[560, "isload"]], "load2disp() (built-in function)": [[561, "load2disp"]], "loadcase() (built-in function)": [[562, "loadcase"]], "loadshed() (built-in function)": [[563, "loadshed"]], "makeaang() (built-in function)": [[564, "makeAang"]], "makeapq() (built-in function)": [[565, "makeApq"]], "makeavl() (built-in function)": [[566, "makeAvl"]], "makeay() (built-in function)": [[567, "makeAy"]], "makeb() (built-in function)": [[568, "makeB"]], "makebdc() (built-in function)": [[569, "makeBdc"]], "makejac() (built-in function)": [[570, "makeJac"]], "makelodf() (built-in function)": [[571, "makeLODF"]], "makeptdf() (built-in function)": [[572, "makePTDF"]], "makesbus() (built-in function)": [[573, "makeSbus"]], "makesdzip() (built-in function)": [[574, "makeSdzip"]], "makeybus() (built-in function)": [[575, "makeYbus"]], "make_vcorr() (built-in function)": [[576, "make_vcorr"]], "make_zpv() (built-in function)": [[577, "make_zpv"]], "margcost() (built-in function)": [[578, "margcost"]], "miqps_matpower() (built-in function)": [[579, "miqps_matpower"]], "modcost() (built-in function)": [[580, "modcost"]], "mpoption() (built-in function)": [[581, "mpoption"]], "mpoption_info_clp() (built-in function)": [[582, "mpoption_info_clp"]], "mpoption_info_cplex() (built-in function)": [[583, "mpoption_info_cplex"]], "mpoption_info_fmincon() (built-in function)": [[584, "mpoption_info_fmincon"]], "mpoption_info_glpk() (built-in function)": [[585, "mpoption_info_glpk"]], "mpoption_info_gurobi() (built-in function)": [[586, "mpoption_info_gurobi"]], "mpoption_info_intlinprog() (built-in function)": [[587, "mpoption_info_intlinprog"]], "mpoption_info_ipopt() (built-in function)": [[588, "mpoption_info_ipopt"]], "mpoption_info_knitro() (built-in function)": [[589, "mpoption_info_knitro"]], "mpoption_info_linprog() (built-in function)": [[590, "mpoption_info_linprog"]], "mpoption_info_mips() (built-in function)": [[591, "mpoption_info_mips"]], "mpoption_info_mosek() (built-in function)": [[592, "mpoption_info_mosek"]], "mpoption_info_osqp() (built-in function)": [[593, "mpoption_info_osqp"]], "mpoption_info_quadprog() (built-in function)": [[594, "mpoption_info_quadprog"]], "mpoption_old() (built-in function)": [[595, "mpoption_old"]], "mpver() (built-in function)": [[596, "mpver"]], "newtonpf() (built-in function)": [[597, "newtonpf"]], "newtonpf_i_cart() (built-in function)": [[598, "newtonpf_I_cart"]], "newtonpf_i_hybrid() (built-in function)": [[599, "newtonpf_I_hybrid"]], "newtonpf_i_polar() (built-in function)": [[600, "newtonpf_I_polar"]], "newtonpf_s_cart() (built-in function)": [[601, "newtonpf_S_cart"]], "newtonpf_s_hybrid() (built-in function)": [[602, "newtonpf_S_hybrid"]], "nlpopf_solver() (built-in function)": [[603, "nlpopf_solver"]], "opf() (built-in function)": [[604, "opf"]], "opf_args() (built-in function)": [[605, "opf_args"]], "opf_branch_ang_fcn() (built-in function)": [[606, "opf_branch_ang_fcn"]], "opf_branch_ang_hess() (built-in function)": [[607, "opf_branch_ang_hess"]], "opf_branch_flow_fcn() (built-in function)": [[608, "opf_branch_flow_fcn"]], "opf_branch_flow_hess() (built-in function)": [[609, "opf_branch_flow_hess"]], "opf_current_balance_fcn() (built-in function)": [[610, "opf_current_balance_fcn"]], "opf_current_balance_hess() (built-in function)": [[611, "opf_current_balance_hess"]], "opf_execute() (built-in function)": [[612, "opf_execute"]], "opf_gen_cost_fcn() (built-in function)": [[613, "opf_gen_cost_fcn"]], "opf_legacy_user_cost_fcn() (built-in function)": [[614, "opf_legacy_user_cost_fcn"]], "opf_nle_fcn1() (built-in function)": [[615, "opf_nle_fcn1"]], "opf_nle_hess1() (built-in function)": [[616, "opf_nle_hess1"]], "opf_power_balance_fcn() (built-in function)": [[617, "opf_power_balance_fcn"]], "opf_power_balance_hess() (built-in function)": [[618, "opf_power_balance_hess"]], "opf_setup() (built-in function)": [[619, "opf_setup"]], "opf_veq_fcn() (built-in function)": [[620, "opf_veq_fcn"]], "opf_veq_hess() (built-in function)": [[621, "opf_veq_hess"]], "opf_vlim_fcn() (built-in function)": [[622, "opf_vlim_fcn"]], "opf_vlim_hess() (built-in function)": [[623, "opf_vlim_hess"]], "opf_vref_fcn() (built-in function)": [[624, "opf_vref_fcn"]], "opf_vref_hess() (built-in function)": [[625, "opf_vref_hess"]], "order_radial() (built-in function)": [[626, "order_radial"]], "pfsoln() (built-in function)": [[627, "pfsoln"]], "poly2pwl() (built-in function)": [[628, "poly2pwl"]], "polycost() (built-in function)": [[629, "polycost"]], "pqcost() (built-in function)": [[630, "pqcost"]], "printpf() (built-in function)": [[631, "printpf"]], "psse2mpc() (built-in function)": [[632, "psse2mpc"]], "psse_convert() (built-in function)": [[633, "psse_convert"]], "psse_convert_hvdc() (built-in function)": [[634, "psse_convert_hvdc"]], "psse_convert_xfmr() (built-in function)": [[635, "psse_convert_xfmr"]], "psse_parse() (built-in function)": [[636, "psse_parse"]], "psse_parse_line() (built-in function)": [[637, "psse_parse_line"]], "psse_parse_section() (built-in function)": [[638, "psse_parse_section"]], "psse_read() (built-in function)": [[639, "psse_read"]], "qps_matpower() (built-in function)": [[640, "qps_matpower"]], "radial_pf() (built-in function)": [[641, "radial_pf"]], "remove_userfcn() (built-in function)": [[642, "remove_userfcn"]], "run_userfcn() (built-in function)": [[643, "run_userfcn"]], "runcpf() (built-in function)": [[644, "runcpf"]], "rundcopf() (built-in function)": [[645, "rundcopf"]], "rundcpf() (built-in function)": [[646, "rundcpf"]], "runduopf() (built-in function)": [[647, "runduopf"]], "runopf() (built-in function)": [[648, "runopf"]], "runopf_w_res() (built-in function)": [[649, "runopf_w_res"]], "runpf() (built-in function)": [[650, "runpf"]], "runuopf() (built-in function)": [[651, "runuopf"]], "save2psse() (built-in function)": [[652, "save2psse"]], "savecase() (built-in function)": [[653, "savecase"]], "savechgtab() (built-in function)": [[654, "savechgtab"]], "scale_load() (built-in function)": [[655, "scale_load"]], "set_reorder() (built-in function)": [[656, "set_reorder"]], "t_apply_changes() (built-in function)": [[657, "t_apply_changes"]], "t_auction_case() (built-in function)": [[658, "t_auction_case"]], "t_auction_minopf() (built-in function)": [[659, "t_auction_minopf"]], "t_auction_mips() (built-in function)": [[660, "t_auction_mips"]], "t_auction_tspopf_pdipm() (built-in function)": [[661, "t_auction_tspopf_pdipm"]], "t_case30_userfcns() (built-in function)": [[662, "t_case30_userfcns"]], "t_case9_dcline() (built-in function)": [[663, "t_case9_dcline"]], "t_case9_opf() (built-in function)": [[664, "t_case9_opf"]], "t_case9_opfv2() (built-in function)": [[665, "t_case9_opfv2"]], "t_case9_pf() (built-in function)": [[666, "t_case9_pf"]], "t_case9_pfv2() (built-in function)": [[667, "t_case9_pfv2"]], "t_case9_save2psse() (built-in function)": [[668, "t_case9_save2psse"]], "t_case_ext() (built-in function)": [[669, "t_case_ext"]], "t_case_int() (built-in function)": [[670, "t_case_int"]], "t_chgtab() (built-in function)": [[671, "t_chgtab"]], "t_cpf() (built-in function)": [[672, "t_cpf"]], "t_cpf_cb1() (built-in function)": [[673, "t_cpf_cb1"]], "t_cpf_cb2() (built-in function)": [[674, "t_cpf_cb2"]], "t_dcline() (built-in function)": [[675, "t_dcline"]], "t_ext2int2ext() (built-in function)": [[676, "t_ext2int2ext"]], "t_feval_w_path() (built-in function)": [[677, "t_feval_w_path"]], "t_get_losses() (built-in function)": [[678, "t_get_losses"]], "t_haspqcap() (built-in function)": [[679, "t_hasPQcap"]], "t_hessian() (built-in function)": [[680, "t_hessian"]], "t_islands() (built-in function)": [[681, "t_islands"]], "t_jacobian() (built-in function)": [[682, "t_jacobian"]], "t_load2disp() (built-in function)": [[683, "t_load2disp"]], "t_loadcase() (built-in function)": [[684, "t_loadcase"]], "t_makelodf() (built-in function)": [[685, "t_makeLODF"]], "t_makeptdf() (built-in function)": [[686, "t_makePTDF"]], "t_margcost() (built-in function)": [[687, "t_margcost"]], "t_miqps_matpower() (built-in function)": [[688, "t_miqps_matpower"]], "t_modcost() (built-in function)": [[689, "t_modcost"]], "t_mpoption() (built-in function)": [[690, "t_mpoption"]], "t_mpoption_ov() (built-in function)": [[691, "t_mpoption_ov"]], "t_off2case() (built-in function)": [[692, "t_off2case"]], "t_opf_dc_bpmpd() (built-in function)": [[693, "t_opf_dc_bpmpd"]], "t_opf_dc_clp() (built-in function)": [[694, "t_opf_dc_clp"]], "t_opf_dc_cplex() (built-in function)": [[695, "t_opf_dc_cplex"]], "t_opf_dc_default() (built-in function)": [[696, "t_opf_dc_default"]], "t_opf_dc_glpk() (built-in function)": [[697, "t_opf_dc_glpk"]], "t_opf_dc_gurobi() (built-in function)": [[698, "t_opf_dc_gurobi"]], "t_opf_dc_ipopt() (built-in function)": [[699, "t_opf_dc_ipopt"]], "t_opf_dc_mips() (built-in function)": [[700, "t_opf_dc_mips"]], "t_opf_dc_mips_sc() (built-in function)": [[701, "t_opf_dc_mips_sc"]], "t_opf_dc_mosek() (built-in function)": [[702, "t_opf_dc_mosek"]], "t_opf_dc_osqp() (built-in function)": [[703, "t_opf_dc_osqp"]], "t_opf_dc_ot() (built-in function)": [[704, "t_opf_dc_ot"]], "t_opf_default() (built-in function)": [[705, "t_opf_default"]], "t_opf_fmincon() (built-in function)": [[706, "t_opf_fmincon"]], "t_opf_ipopt() (built-in function)": [[707, "t_opf_ipopt"]], "t_opf_knitro() (built-in function)": [[708, "t_opf_knitro"]], "t_opf_minopf() (built-in function)": [[709, "t_opf_minopf"]], "t_opf_mips() (built-in function)": [[710, "t_opf_mips"]], "t_opf_model() (built-in function)": [[711, "t_opf_model"]], "t_opf_softlims() (built-in function)": [[712, "t_opf_softlims"]], "t_opf_tspopf_pdipm() (built-in function)": [[713, "t_opf_tspopf_pdipm"]], "t_opf_tspopf_scpdipm() (built-in function)": [[714, "t_opf_tspopf_scpdipm"]], "t_opf_tspopf_tralm() (built-in function)": [[715, "t_opf_tspopf_tralm"]], "t_opf_userfcns() (built-in function)": [[716, "t_opf_userfcns"]], "t_pf_ac() (built-in function)": [[717, "t_pf_ac"]], "t_pf_dc() (built-in function)": [[718, "t_pf_dc"]], "t_pf_radial() (built-in function)": [[719, "t_pf_radial"]], "t_printpf() (built-in function)": [[720, "t_printpf"]], "t_psse() (built-in function)": [[721, "t_psse"]], "t_qps_matpower() (built-in function)": [[722, "t_qps_matpower"]], "t_runmarket() (built-in function)": [[723, "t_runmarket"]], "t_runopf_w_res() (built-in function)": [[724, "t_runopf_w_res"]], "t_scale_load() (built-in function)": [[725, "t_scale_load"]], "t_total_load() (built-in function)": [[726, "t_total_load"]], "t_totcost() (built-in function)": [[727, "t_totcost"]], "t_vdep_load() (built-in function)": [[728, "t_vdep_load"]], "toggle_dcline() (built-in function)": [[729, "toggle_dcline"]], "toggle_iflims() (built-in function)": [[730, "toggle_iflims"]], "toggle_reserves() (built-in function)": [[731, "toggle_reserves"]], "toggle_softlims() (built-in function)": [[732, "toggle_softlims"]], "total_load() (built-in function)": [[733, "total_load"]], "totcost() (built-in function)": [[734, "totcost"]], "uopf() (built-in function)": [[735, "uopf"]], "update_mupq() (built-in function)": [[736, "update_mupq"]], "zgausspf() (built-in function)": [[737, "zgausspf"]], "mp_foo_table (built-in class)": [[741, "mp_foo_table"]], "t_case3p_a() (built-in function)": [[742, "t_case3p_a"]], "t_case3p_b() (built-in function)": [[743, "t_case3p_b"]], "t_case3p_c() (built-in function)": [[744, "t_case3p_c"]], "t_case3p_d() (built-in function)": [[745, "t_case3p_d"]], "t_case3p_e() (built-in function)": [[746, "t_case3p_e"]], "t_case3p_f() (built-in function)": [[747, "t_case3p_f"]], "t_case3p_g() (built-in function)": [[748, "t_case3p_g"]], "t_case3p_h() (built-in function)": [[749, "t_case3p_h"]], "t_case9_gizmo() (built-in function)": [[750, "t_case9_gizmo"]], "t_dmc_element() (built-in function)": [[751, "t_dmc_element"]], "t_mp_data_model() (built-in function)": [[752, "t_mp_data_model"]], "t_mp_dm_converter_mpc2() (built-in function)": [[753, "t_mp_dm_converter_mpc2"]], "t_mp_mapped_array() (built-in function)": [[754, "t_mp_mapped_array"]], "t_mp_table() (built-in function)": [[755, "t_mp_table"]], "t_mpxt_legacy_dcline() (built-in function)": [[756, "t_mpxt_legacy_dcline"]], "t_mpxt_reserves() (built-in function)": [[757, "t_mpxt_reserves"]], "t_nm_element() (built-in function)": [[758, "t_nm_element"]], "t_node_test() (built-in function)": [[759, "t_node_test"]], "t_port_inj_current_acc() (built-in function)": [[760, "t_port_inj_current_acc"]], "t_port_inj_current_acp() (built-in function)": [[761, "t_port_inj_current_acp"]], "t_port_inj_power_acc() (built-in function)": [[762, "t_port_inj_power_acc"]], "t_port_inj_power_acp() (built-in function)": [[763, "t_port_inj_power_acp"]], "t_pretty_print() (built-in function)": [[764, "t_pretty_print"]], "t_run_mp() (built-in function)": [[765, "t_run_mp"]], "t_run_mp_3p() (built-in function)": [[766, "t_run_mp_3p"]], "t_run_opf_default() (built-in function)": [[767, "t_run_opf_default"]], "test_matpower() (built-in function)": [[768, "test_matpower"]]}})