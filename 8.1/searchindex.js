Search.setIndex({"docnames": ["dev-manual/acknowledgments", "dev-manual/architecture", "dev-manual/customizing", "dev-manual/data-model", "dev-manual/data-model-converter", "dev-manual/index", "dev-manual/introduction", "dev-manual/math-model", "dev-manual/net-model", "dev-manual/notation", "dev-manual/references", "dev-manual/task", "howto/add-constraint", "howto/builddocs", "howto/builddocs/generate_autodoc_stubs", "howto/builddocs/generate_matpower_autodoc", "howto/builddocs/generate_source_symlinks", "howto/element", "howto/extension", "howto/gizmo-element/index", "howto/three-phase", "index", "mips/functions/have_feature_lu_vec", "mips/functions/have_feature_mips", "mips/functions/have_feature_pardiso", "mips/functions/have_feature_pardiso_legacy", "mips/functions/have_feature_pardiso_object", "mips/functions/mips", "mips/functions/mips_example1", "mips/functions/mips_example2", "mips/functions/mipsver", "mips/functions/mplinsolve", "mips/functions/qps_mips", "mips/functions/t_mips", "mips/functions/t_mips_pardiso", "mips/functions/t_mplinsolve", "mips/functions/t_qps_mips", "mips/functions/test_mips", "mips/index", "mips/reference", "most/functions/addgen2mpc", "most/functions/addstorage", "most/functions/addwind", "most/functions/apply_profile", "most/functions/c118swf", "most/functions/ex_case3a", "most/functions/ex_case3b", "most/functions/ex_contab", "most/functions/ex_load_profile", "most/functions/ex_storage", "most/functions/ex_transmat", "most/functions/ex_wind", "most/functions/ex_wind_profile", "most/functions/ex_wind_profile_d", "most/functions/ex_wind_uc", "most/functions/ex_xgd", "most/functions/ex_xgd_ramp", "most/functions/ex_xgd_res", "most/functions/ex_xgd_uc", "most/functions/filter_ramp_transitions", "most/functions/getprofiles", "most/functions/idx_profile", "most/functions/loadgenericdata", "most/functions/loadmd", "most/functions/loadstoragedata", "most/functions/loadxgendata", "most/functions/md_init", "most/functions/most", "most/functions/most_ex1_ed", "most/functions/most_ex2_dcopf", "most/functions/most_ex3_dcopf_w_uc", "most/functions/most_ex4_dcopf_ss", "most/functions/most_ex5_mpopf", "most/functions/most_ex6_uc", "most/functions/most_ex7_suc", "most/functions/most_summary", "most/functions/mostver", "most/functions/mpoption_info_most", "most/functions/plot_gen", "most/functions/plot_storage", "most/functions/plot_uc", "most/functions/plot_uc_data", "most/functions/t_case30_most", "most/functions/t_case3_most", "most/functions/t_case_tlmp", "most/functions/t_case_tlmp_storage", "most/functions/t_most_30b_1_1_0", "most/functions/t_most_30b_1_1_0_uc", "most/functions/t_most_30b_1_1_17", "most/functions/t_most_30b_3_1_0", "most/functions/t_most_30b_3_1_17", "most/functions/t_most_3b_1_1_0", "most/functions/t_most_3b_1_1_2", "most/functions/t_most_3b_3_1_0", "most/functions/t_most_3b_3_1_2", "most/functions/t_most_fixed_res", "most/functions/t_most_mpopf", "most/functions/t_most_sp", "most/functions/t_most_spuc", "most/functions/t_most_suc", "most/functions/t_most_tlmp", "most/functions/t_most_uc", "most/functions/t_most_w_ds", "most/functions/test_most", "most/functions/uniformwindprofile", "most/index", "most/reference", "mpom/classes/mp/opt_model", "mpom/classes/mp/set_manager", "mpom/classes/mp/set_manager_opt_model", "mpom/classes/mp/sm_lin_constraint", "mpom/classes/mp/sm_nln_constraint", "mpom/classes/mp/sm_nln_cost", "mpom/classes/mp/sm_quad_constraint", "mpom/classes/mp/sm_quad_cost", "mpom/classes/mp/sm_quad_cost_legacy", "mpom/classes/mp/sm_variable", "mpom/classes/mp_idx_manager", "mpom/classes/opt_model", "mpom/functions/artelys_knitro_options", "mpom/functions/convert_constraint_multipliers", "mpom/functions/convert_lin_constraint", "mpom/functions/convert_lin_constraint_multipliers", "mpom/functions/convert_quad_constraint", "mpom/functions/cplex_options", "mpom/functions/glpk_options", "mpom/functions/gurobi_options", "mpom/functions/gurobiver", "mpom/functions/have_feature_bpmpd", "mpom/functions/have_feature_catchme", "mpom/functions/have_feature_clp", "mpom/functions/have_feature_cplex", "mpom/functions/have_feature_evalc", "mpom/functions/have_feature_fmincon", "mpom/functions/have_feature_fmincon_ipm", "mpom/functions/have_feature_fsolve", "mpom/functions/have_feature_glpk", "mpom/functions/have_feature_gurobi", "mpom/functions/have_feature_highs", "mpom/functions/have_feature_intlinprog", "mpom/functions/have_feature_ipopt", "mpom/functions/have_feature_ipopt_auxdata", "mpom/functions/have_feature_isequaln", "mpom/functions/have_feature_knitro", "mpom/functions/have_feature_knitromatlab", "mpom/functions/have_feature_linprog", "mpom/functions/have_feature_linprog_ds", "mpom/functions/have_feature_mosek", "mpom/functions/have_feature_opti_clp", "mpom/functions/have_feature_optim", "mpom/functions/have_feature_optimoptions", "mpom/functions/have_feature_osqp", "mpom/functions/have_feature_quadprog", "mpom/functions/have_feature_quadprog_ls", "mpom/functions/have_feature_sdpt3", "mpom/functions/have_feature_sedumi", "mpom/functions/have_feature_yalmip", "mpom/functions/highs_options", "mpom/functions/highsver", "mpom/functions/ipopt_options", "mpom/functions/knitrover", "mpom/functions/lp_ex1", "mpom/functions/milp_ex1", "mpom/functions/miqps_cplex", "mpom/functions/miqps_glpk", "mpom/functions/miqps_gurobi", "mpom/functions/miqps_highs", "mpom/functions/miqps_master", "mpom/functions/miqps_mosek", "mpom/functions/miqps_ot", "mpom/functions/mosek_options", "mpom/functions/mosek_symbcon", "mpom/functions/mp/struct2object", "mpom/functions/mpomver", "mpom/functions/mpopt2nleqopt", "mpom/functions/mpopt2nlpopt", "mpom/functions/mpopt2pneopt", "mpom/functions/mpopt2qcqpopt", "mpom/functions/mpopt2qpopt", "mpom/functions/nested_struct_copy", "mpom/functions/nleqs_core", "mpom/functions/nleqs_fd_newton", "mpom/functions/nleqs_fsolve", "mpom/functions/nleqs_gauss_seidel", "mpom/functions/nleqs_master", "mpom/functions/nleqs_master_ex1", "mpom/functions/nleqs_master_ex2", "mpom/functions/nleqs_newton", "mpom/functions/nlp_consfcn", "mpom/functions/nlp_costfcn", "mpom/functions/nlp_hessfcn", "mpom/functions/nlps_fmincon", "mpom/functions/nlps_ipopt", "mpom/functions/nlps_knitro", "mpom/functions/nlps_master", "mpom/functions/nlps_master_ex1", "mpom/functions/nlps_master_ex2", "mpom/functions/osqp_options", "mpom/functions/osqpver", "mpom/functions/pne_callback_default", "mpom/functions/pne_callback_nose", "mpom/functions/pne_callback_target_lam", "mpom/functions/pne_detect_events", "mpom/functions/pne_detected_event", "mpom/functions/pne_event_nose", "mpom/functions/pne_event_target_lam", "mpom/functions/pne_ex1", "mpom/functions/pne_pfcn_arc_len", "mpom/functions/pne_pfcn_natural", "mpom/functions/pne_pfcn_pseudo_arc_len", "mpom/functions/pne_register_callbacks", "mpom/functions/pne_register_events", "mpom/functions/pnes_master", "mpom/functions/qcqp_ex1", "mpom/functions/qcqp_nlp_consfcn", "mpom/functions/qcqp_nlp_costfcn", "mpom/functions/qcqp_nlp_hessfcn", "mpom/functions/qcqps_gurobi", "mpom/functions/qcqps_knitro", "mpom/functions/qcqps_master", "mpom/functions/qcqps_nlps", "mpom/functions/qp_ex1", "mpom/functions/qps_bpmpd", "mpom/functions/qps_clp", "mpom/functions/qps_cplex", "mpom/functions/qps_glpk", "mpom/functions/qps_gurobi", "mpom/functions/qps_highs", "mpom/functions/qps_ipopt", "mpom/functions/qps_knitro", "mpom/functions/qps_master", "mpom/functions/qps_mosek", "mpom/functions/qps_osqp", "mpom/functions/qps_ot", "mpom/functions/t_have_fcn", "mpom/functions/t_miqps_master", "mpom/functions/t_mm_solve_leqs", "mpom/functions/t_mm_solve_miqps", "mpom/functions/t_mm_solve_nleqs", "mpom/functions/t_mm_solve_nlps", "mpom/functions/t_mm_solve_pne", "mpom/functions/t_mm_solve_qcqps", "mpom/functions/t_mm_solve_qps", "mpom/functions/t_mp_opt_model", "mpom/functions/t_nested_struct_copy", "mpom/functions/t_nleqs_master", "mpom/functions/t_nlps_master", "mpom/functions/t_om_solve_leqs", "mpom/functions/t_om_solve_miqps", "mpom/functions/t_om_solve_nleqs", "mpom/functions/t_om_solve_nlps", "mpom/functions/t_om_solve_pne", "mpom/functions/t_om_solve_qcqps", "mpom/functions/t_om_solve_qps", "mpom/functions/t_opt_model", "mpom/functions/t_pnes_master", "mpom/functions/t_qcqps_master", "mpom/functions/t_qps_master", "mpom/functions/test_mp_opt_model", "mpom/index", "mpom/reference", "mptest/functions/debug_assert", "mptest/functions/have_feature", "mptest/functions/have_feature_matlab", "mptest/functions/have_feature_octave", "mptest/functions/mptestver", "mptest/functions/t_begin", "mptest/functions/t_debug_assert", "mptest/functions/t_end", "mptest/functions/t_file_match", "mptest/functions/t_have_feature", "mptest/functions/t_is", "mptest/functions/t_ok", "mptest/functions/t_run_tests", "mptest/functions/t_skip", "mptest/functions/t_str_match", "mptest/functions/t_test_fcns", "mptest/functions/test_mptest", "mptest/functions/toggle_debug_mode", "mptest/index", "mptest/reference", "ref-manual/classes/index", "ref-manual/classes/mp/NODE_TYPE", "ref-manual/classes/mp/case_utils", "ref-manual/classes/mp/cost_table", "ref-manual/classes/mp/cost_table_utils", "ref-manual/classes/mp/data_model", "ref-manual/classes/mp/data_model_cpf", "ref-manual/classes/mp/data_model_opf", "ref-manual/classes/mp/dm_converter", "ref-manual/classes/mp/dm_converter_mpc2", "ref-manual/classes/mp/dm_converter_mpc2_legacy", "ref-manual/classes/mp/dm_element", "ref-manual/classes/mp/dmc_element", "ref-manual/classes/mp/dmce_branch_mpc2", "ref-manual/classes/mp/dmce_bus3p_mpc2", "ref-manual/classes/mp/dmce_bus_mpc2", "ref-manual/classes/mp/dmce_buslink_mpc2", "ref-manual/classes/mp/dmce_gen3p_mpc2", "ref-manual/classes/mp/dmce_gen_mpc2", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2", "ref-manual/classes/mp/dmce_line3p_mpc2", "ref-manual/classes/mp/dmce_load3p_mpc2", "ref-manual/classes/mp/dmce_load_mpc2", "ref-manual/classes/mp/dmce_reserve_gen_mpc2", "ref-manual/classes/mp/dmce_reserve_zone_mpc2", "ref-manual/classes/mp/dmce_shunt3p_mpc2", "ref-manual/classes/mp/dmce_shunt_mpc2", "ref-manual/classes/mp/dmce_xfmr3p_mpc2", "ref-manual/classes/mp/dme_branch", "ref-manual/classes/mp/dme_branch_opf", "ref-manual/classes/mp/dme_bus", "ref-manual/classes/mp/dme_bus3p", "ref-manual/classes/mp/dme_bus3p_opf", "ref-manual/classes/mp/dme_bus_opf", "ref-manual/classes/mp/dme_buslink", "ref-manual/classes/mp/dme_buslink_opf", "ref-manual/classes/mp/dme_gen", "ref-manual/classes/mp/dme_gen3p", "ref-manual/classes/mp/dme_gen3p_opf", "ref-manual/classes/mp/dme_gen_opf", "ref-manual/classes/mp/dme_legacy_dcline", "ref-manual/classes/mp/dme_legacy_dcline_opf", "ref-manual/classes/mp/dme_line3p", "ref-manual/classes/mp/dme_line3p_opf", "ref-manual/classes/mp/dme_load", "ref-manual/classes/mp/dme_load3p", "ref-manual/classes/mp/dme_load3p_opf", "ref-manual/classes/mp/dme_load_cpf", "ref-manual/classes/mp/dme_load_opf", "ref-manual/classes/mp/dme_reserve_gen", "ref-manual/classes/mp/dme_reserve_zone", "ref-manual/classes/mp/dme_shared_opf", "ref-manual/classes/mp/dme_shunt", "ref-manual/classes/mp/dme_shunt3p", "ref-manual/classes/mp/dme_shunt3p_opf", "ref-manual/classes/mp/dme_shunt_cpf", "ref-manual/classes/mp/dme_shunt_opf", "ref-manual/classes/mp/dme_xfmr3p", "ref-manual/classes/mp/dme_xfmr3p_opf", "ref-manual/classes/mp/element_container", "ref-manual/classes/mp/extension", "ref-manual/classes/mp/form", "ref-manual/classes/mp/form_ac", "ref-manual/classes/mp/form_acc", "ref-manual/classes/mp/form_acp", "ref-manual/classes/mp/form_dc", "ref-manual/classes/mp/mapped_array", "ref-manual/classes/mp/math_model", "ref-manual/classes/mp/math_model_cpf_acc", "ref-manual/classes/mp/math_model_cpf_acci", "ref-manual/classes/mp/math_model_cpf_accs", "ref-manual/classes/mp/math_model_cpf_acp", "ref-manual/classes/mp/math_model_cpf_acpi", "ref-manual/classes/mp/math_model_cpf_acps", "ref-manual/classes/mp/math_model_opf", "ref-manual/classes/mp/math_model_opf_ac", "ref-manual/classes/mp/math_model_opf_acc", "ref-manual/classes/mp/math_model_opf_acci", "ref-manual/classes/mp/math_model_opf_acci_legacy", "ref-manual/classes/mp/math_model_opf_accs", "ref-manual/classes/mp/math_model_opf_accs_legacy", "ref-manual/classes/mp/math_model_opf_acp", "ref-manual/classes/mp/math_model_opf_acpi", "ref-manual/classes/mp/math_model_opf_acpi_legacy", "ref-manual/classes/mp/math_model_opf_acps", "ref-manual/classes/mp/math_model_opf_acps_legacy", "ref-manual/classes/mp/math_model_opf_dc", "ref-manual/classes/mp/math_model_opf_dc_legacy", "ref-manual/classes/mp/math_model_pf", "ref-manual/classes/mp/math_model_pf_ac", "ref-manual/classes/mp/math_model_pf_acci", "ref-manual/classes/mp/math_model_pf_accs", "ref-manual/classes/mp/math_model_pf_acpi", "ref-manual/classes/mp/math_model_pf_acps", "ref-manual/classes/mp/math_model_pf_dc", "ref-manual/classes/mp/mm_element", "ref-manual/classes/mp/mm_shared_opf_legacy", "ref-manual/classes/mp/mm_shared_pfcpf", "ref-manual/classes/mp/mm_shared_pfcpf_ac", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i", "ref-manual/classes/mp/mm_shared_pfcpf_acc", "ref-manual/classes/mp/mm_shared_pfcpf_acci", "ref-manual/classes/mp/mm_shared_pfcpf_accs", "ref-manual/classes/mp/mm_shared_pfcpf_acp", "ref-manual/classes/mp/mm_shared_pfcpf_acpi", "ref-manual/classes/mp/mm_shared_pfcpf_acps", "ref-manual/classes/mp/mm_shared_pfcpf_dc", "ref-manual/classes/mp/mme_branch", "ref-manual/classes/mp/mme_branch_opf", "ref-manual/classes/mp/mme_branch_opf_ac", "ref-manual/classes/mp/mme_branch_opf_acc", "ref-manual/classes/mp/mme_branch_opf_acp", "ref-manual/classes/mp/mme_branch_opf_dc", "ref-manual/classes/mp/mme_branch_pf_ac", "ref-manual/classes/mp/mme_branch_pf_dc", "ref-manual/classes/mp/mme_bus", "ref-manual/classes/mp/mme_bus3p", "ref-manual/classes/mp/mme_bus3p_opf_acc", "ref-manual/classes/mp/mme_bus3p_opf_acp", "ref-manual/classes/mp/mme_bus_opf_ac", "ref-manual/classes/mp/mme_bus_opf_acc", "ref-manual/classes/mp/mme_bus_opf_acp", "ref-manual/classes/mp/mme_bus_opf_dc", "ref-manual/classes/mp/mme_bus_pf_ac", "ref-manual/classes/mp/mme_bus_pf_dc", "ref-manual/classes/mp/mme_buslink", "ref-manual/classes/mp/mme_buslink_opf", "ref-manual/classes/mp/mme_buslink_opf_acc", "ref-manual/classes/mp/mme_buslink_opf_acp", "ref-manual/classes/mp/mme_buslink_pf_ac", "ref-manual/classes/mp/mme_buslink_pf_acc", "ref-manual/classes/mp/mme_buslink_pf_acp", "ref-manual/classes/mp/mme_gen", "ref-manual/classes/mp/mme_gen3p", "ref-manual/classes/mp/mme_gen3p_opf", "ref-manual/classes/mp/mme_gen_opf", "ref-manual/classes/mp/mme_gen_opf_ac", "ref-manual/classes/mp/mme_gen_opf_ac_oval", "ref-manual/classes/mp/mme_gen_opf_dc", "ref-manual/classes/mp/mme_gen_pf_ac", "ref-manual/classes/mp/mme_gen_pf_dc", "ref-manual/classes/mp/mme_legacy_dcline", "ref-manual/classes/mp/mme_legacy_dcline_opf", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc", "ref-manual/classes/mp/mme_line3p", "ref-manual/classes/mp/mme_line3p_opf", "ref-manual/classes/mp/mme_load", "ref-manual/classes/mp/mme_load_cpf", "ref-manual/classes/mp/mme_load_pf_ac", "ref-manual/classes/mp/mme_load_pf_dc", "ref-manual/classes/mp/mme_reserve_gen", "ref-manual/classes/mp/mme_reserve_zone", "ref-manual/classes/mp/mme_shunt", "ref-manual/classes/mp/mme_shunt3p", "ref-manual/classes/mp/mme_shunt3p_opf", "ref-manual/classes/mp/mme_shunt_cpf", "ref-manual/classes/mp/mme_shunt_pf_ac", "ref-manual/classes/mp/mme_shunt_pf_dc", "ref-manual/classes/mp/mme_xfmr3p", "ref-manual/classes/mp/mme_xfmr3p_opf", "ref-manual/classes/mp/net_model", "ref-manual/classes/mp/net_model_ac", "ref-manual/classes/mp/net_model_acc", "ref-manual/classes/mp/net_model_acp", "ref-manual/classes/mp/net_model_dc", "ref-manual/classes/mp/nm_element", "ref-manual/classes/mp/nme_branch", "ref-manual/classes/mp/nme_branch_ac", "ref-manual/classes/mp/nme_branch_acc", "ref-manual/classes/mp/nme_branch_acp", "ref-manual/classes/mp/nme_branch_dc", "ref-manual/classes/mp/nme_bus", "ref-manual/classes/mp/nme_bus3p", "ref-manual/classes/mp/nme_bus3p_acc", "ref-manual/classes/mp/nme_bus3p_acp", "ref-manual/classes/mp/nme_bus_acc", "ref-manual/classes/mp/nme_bus_acp", "ref-manual/classes/mp/nme_bus_dc", "ref-manual/classes/mp/nme_buslink", "ref-manual/classes/mp/nme_buslink_acc", "ref-manual/classes/mp/nme_buslink_acp", "ref-manual/classes/mp/nme_gen", "ref-manual/classes/mp/nme_gen3p", "ref-manual/classes/mp/nme_gen3p_acc", "ref-manual/classes/mp/nme_gen3p_acp", "ref-manual/classes/mp/nme_gen_ac", "ref-manual/classes/mp/nme_gen_acc", "ref-manual/classes/mp/nme_gen_acp", "ref-manual/classes/mp/nme_gen_dc", "ref-manual/classes/mp/nme_legacy_dcline", "ref-manual/classes/mp/nme_legacy_dcline_ac", "ref-manual/classes/mp/nme_legacy_dcline_acc", "ref-manual/classes/mp/nme_legacy_dcline_acp", "ref-manual/classes/mp/nme_legacy_dcline_dc", "ref-manual/classes/mp/nme_line3p", "ref-manual/classes/mp/nme_load", "ref-manual/classes/mp/nme_load3p", "ref-manual/classes/mp/nme_load_ac", "ref-manual/classes/mp/nme_load_acc", "ref-manual/classes/mp/nme_load_acp", "ref-manual/classes/mp/nme_load_dc", "ref-manual/classes/mp/nme_shunt", "ref-manual/classes/mp/nme_shunt3p", "ref-manual/classes/mp/nme_shunt_ac", "ref-manual/classes/mp/nme_shunt_acc", "ref-manual/classes/mp/nme_shunt_acp", "ref-manual/classes/mp/nme_shunt_dc", "ref-manual/classes/mp/nme_xfmr3p", "ref-manual/classes/mp/sm_legacy_cost", "ref-manual/classes/mp/task", "ref-manual/classes/mp/task_cpf", "ref-manual/classes/mp/task_cpf_legacy", "ref-manual/classes/mp/task_opf", "ref-manual/classes/mp/task_opf_legacy", "ref-manual/classes/mp/task_pf", "ref-manual/classes/mp/task_pf_legacy", "ref-manual/classes/mp/task_shared_legacy", "ref-manual/classes/mp/xt_3p", "ref-manual/classes/mp/xt_legacy_dcline", "ref-manual/classes/mp/xt_oval_cap_curve", "ref-manual/classes/mp/xt_reserves", "ref-manual/classes/mp_table", "ref-manual/classes/mp_table_subclass", "ref-manual/functions/index", "ref-manual/functions/install_matpower", "ref-manual/functions/mp/load_dm", "ref-manual/functions/mp_table_class", "ref-manual/functions/run_cpf", "ref-manual/functions/run_mp", "ref-manual/functions/run_opf", "ref-manual/functions/run_pf", "ref-manual/index", "ref-manual/introduction", "ref-manual/legacy/classes/opf_model", "ref-manual/legacy/functions/add_userfcn", "ref-manual/legacy/functions/apply_changes", "ref-manual/legacy/functions/bustypes", "ref-manual/legacy/functions/calc_branch_angle", "ref-manual/legacy/functions/calc_v_i_sum", "ref-manual/legacy/functions/calc_v_pq_sum", "ref-manual/legacy/functions/calc_v_y_sum", "ref-manual/legacy/functions/case_info", "ref-manual/legacy/functions/caseformat", "ref-manual/legacy/functions/cdf2mpc", "ref-manual/legacy/functions/compare_case", "ref-manual/legacy/functions/connected_components", "ref-manual/legacy/functions/cpf_corrector", "ref-manual/legacy/functions/cpf_current_mpc", "ref-manual/legacy/functions/cpf_default_callback", "ref-manual/legacy/functions/cpf_detect_events", "ref-manual/legacy/functions/cpf_flim_event", "ref-manual/legacy/functions/cpf_flim_event_cb", "ref-manual/legacy/functions/cpf_nose_event", "ref-manual/legacy/functions/cpf_nose_event_cb", "ref-manual/legacy/functions/cpf_p", "ref-manual/legacy/functions/cpf_p_jac", "ref-manual/legacy/functions/cpf_plim_event", "ref-manual/legacy/functions/cpf_plim_event_cb", "ref-manual/legacy/functions/cpf_predictor", "ref-manual/legacy/functions/cpf_qlim_event", "ref-manual/legacy/functions/cpf_qlim_event_cb", "ref-manual/legacy/functions/cpf_register_callback", "ref-manual/legacy/functions/cpf_register_event", "ref-manual/legacy/functions/cpf_tangent", "ref-manual/legacy/functions/cpf_target_lam_event", "ref-manual/legacy/functions/cpf_target_lam_event_cb", "ref-manual/legacy/functions/cpf_vlim_event", "ref-manual/legacy/functions/cpf_vlim_event_cb", "ref-manual/legacy/functions/d2Abr_dV2", "ref-manual/legacy/functions/d2Ibr_dV2", "ref-manual/legacy/functions/d2Imis_dV2", "ref-manual/legacy/functions/d2Imis_dVdSg", "ref-manual/legacy/functions/d2Sbr_dV2", "ref-manual/legacy/functions/d2Sbus_dV2", "ref-manual/legacy/functions/dAbr_dV", "ref-manual/legacy/functions/dIbr_dV", "ref-manual/legacy/functions/dImis_dV", "ref-manual/legacy/functions/dSbr_dV", "ref-manual/legacy/functions/dSbus_dV", "ref-manual/legacy/functions/dcopf", "ref-manual/legacy/functions/dcopf_solver", "ref-manual/legacy/functions/dcpf", "ref-manual/legacy/functions/define_constants", "ref-manual/legacy/functions/e2i_data", "ref-manual/legacy/functions/e2i_field", "ref-manual/legacy/functions/ext2int", "ref-manual/legacy/functions/extract_islands", "ref-manual/legacy/functions/fdpf", "ref-manual/legacy/functions/feval_w_path", "ref-manual/legacy/functions/find_bridges", "ref-manual/legacy/functions/find_islands", "ref-manual/legacy/functions/fmincopf", "ref-manual/legacy/functions/gausspf", "ref-manual/legacy/functions/genfuels", "ref-manual/legacy/functions/gentypes", "ref-manual/legacy/functions/get_losses", "ref-manual/legacy/functions/get_reorder", "ref-manual/legacy/functions/hasPQcap", "ref-manual/legacy/functions/have_feature_e4st", "ref-manual/legacy/functions/have_feature_minopf", "ref-manual/legacy/functions/have_feature_most", "ref-manual/legacy/functions/have_feature_mp_core", "ref-manual/legacy/functions/have_feature_pdipmopf", "ref-manual/legacy/functions/have_feature_regexp_split", "ref-manual/legacy/functions/have_feature_scpdipmopf", "ref-manual/legacy/functions/have_feature_sdp_pf", "ref-manual/legacy/functions/have_feature_smartmarket", "ref-manual/legacy/functions/have_feature_syngrid", "ref-manual/legacy/functions/have_feature_table", "ref-manual/legacy/functions/have_feature_tralmopf", "ref-manual/legacy/functions/i2e_data", "ref-manual/legacy/functions/i2e_field", "ref-manual/legacy/functions/idx_brch", "ref-manual/legacy/functions/idx_bus", "ref-manual/legacy/functions/idx_cost", "ref-manual/legacy/functions/idx_ct", "ref-manual/legacy/functions/idx_dcline", "ref-manual/legacy/functions/idx_gen", "ref-manual/legacy/functions/int2ext", "ref-manual/legacy/functions/isload", "ref-manual/legacy/functions/load2disp", "ref-manual/legacy/functions/loadcase", "ref-manual/legacy/functions/loadshed", "ref-manual/legacy/functions/makeAang", "ref-manual/legacy/functions/makeApq", "ref-manual/legacy/functions/makeAvl", "ref-manual/legacy/functions/makeAy", "ref-manual/legacy/functions/makeB", "ref-manual/legacy/functions/makeBdc", "ref-manual/legacy/functions/makeJac", "ref-manual/legacy/functions/makeLODF", "ref-manual/legacy/functions/makePTDF", "ref-manual/legacy/functions/makeSbus", "ref-manual/legacy/functions/makeSdzip", "ref-manual/legacy/functions/makeYbus", "ref-manual/legacy/functions/make_vcorr", "ref-manual/legacy/functions/make_zpv", "ref-manual/legacy/functions/margcost", "ref-manual/legacy/functions/miqps_matpower", "ref-manual/legacy/functions/modcost", "ref-manual/legacy/functions/mpoption", "ref-manual/legacy/functions/mpoption_info_clp", "ref-manual/legacy/functions/mpoption_info_cplex", "ref-manual/legacy/functions/mpoption_info_fmincon", "ref-manual/legacy/functions/mpoption_info_glpk", "ref-manual/legacy/functions/mpoption_info_gurobi", "ref-manual/legacy/functions/mpoption_info_highs", "ref-manual/legacy/functions/mpoption_info_intlinprog", "ref-manual/legacy/functions/mpoption_info_ipopt", "ref-manual/legacy/functions/mpoption_info_knitro", "ref-manual/legacy/functions/mpoption_info_linprog", "ref-manual/legacy/functions/mpoption_info_mips", "ref-manual/legacy/functions/mpoption_info_mosek", "ref-manual/legacy/functions/mpoption_info_osqp", "ref-manual/legacy/functions/mpoption_info_quadprog", "ref-manual/legacy/functions/mpoption_old", "ref-manual/legacy/functions/mpver", "ref-manual/legacy/functions/newtonpf", "ref-manual/legacy/functions/newtonpf_I_cart", "ref-manual/legacy/functions/newtonpf_I_hybrid", "ref-manual/legacy/functions/newtonpf_I_polar", "ref-manual/legacy/functions/newtonpf_S_cart", "ref-manual/legacy/functions/newtonpf_S_hybrid", "ref-manual/legacy/functions/nlpopf_solver", "ref-manual/legacy/functions/opf", "ref-manual/legacy/functions/opf_args", "ref-manual/legacy/functions/opf_branch_ang_fcn", "ref-manual/legacy/functions/opf_branch_ang_hess", "ref-manual/legacy/functions/opf_branch_flow_fcn", "ref-manual/legacy/functions/opf_branch_flow_hess", "ref-manual/legacy/functions/opf_current_balance_fcn", "ref-manual/legacy/functions/opf_current_balance_hess", "ref-manual/legacy/functions/opf_execute", "ref-manual/legacy/functions/opf_gen_cost_fcn", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn", "ref-manual/legacy/functions/opf_nle_fcn1", "ref-manual/legacy/functions/opf_nle_hess1", "ref-manual/legacy/functions/opf_power_balance_fcn", "ref-manual/legacy/functions/opf_power_balance_hess", "ref-manual/legacy/functions/opf_setup", "ref-manual/legacy/functions/opf_veq_fcn", "ref-manual/legacy/functions/opf_veq_hess", "ref-manual/legacy/functions/opf_vlim_fcn", "ref-manual/legacy/functions/opf_vlim_hess", "ref-manual/legacy/functions/opf_vref_fcn", "ref-manual/legacy/functions/opf_vref_hess", "ref-manual/legacy/functions/order_radial", "ref-manual/legacy/functions/pfsoln", "ref-manual/legacy/functions/poly2pwl", "ref-manual/legacy/functions/polycost", "ref-manual/legacy/functions/pqcost", "ref-manual/legacy/functions/printpf", "ref-manual/legacy/functions/psse2mpc", "ref-manual/legacy/functions/psse_convert", "ref-manual/legacy/functions/psse_convert_hvdc", "ref-manual/legacy/functions/psse_convert_xfmr", "ref-manual/legacy/functions/psse_parse", "ref-manual/legacy/functions/psse_parse_line", "ref-manual/legacy/functions/psse_parse_section", "ref-manual/legacy/functions/psse_read", "ref-manual/legacy/functions/qps_matpower", "ref-manual/legacy/functions/radial_pf", "ref-manual/legacy/functions/remove_userfcn", "ref-manual/legacy/functions/run_userfcn", "ref-manual/legacy/functions/runcpf", "ref-manual/legacy/functions/rundcopf", "ref-manual/legacy/functions/rundcpf", "ref-manual/legacy/functions/runduopf", "ref-manual/legacy/functions/runopf", "ref-manual/legacy/functions/runopf_w_res", "ref-manual/legacy/functions/runpf", "ref-manual/legacy/functions/runuopf", "ref-manual/legacy/functions/save2psse", "ref-manual/legacy/functions/savecase", "ref-manual/legacy/functions/savechgtab", "ref-manual/legacy/functions/scale_load", "ref-manual/legacy/functions/set_reorder", "ref-manual/legacy/functions/t_apply_changes", "ref-manual/legacy/functions/t_auction_case", "ref-manual/legacy/functions/t_auction_minopf", "ref-manual/legacy/functions/t_auction_mips", "ref-manual/legacy/functions/t_auction_tspopf_pdipm", "ref-manual/legacy/functions/t_case30_userfcns", "ref-manual/legacy/functions/t_case9_dcline", "ref-manual/legacy/functions/t_case9_opf", "ref-manual/legacy/functions/t_case9_opfv2", "ref-manual/legacy/functions/t_case9_pf", "ref-manual/legacy/functions/t_case9_pfv2", "ref-manual/legacy/functions/t_case9_save2psse", "ref-manual/legacy/functions/t_case_ext", "ref-manual/legacy/functions/t_case_int", "ref-manual/legacy/functions/t_chgtab", "ref-manual/legacy/functions/t_cpf", "ref-manual/legacy/functions/t_cpf_cb1", "ref-manual/legacy/functions/t_cpf_cb2", "ref-manual/legacy/functions/t_dcline", "ref-manual/legacy/functions/t_ext2int2ext", "ref-manual/legacy/functions/t_feval_w_path", "ref-manual/legacy/functions/t_get_losses", "ref-manual/legacy/functions/t_hasPQcap", "ref-manual/legacy/functions/t_hessian", "ref-manual/legacy/functions/t_islands", "ref-manual/legacy/functions/t_jacobian", "ref-manual/legacy/functions/t_load2disp", "ref-manual/legacy/functions/t_loadcase", "ref-manual/legacy/functions/t_makeLODF", "ref-manual/legacy/functions/t_makePTDF", "ref-manual/legacy/functions/t_margcost", "ref-manual/legacy/functions/t_miqps_matpower", "ref-manual/legacy/functions/t_modcost", "ref-manual/legacy/functions/t_mpoption", "ref-manual/legacy/functions/t_mpoption_ov", "ref-manual/legacy/functions/t_off2case", "ref-manual/legacy/functions/t_opf_dc_bpmpd", "ref-manual/legacy/functions/t_opf_dc_clp", "ref-manual/legacy/functions/t_opf_dc_cplex", "ref-manual/legacy/functions/t_opf_dc_default", "ref-manual/legacy/functions/t_opf_dc_glpk", "ref-manual/legacy/functions/t_opf_dc_gurobi", "ref-manual/legacy/functions/t_opf_dc_highs", "ref-manual/legacy/functions/t_opf_dc_ipopt", "ref-manual/legacy/functions/t_opf_dc_mips", "ref-manual/legacy/functions/t_opf_dc_mips_sc", "ref-manual/legacy/functions/t_opf_dc_mosek", "ref-manual/legacy/functions/t_opf_dc_osqp", "ref-manual/legacy/functions/t_opf_dc_ot", "ref-manual/legacy/functions/t_opf_default", "ref-manual/legacy/functions/t_opf_fmincon", "ref-manual/legacy/functions/t_opf_ipopt", "ref-manual/legacy/functions/t_opf_knitro", "ref-manual/legacy/functions/t_opf_minopf", "ref-manual/legacy/functions/t_opf_mips", "ref-manual/legacy/functions/t_opf_model", "ref-manual/legacy/functions/t_opf_softlims", "ref-manual/legacy/functions/t_opf_tspopf_pdipm", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm", "ref-manual/legacy/functions/t_opf_tspopf_tralm", "ref-manual/legacy/functions/t_opf_userfcns", "ref-manual/legacy/functions/t_pf_ac", "ref-manual/legacy/functions/t_pf_dc", "ref-manual/legacy/functions/t_pf_radial", "ref-manual/legacy/functions/t_printpf", "ref-manual/legacy/functions/t_psse", "ref-manual/legacy/functions/t_qps_matpower", "ref-manual/legacy/functions/t_runmarket", "ref-manual/legacy/functions/t_runopf_w_res", "ref-manual/legacy/functions/t_scale_load", "ref-manual/legacy/functions/t_total_load", "ref-manual/legacy/functions/t_totcost", "ref-manual/legacy/functions/t_vdep_load", "ref-manual/legacy/functions/toggle_dcline", "ref-manual/legacy/functions/toggle_iflims", "ref-manual/legacy/functions/toggle_reserves", "ref-manual/legacy/functions/toggle_softlims", "ref-manual/legacy/functions/total_load", "ref-manual/legacy/functions/totcost", "ref-manual/legacy/functions/uopf", "ref-manual/legacy/functions/update_mupq", "ref-manual/legacy/functions/zgausspf", "ref-manual/legacy/index", "ref-manual/previous", "ref-manual/tests/index", "ref-manual/tests/mp_foo_table", "ref-manual/tests/t_case3p_a", "ref-manual/tests/t_case3p_b", "ref-manual/tests/t_case3p_c", "ref-manual/tests/t_case3p_d", "ref-manual/tests/t_case3p_e", "ref-manual/tests/t_case3p_f", "ref-manual/tests/t_case3p_g", "ref-manual/tests/t_case3p_h", "ref-manual/tests/t_case9_gizmo", "ref-manual/tests/t_convert_1p_to_3p", "ref-manual/tests/t_dmc_element", "ref-manual/tests/t_mp_data_model", "ref-manual/tests/t_mp_dm_converter_mpc2", "ref-manual/tests/t_mp_mapped_array", "ref-manual/tests/t_mp_table", "ref-manual/tests/t_mpxt_legacy_dcline", "ref-manual/tests/t_mpxt_reserves", "ref-manual/tests/t_nm_element", "ref-manual/tests/t_node_test", "ref-manual/tests/t_port_inj_current_acc", "ref-manual/tests/t_port_inj_current_acp", "ref-manual/tests/t_port_inj_power_acc", "ref-manual/tests/t_port_inj_power_acp", "ref-manual/tests/t_pretty_print", "ref-manual/tests/t_run_mp", "ref-manual/tests/t_run_mp_3p", "ref-manual/tests/t_run_opf_default", "ref-manual/tests/test_matpower", "tech-notes", "users-manual/index"], "filenames": ["dev-manual/acknowledgments.rst", "dev-manual/architecture.rst", "dev-manual/customizing.rst", "dev-manual/data-model.rst", "dev-manual/data-model-converter.rst", "dev-manual/index.rst", "dev-manual/introduction.rst", "dev-manual/math-model.rst", "dev-manual/net-model.rst", "dev-manual/notation.rst", "dev-manual/references.rst", "dev-manual/task.rst", "howto/add-constraint.rst", "howto/builddocs.rst", "howto/builddocs/generate_autodoc_stubs.rst", "howto/builddocs/generate_matpower_autodoc.rst", "howto/builddocs/generate_source_symlinks.rst", "howto/element.rst", "howto/extension.rst", "howto/gizmo-element/index.rst", "howto/three-phase.rst", "index.rst", "mips/functions/have_feature_lu_vec.rst", "mips/functions/have_feature_mips.rst", "mips/functions/have_feature_pardiso.rst", "mips/functions/have_feature_pardiso_legacy.rst", "mips/functions/have_feature_pardiso_object.rst", "mips/functions/mips.rst", "mips/functions/mips_example1.rst", "mips/functions/mips_example2.rst", "mips/functions/mipsver.rst", "mips/functions/mplinsolve.rst", "mips/functions/qps_mips.rst", "mips/functions/t_mips.rst", "mips/functions/t_mips_pardiso.rst", "mips/functions/t_mplinsolve.rst", "mips/functions/t_qps_mips.rst", "mips/functions/test_mips.rst", "mips/index.rst", "mips/reference.rst", "most/functions/addgen2mpc.rst", "most/functions/addstorage.rst", "most/functions/addwind.rst", "most/functions/apply_profile.rst", "most/functions/c118swf.rst", "most/functions/ex_case3a.rst", "most/functions/ex_case3b.rst", "most/functions/ex_contab.rst", "most/functions/ex_load_profile.rst", "most/functions/ex_storage.rst", "most/functions/ex_transmat.rst", "most/functions/ex_wind.rst", "most/functions/ex_wind_profile.rst", "most/functions/ex_wind_profile_d.rst", "most/functions/ex_wind_uc.rst", "most/functions/ex_xgd.rst", "most/functions/ex_xgd_ramp.rst", "most/functions/ex_xgd_res.rst", "most/functions/ex_xgd_uc.rst", "most/functions/filter_ramp_transitions.rst", "most/functions/getprofiles.rst", "most/functions/idx_profile.rst", "most/functions/loadgenericdata.rst", "most/functions/loadmd.rst", "most/functions/loadstoragedata.rst", "most/functions/loadxgendata.rst", "most/functions/md_init.rst", "most/functions/most.rst", "most/functions/most_ex1_ed.rst", "most/functions/most_ex2_dcopf.rst", "most/functions/most_ex3_dcopf_w_uc.rst", "most/functions/most_ex4_dcopf_ss.rst", "most/functions/most_ex5_mpopf.rst", "most/functions/most_ex6_uc.rst", "most/functions/most_ex7_suc.rst", "most/functions/most_summary.rst", "most/functions/mostver.rst", "most/functions/mpoption_info_most.rst", "most/functions/plot_gen.rst", "most/functions/plot_storage.rst", "most/functions/plot_uc.rst", "most/functions/plot_uc_data.rst", "most/functions/t_case30_most.rst", "most/functions/t_case3_most.rst", "most/functions/t_case_tlmp.rst", "most/functions/t_case_tlmp_storage.rst", "most/functions/t_most_30b_1_1_0.rst", "most/functions/t_most_30b_1_1_0_uc.rst", "most/functions/t_most_30b_1_1_17.rst", "most/functions/t_most_30b_3_1_0.rst", "most/functions/t_most_30b_3_1_17.rst", "most/functions/t_most_3b_1_1_0.rst", "most/functions/t_most_3b_1_1_2.rst", "most/functions/t_most_3b_3_1_0.rst", "most/functions/t_most_3b_3_1_2.rst", "most/functions/t_most_fixed_res.rst", "most/functions/t_most_mpopf.rst", "most/functions/t_most_sp.rst", "most/functions/t_most_spuc.rst", "most/functions/t_most_suc.rst", "most/functions/t_most_tlmp.rst", "most/functions/t_most_uc.rst", "most/functions/t_most_w_ds.rst", "most/functions/test_most.rst", "most/functions/uniformwindprofile.rst", "most/index.rst", "most/reference.rst", "mpom/classes/mp/opt_model.rst", "mpom/classes/mp/set_manager.rst", "mpom/classes/mp/set_manager_opt_model.rst", "mpom/classes/mp/sm_lin_constraint.rst", "mpom/classes/mp/sm_nln_constraint.rst", "mpom/classes/mp/sm_nln_cost.rst", "mpom/classes/mp/sm_quad_constraint.rst", "mpom/classes/mp/sm_quad_cost.rst", "mpom/classes/mp/sm_quad_cost_legacy.rst", "mpom/classes/mp/sm_variable.rst", "mpom/classes/mp_idx_manager.rst", "mpom/classes/opt_model.rst", "mpom/functions/artelys_knitro_options.rst", "mpom/functions/convert_constraint_multipliers.rst", "mpom/functions/convert_lin_constraint.rst", "mpom/functions/convert_lin_constraint_multipliers.rst", "mpom/functions/convert_quad_constraint.rst", "mpom/functions/cplex_options.rst", "mpom/functions/glpk_options.rst", "mpom/functions/gurobi_options.rst", "mpom/functions/gurobiver.rst", "mpom/functions/have_feature_bpmpd.rst", "mpom/functions/have_feature_catchme.rst", "mpom/functions/have_feature_clp.rst", "mpom/functions/have_feature_cplex.rst", "mpom/functions/have_feature_evalc.rst", "mpom/functions/have_feature_fmincon.rst", "mpom/functions/have_feature_fmincon_ipm.rst", "mpom/functions/have_feature_fsolve.rst", "mpom/functions/have_feature_glpk.rst", "mpom/functions/have_feature_gurobi.rst", "mpom/functions/have_feature_highs.rst", "mpom/functions/have_feature_intlinprog.rst", "mpom/functions/have_feature_ipopt.rst", "mpom/functions/have_feature_ipopt_auxdata.rst", "mpom/functions/have_feature_isequaln.rst", "mpom/functions/have_feature_knitro.rst", "mpom/functions/have_feature_knitromatlab.rst", "mpom/functions/have_feature_linprog.rst", "mpom/functions/have_feature_linprog_ds.rst", "mpom/functions/have_feature_mosek.rst", "mpom/functions/have_feature_opti_clp.rst", "mpom/functions/have_feature_optim.rst", "mpom/functions/have_feature_optimoptions.rst", "mpom/functions/have_feature_osqp.rst", "mpom/functions/have_feature_quadprog.rst", "mpom/functions/have_feature_quadprog_ls.rst", "mpom/functions/have_feature_sdpt3.rst", "mpom/functions/have_feature_sedumi.rst", "mpom/functions/have_feature_yalmip.rst", "mpom/functions/highs_options.rst", "mpom/functions/highsver.rst", "mpom/functions/ipopt_options.rst", "mpom/functions/knitrover.rst", "mpom/functions/lp_ex1.rst", "mpom/functions/milp_ex1.rst", "mpom/functions/miqps_cplex.rst", "mpom/functions/miqps_glpk.rst", "mpom/functions/miqps_gurobi.rst", "mpom/functions/miqps_highs.rst", "mpom/functions/miqps_master.rst", "mpom/functions/miqps_mosek.rst", "mpom/functions/miqps_ot.rst", "mpom/functions/mosek_options.rst", "mpom/functions/mosek_symbcon.rst", "mpom/functions/mp/struct2object.rst", "mpom/functions/mpomver.rst", "mpom/functions/mpopt2nleqopt.rst", "mpom/functions/mpopt2nlpopt.rst", "mpom/functions/mpopt2pneopt.rst", "mpom/functions/mpopt2qcqpopt.rst", "mpom/functions/mpopt2qpopt.rst", "mpom/functions/nested_struct_copy.rst", "mpom/functions/nleqs_core.rst", "mpom/functions/nleqs_fd_newton.rst", "mpom/functions/nleqs_fsolve.rst", "mpom/functions/nleqs_gauss_seidel.rst", "mpom/functions/nleqs_master.rst", "mpom/functions/nleqs_master_ex1.rst", "mpom/functions/nleqs_master_ex2.rst", "mpom/functions/nleqs_newton.rst", "mpom/functions/nlp_consfcn.rst", "mpom/functions/nlp_costfcn.rst", "mpom/functions/nlp_hessfcn.rst", "mpom/functions/nlps_fmincon.rst", "mpom/functions/nlps_ipopt.rst", "mpom/functions/nlps_knitro.rst", "mpom/functions/nlps_master.rst", "mpom/functions/nlps_master_ex1.rst", "mpom/functions/nlps_master_ex2.rst", "mpom/functions/osqp_options.rst", "mpom/functions/osqpver.rst", "mpom/functions/pne_callback_default.rst", "mpom/functions/pne_callback_nose.rst", "mpom/functions/pne_callback_target_lam.rst", "mpom/functions/pne_detect_events.rst", "mpom/functions/pne_detected_event.rst", "mpom/functions/pne_event_nose.rst", "mpom/functions/pne_event_target_lam.rst", "mpom/functions/pne_ex1.rst", "mpom/functions/pne_pfcn_arc_len.rst", "mpom/functions/pne_pfcn_natural.rst", "mpom/functions/pne_pfcn_pseudo_arc_len.rst", "mpom/functions/pne_register_callbacks.rst", "mpom/functions/pne_register_events.rst", "mpom/functions/pnes_master.rst", "mpom/functions/qcqp_ex1.rst", "mpom/functions/qcqp_nlp_consfcn.rst", "mpom/functions/qcqp_nlp_costfcn.rst", "mpom/functions/qcqp_nlp_hessfcn.rst", "mpom/functions/qcqps_gurobi.rst", "mpom/functions/qcqps_knitro.rst", "mpom/functions/qcqps_master.rst", "mpom/functions/qcqps_nlps.rst", "mpom/functions/qp_ex1.rst", "mpom/functions/qps_bpmpd.rst", "mpom/functions/qps_clp.rst", "mpom/functions/qps_cplex.rst", "mpom/functions/qps_glpk.rst", "mpom/functions/qps_gurobi.rst", "mpom/functions/qps_highs.rst", "mpom/functions/qps_ipopt.rst", "mpom/functions/qps_knitro.rst", "mpom/functions/qps_master.rst", "mpom/functions/qps_mosek.rst", "mpom/functions/qps_osqp.rst", "mpom/functions/qps_ot.rst", "mpom/functions/t_have_fcn.rst", "mpom/functions/t_miqps_master.rst", "mpom/functions/t_mm_solve_leqs.rst", "mpom/functions/t_mm_solve_miqps.rst", "mpom/functions/t_mm_solve_nleqs.rst", "mpom/functions/t_mm_solve_nlps.rst", "mpom/functions/t_mm_solve_pne.rst", "mpom/functions/t_mm_solve_qcqps.rst", "mpom/functions/t_mm_solve_qps.rst", "mpom/functions/t_mp_opt_model.rst", "mpom/functions/t_nested_struct_copy.rst", "mpom/functions/t_nleqs_master.rst", "mpom/functions/t_nlps_master.rst", "mpom/functions/t_om_solve_leqs.rst", "mpom/functions/t_om_solve_miqps.rst", "mpom/functions/t_om_solve_nleqs.rst", "mpom/functions/t_om_solve_nlps.rst", "mpom/functions/t_om_solve_pne.rst", "mpom/functions/t_om_solve_qcqps.rst", "mpom/functions/t_om_solve_qps.rst", "mpom/functions/t_opt_model.rst", "mpom/functions/t_pnes_master.rst", "mpom/functions/t_qcqps_master.rst", "mpom/functions/t_qps_master.rst", "mpom/functions/test_mp_opt_model.rst", "mpom/index.rst", "mpom/reference.rst", "mptest/functions/debug_assert.rst", "mptest/functions/have_feature.rst", "mptest/functions/have_feature_matlab.rst", "mptest/functions/have_feature_octave.rst", "mptest/functions/mptestver.rst", "mptest/functions/t_begin.rst", "mptest/functions/t_debug_assert.rst", "mptest/functions/t_end.rst", "mptest/functions/t_file_match.rst", "mptest/functions/t_have_feature.rst", "mptest/functions/t_is.rst", "mptest/functions/t_ok.rst", "mptest/functions/t_run_tests.rst", "mptest/functions/t_skip.rst", "mptest/functions/t_str_match.rst", "mptest/functions/t_test_fcns.rst", "mptest/functions/test_mptest.rst", "mptest/functions/toggle_debug_mode.rst", "mptest/index.rst", "mptest/reference.rst", "ref-manual/classes/index.rst", "ref-manual/classes/mp/NODE_TYPE.rst", "ref-manual/classes/mp/case_utils.rst", "ref-manual/classes/mp/cost_table.rst", "ref-manual/classes/mp/cost_table_utils.rst", "ref-manual/classes/mp/data_model.rst", "ref-manual/classes/mp/data_model_cpf.rst", "ref-manual/classes/mp/data_model_opf.rst", "ref-manual/classes/mp/dm_converter.rst", "ref-manual/classes/mp/dm_converter_mpc2.rst", "ref-manual/classes/mp/dm_converter_mpc2_legacy.rst", "ref-manual/classes/mp/dm_element.rst", "ref-manual/classes/mp/dmc_element.rst", "ref-manual/classes/mp/dmce_branch_mpc2.rst", "ref-manual/classes/mp/dmce_bus3p_mpc2.rst", "ref-manual/classes/mp/dmce_bus_mpc2.rst", "ref-manual/classes/mp/dmce_buslink_mpc2.rst", "ref-manual/classes/mp/dmce_gen3p_mpc2.rst", "ref-manual/classes/mp/dmce_gen_mpc2.rst", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2.rst", "ref-manual/classes/mp/dmce_line3p_mpc2.rst", "ref-manual/classes/mp/dmce_load3p_mpc2.rst", "ref-manual/classes/mp/dmce_load_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_gen_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_zone_mpc2.rst", "ref-manual/classes/mp/dmce_shunt3p_mpc2.rst", "ref-manual/classes/mp/dmce_shunt_mpc2.rst", "ref-manual/classes/mp/dmce_xfmr3p_mpc2.rst", "ref-manual/classes/mp/dme_branch.rst", "ref-manual/classes/mp/dme_branch_opf.rst", "ref-manual/classes/mp/dme_bus.rst", "ref-manual/classes/mp/dme_bus3p.rst", "ref-manual/classes/mp/dme_bus3p_opf.rst", "ref-manual/classes/mp/dme_bus_opf.rst", "ref-manual/classes/mp/dme_buslink.rst", "ref-manual/classes/mp/dme_buslink_opf.rst", "ref-manual/classes/mp/dme_gen.rst", "ref-manual/classes/mp/dme_gen3p.rst", "ref-manual/classes/mp/dme_gen3p_opf.rst", "ref-manual/classes/mp/dme_gen_opf.rst", "ref-manual/classes/mp/dme_legacy_dcline.rst", "ref-manual/classes/mp/dme_legacy_dcline_opf.rst", "ref-manual/classes/mp/dme_line3p.rst", "ref-manual/classes/mp/dme_line3p_opf.rst", "ref-manual/classes/mp/dme_load.rst", "ref-manual/classes/mp/dme_load3p.rst", "ref-manual/classes/mp/dme_load3p_opf.rst", "ref-manual/classes/mp/dme_load_cpf.rst", "ref-manual/classes/mp/dme_load_opf.rst", "ref-manual/classes/mp/dme_reserve_gen.rst", "ref-manual/classes/mp/dme_reserve_zone.rst", "ref-manual/classes/mp/dme_shared_opf.rst", "ref-manual/classes/mp/dme_shunt.rst", "ref-manual/classes/mp/dme_shunt3p.rst", "ref-manual/classes/mp/dme_shunt3p_opf.rst", "ref-manual/classes/mp/dme_shunt_cpf.rst", "ref-manual/classes/mp/dme_shunt_opf.rst", "ref-manual/classes/mp/dme_xfmr3p.rst", "ref-manual/classes/mp/dme_xfmr3p_opf.rst", "ref-manual/classes/mp/element_container.rst", "ref-manual/classes/mp/extension.rst", "ref-manual/classes/mp/form.rst", "ref-manual/classes/mp/form_ac.rst", "ref-manual/classes/mp/form_acc.rst", "ref-manual/classes/mp/form_acp.rst", "ref-manual/classes/mp/form_dc.rst", "ref-manual/classes/mp/mapped_array.rst", "ref-manual/classes/mp/math_model.rst", "ref-manual/classes/mp/math_model_cpf_acc.rst", "ref-manual/classes/mp/math_model_cpf_acci.rst", "ref-manual/classes/mp/math_model_cpf_accs.rst", "ref-manual/classes/mp/math_model_cpf_acp.rst", "ref-manual/classes/mp/math_model_cpf_acpi.rst", "ref-manual/classes/mp/math_model_cpf_acps.rst", "ref-manual/classes/mp/math_model_opf.rst", "ref-manual/classes/mp/math_model_opf_ac.rst", "ref-manual/classes/mp/math_model_opf_acc.rst", "ref-manual/classes/mp/math_model_opf_acci.rst", "ref-manual/classes/mp/math_model_opf_acci_legacy.rst", "ref-manual/classes/mp/math_model_opf_accs.rst", "ref-manual/classes/mp/math_model_opf_accs_legacy.rst", "ref-manual/classes/mp/math_model_opf_acp.rst", "ref-manual/classes/mp/math_model_opf_acpi.rst", "ref-manual/classes/mp/math_model_opf_acpi_legacy.rst", "ref-manual/classes/mp/math_model_opf_acps.rst", "ref-manual/classes/mp/math_model_opf_acps_legacy.rst", "ref-manual/classes/mp/math_model_opf_dc.rst", "ref-manual/classes/mp/math_model_opf_dc_legacy.rst", "ref-manual/classes/mp/math_model_pf.rst", "ref-manual/classes/mp/math_model_pf_ac.rst", "ref-manual/classes/mp/math_model_pf_acci.rst", "ref-manual/classes/mp/math_model_pf_accs.rst", "ref-manual/classes/mp/math_model_pf_acpi.rst", "ref-manual/classes/mp/math_model_pf_acps.rst", "ref-manual/classes/mp/math_model_pf_dc.rst", "ref-manual/classes/mp/mm_element.rst", "ref-manual/classes/mp/mm_shared_opf_legacy.rst", "ref-manual/classes/mp/mm_shared_pfcpf.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acc.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acci.rst", "ref-manual/classes/mp/mm_shared_pfcpf_accs.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acp.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acpi.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acps.rst", "ref-manual/classes/mp/mm_shared_pfcpf_dc.rst", "ref-manual/classes/mp/mme_branch.rst", "ref-manual/classes/mp/mme_branch_opf.rst", "ref-manual/classes/mp/mme_branch_opf_ac.rst", "ref-manual/classes/mp/mme_branch_opf_acc.rst", "ref-manual/classes/mp/mme_branch_opf_acp.rst", "ref-manual/classes/mp/mme_branch_opf_dc.rst", "ref-manual/classes/mp/mme_branch_pf_ac.rst", "ref-manual/classes/mp/mme_branch_pf_dc.rst", "ref-manual/classes/mp/mme_bus.rst", "ref-manual/classes/mp/mme_bus3p.rst", "ref-manual/classes/mp/mme_bus3p_opf_acc.rst", "ref-manual/classes/mp/mme_bus3p_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_ac.rst", "ref-manual/classes/mp/mme_bus_opf_acc.rst", "ref-manual/classes/mp/mme_bus_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_dc.rst", "ref-manual/classes/mp/mme_bus_pf_ac.rst", "ref-manual/classes/mp/mme_bus_pf_dc.rst", "ref-manual/classes/mp/mme_buslink.rst", "ref-manual/classes/mp/mme_buslink_opf.rst", "ref-manual/classes/mp/mme_buslink_opf_acc.rst", "ref-manual/classes/mp/mme_buslink_opf_acp.rst", "ref-manual/classes/mp/mme_buslink_pf_ac.rst", "ref-manual/classes/mp/mme_buslink_pf_acc.rst", "ref-manual/classes/mp/mme_buslink_pf_acp.rst", "ref-manual/classes/mp/mme_gen.rst", "ref-manual/classes/mp/mme_gen3p.rst", "ref-manual/classes/mp/mme_gen3p_opf.rst", "ref-manual/classes/mp/mme_gen_opf.rst", "ref-manual/classes/mp/mme_gen_opf_ac.rst", "ref-manual/classes/mp/mme_gen_opf_ac_oval.rst", "ref-manual/classes/mp/mme_gen_opf_dc.rst", "ref-manual/classes/mp/mme_gen_pf_ac.rst", "ref-manual/classes/mp/mme_gen_pf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc.rst", "ref-manual/classes/mp/mme_line3p.rst", "ref-manual/classes/mp/mme_line3p_opf.rst", "ref-manual/classes/mp/mme_load.rst", "ref-manual/classes/mp/mme_load_cpf.rst", "ref-manual/classes/mp/mme_load_pf_ac.rst", "ref-manual/classes/mp/mme_load_pf_dc.rst", "ref-manual/classes/mp/mme_reserve_gen.rst", "ref-manual/classes/mp/mme_reserve_zone.rst", "ref-manual/classes/mp/mme_shunt.rst", "ref-manual/classes/mp/mme_shunt3p.rst", "ref-manual/classes/mp/mme_shunt3p_opf.rst", "ref-manual/classes/mp/mme_shunt_cpf.rst", "ref-manual/classes/mp/mme_shunt_pf_ac.rst", "ref-manual/classes/mp/mme_shunt_pf_dc.rst", "ref-manual/classes/mp/mme_xfmr3p.rst", "ref-manual/classes/mp/mme_xfmr3p_opf.rst", "ref-manual/classes/mp/net_model.rst", "ref-manual/classes/mp/net_model_ac.rst", "ref-manual/classes/mp/net_model_acc.rst", "ref-manual/classes/mp/net_model_acp.rst", "ref-manual/classes/mp/net_model_dc.rst", "ref-manual/classes/mp/nm_element.rst", "ref-manual/classes/mp/nme_branch.rst", "ref-manual/classes/mp/nme_branch_ac.rst", "ref-manual/classes/mp/nme_branch_acc.rst", "ref-manual/classes/mp/nme_branch_acp.rst", "ref-manual/classes/mp/nme_branch_dc.rst", "ref-manual/classes/mp/nme_bus.rst", "ref-manual/classes/mp/nme_bus3p.rst", "ref-manual/classes/mp/nme_bus3p_acc.rst", "ref-manual/classes/mp/nme_bus3p_acp.rst", "ref-manual/classes/mp/nme_bus_acc.rst", "ref-manual/classes/mp/nme_bus_acp.rst", "ref-manual/classes/mp/nme_bus_dc.rst", "ref-manual/classes/mp/nme_buslink.rst", "ref-manual/classes/mp/nme_buslink_acc.rst", "ref-manual/classes/mp/nme_buslink_acp.rst", "ref-manual/classes/mp/nme_gen.rst", "ref-manual/classes/mp/nme_gen3p.rst", "ref-manual/classes/mp/nme_gen3p_acc.rst", "ref-manual/classes/mp/nme_gen3p_acp.rst", "ref-manual/classes/mp/nme_gen_ac.rst", "ref-manual/classes/mp/nme_gen_acc.rst", "ref-manual/classes/mp/nme_gen_acp.rst", "ref-manual/classes/mp/nme_gen_dc.rst", "ref-manual/classes/mp/nme_legacy_dcline.rst", "ref-manual/classes/mp/nme_legacy_dcline_ac.rst", "ref-manual/classes/mp/nme_legacy_dcline_acc.rst", "ref-manual/classes/mp/nme_legacy_dcline_acp.rst", "ref-manual/classes/mp/nme_legacy_dcline_dc.rst", "ref-manual/classes/mp/nme_line3p.rst", "ref-manual/classes/mp/nme_load.rst", "ref-manual/classes/mp/nme_load3p.rst", "ref-manual/classes/mp/nme_load_ac.rst", "ref-manual/classes/mp/nme_load_acc.rst", "ref-manual/classes/mp/nme_load_acp.rst", "ref-manual/classes/mp/nme_load_dc.rst", "ref-manual/classes/mp/nme_shunt.rst", "ref-manual/classes/mp/nme_shunt3p.rst", "ref-manual/classes/mp/nme_shunt_ac.rst", "ref-manual/classes/mp/nme_shunt_acc.rst", "ref-manual/classes/mp/nme_shunt_acp.rst", "ref-manual/classes/mp/nme_shunt_dc.rst", "ref-manual/classes/mp/nme_xfmr3p.rst", "ref-manual/classes/mp/sm_legacy_cost.rst", "ref-manual/classes/mp/task.rst", "ref-manual/classes/mp/task_cpf.rst", "ref-manual/classes/mp/task_cpf_legacy.rst", "ref-manual/classes/mp/task_opf.rst", "ref-manual/classes/mp/task_opf_legacy.rst", "ref-manual/classes/mp/task_pf.rst", "ref-manual/classes/mp/task_pf_legacy.rst", "ref-manual/classes/mp/task_shared_legacy.rst", "ref-manual/classes/mp/xt_3p.rst", "ref-manual/classes/mp/xt_legacy_dcline.rst", "ref-manual/classes/mp/xt_oval_cap_curve.rst", "ref-manual/classes/mp/xt_reserves.rst", "ref-manual/classes/mp_table.rst", "ref-manual/classes/mp_table_subclass.rst", "ref-manual/functions/index.rst", "ref-manual/functions/install_matpower.rst", "ref-manual/functions/mp/load_dm.rst", "ref-manual/functions/mp_table_class.rst", "ref-manual/functions/run_cpf.rst", "ref-manual/functions/run_mp.rst", "ref-manual/functions/run_opf.rst", "ref-manual/functions/run_pf.rst", "ref-manual/index.rst", "ref-manual/introduction.rst", "ref-manual/legacy/classes/opf_model.rst", "ref-manual/legacy/functions/add_userfcn.rst", "ref-manual/legacy/functions/apply_changes.rst", "ref-manual/legacy/functions/bustypes.rst", "ref-manual/legacy/functions/calc_branch_angle.rst", "ref-manual/legacy/functions/calc_v_i_sum.rst", "ref-manual/legacy/functions/calc_v_pq_sum.rst", "ref-manual/legacy/functions/calc_v_y_sum.rst", "ref-manual/legacy/functions/case_info.rst", "ref-manual/legacy/functions/caseformat.rst", "ref-manual/legacy/functions/cdf2mpc.rst", "ref-manual/legacy/functions/compare_case.rst", "ref-manual/legacy/functions/connected_components.rst", "ref-manual/legacy/functions/cpf_corrector.rst", "ref-manual/legacy/functions/cpf_current_mpc.rst", "ref-manual/legacy/functions/cpf_default_callback.rst", "ref-manual/legacy/functions/cpf_detect_events.rst", "ref-manual/legacy/functions/cpf_flim_event.rst", "ref-manual/legacy/functions/cpf_flim_event_cb.rst", "ref-manual/legacy/functions/cpf_nose_event.rst", "ref-manual/legacy/functions/cpf_nose_event_cb.rst", "ref-manual/legacy/functions/cpf_p.rst", "ref-manual/legacy/functions/cpf_p_jac.rst", "ref-manual/legacy/functions/cpf_plim_event.rst", "ref-manual/legacy/functions/cpf_plim_event_cb.rst", "ref-manual/legacy/functions/cpf_predictor.rst", "ref-manual/legacy/functions/cpf_qlim_event.rst", "ref-manual/legacy/functions/cpf_qlim_event_cb.rst", "ref-manual/legacy/functions/cpf_register_callback.rst", "ref-manual/legacy/functions/cpf_register_event.rst", "ref-manual/legacy/functions/cpf_tangent.rst", "ref-manual/legacy/functions/cpf_target_lam_event.rst", "ref-manual/legacy/functions/cpf_target_lam_event_cb.rst", "ref-manual/legacy/functions/cpf_vlim_event.rst", "ref-manual/legacy/functions/cpf_vlim_event_cb.rst", "ref-manual/legacy/functions/d2Abr_dV2.rst", "ref-manual/legacy/functions/d2Ibr_dV2.rst", "ref-manual/legacy/functions/d2Imis_dV2.rst", "ref-manual/legacy/functions/d2Imis_dVdSg.rst", "ref-manual/legacy/functions/d2Sbr_dV2.rst", "ref-manual/legacy/functions/d2Sbus_dV2.rst", "ref-manual/legacy/functions/dAbr_dV.rst", "ref-manual/legacy/functions/dIbr_dV.rst", "ref-manual/legacy/functions/dImis_dV.rst", "ref-manual/legacy/functions/dSbr_dV.rst", "ref-manual/legacy/functions/dSbus_dV.rst", "ref-manual/legacy/functions/dcopf.rst", "ref-manual/legacy/functions/dcopf_solver.rst", "ref-manual/legacy/functions/dcpf.rst", "ref-manual/legacy/functions/define_constants.rst", "ref-manual/legacy/functions/e2i_data.rst", "ref-manual/legacy/functions/e2i_field.rst", "ref-manual/legacy/functions/ext2int.rst", "ref-manual/legacy/functions/extract_islands.rst", "ref-manual/legacy/functions/fdpf.rst", "ref-manual/legacy/functions/feval_w_path.rst", "ref-manual/legacy/functions/find_bridges.rst", "ref-manual/legacy/functions/find_islands.rst", "ref-manual/legacy/functions/fmincopf.rst", "ref-manual/legacy/functions/gausspf.rst", "ref-manual/legacy/functions/genfuels.rst", "ref-manual/legacy/functions/gentypes.rst", "ref-manual/legacy/functions/get_losses.rst", "ref-manual/legacy/functions/get_reorder.rst", "ref-manual/legacy/functions/hasPQcap.rst", "ref-manual/legacy/functions/have_feature_e4st.rst", "ref-manual/legacy/functions/have_feature_minopf.rst", "ref-manual/legacy/functions/have_feature_most.rst", "ref-manual/legacy/functions/have_feature_mp_core.rst", "ref-manual/legacy/functions/have_feature_pdipmopf.rst", "ref-manual/legacy/functions/have_feature_regexp_split.rst", "ref-manual/legacy/functions/have_feature_scpdipmopf.rst", "ref-manual/legacy/functions/have_feature_sdp_pf.rst", "ref-manual/legacy/functions/have_feature_smartmarket.rst", "ref-manual/legacy/functions/have_feature_syngrid.rst", "ref-manual/legacy/functions/have_feature_table.rst", "ref-manual/legacy/functions/have_feature_tralmopf.rst", "ref-manual/legacy/functions/i2e_data.rst", "ref-manual/legacy/functions/i2e_field.rst", "ref-manual/legacy/functions/idx_brch.rst", "ref-manual/legacy/functions/idx_bus.rst", "ref-manual/legacy/functions/idx_cost.rst", "ref-manual/legacy/functions/idx_ct.rst", "ref-manual/legacy/functions/idx_dcline.rst", "ref-manual/legacy/functions/idx_gen.rst", "ref-manual/legacy/functions/int2ext.rst", "ref-manual/legacy/functions/isload.rst", "ref-manual/legacy/functions/load2disp.rst", "ref-manual/legacy/functions/loadcase.rst", "ref-manual/legacy/functions/loadshed.rst", "ref-manual/legacy/functions/makeAang.rst", "ref-manual/legacy/functions/makeApq.rst", "ref-manual/legacy/functions/makeAvl.rst", "ref-manual/legacy/functions/makeAy.rst", "ref-manual/legacy/functions/makeB.rst", "ref-manual/legacy/functions/makeBdc.rst", "ref-manual/legacy/functions/makeJac.rst", "ref-manual/legacy/functions/makeLODF.rst", "ref-manual/legacy/functions/makePTDF.rst", "ref-manual/legacy/functions/makeSbus.rst", "ref-manual/legacy/functions/makeSdzip.rst", "ref-manual/legacy/functions/makeYbus.rst", "ref-manual/legacy/functions/make_vcorr.rst", "ref-manual/legacy/functions/make_zpv.rst", "ref-manual/legacy/functions/margcost.rst", "ref-manual/legacy/functions/miqps_matpower.rst", "ref-manual/legacy/functions/modcost.rst", "ref-manual/legacy/functions/mpoption.rst", "ref-manual/legacy/functions/mpoption_info_clp.rst", "ref-manual/legacy/functions/mpoption_info_cplex.rst", "ref-manual/legacy/functions/mpoption_info_fmincon.rst", "ref-manual/legacy/functions/mpoption_info_glpk.rst", "ref-manual/legacy/functions/mpoption_info_gurobi.rst", "ref-manual/legacy/functions/mpoption_info_highs.rst", "ref-manual/legacy/functions/mpoption_info_intlinprog.rst", "ref-manual/legacy/functions/mpoption_info_ipopt.rst", "ref-manual/legacy/functions/mpoption_info_knitro.rst", "ref-manual/legacy/functions/mpoption_info_linprog.rst", "ref-manual/legacy/functions/mpoption_info_mips.rst", "ref-manual/legacy/functions/mpoption_info_mosek.rst", "ref-manual/legacy/functions/mpoption_info_osqp.rst", "ref-manual/legacy/functions/mpoption_info_quadprog.rst", "ref-manual/legacy/functions/mpoption_old.rst", "ref-manual/legacy/functions/mpver.rst", "ref-manual/legacy/functions/newtonpf.rst", "ref-manual/legacy/functions/newtonpf_I_cart.rst", "ref-manual/legacy/functions/newtonpf_I_hybrid.rst", "ref-manual/legacy/functions/newtonpf_I_polar.rst", "ref-manual/legacy/functions/newtonpf_S_cart.rst", "ref-manual/legacy/functions/newtonpf_S_hybrid.rst", "ref-manual/legacy/functions/nlpopf_solver.rst", "ref-manual/legacy/functions/opf.rst", "ref-manual/legacy/functions/opf_args.rst", "ref-manual/legacy/functions/opf_branch_ang_fcn.rst", "ref-manual/legacy/functions/opf_branch_ang_hess.rst", "ref-manual/legacy/functions/opf_branch_flow_fcn.rst", "ref-manual/legacy/functions/opf_branch_flow_hess.rst", "ref-manual/legacy/functions/opf_current_balance_fcn.rst", "ref-manual/legacy/functions/opf_current_balance_hess.rst", "ref-manual/legacy/functions/opf_execute.rst", "ref-manual/legacy/functions/opf_gen_cost_fcn.rst", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn.rst", "ref-manual/legacy/functions/opf_nle_fcn1.rst", "ref-manual/legacy/functions/opf_nle_hess1.rst", "ref-manual/legacy/functions/opf_power_balance_fcn.rst", "ref-manual/legacy/functions/opf_power_balance_hess.rst", "ref-manual/legacy/functions/opf_setup.rst", "ref-manual/legacy/functions/opf_veq_fcn.rst", "ref-manual/legacy/functions/opf_veq_hess.rst", "ref-manual/legacy/functions/opf_vlim_fcn.rst", "ref-manual/legacy/functions/opf_vlim_hess.rst", "ref-manual/legacy/functions/opf_vref_fcn.rst", "ref-manual/legacy/functions/opf_vref_hess.rst", "ref-manual/legacy/functions/order_radial.rst", "ref-manual/legacy/functions/pfsoln.rst", "ref-manual/legacy/functions/poly2pwl.rst", "ref-manual/legacy/functions/polycost.rst", "ref-manual/legacy/functions/pqcost.rst", "ref-manual/legacy/functions/printpf.rst", "ref-manual/legacy/functions/psse2mpc.rst", "ref-manual/legacy/functions/psse_convert.rst", "ref-manual/legacy/functions/psse_convert_hvdc.rst", "ref-manual/legacy/functions/psse_convert_xfmr.rst", "ref-manual/legacy/functions/psse_parse.rst", "ref-manual/legacy/functions/psse_parse_line.rst", "ref-manual/legacy/functions/psse_parse_section.rst", "ref-manual/legacy/functions/psse_read.rst", "ref-manual/legacy/functions/qps_matpower.rst", "ref-manual/legacy/functions/radial_pf.rst", "ref-manual/legacy/functions/remove_userfcn.rst", "ref-manual/legacy/functions/run_userfcn.rst", "ref-manual/legacy/functions/runcpf.rst", "ref-manual/legacy/functions/rundcopf.rst", "ref-manual/legacy/functions/rundcpf.rst", "ref-manual/legacy/functions/runduopf.rst", "ref-manual/legacy/functions/runopf.rst", "ref-manual/legacy/functions/runopf_w_res.rst", "ref-manual/legacy/functions/runpf.rst", "ref-manual/legacy/functions/runuopf.rst", "ref-manual/legacy/functions/save2psse.rst", "ref-manual/legacy/functions/savecase.rst", "ref-manual/legacy/functions/savechgtab.rst", "ref-manual/legacy/functions/scale_load.rst", "ref-manual/legacy/functions/set_reorder.rst", "ref-manual/legacy/functions/t_apply_changes.rst", "ref-manual/legacy/functions/t_auction_case.rst", "ref-manual/legacy/functions/t_auction_minopf.rst", "ref-manual/legacy/functions/t_auction_mips.rst", "ref-manual/legacy/functions/t_auction_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_case30_userfcns.rst", "ref-manual/legacy/functions/t_case9_dcline.rst", "ref-manual/legacy/functions/t_case9_opf.rst", "ref-manual/legacy/functions/t_case9_opfv2.rst", "ref-manual/legacy/functions/t_case9_pf.rst", "ref-manual/legacy/functions/t_case9_pfv2.rst", "ref-manual/legacy/functions/t_case9_save2psse.rst", "ref-manual/legacy/functions/t_case_ext.rst", "ref-manual/legacy/functions/t_case_int.rst", "ref-manual/legacy/functions/t_chgtab.rst", "ref-manual/legacy/functions/t_cpf.rst", "ref-manual/legacy/functions/t_cpf_cb1.rst", "ref-manual/legacy/functions/t_cpf_cb2.rst", "ref-manual/legacy/functions/t_dcline.rst", "ref-manual/legacy/functions/t_ext2int2ext.rst", "ref-manual/legacy/functions/t_feval_w_path.rst", "ref-manual/legacy/functions/t_get_losses.rst", "ref-manual/legacy/functions/t_hasPQcap.rst", "ref-manual/legacy/functions/t_hessian.rst", "ref-manual/legacy/functions/t_islands.rst", "ref-manual/legacy/functions/t_jacobian.rst", "ref-manual/legacy/functions/t_load2disp.rst", "ref-manual/legacy/functions/t_loadcase.rst", "ref-manual/legacy/functions/t_makeLODF.rst", "ref-manual/legacy/functions/t_makePTDF.rst", "ref-manual/legacy/functions/t_margcost.rst", "ref-manual/legacy/functions/t_miqps_matpower.rst", "ref-manual/legacy/functions/t_modcost.rst", "ref-manual/legacy/functions/t_mpoption.rst", "ref-manual/legacy/functions/t_mpoption_ov.rst", "ref-manual/legacy/functions/t_off2case.rst", "ref-manual/legacy/functions/t_opf_dc_bpmpd.rst", "ref-manual/legacy/functions/t_opf_dc_clp.rst", "ref-manual/legacy/functions/t_opf_dc_cplex.rst", "ref-manual/legacy/functions/t_opf_dc_default.rst", "ref-manual/legacy/functions/t_opf_dc_glpk.rst", "ref-manual/legacy/functions/t_opf_dc_gurobi.rst", "ref-manual/legacy/functions/t_opf_dc_highs.rst", "ref-manual/legacy/functions/t_opf_dc_ipopt.rst", "ref-manual/legacy/functions/t_opf_dc_mips.rst", "ref-manual/legacy/functions/t_opf_dc_mips_sc.rst", "ref-manual/legacy/functions/t_opf_dc_mosek.rst", "ref-manual/legacy/functions/t_opf_dc_osqp.rst", "ref-manual/legacy/functions/t_opf_dc_ot.rst", "ref-manual/legacy/functions/t_opf_default.rst", "ref-manual/legacy/functions/t_opf_fmincon.rst", "ref-manual/legacy/functions/t_opf_ipopt.rst", "ref-manual/legacy/functions/t_opf_knitro.rst", "ref-manual/legacy/functions/t_opf_minopf.rst", "ref-manual/legacy/functions/t_opf_mips.rst", "ref-manual/legacy/functions/t_opf_model.rst", "ref-manual/legacy/functions/t_opf_softlims.rst", "ref-manual/legacy/functions/t_opf_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_tralm.rst", "ref-manual/legacy/functions/t_opf_userfcns.rst", "ref-manual/legacy/functions/t_pf_ac.rst", "ref-manual/legacy/functions/t_pf_dc.rst", "ref-manual/legacy/functions/t_pf_radial.rst", "ref-manual/legacy/functions/t_printpf.rst", "ref-manual/legacy/functions/t_psse.rst", "ref-manual/legacy/functions/t_qps_matpower.rst", "ref-manual/legacy/functions/t_runmarket.rst", "ref-manual/legacy/functions/t_runopf_w_res.rst", "ref-manual/legacy/functions/t_scale_load.rst", "ref-manual/legacy/functions/t_total_load.rst", "ref-manual/legacy/functions/t_totcost.rst", "ref-manual/legacy/functions/t_vdep_load.rst", "ref-manual/legacy/functions/toggle_dcline.rst", "ref-manual/legacy/functions/toggle_iflims.rst", "ref-manual/legacy/functions/toggle_reserves.rst", "ref-manual/legacy/functions/toggle_softlims.rst", "ref-manual/legacy/functions/total_load.rst", "ref-manual/legacy/functions/totcost.rst", "ref-manual/legacy/functions/uopf.rst", "ref-manual/legacy/functions/update_mupq.rst", "ref-manual/legacy/functions/zgausspf.rst", "ref-manual/legacy/index.rst", "ref-manual/previous.rst", "ref-manual/tests/index.rst", "ref-manual/tests/mp_foo_table.rst", "ref-manual/tests/t_case3p_a.rst", "ref-manual/tests/t_case3p_b.rst", "ref-manual/tests/t_case3p_c.rst", "ref-manual/tests/t_case3p_d.rst", "ref-manual/tests/t_case3p_e.rst", "ref-manual/tests/t_case3p_f.rst", "ref-manual/tests/t_case3p_g.rst", "ref-manual/tests/t_case3p_h.rst", "ref-manual/tests/t_case9_gizmo.rst", "ref-manual/tests/t_convert_1p_to_3p.rst", "ref-manual/tests/t_dmc_element.rst", "ref-manual/tests/t_mp_data_model.rst", "ref-manual/tests/t_mp_dm_converter_mpc2.rst", "ref-manual/tests/t_mp_mapped_array.rst", "ref-manual/tests/t_mp_table.rst", "ref-manual/tests/t_mpxt_legacy_dcline.rst", "ref-manual/tests/t_mpxt_reserves.rst", "ref-manual/tests/t_nm_element.rst", "ref-manual/tests/t_node_test.rst", "ref-manual/tests/t_port_inj_current_acc.rst", "ref-manual/tests/t_port_inj_current_acp.rst", "ref-manual/tests/t_port_inj_power_acc.rst", "ref-manual/tests/t_port_inj_power_acp.rst", "ref-manual/tests/t_pretty_print.rst", "ref-manual/tests/t_run_mp.rst", "ref-manual/tests/t_run_mp_3p.rst", "ref-manual/tests/t_run_opf_default.rst", "ref-manual/tests/test_matpower.rst", "tech-notes.rst", "users-manual/index.rst"], "titles": ["<span class=\"section-number\">10. </span>Acknowledgments", "<span class=\"section-number\">3. </span>Architecture Overview", "<span class=\"section-number\">9. </span>Customizing <span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span>", "<span class=\"section-number\">5. </span>Data Model Object", "<span class=\"section-number\">6. </span>Data Model Converter Object", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Developer\u2019s Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">8. </span>Mathematical Model Object", "<span class=\"section-number\">7. </span>Network Model Object", "<span class=\"section-number\">2. </span>Notation", "<span class=\"section-number\">11. </span>References", "<span class=\"section-number\">4. </span>Task Object", "How to Add an OPF Constraint", "How to Build the Documentation", "generate_autodoc_stubs", "generate_matpower_autodoc", "generate_source_symlinks", "How to Create a New Element Type", "How to Create an Extension", "A Test Gizmo Element Type", "How to Run a Three-Phase Power Flow", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Documentation", "have_feature_lu_vec", "have_feature_mips", "have_feature_pardiso", "have_feature_pardiso_legacy", "have_feature_pardiso_object", "mips", "mips_example1", "mips_example2", "mipsver", "mplinsolve", "qps_mips", "t_mips", "t_mips_pardiso", "t_mplinsolve", "t_qps_mips", "test_mips", "MIPS User\u2019s Manual", "Reference", "addgen2mpc", "addstorage", "addwind", "apply_profile", "c118swf", "ex_case3a", "ex_case3b", "ex_contab", "ex_load_profile", "ex_storage", "ex_transmat", "ex_wind", "ex_wind_profile", "ex_wind_profile_d", "ex_wind_uc", "ex_xgd", "ex_xgd_ramp", "ex_xgd_res", "ex_xgd_uc", "filter_ramp_transitions", "getprofiles", "idx_profile", "loadgenericdata", "loadmd", "loadstoragedata", "loadxgendata", "md_init", "most", "most_ex1_ed", "most_ex2_dcopf", "most_ex3_dcopf_w_uc", "most_ex4_dcopf_ss", "most_ex5_mpopf", "most_ex6_uc", "most_ex7_suc", "most_summary", "mostver", "mpoption_info_most", "plot_gen", "plot_storage", "plot_uc", "plot_uc_data", "t_case30_most", "t_case3_most", "t_case_tlmp", "t_case_tlmp_storage", "t_most_30b_1_1_0", "t_most_30b_1_1_0_uc", "t_most_30b_1_1_17", "t_most_30b_3_1_0", "t_most_30b_3_1_17", "t_most_3b_1_1_0", "t_most_3b_1_1_2", "t_most_3b_3_1_0", "t_most_3b_3_1_2", "t_most_fixed_res", "t_most_mpopf", "t_most_sp", "t_most_spuc", "t_most_suc", "t_most_tlmp", "t_most_uc", "t_most_w_ds", "test_most", "uniformwindprofile", "MOST User\u2019s Manual", "Reference", "mp.opt_model", "mp.set_manager", "mp.set_manager_opt_model", "mp.sm_lin_constraint", "mp.sm_nln_constraint", "mp.sm_nln_cost", "mp.sm_quad_constraint", "mp.sm_quad_cost", "mp.sm_quad_cost_legacy", "mp.sm_variable", "mp_idx_manager", "opt_model", "artelys_knitro_options", "convert_constraint_multipliers", "convert_lin_constraint", "convert_lin_constraint_multipliers", "convert_quad_constraint", "cplex_options", "glpk_options", "gurobi_options", "gurobiver", "have_feature_bpmpd", "have_feature_catchme", "have_feature_clp", "have_feature_cplex", "have_feature_evalc", "have_feature_fmincon", "have_feature_fmincon_ipm", "have_feature_fsolve", "have_feature_glpk", "have_feature_gurobi", "have_feature_highs", "have_feature_intlinprog", "have_feature_ipopt", "have_feature_ipopt_auxdata", "have_feature_isequaln", "have_feature_knitro", "have_feature_knitromatlab", "have_feature_linprog", "have_feature_linprog_ds", "have_feature_mosek", "have_feature_opti_clp", "have_feature_optim", "have_feature_optimoptions", "have_feature_osqp", "have_feature_quadprog", "have_feature_quadprog_ls", "have_feature_sdpt3", "have_feature_sedumi", "have_feature_yalmip", "highs_options", "highsver", "ipopt_options", "knitrover", "lp_ex1", "milp_ex1", "miqps_cplex", "miqps_glpk", "miqps_gurobi", "miqps_highs", "miqps_master", "miqps_mosek", "miqps_ot", "mosek_options", "mosek_symbcon", "mp.struct2object", "mpomver", "mpopt2nleqopt", "mpopt2nlpopt", "mpopt2pneopt", "mpopt2qcqpopt", "mpopt2qpopt", "nested_struct_copy", "nleqs_core", "nleqs_fd_newton", "nleqs_fsolve", "nleqs_gauss_seidel", "nleqs_master", "nleqs_master_ex1", "nleqs_master_ex2", "nleqs_newton", "nlp_consfcn", "nlp_costfcn", "nlp_hessfcn", "nlps_fmincon", "nlps_ipopt", "nlps_knitro", "nlps_master", "nlps_master_ex1", "nlps_master_ex2", "osqp_options", "osqpver", "pne_callback_default", "pne_callback_nose", "pne_callback_target_lam", "pne_detect_events", "pne_detected_event", "pne_event_nose", "pne_event_target_lam", "pne_ex1", "pne_pfcn_arc_len", "pne_pfcn_natural", "pne_pfcn_pseudo_arc_len", "pne_register_callbacks", "pne_register_events", "pnes_master", "qcqp_ex1", "qcqp_nlp_consfcn", "qcqp_nlp_costfcn", "qcqp_nlp_hessfcn", "qcqps_gurobi", "qcqps_knitro", "qcqps_master", "qcqps_nlps", "qp_ex1", "qps_bpmpd", "qps_clp", "qps_cplex", "qps_glpk", "qps_gurobi", "qps_highs", "qps_ipopt", "qps_knitro", "qps_master", "qps_mosek", "qps_osqp", "qps_ot", "t_have_fcn", "t_miqps_master", "t_mm_solve_leqs", "t_mm_solve_miqps", "t_mm_solve_nleqs", "t_mm_solve_nlps", "t_mm_solve_pne", "t_mm_solve_qcqps", "t_mm_solve_qps", "t_mp_opt_model", "t_nested_struct_copy", "t_nleqs_master", "t_nlps_master", "t_om_solve_leqs", "t_om_solve_miqps", "t_om_solve_nleqs", "t_om_solve_nlps", "t_om_solve_pne", "t_om_solve_qcqps", "t_om_solve_qps", "t_opt_model", "t_pnes_master", "t_qcqps_master", "t_qps_master", "test_mp_opt_model", "<span class=\"raw-html\">MP-Opt-Model</span> User\u2019s Manual", "Reference", "debug_assert", "have_feature", "have_feature_matlab", "have_feature_octave", "mptestver", "t_begin", "t_debug_assert", "t_end", "t_file_match", "t_have_feature", "t_is", "t_ok", "t_run_tests", "t_skip", "t_str_match", "t_test_fcns", "test_mptest", "toggle_debug_mode", "MP-Test User\u2019s Manual", "Reference", "<span class=\"section-number\">3. </span>Classes", "mp.NODE_TYPE", "mp.case_utils", "mp.cost_table", "mp.cost_table_utils", "mp.data_model", "mp.data_model_cpf", "mp.data_model_opf", "mp.dm_converter", "mp.dm_converter_mpc2", "mp.dm_converter_mpc2_legacy", "mp.dm_element", "mp.dmc_element", "mp.dmce_branch_mpc2", "mp.dmce_bus3p_mpc2", "mp.dmce_bus_mpc2", "mp.dmce_buslink_mpc2", "mp.dmce_gen3p_mpc2", "mp.dmce_gen_mpc2", "mp.dmce_legacy_dcline_mpc2", "mp.dmce_line3p_mpc2", "mp.dmce_load3p_mpc2", "mp.dmce_load_mpc2", "mp.dmce_reserve_gen_mpc2", "mp.dmce_reserve_zone_mpc2", "mp.dmce_shunt3p_mpc2", "mp.dmce_shunt_mpc2", "mp.dmce_xfmr3p_mpc2", "mp.dme_branch", "mp.dme_branch_opf", "mp.dme_bus", "mp.dme_bus3p", "mp.dme_bus3p_opf", "mp.dme_bus_opf", "mp.dme_buslink", "mp.dme_buslink_opf", "mp.dme_gen", "mp.dme_gen3p", "mp.dme_gen3p_opf", "mp.dme_gen_opf", "mp.dme_legacy_dcline", "mp.dme_legacy_dcline_opf", "mp.dme_line3p", "mp.dme_line3p_opf", "mp.dme_load", "mp.dme_load3p", "mp.dme_load3p_opf", "mp.dme_load_cpf", "mp.dme_load_opf", "mp.dme_reserve_gen", "mp.dme_reserve_zone", "mp.dme_shared_opf", "mp.dme_shunt", "mp.dme_shunt3p", "mp.dme_shunt3p_opf", "mp.dme_shunt_cpf", "mp.dme_shunt_opf", "mp.dme_xfmr3p", "mp.dme_xfmr3p_opf", "mp.element_container", "mp.extension", "mp.form", "mp.form_ac", "mp.form_acc", "mp.form_acp", "mp.form_dc", "mp.mapped_array", "mp.math_model", "mp.math_model_cpf_acc", "mp.math_model_cpf_acci", "mp.math_model_cpf_accs", "mp.math_model_cpf_acp", "mp.math_model_cpf_acpi", "mp.math_model_cpf_acps", "mp.math_model_opf", "mp.math_model_opf_ac", "mp.math_model_opf_acc", "mp.math_model_opf_acci", "mp.math_model_opf_acci_legacy", "mp.math_model_opf_accs", "mp.math_model_opf_accs_legacy", "mp.math_model_opf_acp", "mp.math_model_opf_acpi", "mp.math_model_opf_acpi_legacy", "mp.math_model_opf_acps", "mp.math_model_opf_acps_legacy", "mp.math_model_opf_dc", "mp.math_model_opf_dc_legacy", "mp.math_model_pf", "mp.math_model_pf_ac", "mp.math_model_pf_acci", "mp.math_model_pf_accs", "mp.math_model_pf_acpi", "mp.math_model_pf_acps", "mp.math_model_pf_dc", "mp.mm_element", "mp.mm_shared_opf_legacy", "mp.mm_shared_pfcpf", "mp.mm_shared_pfcpf_ac", "mp.mm_shared_pfcpf_ac_i", "mp.mm_shared_pfcpf_acc", "mp.mm_shared_pfcpf_acci", "mp.mm_shared_pfcpf_accs", "mp.mm_shared_pfcpf_acp", "mp.mm_shared_pfcpf_acpi", "mp.mm_shared_pfcpf_acps", "mp.mm_shared_pfcpf_dc", "mp.mme_branch", "mp.mme_branch_opf", "mp.mme_branch_opf_ac", "mp.mme_branch_opf_acc", "mp.mme_branch_opf_acp", "mp.mme_branch_opf_dc", "mp.mme_branch_pf_ac", "mp.mme_branch_pf_dc", "mp.mme_bus", "mp.mme_bus3p", "mp.mme_bus3p_opf_acc", "mp.mme_bus3p_opf_acp", "mp.mme_bus_opf_ac", "mp.mme_bus_opf_acc", "mp.mme_bus_opf_acp", "mp.mme_bus_opf_dc", "mp.mme_bus_pf_ac", "mp.mme_bus_pf_dc", "mp.mme_buslink", "mp.mme_buslink_opf", "mp.mme_buslink_opf_acc", "mp.mme_buslink_opf_acp", "mp.mme_buslink_pf_ac", "mp.mme_buslink_pf_acc", "mp.mme_buslink_pf_acp", "mp.mme_gen", "mp.mme_gen3p", "mp.mme_gen3p_opf", "mp.mme_gen_opf", "mp.mme_gen_opf_ac", "mp.mme_gen_opf_ac_oval", "mp.mme_gen_opf_dc", "mp.mme_gen_pf_ac", "mp.mme_gen_pf_dc", "mp.mme_legacy_dcline", "mp.mme_legacy_dcline_opf", "mp.mme_legacy_dcline_opf_ac", "mp.mme_legacy_dcline_opf_dc", "mp.mme_legacy_dcline_pf_ac", "mp.mme_legacy_dcline_pf_dc", "mp.mme_line3p", "mp.mme_line3p_opf", "mp.mme_load", "mp.mme_load_cpf", "mp.mme_load_pf_ac", "mp.mme_load_pf_dc", "mp.mme_reserve_gen", "mp.mme_reserve_zone", "mp.mme_shunt", "mp.mme_shunt3p", "mp.mme_shunt3p_opf", "mp.mme_shunt_cpf", "mp.mme_shunt_pf_ac", "mp.mme_shunt_pf_dc", "mp.mme_xfmr3p", "mp.mme_xfmr3p_opf", "mp.net_model", "mp.net_model_ac", "mp.net_model_acc", "mp.net_model_acp", "mp.net_model_dc", "mp.nm_element", "mp.nme_branch", "mp.nme_branch_ac", "mp.nme_branch_acc", "mp.nme_branch_acp", "mp.nme_branch_dc", "mp.nme_bus", "mp.nme_bus3p", "mp.nme_bus3p_acc", "mp.nme_bus3p_acp", "mp.nme_bus_acc", "mp.nme_bus_acp", "mp.nme_bus_dc", "mp.nme_buslink", "mp.nme_buslink_acc", "mp.nme_buslink_acp", "mp.nme_gen", "mp.nme_gen3p", "mp.nme_gen3p_acc", "mp.nme_gen3p_acp", "mp.nme_gen_ac", "mp.nme_gen_acc", "mp.nme_gen_acp", "mp.nme_gen_dc", "mp.nme_legacy_dcline", "mp.nme_legacy_dcline_ac", "mp.nme_legacy_dcline_acc", "mp.nme_legacy_dcline_acp", "mp.nme_legacy_dcline_dc", "mp.nme_line3p", "mp.nme_load", "mp.nme_load3p", "mp.nme_load_ac", "mp.nme_load_acc", "mp.nme_load_acp", "mp.nme_load_dc", "mp.nme_shunt", "mp.nme_shunt3p", "mp.nme_shunt_ac", "mp.nme_shunt_acc", "mp.nme_shunt_acp", "mp.nme_shunt_dc", "mp.nme_xfmr3p", "mp.sm_legacy_cost", "mp.task", "mp.task_cpf", "mp.task_cpf_legacy", "mp.task_opf", "mp.task_opf_legacy", "mp.task_pf", "mp.task_pf_legacy", "mp.task_shared_legacy", "mp.xt_3p", "mp.xt_legacy_dcline", "mp.xt_oval_cap_curve", "mp.xt_reserves", "mp_table", "mp_table_subclass", "<span class=\"section-number\">2. </span>Functions", "install_matpower", "mp.load_dm", "mp_table_class", "run_cpf", "run_mp", "run_opf", "run_pf", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Reference Manual", "<span class=\"section-number\">1. </span>Introduction", "opf_model", "add_userfcn", "apply_changes", "bustypes", "calc_branch_angle", "calc_v_i_sum", "calc_v_pq_sum", "calc_v_y_sum", "case_info", "caseformat", "cdf2mpc", "compare_case", "connected_components", "cpf_corrector", "cpf_current_mpc", "cpf_default_callback", "cpf_detect_events", "cpf_flim_event", "cpf_flim_event_cb", "cpf_nose_event", "cpf_nose_event_cb", "cpf_p", "cpf_p_jac", "cpf_plim_event", "cpf_plim_event_cb", "cpf_predictor", "cpf_qlim_event", "cpf_qlim_event_cb", "cpf_register_callback", "cpf_register_event", "cpf_tangent", "cpf_target_lam_event", "cpf_target_lam_event_cb", "cpf_vlim_event", "cpf_vlim_event_cb", "d2Abr_dV2", "d2Ibr_dV2", "d2Imis_dV2", "d2Imis_dVdSg", "d2Sbr_dV2", "d2Sbus_dV2", "dAbr_dV", "dIbr_dV", "dImis_dV", "dSbr_dV", "dSbus_dV", "dcopf", "dcopf_solver", "dcpf", "define_constants", "e2i_data", "e2i_field", "ext2int", "extract_islands", "fdpf", "feval_w_path", "find_bridges", "find_islands", "fmincopf", "gausspf", "genfuels", "gentypes", "get_losses", "get_reorder", "hasPQcap", "have_feature_e4st", "have_feature_minopf", "have_feature_most", "have_feature_mp_core", "have_feature_pdipmopf", "have_feature_regexp_split", "have_feature_scpdipmopf", "have_feature_sdp_pf", "have_feature_smartmarket", "have_feature_syngrid", "have_feature_table", "have_feature_tralmopf", "i2e_data", "i2e_field", "idx_brch", "idx_bus", "idx_cost", "idx_ct", "idx_dcline", "idx_gen", "int2ext", "isload", "load2disp", "loadcase", "loadshed", "makeAang", "makeApq", "makeAvl", "makeAy", "makeB", "makeBdc", "makeJac", "makeLODF", "makePTDF", "makeSbus", "makeSdzip", "makeYbus", "make_vcorr", "make_zpv", "margcost", "miqps_matpower", "modcost", "mpoption", "mpoption_info_clp", "mpoption_info_cplex", "mpoption_info_fmincon", "mpoption_info_glpk", "mpoption_info_gurobi", "mpoption_info_highs", "mpoption_info_intlinprog", "mpoption_info_ipopt", "mpoption_info_knitro", "mpoption_info_linprog", "mpoption_info_mips", "mpoption_info_mosek", "mpoption_info_osqp", "mpoption_info_quadprog", "mpoption_old", "mpver", "newtonpf", "newtonpf_I_cart", "newtonpf_I_hybrid", "newtonpf_I_polar", "newtonpf_S_cart", "newtonpf_S_hybrid", "nlpopf_solver", "opf", "opf_args", "opf_branch_ang_fcn", "opf_branch_ang_hess", "opf_branch_flow_fcn", "opf_branch_flow_hess", "opf_current_balance_fcn", "opf_current_balance_hess", "opf_execute", "opf_gen_cost_fcn", "opf_legacy_user_cost_fcn", "opf_nle_fcn1", "opf_nle_hess1", "opf_power_balance_fcn", "opf_power_balance_hess", "opf_setup", "opf_veq_fcn", "opf_veq_hess", "opf_vlim_fcn", "opf_vlim_hess", "opf_vref_fcn", "opf_vref_hess", "order_radial", "pfsoln", "poly2pwl", "polycost", "pqcost", "printpf", "psse2mpc", "psse_convert", "psse_convert_hvdc", "psse_convert_xfmr", "psse_parse", "psse_parse_line", "psse_parse_section", "psse_read", "qps_matpower", "radial_pf", "remove_userfcn", "run_userfcn", "runcpf", "rundcopf", "rundcpf", "runduopf", "runopf", "runopf_w_res", "runpf", "runuopf", "save2psse", "savecase", "savechgtab", "scale_load", "set_reorder", "t_apply_changes", "t_auction_case", "t_auction_minopf", "t_auction_mips", "t_auction_tspopf_pdipm", "t_case30_userfcns", "t_case9_dcline", "t_case9_opf", "t_case9_opfv2", "t_case9_pf", "t_case9_pfv2", "t_case9_save2psse", "t_case_ext", "t_case_int", "t_chgtab", "t_cpf", "t_cpf_cb1", "t_cpf_cb2", "t_dcline", "t_ext2int2ext", "t_feval_w_path", "t_get_losses", "t_hasPQcap", "t_hessian", "t_islands", "t_jacobian", "t_load2disp", "t_loadcase", "t_makeLODF", "t_makePTDF", "t_margcost", "t_miqps_matpower", "t_modcost", "t_mpoption", "t_mpoption_ov", "t_off2case", "t_opf_dc_bpmpd", "t_opf_dc_clp", "t_opf_dc_cplex", "t_opf_dc_default", "t_opf_dc_glpk", "t_opf_dc_gurobi", "t_opf_dc_highs", "t_opf_dc_ipopt", "t_opf_dc_mips", "t_opf_dc_mips_sc", "t_opf_dc_mosek", "t_opf_dc_osqp", "t_opf_dc_ot", "t_opf_default", "t_opf_fmincon", "t_opf_ipopt", "t_opf_knitro", "t_opf_minopf", "t_opf_mips", "t_opf_model", "t_opf_softlims", "t_opf_tspopf_pdipm", "t_opf_tspopf_scpdipm", "t_opf_tspopf_tralm", "t_opf_userfcns", "t_pf_ac", "t_pf_dc", "t_pf_radial", "t_printpf", "t_psse", "t_qps_matpower", "t_runmarket", "t_runopf_w_res", "t_scale_load", "t_total_load", "t_totcost", "t_vdep_load", "toggle_dcline", "toggle_iflims", "toggle_reserves", "toggle_softlims", "total_load", "totcost", "uopf", "update_mupq", "zgausspf", "<span class=\"section-number\">5. </span>Legacy", "<span class=\"section-number\">6. </span>Previous Versions", "<span class=\"section-number\">4. </span>Tests", "mp_foo_table", "t_case3p_a", "t_case3p_b", "t_case3p_c", "t_case3p_d", "t_case3p_e", "t_case3p_f", "t_case3p_g", "t_case3p_h", "t_case9_gizmo", "t_convert_1p_to_3p", "t_dmc_element", "t_mp_data_model", "t_mp_dm_converter_mpc2", "t_mp_mapped_array", "t_mp_table", "t_mpxt_legacy_dcline", "t_mpxt_reserves", "t_nm_element", "t_node_test", "t_port_inj_current_acc", "t_port_inj_current_acp", "t_port_inj_power_acc", "t_port_inj_power_acp", "t_pretty_print", "t_run_mp", "t_run_mp_3p", "t_run_opf_default", "test_matpower", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Technical Notes", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> User\u2019s Manual"], "terms": {"matpow": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "github": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "user": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "manual": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "extra": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "matlab": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "reg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "gnu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "octav": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "pserc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "power": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "system": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "engin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "research": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "center": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "cert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "consortium": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "electr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "reliabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "technologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "solut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "mip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "interior": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "solver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "mp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816], "test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "readm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "opt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "model": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "most": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "schedul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "tool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "technic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816], "note": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "develop": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "The": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 43, 44, 61, 62, 63, 67, 78, 79, 80, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 120, 124, 125, 126, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 199, 210, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 260, 262, 269, 271, 275, 279, 280, 283, 286, 287, 288, 293, 320, 323, 341, 342, 343, 346, 347, 348, 444, 449, 493, 501, 502, 504, 506, 507, 509, 516, 517, 518, 522, 523, 524, 526, 527, 529, 532, 541, 544, 545, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 568, 569, 571, 573, 574, 576, 581, 594, 595, 596, 597, 598, 600, 601, 603, 607, 610, 612, 613, 614, 615, 617, 619, 620, 621, 624, 639, 641, 642, 643, 644, 645, 646, 648, 649, 650, 670, 675, 676, 694, 696, 697, 706, 774, 775, 776, 777, 779, 782, 816], "team": 0, "would": [0, 2, 3, 4, 6, 7, 8, 12, 17, 19, 65, 117, 171, 179, 199, 285, 292, 449, 532, 777], "like": [0, 4, 6, 8, 12, 17, 43, 107, 117, 118, 124, 125, 126, 157, 159, 170, 197, 199, 202, 269, 279, 292, 347, 449, 506, 532, 533], "support": [0, 6, 22, 23, 25, 26, 124, 129, 132, 141, 142, 146, 150, 153, 279, 497, 510, 587], "numer": [0, 4, 6, 12, 17, 19, 20, 27, 32, 43, 61, 65, 118, 167, 179, 205, 212, 230, 262, 271, 347, 497, 532, 545, 546, 568, 595, 624, 680, 682, 700, 724, 726], "grant": [0, 279], "contract": [0, 78], "have": [0, 2, 3, 4, 6, 8, 13, 17, 19, 44, 61, 63, 82, 107, 108, 113, 117, 118, 120, 122, 202, 213, 279, 284, 418, 449, 508, 517, 520, 521, 529, 532, 570, 574, 581, 599, 648, 681, 682, 688, 699, 778, 782], "contribut": [0, 6, 17, 21], "directli": [0, 2, 3, 4, 7, 12, 17, 39, 107, 118, 179, 182, 191, 206, 213, 221, 260, 269, 275, 279, 280, 293, 506, 509, 526, 566, 648, 649, 676, 681, 683], "indirectli": [0, 342, 343, 344, 345, 346, 493], "over": [0, 44, 67, 108, 493], "year": 0, "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 27, 31, 38, 39, 41, 42, 44, 60, 61, 63, 64, 65, 75, 77, 82, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 159, 162, 172, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 200, 201, 204, 205, 207, 208, 209, 212, 213, 223, 259, 262, 269, 271, 272, 274, 275, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 309, 340, 341, 342, 343, 346, 347, 348, 376, 380, 444, 446, 447, 448, 449, 493, 494, 495, 497, 498, 499, 503, 504, 505, 506, 508, 511, 512, 513, 514, 516, 517, 518, 526, 527, 532, 535, 537, 541, 544, 545, 549, 551, 563, 564, 566, 567, 568, 569, 570, 571, 576, 577, 578, 581, 592, 594, 595, 598, 599, 602, 603, 611, 613, 615, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 647, 648, 673, 676, 680, 686, 688, 694, 699, 774, 778, 782, 783, 787, 816], "includ": [0, 1, 3, 4, 6, 8, 12, 13, 15, 17, 18, 19, 20, 21, 31, 46, 59, 64, 65, 67, 75, 78, 79, 80, 82, 107, 111, 118, 159, 162, 199, 212, 217, 218, 219, 220, 262, 279, 283, 286, 287, 288, 291, 292, 309, 331, 340, 344, 348, 374, 388, 389, 390, 391, 392, 393, 394, 395, 416, 418, 423, 445, 446, 447, 449, 450, 493, 494, 498, 509, 511, 512, 513, 514, 516, 517, 525, 526, 527, 566, 569, 570, 571, 576, 578, 581, 586, 588, 592, 593, 596, 597, 600, 601, 602, 624, 639, 641, 642, 643, 644, 645, 646, 648, 649, 672, 676, 682, 683, 696, 698, 699, 720, 757, 761, 777, 778, 782, 796], "fund": [0, 279], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 41, 42, 44, 59, 60, 62, 63, 64, 65, 67, 84, 85, 96, 104, 105, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 133, 134, 135, 139, 140, 145, 146, 152, 153, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 199, 202, 207, 209, 212, 214, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 260, 272, 279, 283, 284, 285, 286, 289, 290, 292, 293, 309, 310, 321, 322, 323, 338, 340, 342, 343, 344, 345, 346, 347, 348, 357, 362, 367, 369, 371, 372, 373, 374, 376, 389, 390, 391, 393, 394, 395, 397, 401, 402, 403, 404, 405, 414, 417, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 452, 453, 454, 457, 458, 459, 460, 461, 463, 464, 467, 468, 470, 471, 472, 475, 476, 478, 480, 482, 483, 484, 486, 488, 489, 490, 491, 493, 494, 496, 497, 498, 500, 501, 502, 506, 508, 510, 512, 516, 517, 518, 521, 522, 523, 524, 526, 532, 533, 538, 539, 541, 542, 544, 547, 558, 559, 561, 567, 568, 569, 570, 578, 579, 594, 595, 596, 600, 602, 605, 610, 612, 613, 615, 618, 620, 624, 639, 648, 652, 653, 663, 670, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 688, 689, 690, 691, 692, 694, 695, 735, 783, 787], "u": [0, 3, 7, 13, 17, 18, 20, 27, 31, 32, 75, 108, 110, 113, 117, 118, 120, 121, 122, 123, 161, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 279, 286, 291, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 325, 326, 330, 331, 333, 334, 338, 517, 526, 527, 530, 532, 547, 564, 581, 596, 597, 598, 600, 601, 611, 612, 616, 617, 618, 624, 639, 647, 648, 649, 673, 693, 775, 776, 780], "depart": [0, 279], "energi": [0, 78, 79, 279, 577, 578, 590], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 27, 31, 32, 37, 43, 44, 61, 63, 64, 65, 67, 75, 77, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 97, 98, 99, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 146, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 197, 199, 202, 203, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 258, 262, 269, 273, 275, 277, 279, 282, 283, 284, 286, 292, 293, 297, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 340, 343, 344, 346, 347, 406, 407, 408, 409, 410, 411, 412, 415, 418, 444, 445, 449, 455, 462, 463, 464, 465, 479, 485, 493, 495, 497, 499, 505, 508, 517, 518, 519, 521, 526, 527, 529, 530, 532, 533, 547, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 564, 567, 569, 570, 572, 578, 579, 581, 594, 596, 597, 598, 600, 601, 602, 603, 605, 606, 611, 612, 613, 614, 615, 616, 617, 618, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647, 648, 649, 672, 673, 674, 675, 676, 677, 679, 680, 682, 683, 685, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 717, 775, 776, 777, 778, 780, 784, 787, 791, 814, 815, 816], "nation": [0, 279], "scienc": [0, 279], "foundat": [0, 279], "2": [0, 1, 2, 3, 4, 7, 8, 9, 12, 13, 17, 18, 19, 20, 27, 29, 31, 32, 63, 65, 77, 80, 81, 84, 92, 94, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 196, 197, 199, 206, 207, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 266, 268, 271, 272, 274, 279, 282, 284, 286, 289, 290, 292, 293, 309, 311, 312, 315, 318, 321, 323, 325, 326, 334, 338, 340, 343, 344, 346, 347, 418, 444, 450, 473, 493, 505, 517, 518, 519, 522, 523, 524, 526, 528, 532, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 568, 569, 570, 572, 575, 578, 579, 581, 594, 595, 596, 597, 598, 600, 601, 602, 605, 611, 619, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647, 648, 649, 652, 670, 673, 674, 699, 718, 775, 777, 788, 789, 790, 815], "arpa": 0, "e": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 17, 18, 19, 27, 30, 31, 43, 61, 63, 67, 76, 77, 97, 98, 99, 101, 108, 111, 117, 118, 127, 158, 160, 167, 173, 179, 180, 191, 192, 193, 194, 198, 199, 202, 210, 211, 212, 230, 262, 265, 282, 286, 289, 292, 293, 310, 314, 320, 322, 330, 331, 340, 341, 342, 343, 344, 345, 346, 348, 376, 444, 449, 493, 494, 500, 506, 512, 517, 518, 526, 532, 533, 534, 540, 543, 546, 550, 558, 569, 578, 611, 612, 613, 615, 618, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 676, 677, 678, 679, 680, 681, 682, 683, 688, 689, 690, 691, 692, 694, 695, 696, 699, 777, 778], "3": [0, 1, 2, 3, 7, 8, 9, 11, 12, 17, 18, 20, 27, 31, 32, 43, 44, 61, 63, 77, 80, 81, 89, 90, 91, 92, 93, 94, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 124, 125, 126, 141, 150, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 181, 183, 186, 187, 191, 192, 193, 194, 197, 199, 202, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 266, 268, 271, 272, 274, 279, 282, 284, 286, 295, 297, 298, 301, 302, 306, 308, 311, 312, 313, 315, 316, 318, 319, 323, 324, 326, 327, 334, 335, 338, 339, 340, 343, 344, 346, 347, 397, 398, 399, 406, 407, 408, 409, 410, 411, 412, 414, 415, 418, 428, 429, 437, 438, 442, 443, 444, 445, 456, 457, 458, 462, 463, 464, 466, 467, 468, 478, 480, 486, 491, 493, 501, 508, 517, 518, 519, 522, 526, 532, 533, 552, 554, 555, 560, 567, 568, 570, 578, 594, 595, 596, 597, 598, 600, 601, 611, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 648, 649, 708, 709, 710, 711, 775, 787, 788, 789, 790, 791, 792, 793, 794, 795, 812, 815], "other": [0, 1, 2, 3, 5, 6, 7, 8, 17, 19, 38, 43, 61, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 163, 164, 165, 166, 167, 168, 169, 184, 191, 194, 199, 212, 217, 218, 219, 220, 225, 230, 271, 279, 281, 286, 292, 348, 497, 505, 508, 515, 516, 518, 526, 532, 567, 568, 577, 578, 581, 594, 595, 624, 648, 652, 653, 676, 681, 682, 688, 774, 793, 794], "part": [0, 9, 17, 19, 20, 108, 109, 110, 111, 113, 116, 117, 279, 343, 344, 445, 446, 449, 526, 553, 554, 555, 556, 557, 559, 560, 561, 562, 573, 578, 620, 624, 664, 666, 668], "offic": [0, 279], "deliveri": [0, 162, 279, 523, 578, 619, 670], "transmiss": [0, 1, 3, 8, 10, 19, 279, 309, 388, 389, 390, 391, 392, 393, 394, 395, 450, 522, 526], "program": [0, 6, 7, 21, 27, 32, 39, 107, 118, 125, 130, 136, 140, 143, 148, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 177, 178, 191, 192, 193, 194, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 279, 589, 780], "under": [0, 3, 6, 31, 44, 107, 262, 263, 264, 279, 506, 590], "laboratori": [0, 279], "cooper": [0, 279], "agreement": [0, 279], "No": [0, 27, 279, 501, 502, 688], "de": [0, 123, 214, 279], "fc26": [0, 279], "09nt43321": [0, 279], "materi": [0, 279], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 17, 19, 20, 21, 27, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 59, 60, 61, 62, 63, 64, 65, 67, 75, 77, 78, 79, 80, 81, 82, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 193, 194, 197, 199, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 258, 259, 260, 261, 262, 263, 264, 266, 269, 271, 272, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 311, 312, 314, 323, 325, 340, 342, 343, 344, 345, 346, 347, 348, 376, 416, 423, 444, 445, 449, 493, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 532, 534, 535, 540, 541, 543, 544, 545, 546, 549, 550, 551, 552, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 663, 670, 672, 673, 674, 675, 676, 680, 681, 682, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 706, 774, 775, 776, 777, 778, 779, 780, 782, 788, 789, 790, 791, 814, 816], "base": [0, 1, 3, 7, 9, 11, 14, 16, 17, 19, 20, 27, 32, 38, 44, 65, 80, 81, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 163, 164, 165, 166, 168, 169, 181, 182, 183, 187, 191, 192, 193, 202, 204, 212, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 259, 279, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 515, 517, 522, 526, 530, 531, 532, 535, 536, 547, 551, 552, 558, 583, 593, 597, 601, 616, 624, 639, 648, 657, 679, 688, 751, 752, 753, 754, 755, 758, 759, 760, 775, 781, 786, 816], "upon": [0, 3, 212, 279, 286, 624], "work": [0, 10, 17, 159, 171, 279, 285, 445, 448, 506, 507, 508, 510, 572, 624, 673, 728, 774], "Nos": [0, 279], "0532744": [0, 279], "1642341": [0, 279], "1931421": [0, 279], "ani": [0, 1, 2, 6, 7, 8, 11, 17, 19, 60, 64, 75, 107, 108, 117, 118, 119, 159, 172, 174, 175, 176, 177, 178, 179, 193, 199, 202, 269, 279, 284, 285, 286, 292, 340, 341, 347, 376, 445, 493, 505, 508, 512, 518, 528, 532, 533, 535, 545, 551, 567, 569, 572, 581, 594, 599, 610, 616, 624, 640, 648, 683, 688, 694, 699, 700, 777, 781], "opinion": [0, 279], "find": [0, 1, 4, 9, 13, 17, 113, 279, 497, 573, 574, 648, 774, 775, 776, 777], "conclus": [0, 279], "recommend": [0, 13, 171, 279], "express": [0, 8, 113, 272, 279, 558, 559, 560, 561, 562, 610, 616, 652], "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 43, 44, 60, 61, 62, 63, 64, 65, 67, 79, 80, 81, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 199, 202, 203, 210, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 260, 269, 271, 273, 275, 279, 280, 282, 283, 284, 286, 287, 289, 292, 293, 309, 311, 312, 315, 317, 318, 320, 323, 325, 326, 330, 333, 334, 338, 341, 342, 343, 346, 347, 348, 376, 418, 444, 446, 447, 448, 449, 493, 495, 497, 499, 501, 502, 505, 506, 507, 508, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 532, 535, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 564, 566, 567, 568, 569, 570, 573, 578, 581, 594, 595, 596, 597, 598, 600, 601, 604, 607, 608, 610, 612, 613, 614, 615, 616, 619, 620, 624, 639, 647, 648, 649, 650, 652, 653, 656, 670, 674, 676, 680, 681, 682, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 700, 777, 778, 780, 792, 793, 794], "those": [0, 1, 2, 3, 6, 7, 13, 17, 44, 107, 111, 112, 118, 171, 279, 283, 287, 292, 506, 526, 567, 578, 581, 594, 614, 681, 682, 693, 698, 777], "author": [0, 279], "do": [0, 1, 12, 17, 67, 78, 79, 80, 81, 179, 180, 212, 278, 279, 282, 285, 341, 445, 448, 493, 497, 508, 570, 624, 639, 699, 700, 777], "necessarili": [0, 43, 171, 279], "reflect": [0, 279], "view": [0, 279], "synthet": [0, 591], "data": [0, 1, 5, 8, 11, 12, 18, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 75, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 172, 199, 260, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 354, 376, 389, 390, 393, 394, 395, 397, 401, 402, 403, 404, 405, 414, 417, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 444, 445, 448, 449, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 509, 511, 512, 513, 514, 515, 517, 518, 522, 523, 524, 526, 527, 532, 534, 536, 540, 543, 548, 550, 566, 567, 568, 569, 570, 594, 595, 598, 599, 605, 608, 648, 649, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 688, 689, 690, 691, 692, 694, 695, 697, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 780, 781, 787, 795], "grid": [0, 591], "r": [0, 9, 10, 20, 27, 31, 65, 108, 110, 113, 116, 117, 118, 168, 180, 182, 184, 187, 212, 231, 293, 309, 323, 330, 338, 343, 445, 517, 523, 526, 530, 532, 539, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 579, 581, 596, 613, 619, 648, 649, 670, 693, 699, 776, 815], "d": [0, 4, 8, 10, 17, 19, 27, 77, 108, 123, 179, 212, 271, 286, 289, 290, 293, 296, 347, 449, 493, 494, 495, 496, 497, 498, 499, 500, 509, 511, 512, 513, 514, 522, 523, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 619, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 670, 681, 682, 815], "project": [0, 6, 10, 21, 24, 217, 218, 219, 220, 279, 639], "A": [1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 20, 21, 27, 31, 32, 61, 62, 108, 110, 113, 117, 118, 121, 122, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 213, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 261, 284, 286, 289, 291, 292, 293, 340, 348, 376, 408, 411, 416, 423, 444, 449, 517, 518, 522, 526, 567, 569, 570, 573, 580, 594, 596, 599, 610, 620, 624, 648, 649, 686, 700, 780, 815], "new": [1, 2, 3, 8, 11, 13, 18, 19, 21, 38, 40, 41, 42, 61, 67, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 167, 199, 230, 259, 278, 281, 283, 289, 444, 493, 501, 502, 516, 519, 541, 544, 569, 602, 624, 639, 683, 688, 693], "orient": [1, 2, 6, 26, 284, 505, 506, 522, 523, 524, 670, 775], "core": [1, 2, 20, 180, 184, 283, 515, 516, 585, 624, 816], "design": [1, 6, 8, 526, 578], "around": [1, 2, 44, 506, 511, 513, 514, 563], "concept": 1, "gener": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 43, 44, 46, 60, 64, 65, 67, 75, 78, 80, 81, 82, 97, 98, 99, 101, 104, 107, 108, 109, 111, 112, 117, 118, 119, 124, 126, 159, 170, 202, 279, 283, 286, 292, 298, 299, 304, 317, 318, 319, 320, 330, 331, 413, 414, 415, 416, 417, 418, 419, 420, 421, 434, 445, 465, 466, 467, 468, 469, 470, 471, 472, 496, 498, 501, 503, 504, 506, 507, 508, 511, 512, 513, 514, 516, 517, 519, 520, 522, 523, 524, 526, 532, 533, 540, 541, 543, 544, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 568, 569, 570, 571, 576, 577, 578, 581, 594, 595, 598, 599, 601, 602, 606, 608, 609, 610, 616, 619, 621, 623, 624, 639, 641, 642, 643, 644, 645, 646, 648, 649, 657, 658, 673, 674, 676, 685, 688, 691, 693, 694, 695, 708, 709, 710, 711, 774, 776, 777, 779, 780, 781, 782, 795, 815], "element": [1, 5, 9, 10, 11, 12, 18, 20, 21, 27, 43, 61, 63, 78, 79, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 202, 207, 208, 209, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 271, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 357, 362, 367, 370, 375, 376, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 501, 502, 503, 504, 511, 512, 513, 514, 515, 533, 567, 570, 579, 594, 623, 624, 648, 649, 657, 681, 688, 699, 700, 777, 778, 805], "wa": [1, 9, 44, 107, 110, 111, 112, 117, 118, 172, 199, 212, 271, 272, 274, 279, 517, 532, 595, 648, 688], "introduc": [1, 2, 9, 19], "8": [1, 7, 8, 12, 17, 18, 19, 20, 27, 32, 79, 108, 163, 164, 165, 166, 168, 169, 180, 181, 183, 187, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 283, 506, 526, 596, 597, 600, 601, 624, 639], "0": [1, 3, 7, 12, 13, 14, 16, 17, 18, 19, 20, 27, 29, 31, 32, 44, 61, 63, 65, 67, 75, 79, 81, 97, 98, 99, 101, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 126, 139, 144, 161, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 196, 199, 202, 203, 205, 206, 210, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 266, 268, 269, 271, 272, 273, 274, 275, 279, 283, 286, 292, 333, 334, 343, 346, 444, 445, 449, 493, 495, 497, 499, 506, 508, 517, 519, 521, 526, 527, 532, 533, 545, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 564, 581, 596, 597, 598, 599, 600, 601, 603, 624, 639, 647, 648, 672, 675, 676, 677, 679, 680, 682, 683, 685, 688, 689, 690, 691, 692, 693, 694, 695, 699, 776, 777, 778, 780, 784, 816], "along": [1, 6, 17, 38, 105, 110, 114, 115, 116, 202, 214, 259, 343, 444, 517, 564, 568, 569, 595, 647, 648], "emploi": 1, "chapter": [1, 27], "give": [1, 117, 118], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 17, 19, 20, 21, 30, 41, 42, 60, 61, 62, 63, 64, 65, 66, 76, 78, 79, 80, 81, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 127, 158, 159, 160, 162, 172, 173, 174, 175, 176, 177, 178, 179, 180, 198, 199, 202, 203, 207, 212, 217, 218, 219, 220, 262, 265, 281, 282, 283, 284, 286, 287, 288, 289, 292, 293, 340, 342, 343, 344, 345, 347, 348, 355, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 398, 399, 400, 401, 402, 403, 407, 415, 416, 418, 423, 429, 438, 443, 444, 449, 493, 505, 506, 513, 517, 518, 519, 525, 526, 527, 532, 541, 544, 551, 564, 567, 569, 570, 571, 575, 576, 577, 578, 590, 594, 598, 599, 602, 605, 615, 617, 623, 624, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 656, 663, 675, 679, 688, 692, 693, 695, 697, 698, 699, 774, 775, 777, 780, 782, 816], "primari": [1, 4, 38, 105, 259, 279, 283], "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 38, 41, 42, 44, 62, 65, 67, 75, 77, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 172, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 262, 263, 264, 266, 267, 268, 270, 276, 279, 282, 283, 284, 286, 292, 293, 310, 314, 320, 321, 322, 330, 331, 332, 340, 341, 343, 344, 346, 348, 352, 356, 418, 444, 445, 452, 481, 493, 495, 496, 497, 499, 500, 505, 506, 508, 509, 511, 512, 513, 514, 515, 516, 518, 526, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 563, 564, 566, 567, 568, 569, 572, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 606, 613, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 655, 659, 662, 665, 667, 669, 673, 675, 686, 688, 698, 699, 717, 718, 720, 766, 780, 784, 816], "solv": [1, 6, 11, 17, 18, 20, 21, 25, 27, 29, 31, 32, 39, 44, 67, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 196, 206, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 260, 348, 376, 445, 448, 449, 493, 494, 509, 511, 512, 513, 514, 522, 523, 524, 527, 530, 563, 564, 565, 571, 575, 576, 624, 641, 642, 643, 644, 645, 646, 647, 648, 685, 688, 689, 690, 691, 692, 694, 695, 780, 782, 811], "steadi": [1, 6, 21, 688], "state": [1, 3, 6, 7, 8, 9, 17, 19, 21, 59, 108, 199, 212, 262, 278, 286, 292, 342, 343, 344, 345, 346, 348, 357, 362, 367, 381, 384, 387, 444, 445, 446, 447, 448, 449, 462, 465, 466, 469, 472, 473, 474, 477, 493, 532, 569, 624, 688], "simul": [1, 3, 21, 512, 515, 518, 582, 686], "problem": [1, 2, 3, 6, 7, 8, 11, 12, 17, 18, 21, 27, 29, 32, 44, 67, 71, 72, 73, 74, 96, 106, 107, 118, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 196, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 286, 348, 359, 361, 364, 366, 368, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 431, 432, 433, 438, 439, 440, 441, 443, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 511, 513, 514, 517, 532, 624, 648, 649, 688, 774, 782], "flow": [1, 3, 7, 8, 11, 12, 18, 19, 21, 27, 44, 67, 69, 70, 75, 110, 111, 113, 283, 292, 309, 310, 321, 322, 343, 348, 355, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 393, 394, 395, 404, 405, 410, 411, 412, 420, 421, 426, 427, 432, 433, 440, 441, 493, 494, 495, 496, 497, 498, 499, 501, 502, 507, 511, 512, 513, 514, 515, 522, 523, 524, 526, 527, 530, 532, 534, 535, 539, 542, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571, 575, 576, 578, 579, 583, 586, 588, 589, 593, 596, 600, 611, 612, 613, 619, 624, 639, 641, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 661, 664, 666, 668, 670, 671, 675, 685, 688, 689, 690, 691, 692, 693, 694, 695, 702, 706, 708, 709, 710, 711, 712, 716, 717, 718, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 760, 762, 763, 764, 774, 775, 777, 780, 782, 795, 796, 813], "continu": [1, 7, 17, 18, 20, 38, 97, 105, 107, 116, 118, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 178, 199, 200, 201, 204, 205, 207, 208, 209, 212, 259, 287, 328, 336, 378, 379, 380, 381, 382, 383, 384, 385, 386, 444, 493, 494, 495, 501, 502, 507, 511, 515, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 542, 543, 547, 548, 549, 550, 551, 624, 639, 688, 716, 717, 718, 780, 816], "At": [1, 279, 521], "top": [1, 2, 80, 108, 114, 115, 179, 515, 624], "level": [1, 2, 27, 44, 107, 108, 114, 115, 118, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 273, 506, 515, 533, 566, 621, 624, 757, 761, 779], "task": [1, 3, 5, 6, 7, 12, 18, 286, 287, 288, 289, 341, 348, 376, 444, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 509, 511, 512, 513, 514, 515, 568], "construct": [1, 2, 8, 11, 17, 19, 20, 21, 63, 107, 117, 129, 172, 284, 286, 288, 323, 341, 444, 449, 462, 505, 506, 531, 607, 608, 609, 610, 663], "variou": [1, 2, 6, 17, 19, 21, 106, 108, 117, 167, 180, 184, 194, 199, 219, 230, 260, 518, 686], "layer": [1, 2, 11, 12, 17, 18, 19, 493], "desir": [1, 3, 4, 7, 8, 44, 62, 110, 111, 112, 113, 114, 115, 116, 118, 172, 205, 347, 512, 615, 688, 699], "type": [1, 2, 3, 4, 7, 13, 18, 20, 21, 31, 38, 40, 43, 61, 62, 63, 105, 107, 108, 109, 116, 117, 118, 125, 174, 175, 176, 177, 178, 259, 260, 262, 279, 281, 282, 284, 286, 289, 292, 293, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 340, 341, 342, 343, 346, 348, 376, 444, 445, 446, 447, 448, 449, 455, 493, 501, 502, 504, 505, 506, 512, 517, 519, 520, 526, 532, 544, 545, 577, 578, 597, 599, 624, 639, 681, 682, 777, 778], "formul": [1, 2, 5, 7, 18, 20, 107, 118, 284, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 380, 444, 446, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 463, 464, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 481, 482, 483, 484, 487, 488, 489, 490, 501, 502, 517, 518, 526, 610, 624, 639, 648, 649, 687], "propog": 1, "back": [1, 3, 4, 17, 31, 67, 82, 107, 108, 117, 118, 120, 122, 172, 179, 187, 199, 202, 205, 286, 292, 342, 348, 444, 493, 495, 497, 499, 518, 532, 568, 602, 624], "through": [1, 2, 3, 4, 7, 8, 19, 20, 203, 209, 260, 285, 286, 506, 780], "explicit": [1, 2, 13, 19, 31, 187, 285, 526, 605, 624], "three": [1, 2, 3, 8, 11, 17, 18, 19, 21, 45, 46, 80, 83, 109, 110, 111, 112, 113, 114, 115, 116, 118, 199, 262, 283, 292, 325, 341, 501, 515, 517, 526, 532, 567, 594, 617, 648, 649, 679, 699, 788, 789, 790, 791, 792, 793, 794, 796], "structur": [1, 3, 4, 8, 17, 27, 32, 41, 42, 43, 62, 63, 66, 67, 75, 77, 117, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 188, 190, 191, 192, 193, 194, 199, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 292, 347, 444, 517, 532, 567, 568, 569, 570, 594, 595, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 671, 777], "decoupl": [1, 107, 118, 181, 184, 374, 571, 611, 624, 639, 782], "one": [1, 2, 3, 4, 6, 8, 11, 17, 19, 41, 42, 43, 44, 60, 64, 65, 80, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 171, 172, 174, 175, 176, 177, 178, 179, 199, 203, 212, 260, 262, 283, 286, 292, 340, 343, 344, 347, 444, 445, 449, 506, 512, 518, 519, 526, 532, 567, 580, 594, 599, 620, 623, 624, 639, 648, 649, 683, 686, 693, 700, 776, 777, 780, 793, 794], "anoth": [1, 7, 8, 17, 19, 111, 118, 179, 205, 260, 292, 506, 548, 570], "visibl": [1, 3, 17, 19, 79, 180, 292], "paramet": [1, 4, 7, 9, 12, 17, 20, 27, 31, 61, 64, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 123, 124, 126, 170, 180, 184, 207, 208, 209, 212, 214, 284, 285, 286, 287, 292, 323, 328, 336, 342, 343, 346, 377, 416, 419, 423, 444, 445, 448, 449, 451, 454, 462, 466, 469, 472, 474, 477, 478, 480, 481, 484, 486, 487, 490, 491, 492, 494, 504, 517, 525, 526, 530, 539, 542, 567, 568, 571, 576, 579, 594, 595, 596, 598, 607, 608, 609, 610, 624, 639, 648, 649, 658, 696, 697, 782], "quantiti": [1, 17, 75, 212, 284, 330, 449, 504, 613, 624, 693, 699, 776], "network": [1, 2, 3, 5, 11, 12, 18, 20, 67, 283, 292, 341, 342, 343, 344, 345, 346, 348, 349, 352, 357, 362, 367, 376, 381, 384, 387, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 509, 511, 512, 513, 514, 515, 522, 524, 525, 570, 573, 574, 624, 639, 805], "connect": [1, 8, 19, 20, 286, 292, 444, 449, 519, 529, 555, 556, 559, 561, 569, 570, 574, 581, 594, 616], "mathemat": [1, 5, 6, 8, 9, 12, 21, 107, 118, 260, 292, 341, 348, 355, 376, 434, 435, 493, 494, 496, 498, 501, 502, 503, 504, 509, 511, 512, 513, 514, 515, 526], "being": [1, 3, 8, 17, 41, 42, 43, 59, 61, 107, 117, 118, 163, 164, 165, 166, 167, 168, 169, 199, 292, 340, 493, 511, 532, 602, 610, 687, 694, 816], "resepect": 1, "math": [1, 2, 11, 12, 17, 18, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 493, 494, 496, 497, 498], "shown": [1, 3, 4, 8, 11, 12, 17, 19, 27, 31, 78, 79, 80, 81, 107, 113, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 608], "figur": [1, 2, 3, 4, 7, 8, 11, 12, 17, 19, 78, 79, 80, 81], "further": [1, 7, 8, 61, 376, 449, 688], "particular": [1, 2, 3, 4, 8, 17, 18, 38, 43, 44, 60, 105, 108, 117, 118, 203, 259, 279, 292, 293, 342, 376, 444, 449, 493, 577, 578, 594], "format": [1, 2, 3, 4, 5, 17, 19, 21, 41, 42, 44, 45, 46, 63, 82, 83, 84, 85, 109, 118, 283, 286, 289, 290, 293, 341, 501, 502, 504, 515, 519, 526, 527, 581, 605, 621, 678, 679, 688, 689, 690, 691, 692, 694, 695, 696, 697, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 779, 795], "legaci": [1, 2, 3, 17, 18, 25, 38, 105, 107, 115, 259, 286, 291, 300, 321, 322, 359, 361, 364, 366, 368, 377, 417, 422, 423, 424, 425, 426, 427, 473, 474, 475, 476, 477, 492, 495, 497, 499, 500, 502, 515, 516, 517, 624, 658, 716, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 760, 762, 763, 764, 773, 802], "case": [1, 3, 4, 7, 8, 11, 12, 17, 18, 19, 40, 41, 42, 43, 44, 45, 46, 60, 62, 63, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 96, 107, 108, 111, 117, 118, 162, 174, 175, 176, 177, 178, 179, 269, 275, 283, 286, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 348, 444, 449, 493, 495, 497, 498, 499, 500, 509, 511, 512, 513, 514, 517, 518, 519, 521, 525, 526, 527, 528, 530, 531, 532, 535, 547, 551, 564, 567, 568, 569, 570, 577, 578, 579, 581, 594, 595, 596, 597, 600, 601, 602, 604, 605, 613, 615, 618, 620, 624, 647, 648, 649, 652, 653, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 669, 676, 677, 678, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 728, 777, 778, 780, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 812, 816], "struct": [1, 2, 3, 4, 7, 11, 12, 14, 16, 17, 20, 27, 30, 31, 32, 40, 41, 42, 43, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 78, 79, 80, 81, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 191, 192, 193, 194, 197, 198, 199, 202, 203, 204, 205, 210, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 262, 265, 283, 284, 285, 286, 289, 290, 292, 293, 341, 343, 344, 345, 346, 347, 348, 369, 376, 416, 423, 444, 449, 492, 493, 494, 495, 497, 499, 500, 509, 511, 512, 513, 514, 517, 518, 519, 521, 526, 527, 530, 531, 532, 533, 534, 536, 540, 543, 545, 546, 548, 550, 564, 567, 568, 569, 570, 576, 577, 578, 579, 594, 595, 602, 604, 605, 613, 617, 618, 624, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 654, 655, 657, 658, 661, 662, 663, 664, 665, 666, 667, 668, 669, 675, 676, 677, 678, 680, 682, 683, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 728, 775, 776, 777, 778, 780, 781, 782], "mpc": [1, 2, 3, 4, 17, 20, 40, 41, 42, 49, 51, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 283, 286, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 368, 493, 495, 497, 499, 500, 509, 511, 512, 513, 514, 517, 518, 519, 521, 525, 526, 527, 531, 564, 567, 568, 569, 570, 573, 574, 577, 578, 594, 595, 600, 602, 604, 605, 606, 609, 611, 612, 613, 614, 615, 618, 647, 648, 649, 652, 653, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 675, 676, 677, 685, 686, 687, 696, 699, 706, 774, 775, 776, 777, 778, 780], "file": [1, 3, 6, 11, 13, 14, 15, 16, 21, 25, 38, 41, 42, 44, 45, 46, 48, 49, 51, 54, 60, 62, 63, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 159, 193, 259, 269, 279, 283, 286, 289, 290, 292, 493, 508, 511, 512, 513, 514, 516, 518, 519, 525, 526, 527, 570, 572, 590, 596, 597, 600, 601, 604, 605, 624, 639, 648, 649, 675, 676, 677, 678, 679, 680, 681, 682, 683, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 702, 706, 707, 708, 709, 710, 711, 712, 728, 735, 795], "convers": [1, 3, 4, 17, 44, 283, 286, 292, 515, 569, 611, 612, 618, 624, 639, 681, 682, 688, 689, 690, 691, 692, 694, 695, 796], "servic": [1, 8, 17, 19, 20, 321, 390, 393, 394, 395, 397, 401, 402, 403, 404, 405, 414, 417, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 519, 520, 521, 526, 596, 600, 601, 610, 656, 663], "convert": [1, 3, 5, 20, 44, 64, 65, 82, 107, 108, 116, 118, 120, 121, 122, 123, 172, 260, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 340, 341, 348, 357, 362, 367, 381, 384, 387, 444, 493, 494, 497, 500, 501, 502, 504, 515, 518, 520, 527, 567, 568, 569, 594, 595, 602, 604, 605, 624, 672, 676, 677, 678, 679, 681, 682, 688, 694], "between": [1, 2, 3, 4, 7, 8, 17, 19, 44, 113, 208, 269, 271, 272, 274, 275, 283, 286, 289, 380, 444, 493, 521, 620, 624, 672], "specif": [1, 3, 7, 8, 11, 14, 16, 17, 19, 39, 61, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 167, 180, 181, 182, 183, 184, 187, 193, 194, 217, 218, 219, 220, 230, 260, 262, 279, 280, 286, 287, 288, 289, 291, 292, 293, 341, 342, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 444, 446, 447, 448, 449, 493, 495, 497, 499, 500, 501, 502, 503, 504, 509, 511, 512, 513, 514, 564, 578, 603, 615, 624, 647, 648, 699, 777, 816], "extern": [1, 17, 283, 444, 518, 521, 567, 568, 569, 594, 595, 602, 688, 689, 690, 691, 692, 694, 695, 713, 777], "each": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 18, 19, 21, 43, 44, 61, 65, 78, 79, 81, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 162, 174, 175, 176, 177, 178, 179, 199, 212, 262, 269, 271, 273, 275, 286, 288, 289, 292, 293, 325, 331, 340, 341, 342, 343, 344, 345, 346, 347, 348, 376, 408, 409, 411, 412, 444, 445, 448, 449, 493, 501, 502, 503, 516, 517, 518, 519, 520, 521, 526, 528, 529, 532, 545, 558, 559, 561, 570, 573, 574, 579, 596, 597, 598, 600, 601, 606, 615, 617, 618, 620, 621, 623, 624, 648, 649, 680, 682, 683, 688, 693, 699, 775, 776, 777, 778, 779, 780], "plu": [1, 162, 172, 273], "organ": [1, 3, 6, 43, 108, 286], "collect": [1, 6, 17, 19, 75, 111, 118, 199, 343, 346, 532], "enclos": [1, 340, 681, 682], "contain": [1, 2, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 27, 31, 32, 41, 42, 43, 61, 62, 63, 64, 65, 67, 77, 107, 108, 113, 117, 118, 119, 124, 125, 126, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 191, 192, 193, 194, 197, 199, 202, 204, 205, 210, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 269, 285, 286, 289, 292, 293, 340, 341, 348, 376, 444, 449, 493, 501, 502, 504, 506, 509, 511, 512, 513, 514, 515, 517, 526, 527, 532, 533, 534, 536, 540, 543, 545, 546, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 568, 570, 571, 572, 576, 577, 578, 595, 605, 615, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 644, 645, 646, 648, 649, 652, 653, 673, 676, 677, 679, 680, 681, 682, 688, 689, 690, 691, 692, 693, 694, 695, 696, 782, 783], "correspond": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 27, 32, 40, 41, 42, 60, 61, 64, 65, 81, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 163, 164, 165, 166, 167, 168, 169, 179, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 202, 203, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 271, 284, 286, 289, 292, 293, 330, 342, 343, 344, 345, 346, 347, 348, 376, 390, 393, 394, 395, 397, 401, 402, 403, 404, 405, 414, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 444, 445, 449, 493, 495, 497, 499, 500, 501, 502, 516, 517, 518, 519, 526, 532, 552, 553, 554, 555, 556, 557, 567, 568, 570, 579, 581, 594, 595, 603, 606, 611, 614, 615, 617, 621, 623, 624, 639, 652, 653, 657, 674, 679, 680, 681, 682, 683, 688, 694, 699, 700, 777, 778, 779, 784], "devic": [1, 17], "g": [1, 2, 3, 7, 8, 14, 16, 17, 18, 19, 27, 30, 31, 61, 67, 76, 97, 98, 99, 101, 107, 108, 110, 111, 113, 117, 118, 120, 127, 158, 160, 173, 179, 180, 183, 184, 186, 188, 191, 192, 193, 194, 198, 199, 210, 214, 262, 265, 282, 286, 289, 292, 293, 310, 314, 320, 322, 330, 331, 333, 341, 342, 343, 344, 348, 376, 444, 445, 449, 493, 494, 497, 500, 506, 512, 517, 518, 522, 526, 532, 558, 566, 570, 597, 615, 624, 639, 640, 648, 654, 661, 681, 682, 688, 777, 780], "bu": [1, 3, 4, 12, 17, 18, 19, 20, 44, 45, 46, 61, 63, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 283, 286, 292, 293, 295, 296, 302, 303, 307, 309, 311, 312, 313, 314, 315, 317, 318, 321, 322, 323, 325, 326, 333, 334, 338, 376, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 449, 455, 456, 457, 458, 459, 460, 461, 496, 501, 511, 512, 513, 514, 517, 519, 520, 521, 522, 523, 524, 526, 527, 528, 530, 532, 538, 539, 541, 542, 544, 547, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 573, 574, 576, 579, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 607, 611, 612, 613, 615, 616, 617, 618, 619, 620, 624, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 654, 655, 661, 662, 671, 675, 676, 678, 679, 680, 685, 688, 689, 690, 691, 692, 694, 695, 697, 699, 706, 708, 709, 710, 711, 777, 778, 780, 782, 787, 788, 789, 790, 791, 792, 793, 794, 795, 816], "line": [1, 2, 3, 8, 18, 19, 20, 44, 78, 79, 107, 108, 117, 118, 209, 269, 273, 283, 286, 288, 289, 292, 300, 301, 309, 312, 321, 322, 323, 324, 347, 348, 388, 389, 390, 391, 392, 393, 394, 395, 422, 423, 424, 425, 426, 427, 428, 429, 444, 449, 450, 473, 474, 475, 476, 477, 478, 501, 502, 505, 515, 517, 521, 526, 559, 561, 569, 570, 579, 581, 594, 596, 597, 598, 600, 601, 602, 612, 614, 618, 624, 639, 652, 674, 676, 678, 680, 681, 683, 688, 697, 707, 719, 774, 775, 802], "some": [1, 6, 7, 8, 12, 17, 18, 19, 20, 21, 27, 44, 46, 60, 61, 106, 107, 117, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 271, 284, 285, 292, 344, 345, 495, 497, 499, 527, 578, 596, 597, 598, 600, 601, 624, 674, 687, 689, 690, 691, 692, 694, 695, 782, 816], "attribut": 1, "interfac": [1, 2, 6, 7, 25, 26, 32, 107, 111, 112, 118, 163, 164, 165, 166, 168, 169, 180, 181, 182, 183, 187, 191, 192, 193, 194, 197, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 624, 639, 706, 775, 816], "reserv": [1, 2, 18, 57, 59, 65, 67, 75, 78, 95, 304, 305, 330, 331, 341, 434, 435, 504, 515, 518, 526, 568, 595, 601, 693, 706, 761, 776], "requir": [1, 3, 6, 8, 13, 17, 18, 20, 21, 27, 43, 44, 61, 62, 63, 64, 65, 66, 67, 95, 107, 118, 141, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 180, 181, 183, 184, 191, 192, 193, 194, 202, 219, 220, 230, 279, 283, 292, 331, 389, 501, 502, 504, 508, 519, 533, 581, 602, 605, 624, 639, 687, 693, 776, 777], "provid": [1, 2, 3, 4, 6, 7, 8, 12, 17, 19, 27, 31, 32, 41, 42, 43, 62, 64, 65, 80, 81, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 125, 126, 157, 159, 163, 164, 165, 166, 168, 169, 170, 180, 181, 182, 183, 187, 191, 192, 193, 194, 197, 205, 212, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 260, 285, 286, 287, 289, 292, 293, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 354, 355, 356, 357, 359, 361, 362, 364, 366, 367, 368, 370, 375, 376, 445, 449, 493, 494, 496, 498, 500, 508, 509, 511, 512, 513, 514, 516, 517, 570, 578, 602, 610, 615, 616, 624, 657, 693, 699, 776, 778, 816], "extraordinari": 1, "flexibl": [1, 2, 8, 12, 511, 512, 513, 514, 516], "allow": [1, 2, 7, 8, 11, 12, 17, 43, 44, 61, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 179, 180, 197, 212, 262, 283, 285, 292, 348, 517, 518, 519, 526, 603, 624, 639, 691, 695], "environ": [1, 5, 13], "ad": [1, 2, 8, 12, 13, 17, 18, 19, 40, 41, 42, 44, 60, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 199, 286, 289, 343, 344, 345, 347, 348, 354, 355, 379, 380, 387, 390, 391, 392, 393, 401, 408, 409, 410, 411, 412, 417, 419, 434, 435, 444, 517, 518, 522, 523, 524, 526, 566, 581, 596, 597, 600, 601, 679, 696, 697, 698, 778], "modifi": [1, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 43, 44, 60, 61, 77, 82, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 125, 126, 157, 159, 170, 174, 175, 176, 177, 178, 197, 202, 279, 283, 286, 289, 292, 293, 340, 341, 347, 444, 449, 501, 502, 503, 504, 508, 519, 527, 532, 533, 599, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 688, 697, 699, 774, 777, 787], "exist": [1, 2, 3, 8, 12, 18, 41, 42, 67, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 203, 210, 211, 261, 262, 269, 286, 292, 293, 340, 347, 508, 527, 605, 624], "independ": [1, 7, 615], "rest": [1, 8, 594, 783], "In": [1, 2, 3, 4, 6, 7, 8, 11, 13, 17, 18, 19, 43, 44, 108, 117, 118, 212, 292, 348, 449, 493, 506, 566, 594, 615, 648, 693, 778, 780], "given": [1, 3, 4, 7, 8, 9, 12, 17, 18, 27, 41, 42, 43, 59, 63, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 191, 192, 193, 194, 199, 269, 273, 286, 292, 293, 325, 444, 449, 517, 519, 526, 532, 558, 565, 567, 568, 571, 576, 596, 597, 598, 600, 601, 607, 614, 615, 621, 641, 642, 643, 644, 645, 646, 674, 675, 686, 687, 697, 779, 782], "run": [1, 2, 3, 5, 6, 12, 13, 17, 18, 19, 21, 37, 67, 103, 106, 199, 209, 210, 212, 225, 231, 258, 262, 263, 264, 266, 268, 273, 277, 279, 283, 341, 493, 498, 507, 508, 509, 511, 512, 513, 514, 527, 545, 590, 675, 687, 688, 689, 690, 691, 692, 693, 694, 695, 814, 816], "set": [1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 16, 17, 19, 27, 31, 40, 43, 44, 60, 61, 63, 64, 65, 67, 77, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 150, 157, 159, 170, 185, 186, 191, 197, 199, 200, 201, 202, 204, 205, 206, 212, 214, 220, 260, 266, 273, 274, 278, 279, 284, 286, 292, 340, 341, 342, 369, 376, 377, 418, 444, 445, 446, 447, 448, 449, 492, 496, 497, 498, 501, 502, 508, 511, 513, 514, 517, 519, 526, 532, 533, 535, 537, 541, 544, 549, 551, 563, 571, 576, 597, 598, 599, 601, 619, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 648, 649, 688, 693, 694, 774, 775, 776, 777, 782], "creat": [1, 2, 3, 4, 7, 8, 12, 13, 15, 19, 20, 21, 59, 61, 65, 66, 67, 78, 79, 80, 81, 104, 107, 108, 110, 113, 114, 115, 118, 172, 174, 175, 176, 177, 178, 214, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 347, 348, 355, 444, 449, 493, 497, 512, 517, 527, 602, 624, 677, 696, 697, 805], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 19, 20, 21, 27, 31, 32, 34, 38, 39, 43, 44, 60, 61, 63, 64, 65, 67, 77, 80, 81, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 260, 266, 269, 278, 279, 280, 281, 283, 284, 285, 286, 289, 291, 292, 293, 325, 340, 341, 342, 343, 344, 345, 346, 348, 376, 380, 381, 382, 383, 384, 385, 386, 444, 449, 493, 494, 496, 497, 498, 501, 502, 505, 506, 508, 509, 510, 511, 513, 514, 517, 518, 519, 520, 522, 523, 524, 526, 527, 530, 532, 542, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 578, 579, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 610, 611, 613, 615, 616, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 664, 666, 668, 676, 682, 683, 684, 685, 688, 689, 690, 691, 692, 694, 695, 697, 698, 699, 703, 704, 705, 713, 714, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 774, 777, 778, 779, 780, 782, 813, 815, 816], "show": [1, 2, 3, 4, 7, 8, 17, 18, 19, 44], "mai": [1, 3, 8, 9, 17, 20, 27, 43, 61, 67, 108, 110, 111, 113, 116, 118, 170, 199, 223, 279, 286, 518, 522, 526, 527, 532, 603, 624, 694, 778], "sourc": [1, 3, 4, 6, 12, 13, 14, 15, 16, 18, 19, 21, 38, 105, 179, 259, 279, 286, 289, 290, 292, 293, 493, 495, 497, 499, 500, 509, 511, 512, 513, 514, 516, 578, 610], "individu": [1, 3, 7, 8, 11, 17, 19, 20, 25, 37, 78, 79, 80, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 258, 260, 266, 268, 273, 276, 277, 286, 292, 340, 377, 517, 519, 526, 569, 579, 602, 605, 613, 615, 618, 624, 639, 648, 649, 675, 689, 690, 691, 692, 694, 695, 780, 814], "4": [1, 2, 8, 9, 11, 12, 17, 18, 20, 27, 31, 32, 43, 108, 112, 114, 115, 117, 118, 134, 161, 163, 164, 165, 166, 167, 168, 169, 171, 187, 191, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 266, 268, 271, 272, 274, 279, 282, 309, 311, 312, 341, 444, 462, 499, 506, 518, 519, 522, 524, 526, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 578, 594, 596, 597, 598, 600, 601, 623, 624, 639, 778, 784, 787, 788, 789, 790, 791, 815], "label": [1, 3, 8, 17, 19, 43, 61, 80, 81, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 181, 212, 286, 292, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338, 342, 344, 345, 346, 444, 492, 519, 570, 599, 682], "white": 1, "circl": 1, "convent": [1, 3, 4, 5, 7, 8, 108, 109, 110, 111, 112, 113, 114, 115, 116, 286, 289, 292, 293, 341, 348, 376, 444, 449, 518], "throughout": [1, 3, 9, 63, 286], "codebas": [1, 783], "variabl": [1, 3, 6, 8, 9, 12, 19, 27, 32, 43, 62, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 178, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 261, 284, 286, 289, 291, 292, 293, 342, 343, 344, 345, 346, 347, 348, 355, 376, 410, 416, 423, 434, 444, 445, 446, 447, 448, 449, 457, 458, 459, 460, 461, 462, 466, 469, 472, 474, 477, 504, 505, 506, 517, 518, 526, 527, 564, 572, 609, 610, 620, 624, 639, 647, 648, 649, 658, 672, 674, 698], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 27, 30, 32, 38, 40, 41, 42, 44, 60, 61, 62, 63, 64, 65, 75, 76, 77, 78, 79, 80, 81, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 157, 158, 159, 160, 170, 172, 173, 179, 180, 193, 197, 198, 202, 203, 211, 212, 259, 262, 265, 269, 273, 279, 283, 284, 286, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 376, 377, 388, 396, 397, 406, 413, 414, 422, 428, 430, 434, 435, 436, 437, 442, 444, 449, 450, 455, 456, 462, 465, 466, 473, 478, 479, 480, 485, 486, 491, 493, 495, 496, 497, 498, 499, 500, 505, 508, 509, 511, 512, 513, 514, 517, 518, 519, 526, 527, 532, 533, 545, 546, 566, 570, 572, 596, 597, 598, 599, 600, 601, 604, 605, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 648, 649, 676, 679, 680, 682, 683, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 777, 816], "singl": [1, 2, 3, 8, 17, 18, 19, 21, 27, 32, 43, 62, 80, 82, 84, 85, 97, 98, 108, 111, 117, 118, 121, 123, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 184, 187, 191, 192, 193, 194, 210, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 273, 283, 284, 286, 292, 299, 315, 340, 341, 343, 346, 347, 444, 449, 501, 508, 517, 526, 567, 569, 570, 578, 594, 602, 615, 648, 657, 675, 681, 682, 697, 699, 778, 780, 788, 789, 790, 791, 792, 793, 794, 796], "manag": [1, 11, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 492], "overal": [1, 6, 44, 519], "process": [1, 2, 4, 6, 11, 21, 289, 291, 292, 493, 495, 497, 499, 500, 613], "pf": [1, 2, 3, 7, 11, 17, 18, 20, 75, 174, 341, 348, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 410, 411, 412, 493, 494, 498, 499, 500, 501, 502, 507, 514, 558, 566, 596, 600, 611, 612, 624, 648, 694, 773], "cpf": [1, 2, 3, 7, 11, 17, 18, 20, 287, 328, 336, 341, 348, 349, 350, 351, 352, 353, 354, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 410, 411, 412, 431, 439, 493, 494, 495, 500, 501, 502, 507, 511, 512, 530, 532, 533, 534, 536, 538, 539, 540, 543, 545, 546, 547, 548, 550, 624, 688, 773], "opf": [1, 2, 3, 6, 7, 11, 18, 19, 20, 21, 44, 51, 55, 56, 57, 71, 72, 82, 96, 118, 119, 124, 126, 157, 159, 170, 171, 175, 177, 178, 197, 286, 288, 310, 313, 314, 316, 319, 320, 322, 324, 327, 329, 332, 335, 337, 339, 341, 348, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 377, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 403, 407, 408, 409, 415, 416, 417, 418, 419, 423, 424, 425, 429, 438, 443, 493, 496, 497, 500, 501, 502, 503, 504, 507, 512, 513, 515, 517, 518, 526, 527, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 575, 581, 583, 586, 588, 593, 594, 596, 597, 600, 601, 624, 639, 647, 649, 652, 656, 659, 660, 663, 675, 689, 691, 692, 693, 695, 708, 709, 710, 711, 757, 761, 773, 774, 775, 776, 777, 780, 816], "ha": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 61, 104, 107, 117, 118, 162, 200, 201, 202, 212, 284, 292, 325, 340, 376, 444, 498, 505, 506, 518, 526, 532, 533, 537, 549, 567, 568, 569, 570, 578, 581, 594, 596, 597, 599, 600, 601, 602, 605, 615, 621, 624, 648, 649, 674, 699, 779, 780, 794], "method": [1, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 27, 31, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 146, 172, 180, 181, 182, 183, 184, 187, 194, 212, 219, 220, 230, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 469, 472, 473, 474, 477, 478, 479, 480, 481, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 516, 517, 522, 523, 524, 530, 571, 576, 586, 588, 620, 624, 639, 641, 642, 643, 644, 645, 646, 648, 685, 694, 782], "up": [1, 8, 12, 13, 17, 18, 19, 20, 43, 44, 67, 110, 111, 112, 113, 114, 115, 117, 118, 260, 266, 279, 369, 418, 506, 508, 516, 526, 615, 639, 699, 774, 775, 776, 777], "correspnd": 1, "For": [1, 2, 3, 4, 6, 7, 8, 12, 17, 18, 19, 21, 44, 61, 63, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 126, 171, 212, 213, 262, 281, 284, 292, 332, 342, 343, 344, 345, 346, 444, 449, 501, 502, 503, 504, 511, 512, 513, 514, 528, 535, 537, 541, 544, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 594, 595, 599, 611, 615, 623, 624, 648, 649, 777, 778, 816], "exampl": [1, 2, 3, 4, 6, 7, 11, 14, 16, 17, 18, 19, 27, 28, 29, 32, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 262, 266, 268, 269, 271, 272, 273, 274, 275, 283, 289, 292, 341, 347, 444, 449, 508, 511, 512, 513, 514, 515, 517, 518, 519, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 568, 569, 570, 572, 577, 578, 579, 594, 595, 596, 597, 598, 600, 601, 602, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 624, 639, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 675, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 735, 774, 778, 780, 816], "follow": [1, 3, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 27, 29, 31, 32, 38, 39, 40, 41, 42, 43, 44, 46, 61, 63, 64, 65, 75, 78, 79, 80, 81, 82, 105, 106, 107, 108, 111, 112, 117, 118, 119, 124, 125, 126, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 196, 197, 199, 202, 206, 210, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 260, 262, 269, 271, 272, 274, 275, 279, 280, 284, 286, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 340, 444, 445, 446, 447, 448, 509, 511, 512, 513, 514, 517, 518, 526, 527, 532, 545, 558, 559, 560, 561, 562, 564, 567, 569, 570, 577, 578, 579, 594, 598, 599, 601, 602, 604, 607, 608, 609, 624, 639, 641, 642, 643, 644, 645, 646, 647, 648, 680, 681, 682, 683, 688, 689, 690, 691, 692, 693, 694, 695, 699, 775, 776, 777, 778, 816], "9": [1, 2, 12, 17, 18, 20, 32, 44, 126, 144, 163, 164, 165, 166, 168, 169, 170, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 279, 340, 444, 523, 526, 596, 597, 600, 601, 619, 624, 639, 670, 708, 709, 710, 711, 792, 793, 794, 795], "mpopt": [1, 2, 7, 12, 17, 18, 20, 67, 119, 124, 125, 126, 157, 159, 170, 171, 174, 175, 176, 177, 178, 197, 286, 288, 291, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 332, 333, 334, 338, 341, 348, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 385, 386, 387, 390, 391, 392, 393, 394, 395, 397, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 509, 511, 512, 513, 514, 518, 522, 523, 524, 530, 531, 532, 564, 569, 571, 576, 602, 607, 611, 616, 617, 624, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 654, 655, 656, 657, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 675, 685, 688, 689, 690, 691, 692, 693, 694, 695, 777, 778, 780, 782, 816], "mpoption": [1, 2, 12, 18, 20, 67, 77, 119, 124, 125, 126, 157, 159, 170, 171, 174, 175, 176, 177, 178, 179, 197, 283, 515, 571, 576, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 644, 645, 646, 648, 649, 675, 685, 688, 689, 690, 691, 692, 694, 695, 734, 780, 782, 783, 816], "verbos": [1, 12, 18, 20, 27, 31, 32, 37, 67, 75, 102, 103, 107, 118, 119, 124, 125, 126, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 258, 273, 277, 279, 508, 527, 533, 624, 639, 676, 677, 679, 680, 682, 683, 780, 814], "option": [1, 3, 4, 5, 6, 7, 8, 11, 13, 17, 18, 19, 27, 31, 32, 39, 40, 41, 42, 60, 62, 63, 64, 65, 67, 75, 77, 78, 79, 80, 81, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 150, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 203, 204, 205, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 262, 266, 269, 271, 272, 273, 275, 279, 280, 283, 284, 286, 291, 292, 293, 341, 342, 343, 344, 346, 347, 348, 356, 367, 369, 376, 418, 444, 445, 449, 493, 494, 495, 497, 498, 499, 500, 508, 509, 511, 512, 513, 514, 517, 518, 525, 526, 527, 530, 532, 538, 539, 545, 547, 559, 561, 563, 564, 567, 568, 569, 570, 571, 574, 576, 577, 578, 579, 581, 594, 595, 602, 604, 605, 606, 611, 613, 614, 615, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 661, 662, 664, 665, 666, 667, 668, 669, 675, 676, 679, 680, 681, 682, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 735, 776, 777, 778, 780, 782, 816], "task_opf": [1, 11, 281, 497, 509, 512, 513, 515], "case9": [1, 3, 4, 20, 511, 512, 513, 514, 688, 689, 690, 691, 692, 694, 695, 816], "step": [1, 3, 4, 7, 8, 11, 13, 17, 27, 107, 118, 183, 187, 194, 199, 201, 202, 207, 208, 209, 211, 212, 219, 220, 230, 279, 506, 526, 530, 531, 532, 533, 538, 539, 541, 542, 544, 546, 547, 549, 588, 624, 639, 688], "list": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 62, 64, 65, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 174, 175, 176, 177, 178, 187, 199, 286, 288, 292, 293, 340, 444, 506, 518, 519, 520, 532, 533, 565, 566, 571, 576, 577, 578, 624, 674, 681, 682, 686, 697, 780, 782], "roughli": [1, 3, 286], "equival": [1, 17, 19, 20, 120, 122, 275, 283, 309, 347, 526], "perform": [1, 7, 27, 31, 32, 67, 180, 181, 182, 183, 187, 192, 193, 212, 228, 286, 542, 566, 568, 569, 571, 576, 613, 624, 641, 642, 643, 644, 645, 646, 670, 688, 700, 782], "when": [1, 2, 3, 4, 6, 8, 9, 12, 13, 17, 19, 30, 43, 44, 62, 67, 76, 78, 79, 107, 108, 111, 112, 117, 118, 127, 158, 160, 173, 179, 184, 198, 200, 201, 212, 262, 265, 266, 279, 281, 283, 286, 289, 292, 347, 348, 444, 449, 493, 494, 505, 506, 517, 518, 527, 532, 535, 537, 541, 544, 549, 551, 567, 568, 615, 618, 620, 624, 640, 648, 649, 652, 688, 697, 774, 777], "It": [1, 3, 4, 6, 8, 17, 19, 20, 21, 43, 75, 107, 110, 113, 114, 115, 118, 269, 279, 286, 289, 506, 512, 517, 519, 522, 523, 524, 532, 541, 544, 559, 566, 567, 570, 581, 594, 683, 780], "defin": [1, 3, 4, 6, 7, 8, 11, 12, 17, 19, 20, 27, 32, 43, 44, 60, 61, 65, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 179, 191, 192, 193, 194, 197, 199, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 271, 282, 284, 286, 287, 291, 292, 293, 320, 323, 331, 343, 346, 348, 377, 444, 445, 449, 517, 518, 519, 526, 532, 545, 566, 572, 577, 578, 581, 596, 597, 598, 599, 600, 601, 605, 615, 620, 624, 639, 648, 649, 658, 659, 660, 688, 693, 699, 706, 774, 775, 778], "well": [1, 2, 3, 8, 17, 19, 78, 79, 107, 108, 118, 260, 347, 444, 445, 493, 497, 504, 509, 522, 523, 524, 559, 561, 566, 567, 568, 570, 571, 576, 594, 595, 599, 624, 641, 642, 643, 644, 645, 646, 648, 683, 728, 774, 782], "explicitli": [1, 8, 13, 17, 212, 445, 624, 648], "actual": [1, 6, 11, 27, 111, 191, 192, 193, 194, 269, 271, 272, 275, 293, 449, 599, 775, 778], "code": [1, 7, 13, 17, 18, 19, 20, 27, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 157, 166, 167, 168, 171, 172, 179, 180, 181, 182, 183, 184, 187, 191, 193, 194, 217, 218, 219, 220, 227, 230, 231, 262, 263, 264, 279, 284, 371, 372, 373, 374, 380, 497, 510, 527, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 578, 599, 613, 624, 647, 648, 702, 703, 704, 705, 724, 726, 733, 787, 816], "thei": [1, 2, 4, 7, 8, 11, 12, 13, 17, 19, 39, 108, 111, 117, 118, 260, 271, 279, 280, 341, 343, 348, 517, 567, 568, 594, 595, 596, 597, 600, 601, 615], "return": [1, 2, 3, 4, 8, 11, 17, 19, 27, 30, 37, 41, 42, 60, 62, 64, 65, 76, 77, 78, 79, 80, 81, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 127, 158, 159, 160, 168, 171, 172, 173, 179, 181, 193, 198, 199, 202, 203, 211, 212, 222, 231, 258, 262, 265, 277, 282, 283, 286, 289, 290, 292, 293, 341, 342, 343, 344, 345, 346, 347, 348, 376, 377, 400, 416, 444, 445, 449, 493, 495, 497, 499, 505, 506, 509, 510, 511, 512, 513, 514, 517, 525, 526, 529, 530, 532, 546, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 594, 595, 602, 603, 604, 605, 606, 611, 612, 613, 614, 615, 616, 617, 618, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 656, 658, 673, 674, 678, 679, 681, 682, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 715, 777, 778, 779, 780, 781, 782, 814], "call": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 27, 30, 31, 32, 39, 62, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 198, 199, 210, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 261, 262, 265, 266, 268, 269, 271, 272, 274, 275, 278, 280, 281, 284, 285, 286, 289, 291, 292, 293, 343, 344, 345, 347, 348, 376, 444, 445, 448, 449, 456, 493, 494, 495, 496, 497, 498, 499, 500, 505, 506, 508, 511, 512, 513, 514, 517, 518, 532, 545, 546, 563, 566, 567, 568, 572, 594, 595, 610, 640, 648, 649, 686, 688, 689, 690, 691, 692, 693, 694, 695, 780], "them": [1, 2, 3, 8, 17, 19, 20, 44, 78, 79, 97, 98, 99, 101, 107, 117, 118, 119, 120, 122, 124, 125, 126, 157, 159, 170, 197, 279, 286, 292, 341, 445, 448, 508, 605, 774, 775, 776, 777, 780], "overridden": [1, 2, 3, 11, 17, 18, 19, 64, 117, 191, 284, 341, 501, 502, 624], "subclass": [1, 2, 3, 4, 7, 8, 11, 12, 19, 108, 109, 117, 286, 287, 288, 289, 292, 293, 340, 342, 343, 348, 349, 352, 357, 362, 367, 370, 375, 376, 444, 445, 449, 493, 497, 506, 517, 786], "main": [1, 2, 3, 4, 6, 19, 27, 32, 38, 105, 163, 164, 165, 167, 168, 169, 191, 192, 193, 194, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 286, 292, 293, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 508, 511, 512, 513, 514], "specifi": [1, 2, 8, 11, 12, 17, 19, 27, 31, 32, 40, 41, 42, 60, 61, 62, 63, 78, 79, 80, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 163, 164, 165, 166, 167, 168, 169, 172, 179, 188, 190, 191, 192, 193, 194, 199, 203, 210, 211, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 269, 275, 284, 285, 290, 292, 293, 333, 334, 342, 343, 346, 347, 444, 449, 493, 512, 517, 519, 522, 523, 524, 525, 529, 532, 545, 567, 568, 570, 572, 579, 581, 594, 595, 599, 604, 611, 615, 621, 624, 639, 648, 649, 656, 674, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 698, 699, 775, 777, 778, 779], "help": [1, 6, 20, 21, 31, 38, 67, 105, 108, 117, 118, 125, 259, 260, 279, 516, 517, 519, 527, 564, 624, 647, 648], "both": [1, 3, 6, 7, 8, 11, 17, 18, 19, 44, 66, 67, 79, 80, 81, 111, 118, 269, 275, 342, 343, 344, 345, 346, 347, 348, 495, 501, 502, 510, 526, 567, 579, 581, 594, 596, 603, 607, 688, 699, 777, 778], "after": [1, 2, 13, 17, 107, 108, 117, 118, 119, 124, 125, 126, 157, 159, 170, 197, 199, 286, 289, 292, 493, 494, 496, 497, 498, 518, 532, 596, 597, 598, 600, 601, 610, 694, 699, 700], "itself": [1, 8, 61, 179, 292, 348, 444, 699, 777], "also": [1, 3, 4, 6, 7, 8, 9, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 37, 41, 42, 43, 44, 60, 63, 67, 76, 77, 80, 81, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 258, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 320, 340, 341, 342, 343, 344, 345, 346, 347, 348, 374, 376, 444, 445, 446, 447, 448, 449, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 521, 522, 523, 524, 526, 530, 532, 535, 537, 538, 539, 541, 544, 545, 549, 551, 552, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 576, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 611, 612, 613, 614, 615, 616, 618, 619, 620, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 674, 677, 678, 679, 680, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 707, 774, 775, 776, 777, 778, 780, 781, 782, 814], "updat": [1, 3, 4, 6, 8, 11, 19, 27, 44, 60, 67, 180, 183, 184, 187, 199, 202, 210, 211, 212, 268, 283, 286, 289, 292, 293, 328, 336, 341, 348, 354, 376, 379, 387, 390, 393, 394, 395, 397, 401, 402, 403, 404, 405, 414, 417, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 444, 493, 494, 495, 497, 499, 500, 518, 532, 533, 541, 544, 545, 546, 568, 595, 613, 624, 643, 646, 671, 677, 679, 682, 696, 781, 782], "basic": [1, 279, 505], "dmc_class": [1, 18, 341, 493, 497, 501, 502, 504], "dm_converter_mpc2": [1, 3, 4, 281, 286, 289, 291, 293, 515, 799], "v2": [1, 17, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 558], "dm_class": [1, 18, 341, 493, 501, 502, 504], "data_model_opf": [1, 3, 281, 332, 515], "nm_class": [1, 18, 341, 493, 501, 502], "net_model_acp": [1, 8, 281, 515], "ac": [1, 6, 7, 9, 12, 18, 20, 44, 175, 177, 284, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 394, 398, 399, 400, 401, 402, 404, 408, 409, 410, 411, 412, 417, 418, 420, 424, 426, 431, 432, 439, 440, 445, 446, 447, 449, 451, 452, 453, 457, 458, 459, 460, 463, 464, 467, 468, 469, 470, 471, 474, 475, 476, 481, 482, 483, 487, 488, 489, 496, 498, 501, 502, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 575, 624, 639, 647, 648, 652, 653, 654, 655, 661, 662, 664, 666, 668, 688, 692, 694, 695, 750, 752, 755, 762, 813, 815, 816], "polar": [1, 2, 7, 8, 18, 20, 342, 343, 345, 348, 352, 353, 354, 362, 363, 364, 365, 366, 373, 374, 380, 384, 385, 386, 392, 399, 402, 409, 412, 447, 449, 453, 458, 460, 464, 468, 471, 476, 483, 489, 501, 502, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 624, 641, 643, 644, 646, 807, 809], "mm_class": [1, 12, 18, 341, 493, 501, 502, 503, 504], "math_model_opf_acp": [1, 7, 17, 281, 363, 366, 515], "dmc": [1, 3, 4, 286, 289, 292, 493, 494, 496, 497], "build": [1, 2, 5, 6, 19, 20, 21, 67, 110, 113, 114, 115, 118, 162, 223, 260, 286, 289, 292, 348, 359, 361, 364, 366, 368, 376, 444, 445, 448, 449, 451, 454, 462, 466, 469, 472, 474, 477, 478, 480, 481, 484, 486, 487, 490, 491, 493, 494, 515, 517, 520, 611, 612, 613, 614, 615, 616, 617, 618, 624], "dm": [1, 3, 4, 7, 8, 12, 17, 19, 44, 286, 287, 288, 289, 290, 291, 292, 293, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 466, 469, 472, 474, 477, 478, 480, 481, 484, 486, 487, 490, 491, 493, 494, 495, 496, 497, 498, 499, 509, 511, 512, 513, 514], "nm": [1, 7, 8, 12, 17, 19, 343, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 466, 469, 472, 474, 477, 478, 480, 481, 484, 486, 487, 490, 491, 493, 494, 495, 496, 497, 498, 499], "mm": [1, 7, 8, 9, 12, 17, 19, 107, 188, 189, 190, 343, 348, 349, 352, 355, 376, 377, 381, 384, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 449, 493, 494, 495, 497, 498, 499, 517], "solve_opt": [1, 7, 348, 356, 367, 369, 375], "get": [1, 2, 4, 12, 14, 16, 17, 19, 38, 44, 62, 63, 105, 107, 117, 118, 259, 279, 284, 285, 286, 292, 293, 342, 343, 344, 345, 346, 376, 444, 445, 446, 447, 449, 493, 497, 527, 597, 598, 601, 675, 816], "network_model_x_soln": [1, 7, 348, 493, 494, 498], "soln": [1, 17, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 204, 205, 445, 448, 449, 493, 534, 536, 540, 543, 548, 550, 671], "port_inj_soln": [1, 445, 448], "comput": [1, 6, 8, 12, 27, 67, 107, 111, 113, 118, 163, 164, 165, 166, 167, 168, 169, 180, 188, 189, 191, 192, 193, 194, 214, 215, 283, 284, 343, 344, 345, 346, 418, 445, 448, 517, 530, 538, 539, 542, 547, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 579, 596, 615, 616, 621, 624, 643, 646, 650, 652, 654, 661, 664, 666, 668, 675, 778, 779, 780], "data_model_upd": [1, 7, 19, 292, 348, 376], "four": [1, 2, 17, 20, 44, 118, 558, 559, 561, 787], "consist": [1, 2, 3, 8, 9, 11, 17, 19, 40, 44, 108, 110, 113, 114, 115, 118, 449, 495, 497, 499, 517, 522, 523, 524, 532, 566, 699], "hold": [1, 17, 19, 113, 123, 212, 340, 526], "That": [1, 7, 8, 12, 13, 17, 19, 20, 113, 120, 122, 179, 285, 290, 292, 293, 342, 343, 344, 345, 346, 348, 449, 506], "etc": [1, 3, 13, 17, 18, 19, 20, 25, 67, 75, 107, 108, 117, 180, 188, 189, 190, 199, 214, 215, 216, 283, 286, 292, 342, 348, 493, 505, 526, 532, 566, 567, 594, 624, 656, 663, 688, 689, 690, 691, 692, 694, 695, 777], "associ": [1, 6, 7, 8, 18, 108, 578, 769], "valid": [1, 3, 20, 62, 64, 65, 77, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 174, 175, 176, 177, 178, 179, 262, 282, 292, 293, 347, 376, 444, 449, 579, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 681, 682], "field": [1, 2, 4, 14, 16, 20, 27, 30, 31, 32, 40, 41, 42, 43, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 81, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 211, 212, 214, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 265, 283, 284, 291, 292, 293, 348, 376, 416, 423, 444, 449, 494, 497, 517, 518, 519, 526, 532, 533, 535, 537, 545, 549, 551, 564, 568, 569, 570, 577, 578, 579, 595, 602, 605, 617, 624, 635, 639, 640, 647, 648, 649, 680, 682, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 706, 774, 775, 776, 777, 778], "identifi": [1, 3, 17, 31, 107, 108, 117, 118, 262, 286, 289, 290, 292, 444, 493, 519, 525, 526], "can": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 27, 32, 38, 43, 61, 63, 64, 65, 67, 78, 79, 80, 81, 97, 98, 99, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 162, 163, 164, 165, 166, 167, 168, 169, 179, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 202, 210, 211, 212, 213, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 262, 269, 271, 279, 283, 286, 292, 293, 340, 341, 343, 344, 346, 347, 348, 444, 449, 493, 505, 506, 509, 511, 512, 513, 514, 517, 518, 521, 526, 527, 532, 533, 545, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 567, 568, 569, 570, 571, 572, 576, 579, 594, 595, 599, 611, 613, 615, 618, 619, 623, 624, 648, 649, 652, 673, 675, 685, 686, 688, 689, 690, 691, 692, 694, 695, 777, 778, 780, 782, 784, 816], "befor": [1, 2, 3, 4, 7, 8, 17, 19, 107, 108, 117, 118, 179, 199, 269, 275, 284, 286, 493, 495, 497, 499, 518, 532, 563, 594, 610, 697, 700], "its": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 21, 27, 44, 107, 111, 112, 114, 115, 117, 118, 172, 180, 182, 184, 187, 191, 192, 193, 194, 199, 212, 286, 288, 289, 292, 293, 342, 376, 444, 446, 447, 448, 449, 508, 511, 512, 513, 514, 535, 551, 580, 599, 688], "simpli": [1, 2, 3, 4, 6, 8, 9, 11, 17, 18, 20, 63, 110, 113, 114, 115, 118, 293, 345, 348, 517, 566, 568, 569, 570, 595, 652], "loop": [1, 3, 4, 7, 8, 199, 493, 532, 619, 620], "possibli": [1, 4, 17, 19, 32, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 121, 163, 164, 165, 166, 167, 168, 169, 202, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 283, 289, 444, 449, 569, 681, 682, 696], "access": [1, 6, 8, 18, 20, 21, 107, 118, 260, 284, 285, 293, 505, 506, 517], "respect": [1, 3, 4, 7, 8, 9, 11, 17, 19, 20, 27, 31, 32, 107, 110, 113, 118, 163, 164, 165, 166, 167, 168, 169, 178, 191, 192, 193, 194, 205, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 292, 343, 444, 493, 521, 526, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 567, 570, 571, 576, 579, 581, 594, 616, 617, 618, 624, 681, 682, 698, 775, 777, 782], "nme": [1, 8, 17, 342, 343, 344, 345, 346, 376, 389, 391, 408, 410, 411, 449, 456], "pull": [1, 17], "dme": [1, 3, 4, 12, 17, 19, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 376, 417, 449], "describ": [1, 2, 3, 6, 7, 12, 17, 18, 19, 20, 27, 32, 44, 63, 108, 111, 112, 117, 118, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 449, 492, 517, 526, 567, 594, 648, 688], "more": [1, 3, 6, 7, 8, 9, 12, 17, 19, 41, 42, 44, 107, 108, 110, 111, 113, 116, 117, 118, 165, 212, 217, 218, 226, 229, 232, 281, 284, 286, 289, 292, 293, 340, 341, 342, 343, 344, 345, 346, 348, 376, 444, 449, 493, 497, 501, 502, 503, 504, 505, 518, 519, 544, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 648, 649, 673, 685, 688, 689, 690, 691, 692, 694, 695, 780, 815], "detail": [1, 3, 4, 8, 9, 17, 19, 20, 21, 27, 31, 32, 37, 43, 44, 45, 46, 60, 61, 63, 67, 75, 82, 83, 84, 85, 103, 107, 108, 111, 112, 117, 118, 119, 124, 126, 159, 163, 165, 166, 169, 170, 184, 191, 193, 199, 200, 201, 203, 210, 212, 224, 226, 227, 229, 232, 233, 258, 273, 277, 279, 281, 285, 286, 289, 292, 293, 341, 342, 343, 344, 345, 346, 348, 444, 449, 501, 502, 503, 504, 517, 525, 526, 527, 532, 535, 537, 541, 544, 545, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 571, 575, 576, 578, 619, 624, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 675, 677, 688, 689, 691, 692, 695, 702, 706, 707, 708, 709, 710, 711, 712, 782, 795, 814], "summari": [1, 3, 17, 18, 20, 75, 80, 81, 97, 98, 99, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 266, 268, 273, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 469, 472, 473, 474, 477, 478, 479, 480, 481, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 517, 528, 624, 639], "inherit": [1, 2, 3, 4, 7, 8, 17, 18, 19, 285, 292, 293, 342, 343, 344, 345, 346, 348, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 444, 446, 447, 448, 449, 452, 453, 454, 457, 458, 459, 460, 461, 463, 464, 467, 468, 470, 471, 472, 475, 476, 478, 480, 482, 483, 484, 486, 488, 489, 490, 491, 493, 494, 497, 501, 502, 506, 783], "repres": [1, 6, 8, 12, 17, 20, 43, 61, 107, 108, 118, 123, 343, 444, 449, 578, 579, 603, 609, 624, 648, 649], "abstract": [1, 7, 17, 19, 109, 117, 289, 292, 293, 341, 342, 343, 348, 349, 352, 355, 356, 357, 362, 369, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 396, 400, 406, 407, 410, 413, 416, 422, 423, 430, 436, 444, 445, 449, 450, 451, 455, 456, 462, 465, 466, 469, 473, 474, 479, 481, 485, 487, 493], "displai": [1, 3, 17, 19, 27, 80, 81, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 269, 271, 272, 274, 275, 278, 286, 289, 292, 309, 347, 348, 444, 449, 493, 505, 506, 508, 517, 527, 676, 677, 679, 680, 682, 683], "border": 1, "concret": [1, 3, 7, 8, 17, 19, 286, 289, 293, 342, 343, 344, 345, 346, 348, 444, 446, 447, 448], "doubl": [1, 27, 31, 32, 44, 63, 107, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 262, 271, 283, 284, 286, 293, 309, 310, 311, 312, 314, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 343, 344, 345, 346, 348, 418, 444, 445, 446, 447, 448, 449, 493, 498, 571, 611, 681, 682, 782], "signific": [1, 110, 118, 570], "portion": [1, 4, 20, 292, 343, 617, 648, 781, 793, 794], "implement": [1, 2, 3, 4, 6, 7, 8, 11, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 39, 43, 106, 107, 108, 109, 111, 112, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 172, 175, 179, 183, 194, 199, 212, 219, 220, 230, 259, 263, 264, 279, 280, 284, 285, 286, 289, 290, 292, 293, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338, 340, 342, 343, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 365, 367, 369, 371, 372, 373, 374, 375, 376, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 449, 450, 451, 452, 454, 455, 456, 462, 465, 466, 473, 478, 479, 480, 485, 486, 491, 493, 494, 495, 496, 497, 498, 499, 505, 510, 517, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 608, 624, 648, 673, 693, 757, 761, 774, 775, 776, 777], "greatli": 1, "reduc": [1, 7, 27, 613, 624], "effort": 1, "involv": [1, 2, 7, 8, 17, 19], "distinguish": [1, 199, 532], "pss": [1, 4, 289, 676, 677, 678, 679, 680, 681, 682, 683, 696], "raw": [1, 4, 223, 289, 497, 564, 624, 639, 647, 648, 656, 676, 677, 678, 679, 680, 681, 682, 683, 696], "dc": [1, 7, 9, 18, 44, 56, 67, 69, 70, 71, 72, 96, 171, 178, 284, 285, 291, 300, 320, 321, 322, 342, 346, 348, 367, 368, 375, 377, 387, 393, 395, 403, 405, 419, 421, 422, 423, 424, 425, 426, 427, 433, 441, 448, 454, 461, 472, 473, 474, 475, 476, 477, 484, 490, 496, 498, 502, 515, 563, 564, 565, 570, 578, 612, 614, 615, 624, 639, 648, 678, 689, 690, 691, 707, 719, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 763, 774, 775, 777, 802], "cartesian": [1, 2, 7, 8, 18, 21, 342, 343, 344, 349, 350, 351, 357, 358, 359, 360, 361, 371, 372, 380, 381, 382, 383, 391, 398, 401, 408, 411, 446, 452, 457, 459, 460, 463, 467, 470, 475, 482, 488, 501, 502, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 624, 642, 643, 644, 645, 646, 650, 651, 806, 808], "goe": [1, 108, 117], "which": [1, 2, 3, 4, 6, 7, 8, 12, 13, 17, 18, 19, 21, 27, 31, 41, 42, 43, 60, 61, 63, 64, 65, 80, 81, 107, 110, 111, 113, 115, 117, 118, 162, 163, 164, 165, 166, 167, 168, 169, 172, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 210, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 269, 275, 282, 283, 287, 292, 340, 342, 343, 346, 348, 376, 444, 445, 449, 510, 517, 518, 519, 526, 527, 532, 535, 541, 544, 545, 551, 566, 567, 569, 570, 571, 572, 576, 578, 580, 581, 594, 603, 618, 624, 639, 641, 642, 643, 644, 645, 646, 648, 649, 652, 674, 675, 681, 682, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 700, 777, 778, 782, 816], "element_contain": [1, 2, 3, 4, 7, 8, 281, 286, 289, 348, 444, 515], "mixin": [1, 332, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 515], "share": [1, 3, 5, 6, 8, 17, 19, 332, 348, 371, 372, 373, 374, 380, 500, 578], "mention": [1, 11, 12, 506, 777], "abov": [1, 2, 11, 12, 13, 17, 19, 20, 27, 32, 43, 44, 64, 107, 108, 117, 118, 163, 164, 165, 166, 167, 168, 169, 172, 181, 182, 183, 184, 187, 191, 192, 193, 194, 210, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 262, 280, 284, 506, 526, 581, 596, 597, 598, 600, 601, 607, 624, 639, 777, 778], "address": [1, 179, 506], "index": [1, 3, 4, 8, 9, 12, 13, 17, 19, 31, 60, 63, 78, 79, 80, 81, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 202, 203, 212, 284, 286, 292, 293, 309, 315, 317, 318, 321, 323, 325, 326, 330, 333, 334, 338, 344, 347, 348, 418, 444, 445, 446, 447, 449, 505, 506, 517, 518, 519, 520, 522, 523, 524, 526, 532, 533, 566, 567, 568, 569, 570, 580, 594, 595, 596, 597, 598, 599, 600, 601, 610, 624, 641, 642, 643, 644, 645, 646, 656, 663, 664, 665, 666, 667, 670, 680, 682, 683, 688, 699, 700, 775, 777, 778], "suppli": [1, 27, 32, 80, 81, 108, 110, 111, 112, 118, 119, 124, 125, 126, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 518, 567, 594, 604, 615, 624, 639, 675], "properti": [1, 2, 4, 6, 7, 8, 17, 19, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 282, 286, 289, 292, 299, 302, 303, 307, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 332, 333, 334, 338, 340, 342, 343, 346, 348, 416, 423, 444, 445, 446, 447, 448, 449, 492, 493, 494, 495, 496, 497, 498, 499, 506, 516, 517], "element_class": [1, 2, 3, 4, 7, 8, 17, 19, 286, 289, 340], "sometim": [1, 3, 7, 110, 348], "certain": [1, 4, 8, 11, 31, 494], "across": [1, 7, 8, 43, 61, 63, 348, 408, 409, 411, 412, 500, 521, 607, 775], "wai": [1, 2, 6, 12, 17, 119, 124, 125, 126, 157, 159, 170, 171, 197, 341, 505, 624, 648, 649, 774], "match": [1, 2, 4, 43, 61, 62, 67, 107, 118, 163, 164, 165, 166, 167, 168, 169, 188, 190, 269, 271, 273, 275, 279, 283, 292, 347, 408, 409, 411, 412, 568, 595, 604, 671, 788, 789, 790, 791, 793, 794, 796], "path": [1, 13, 14, 15, 16, 62, 78, 79, 80, 81, 269, 279, 342, 507, 508, 572, 620], "current": [1, 2, 7, 9, 14, 16, 19, 20, 21, 27, 30, 31, 44, 75, 76, 78, 79, 80, 81, 107, 112, 118, 127, 158, 159, 160, 170, 173, 184, 194, 198, 199, 201, 202, 204, 205, 207, 208, 209, 212, 217, 218, 219, 220, 265, 309, 325, 343, 344, 345, 347, 350, 353, 356, 358, 359, 363, 364, 371, 373, 380, 382, 385, 407, 415, 429, 438, 443, 444, 445, 493, 495, 497, 498, 499, 500, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 518, 522, 526, 531, 532, 533, 534, 536, 538, 539, 540, 542, 543, 547, 548, 549, 550, 552, 553, 554, 555, 558, 559, 560, 572, 603, 617, 618, 619, 620, 624, 639, 640, 642, 643, 644, 652, 654, 655, 676, 696, 816], "approach": [1, 2, 17, 508], "util": [1, 20, 21, 118, 259, 283, 515], "first": [1, 2, 3, 4, 7, 8, 12, 17, 19, 27, 32, 44, 62, 63, 64, 65, 78, 79, 80, 81, 107, 113, 114, 115, 118, 121, 123, 159, 167, 174, 175, 177, 178, 193, 206, 210, 213, 219, 221, 230, 262, 284, 341, 347, 444, 449, 505, 508, 511, 513, 514, 526, 532, 545, 552, 569, 570, 572, 605, 616, 648, 649, 673, 674, 680, 683, 688, 694, 699, 775], "we": [1, 3, 6, 8, 12, 13, 17, 18, 19, 107, 108, 113, 117, 118, 120, 122, 213, 279, 527, 620], "wrap": 1, "insid": [1, 340, 506], "inher": 1, "limit": [1, 3, 7, 11, 12, 17, 18, 19, 27, 32, 44, 75, 107, 118, 162, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 200, 204, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 283, 286, 309, 310, 314, 320, 322, 343, 344, 352, 389, 400, 401, 418, 452, 494, 496, 498, 504, 532, 534, 535, 540, 541, 543, 544, 550, 551, 596, 597, 600, 601, 607, 624, 639, 648, 649, 652, 653, 688, 693, 694, 706, 757, 775, 776, 777, 780, 781], "order": [1, 2, 7, 11, 17, 19, 27, 31, 32, 43, 44, 61, 62, 63, 82, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 157, 159, 170, 193, 197, 210, 284, 340, 342, 449, 497, 517, 518, 522, 523, 524, 526, 545, 564, 567, 568, 569, 570, 594, 595, 598, 602, 611, 612, 613, 615, 618, 624, 639, 647, 648, 670, 688, 689, 690, 691, 692, 694, 695], "backward": [1, 20, 63, 124, 126, 159, 170, 569, 602, 611, 620, 624, 648, 649, 685, 778], "compat": [1, 20, 63, 113, 124, 126, 159, 170, 497, 505, 510, 569, 602, 611, 624, 648, 649, 689, 690, 691, 692, 694, 695, 778, 816], "mechan": [1, 6, 18, 377, 774], "intern": [1, 3, 6, 17, 19, 63, 111, 117, 118, 179, 283, 444, 449, 517, 518, 520, 526, 532, 564, 566, 567, 568, 569, 578, 594, 595, 602, 611, 612, 613, 615, 618, 647, 648, 656, 663, 685, 688, 689, 690, 691, 692, 694, 695, 714, 816], "all": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 27, 30, 32, 37, 43, 44, 61, 63, 64, 65, 66, 76, 78, 79, 80, 81, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 198, 199, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 258, 262, 265, 271, 273, 277, 279, 282, 283, 284, 286, 292, 293, 299, 309, 315, 317, 318, 321, 323, 325, 326, 332, 333, 334, 338, 342, 343, 344, 345, 346, 348, 376, 378, 379, 380, 381, 384, 418, 444, 445, 446, 447, 448, 449, 493, 504, 508, 517, 518, 519, 521, 532, 535, 541, 545, 551, 553, 558, 559, 560, 561, 562, 565, 569, 570, 571, 576, 597, 599, 601, 602, 604, 605, 606, 610, 613, 618, 620, 624, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 652, 653, 656, 663, 678, 679, 682, 685, 688, 689, 690, 691, 692, 694, 695, 699, 777, 778, 782, 814], "even": [1, 2, 20, 21, 43, 44, 80, 81, 165, 199, 217, 218, 226, 229, 232, 532, 624, 639], "importantli": 1, "extens": [1, 5, 11, 14, 16, 17, 20, 21, 62, 262, 289, 359, 361, 364, 366, 368, 493, 501, 502, 503, 504, 509, 511, 512, 513, 514, 515, 589, 605, 696, 697, 698, 719, 774, 802, 803, 816], "suit": [1, 279], "second": [1, 3, 4, 7, 8, 12, 17, 18, 19, 20, 44, 64, 65, 80, 81, 113, 114, 115, 119, 124, 125, 126, 157, 159, 170, 197, 225, 231, 262, 279, 347, 449, 493, 511, 525, 529, 570, 574, 648, 673, 675, 688, 689, 690, 691, 692, 694, 695], "abl": [1, 43, 172, 287, 508, 526], "make": [1, 7, 8, 13, 18, 19, 21, 60, 107, 108, 114, 115, 117, 118, 262, 284, 286, 289, 323, 444, 449, 500, 508, 516, 526, 610], "full": [1, 7, 8, 12, 31, 43, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 179, 184, 201, 205, 212, 273, 342, 343, 344, 346, 377, 418, 444, 445, 449, 517, 530, 549, 565, 571, 576, 613, 615, 618, 624, 641, 642, 643, 644, 645, 646, 649, 688, 694, 782, 816], "scope": 1, "end": [1, 2, 8, 9, 12, 17, 18, 19, 27, 44, 67, 79, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 161, 180, 182, 184, 185, 186, 187, 191, 192, 193, 194, 206, 212, 213, 221, 262, 269, 273, 279, 292, 309, 310, 321, 322, 323, 338, 343, 346, 347, 348, 493, 505, 506, 517, 518, 521, 526, 529, 532, 558, 559, 561, 577, 578, 579, 596, 598, 600, 612, 648, 652, 653, 680, 681, 682, 683, 688, 689, 690, 691, 692, 694, 695, 697, 698], "take": [1, 4, 7, 8, 9, 12, 17, 18, 19, 44, 63, 110, 111, 112, 113, 114, 115, 118, 172, 199, 210, 211, 262, 348, 445, 448, 519, 532, 545, 552, 553, 554, 555, 556, 557, 559, 560, 572, 596, 599, 600, 604, 611, 623, 778], "advantag": [1, 17, 19], "capabl": [1, 19, 39, 260, 280, 317, 417, 418, 503, 526, 581, 601, 608, 648, 781], "add": [1, 2, 3, 4, 6, 7, 8, 13, 17, 18, 19, 21, 31, 40, 41, 42, 43, 60, 61, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 199, 279, 281, 286, 288, 289, 291, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 347, 348, 376, 377, 416, 423, 444, 445, 446, 447, 448, 449, 457, 458, 459, 460, 461, 462, 466, 469, 472, 474, 477, 494, 495, 496, 497, 499, 501, 502, 504, 508, 517, 518, 519, 532, 599, 777], "multiphas": 1, "unbalanc": [1, 2, 3, 20, 283, 286, 341, 501, 787], "hybrid": [1, 20, 624, 643, 646, 788, 789, 790, 791, 792, 793, 794, 812], "own": [1, 2, 3, 4, 6, 7, 8, 21, 182, 184, 199, 210, 211, 279, 280, 286, 292, 293, 376, 449, 532, 545, 570], "version": [1, 4, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 38, 39, 44, 76, 105, 115, 117, 118, 119, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 171, 172, 173, 198, 199, 259, 262, 263, 264, 265, 279, 280, 284, 287, 289, 290, 342, 493, 508, 515, 526, 532, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 605, 611, 613, 624, 639, 640, 677, 689, 690, 691, 692, 694, 695, 697, 778, 787, 816], "run_pf": [1, 2, 17, 18, 20, 283, 507, 509, 512, 515, 812], "run_cpf": [1, 2, 17, 18, 20, 507, 509, 512, 515, 812], "run_opf": [1, 2, 12, 17, 18, 20, 507, 509, 512, 515, 812, 813, 816], "underscor": [1, 816], "One": [1, 8, 788, 789, 790, 791], "differ": [1, 2, 4, 7, 17, 19, 20, 27, 32, 43, 163, 164, 165, 167, 168, 169, 191, 192, 193, 194, 199, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 269, 271, 292, 309, 310, 348, 389, 391, 392, 393, 452, 500, 505, 518, 521, 526, 528, 532, 568, 596, 607, 619, 624, 639, 650, 651, 778], "remov": [1, 3, 13, 17, 19, 44, 283, 286, 340, 508, 569, 573, 602, 611, 614, 624, 686, 777, 778], "offlin": [1, 3, 7, 17, 19, 286, 292, 376, 610], "equip": [1, 656, 663], "renumb": [1, 569], "buse": [1, 2, 3, 4, 8, 17, 18, 19, 20, 44, 61, 75, 283, 286, 292, 311, 312, 317, 318, 321, 397, 401, 402, 403, 404, 405, 519, 520, 522, 523, 524, 525, 530, 532, 538, 539, 542, 544, 547, 558, 559, 560, 561, 562, 565, 569, 570, 571, 574, 576, 594, 597, 602, 607, 615, 618, 619, 620, 624, 641, 642, 643, 644, 645, 646, 664, 665, 666, 667, 670, 679, 688, 699, 777, 778, 782, 788, 789, 790, 791, 792, 793, 794], "consecut": [1, 4, 17, 63, 283, 520, 569, 602, 611, 612, 613, 615, 618], "ext2int": [1, 283, 515, 518, 564, 567, 568, 595, 602, 613, 618, 647, 648, 663, 713, 714, 720, 783], "int2ext": [1, 515, 518, 569, 594, 595, 713, 714, 720, 774, 775, 776, 777, 783], "result": [1, 2, 3, 8, 11, 60, 75, 78, 79, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 168, 188, 190, 199, 202, 231, 232, 266, 268, 269, 271, 272, 275, 279, 283, 286, 289, 343, 348, 444, 445, 493, 495, 497, 499, 506, 508, 509, 511, 512, 513, 514, 518, 526, 527, 532, 533, 535, 537, 541, 544, 549, 551, 564, 570, 579, 604, 610, 614, 624, 639, 647, 648, 649, 656, 675, 676, 685, 688, 689, 690, 691, 692, 693, 694, 695, 717, 718, 774, 775, 776, 777, 780, 796], "callback": [1, 2, 199, 200, 201, 202, 210, 212, 352, 497, 515, 518, 526, 532, 533, 534, 535, 536, 537, 540, 541, 543, 544, 545, 548, 549, 550, 551, 569, 624, 686, 687, 688, 717, 718, 757, 761, 769, 774, 775, 776, 777], "necessari": [1, 3, 7, 17, 116, 118, 286, 292, 376, 498, 526, 541, 544, 697, 698], "so": [1, 2, 3, 4, 7, 8, 12, 13, 17, 18, 20, 21, 27, 60, 179, 279, 282, 285, 293, 449, 501, 502, 506, 527, 674, 699], "motiv": 1, "behind": [1, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "facilit": [1, 21], "who": [1, 6, 109, 110, 111, 113, 116, 269], "want": [1, 6, 17, 78, 79, 80, 81, 170, 613], "possibl": [1, 3, 19, 31, 44, 61, 78, 79, 80, 117, 623, 648, 649, 681, 688, 699, 777, 780], "overrid": [1, 2, 11, 12, 17, 18, 19, 107, 108, 118, 119, 124, 125, 126, 157, 159, 163, 164, 165, 166, 168, 169, 170, 182, 191, 192, 193, 197, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 328, 336, 375, 391, 493, 505, 616, 624, 639, 685, 688, 689, 690, 691, 692, 694, 695, 735, 777], "behavior": [1, 2, 77, 179, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 699, 777], "complet": [1, 3, 7, 11, 12, 17, 18, 19, 21, 61, 107, 110, 111, 113, 116, 118, 187, 205, 212, 286, 493, 519, 548, 569, 602, 624, 777, 816], "often": [1, 9, 75], "see": [1, 2, 3, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 37, 41, 42, 43, 44, 45, 46, 60, 61, 63, 67, 75, 76, 77, 82, 83, 84, 85, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 258, 261, 262, 263, 264, 266, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 320, 340, 341, 342, 343, 344, 345, 346, 347, 348, 376, 444, 445, 446, 447, 448, 449, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 521, 522, 523, 524, 526, 527, 530, 532, 535, 537, 538, 539, 541, 544, 545, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 611, 612, 613, 614, 615, 616, 618, 619, 620, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 675, 677, 678, 679, 680, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 702, 706, 707, 708, 709, 710, 711, 712, 774, 775, 776, 777, 778, 780, 781, 782, 783, 795, 814, 816], "essenti": [1, 3, 19, 341, 444], "modif": [1, 2, 6, 12, 61, 82, 341, 493, 599, 777], "addit": [1, 2, 3, 8, 12, 17, 18, 19, 20, 21, 31, 40, 43, 44, 63, 65, 106, 108, 111, 117, 283, 286, 292, 341, 444, 509, 511, 512, 513, 514, 518, 519, 526, 564, 567, 568, 570, 578, 581, 594, 595, 597, 598, 599, 608, 647, 648, 649, 679, 687, 689, 691, 692, 693, 695, 707, 780, 816], "made": [1, 3, 59, 61, 63, 110, 111, 112, 113, 114, 115, 118, 262, 569, 599], "default": [1, 3, 4, 5, 6, 11, 12, 14, 17, 18, 19, 27, 31, 32, 37, 41, 42, 62, 63, 64, 65, 67, 77, 78, 79, 80, 81, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 191, 192, 193, 194, 197, 199, 203, 210, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 258, 266, 269, 273, 277, 283, 284, 286, 287, 288, 292, 293, 341, 343, 346, 349, 352, 375, 376, 444, 445, 446, 447, 448, 449, 493, 494, 496, 498, 505, 508, 509, 512, 517, 526, 527, 532, 545, 567, 571, 576, 594, 601, 604, 606, 615, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 648, 649, 675, 676, 677, 679, 680, 682, 683, 685, 688, 689, 690, 691, 692, 694, 695, 699, 740, 750, 777, 778, 782, 813, 814, 816], "henc": [1, 44], "earli": 1, "cycl": [1, 7, 578], "should": [1, 6, 11, 13, 17, 19, 62, 111, 112, 118, 171, 174, 175, 177, 178, 188, 190, 199, 279, 286, 292, 348, 449, 518, 527, 532, 568, 570, 595, 610, 615, 639, 648, 649, 664, 665, 666, 667, 699, 788, 789, 790, 791, 793, 794], "execut": [1, 5, 124, 125, 126, 157, 159, 170, 197, 210, 266, 493, 508, 545, 656, 687], "successfulli": [1, 564, 647, 648], "command": [1, 6, 21, 38, 105, 107, 117, 118, 259, 279, 507, 508, 517, 816], "without": [1, 3, 4, 6, 7, 8, 9, 30, 44, 76, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127, 158, 160, 173, 198, 265, 283, 292, 532, 570, 640], "With": [2, 30, 44, 76, 110, 113, 114, 115, 118, 119, 124, 125, 126, 127, 157, 158, 159, 160, 170, 173, 197, 198, 265, 508, 517, 526, 616, 640, 777], "object": [2, 5, 6, 12, 17, 18, 19, 26, 27, 32, 67, 75, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 163, 164, 165, 166, 167, 168, 169, 172, 188, 189, 190, 191, 192, 193, 194, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 284, 286, 287, 288, 289, 292, 293, 310, 314, 320, 322, 330, 331, 332, 340, 341, 342, 343, 347, 348, 349, 352, 355, 356, 357, 362, 369, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 444, 445, 446, 447, 448, 449, 493, 495, 496, 497, 499, 500, 505, 506, 509, 511, 512, 513, 514, 517, 518, 564, 596, 597, 600, 601, 647, 648, 656, 663, 675, 780], "architectur": [2, 5], "outlin": [2, 3], "section": [2, 3, 6, 7, 8, 9, 12, 17, 18, 19, 119, 124, 126, 159, 167, 273, 279, 286, 288, 289, 292, 293, 310, 313, 314, 316, 319, 320, 322, 323, 324, 327, 329, 332, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 348, 376, 444, 449, 493, 501, 502, 503, 504, 624, 676, 680, 682, 683, 783, 816], "customiz": 2, "increas": [2, 44, 212, 547], "dramat": 2, "ones": [2, 9, 17, 19, 517, 552, 556, 559, 560, 561, 562, 624], "import": [2, 3, 6, 19, 44, 286, 289, 290, 293, 301, 304], "understand": [2, 6], "how": [2, 3, 4, 8, 19, 61, 117, 162, 179, 279, 281, 292, 508, 518, 615, 681, 682], "select": [2, 9, 18, 31, 44, 107, 118, 171, 174, 175, 176, 177, 178, 184, 342, 343, 344, 346, 445, 446, 447, 449, 494, 496, 498, 508, 530, 615, 688, 780], "instanti": [2, 3, 4, 7, 8, 286, 289, 493], "There": [2, 3, 8, 11, 12, 17, 43, 110, 119, 124, 125, 126, 157, 159, 170, 197, 279, 508, 526], "sever": [2, 6, 17, 279, 526, 568], "below": [2, 3, 12, 17, 19, 20, 38, 60, 63, 64, 65, 105, 110, 111, 112, 113, 116, 118, 191, 212, 259, 506, 517, 526, 532, 552, 558, 566, 567, 581, 594, 596, 597, 598, 600, 601, 607, 608, 648, 649, 780], "illustr": [2, 4, 7, 8, 11, 19, 20, 117, 260, 518], "invok": [2, 7, 199, 532, 545, 569], "fact": [2, 17, 19], "simpl": [2, 3, 7, 8, 17, 20, 67, 80, 81, 108, 111, 118, 511, 513, 514, 563, 675, 774, 811], "wrapper": [2, 6, 32, 39, 163, 164, 165, 166, 167, 168, 169, 182, 184, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 511, 512, 513, 514, 515, 563], "run_mp": [2, 6, 507, 511, 513, 514, 515, 811], "onli": [2, 4, 7, 8, 12, 13, 17, 18, 21, 59, 60, 65, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 126, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 199, 203, 212, 230, 261, 266, 269, 275, 279, 292, 293, 347, 376, 444, 449, 495, 497, 499, 501, 502, 505, 506, 516, 532, 552, 569, 578, 579, 581, 599, 602, 615, 616, 624, 639, 648, 649, 652, 653, 673, 674, 699, 778], "valu": [2, 3, 7, 8, 18, 19, 27, 30, 31, 32, 43, 46, 59, 60, 61, 62, 63, 64, 65, 67, 75, 76, 77, 78, 79, 80, 81, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 204, 205, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 265, 271, 278, 282, 283, 284, 286, 292, 293, 309, 323, 328, 336, 342, 347, 348, 444, 445, 449, 493, 495, 496, 497, 499, 500, 508, 517, 518, 519, 520, 526, 527, 529, 530, 531, 532, 533, 534, 536, 538, 539, 540, 542, 543, 545, 546, 547, 548, 549, 550, 560, 562, 564, 567, 568, 570, 573, 574, 577, 578, 581, 594, 595, 597, 598, 599, 604, 611, 613, 616, 618, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 647, 648, 649, 652, 654, 661, 675, 688, 694, 699, 777, 778, 779, 780, 781], "task_class": [2, 341, 509, 512], "argument": [2, 3, 4, 7, 8, 18, 27, 30, 32, 62, 64, 65, 67, 76, 77, 78, 79, 80, 107, 109, 111, 112, 116, 117, 118, 119, 124, 125, 126, 127, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 198, 199, 200, 201, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 265, 269, 275, 278, 292, 293, 347, 505, 508, 511, 513, 514, 517, 518, 525, 532, 535, 537, 541, 544, 545, 549, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 567, 568, 569, 570, 572, 575, 581, 587, 594, 595, 610, 613, 614, 616, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 648, 649, 675, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 780], "handl": [2, 4, 7, 8, 17, 19, 27, 78, 79, 80, 81, 107, 108, 109, 111, 112, 117, 118, 164, 166, 169, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 200, 201, 210, 211, 212, 225, 259, 288, 290, 291, 292, 293, 332, 340, 341, 342, 343, 347, 352, 359, 361, 364, 366, 368, 376, 377, 378, 380, 449, 493, 494, 498, 500, 504, 508, 509, 510, 512, 526, 527, 530, 532, 535, 537, 541, 544, 547, 549, 551, 552, 570, 615, 639, 641, 642, 643, 644, 645, 646, 686], "constructor": [2, 3, 4, 7, 8, 17, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 172, 284, 286, 287, 288, 290, 340, 341, 347, 349, 352, 357, 359, 361, 362, 364, 366, 367, 368, 370, 375, 446, 447, 448, 492, 493, 494, 496, 498, 505, 509, 510, 512, 517], "pass": [2, 3, 4, 7, 8, 11, 12, 15, 17, 18, 20, 27, 62, 64, 65, 119, 124, 125, 126, 157, 159, 170, 172, 179, 182, 187, 191, 192, 193, 194, 197, 199, 212, 262, 269, 271, 272, 273, 275, 279, 292, 348, 493, 503, 505, 509, 518, 532, 545, 567, 568, 569, 572, 594, 595, 624, 648, 649, 681, 816], "mean": [2, 3, 17, 19, 20, 43, 61, 110, 117, 118, 182, 184, 212, 325, 333, 334, 449, 566, 596, 597, 598, 599, 600, 601, 624, 648, 649], "either": [2, 3, 6, 8, 17, 27, 43, 62, 67, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 125, 126, 157, 159, 167, 170, 197, 201, 230, 286, 348, 444, 506, 558, 568, 570, 581, 595, 605, 611, 624, 648, 649, 675, 681, 688, 689, 690, 691, 692, 694, 695, 697, 699, 778, 780], "two": [2, 3, 4, 5, 6, 7, 8, 12, 17, 19, 44, 80, 81, 111, 112, 113, 114, 115, 118, 162, 178, 269, 271, 275, 286, 292, 347, 504, 506, 508, 511, 524, 526, 528, 560, 562, 569, 578, 581, 602, 611, 616, 620, 674, 678, 679, 680, 682, 783], "descript": [2, 3, 4, 6, 8, 12, 17, 19, 20, 21, 31, 75, 117, 118, 212, 262, 284, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 518, 519, 578, 624, 639, 688, 693], "dm_converter_class": [2, 341, 493, 494], "final": [2, 17, 19, 20, 27, 32, 61, 67, 107, 108, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 289, 444, 493, 532, 564, 567, 570, 571, 576, 594, 641, 642, 643, 644, 645, 646, 647, 648, 778, 782], "data_model_class": [2, 341, 493], "network_model_class": [2, 341, 493], "math_model_class": [2, 341, 493], "dm_converter_class_mpc2_default": [2, 493, 497], "data_model_class_default": [2, 493, 494, 496], "network_model_class_default": [2, 493, 496, 498], "math_model_class_default": [2, 493, 494, 496, 497, 498], "tabl": [2, 4, 6, 12, 13, 18, 19, 20, 40, 41, 42, 43, 55, 56, 57, 58, 61, 63, 64, 65, 284, 285, 286, 292, 293, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 340, 341, 347, 495, 497, 499, 501, 502, 503, 504, 505, 506, 510, 519, 566, 578, 592, 599, 698, 715, 801], "last": [2, 7, 110, 113, 118, 199, 207, 208, 209, 212, 341, 444, 505, 506, 532, 610, 674, 680, 683, 686], "cell": [2, 3, 4, 11, 12, 13, 14, 16, 17, 40, 43, 62, 63, 64, 65, 80, 81, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 172, 179, 181, 199, 202, 210, 211, 212, 214, 217, 218, 219, 220, 269, 273, 275, 284, 286, 292, 293, 323, 340, 341, 342, 343, 344, 345, 346, 347, 348, 418, 444, 449, 493, 505, 509, 511, 512, 513, 514, 517, 527, 529, 532, 533, 545, 567, 568, 570, 573, 574, 577, 578, 594, 595, 624, 657, 658, 676, 677, 679, 680, 681, 682, 683, 697, 698, 700], "arrai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 27, 30, 31, 32, 40, 43, 61, 62, 63, 64, 65, 76, 80, 81, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 127, 158, 160, 161, 172, 173, 179, 180, 181, 183, 185, 186, 187, 198, 199, 202, 203, 206, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 262, 265, 269, 271, 272, 273, 274, 275, 283, 284, 286, 289, 290, 292, 293, 323, 340, 341, 342, 343, 344, 345, 346, 347, 348, 376, 418, 444, 449, 493, 505, 509, 511, 512, 513, 514, 517, 527, 529, 532, 533, 545, 567, 568, 570, 573, 574, 577, 578, 594, 595, 624, 640, 657, 658, 676, 677, 679, 680, 681, 682, 683, 688, 697, 698, 700], "popul": [2, 17, 19, 497, 518, 687], "parent": [2, 12, 17, 19, 114, 115, 117, 179, 292, 310, 313, 314, 316, 319, 320, 322, 324, 327, 328, 329, 335, 336, 337, 339, 342, 445, 448, 449, 495, 497, 499], "runtim": [2, 225, 231], "done": [2, 3, 7, 8, 17, 19, 82, 179, 199, 200, 201, 285, 506, 532, 535, 537, 541, 544, 549, 551, 673, 717, 718], "delet": [2, 13, 269, 347], "replac": [2, 17, 19, 61, 80, 81, 107, 117, 118, 269, 275, 340, 503, 519, 532, 599, 614, 624, 777], "entri": [2, 3, 4, 17, 43, 61, 108, 117, 203, 292, 293, 340, 348, 444, 681, 682], "action": [2, 11], "new_class": [2, 108, 114, 115], "append": [2, 40, 41, 42, 60, 124, 126, 159, 170, 288, 292, 340, 347, 518, 688, 689, 690, 691, 692, 694, 695], "old_class": 2, "isa": [2, 340], "true": [2, 14, 17, 31, 37, 67, 78, 79, 103, 107, 108, 109, 110, 111, 113, 116, 117, 118, 172, 199, 202, 258, 261, 262, 266, 269, 271, 272, 273, 274, 275, 277, 278, 282, 283, 284, 286, 292, 293, 311, 312, 340, 347, 444, 449, 496, 498, 505, 506, 508, 518, 532, 581, 613, 614, 648, 675, 688, 694, 699, 777, 778, 780, 814], "typic": [2, 3, 4, 7, 8, 11, 17, 19, 286, 292, 293, 376, 449, 512, 518, 596, 597, 600, 601, 682, 683], "multipl": [2, 119, 124, 125, 126, 157, 159, 170, 197, 210, 212, 260, 292, 449, 506, 508, 519, 532, 545, 567, 573, 594, 624, 639], "sequenti": [2, 3, 7, 8, 11, 269, 275], "modify_element_class": [2, 340], "previous": [2, 67, 117, 118], "avail": [2, 10, 17, 19, 21, 22, 23, 24, 25, 26, 27, 38, 105, 107, 109, 118, 119, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 167, 170, 178, 219, 230, 259, 262, 263, 264, 280, 284, 330, 445, 493, 494, 500, 506, 508, 510, 511, 512, 513, 514, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 572, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 624, 639, 648, 683, 699, 815, 816], "affect": [2, 12, 43, 61, 506, 508, 599, 777], "v": [2, 8, 9, 30, 46, 76, 77, 108, 110, 111, 112, 113, 114, 115, 116, 118, 127, 158, 160, 173, 181, 183, 198, 265, 323, 325, 333, 334, 343, 377, 381, 384, 387, 444, 449, 517, 522, 523, 524, 526, 530, 531, 532, 538, 539, 542, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 571, 576, 597, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 671, 688, 782, 806, 807, 808, 809], "voltag": [2, 3, 8, 9, 17, 18, 19, 20, 44, 283, 286, 292, 309, 310, 311, 312, 314, 317, 318, 321, 325, 333, 334, 342, 343, 344, 345, 346, 352, 381, 382, 383, 384, 385, 386, 391, 392, 398, 399, 400, 401, 402, 408, 409, 410, 411, 412, 444, 445, 446, 447, 448, 449, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 483, 488, 489, 494, 496, 498, 501, 502, 511, 514, 521, 522, 523, 524, 526, 530, 532, 538, 539, 542, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 567, 571, 576, 579, 594, 596, 597, 600, 601, 607, 612, 613, 616, 617, 618, 619, 620, 624, 639, 641, 642, 643, 644, 645, 646, 648, 650, 651, 664, 665, 666, 667, 668, 669, 670, 685, 688, 689, 690, 691, 692, 694, 695, 773, 778, 782, 815], "represent": [2, 3, 8, 17, 18, 19, 449, 501, 502, 624, 641, 642, 643, 644, 645, 646], "balanc": [2, 3, 7, 20, 67, 75, 283, 286, 314, 348, 350, 351, 353, 354, 356, 358, 360, 363, 365, 367, 371, 372, 373, 374, 375, 380, 382, 383, 385, 386, 445, 554, 555, 560, 624, 641, 642, 643, 644, 645, 646, 654, 655, 661, 662, 665, 667, 669, 796, 815], "experiment": [2, 75, 500, 624], "come": [2, 17, 20, 445, 526, 787], "These": [2, 3, 7, 17, 19, 39, 43, 61, 106, 108, 199, 210, 211, 260, 280, 449, 507, 517, 532, 545, 774, 775, 776, 777], "summar": [2, 4, 6, 9, 17, 18, 19, 20, 21, 43, 120], "assign": [2, 4, 8, 17, 30, 76, 107, 117, 127, 158, 160, 173, 179, 198, 265, 286, 287, 288, 292, 293, 347, 348, 349, 352, 446, 447, 448, 505, 506, 532, 545, 597, 598, 640, 700], "exp": [2, 12, 500, 624, 816], "must": [2, 8, 12, 17, 19, 32, 40, 43, 61, 63, 67, 108, 109, 112, 113, 117, 118, 119, 124, 125, 126, 157, 159, 162, 170, 172, 197, 217, 218, 219, 220, 271, 284, 285, 286, 289, 292, 293, 342, 343, 344, 345, 346, 347, 376, 444, 449, 493, 505, 506, 508, 517, 578, 596, 597, 600, 601, 604, 610, 611, 612, 613, 615, 618, 673, 693, 774], "sinc": [2, 7, 8, 12, 17, 19, 27, 44, 115, 117, 118, 122, 171, 191, 192, 193, 194, 284, 505, 506, 527], "doe": [2, 6, 7, 8, 19, 43, 107, 117, 164, 166, 169, 225, 261, 292, 348, 376, 493, 505, 510, 527, 578, 605, 611, 612, 618, 624, 672, 674, 696, 782], "recogn": [2, 526], "dmc_element_class": [2, 18, 341, 501, 502, 504], "dm_element_class": [2, 18, 341, 501, 502, 504], "nm_element_class": [2, 18, 341, 501, 502], "mm_element_class": [2, 12, 18, 341, 501, 502, 503, 504], "exclude_el": 2, "exclud": [2, 777], "char": [2, 14, 15, 16, 17, 30, 31, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 127, 158, 160, 172, 173, 198, 199, 211, 262, 265, 269, 271, 272, 274, 275, 283, 286, 289, 290, 292, 293, 340, 341, 342, 344, 345, 346, 347, 376, 444, 449, 493, 640, 682], "framework": [2, 5, 6, 12, 21, 281, 341, 495, 497, 499, 511, 512, 513, 514, 516, 783], "api": [2, 17, 39, 341, 569, 602, 648, 649], "bundl": [2, 44, 341], "togeth": [2, 17, 19, 111, 118, 341, 517], "packag": [2, 6, 15, 17, 18, 21, 279, 341, 495, 497, 499, 516, 624, 639, 640, 648, 774, 775, 776, 777], "xt_reserv": [2, 18, 281, 341, 515, 803], "co": [2, 148, 283, 776], "fix": [2, 17, 18, 67, 95, 117, 162, 188, 190, 341, 401, 498, 504, 515, 519, 532, 599, 604, 664, 665, 666, 667, 676, 688, 693, 699, 706, 776, 778], "zonal": [2, 18, 67, 331, 341, 504, 515, 693, 776], "standard": [2, 7, 17, 19, 20, 32, 40, 63, 64, 65, 67, 109, 110, 111, 112, 113, 114, 115, 116, 163, 164, 165, 166, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 210, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 283, 284, 286, 292, 493, 518, 526, 545, 577, 578, 657, 699, 778], "toggle_reserv": [2, 515, 518, 686, 687, 693, 783], "run_opf_w_r": 2, "7": [2, 8, 12, 17, 18, 20, 31, 32, 43, 67, 107, 108, 118, 139, 146, 163, 164, 165, 166, 167, 168, 169, 181, 212, 279, 348, 526, 596, 597, 600, 601, 624, 639, 783, 784, 816], "earlier": [2, 117, 526, 783, 816], "To": [2, 12, 13, 17, 18, 20, 44, 107, 117, 118, 162, 172, 179, 310, 313, 314, 316, 319, 320, 322, 324, 327, 328, 329, 335, 336, 337, 339, 506, 816], "you": [2, 3, 6, 9, 13, 17, 19, 38, 59, 61, 78, 79, 80, 81, 105, 107, 108, 117, 118, 170, 259, 279, 284, 505, 506, 507, 508, 527, 613, 816], "mpx": [2, 12, 17, 18, 20, 283, 341, 493, 494, 498, 509, 511, 512, 513, 514], "veri": [2, 75, 505, 570], "nine": [2, 816], "five": [2, 20, 501, 791], "someth": [2, 17, 78, 79, 80, 81, 107, 117, 118, 124, 125, 126, 157, 159, 170, 197, 202, 279, 292, 533, 780], "complex": [2, 9, 17, 19, 271, 343, 344, 444, 445, 446, 447, 449, 494, 530, 532, 538, 539, 542, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 571, 576, 579, 616, 617, 618, 624, 641, 642, 643, 644, 645, 646, 664, 666, 668, 688, 782, 815], "phase": [2, 3, 18, 21, 283, 286, 295, 297, 298, 301, 302, 306, 308, 309, 312, 313, 315, 316, 318, 319, 323, 324, 326, 327, 334, 335, 338, 339, 341, 397, 398, 399, 406, 407, 408, 409, 410, 411, 412, 414, 415, 428, 429, 437, 438, 442, 443, 456, 457, 458, 462, 463, 464, 466, 467, 468, 478, 480, 486, 491, 501, 515, 526, 596, 612, 787, 788, 789, 790, 791, 792, 793, 794, 796, 812], "load": [2, 3, 4, 17, 18, 19, 20, 44, 48, 60, 61, 62, 63, 64, 65, 75, 82, 106, 107, 108, 118, 172, 283, 286, 287, 292, 302, 303, 325, 326, 327, 328, 329, 334, 417, 430, 431, 432, 433, 444, 479, 480, 481, 482, 483, 484, 493, 500, 501, 509, 519, 522, 523, 524, 526, 554, 577, 578, 599, 601, 603, 604, 605, 606, 609, 616, 617, 624, 648, 680, 688, 699, 773, 777, 778, 787], "term": [2, 8, 12, 17, 19, 27, 110, 111, 112, 113, 114, 115, 117, 118, 123, 214, 217, 218, 219, 220, 284, 309, 321, 343, 344, 345, 445, 526, 596, 600, 775], "pleas": [2, 17, 19, 21, 27, 38, 44, 45, 46, 82, 83, 84, 85, 105, 115, 117, 118, 122, 159, 259, 279, 575, 622, 684, 702, 706, 707, 708, 709, 710, 711, 712, 795, 816], "xt_3p": [2, 18, 20, 281, 283, 341, 515], "input": [3, 4, 6, 11, 12, 14, 15, 16, 17, 20, 27, 30, 31, 32, 40, 41, 42, 43, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 77, 81, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 262, 265, 266, 269, 271, 272, 273, 274, 275, 282, 283, 284, 286, 289, 291, 292, 293, 340, 341, 342, 343, 344, 345, 346, 347, 348, 376, 418, 444, 445, 446, 447, 448, 449, 493, 494, 495, 497, 499, 500, 508, 509, 511, 512, 513, 514, 515, 517, 518, 521, 522, 523, 524, 527, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 563, 564, 566, 569, 570, 572, 575, 579, 596, 597, 600, 601, 602, 604, 605, 606, 613, 618, 620, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 661, 662, 664, 665, 666, 667, 668, 669, 676, 677, 678, 679, 680, 681, 682, 683, 685, 688, 689, 690, 691, 692, 693, 694, 695, 698, 699, 774, 775, 776, 777, 780], "output": [3, 4, 6, 13, 14, 16, 19, 27, 30, 31, 32, 40, 41, 42, 43, 60, 62, 63, 64, 65, 66, 67, 75, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 265, 269, 271, 272, 273, 275, 276, 279, 282, 283, 284, 286, 288, 289, 292, 293, 317, 318, 320, 341, 342, 343, 344, 345, 346, 348, 376, 390, 393, 394, 395, 397, 401, 402, 403, 404, 405, 414, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 493, 495, 497, 498, 499, 500, 503, 508, 509, 511, 512, 513, 514, 515, 517, 518, 519, 521, 526, 527, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 563, 564, 566, 571, 572, 575, 576, 579, 601, 606, 616, 621, 624, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 661, 662, 664, 665, 666, 667, 668, 669, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 688, 689, 690, 691, 692, 693, 694, 695, 698, 775, 776, 777, 779, 780, 782, 810], "present": [3, 17, 65, 67, 116, 118, 269, 275, 278, 286, 517, 596, 597, 600, 601, 613, 616, 777], "encapsul": [3, 8, 107, 118, 286, 292, 449, 517], "primarili": [3, 4, 7, 8, 286, 289, 444, 566], "class": [3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 172, 259, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 512, 515, 516, 517, 786], "data_model": [3, 281, 287, 288, 289, 292, 293, 341, 348, 376, 444, 445, 448, 449, 493, 495, 497, 499, 509, 515, 798], "therefor": [3, 4, 7, 8, 44, 292, 348, 444, 446, 447, 448, 577, 578], "data_model_cpf": [3, 281, 515], "target": [3, 67, 201, 205, 212, 494, 511, 530, 532, 547, 548, 549, 624, 688, 699], "cost": [3, 17, 19, 27, 32, 40, 41, 42, 46, 57, 67, 82, 107, 108, 111, 112, 114, 115, 117, 118, 162, 163, 164, 165, 166, 167, 168, 169, 190, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 284, 285, 291, 299, 317, 320, 322, 330, 348, 376, 377, 416, 417, 419, 423, 434, 492, 497, 504, 517, 518, 526, 527, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 567, 568, 594, 595, 598, 599, 610, 621, 623, 624, 648, 649, 657, 658, 672, 673, 674, 693, 699, 776, 777, 779, 780, 815], "nodal": [3, 7, 17, 286, 314, 356, 367, 445, 512, 513, 554, 555, 560, 624, 641, 642, 643, 644, 645, 646, 815], "price": [3, 7, 17, 67, 75, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 163, 164, 165, 166, 167, 168, 169, 286, 310, 314, 320, 322, 330, 331, 332, 358, 360, 363, 365, 389, 391, 504, 512, 513, 564, 624, 639, 647, 648, 693, 775, 776, 777, 781, 815], "shadow": [3, 7, 17, 75, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 310, 314, 320, 322, 330, 332, 389, 391, 564, 647, 648, 693, 775, 776, 777, 781], "contraint": [3, 19, 113], "By": [3, 4, 7, 8, 11, 17, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 286, 289, 292, 293, 341, 348, 376, 444, 449, 505, 816], "begin": [3, 4, 7, 8, 9, 17, 19, 27, 63, 67, 79, 107, 117, 118, 161, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 206, 212, 213, 221, 266, 286, 289, 292, 293, 341, 343, 346, 348, 376, 444, 449, 493, 529, 569, 598, 611, 612, 613, 615, 618, 680, 683], "initi": [3, 4, 7, 8, 17, 19, 27, 44, 66, 67, 107, 108, 116, 117, 118, 199, 212, 266, 279, 286, 289, 290, 292, 293, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 333, 334, 338, 348, 398, 399, 400, 401, 402, 403, 407, 415, 416, 423, 429, 438, 443, 444, 445, 446, 447, 498, 517, 518, 526, 532, 565, 571, 576, 594, 596, 600, 604, 624, 641, 642, 643, 644, 645, 646, 648, 649, 782], "proce": [3, 7, 8, 286, 780], "stage": [3, 4, 7, 8, 63, 67, 107, 118, 163, 164, 165, 166, 167, 168, 169, 212, 286, 289, 292, 518, 578, 686, 687, 780], "everi": 3, "read": [3, 676, 677, 678, 679, 680, 681, 682, 683], "count": [3, 7, 8, 17, 20, 199, 271, 272, 274, 286, 292, 449, 530, 532], "determin": [3, 5, 7, 8, 11, 17, 19, 31, 107, 109, 110, 111, 112, 113, 114, 115, 118, 167, 184, 194, 202, 210, 212, 219, 220, 230, 262, 286, 292, 348, 493, 506, 508, 545, 580, 606, 624, 676, 680, 699, 700, 777], "number": [3, 4, 6, 7, 8, 9, 17, 19, 27, 30, 31, 32, 43, 61, 63, 75, 76, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 126, 127, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 180, 181, 182, 183, 184, 187, 191, 192, 193, 198, 210, 212, 223, 228, 231, 262, 265, 266, 273, 274, 283, 284, 286, 292, 293, 311, 343, 346, 347, 444, 449, 498, 517, 519, 520, 521, 526, 545, 569, 571, 572, 576, 579, 595, 596, 597, 598, 599, 600, 601, 602, 607, 610, 611, 612, 613, 614, 615, 618, 624, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 676, 680, 681, 682, 685, 688, 693, 774, 776, 777, 782], "instanc": [3, 5, 8, 11, 17, 19, 172, 282, 286, 292, 449, 686], "store": [3, 7, 8, 17, 19, 61, 67, 79, 107, 109, 110, 111, 113, 116, 117, 118, 286, 292, 340, 343, 344, 345, 347, 449, 505, 506, 517, 568, 569, 595, 599, 774, 775, 776, 777], "nr": [3, 17, 19, 43, 292, 293, 624], "onlin": [3, 7, 8, 17, 19, 286, 292, 317, 318, 321, 330, 331, 376, 449, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 777], "statu": [3, 17, 18, 19, 20, 37, 75, 81, 103, 164, 192, 223, 225, 228, 232, 258, 277, 286, 292, 520, 526, 569, 596, 600, 601, 624, 639, 648, 774, 775, 776, 777, 814], "map": [3, 8, 19, 60, 108, 117, 212, 283, 286, 292, 293, 331, 340, 347, 348, 444, 504, 602, 775], "id": [3, 4, 9, 17, 18, 19, 20, 61, 286, 292, 309, 315, 317, 318, 321, 323, 325, 326, 330, 333, 334, 338, 444, 680, 681], "row": [3, 4, 8, 9, 17, 19, 31, 41, 42, 43, 60, 61, 80, 81, 110, 113, 114, 115, 118, 123, 180, 181, 182, 184, 187, 212, 284, 286, 292, 293, 309, 311, 314, 317, 318, 321, 323, 325, 326, 330, 332, 333, 334, 338, 444, 449, 505, 506, 517, 519, 526, 567, 568, 581, 594, 595, 599, 603, 615, 621, 623, 624, 639, 652, 653, 674, 688, 699, 774, 775, 777, 778, 779], "id2i": [3, 17, 19, 292], "criteria": [3, 286, 292, 688], "indic": [3, 4, 9, 11, 17, 19, 40, 41, 42, 43, 61, 64, 67, 78, 79, 80, 81, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 174, 175, 177, 178, 199, 200, 201, 202, 211, 212, 284, 286, 292, 293, 299, 317, 318, 321, 340, 342, 343, 346, 347, 348, 444, 445, 449, 498, 508, 517, 522, 523, 524, 526, 529, 530, 532, 533, 535, 537, 538, 539, 541, 542, 544, 546, 547, 549, 551, 565, 566, 567, 569, 570, 571, 573, 574, 576, 594, 596, 597, 598, 599, 600, 601, 604, 606, 607, 608, 609, 615, 639, 641, 642, 643, 644, 645, 646, 652, 653, 657, 674, 680, 681, 682, 683, 775, 777, 782], "n": [3, 4, 9, 12, 17, 19, 31, 43, 60, 61, 64, 65, 104, 107, 108, 111, 112, 113, 116, 117, 118, 119, 121, 123, 163, 165, 166, 167, 180, 182, 184, 187, 212, 284, 286, 291, 292, 343, 344, 345, 347, 416, 423, 444, 449, 505, 517, 526, 559, 560, 561, 562, 567, 569, 594, 598, 624, 639, 648, 649, 775, 780], "off": [3, 17, 18, 19, 20, 262, 283, 292, 309, 338, 519, 526, 569, 594, 596, 602, 694, 774, 775, 776, 777], "i2on": [3, 17, 292], "extract": [3, 4, 7, 17, 62, 107, 117, 118, 279, 286, 292, 293, 323, 376, 389, 391, 449, 495, 497, 499, 505, 570, 680, 683], "calcul": [3, 286, 292, 521, 619, 620], "origin": [3, 4, 16, 17, 44, 107, 108, 269, 275, 283, 286, 292, 568, 569, 602, 777, 796], "p": [3, 9, 12, 17, 18, 20, 31, 107, 109, 110, 111, 113, 116, 118, 167, 207, 208, 209, 284, 285, 286, 292, 309, 311, 312, 314, 315, 317, 318, 321, 325, 326, 330, 331, 333, 334, 338, 346, 418, 449, 526, 527, 530, 532, 538, 547, 578, 581, 596, 597, 598, 600, 601, 611, 612, 616, 617, 618, 624, 639, 652, 673, 699, 775, 787], "few": [3, 4, 7, 8, 17, 20], "per": [3, 7, 8, 12, 17, 19, 20, 65, 75, 283, 284, 286, 309, 321, 323, 376, 410, 434, 449, 450, 455, 456, 462, 465, 466, 473, 478, 479, 480, 485, 486, 491, 504, 519, 579, 604, 613, 616, 624, 639, 657], "unit": [3, 6, 7, 9, 17, 20, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 58, 60, 64, 67, 73, 74, 78, 79, 80, 81, 98, 99, 101, 162, 279, 283, 284, 286, 309, 310, 314, 320, 321, 322, 330, 331, 526, 578, 596, 597, 600, 601, 603, 613, 616, 624, 639, 657, 691, 695, 780], "mva": [3, 18, 20, 286, 309, 310, 526, 534, 596, 601, 624, 639, 679, 688], "found": [3, 12, 17, 19, 20, 21, 62, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 200, 201, 260, 284, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 537, 549, 590, 682, 683, 784, 816], "base_mva": [3, 17, 286, 417], "distribut": [3, 17, 20, 148, 162, 279, 283, 323, 501, 522, 614, 619, 624, 764], "kva": [3, 20, 283, 286, 338], "base_kva": [3, 20, 286, 338], "pretty_print": [3, 17, 286, 292, 310, 320, 322, 323, 338], "pretti": [3, 11, 19, 286, 288, 292, 310, 313, 314, 316, 319, 320, 322, 324, 327, 329, 332, 335, 337, 339, 493, 511, 512, 513, 514, 518, 624, 639, 688, 689, 690, 691, 692, 694, 695, 810], "text": [3, 21, 212, 269, 286, 516, 680, 688], "consol": [3, 11, 75, 286, 292], "control": [3, 17, 27, 75, 107, 118, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 278, 286, 292, 311, 312, 493, 526, 588, 624, 639, 675], "cnt": [3, 17, 274, 286, 292], "total": [3, 8, 17, 18, 20, 43, 67, 108, 116, 117, 118, 162, 212, 286, 292, 325, 330, 333, 444, 449, 498, 517, 526, 578, 579, 596, 598, 601, 693, 699, 776, 777, 778, 779], "sum": [3, 17, 78, 79, 162, 181, 284, 286, 292, 579, 615, 657, 658, 778], "amount": [3, 108, 286, 570, 624, 639, 699, 777], "capac": [3, 18, 44, 104, 162, 286, 330, 504], "loss": [3, 17, 18, 20, 286, 309, 311, 321, 526, 579, 596, 597, 600], "ext": [3, 17, 286, 292, 569, 595], "extrem": [3, 17, 285, 286, 292], "min": [3, 7, 12, 17, 18, 27, 32, 65, 67, 78, 161, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 286, 526, 597, 601], "max": [3, 7, 12, 17, 18, 20, 27, 32, 63, 75, 78, 161, 213, 221, 223, 286, 292, 519, 534, 606, 624, 639, 693, 699, 776, 778], "det": [3, 17, 286, 292], "dispatch": [3, 12, 17, 44, 68, 75, 78, 79, 82, 283, 286, 417, 511, 512, 513, 514, 519, 577, 578, 599, 603, 604, 606, 609, 657, 699, 777, 778], "dm_element": [3, 17, 18, 19, 281, 286, 293, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338, 341, 376, 449, 515], "where": [3, 4, 6, 7, 8, 9, 13, 17, 19, 27, 32, 43, 44, 59, 61, 63, 64, 65, 78, 79, 80, 81, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 161, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 184, 187, 191, 192, 193, 194, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 269, 275, 279, 284, 286, 325, 340, 343, 346, 347, 348, 376, 444, 449, 506, 507, 508, 517, 519, 521, 526, 529, 532, 545, 559, 561, 566, 567, 569, 570, 577, 578, 579, 580, 594, 595, 598, 599, 602, 607, 608, 610, 614, 615, 623, 624, 643, 646, 650, 652, 675, 688, 693, 699, 700, 774, 775, 776, 777, 778, 780], "relationship": [3, 4, 6, 7, 8, 120, 444], "here": [3, 4, 6, 7, 8, 17, 18, 27, 43, 44, 61, 113, 118, 170, 191, 192, 193, 194, 199, 310, 314, 320, 322, 330, 331, 444, 526, 532, 552, 553, 554, 555, 556, 557, 569, 599, 602, 605], "dme_bu": [3, 19, 281, 314, 515], "dme_gen": [3, 19, 281, 320, 515], "dme_load": [3, 19, 281, 328, 329, 515], "while": [3, 8, 17, 19, 506, 526, 774], "least": [3, 6, 44, 342, 343, 344, 345, 346, 444, 506, 519, 693, 776, 780], "tab": [3, 12, 13, 17, 19, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 506, 511, 512, 513, 514], "column": [3, 4, 9, 17, 19, 27, 31, 43, 61, 63, 64, 65, 81, 110, 113, 114, 115, 116, 118, 181, 188, 189, 191, 192, 193, 194, 214, 215, 284, 292, 293, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338, 343, 346, 444, 449, 505, 506, 519, 526, 528, 565, 566, 567, 568, 571, 576, 581, 594, 595, 596, 597, 598, 599, 600, 601, 603, 605, 606, 607, 614, 615, 616, 621, 648, 649, 651, 652, 653, 655, 657, 658, 662, 665, 667, 669, 681, 682, 699, 774, 775, 777, 778, 779, 782], "attempt": [3, 62, 262, 506, 676, 680], "common": [3, 6, 8, 10, 17, 19, 44, 167, 184, 194, 212, 219, 230, 292, 527], "ctm": [3, 10], "uid": [3, 17, 19, 292, 309, 315, 317, 318, 321, 323, 325, 326, 330, 333, 334, 338], "posit": [3, 20, 205, 283, 526, 577, 578, 597, 604, 777], "integ": [3, 6, 14, 16, 17, 20, 27, 31, 32, 63, 67, 107, 108, 110, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 162, 163, 164, 165, 166, 167, 168, 169, 175, 178, 260, 266, 273, 274, 282, 283, 284, 286, 292, 293, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338, 342, 343, 344, 346, 347, 418, 444, 445, 446, 447, 449, 493, 495, 497, 498, 499, 508, 519, 526, 597, 624, 639, 681, 682], "serv": [3, 8, 17, 341], "uniqu": [3, 8, 17, 20, 108, 117, 211, 292, 323, 444], "string": [3, 17, 19, 40, 43, 61, 62, 63, 80, 81, 107, 117, 118, 119, 124, 125, 126, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 179, 181, 197, 223, 230, 262, 275, 292, 293, 508, 527, 532, 545, 546, 567, 568, 570, 572, 577, 578, 594, 595, 605, 624, 648, 649, 676, 677, 679, 680, 681, 682, 683, 688, 689, 690, 691, 692, 694, 695, 696, 697, 778], "source_uid": [3, 17, 19, 292], "record": [3, 20, 680, 682, 683], "besid": [3, 20], "vector": [3, 4, 7, 8, 9, 12, 17, 19, 22, 27, 31, 32, 40, 43, 60, 61, 63, 64, 65, 78, 79, 80, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 199, 204, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 271, 283, 284, 292, 293, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 333, 334, 338, 342, 343, 344, 345, 346, 347, 348, 418, 444, 445, 446, 447, 448, 449, 494, 517, 521, 522, 523, 524, 529, 530, 532, 536, 538, 539, 542, 546, 547, 552, 553, 554, 555, 556, 557, 559, 561, 565, 567, 569, 570, 571, 573, 574, 576, 579, 581, 594, 596, 602, 603, 604, 606, 607, 609, 610, 612, 615, 616, 617, 618, 620, 621, 623, 624, 639, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 661, 662, 664, 665, 666, 667, 668, 669, 673, 688, 699, 777, 778, 779, 782], "m": [3, 9, 13, 14, 16, 17, 18, 19, 20, 38, 41, 42, 60, 62, 63, 64, 75, 82, 105, 113, 121, 124, 125, 126, 157, 159, 170, 197, 259, 279, 323, 343, 344, 345, 347, 444, 449, 505, 508, 518, 519, 526, 538, 572, 579, 605, 688, 689, 690, 691, 692, 694, 695, 697, 698, 703, 704, 705, 706], "time": [3, 8, 9, 17, 19, 27, 43, 61, 63, 67, 75, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 121, 123, 213, 223, 225, 231, 279, 343, 346, 449, 493, 532, 545, 570, 624, 639, 648, 675, 688, 689, 690, 691, 692, 694, 695, 780], "largest": [3, 570], "n_r": 3, "enter": [3, 599], "gen": [3, 8, 12, 17, 18, 20, 40, 41, 42, 43, 61, 64, 65, 78, 80, 84, 85, 112, 114, 115, 286, 292, 293, 299, 317, 318, 330, 331, 376, 417, 418, 444, 449, 498, 503, 511, 512, 513, 514, 517, 519, 520, 526, 527, 528, 540, 543, 554, 555, 560, 564, 566, 567, 568, 569, 570, 581, 594, 595, 599, 601, 602, 603, 605, 606, 608, 609, 613, 616, 624, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 671, 675, 680, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 706, 774, 776, 777, 778, 780, 781], "singular": [3, 17, 19, 292], "plural": [3, 17, 19, 292], "charact": [3, 163, 164, 165, 166, 167, 168, 169, 269, 293, 578, 681, 682, 683], "might": [3, 117, 518], "seem": [3, 782], "logic": [3, 107, 108, 109, 110, 111, 113, 116, 262, 266, 269, 271, 272, 273, 275, 282, 283, 284, 286, 292, 293, 444, 449, 508], "constant": [3, 8, 9, 17, 19, 27, 61, 65, 78, 114, 115, 118, 170, 171, 214, 282, 284, 321, 325, 522, 523, 524, 526, 566, 596, 597, 598, 599, 600, 601, 609, 617, 624, 648], "instead": [3, 17, 27, 31, 32, 61, 107, 111, 115, 116, 117, 118, 122, 163, 164, 165, 167, 168, 169, 191, 192, 193, 194, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 599, 622, 624, 639, 684, 777], "prevent": [3, 266], "effect": 3, "preclud": 3, "main_table_var_nam": [3, 17, 19, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 333, 334, 338], "init_statu": [3, 292, 311, 312], "update_statu": [3, 17, 19, 286, 292, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338], "build_param": [3, 17, 19, 286, 292, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338, 444, 445, 448, 449, 451, 454, 462, 466, 469, 472, 474, 477, 478, 480, 481, 484, 486, 487, 490, 491], "As": [3, 11, 12, 17, 18, 20, 38, 105, 172, 259, 279], "node": [3, 7, 9, 17, 282, 292, 311, 312, 348, 350, 351, 353, 354, 358, 360, 363, 365, 371, 372, 373, 374, 375, 379, 387, 444, 445, 446, 447, 449, 455, 456, 498, 522, 523, 524, 529, 670, 805], "port": [3, 7, 8, 9, 17, 27, 292, 309, 321, 342, 343, 346, 444, 445, 448, 449, 450, 462, 465, 466, 473, 478, 479, 480, 485, 486, 491, 494], "hand": [3, 6, 7, 11, 17, 27, 32, 107, 110, 113, 118, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "inform": [3, 6, 8, 27, 41, 42, 107, 108, 117, 191, 192, 193, 194, 199, 202, 212, 259, 262, 280, 286, 289, 292, 293, 340, 341, 343, 344, 345, 348, 376, 444, 449, 493, 501, 502, 503, 504, 519, 525, 526, 527, 532, 533, 552, 553, 556, 558, 559, 560, 562, 564, 569, 608, 616, 647, 648, 674, 780, 816], "link": [3, 13, 17, 19, 20, 292, 501, 516, 774], "branch": [3, 6, 7, 17, 18, 20, 44, 61, 75, 283, 292, 294, 309, 310, 388, 389, 390, 391, 392, 393, 394, 395, 444, 450, 451, 452, 453, 454, 516, 517, 519, 521, 522, 523, 524, 526, 528, 529, 532, 534, 535, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 569, 570, 573, 574, 579, 594, 596, 599, 602, 605, 607, 611, 612, 613, 614, 615, 618, 620, 624, 639, 647, 648, 649, 650, 651, 652, 653, 670, 671, 675, 676, 679, 680, 688, 689, 690, 691, 692, 694, 695, 697, 775, 777, 780], "pair": [3, 78, 79, 80, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 444, 509, 511, 512, 513, 514, 624, 774], "context": [3, 9, 110, 111, 112, 113, 114, 115, 116, 118, 199, 210, 532, 545], "b": [3, 7, 9, 12, 17, 19, 20, 27, 31, 32, 113, 116, 118, 120, 121, 123, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 284, 333, 340, 346, 347, 408, 411, 416, 423, 444, 505, 526, 553, 554, 555, 556, 557, 559, 560, 561, 562, 565, 566, 570, 571, 580, 596, 597, 611, 612, 624, 699, 700, 778, 782, 815], "junction": [3, 292, 449], "could": [3, 17, 108, 117, 124, 125, 126, 157, 159, 170, 197, 552, 558, 688], "coupl": 3, "cxn_type": [3, 17, 19, 292, 309, 315, 317, 318, 321, 323, 325, 326, 333, 334, 338, 449], "cxn_idx_prop": [3, 17, 19, 292, 309, 315, 317, 318, 321, 323, 325, 326, 333, 334, 338, 449], "fbu": [3, 17, 20, 292, 309, 321, 323, 338, 449], "tbu": [3, 17, 20, 292, 309, 321, 323, 338, 449], "automat": [3, 4, 8, 11, 13, 17, 19, 82, 107, 108, 117, 118, 167, 184, 194, 212, 219, 220, 230, 286, 289, 292, 299, 347, 348, 444, 449, 493, 505, 516, 518, 526, 569, 570, 624, 639, 686], "had": [3, 44], "cxn_type_prop": [3, 292, 449], "built": [3, 7, 17, 19, 21, 27, 31, 38, 67, 105, 107, 118, 187, 259, 279, 284, 293, 505, 517, 572, 624, 673], "mp_tabl": [3, 17, 19, 281, 506, 510, 515, 801], "mp_table_class": [3, 506, 507, 515], "abil": [4, 6, 289, 291, 505], "dure": [4, 17, 44, 289, 292, 688], "dm_convert": [4, 281, 286, 290, 291, 292, 293, 341, 493, 495, 497, 499, 515], "6": [4, 12, 17, 18, 20, 27, 31, 32, 44, 79, 150, 153, 161, 163, 164, 165, 166, 167, 168, 169, 191, 206, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 293, 323, 444, 478, 491, 497, 519, 526, 596, 597, 600, 601, 624, 639, 706, 784], "yet": [4, 14, 16, 19, 38, 43, 105, 107, 111, 112, 117, 118, 175, 259, 266, 268, 271, 272, 274, 283, 510, 648, 816], "been": [4, 7, 17, 19, 82, 107, 117, 118, 120, 122, 200, 201, 202, 376, 498, 518, 520, 526, 532, 533, 537, 549, 567, 568, 624], "onc": [4, 7, 17, 19, 279, 376, 449, 518, 699], "readi": [4, 493], "loadcas": [4, 60, 515, 526, 685, 688, 689, 690, 691, 692, 694, 695, 728, 774, 783], "same": [4, 8, 17, 19, 27, 31, 44, 46, 63, 64, 65, 108, 113, 114, 115, 117, 171, 179, 181, 187, 199, 210, 211, 212, 283, 286, 287, 293, 347, 416, 444, 449, 518, 526, 527, 532, 545, 546, 570, 579, 615, 621, 624, 639, 693, 706, 707, 775, 778, 779, 794], "again": [4, 17, 19, 44, 778], "scratch": [4, 613], "need": [4, 8, 12, 17, 19, 43, 61, 65, 107, 110, 111, 112, 113, 114, 115, 117, 118, 162, 201, 212, 279, 287, 292, 293, 344, 345, 377, 495, 497, 499, 518, 527, 549, 569, 570, 572, 603, 612, 816], "dmc_element": [4, 17, 18, 281, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 341, 515, 797], "dmce": [4, 292, 293], "get_import_spec": [4, 293], "import_table_valu": [4, 293], "thing": [4, 17, 19], "interest": [4, 9, 11, 14, 16, 203, 284, 286, 342, 343, 344, 346, 418, 444, 445, 446, 447, 449, 519, 606, 657], "vmap": [4, 17, 293], "table_var_map": [4, 17, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "vn": [4, 17, 293, 295, 296, 299, 300, 303, 304, 305], "start": [4, 6, 13, 17, 27, 32, 107, 108, 110, 113, 117, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 347, 348, 354, 355, 494, 517, 526, 569, 598, 610, 624, 780, 816], "col": [4, 17, 20, 43, 61, 180, 182, 184, 187, 212, 284, 293, 444, 519, 775], "c": [4, 7, 8, 17, 19, 20, 27, 32, 65, 112, 114, 115, 116, 118, 161, 163, 164, 165, 166, 167, 168, 169, 185, 186, 206, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 284, 293, 295, 296, 323, 416, 423, 444, 449, 517, 526, 529, 578, 596, 600, 681, 682], "sf": [4, 293, 522, 523, 524, 534, 552, 558, 561, 647, 648], "sf_fcn": 4, "copi": [4, 17, 20, 77, 107, 108, 114, 115, 117, 118, 172, 179, 260, 286, 289, 292, 347, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "scale": [4, 9, 27, 31, 78, 79, 80, 81, 104, 153, 178, 187, 190, 202, 212, 216, 284, 293, 519, 533, 599, 623, 624, 699, 777, 782], "factor": [4, 20, 25, 31, 44, 61, 104, 190, 202, 212, 216, 293, 326, 417, 519, 526, 533, 599, 601, 609, 614, 624, 648, 699], "val": [4, 12, 17, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 211, 282, 293, 347, 505, 509, 511, 512, 513, 514, 546, 567, 594, 648], "num": [4, 17, 19, 678, 679, 680, 682], "scalar": [4, 9, 17, 19, 43, 61, 62, 64, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 211, 271, 283, 284, 347, 444, 526, 530, 532, 538, 539, 542, 546, 547, 570, 604, 615, 623, 624, 699, 778], "fcn": [4, 12, 17, 107, 108, 111, 112, 117, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 199, 202, 210, 211, 212, 517, 518, 532, 533, 545, 546, 598, 686], "ifn": 4, "efn": 4, "spec": [4, 12, 17, 210, 212, 269, 275, 293, 294, 295, 296, 299, 300, 304, 305, 376, 418], "ridx": [4, 17, 293, 296, 299, 300], "get_export_spec": [4, 293], "export_table_valu": [4, 293], "init_export_data": [4, 293, 296], "relev": [4, 7, 8, 12, 17, 20, 44, 67, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 202, 348, 376, 508, 777], "data_exist": [4, 293], "fals": [4, 14, 17, 31, 37, 78, 79, 80, 81, 103, 107, 108, 110, 111, 118, 199, 258, 262, 266, 269, 271, 272, 273, 275, 277, 278, 283, 292, 444, 532, 675, 688, 694, 814], "matrix": [4, 8, 9, 11, 17, 19, 20, 27, 31, 32, 40, 41, 42, 43, 50, 63, 64, 65, 81, 107, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 184, 187, 188, 189, 190, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 271, 284, 323, 331, 342, 343, 344, 346, 418, 444, 445, 449, 493, 515, 517, 526, 528, 529, 530, 532, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 567, 569, 571, 576, 581, 594, 596, 597, 598, 600, 601, 603, 605, 606, 607, 610, 613, 614, 615, 616, 618, 621, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 657, 661, 662, 678, 679, 682, 699, 774, 778, 779, 782, 815], "pdf": [5, 6, 10, 13, 38, 78, 79, 80, 81, 97, 98, 99, 101, 105, 259, 515, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 578, 815, 816], "introduct": [5, 260, 515], "notat": [5, 12, 120, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 815], "overview": [5, 6, 17, 19], "hierarchi": [5, 7, 17, 19], "custom": [5, 6, 12, 18, 19, 162, 212, 291, 341, 359, 361, 364, 366, 368, 377, 501, 502, 503, 504, 507, 570], "iter": [5, 20, 24, 27, 32, 168, 180, 181, 182, 183, 184, 187, 191, 192, 193, 199, 212, 223, 228, 231, 493, 494, 498, 522, 523, 524, 530, 532, 571, 576, 624, 639, 641, 642, 643, 644, 645, 646, 685, 688, 694, 782], "via": [5, 17, 20, 21, 60, 107, 111, 112, 118, 179, 191, 199, 210, 211, 219, 220, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 283, 285, 511, 513, 514, 518, 532, 545, 624, 639, 681, 682, 732, 767], "acknowledg": 5, "purpos": [6, 17, 117, 283, 285, 287, 288, 516], "wish": [6, 64, 65], "your": [6, 12, 18, 19, 21, 97, 98, 99, 101, 159, 171, 260, 279, 280, 506, 507, 508], "document": [6, 17, 18, 19, 20, 31, 38, 105, 124, 125, 126, 159, 163, 165, 166, 169, 191, 192, 193, 224, 226, 227, 228, 229, 232, 233, 259, 284, 516, 783, 784, 816], "languag": [6, 21], "scientif": 6, "commerci": 6, "product": [6, 113, 162, 552, 553, 554, 555, 556, 557], "mathwork": [6, 27, 32, 163, 165, 167, 168, 169, 181, 182, 183, 184, 187, 191, 192, 193, 194, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233], "free": [6, 21], "open": [6, 21, 109, 110, 111, 112, 113, 114, 115, 116, 162, 525, 676, 683], "relat": [6, 7, 8, 11, 12, 21, 108, 117, 291, 343, 344, 345, 493, 569, 590, 612, 720, 766], "softwar": [6, 21, 624], "git": 6, "subrepo": 6, "except": [6, 9, 17, 27, 32, 43, 67, 77, 107, 118, 124, 125, 126, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 287, 347, 526, 532, 572, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 652, 693, 777, 794], "howev": [6, 7, 11, 17, 19, 44, 506, 816], "download": [6, 21, 97, 98, 99, 101, 279], "zip": [6, 279, 325, 500, 616, 617, 773, 778], "releas": [6, 21, 30, 76, 127, 158, 160, 173, 198, 262, 265, 640], "depend": [6, 7, 8, 18, 61, 67, 77, 107, 109, 113, 116, 118, 162, 184, 212, 223, 278, 279, 283, 286, 289, 293, 343, 348, 449, 494, 496, 498, 501, 502, 518, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 568, 572, 610, 616, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 652, 681, 688, 773, 778], "mptest": [6, 279], "doc": [6, 10, 13, 14, 16, 21, 119, 125, 167, 170, 193, 197, 217, 218, 219, 220, 225, 232, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 815], "have_featur": [6, 22, 23, 24, 25, 26, 39, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 260, 263, 264, 270, 279, 280, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 816], "nonlinear": [6, 7, 8, 12, 17, 19, 21, 27, 28, 29, 39, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 140, 143, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 206, 212, 260, 291, 343, 418, 445, 481, 517, 624, 647, 648, 659, 660], "primal": [6, 27, 67, 107, 118, 163, 164, 165, 166, 167, 168, 169, 171, 194, 219, 220, 222, 230, 231, 586, 588, 624, 639, 648], "dual": [6, 27, 107, 118, 125, 146, 168, 171, 194, 219, 220, 222, 230, 231, 344, 586, 588, 624, 639, 648], "linear": [6, 7, 8, 9, 17, 24, 27, 31, 32, 34, 35, 39, 46, 67, 82, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 125, 130, 136, 148, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 180, 182, 184, 187, 191, 192, 193, 194, 212, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 284, 285, 291, 299, 321, 343, 346, 416, 419, 423, 517, 526, 564, 581, 598, 600, 607, 608, 609, 610, 623, 624, 639, 647, 648, 649, 650, 672, 777], "equat": [6, 7, 17, 19, 31, 107, 118, 174, 176, 180, 181, 182, 183, 184, 185, 186, 187, 206, 212, 260, 589, 624, 641, 642, 643, 644, 645, 646, 648], "easi": [6, 17, 60], "unifi": [6, 8, 10, 260, 815], "lp": [6, 107, 118, 128, 136, 145, 147, 161, 177, 178, 225, 230, 257, 259, 515, 624, 639], "qp": [6, 7, 12, 32, 36, 39, 67, 75, 107, 118, 128, 147, 151, 152, 164, 166, 169, 177, 178, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 253, 257, 259, 515, 624, 639, 767], "mix": [6, 7, 67, 107, 118, 162, 163, 164, 165, 166, 167, 168, 169, 175, 178, 260, 340, 342, 343, 344, 345, 346, 348, 623], "switch": [6, 12, 17, 18, 19, 676], "chang": [6, 12, 18, 20, 21, 43, 44, 46, 61, 63, 107, 116, 118, 202, 498, 501, 502, 507, 508, 519, 532, 533, 541, 544, 546, 566, 569, 577, 578, 599, 698, 715, 777], "unsupport": [6, 496], "separ": [6, 17, 19, 79, 113, 279, 508], "resourc": 6, "sphinx": [6, 13, 14, 16, 21], "perman": [6, 508], "master": [6, 14, 16, 43, 61, 63, 259, 516], "latest": [6, 125, 170], "stabl": 6, "unreleas": [6, 21], "hopefulli": 6, "tag": [6, 22, 23, 24, 25, 26, 108, 110, 111, 112, 113, 114, 115, 116, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 262, 263, 264, 286, 288, 289, 290, 341, 342, 348, 449, 493, 496, 498, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593], "becaus": [6, 17, 19, 44, 75, 506, 602, 774], "intend": [6, 39, 111, 117, 118, 202, 260, 269, 271, 272, 274, 275, 280, 292, 507, 517, 533], "unmodifi": 6, "stick": 6, "syntax": [6, 22, 27, 32, 119, 124, 125, 126, 129, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 197, 210, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 284, 285, 505, 506, 648, 649, 688, 689, 690, 691, 692, 693, 694, 695, 780], "classdef": [6, 12, 17, 18, 19, 172], "obj": [6, 12, 17, 18, 19, 27, 32, 116, 117, 172, 284, 292, 340, 347, 376, 444, 506, 648], "namespac": 6, "produc": [6, 43, 162, 526], "html": [6, 13, 21, 119, 125, 167, 170, 192, 193, 197, 217, 218, 219, 220, 228, 232], "what": [6, 9, 111, 118, 201, 549, 624, 639, 673, 675], "hint": 6, "click": 6, "icon": [6, 516], "upper": [6, 12, 17, 18, 27, 32, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 309, 310, 311, 314, 317, 320, 321, 322, 330, 344, 444, 516, 526, 541, 544, 551, 564, 581, 596, 597, 600, 601, 608, 624, 647, 648, 650, 651, 693, 775, 776, 777, 781], "right": [6, 8, 9, 13, 17, 19, 27, 32, 107, 110, 113, 118, 161, 163, 164, 165, 166, 167, 168, 169, 185, 186, 191, 192, 193, 194, 206, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 343, 346, 516], "corner": 6, "page": [6, 157, 197, 279, 516, 524], "cover": 6, "autom": 6, "contributor": 6, "guid": [6, 12, 17, 18, 19, 20, 167], "form": [7, 8, 9, 12, 17, 18, 31, 63, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 172, 187, 199, 210, 211, 214, 216, 269, 275, 279, 281, 323, 343, 344, 345, 346, 348, 398, 399, 400, 401, 402, 403, 407, 410, 415, 416, 423, 429, 438, 443, 444, 445, 446, 447, 448, 449, 492, 515, 517, 532, 545, 558, 559, 560, 561, 562, 564, 569, 578, 602, 613, 624, 647, 648, 649, 650, 778, 780], "x": [7, 8, 9, 17, 19, 20, 25, 26, 27, 31, 32, 43, 64, 65, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 134, 153, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 274, 284, 292, 309, 323, 338, 343, 344, 346, 348, 356, 374, 377, 381, 382, 383, 384, 385, 386, 387, 418, 444, 445, 449, 481, 497, 506, 517, 521, 522, 526, 530, 532, 547, 552, 553, 554, 555, 556, 557, 564, 575, 579, 596, 606, 610, 614, 615, 616, 617, 623, 624, 639, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 688, 693, 774, 775, 776, 777, 778, 816], "rvec": [7, 9, 12, 27, 32, 114, 115, 120, 161, 185, 186, 206], "f": [7, 8, 9, 27, 32, 75, 107, 110, 112, 113, 114, 115, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 206, 212, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 284, 292, 374, 377, 497, 517, 522, 523, 524, 526, 552, 556, 559, 561, 564, 572, 579, 596, 598, 600, 619, 620, 623, 624, 639, 647, 648, 657, 658, 673, 675, 681, 682, 689, 691, 692, 695, 780], "param": [7, 9, 12, 17, 19, 27, 32, 44, 109, 110, 111, 112, 113, 114, 115, 116, 118, 125, 161, 170, 213, 221, 321, 342], "rmat": [7, 9, 12, 27, 113, 161, 213], "trace": [7, 201, 205, 206, 212, 260, 549, 624, 688], "curv": [7, 199, 200, 201, 204, 205, 209, 212, 284, 317, 418, 503, 526, 527, 532, 536, 537, 548, 549, 581, 601, 608, 624, 639, 648, 688, 781], "parameter": [7, 107, 118, 199, 201, 206, 207, 208, 209, 212, 260, 287, 328, 336, 530, 532, 538, 539, 547, 549, 624, 688], "lambda": [7, 17, 18, 27, 32, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 163, 164, 165, 166, 167, 168, 169, 190, 191, 192, 193, 194, 201, 204, 205, 206, 207, 208, 209, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 287, 328, 336, 452, 494, 527, 530, 532, 536, 538, 539, 542, 547, 548, 549, 624, 648, 651, 653, 655, 660, 662, 665, 667, 669, 688], "vari": [7, 118, 292, 518], "constrain": [7, 17, 27, 29, 67, 82, 107, 118, 163, 164, 165, 166, 167, 168, 169, 177, 196, 209, 213, 217, 218, 219, 220, 260, 648, 649, 652, 653], "min_": [7, 27, 29, 32, 161, 196, 213, 221], "textrm": [7, 9, 113, 213], "qquad": 7, "h": [7, 12, 17, 21, 27, 32, 78, 79, 80, 81, 107, 111, 114, 115, 118, 163, 164, 165, 166, 167, 168, 169, 188, 190, 191, 192, 193, 194, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 286, 292, 343, 418, 445, 517, 522, 526, 608, 614, 615, 648, 649, 652, 780], "le": [7, 12, 17, 19, 27, 29, 32, 110, 111, 113, 120, 161, 196, 213, 221], "_": [7, 8, 9, 12, 27, 32, 113, 161, 213, 221, 445], "quadrat": [7, 17, 32, 46, 107, 108, 113, 114, 115, 117, 118, 123, 163, 164, 165, 166, 167, 168, 169, 177, 178, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 284, 517, 527, 624, 648, 649], "tran": [7, 9, 12, 32, 110, 111, 112, 113, 114, 115, 161, 213, 221], "q": [7, 9, 12, 17, 18, 31, 113, 114, 115, 118, 123, 217, 218, 219, 220, 284, 325, 333, 416, 418, 423, 498, 581, 624, 639, 683, 782], "k": [7, 9, 17, 19, 107, 114, 115, 116, 117, 118, 181, 199, 200, 201, 212, 284, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 332, 333, 334, 338, 346, 352, 416, 423, 444, 449, 505, 517, 532, 535, 537, 541, 544, 549, 551, 570, 577, 578, 615, 688, 699, 717, 718, 778], "l": [7, 17, 19, 27, 31, 32, 108, 110, 113, 117, 118, 120, 121, 122, 123, 161, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 291, 321, 343, 344, 345, 517, 526, 564, 581, 608, 647, 648, 649, 693, 775, 776, 780], "math_model": [7, 281, 286, 341, 355, 369, 376, 444, 449, 493, 495, 497, 499, 515], "opt_model": [7, 67, 109, 115, 117, 206, 213, 221, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 259, 260, 348, 444, 517, 564, 658], "mp_idx_manag": [7, 8, 107, 118, 259, 260, 342, 348, 444, 445, 446, 447, 448], "nonzero": [7, 8], "auxiliari": [7, 343, 344, 345, 348], "appropri": [7, 9, 13, 17, 19, 27, 107, 118, 172, 262, 289, 342, 343, 526, 570, 605, 611, 612, 618, 699, 774], "characterist": 7, "mm_element": [7, 12, 17, 18, 281, 292, 341, 348, 388, 396, 397, 406, 413, 414, 422, 428, 430, 434, 435, 436, 437, 442, 449, 515], "mme": [7, 376, 418, 449], "nme_bus_pf_acp": 7, "nme_bus_opf_acp": 7, "And": [7, 12, 19, 20, 501, 502], "similar": [7, 17, 44, 526, 558, 559, 561, 780], "mme_gen": [7, 281, 416, 420, 421, 515], "similarli": [7, 8, 12, 108, 111], "inject": [7, 9, 12, 17, 18, 19, 20, 309, 321, 322, 323, 333, 334, 338, 343, 344, 345, 346, 379, 387, 418, 444, 445, 448, 494, 526, 530, 532, 547, 554, 557, 562, 565, 567, 571, 576, 579, 594, 596, 597, 600, 608, 612, 613, 615, 616, 618, 620, 641, 642, 643, 644, 645, 646, 648, 782], "aggreg": [7, 44, 78, 79, 110, 113, 114, 115, 116, 118, 343, 346, 445, 448, 449, 492, 517], "piecewis": [7, 17, 284, 285, 299, 416, 419, 423, 526, 598, 623, 624, 639, 672], "angl": [7, 8, 9, 18, 20, 309, 310, 311, 312, 343, 344, 345, 346, 389, 391, 392, 393, 401, 445, 446, 447, 448, 449, 452, 498, 514, 521, 526, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 567, 571, 576, 579, 594, 596, 597, 607, 612, 613, 624, 639, 641, 642, 643, 644, 645, 646, 648, 650, 651, 668, 669, 782], "mme_branch": [7, 281, 389, 394, 395, 515], "sens": 7, "respons": [7, 17, 292], "data_model_update_off": [7, 376], "zero": [7, 8, 9, 17, 19, 27, 32, 41, 42, 46, 60, 110, 113, 114, 115, 118, 119, 124, 126, 159, 163, 164, 165, 166, 168, 169, 170, 188, 190, 202, 203, 211, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 286, 342, 449, 517, 520, 526, 527, 528, 529, 532, 533, 541, 544, 546, 553, 596, 601, 607, 615, 616, 619, 624, 639, 699, 700, 778], "out": [7, 12, 17, 20, 32, 106, 163, 164, 165, 166, 167, 168, 169, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 268, 286, 288, 496, 519, 520, 521, 525, 526, 527, 541, 544, 573, 596, 600, 601, 605, 624, 675], "data_model_update_on": [7, 17, 376, 390, 393, 394, 395, 397, 401, 402, 403, 404, 405, 414, 417, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442], "differnt": 7, "avoid": [7, 13, 67, 107, 118, 163, 164, 165, 166, 167, 168, 169, 202, 570], "duplic": [7, 107, 108, 114, 115, 117, 118, 286, 289, 292, 347], "mm_shared_": 7, "evalu": [7, 12, 27, 110, 111, 112, 113, 114, 115, 116, 118, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 212, 214, 215, 216, 272, 284, 344, 345, 377, 494, 517, 552, 616, 621, 650, 651, 652, 653, 654, 655, 657, 658, 661, 662, 664, 665, 666, 667, 668, 669, 672, 673, 779], "jacobian": [7, 9, 12, 27, 107, 111, 113, 118, 180, 181, 182, 184, 187, 188, 191, 192, 193, 194, 207, 208, 209, 212, 214, 343, 344, 345, 418, 445, 613, 624, 643, 646, 648, 652], "put": [7, 17, 19], "kei": [8, 117, 292, 293], "modular": [8, 262], "deriv": [8, 21, 111, 112, 114, 115, 118, 180, 182, 184, 187, 212, 284, 342, 343, 344, 345, 346, 356, 452, 515, 517, 530, 532, 539, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 579, 616, 624, 639, 648, 657, 658, 673, 724, 726, 806, 807, 808, 809], "featur": [8, 11, 22, 23, 24, 25, 26, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 212, 262, 263, 264, 505, 515, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 624, 816], "fulli": [8, 117, 162, 816], "captur": 8, "oper": [8, 9, 17, 27, 31, 63, 107, 113, 118, 151, 162, 187, 279, 449, 569, 602, 624], "condit": [8, 27, 32, 44, 59, 63, 67, 272, 279, 624, 639], "non": [8, 9, 17, 19, 27, 46, 60, 65, 67, 78, 118, 119, 124, 126, 159, 170, 180, 182, 184, 187, 188, 190, 212, 217, 218, 220, 283, 291, 342, 343, 344, 345, 346, 444, 445, 448, 449, 462, 465, 466, 469, 472, 473, 474, 477, 498, 518, 526, 527, 528, 569, 573, 624, 639, 650, 682], "z": [8, 9, 17, 19, 27, 107, 112, 114, 115, 116, 117, 118, 162, 199, 212, 343, 346, 381, 384, 387, 444, 448, 449, 517, 526, 530, 532, 538, 539, 542, 547, 617, 624, 648, 649, 782], "track": [8, 107, 108, 117, 118, 342, 348, 444, 517], "n_p": [8, 9, 343, 346], "n_z": [8, 63, 346], "tn5": [8, 9, 10, 21], "lot": [8, 110, 113, 114, 115, 118, 624, 639], "especi": [8, 279], "real": [8, 9, 17, 19, 27, 31, 75, 271, 343, 344, 444, 445, 446, 449, 519, 526, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 567, 579, 594, 596, 597, 599, 601, 604, 608, 612, 623, 648, 652, 654, 655, 664, 666, 668, 688, 694, 699], "predefin": [8, 17, 19], "activ": [8, 9, 12, 13, 17, 18, 20, 191, 292, 309, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 331, 333, 334, 338, 343, 346, 379, 387, 410, 416, 418, 423, 511, 512, 513, 514, 521, 522, 523, 524, 526, 540, 541, 610, 624, 639, 657, 661, 662, 665, 667, 669, 685, 688, 699, 778], "va": [8, 9, 17, 116, 292, 311, 343, 344, 345, 346, 348, 445, 446, 447, 448, 460, 461, 514, 526, 558, 565, 566, 597, 607, 612, 648, 650], "n_": [8, 9, 284, 343], "left": [8, 9, 17, 19, 27, 32, 107, 110, 113, 118, 161, 163, 164, 165, 166, 167, 168, 169, 185, 186, 191, 192, 193, 194, 206, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 343, 346, 777], "bb": [8, 9, 17, 113, 213, 214, 346, 454], "kk": [8, 9, 17, 346, 449, 472, 477, 517], "pv": [8, 9, 17, 20, 282, 311, 312, 346, 379, 444, 449, 454, 456, 484, 490, 494, 520, 522, 523, 524, 526, 530, 531, 532, 538, 539, 542, 544, 547, 565, 566, 571, 576, 578, 597, 619, 620, 641, 642, 643, 644, 645, 646, 671, 688, 694, 782, 789, 790, 793, 794], "suscept": [8, 9, 309, 323, 333, 334, 526, 596, 597], "coeffici": [8, 9, 17, 32, 110, 113, 114, 115, 118, 163, 164, 165, 166, 167, 168, 169, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 284, 321, 343, 346, 526, 598], "gp": [8, 17, 346, 448], "cc": [8, 9, 17, 19, 343, 346, 578], "gi": [8, 343], "compon": [8, 17, 107, 118, 204, 284, 285, 325, 343, 529, 536, 552, 558], "ilin": [8, 17, 19, 343], "slin": [8, 17, 19, 343], "arbitrari": [8, 17, 19, 107, 117, 180, 184, 286, 292, 343, 532, 545], "snln": [8, 17, 19, 343, 445, 481], "inln": [8, 17, 19, 343, 445, 481], "six": [8, 17, 19, 20, 501, 788, 789, 790], "yy": [8, 9, 17, 19, 20, 343, 451, 478, 481, 486, 487, 491, 787], "ll": [8, 9, 17, 19, 107, 117, 118, 343], "nn": [8, 9, 17, 19, 113, 343, 449, 455, 456, 462, 466, 469, 474], "iv": [8, 9, 17, 19, 343], "sv": [8, 9, 17, 19, 343, 480, 481, 578], "admitt": [8, 9, 323, 451, 478, 491, 522, 523, 524, 530, 532, 547, 553, 554, 556, 557, 571, 576, 613, 618, 624, 641, 642, 643, 644, 645, 646, 652, 653, 654, 655, 661, 662, 782], "matric": [8, 9, 17, 19, 31, 43, 63, 64, 65, 113, 121, 123, 181, 214, 216, 217, 218, 219, 220, 271, 323, 343, 444, 445, 448, 449, 526, 528, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 569, 571, 602, 605, 611, 612, 613, 618, 648, 649, 697, 700, 774, 777, 780], "rather": [8, 17, 39, 43, 110, 118, 171, 260, 280, 284, 343, 344, 418, 445, 506, 526, 566, 570, 599, 615], "dv": [8, 343, 559, 560, 561, 562], "conj": [8, 9, 343, 558, 560, 561, 562], "Then": [8, 13, 279, 286, 444, 508, 569, 648, 649], "written": [8, 21, 27, 213, 266, 268, 271, 272, 274], "cdiag": [8, 343], "invc": [8, 343], "assum": [8, 17, 43, 44, 110, 111, 112, 113, 114, 115, 118, 120, 122, 292, 323, 418, 445, 493, 495, 497, 499, 500, 509, 511, 512, 513, 514, 522, 523, 524, 527, 570, 572, 596, 597, 600, 601, 605, 607, 616, 652, 653, 663, 675, 676, 680, 688, 689, 690, 691, 692, 694, 695, 699, 778], "net_model": [8, 281, 286, 341, 343, 348, 376, 445, 446, 447, 448, 449, 456, 493, 495, 497, 499, 515], "nm_element": [8, 17, 18, 19, 281, 341, 342, 343, 344, 345, 346, 376, 444, 445, 446, 447, 448, 450, 455, 456, 462, 465, 466, 473, 478, 479, 480, 485, 486, 491, 515, 804], "special": [8, 61, 107, 111, 117, 505, 599], "treatment": 8, "pq": [8, 12, 20, 282, 311, 312, 317, 417, 418, 444, 449, 456, 503, 520, 526, 530, 531, 532, 538, 539, 542, 544, 547, 565, 566, 571, 576, 597, 601, 608, 641, 642, 643, 644, 645, 646, 648, 671, 688, 694, 699, 782, 788, 792, 793, 794], "node_typ": [8, 17, 281, 444, 449, 455, 456, 515], "about": [8, 107, 202, 204, 205, 262, 519, 525, 533, 534, 536, 540, 543, 545, 546, 548, 550], "assembl": [8, 108, 110, 113, 114, 115, 118, 445, 517], "set_node_type_ref": [8, 444, 449, 455], "set_node_type_pv": [8, 444, 449, 455], "set_node_type_pq": [8, 444, 449, 455], "1000": [8, 20, 183, 283, 624, 639, 777], "2000": [8, 20, 212], "nme_bus_acp": [8, 281, 515], "nme_gen_acp": [8, 281, 515], "brief": 8, "rel": [8, 14, 16, 67, 107, 118, 163, 164, 165, 166, 167, 168, 169, 519, 572, 624, 639], "nme_bu": [8, 281, 459, 460, 461, 515], "nme_gen": [8, 281, 469, 472, 515], "neg": [8, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 165, 167, 168, 180, 181, 182, 183, 184, 187, 193, 194, 217, 218, 219, 220, 226, 230, 231, 232, 532, 599, 775, 777], "ident": [8, 9, 17, 27, 32, 107, 108, 118, 163, 164, 165, 167, 168, 169, 172, 181, 182, 183, 184, 187, 191, 192, 193, 194, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 271, 444, 517, 532, 572, 624, 688], "nme_branch": [8, 281, 451, 454, 515], "nme_load": [8, 281, 481, 484, 515], "equal": [8, 17, 27, 43, 59, 60, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 188, 190, 191, 192, 193, 194, 214, 216, 266, 268, 271, 272, 274, 279, 344, 400, 444, 445, 522, 523, 524, 624, 639, 647, 648, 654, 661, 664, 665, 670, 693, 699, 775, 776, 777], "consum": 8, "stack": [8, 17, 19, 111, 113, 116, 118, 121, 123, 216, 343, 346, 444, 449], "seri": [8, 273, 309, 323, 338, 579], "t": [8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 59, 63, 67, 79, 107, 117, 118, 180, 182, 184, 187, 202, 212, 279, 284, 343, 445, 493, 505, 506, 508, 510, 526, 530, 532, 533, 539, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 579, 581, 596, 600, 605, 613, 681], "cscal": [8, 9, 17, 19, 325], "y": [8, 19, 107, 110, 111, 112, 113, 114, 115, 116, 118, 162, 274, 323, 343, 344, 345, 444, 572, 610, 648], "i_": 8, "i_f": 8, "i_t": 8, "n_k": [8, 9, 17, 19, 343, 346], "cmat": [8, 9, 27, 32], "cccc": [8, 161, 221], "1_": 8, "2_": 8, "ddot": 8, "cvec": [8, 9, 17, 19], "_f": 8, "1_f": 8, "2_f": 8, "vdot": 8, "_t": 8, "1_t": 8, "2_t": 8, "incid": [8, 9, 17, 19, 444, 445, 448, 449, 529], "character": 8, "style": [9, 167, 230, 624, 639], "theta": 9, "uptheta": 9, "cvecg": 9, "rmatg": 9, "cmatg": 9, "hat": 9, "diag": [9, 12, 113, 114, 115, 213, 517, 558, 559, 560, 561, 562], "diagon": [9, 17, 19, 113, 214, 444], "dot": [9, 113, 284, 505, 506], "repeat": [9, 113, 214], "mathcal": [9, 113], "_i": [9, 113, 120, 325], "a_": [9, 113], "11": [9, 18, 20, 31, 32, 44, 113, 141, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 262, 526, 596, 597, 600, 601, 639, 699], "block": [9, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 181, 214, 299, 444, 517, 567, 594, 648], "conjug": 9, "transpos": [9, 27, 31, 110, 111, 112, 118, 191, 192, 193, 194, 207, 208, 209, 343, 344, 418, 445], "re": [9, 11, 13, 19, 107, 118, 163, 164, 165, 166, 167, 168, 169, 202, 231, 269, 275, 570, 694], "im": [9, 19], "imaginari": [9, 17, 19, 343, 344, 445, 446, 449, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 654, 655, 664, 666, 668], "wise": [9, 82, 672, 778], "expon": 9, "f_": [9, 112, 284], "gradient": [9, 27, 111, 112, 114, 115, 118, 188, 189, 191, 192, 193, 194, 207, 208, 209, 214, 215, 284, 624, 639, 650, 652, 654, 657, 658, 661, 664, 666, 668], "w": [9, 14, 16, 44, 57, 134, 146, 153, 180, 182, 184, 187, 191, 212, 342, 343, 344, 345, 346, 354, 359, 361, 364, 366, 368, 418, 445, 517, 522, 530, 532, 539, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 578, 581, 613, 624, 639, 648, 649, 706, 757, 761, 813], "lam": [9, 12, 27, 107, 111, 118, 120, 122, 167, 191, 192, 193, 194, 212, 328, 336, 343, 344, 345, 356, 408, 418, 445, 530, 531, 532, 538, 539, 542, 547, 554, 555, 557, 669, 688], "hessian": [9, 12, 27, 111, 112, 118, 189, 190, 191, 192, 193, 194, 215, 216, 284, 343, 344, 345, 418, 445, 624, 639, 651, 653, 655, 657, 658, 660, 662, 665, 667, 669], "dimens": [9, 17, 40, 43, 61, 63, 108, 111, 112, 113, 114, 115, 116, 117, 118, 181, 211, 212, 292, 293, 347, 418, 444, 449, 505, 506, 546, 567, 570, 580, 594, 604, 610, 621, 699, 700, 778, 779], "j": [9, 17, 27, 63, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 180, 181, 182, 184, 187, 188, 212, 214, 284, 325, 444, 449, 505, 517, 529, 559, 560, 561, 562, 579, 613, 615, 652, 693, 776], "natur": [9, 201, 208, 212, 549, 577, 624], "log": [9, 21, 199, 202, 203, 212, 532, 533], "approx": [9, 191, 624, 639], "71828": 9, "sqrt": [9, 183], "n_n": [9, 343, 346], "size": [9, 17, 27, 44, 78, 79, 80, 81, 107, 110, 113, 117, 118, 199, 201, 202, 207, 208, 209, 212, 266, 268, 271, 272, 274, 279, 342, 347, 505, 506, 517, 530, 532, 533, 538, 541, 544, 549, 615, 624, 688, 699], "vvi": 9, "vri": 9, "vii": 9, "vmi": 9, "vai": 9, "magnitud": [9, 17, 18, 20, 309, 311, 312, 314, 317, 318, 321, 343, 344, 345, 400, 401, 447, 449, 496, 511, 526, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 571, 576, 579, 594, 597, 601, 613, 616, 617, 624, 639, 641, 642, 643, 644, 645, 646, 648, 664, 665, 666, 667, 688, 694, 782], "vr": [9, 343, 344, 444, 445, 446, 459, 558, 650], "vi": [9, 343, 344, 445, 446, 459, 558, 650], "vm": [9, 18, 112, 114, 115, 118, 292, 311, 343, 344, 345, 348, 400, 445, 447, 460, 511, 517, 526, 550, 558, 566, 597, 616, 648], "dvm": [9, 553, 554, 555, 556, 557, 559, 560, 561, 562], "inv": 9, "invers": 9, "frac": [9, 12, 32, 113, 114, 115, 213, 221], "z_i": 9, "zr": [9, 17, 19, 343, 348, 444, 445], "zi": [9, 17, 19, 343, 348, 444, 445], "j_": 9, "affin": 9, "dd": [9, 214, 517, 619], "aa": [9, 110, 213, 221], "combin": [9, 118, 179, 343, 346, 449, 517, 578, 780], "ccc": [9, 19, 213], "underlin": 9, "obtain": [9, 44, 107, 118, 343, 344, 418, 445, 449], "multipli": [9, 17, 27, 32, 59, 61, 107, 111, 113, 117, 118, 120, 122, 163, 164, 165, 166, 167, 168, 169, 190, 191, 192, 193, 194, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 343, 344, 418, 445, 517, 519, 552, 553, 554, 555, 556, 557, 564, 596, 597, 599, 600, 601, 618, 624, 647, 648, 651, 653, 655, 662, 665, 667, 669, 775], "superscript": 9, "subscript": [9, 284, 285, 293], "carleton": 10, "coffrin": 10, "et": [10, 13, 107, 118, 493, 648, 675, 688, 689, 690, 691, 692, 694, 695, 780], "al": [10, 13], "progress": [10, 27, 107, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 527, 624, 639, 676, 677, 679, 680, 682, 683, 780], "www": [10, 107, 118, 119, 124, 126, 137, 143, 147, 148, 159, 180, 181, 182, 183, 184, 187, 193, 194, 212, 219, 220, 222, 578, 586, 588, 593, 624, 639], "overleaf": 10, "5d94e3765cb3ba000129df3c": 10, "zimmerman": [10, 27, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 815], "octob": [10, 815], "2020": [10, 815], "org": [10, 13, 21, 24, 27, 107, 117, 118, 125, 151, 159, 191, 192, 193, 194, 197, 230, 232, 506, 522, 523, 524, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 619, 624, 639, 815], "much": [11, 162, 293], "task_pf": [11, 281, 494, 495, 497, 499, 500, 512, 514, 515], "task_cpf": [11, 281, 495, 511, 512, 515], "usag": [11, 260, 347, 596, 597, 598, 600, 601, 611], "pattern": [11, 172], "occur": [11, 61], "flowchart": 11, "satisfi": [11, 27, 31, 32, 162, 688, 694], "reactiv": [11, 12, 17, 18, 20, 44, 67, 283, 292, 309, 314, 315, 317, 318, 320, 321, 322, 323, 325, 333, 334, 338, 379, 410, 416, 418, 498, 519, 522, 523, 524, 526, 543, 544, 555, 558, 567, 579, 594, 596, 597, 599, 601, 608, 610, 623, 624, 639, 648, 657, 661, 662, 665, 667, 669, 674, 685, 688, 694, 699, 778], "mark": [11, 526, 680], "star": [11, 679], "sub": [11, 21, 78, 79, 80, 81, 107, 111, 112, 116, 117, 118, 292, 293, 497, 572, 680], "accomplish": 11, "next_dm": [11, 493, 498], "next_nm": [11, 493], "next_mm": [11, 493, 494], "empti": [11, 12, 17, 27, 32, 43, 63, 65, 66, 67, 78, 79, 80, 81, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 157, 159, 167, 170, 197, 202, 203, 212, 230, 262, 283, 284, 287, 288, 289, 292, 293, 342, 343, 344, 346, 348, 407, 415, 418, 429, 438, 443, 445, 446, 447, 493, 498, 533, 604, 616, 624, 674, 681, 682, 699, 700, 777, 778], "termin": [11, 17, 27, 67, 107, 118, 168, 184, 191, 199, 204, 205, 212, 231, 283, 532, 535, 541, 544, 551, 564, 571, 576, 624, 639, 641, 642, 643, 644, 645, 646, 647, 648, 678, 683, 685, 688, 689, 690, 691, 692, 694, 695, 782], "On": [11, 27], "trigger": [11, 200, 201, 204, 205, 535, 537, 541, 544, 549, 551, 688], "enforc": [11, 494, 498, 609, 624, 639], "constraint": [11, 17, 18, 21, 27, 32, 67, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 163, 164, 165, 166, 167, 168, 169, 188, 190, 191, 192, 193, 194, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 260, 284, 291, 310, 314, 330, 332, 343, 344, 348, 350, 351, 353, 354, 358, 360, 363, 365, 367, 371, 372, 373, 374, 375, 376, 389, 390, 391, 392, 393, 401, 408, 409, 410, 411, 412, 417, 418, 419, 434, 435, 445, 462, 504, 515, 517, 518, 564, 567, 581, 594, 607, 608, 609, 610, 624, 639, 647, 648, 649, 650, 651, 652, 653, 654, 655, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 693, 776, 777, 781], "print_soln": [11, 493], "print": [11, 19, 30, 37, 75, 76, 103, 106, 117, 127, 158, 160, 173, 198, 258, 265, 266, 268, 271, 272, 273, 274, 277, 286, 288, 292, 310, 313, 314, 316, 319, 320, 322, 324, 327, 329, 332, 335, 337, 339, 493, 496, 508, 511, 512, 513, 514, 518, 525, 527, 528, 624, 639, 640, 675, 688, 689, 690, 691, 692, 694, 695, 780, 810, 814], "save_soln": [11, 493], "save": [11, 27, 78, 79, 80, 81, 97, 98, 99, 101, 107, 108, 110, 117, 118, 172, 283, 289, 290, 445, 448, 493, 495, 497, 499, 508, 511, 512, 513, 514, 518, 526, 527, 568, 570, 604, 676, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698], "shape": [12, 503], "_0": [12, 17, 321], "lower": [12, 17, 27, 32, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 284, 309, 310, 311, 314, 317, 320, 321, 322, 330, 444, 526, 544, 551, 564, 581, 596, 597, 600, 601, 608, 624, 647, 648, 650, 651, 693, 775, 776, 777, 781], "bound": [12, 17, 19, 27, 32, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 286, 309, 310, 311, 314, 317, 320, 321, 322, 330, 344, 444, 564, 581, 624, 647, 648, 650, 651], "mathrm": [12, 17, 27, 32, 161, 213, 221, 284, 321, 343, 445], "belong": [12, 281, 285, 380, 693, 699, 776, 778], "mme_gen_opf_ac": [12, 281, 418, 515], "mme_gen_opf_ac_ov": [12, 281, 503, 515], "If": [12, 13, 17, 27, 37, 62, 63, 64, 65, 78, 79, 103, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 157, 159, 170, 180, 182, 184, 187, 191, 192, 193, 194, 197, 201, 202, 258, 262, 266, 269, 271, 277, 279, 283, 292, 342, 347, 506, 508, 517, 526, 527, 549, 559, 560, 561, 562, 567, 568, 569, 570, 581, 594, 595, 596, 599, 602, 604, 605, 607, 613, 614, 615, 616, 624, 648, 649, 672, 674, 675, 688, 694, 696, 697, 698, 699, 700, 777, 778, 780, 814], "write": [12, 109, 110, 111, 112, 113, 114, 115, 116, 279, 518, 592, 697, 698], "h_": [12, 343, 418], "der": [12, 111, 112, 113, 114, 115, 673], "pp": [12, 17, 27, 522, 523, 619, 670], "muv": [12, 27, 343, 418], "qq": [12, 107, 113, 115, 118, 214], "add_nln_constraint": [12, 117, 118, 517], "xx": [12, 17, 113, 116, 118, 284, 344, 408, 411, 418, 452, 517], "furthermor": [12, 44], "subset": [12, 43, 61, 77, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 284, 343, 344, 346, 418, 445, 446, 447, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "idx": [12, 17, 19, 40, 41, 42, 43, 60, 78, 79, 80, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 202, 212, 284, 285, 292, 311, 317, 342, 343, 344, 345, 346, 347, 348, 377, 379, 418, 444, 445, 446, 447, 449, 455, 456, 457, 458, 459, 460, 461, 462, 466, 469, 472, 474, 477, 481, 517, 533, 580, 604, 639, 664, 665, 666, 667, 688, 700, 777], "75": [12, 18], "77": [12, 44], "dh": [12, 27, 111, 118, 188, 191, 192, 193, 194, 214, 343, 418, 652], "oval_pq_capability_fcn": [12, 418], "p0": [12, 418], "q0": [12, 418, 503], "a2": [12, 107, 418], "b2": [12, 418], "deal": [12, 118, 774], "ng": [12, 65, 75, 284, 285, 526, 555, 567, 577, 578, 594, 610, 616, 623, 624, 639, 674, 693, 699, 776, 778], "length": [12, 20, 43, 61, 163, 164, 165, 166, 167, 168, 169, 181, 202, 207, 209, 323, 347, 530, 532, 542, 624], "isempti": [12, 17, 505, 506], "nargout": [12, 27, 180, 182, 184, 187, 191, 192, 193, 194, 212], "dhdp": 12, "spdiag": [12, 17], "dhdq": 12, "78": [12, 17], "81": [12, 18, 639], "d2h": [12, 118, 343, 418, 653], "oval_pq_capability_hess": [12, 418], "zz": [12, 19], "spars": [12, 19, 24, 31, 32, 113, 118, 121, 123, 163, 164, 165, 166, 167, 168, 169, 188, 189, 190, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 342, 343, 344, 418, 445, 449, 517, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 616, 648, 649], "d2h_pp": 12, "d2h_qq": 12, "now": [12, 17, 38, 105, 107, 259, 526, 816], "add_constraint": [12, 17, 348, 376, 390, 391, 392, 393, 401, 408, 409, 410, 411, 412, 417, 418, 419, 423, 434, 435], "pqoval": 12, "pg": [12, 17, 18, 65, 75, 110, 112, 114, 115, 116, 117, 118, 317, 444, 469, 472, 511, 512, 513, 514, 517, 520, 522, 523, 524, 526, 527, 540, 566, 598, 601, 608, 609, 610, 616, 621, 624, 648, 673, 693, 699, 776, 778, 779], "qg": [12, 18, 67, 110, 112, 118, 317, 469, 517, 520, 526, 543, 566, 601, 608, 609, 610, 616, 624, 648, 673, 674, 694, 699, 778], "data_model_el": [12, 17, 19, 293, 376, 449], "p_lb": 12, "pg_lb": [12, 317, 444], "p_ub": 12, "pg_ub": [12, 317, 444], "q_lb": 12, "qg_lb": [12, 317], "q_ub": 12, "qg_ub": [12, 317], "squar": [12, 343, 344, 418, 552, 558], "horizont": [12, 80, 81, 212, 418, 449, 505, 506, 599], "radiu": 12, "vertic": [12, 78, 79, 80, 81, 113, 118, 212, 216, 418, 444, 505, 506, 599], "hess": [12, 108, 111, 117, 118, 517], "let": [12, 17, 19, 113, 517, 558, 623, 624, 639], "know": 12, "our": [12, 17, 19, 279, 527], "place": [12, 107, 118, 518, 580, 602, 619, 700, 777], "xt_oval_cap_curv": [12, 281, 515], "task_tag": [12, 18, 341, 348, 355, 369, 501, 502, 503, 504], "otherwis": [12, 14, 16, 18, 64, 65, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 166, 202, 212, 227, 261, 262, 271, 272, 273, 284, 292, 444, 445, 449, 508, 510, 517, 527, 529, 533, 535, 547, 551, 564, 647, 648, 674, 675, 676, 677, 679, 680, 682, 683, 693, 697, 698, 776, 777, 778], "39": [12, 18, 639], "bind": [12, 17, 27, 624, 639, 777], "expect": [12, 17, 19, 20, 39, 67, 106, 108, 111, 118, 212, 260, 266, 269, 271, 273, 275, 280, 290, 497, 520, 527, 535, 551, 774, 775, 776, 777], "restrict": [12, 67, 503], "case39": 12, "10": [12, 13, 17, 18, 20, 27, 29, 32, 44, 157, 163, 164, 165, 166, 168, 169, 172, 180, 181, 183, 186, 187, 191, 192, 193, 194, 196, 212, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 269, 271, 275, 330, 505, 519, 522, 523, 524, 526, 527, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 596, 597, 600, 601, 619, 624, 639, 699, 777, 778, 815], "______": 12, "_______": 12, "671": 12, "59": [12, 17, 18, 20, 522], "140": [12, 167], "646": 12, "300": [12, 18, 167, 230, 639], "16": [12, 19, 20, 114, 526, 596, 597, 600, 601, 639], "299": 12, "99": [12, 18, 222], "652": 12, "115": [12, 18, 639], "12": [12, 17, 18, 20, 110, 221, 266, 268, 271, 272, 274, 279, 526, 596, 597, 600, 601, 792, 793, 794], "508": [12, 18], "139": 12, "61": [12, 18, 523, 619, 639], "661": 12, "45": 12, "222": 12, "93": [12, 44, 108, 117, 444, 639], "580": [12, 639], "60": [12, 18, 20, 347, 639], "645": 12, "564": 12, "8208": 12, "654": 12, "03": [12, 18, 20], "32": [12, 18, 639], "735": 12, "689": [12, 20], "886": 12, "682": 12, "74": 12, "171": 12, "94": [12, 527], "639": 12, "42": [12, 20, 161, 213, 225, 639], "128": 12, "46": 12, "672": 12, "253": 12, "14": [12, 18, 20, 526, 596, 597, 600, 601], "641": 12, "147": 12, "08": [12, 44], "507": 12, "89": [12, 17, 18, 44, 639], "85": [12, 18, 20, 639], "223": 12, "649": 12, "87": [12, 18, 108, 117, 444, 524, 639], "164": 12, "86": [12, 639], "579": 12, "41": [12, 20, 545, 639], "125": [12, 18], "563": 12, "73": [12, 639], "121": [12, 639], "662": 12, "51": [12, 18, 210, 545], "8392": 12, "701": 12, "248": 12, "notic": [12, 17, 19], "display_soln": [12, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118], "nli": [12, 107, 111, 117, 118, 291, 497, 517, 647, 648], "nonlin": [12, 118], "ineq": [12, 120, 122], "ub": [12, 17, 18], "mu_ub": [12, 17, 330], "3e": 12, "06": [12, 18, 20, 527], "90806": 12, "07": 12, "270": [12, 18], "778": 12, "9e": 12, "28": [12, 120], "8787": 12, "7e": 12, "117": 12, "1e": [12, 27, 67, 79, 107, 118, 126, 157, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 183, 187, 191, 212, 309, 624, 639], "779": 12, "782": 12, "8e": 12, "103": 12, "48": [12, 18, 524], "459": 12, "163": 12, "4e": 12, "566": [12, 18], "547": 12, "31337": 12, "03857": 12, "lib": [12, 13, 14, 16, 17, 18, 19, 20, 279], "instal": [13, 15, 30, 39, 76, 106, 127, 158, 160, 173, 198, 260, 265, 280, 508, 515, 640, 648, 816], "python": 13, "virtual": 13, "unix": [13, 269, 275], "maco": 13, "window": [13, 78, 79, 80, 81, 269, 275], "python3": 13, "venv": 13, "env": 13, "bin": 13, "script": [13, 20, 260, 273, 527, 566], "confirm": 13, "leav": [13, 616, 674], "finish": [13, 179, 268, 493], "deactiv": 13, "sphinxcontrib": 13, "matlabdomain": 13, "md": [13, 21, 59, 60, 63, 66, 78, 79, 80], "rtd": 13, "theme": 13, "pip": 13, "texliv": 13, "latex": [13, 21], "directori": [13, 14, 15, 16, 78, 79, 80, 81, 97, 98, 99, 101, 159, 260, 279, 507, 508, 572], "latexpdf": 13, "twice": [13, 449, 699, 777], "pick": 13, "ensur": [13, 444, 532, 796], "content": [13, 17, 61, 124, 125, 126, 157, 159, 170, 197, 269, 505, 506, 681, 688], "cross": 13, "date": [13, 30, 76, 127, 158, 160, 173, 198, 262, 265, 640], "everyth": [13, 266, 624, 639, 816], "properli": [13, 110, 113, 114, 115, 279], "creation": [13, 17, 591, 811], "rst": [13, 14, 15, 16], "stub": [13, 14, 15, 16], "mani": [13, 20, 110, 279, 688, 782, 796], "pars": [13, 107, 109, 110, 111, 113, 116, 118, 649, 680, 681, 682], "analyz": 13, "symlink": [13, 14, 15, 16], "subdirectori": 13, "generate_matpower_autodoc": 13, "hard": [13, 19, 777], "prompt": [13, 279, 508], "rebuild": [13, 286, 292, 613], "ref": [13, 14, 15, 17, 20, 282, 311, 312, 347, 444, 449, 456, 498, 520, 530, 531, 532, 544, 565, 566, 571, 576, 597, 641, 642, 643, 644, 645, 646, 668, 669, 671, 688, 782, 791, 793, 794], "generate_autodoc_stub": [13, 15], "generate_source_symlink": [13, 15], "j\u00f8rgen": 13, "cederberg": 13, "2024": [13, 20, 262, 592], "contrib": 13, "21": [13, 20, 526, 596, 600, 601, 605, 792, 793, 794], "zenodo": [13, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 815], "doi": [13, 27, 522, 523, 524, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 619, 815], "5281": [13, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 815], "7746009": 13, "dest": [14, 16], "escape_plu": 14, "success": [14, 16, 20, 37, 103, 109, 110, 111, 112, 113, 114, 115, 116, 168, 199, 231, 258, 277, 279, 493, 495, 497, 499, 508, 522, 523, 524, 532, 564, 565, 624, 639, 647, 648, 656, 675, 685, 688, 689, 690, 691, 692, 693, 694, 695, 780, 814], "err_list": [14, 16], "stub_typ": [14, 16], "destdir": [14, 16], "prepend": [14, 16], "dir": [14, 16], "gh_base_url": [14, 16], "url": [14, 16], "mod": [14, 16], "modul": [14, 16], "pkg": [14, 16], "src_path": [14, 16], "o": [14, 16], "escap": 14, "error": [14, 16, 62, 118, 179, 286, 292, 506, 577, 578, 605, 674, 699], "fatal": [14, 16, 179], "blob": [14, 16], "class1": [14, 16], "class2": [14, 16], "class3": [14, 16], "class4": [14, 16], "func1": [14, 16], "func2": [14, 16], "func3": [14, 16], "func4": [14, 16], "install_dir": 15, "src": 16, "demonstr": [17, 18], "transform": [17, 18, 19, 20, 44, 283, 308, 309, 338, 339, 388, 389, 390, 391, 392, 393, 394, 395, 442, 443, 450, 491, 501, 526, 527, 596, 648, 649, 676, 679, 787], "discuss": [17, 19], "exactli": [17, 201, 202, 527, 549], "p_": [17, 321], "p_1": 17, "_1": [17, 19, 321], "diagram": [17, 19], "_2": [17, 19], "_k": [17, 19], "p_k": 17, "q_k": 17, "p_2": 17, "q_1": 17, "q_2": 17, "setpoint": [17, 20, 286, 317, 318, 321, 526, 600, 601, 688], "appli": [17, 43, 44, 60, 61, 119, 124, 125, 126, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 179, 190, 197, 212, 216, 269, 275, 292, 506, 509, 511, 512, 513, 514, 519, 522, 523, 524, 599, 615, 623, 624, 648, 649], "implmement": [17, 19], "legacy_dclin": [17, 18, 502], "whose": [17, 61, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 181, 199, 273, 449, 508, 525, 568, 573, 595, 605, 614, 615, 624, 664, 665, 666, 667, 681, 688, 775, 777], "role": 17, "piec": [17, 82, 292, 672, 674], "flag": [17, 27, 32, 67, 75, 78, 79, 80, 81, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 200, 201, 202, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 286, 288, 292, 493, 532, 533, 535, 537, 546, 549, 551, 564, 571, 576, 624, 639, 641, 642, 643, 644, 645, 646, 647, 648, 685, 688, 689, 690, 691, 692, 694, 695, 699, 780, 782], "physic": [17, 19], "dme_dclin": 17, "extend": [17, 39, 260, 280, 526], "dme_dcline_opf": 17, "bus_fr": [17, 309, 321, 323, 338], "bus_to": [17, 309, 321, 323, 338], "loss0": [17, 321, 600], "loss1": [17, 321, 600], "vm_setpoint_fr": [17, 321], "vm_setpoint_to": [17, 321], "p_fr_lb": [17, 321], "p_fr_ub": [17, 321], "q_fr_lb": [17, 321], "q_fr_ub": [17, 321], "q_to_lb": [17, 321], "q_to_ub": [17, 321], "p_fr": [17, 18, 321], "q_fr": [17, 321], "p_to": [17, 321], "q_to": [17, 321], "dme_legacy_dclin": [17, 18, 281, 322, 502, 515], "fbus_on": [17, 321], "tbus_on": [17, 321], "p_fr_start": [17, 321], "p_to_start": [17, 321], "q_fr_start": [17, 321], "q_to_start": [17, 321], "th": [17, 113, 284, 444, 449, 526, 598, 615], "_start": 17, "horzcat": [17, 19, 292, 505, 506], "export_var": [17, 292, 309, 310, 311, 314, 317, 320, 321, 322, 328, 330, 331, 336], "var": [17, 61, 62, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 212, 278, 292, 445, 446, 447, 448, 497, 517, 518, 526, 564, 578, 600, 609, 647, 648, 688], "export_vars_offline_v": [17, 292, 309, 310, 311, 314, 317, 320, 321, 322, 330, 331, 376], "info": [17, 19, 22, 23, 24, 25, 26, 30, 40, 76, 77, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 166, 173, 179, 192, 198, 202, 204, 205, 227, 228, 262, 263, 264, 265, 292, 449, 527, 533, 534, 536, 540, 543, 545, 546, 548, 550, 564, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 647, 648, 676, 677, 679, 680, 682, 683, 688, 689, 690, 691, 692, 694, 695, 780], "b2i": [17, 19], "alreadi": [17, 19, 41, 42, 67, 107, 117, 118, 567, 568, 569], "turn": [17, 19, 20, 262, 309, 338, 519, 526, 596], "bus_dm": 17, "isol": [17, 19, 282, 311, 312, 525, 526, 529, 569, 570, 574, 594, 597, 602], "fill": [17, 19, 40, 340, 649], "set_bus_type_pv": [17, 311], "vm_control": [17, 311, 312], "reli": [17, 19], "global": [17, 261, 266, 268, 271, 272, 274, 278, 282, 816], "apply_vm_setpoint": [17, 317, 318, 321], "i_fr": 17, "i_to": 17, "vm_start": [17, 311], "pp_have_section_sum": [17, 292, 309, 317, 318, 321, 323, 325, 326, 330, 333, 334, 338], "pp_data_sum": [17, 292, 309, 317, 318, 321, 323, 325, 326, 330, 333, 334, 338], "torf": [17, 107, 109, 118, 262, 282, 286, 292, 293, 347, 505, 581, 603], "pp_arg": [17, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 332, 333, 334, 338], "out_": [17, 286, 288, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 332, 333, 334, 338], "fd": [17, 107, 118, 181, 184, 186, 286, 292, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 330, 331, 332, 333, 334, 338, 493, 496, 518, 525, 624, 675], "fprintf": 17, "29": [17, 262, 279], "2f": 17, "mw": [17, 18, 75, 314, 317, 320, 321, 322, 325, 330, 331, 333, 519, 526, 527, 579, 596, 597, 600, 601, 606, 624, 639, 673, 693, 699, 775, 776, 777], "mvar": [17, 18, 44, 314, 317, 320, 321, 322, 325, 330, 333, 526, 579, 596, 597, 600, 601, 624, 777], "pp_have_section_det": [17, 292, 309, 311, 312, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338], "pp_get_headers_det": [17, 292, 309, 311, 312, 314, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338], "pp_data_det": [17, 292], "header": [17, 107, 108, 286, 288, 292, 493], "third": [17, 43, 44], "inj": [17, 18], "1234567": 17, "123456789": 17, "90": [17, 18, 639], "123456": 17, "str": [17, 117, 292, 505, 681], "pp_data_row_det": [17, 292, 309, 311, 312, 314, 315, 317, 318, 321, 323, 325, 326, 330, 331, 333, 334, 338], "sprintf": [17, 19], "7d": 17, "9d": 17, "6d": 17, "themselv": [17, 108, 117, 118, 340, 559, 561, 648, 649], "chose": 17, "keep": [17, 20, 107, 108, 117, 118, 340, 517], "check": [17, 39, 62, 77, 117, 179, 260, 262, 268, 276, 280, 282, 292, 293, 347, 496, 581, 603, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 674, 774, 775, 776, 777], "against": 17, "dme_legacy_dcline_opf": [17, 18, 281, 502, 515], "mu_p_fr_lb": [17, 322], "mu_p_fr_ub": [17, 322], "mu_q_fr_lb": [17, 322], "mu_q_fr_ub": [17, 322], "mu_q_to_lb": [17, 322], "mu_q_to_ub": [17, 322], "polynomi": [17, 82, 284, 285, 416, 417, 423, 526, 566, 598, 623, 657, 658, 672, 673], "breakpoint": [17, 284], "appear": [17, 108, 117, 118, 517], "cost_tabl": [17, 281, 285, 320, 322, 416, 506, 515], "have_cost": [17, 317, 320, 321, 322], "routin": [17, 38, 105, 189, 215, 259, 279, 569, 605], "whether": [17, 67, 78, 79, 80, 81, 107, 110, 117, 118, 163, 164, 165, 166, 167, 168, 169, 202, 211, 212, 263, 264, 269, 272, 275, 278, 501, 502, 508, 533, 546, 567, 571, 576, 594, 641, 642, 643, 644, 645, 646, 674, 782], "build_cost_param": [17, 320, 322, 417, 419, 423], "conveni": [17, 566, 615], "cost_table_util": [17, 281, 284, 515], "ismemb": [17, 577, 578], "variablenam": [17, 505], "poli": [17, 284, 423], "poly_param": [17, 284, 285, 416], "pwl": [17, 284, 285, 416, 423, 648], "pwl_param": [17, 284, 285, 416], "els": [17, 18, 262, 279, 699], "lim": [17, 286, 288, 310, 313, 314, 316, 319, 320, 322, 324, 327, 329, 332, 335, 337, 339, 344, 600, 624, 775, 777], "lb": [17, 18, 347], "pp_have_section_lim": [17, 310, 314, 320, 322, 330, 332], "pp_binding_rows_lim": [17, 310, 314, 320, 322, 330, 332], "pp_get_headers_lim": [17, 310, 314, 320, 322, 330, 332], "pp_data_row_lim": [17, 310, 314, 320, 322, 330, 332], "ctol": [17, 332], "ptol": [17, 332], "dme_shared_opf": [17, 281, 310, 313, 314, 316, 319, 320, 322, 324, 327, 329, 330, 331, 335, 337, 339, 515], "mu": [17, 18, 27, 107, 111, 118, 120, 122, 191, 192, 193, 194, 497, 552, 553, 556, 564, 647, 648, 693, 775, 776], "890": 17, "12345": 17, "mu_lb": [17, 330], "3f": 17, "dcline": [17, 570, 600, 678, 774], "dclinecost": 17, "dmce_legacy_dcline_mpc2": [17, 18, 281, 502, 515], "data_field": [17, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "df": [17, 27, 112, 114, 115, 118, 189, 191, 192, 193, 194, 215, 284, 293, 377, 517, 624, 639, 648, 657, 658, 673], "default_export_data_t": [17, 293, 294, 296, 299, 300], "retriev": [17, 107, 117, 347, 505, 506, 624, 639], "default_export_data_nrow": [17, 293], "dt": [17, 293], "idx_dclin": [17, 515, 707, 774, 783], "qmaxt": [17, 600], "major": [17, 624, 639], "directi": 17, "gcip_fcn": 17, "ob": 17, "dcline_cost_import": [17, 300], "gcep_fcn": 17, "dcline_cost_export": [17, 300], "br_statu": [17, 519, 566, 596, 600], "f_bu": [17, 552, 556, 566, 596, 600], "t_bu": [17, 566, 596, 600], "vf": [17, 526, 559, 561, 579, 596, 600], "vt": [17, 108, 116, 117, 118, 444, 517, 526, 579, 596, 600], "pmin": [17, 46, 65, 78, 116, 118, 503, 526, 527, 566, 600, 601, 603, 672, 699, 777, 778, 780], "pmax": [17, 44, 65, 78, 104, 116, 118, 503, 519, 526, 527, 532, 540, 541, 566, 600, 601, 603, 672, 688, 693, 776, 777], "qminf": [17, 600], "qmaxf": [17, 600], "qmint": [17, 600], "qf": [17, 558, 566, 596, 600], "pt": [17, 134, 566, 596, 600, 624, 648], "qt": [17, 566, 596, 600], "isfield": 17, "mu_pmin": [17, 566, 600, 601, 781], "mu_pmax": [17, 566, 600, 601, 781], "mu_qminf": [17, 600], "mu_qmaxf": [17, 600], "mu_qmint": [17, 600], "mu_qmaxt": [17, 600], "static": [17, 113, 116, 282, 283, 284, 285, 299, 505, 532, 578], "dmce_gen_mpc2": [17, 281, 515], "gencost": [17, 20, 40, 41, 42, 61, 64, 65, 299, 517, 526, 564, 566, 567, 569, 594, 598, 605, 610, 621, 623, 647, 648, 649, 657, 673, 674, 689, 691, 692, 695, 697, 699, 774, 779, 780], "gencost2cost_t": [17, 299], "cost_table2gencost": [17, 299], "next": [17, 19, 64, 65, 107, 117, 118, 171, 199, 201, 202, 493, 506, 532, 541, 542, 544, 549, 694, 699, 780], "nme_legacy_dclin": [17, 281, 474, 477, 515], "np": [17, 19, 444, 449, 450, 462, 465, 466, 473, 478, 479, 480, 485, 486, 491, 578], "nz": [17, 19, 148, 444, 449, 462, 465, 466, 473, 699], "anyth": [17, 19, 266, 624, 639], "nme_legacy_dcline_ac": [17, 281, 475, 476, 515], "form_ac": [17, 19, 281, 344, 345, 346, 445, 446, 447, 515, 806, 807, 808, 809], "add_zvar": [17, 19, 444, 449, 462, 466, 469, 472, 474, 477], "ndc": [17, 774], "nk": [17, 19, 449], "add_var": [17, 19, 117, 118, 348, 359, 361, 364, 366, 368, 376, 410, 416, 423, 434, 444, 449, 517], "pdcf": [17, 474, 477], "qdcf": [17, 474], "pdct": [17, 474, 477], "inf": [17, 32, 65, 110, 113, 116, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 183, 187, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 271, 444, 624, 639, 777], "qdct": [17, 474], "spey": 17, "add_vvar": [17, 19, 444, 449, 457, 458, 459, 460, 461], "defer": [17, 19], "recal": [17, 19], "omit": [17, 19, 107, 108, 109, 117, 118, 286, 289, 292, 347, 348, 444, 449, 505, 517], "58": [17, 18, 639], "proper": [17, 63, 508], "becom": [17, 19, 27, 44, 285, 624], "identii": 17, "nme_legacy_dcline_acc": [17, 18, 281, 502, 515], "form_acc": [17, 19, 281, 343, 345, 446, 452, 457, 459, 463, 467, 470, 475, 482, 488, 515], "nme_legacy_dcline_acp": [17, 18, 281, 502, 515], "form_acp": [17, 19, 281, 343, 344, 447, 453, 458, 460, 464, 468, 471, 476, 478, 480, 483, 486, 489, 491, 515], "nme_legacy_dcline_dc": [17, 18, 281, 502, 515], "form_dc": [17, 281, 343, 344, 345, 448, 454, 461, 472, 477, 484, 490, 515], "z_1": 17, "z_2": 17, "analog": 17, "incorpor": [17, 19, 44], "impli": 17, "beyond": [17, 44, 567, 594, 681, 682], "mme_legacy_dclin": [17, 281, 423, 426, 427, 515], "slightli": [17, 694], "mme_legacy_dcline_pf_ac": [17, 18, 281, 502, 515], "get_idx": [17, 107, 117, 118], "s_fr": 17, "gs_": [17, 343, 445], "i1": [17, 107, 108, 110, 113, 117, 118, 284, 348, 377, 416, 423, 444, 505, 517], "iN": [17, 107, 108, 110, 113, 117, 118, 348, 377, 444, 505, 517], "s_to": 17, "imag": [17, 445, 446, 579], "mme_legacy_dcline_pf_dc": [17, 18, 281, 502, 515], "mme_legacy_dcline_opf": [17, 281, 424, 425, 515], "ccv": [17, 284, 610, 648], "just": [17, 292, 493, 506], "ydc": 17, "dimenion": 17, "add_lin_constraint": [17, 117, 118, 517], "dcline_legaci": 17, "ycondc": 17, "add_cost": [17, 348, 369, 376, 416, 417, 423, 434], "kind": [17, 292], "less": [17, 31, 271, 284, 566], "than": [17, 27, 59, 75, 107, 110, 111, 118, 171, 271, 284, 343, 344, 418, 445, 505, 518, 526, 566, 570, 599, 605, 615, 624, 648, 649, 670, 681, 682, 700], "greater": [17, 59, 119, 126], "have_quad_cost": [17, 284, 416, 423], "add_quad_cost": [17, 117, 118, 517], "polpdcf": 17, "higher": [17, 210, 271, 284, 545], "i3": [17, 284, 416, 423], "cost_pdcf": 17, "poly_cost_fcn": [17, 284], "poly_coef": [17, 284], "add_nln_cost": [17, 117, 118, 517], "pwldc": 17, "interior_x0": [17, 355, 398, 399, 401, 402, 403, 407, 415, 416, 423, 429, 438, 443], "x0": [17, 27, 32, 107, 116, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 355, 398, 399, 401, 402, 403, 407, 415, 416, 423, 429, 438, 443], "feasibl": [17, 27, 44, 124, 624, 639], "vv": [17, 107, 117, 118, 478], "maxc": [17, 284, 285], "max_pwl_cost": [17, 284, 285], "ab": [17, 211, 546, 558, 559, 560, 561, 562, 579], "mathmat": [17, 376, 493, 495, 497, 499], "mme_legacy_dcline_opf_ac": [17, 18, 281, 502, 515], "network_model_el": [17, 376], "vm_setpoint": [17, 317, 496], "sign": [17, 204, 212, 536, 546], "swap": 17, "mme_legacy_dcline_opf_dc": [17, 18, 281, 502, 515], "were": [17, 44, 111, 118, 268, 526, 602], "side": [17, 20, 110, 113, 118, 789, 790, 791, 794], "net_model_dc": [17, 281, 515], "mme_legacy_opf_dcline_ac": 17, "math_model_opf_acc": [17, 281, 358, 361, 515], "inclus": [17, 678], "explain": [17, 558, 559, 560, 561, 562], "xt_legacy_dclin": [17, 18, 281, 515, 802], "t_case9_dclin": [17, 18, 515, 774, 783], "go": [17, 620], "gizmo": [17, 795], "entir": [18, 63, 111, 118, 343, 346, 569, 602, 778], "20": [18, 27, 44, 108, 161, 210, 225, 347, 444, 519, 526, 527, 532, 545, 596, 600, 601, 624, 639, 699, 778], "_element_class": [18, 501, 502], "fmt": [18, 341, 501, 502, 504], "mpc2": [18, 289, 290, 341, 501, 502, 504, 528, 570], "v_cartesian": [18, 494, 496, 498, 624], "immedi": [18, 518], "succeed": [18, 20, 212, 495, 497, 499, 508, 685, 688, 689, 690, 691, 692, 694, 695], "27": [18, 20, 120, 181], "23": [18, 113, 600, 601], "setup": [18, 20, 356, 367], "04": [18, 624, 639], "6518": 18, "hr": [18, 526, 777], "area": [18, 44, 61, 311, 519, 526, 569, 581, 597, 599, 601, 602, 605, 624, 639, 648, 649, 676, 680, 697, 699, 778, 780], "zone": [18, 44, 63, 305, 311, 331, 435, 504, 526, 566, 568, 595, 597, 693, 699, 776, 778], "319": 18, "820": 18, "900": 18, "110": [18, 44], "315": 18, "00": [18, 20, 279], "124": [18, 639], "40": [18, 167, 347, 527, 545, 624, 639], "minimum": [18, 187, 212, 526, 596, 597, 601, 624, 688], "maximum": [18, 27, 32, 44, 162, 168, 180, 181, 182, 183, 184, 187, 191, 193, 212, 231, 271, 284, 285, 526, 528, 566, 571, 576, 596, 597, 601, 624, 639, 641, 642, 643, 644, 645, 646, 688, 693, 776, 777, 782], "066": 18, "30": [18, 44, 86, 87, 88, 89, 90, 161, 181, 225, 347, 526, 598, 601, 624, 639, 706], "100": [18, 20, 44, 230, 519, 639, 699, 777], "deg": [18, 20, 777], "lmp": 18, "mwh": [18, 75, 527, 604], "24": [18, 104, 115, 601, 639], "62": [18, 20, 639], "mvarh": 18, "43": 18, "mag": [18, 447], "pu": [18, 624, 777], "ang": [18, 447, 641, 642, 643, 644, 645, 646], "000": 18, "15": [18, 19, 20, 44, 114, 444, 524, 526, 596, 597, 600, 601], "954": 18, "107": 18, "035": 18, "277": 18, "047": 18, "623": 18, "094": 18, "470": 18, "967": 18, "298": 18, "078": [18, 20], "952": 18, "085": 18, "992": 18, "600": [18, 167, 230, 639], "081": 18, "160": 18, "476": 18, "427": 18, "097": 18, "205": 18, "043": 18, "112": [18, 639], "067": 18, "079": 18, "consumpt": 18, "35": [18, 20, 639], "50": [18, 44, 210, 347, 545, 699], "19": [18, 20, 113, 526, 596, 600, 601, 639], "47": [18, 20], "54": [18, 44], "31": [18, 639], "18": [18, 20, 32, 113, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 279, 526, 596, 600, 601, 639], "49": [18, 108, 117, 444], "68": [18, 19, 117, 639], "25": [18, 44, 115, 347, 505, 601, 639, 777], "88": [18, 639], "02": [18, 20], "65": [18, 639], "37": [18, 181, 639], "38": [18, 44, 108, 117, 444, 639], "69": [18, 19, 639], "64": [18, 20, 639], "13": [18, 20, 44, 119, 167, 269, 275, 526, 596, 597, 600, 601], "70": [18, 44, 639], "01": [18, 20, 527, 624], "131": 18, "95": [18, 20, 27, 597, 624, 639], "34": [18, 20, 44, 639], "36": [18, 639], "97": [18, 20, 639], "92": [18, 639], "84": [18, 20, 639], "231": 18, "197": 18, "010": 18, "046": 18, "250": [18, 44, 230, 639], "98": [18, 20, 524], "22": [18, 27, 44, 113, 600, 601], "mu_sm_fr": 18, "sm_fr": 18, "sm_ub": 18, "sm_to": 18, "mu_sm_to": 18, "762": [18, 522], "375": 18, "760": 18, "prototyp": [18, 20, 283, 341, 515], "wider": 19, "rang": [19, 44, 672], "fictiti": 19, "wide": [19, 61, 500, 599, 699], "verifi": [19, 279], "facil": 19, "sai": 19, "_g": 19, "proport": [19, 615], "imped": [19, 20, 283, 323, 325, 522, 523, 524, 526, 579, 617, 619, 620, 624], "_3": 19, "_4": 19, "_5": 19, "_6": 19, "_7": 19, "_8": 19, "dme_gizmo": 19, "bus_1": 19, "bus_2": 19, "bus_3": 19, "y1r": 19, "y1i": 19, "y2r": 19, "y2i": 19, "m1r": 19, "m1i": 19, "m2r": 19, "m2i": 19, "lr": 19, "li": [19, 113], "ir": 19, "ii": [19, 61], "ni": 19, "sr": 19, "si": [19, 445], "zr1": 19, "zi1": 19, "zr2": 19, "zi2": 19, "bus1": 19, "bus2": 19, "bus3": 19, "until": [19, 505, 624, 780], "look": [19, 20, 179, 279, 605], "dme_branch": [19, 281, 310, 515], "focu": 19, "assumpt": [19, 610], "nme_gizmo": 19, "nme_gizmo_ac": 19, "17": [19, 20, 32, 44, 88, 90, 108, 113, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 526, 596, 597, 600, 601, 639, 774], "zmax": [19, 107], "vname_r": 19, "d_gizmo": 19, "vname_i": 19, "y1": [19, 572], "1j": 19, "y2": 19, "m1": 19, "m2": 19, "ss": 19, "j1": [19, 59, 505], "j2": [19, 59], "j3": 19, "arbitrarili": 19, "obei": 19, "zr1_gizmo": 19, "nme_gizmo_acc": 19, "nme_gizmo_acp": 19, "xt_gizmo": 19, "mind": 20, "enhanc": 20, "plan": [20, 75, 578], "futur": [20, 65, 107, 118, 508, 611, 624, 778], "don": [20, 202, 508, 533, 613], "t_run_mp_3p": [20, 515, 785], "t_case3p_a": [20, 515, 785, 788, 789, 790, 791, 793, 794], "residu": [20, 577], "375e": 20, "042e": 20, "287e": 20, "179e": 20, "961e": 20, "570e": 20, "967e": 20, "405e": 20, "05": [20, 27, 212, 519, 624], "400e": 20, "090e": 20, "908e": 20, "newton": [20, 27, 107, 118, 174, 176, 180, 181, 182, 184, 185, 186, 187, 530, 613, 624, 639, 641, 642, 643, 644, 645, 646, 694], "converg": [20, 107, 118, 165, 167, 180, 181, 182, 183, 184, 187, 192, 193, 194, 217, 218, 219, 220, 226, 228, 229, 230, 232, 530, 564, 571, 576, 641, 642, 643, 644, 645, 646, 647, 648, 675, 688, 782], "ph": [20, 27], "6109": 20, "kw": [20, 318, 323, 326, 334, 338], "4206": 20, "kvar": [20, 318, 323, 334, 338], "5450": 20, "2442": 20, "561": 20, "1173": 20, "590": 20, "kv": [20, 44, 283, 311, 312, 338, 526, 597], "1996": 20, "120": 20, "1637": 20, "1105": 20, "0821": 20, "119": 20, "26": [20, 120, 639], "3055": 20, "2547": 20, "123": [20, 639], "2028": 20, "114": [20, 639], "79": [20, 524], "1750": 20, "9298": 20, "126": 20, "80": [20, 44], "8327": 20, "102": 20, "1341": 20, "970": 20, "52": [20, 545, 639], "2096": 20, "2672": 20, "1894": 20, "1275": 20, "8500": 20, "1800": 20, "9000": 20, "2375": 20, "9500": 20, "229": 20, "345": 20, "66": [20, 639], "152": 20, "455": 20, "1036": 20, "1364": 20, "230": 20, "144": 20, "72": [20, 639], "1323": 20, "881": 20, "2043": 20, "1133": 20, "2598": 20, "1508": 20, "1337": 20, "963": 20, "2074": 20, "1319": 20, "2652": 20, "1830": 20, "790": 20, "871": 20, "780": 20, "xfrm": 20, "xfmr": [20, 679], "substat": 20, "4bu": [20, 787], "unb": [20, 787], "dss": [20, 787], "bal": [20, 787], "opendss": [20, 787], "ieee": [20, 27, 44, 522, 523, 527, 619, 670, 787], "ground": [20, 787], "wye": [20, 787], "sourceforg": [20, 787], "net": [20, 493, 787], "electricdss": [20, 787], "head": [20, 787], "tree": [20, 787], "trunk": [20, 787], "distrib": [20, 787], "ieeetestcas": [20, 787], "basemva": [20, 283, 517, 526, 527, 552, 553, 554, 556, 557, 559, 560, 561, 562, 564, 579, 601, 605, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 647, 648, 649, 657, 671, 675, 679, 689, 690, 691, 692, 694, 695, 697, 780, 781], "freq": [20, 283, 323], "frequenc": [20, 283, 323], "hz": [20, 283, 323], "basekva": [20, 283], "busid": 20, "basekv": [20, 44, 283, 526, 597], "vm1": [20, 312], "vm2": [20, 312], "vm3": [20, 312, 458], "va1": [20, 312], "va2": [20, 312], "va3": [20, 312, 458], "brid": 20, "lcid": 20, "len": [20, 212, 323], "5280": 20, "2500": [20, 624, 639], "xfid": 20, "ratio": [20, 309, 338, 526, 596, 624, 639, 699], "6000": 20, "shunt": [20, 283, 287, 306, 307, 309, 323, 333, 334, 335, 336, 337, 436, 437, 438, 439, 440, 441, 485, 486, 487, 488, 489, 490, 501, 522, 523, 524, 526, 579, 597, 676, 680], "shid": 20, "shbu": 20, "gs1": [20, 334], "gs2": [20, 334], "gs3": [20, 334], "bs1": [20, 334], "bs2": [20, 334], "bs3": [20, 334], "ldid": 20, "ldbu": 20, "pd1": [20, 326], "pd2": [20, 326], "pd3": [20, 326], "ldpf1": 20, "ldpf2": 20, "ldpf3": 20, "genid": 20, "gbu": 20, "vg1": 20, "vg2": 20, "vg3": 20, "pg1": [20, 318], "pg2": [20, 318], "pg3": [20, 318, 466], "qg1": [20, 318], "qg2": [20, 318], "qg3": [20, 318, 466], "r11": 20, "r21": 20, "r31": 20, "r22": 20, "r32": 20, "r33": 20, "x11": 20, "x21": 20, "x31": 20, "x22": 20, "x32": 20, "x33": 20, "c11": 20, "c21": 20, "c31": 20, "c22": 20, "c32": 20, "c33": 20, "457541": 20, "15594": 20, "153474": 20, "466617": 20, "157996": 20, "461462": 20, "501648": 20, "384909": 20, "04813": 20, "423624": 20, "06502": 20, "0671": 20, "86241": 20, "85323": 20, "875": 20, "09098": 20, "3254": 20, "xfrm3p": 20, "mile": [20, 323], "configur": 20, "referenc": [20, 117, 118, 323, 648, 649], "hertz": 20, "dme_bus3p": [20, 281, 313, 501, 515], "slack": [20, 27, 379, 387, 522, 523, 524, 615, 619, 620, 624, 641, 642, 643, 644, 645, 646, 688, 694], "nomin": [20, 283, 309, 325, 333, 334, 338, 526, 596, 616, 617, 778], "degre": [20, 187, 309, 310, 311, 312, 322, 521, 526, 596, 597, 624], "dme_line3p": [20, 281, 324, 501, 515], "dme_xfmr3p": [20, 281, 339, 501, 515], "resist": [20, 309, 323, 338, 526, 596], "reactanc": [20, 309, 323, 338, 526, 596], "dme_shunt3p": [20, 281, 335, 501, 515], "demand": [20, 67, 162, 325, 326, 333, 334, 522, 523, 524, 526, 597, 603, 604, 617, 778], "dme_load3p": [20, 281, 327, 501, 515], "lpf1": 20, "lpf2": 20, "lpf3": 20, "dme_gen3p": [20, 281, 319, 501, 515], "3x3": [20, 323], "capacit": 20, "nf": [20, 323], "dme_buslink": [20, 281, 316, 501, 515], "linid": 20, "bus3pid": 20, "t_case3p_b": [20, 515, 785], "t_case3p_c": [20, 515, 785], "t_case3p_d": [20, 515, 785], "t_case3p_": [20, 515, 785], "t_case3p_f": [20, 515, 785], "t_case3p_g": [20, 515, 785, 794], "t_case3p_h": [20, 515, 785], "case_util": [20, 281, 515, 796], "convert_1p_to_3p": [20, 283, 796], "mpc3p": [20, 283], "live": [20, 260], "convert_1p_to_3p_ex1": 20, "mlx": [20, 260], "t_convert_1p_to_3p": [20, 283, 515, 785], "nlp": [21, 27, 33, 34, 39, 107, 118, 175, 188, 189, 190, 191, 192, 193, 194, 214, 215, 216, 239, 246, 250, 259], "site": [21, 44, 63], "consult": 21, "relnot": 21, "appendix": [21, 624], "goal": [21, 108, 162], "restructur": 21, "still": [21, 111, 118, 172, 266, 268, 271, 272, 274, 279, 526, 777], "tn1": 21, "auction": [21, 590, 702, 703, 704, 705, 768], "tn2": [21, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "tn3": [21, 554, 555, 560], "tn4": [21, 553, 554, 555, 556, 557, 559, 560, 561, 562], "cite": 21, "donat": 21, "detect": [22, 23, 24, 25, 26, 39, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 199, 202, 203, 204, 205, 211, 212, 260, 262, 263, 264, 279, 280, 515, 532, 533, 534, 536, 540, 543, 546, 548, 550, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 624, 683], "lu": [22, 31, 187, 624], "privat": [22, 23, 24, 25, 26, 38, 105, 117, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 259, 263, 264, 279, 515, 517, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593], "lu_vec": 22, "pardiso": [24, 25, 26, 27, 31, 34, 624], "parallel": [24, 44], "direct": [24, 31, 179, 212, 529, 547, 699, 775], "have_feature_pardiso_legaci": [24, 26, 38, 39], "have_feature_pardiso_object": [24, 25, 38, 39], "pardiso_legaci": 25, "v5": 25, "mex": [25, 107, 118, 159, 194, 219, 220, 230, 624, 639], "have_feature_pardiso": [25, 26, 38, 39], "pardiso_object": 26, "v6": [26, 117, 171], "later": [26, 107, 108, 117, 118, 134, 139, 141, 144, 146, 150, 153, 347, 509, 568, 575, 624, 639], "f_fcn": [27, 191, 192, 193, 194], "xmin": [27, 32, 116, 118, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "xmax": [27, 32, 116, 118, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "gh_fcn": [27, 191, 192, 193, 194], "hess_fcn": [27, 191, 192, 193, 194], "exitflag": [27, 32, 107, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "minim": [27, 28, 162, 191, 192, 193, 194, 195], "subject": [27, 29, 32, 161, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 196, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 577, 578], "inequ": [27, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 188, 190, 191, 192, 193, 194, 214, 216, 517, 624, 639, 647, 648, 652, 777], "9th": [27, 191, 192, 193, 194], "d2f": [27, 112, 114, 115, 118, 189, 191, 192, 193, 194, 215, 284, 377, 517, 624, 639, 648, 657, 658, 673], "infti": [27, 32, 161, 213, 221], "dg": [27, 111, 118, 188, 191, 192, 193, 194, 214, 344, 497, 624, 639, 648, 654, 661], "lagrangian": [27, 190, 191, 192, 193, 194, 216], "lxx": [27, 190, 191, 192, 193, 194, 216], "eqnonlin": [27, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 190, 191, 192, 193, 194, 216], "ineqnonlin": [27, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 190, 191, 192, 193, 194, 216], "parenthes": [27, 107, 118, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "linsolv": [27, 624], "feastol": [27, 624], "toler": [27, 67, 107, 118, 124, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 211, 212, 271, 332, 546, 571, 576, 624, 639, 641, 642, 643, 644, 645, 646, 685, 689, 690, 691, 692, 694, 695, 782], "gradtol": [27, 624], "comptol": [27, 624], "complementar": 27, "costtol": [27, 624], "max_it": [27, 159, 170, 180, 181, 182, 183, 184, 187, 191, 197, 212, 624], "150": [27, 624, 639], "step_control": [27, 107, 118, 194, 219, 220, 230, 624], "enabl": [27, 212, 624, 774, 775, 776, 777], "sc": [27, 107, 118, 171, 194, 219, 220, 230, 578, 624, 639, 746], "red_it": [27, 624], "reduct": [27, 624, 639], "cost_mult": [27, 190, 191, 192, 193, 194, 216], "improv": [27, 44, 780], "3rd": [27, 43, 118, 269, 275, 517, 519, 560, 562, 567, 568, 570, 594, 595, 775], "xi": [27, 624], "99995": [27, 624], "alpha": [27, 67, 197, 284, 623, 624], "sigma": [27, 624], "z0": [27, 107, 291, 526, 624, 648, 649, 780], "alpha_min": [27, 624], "alpha_p": 27, "alpha_d": 27, "smaller": [27, 43, 522, 523, 524, 624, 670, 700], "rho_min": [27, 624], "rho_t": [27, 624], "rho_max": [27, 624], "mu_threshold": [27, 624], "kt": [27, 624], "forc": [27, 107, 118, 624], "max_steps": [27, 624], "1e10": [27, 624], "norm": [27, 180, 181, 183, 187, 207, 624], "exce": [27, 624, 688], "full_hist": 27, "hist": [27, 32, 180, 181, 183, 187], "trajectori": [27, 32, 63, 180, 181, 183, 187], "altern": [27, 31, 32, 63, 107, 118, 121, 123, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 184, 187, 191, 192, 193, 194, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 689, 690, 691, 692, 694, 695], "algorithm": [27, 31, 107, 118, 167, 171, 180, 181, 182, 183, 184, 187, 191, 194, 217, 218, 219, 220, 230, 573, 575, 611, 624, 639, 648, 685, 689, 690, 691, 692, 694, 695, 780], "exit": [27, 32, 37, 103, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 199, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 258, 277, 532, 814], "reach": [27, 32, 200, 201, 202, 212, 532, 533, 535, 541, 544, 549, 551, 624, 688], "fail": [27, 32, 192, 212, 228, 269, 271, 272, 275, 276, 495, 497, 499, 624, 685, 688, 689, 690, 691, 692, 694, 695], "feascond": [27, 32], "gradcond": [27, 32], "compcond": [27, 32], "costcond": [27, 32], "gamma": [27, 32], "stepsiz": [27, 32, 212, 688], "alphap": [27, 32], "alphad": [27, 32], "messag": [27, 32, 67, 107, 118, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 187, 202, 212, 222, 269, 271, 272, 274, 275, 278, 493, 527, 533, 605, 624, 639, 676, 677, 679, 680, 682, 688, 698], "langrang": [27, 32, 107, 118, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "kuhn": [27, 32, 107, 118, 163, 164, 165, 166, 167, 168, 169, 190, 191, 192, 193, 194, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 596, 597, 600, 601, 653], "tucker": [27, 32, 107, 118, 163, 164, 165, 166, 167, 168, 169, 190, 191, 192, 193, 194, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 596, 597, 600, 601, 653], "mu_l": [27, 32, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "mu_u": [27, 32, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 163, 164, 165, 166, 167, 168, 169, 191, 192, 193, 194, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "almost": [27, 32, 163, 164, 165, 167, 168, 169, 181, 182, 183, 184, 187, 191, 192, 193, 194, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "fmincon": [27, 107, 118, 133, 134, 175, 177, 188, 189, 190, 191, 192, 193, 194, 196, 214, 215, 216, 219, 220, 575, 624, 627, 639, 751], "toolbox": [27, 32, 38, 105, 107, 118, 133, 134, 135, 139, 145, 146, 148, 149, 150, 152, 153, 163, 165, 167, 168, 169, 170, 181, 182, 183, 184, 187, 191, 192, 193, 194, 219, 220, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 259, 279, 624, 639, 640], "aeq": [27, 32, 163, 164, 165, 167, 168, 169, 191, 192, 193, 194, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "beq": [27, 32, 163, 164, 165, 167, 168, 169, 191, 192, 193, 194, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "en": [27, 191, 192, 193, 194, 217, 218, 219, 220], "wikipedia": [27, 191, 192, 193, 194], "wiki": [27, 191, 192, 193, 194], "nonlinear_program": [27, 191, 192, 193, 194], "f2": [27, 181, 183, 191, 192, 193, 194, 526, 598], "gh2": [27, 191, 192, 193, 194], "hess2": [27, 191, 192, 193, 194], "nargin": [27, 191, 192, 193, 194, 279], "rai": 27, "wang": 27, "hi": 27, "phd": 27, "dissert": 27, "applic": [27, 119, 124, 125, 126, 157, 159, 170, 197, 578, 589], "multi": [27, 162, 179, 506, 624], "period": [27, 43, 59, 61, 63, 67, 75, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 104, 624, 780], "secur": [27, 44, 63, 71, 74, 82], "market": 27, "thesi": 27, "cornel": [27, 222, 586, 588, 593, 624, 639], "univers": 27, "2007": 27, "murillo": 27, "sanchez": 27, "thoma": 27, "issu": [27, 279, 506, 524], "transact": [27, 522, 523, 619, 670], "vol": [27, 522, 523, 619, 670], "aug": [27, 44], "1185": 27, "1193": 27, "1109": [27, 522, 523, 619], "tpwr": 27, "901301": 27, "unconstrain": [28, 195, 526, 596, 607, 652, 653], "banana": [28, 195], "x_1": [29, 185, 186, 196, 206, 284], "x_2": [29, 185, 186, 196, 206, 284], "x_3": [29, 196], "varargin": [30, 76, 78, 79, 80, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127, 158, 160, 173, 183, 187, 198, 261, 265, 283, 284, 301, 304, 347, 354, 359, 361, 364, 366, 368, 377, 444, 449, 492, 505, 509, 511, 512, 513, 514, 517, 563, 570, 572, 575, 622, 624, 639, 640, 648, 684, 687, 693, 697, 780], "mpver": [30, 76, 127, 158, 160, 173, 198, 515, 783], "previou": [31, 199, 207, 208, 209, 212, 515, 530, 532, 533, 538, 539, 542, 547, 624, 689, 690, 691, 692, 694, 695], "qa": 31, "gilbert": [31, 187, 624], "peierl": [31, 187, 624], "permut": 31, "umfpack": [31, 187, 624], "rh": [31, 121, 123, 284, 517, 610], "alwai": [31, 43, 67, 118, 199, 283, 532, 572], "backslash": [31, 107, 118, 187, 624], "decomposit": [31, 624], "substitut": [31, 624], "short": [31, 181, 289, 309, 342, 344, 345, 346, 526, 596], "cut": 31, "overhead": 31, "thu": [31, 43], "better": [31, 75, 624], "small": [31, 187, 624], "nout": 31, "vec": 31, "thresh": [31, 107, 118], "lu3": [31, 187, 624], "lu3a": 31, "lu4": [31, 187, 624], "lu5": [31, 187, 624], "lu3m": 31, "lu3am": 31, "lu4m": 31, "lu5m": 31, "paren": [31, 67, 107, 118], "arg": [31, 62, 107, 118, 164, 187, 212, 225, 444, 505, 518, 532, 545, 552, 624], "amd": [31, 187, 624], "pivot": 31, "threshold": [31, 59, 107, 118], "mtype": 31, "nonsymmetr": 31, "iparm": 31, "1st": [31, 43, 61, 62, 110, 113, 199, 343, 445, 519, 532, 552, 553, 554, 555, 556, 557, 648, 775], "2nd": [31, 43, 269, 275, 343, 444, 445, 517, 519, 552, 553, 554, 555, 556, 557, 567, 568, 570, 581, 594, 595, 648, 724, 775], "dparm": 31, "tr": [31, 110, 118], "miss": [32, 40, 62, 111, 112, 116, 118, 342, 343, 346, 445, 446, 447, 649], "quadprog": [32, 107, 118, 152, 153, 163, 165, 167, 168, 169, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 624, 638, 639], "v8doc": [32, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233], "sa": [32, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233], "sashtml": [32, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233], "iml": [32, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233], "chap8": [32, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233], "sect12": [32, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233], "htm": [32, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233], "1003": [32, 163, 164, 165, 166, 168, 169, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233], "quiet": [33, 34, 35, 36, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 701, 703, 704, 705, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813], "mplinsolv": [35, 38, 39, 107, 118, 187, 624], "qps_mip": [36, 38, 39, 230], "exit_on_fail": [37, 103, 258, 277, 814], "unless": [37, 64, 103, 179, 258, 269, 271, 272, 274, 275, 277, 278, 348, 444, 507, 508, 648, 688, 689, 690, 691, 692, 694, 695, 814], "t_run_test": [37, 103, 258, 266, 268, 269, 271, 272, 274, 275, 277, 279, 280, 814], "all_ok": [37, 103, 258, 273, 277, 814], "web": [38, 105, 259, 816], "asid": [38, 105, 259], "mipsver": [38, 39], "mips_example1": [38, 39], "mips_example2": [38, 39], "test_mip": [38, 39], "t_mip": [38, 39], "t_mips_pardiso": [38, 39], "t_mplinsolv": [38, 39], "t_qps_mip": [38, 39], "have_feature_lu_vec": [38, 39], "have_feature_mip": [38, 39], "mpci": [40, 63], "fuel": [40, 577, 578], "new_mpc": [40, 41, 42], "gen_typ": 40, "insert": [40, 292, 293, 697], "bottom": [40, 80, 706], "genfuel": [40, 41, 42, 63, 515, 526, 570, 578, 783], "unknown": [40, 577, 578], "newli": [40, 41, 42, 60, 292, 493], "storag": [41, 43, 49, 61, 64, 67, 75, 78, 79, 80, 85, 100, 577, 578, 603], "xgd": [41, 42, 43, 60, 61, 63, 65], "sd": [41, 43, 63, 64, 481, 522, 523, 524, 617], "xgen": 41, "storagedata": [41, 43, 61, 63, 64], "new_xgd": [41, 42], "new_sd": 41, "storageunitdata": 41, "xgendata": [41, 42, 43, 55, 56, 57, 58, 61, 63, 64, 65], "mat": [41, 42, 60, 62, 63, 64, 65, 107, 108, 118, 526, 605, 688, 689, 690, 691, 692, 694, 695, 697, 698], "xgd_tabl": [41, 42, 65], "filenam": [41, 42, 696, 697, 698], "loadstoragedata": [41, 63, 105, 106], "sd_tabl": [41, 64], "ess": [41, 577], "loadxgendata": [41, 42, 60, 63, 105, 106], "wind": [42, 51, 52, 53, 54, 60, 63, 104, 577, 578, 679], "windunitdata": 42, "profil": [43, 48, 52, 53, 60, 61, 63, 104], "argin": 43, "dim": [43, 61, 63, 347, 505, 567, 568, 570, 580, 594, 595, 700], "chgtab": [43, 519, 698], "chgtabsi": 43, "xgdi": [43, 63], "sdi": 43, "ctset": 43, "dimension": [43, 60, 63, 64, 65, 108, 111, 117, 343, 344, 418, 444, 445, 567, 594], "chgtype": [43, 61], "nt": [43, 50, 61, 63, 75, 104], "nj_max": [43, 61, 75], "idx_profil": [43, 60, 63, 104, 105, 106], "chgtabi": 43, "storagei": [43, 63], "ctsetsi": 43, "contingencydata": [43, 61], "nor": 43, "scenario": [43, 61, 63, 75, 104], "conting": [43, 44, 47, 61, 63, 67, 75, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94], "expand": [43, 63, 110, 113, 114], "singleton": [43, 61], "ignor": [43, 61, 107, 118, 179, 225, 269, 389, 569, 602, 624, 639, 676, 777], "mpcdata": [43, 61], "mandatori": 43, "oppos": [43, 67, 262, 284, 418, 505, 506, 526, 613], "nj": [43, 104], "unspecifi": [43, 577, 777], "probabl": [43, 50, 59, 63, 519, 599, 613], "correctli": 43, "inconsist": 43, "resp": 43, "ie": [43, 155, 624], "dedic": 43, "binari": [43, 107, 116, 118, 163, 164, 165, 166, 167, 168, 169, 444, 578], "span": 43, "cghtype": 43, "118": 44, "caseformat": [44, 45, 46, 82, 83, 84, 85, 515, 527, 566, 648, 685, 688, 689, 690, 691, 692, 694, 695, 702, 706, 707, 708, 709, 710, 711, 712, 783, 795], "ieee118cdf": 44, "txt": [44, 119, 269, 275, 526, 624, 639, 680, 682], "sep": 44, "2004": 44, "cdf2matp": 44, "rev": [44, 676, 680, 696], "warn": [44, 67, 107, 118, 163, 164, 165, 166, 167, 168, 169, 527, 676, 677, 679, 680, 682, 698], "cdf": [44, 527], "lab": [44, 526], "ec": [44, 526], "uw": [44, 526], "edu": [44, 155, 222, 526, 586, 588, 593, 624, 639], "pstca": [44, 526], "psap": 44, "mar": [44, 592], "2006": 44, "archiv": 44, "1961": 44, "2010": [44, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 815], "cm": 44, "cz": 44, "group": [44, 60, 170, 525, 529, 570, 574], "thermal": 44, "cabl": 44, "safe": 44, "config": 44, "345kv": 44, "circuit": [44, 526], "161": 44, "138kv": 44, "split": [44, 151, 587, 674], "ramp_agc": [44, 566, 601], "ramp_10": [44, 566, 601], "ramp_30": [44, 566, 601], "c118": 44, "2012": 44, "consider": 44, "compromis": 44, "procedur": [44, 624], "synchron": [44, 577, 578], "capacitor": 44, "decreas": 44, "104": 44, "hydro": [44, 577], "close": [44, 162, 527], "geograph": 44, "locat": [44, 110, 111, 112, 113, 114, 115, 211, 212, 279, 283, 507, 508, 546, 570, 572, 688], "retir": 44, "yield": [44, 527, 618], "minu": [44, 616], "chosen": [44, 61], "impact": 44, "deviat": [44, 688, 694], "criterion": [44, 212, 624], "wors": 44, "worst": 44, "upgrad": 44, "76": 44, "caus": [44, 212, 262, 688], "infeas": [44, 164, 166, 168, 222, 223, 225, 227, 231, 527, 688], "exceed": [44, 223, 777], "appar": [44, 309, 343, 558, 624, 639, 652], "enough": [44, 222, 581], "addition": [44, 688, 689, 690, 691, 692, 694, 695], "330": 44, "defici": 44, "difficult": 44, "resort": 44, "wherea": 44, "stochast": [46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 67, 71, 74, 99], "commit": [46, 47, 48, 49, 52, 53, 54, 58, 61, 67, 73, 74, 75, 80, 81, 98, 99, 101], "ex_case3a": [46, 105, 106], "startup": [46, 317, 508, 526, 566, 598], "shutdown": [46, 526, 566, 598], "transit": [50, 59, 63, 79], "definit": [50, 157, 166, 227, 292, 589], "determinist": [53, 63, 68, 69, 70, 72, 73, 96, 624, 639], "multiperiod": [56, 67, 72, 96], "ramp": [56, 59, 75, 78, 100, 330, 526, 601], "md0": 59, "mask": [59, 614], "taken": [59, 96, 118, 174, 175, 177, 178, 212, 522, 523, 524, 526, 561, 562, 594, 595, 596, 607, 615, 670, 682, 688, 774], "transmat": [59, 63], "ve": 59, "profilesi": [60, 63], "profiles0": 60, "mycas": [60, 579], "myxgendata": 60, "iwind": 60, "addwind": [60, 105, 106], "mywindunit": 60, "mywindprofil": 60, "loadmd": [60, 61, 67, 105, 106], "mytransmat": 60, "apply_profil": [60, 63, 105, 106], "pr_rep": 61, "pr_rel": 61, "pr_add": 61, "pr_tcont": 61, "pr_type": 61, "pr_tmpcd": 61, "pr_txgd": 61, "pr_tctd": 61, "pr_tstgd": 61, "pr_chgtype": 61, "question": [61, 262, 777], "offer": [61, 65], "ct_tbu": [61, 566, 599], "ct_tgen": [61, 519, 566, 599], "ct_tbrch": [61, 519, 566, 599], "ct_tareabu": [61, 566, 599], "ct_tareagen": [61, 566, 599], "ct_tareabrch": [61, 566, 599], "ct_tload": [61, 566, 599], "ct_tareaload": [61, 519, 566, 599], "ct_tgencost": [61, 566, 599], "ct_tareagencost": [61, 566, 599], "commitsch": [61, 65], "initialpg": [61, 65], "rampwearcostcoeff": [61, 65], "positiveactivereservepric": [61, 65], "positiveactivereservequant": [61, 65], "negativeactivereservepric": [61, 65], "negativeactivereservequant": [61, 65], "positiveactivedeltapric": [61, 65], "negativeactivedeltapric": [61, 65], "positiveloadfollowreservepric": [61, 65], "positiveloadfollowreservequant": [61, 65], "negativeloadfollowreservepric": [61, 65], "negativeloadfollowreservequant": [61, 65], "minstoragelevel": [61, 64], "maxstoragelevel": [61, 64], "outeff": [61, 64], "ineff": [61, 64], "lossfactor": [61, 64], "rho": [61, 64], "usual": [61, 564, 624, 639, 647, 648], "idx_ct": [61, 515, 519, 566, 783], "ct_col": [61, 566, 599], "old": [61, 124, 126, 159, 167, 170, 230, 569, 599, 602, 611, 624, 639], "vale": 61, "pre": [61, 117, 284, 291, 495, 497, 499, 500], "iii": 61, "interpret": [61, 340, 681, 682], "whenev": 61, "expans": 61, "within": [61, 108, 110, 113, 117, 118, 284, 285, 444, 503, 506, 517, 535, 551, 610], "varfil": 62, "vartyp": 62, "varnam": 62, "prioriti": [62, 199, 210, 532, 545, 624], "throw": [62, 118], "regardless": [62, 171, 520], "transmati": 63, "contabi": 63, "trajdatai": 63, "contab": 63, "trajdata": 63, "n_t": [63, 75], "n_j": [63, 75], "horizon": [63, 67, 75], "older": [63, 505], "centroid": 63, "n_w": 63, "colnam": [64, 65], "correpsond": 64, "md_init": [64, 105, 106], "unitidx": 64, "expectedterminalstorageaim": 64, "expectedterminalstoragemin": 64, "expectedterminalstoragemax": 64, "initialstorag": 64, "initialstoragelowerbound": 64, "initialstorageupperbound": 64, "initialstoragecost": 64, "terminalstoragepric": 64, "terminalchargingprice0": 64, "terminaldischargingprice0": 64, "terminalchargingpricek": 64, "terminaldischargingpricek": 64, "terminalpg": 65, "commitkei": [65, 67], "initialst": 65, "minup": 65, "mindown": 65, "potenti": [65, 493, 532, 688], "fueltyp": 65, "gen_statu": [65, 519, 566, 601], "mdi": 67, "mdo": [67, 75], "func": [67, 179, 584], "cplex": [67, 107, 118, 124, 131, 163, 167, 178, 224, 230, 624, 626, 639, 739], "gurobi": [67, 107, 118, 126, 127, 137, 165, 167, 178, 217, 218, 219, 220, 226, 230, 260, 624, 629, 639, 742], "build_model": 67, "miqp": [67, 107, 118, 147, 163, 165, 167, 168, 178, 235, 237, 248, 259, 515, 732], "coordin": [67, 212, 284, 493, 526, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 570, 598, 624, 641, 642, 644, 645, 650, 651, 815], "solve_model": 67, "resolve_new_cost": 67, "unchang": [67, 569], "dc_model": 67, "fixed_r": 67, "contstraint": 67, "never": 67, "q_coordin": 67, "security_constraint": 67, "terminal_target": 67, "cyclic": 67, "simultan": [67, 111, 118, 449, 624, 639], "uc": [67, 70, 80, 81, 87], "down": [67, 691, 695, 780], "roll": [67, 199, 202, 532], "happen": 67, "alg": [67, 107, 118, 167, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 196, 212, 217, 218, 219, 220, 230, 374, 611, 624, 648], "miqps_mast": [67, 107, 118, 131, 136, 137, 138, 139, 147, 163, 164, 165, 166, 168, 169, 178, 235, 259, 260, 622], "qps_master": [67, 107, 118, 128, 130, 131, 136, 137, 138, 140, 141, 145, 146, 147, 148, 151, 152, 153, 161, 178, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 257, 259, 260, 684], "skip_pric": [67, 107, 118, 163, 164, 165, 166, 167, 168, 169], "skip": [67, 107, 118, 163, 164, 165, 166, 167, 168, 169, 179, 261, 274, 279], "price_stage_warn_tol": [67, 107, 118, 163, 164, 165, 166, 167, 168, 169], "mi": [67, 118, 163, 164, 165, 166, 167, 168, 169], "econom": [68, 582], "consid": [75, 271, 449, 577, 578], "noth": [75, 261, 278, 286, 292, 341, 348, 493, 624, 639], "though": [75, 503], "incomplet": 75, "nb": [75, 111, 116, 118, 522, 523, 524, 530, 532, 547, 552, 554, 555, 556, 557, 578, 607, 615, 617, 619, 620, 624, 639, 647, 688, 699, 778], "n_b": 75, "n_g": 75, "nl": [75, 521, 522, 523, 524, 552, 553, 556, 559, 561, 579, 619, 620, 647], "n_l": 75, "nc_max": 75, "n_c": 75, "rup": 75, "upward": 75, "rdn": 75, "downward": 75, "lamp": 75, "muf": 75, "selector": [77, 494, 496, 498, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "default_opt": [77, 119, 124, 125, 126, 157, 159, 170, 197, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "valid_opt": [77, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "nested_struct_copi": [77, 244, 259, 260, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "plot": [78, 79, 80, 81, 97, 98, 99, 101, 106, 199, 212, 532, 624], "option1_nam": [78, 79, 80], "option1_valu": [78, 79, 80], "parenthesi": [78, 79, 80, 81], "saveit": [78, 79, 80, 81], "saveal": [78, 79, 80], "savepath": [78, 79, 80, 81, 508], "savenam": [78, 79, 80, 81], "placehold": [78, 79, 80, 81, 111, 118, 212], "size_factor": [78, 79, 80, 81], "font": [78, 79, 80, 81], "marker": [78, 79, 80, 81], "show_pc": 78, "pc": 78, "show_variable_pmax": 78, "show_limit": 78, "show_conting": 78, "show_reserv": 78, "show_grid": [78, 79], "divid": [78, 79], "staircas": 79, "evenli": [79, 104, 672], "align": 79, "smooth": [79, 624, 639], "displac": 79, "sort_tol": 79, "round": 79, "nearest": 79, "sort": 79, "show_expected_initi": 79, "show_expected_fin": 79, "show_adjusted_dispatch": 79, "show_dispatch": 79, "md2": 80, "titl": [80, 81, 212, 292], "subtitl": [80, 81], "legend": [80, 81, 212], "uc1": [80, 81], "uc2": [80, 81], "xlabel": [80, 81, 212], "axi": [80, 81, 212, 699], "ylabel": [80, 81, 212], "rowlabel": [80, 81], "pff": 80, "optin": 81, "red": [81, 347], "status": [81, 286], "grai": 81, "case30": [82, 689, 690, 691, 692, 694, 695, 706], "case30v19": 82, "segment": [82, 526, 598], "tlmp": [84, 85, 100], "cong": [84, 85], "chen": [84, 85], "most_ex5_mpopf": [96, 105, 106], "create_plot": [97, 98, 99, 101], "create_pdf": [97, 98, 99, 101], "savedir": [97, 98, 99, 101], "choic": [97, 98, 99, 101, 212, 279, 615, 624], "sp_plot": 97, "spuc_plot": 98, "suc_plot": 99, "deteminist": 101, "uc_plot": 101, "dynam": [102, 780], "space": [104, 672], "getprofil": [104, 105, 106], "most_summari": [105, 106], "plot_gen": [105, 106], "plot_storag": [105, 106], "plot_uc": [105, 106], "plot_uc_data": [105, 106], "mostver": [105, 106], "addgen2mpc": [105, 106], "addstorag": [105, 106], "filter_ramp_transit": [105, 106], "uniformwindprofil": [105, 106], "most_ex1_": [105, 106], "most_ex2_dcopf": [105, 106], "most_ex3_dcopf_w_uc": [105, 106], "most_ex4_dcopf_ss": [105, 106], "most_ex6_uc": [105, 106], "most_ex7_suc": [105, 106], "ex_case3b": [105, 106], "ex_contab": [105, 106], "ex_load_profil": [105, 106], "ex_storag": [105, 106], "ex_transmat": [105, 106], "ex_wind": [105, 106], "ex_wind_profil": [105, 106], "ex_wind_profile_d": [105, 106], "ex_wind_uc": [105, 106], "ex_xgd": [105, 106], "ex_xgd_ramp": [105, 106], "ex_xgd_r": [105, 106], "ex_xgd_uc": [105, 106], "test_most": [105, 106], "t_most_3b_1_1_0": [105, 106], "t_most_3b_1_1_2": [105, 106], "t_most_3b_3_1_0": [105, 106], "t_most_3b_3_1_2": [105, 106], "t_most_30b_1_1_0": [105, 106], "t_most_30b_1_1_17": [105, 106], "t_most_30b_3_1_0": [105, 106], "t_most_30b_3_1_17": [105, 106], "t_most_fixed_r": [105, 106], "t_most_30b_1_1_0_uc": [105, 106], "t_most_sp": [105, 106], "t_most_spuc": [105, 106], "t_most_mpopf": [105, 106], "t_most_uc": [105, 106], "t_most_suc": [105, 106], "t_most_tlmp": [105, 106], "t_most_w_d": [105, 106], "c118swf": [105, 106], "t_case30_most": [105, 106], "t_case3_most": [105, 106], "t_case_tlmp": [105, 106], "t_case_tlmp_storag": [105, 106], "loadgenericdata": [105, 106], "mpoption_info_most": [105, 106], "mm0": 107, "om": [107, 118, 377, 497, 517, 518, 564, 647, 648, 652, 653, 654, 655, 656, 661, 662, 663, 687], "lin": [107, 108, 110, 117, 118, 497, 517, 564, 647, 648], "qcn": [107, 113, 118], "nle": [107, 111, 117, 118, 291, 497, 517, 647, 648], "qdc": [107, 114, 115, 117, 118, 517], "nlc": [107, 112, 117, 118, 517], "prob_typ": [107, 118], "cach": [107, 110, 113, 114, 115, 116, 118, 262, 492, 496, 498, 517], "problem_typ": [107, 118], "userdata": [107, 117, 118, 286], "get_set_typ": 107, "to_struct": [107, 108, 118, 172], "from_struct": [107, 108, 118, 172], "get_user_data": 107, "is_mixed_integ": [107, 118], "is_solv": [107, 118], "has_parsed_soln": [107, 109, 118], "parse_soln": [107, 109, 110, 111, 113, 116, 118], "display_head": 107, "display_foot": 107, "footer": [107, 292], "y0": 107, "ymin": 107, "lincon1": 107, "a1": 107, "b1": [107, 113], "lincon2": 107, "u2": 107, "deprec": [107, 115, 117, 118, 122, 260, 526, 609, 611, 622, 624, 647, 684, 732, 767, 778], "set_manag": [107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 259, 260, 492], "a_struct": [107, 117, 118], "an_mm": 107, "an_om": [107, 118], "stuctur": 107, "sm_variabl": [107, 109, 110, 111, 112, 113, 114, 115, 118, 259, 260], "sm_lin_constraint": [107, 118, 259, 260], "sm_quad_constraint": [107, 259, 260], "sm_nln_constraint": [107, 118, 259, 260], "sm_quad_cost": [107, 115, 118, 259, 260], "sm_nln_cost": [107, 118, 259, 260], "eflag": [107, 109, 110, 111, 112, 113, 114, 115, 116, 118], "jac": [107, 118, 180, 181, 182, 184, 187, 212, 648, 780], "leq": [107, 118, 236, 247], "nleq": [107, 118, 174, 238, 245, 249, 259], "st": [107, 118, 522, 523, 524, 534, 552, 561, 578, 647, 648], "new_mm": 107, "struct2object": [107, 108, 118, 259, 260], "recreat": [107, 108, 118], "nne": [107, 118], "nni": [107, 118], "nnc": [107, 118], "qqcn": [107, 118], "idx1": [107, 117, 118, 449], "idx2": [107, 117, 118, 449], "set_type1": [107, 117, 118], "set_type2": [107, 117, 118], "set_typ": [107, 117, 118, 444, 517], "foo": [107, 108, 117, 118, 179, 279], "mu_l_foo": [107, 117, 118], "mu_u_foo": [107, 117, 118], "bar": [107, 108, 117, 118, 279], "nbar": [107, 117, 118], "prefer": [107, 117, 118, 566], "haven": [107, 117, 118], "get_n": [107, 108, 117], "get_userdata": [107, 117, 118], "suppos": [107, 108, 117], "unpack": [107, 117], "recheck": [107, 118], "due": [107, 117, 118], "reevalu": 107, "pne": [107, 118, 176, 199, 207, 208, 209, 210, 211, 240, 251, 255, 259], "milp": [107, 118, 136, 139, 147, 162, 163, 164, 165, 166, 167, 168, 178, 235, 260, 515], "minlp": [107, 118, 175], "mp_linsolv": [107, 118], "nleqs_mast": [107, 118, 135, 174, 180, 181, 182, 183, 185, 186, 187, 212, 245, 259, 260], "pnes_mast": [107, 118, 176, 199, 204, 205, 206, 210, 211, 255, 259, 260], "qcqps_master": [107, 177, 213, 214, 215, 216, 217, 218, 220, 256, 259, 260], "nlps_master": [107, 111, 118, 133, 134, 140, 141, 143, 175, 191, 192, 193, 195, 196, 219, 220, 246, 259, 260], "preced": [107, 119, 124, 125, 126, 157, 159, 170, 174, 175, 176, 177, 178, 197], "mosek": [107, 118, 147, 167, 168, 170, 171, 178, 230, 231, 624, 636, 639, 747], "linprog": [107, 118, 145, 146, 167, 169, 225, 230, 233, 624, 634, 639], "high": [107, 118, 138, 157, 158, 166, 167, 178, 227, 230, 260, 566, 578, 624, 630, 743, 757, 761], "glpk": [107, 118, 125, 136, 164, 167, 178, 225, 230, 624, 628, 741], "bpmpd": [107, 118, 128, 178, 222, 230, 624, 639], "qcqp": [107, 177, 213, 215, 216, 217, 218, 219, 220, 241, 252, 256, 259], "ipopt": [107, 118, 140, 141, 159, 175, 177, 192, 194, 196, 219, 220, 228, 230, 624, 632, 639, 752], "art": [107, 118, 119, 143, 144, 160, 175, 177, 193, 194, 218, 219, 220, 229, 624, 633, 639, 753], "knitro": [107, 118, 119, 143, 144, 160, 175, 177, 193, 194, 196, 218, 219, 220, 229, 230, 624, 633, 639, 753], "tbx": [107, 118, 167, 230, 575, 749], "intlingprog": [107, 118], "predictor": [107, 199, 212, 494, 532, 542, 547, 688], "corrector": [107, 199, 212, 494, 530, 532, 688], "bpmpd_mex": [107, 118, 128, 222, 230, 624, 639, 737], "clp": [107, 118, 130, 148, 223, 230, 624, 625, 738], "fast": [107, 118, 181, 184, 374, 571, 611, 624, 639, 782], "newon": [107, 118], "fsolv": [107, 118, 135, 174, 176, 181, 182, 183, 184, 187], "gauss": [107, 118, 180, 183, 184, 576, 624, 639, 782], "seidel": [107, 118, 180, 183, 184, 576, 624, 639], "dev": [107, 118, 138, 157, 166, 167, 227, 230], "coin": [107, 118, 130, 140, 148, 159, 192, 194, 219, 220, 223, 228, 230, 624, 639], "pure": [107, 118, 194, 219, 220, 230, 624, 639], "mips_opt": [107, 118, 194, 219, 220, 230], "variant": [107, 118, 194, 219, 220, 230, 639], "osqp": [107, 118, 151, 197, 198, 230, 232, 260, 624, 637, 748], "ot": [107, 118, 167, 178, 230, 578, 624], "intlinprog": [107, 118, 139, 167, 169, 631], "bp_opt": [107, 118, 222, 230], "bp": [107, 118, 128, 222, 230, 571, 611], "clp_opt": [107, 118, 223, 230], "cplex_opt": [107, 118, 163, 167, 224, 230, 259, 260, 624, 639], "fd_opt": [107, 118, 181, 184], "nleqs_fd_newton": [107, 118, 184, 259, 260], "fmincon_opt": [107, 118, 191, 194, 220], "fsolve_opt": [107, 118, 182, 184], "glpk_opt": [107, 118, 164, 167, 225, 230], "grb_opt": [107, 118, 126, 165, 167, 217, 219, 226, 230, 639], "gs_opt": [107, 118, 183, 184], "nleqs_gauss_seidel": [107, 118, 180, 184, 259, 260], "highs_opt": [107, 118, 166, 167, 227, 230, 259, 260, 624], "intlinprog_opt": [107, 118, 167, 169], "ipopt_opt": [107, 118, 192, 194, 219, 220, 228, 230, 259, 260, 624, 639], "knitro_opt": [107, 118, 119, 193, 194, 218, 219, 220, 229, 230, 624, 639], "leq_opt": [107, 118], "absolut": [107, 118, 519, 572], "linprog_opt": [107, 118, 167, 169, 230, 233], "mosek_opt": [107, 118, 167, 168, 230, 231, 259, 260, 624, 639], "newton_opt": [107, 118, 184, 187], "nleqs_newton": [107, 118, 180, 184, 259, 260], "osqp_opt": [107, 118, 230, 232, 259, 260, 624], "quadprog_opt": [107, 118, 230, 233], "mismatch": [107, 597, 624, 639, 648], "relax_integ": [107, 118], "relax": [107, 118, 589, 624, 777], "failur": [107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 167, 180, 181, 182, 183, 184, 187, 193, 194, 217, 218, 219, 220, 230, 493], "elaps": [107, 118, 279, 493, 648, 675, 688, 689, 690, 691, 692, 694, 695], "sec": [107, 118, 286, 526, 601], "stash": [107, 109, 110, 111, 113, 116, 118], "get_soln": [107, 110, 111, 112, 113, 114, 115, 116, 118], "effici": [107, 110, 111, 113, 116, 118, 522, 566, 610], "semicolon": [107, 108, 117, 118, 286, 289, 292, 347, 348, 444, 449, 505, 517], "fid": [107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 681], "lin_con_1": [107, 118], "nle_con_b": [107, 118], "sm": [108, 109, 114, 115, 492], "entiti": [108, 109], "shallow": [108, 114, 115, 117, 118], "describe_idx": [108, 117], "init_indexed_nam": [108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 517], "set_type_idx_map": [108, 117, 444], "charg": [108, 526, 578, 579, 596], "fleet": 108, "vehicl": 108, "week": 108, "daili": 108, "discharg": 108, "drive": 108, "batteri": [108, 578], "dai": 108, "battery_st": 108, "cl": 108, "new_sm": [108, 114, 115], "idx_list": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 377, 444, 517], "sm_var": 108, "v0": [108, 116, 117, 118, 444, 517, 571, 576, 641, 642, 643, 644, 645, 646, 782], "vl": [108, 110, 116, 117, 118, 444, 517, 648], "vu": [108, 116, 117, 118, 444, 517], "sm_lin": 108, "varset": [108, 111, 112, 117, 118, 377, 517], "sm_nle": 108, "computed_bi": [108, 117, 517], "sm_nli": 108, "sm_qdc": 108, "cp": [108, 117, 377, 517, 578, 658], "sm_nlc": 108, "tell": 108, "361": [108, 117], "retun": [108, 286, 289, 292, 347, 348, 444, 449, 505], "dim_list": [108, 117, 118], "group_by_nam": [108, 117, 444], "consolid": [108, 117, 444], "set_param": [109, 110, 111, 112, 113, 114, 115, 116, 118], "among": [109, 110, 111, 112, 113, 114, 115, 116, 279], "fileid": [109, 110, 111, 112, 113, 114, 115, 116], "set_manager_opt_model": [110, 111, 112, 113, 114, 115, 116, 259, 260, 492], "eval": [110, 111, 112, 113, 114, 115, 118, 192, 228], "fetch": [110, 111, 112, 113, 114, 115, 116, 118], "memori": [110, 118, 222, 624, 639], "avl": [110, 118, 609], "lvl": [110, 118, 609], "uvl": [110, 118, 609], "subsequ": [110, 113, 114, 115, 116, 118, 199, 262, 517, 541, 544, 569], "pmi": [110, 111, 113, 118, 647, 648], "ax_u": [110, 118], "l_ax": [110, 118], "n_x": [110, 111, 112, 113, 114, 115], "mu_l_pmis_5_3": 110, "nln": [111, 647, 648], "eval_hess": [111, 118], "account": [111, 112], "g_": [111, 333, 344], "implment": [111, 112], "friend": [111, 118, 174, 175, 176, 177, 178], "d2g": [111, 118, 344, 445, 655, 662], "likewis": [111, 118, 517], "qmi": [111, 118, 647, 648], "iseq": [111, 118], "dg_pmis_5_3": 111, "fcn1": [112, 118], "my_cost_function1": [112, 118], "other_arg": [112, 118], "fcn2": [112, 118], "my_cost_function2": [112, 118], "mycost1": [112, 118], "mycost2": [112, 118], "df_pg_2_4": [112, 114, 115], "qq_i": [113, 213], "b_i": [113, 120, 213], "ui": 113, "n_q": [113, 123, 213], "qq_1": [113, 213], "qq_": 113, "denot": [113, 279, 283, 310, 314, 320, 322, 330, 331, 623], "xblk": [113, 214], "qblk": 113, "blkprod2vertcat": 113, "my_quad": 113, "q1": [113, 115, 118], "l1": 113, "u1": 113, "my_var1": 113, "my_var2": 113, "my_set": 113, "isblk": 113, "g_u": [113, 118], "l_g": [113, 118], "g_i": [113, 120], "mu_lq": [113, 217, 218, 219, 220], "mu_uq": [113, 217, 218, 219, 220], "mu_lq_pmis_5_3": 113, "blk1": 113, "blk2": 113, "m_1": 113, "m_2": 113, "blkdiag": 113, "repmat": 113, "mxn": 113, "nxn": 113, "hh": [114, 213, 221], "conform": [114, 115, 118, 610], "renam": [114, 115], "sm_quad_cost_legaci": [114, 259, 260], "quad_cost1": [114, 115, 118], "h1": [114, 291], "c1": [114, 115, 118, 526, 527, 598], "lin_cost2": [114, 115, 118], "c2": [114, 115, 118, 527], "k2": [114, 115, 118], "varsets_idx": [116, 118], "varsets_len": [116, 118], "varsets_x": [116, 118], "varsets_cell2struct": [116, 118], "accept": [116, 118, 340], "vmin": [116, 118, 527, 550, 566, 597, 624, 777], "vmax": [116, 118, 527, 550, 566, 597, 624, 777], "nx": [116, 118, 163, 164, 165, 166, 167, 168, 169, 199, 200, 201, 212, 352, 517, 532, 535, 537, 541, 544, 549, 551, 717, 718], "pg0": [116, 118, 444], "zij0": [116, 118, 444], "zijmin": [116, 118], "zijmax": [116, 118], "ztype": [116, 118, 444], "yl": 116, "yu": 116, "va0": [116, 565], "vau": 116, "vat": 116, "mupmin": [116, 118], "mupmax": [116, 118], "murmin_2_3": 116, "nv": [116, 118, 444], "return_vector": 116, "presenc": 116, "move": [117, 283, 500], "def_set_typ": [117, 118, 359, 361, 364, 366, 368, 444, 445, 446, 447, 448, 517], "add_named_set": [117, 359, 361, 364, 366, 368, 444, 517], "declar": 117, "init_set_typ": [117, 359, 361, 364, 366, 368, 444, 517], "ideal": [117, 285, 518], "bug": [117, 222, 506], "alter": 117, "savannah": [117, 506], "52614": 117, "workaround": [117, 172], "sure": 117, "add_": [117, 118], "valid_named_set_typ": 117, "public": [117, 517], "display_set": 117, "screen": [117, 527, 624, 639], "retreiv": [117, 118, 517], "getn": [117, 118], "params_": 117, "an_obj": 117, "stype": 117, "sname": 117, "field1": 117, "field2": 117, "var_ord": 117, "pmismatch": [117, 118], "intial": 118, "params_var": [118, 444], "params_lin_constraint": 118, "params_nln_constraint": 118, "eval_nln_constraint": 118, "eval_nln_constraint_hess": 118, "params_nln_cost": 118, "params_quad_cost": 118, "eval_nln_cost": 118, "eval_quad_cost": 118, "ghne": 118, "ghni": 118, "ghl": 118, "prob": [118, 187], "lagrang": [118, 190, 216, 597, 651, 655, 662, 665, 667, 669], "4th": [118, 444, 517, 519, 553, 555, 557, 567, 568, 594, 595], "IN": [118, 517], "5th": [118, 519, 554, 556, 559, 561, 594], "6th": [118, 519], "pgcost": 118, "eval_lin_constraint": 118, "dg_b_2_3": 118, "unbound": [118, 164, 166, 223, 225, 227, 526, 596, 607, 777], "constrainst": 118, "dx": 118, "fname": [119, 124, 125, 126, 157, 159, 170, 197, 283, 289, 290, 493, 572, 604, 624, 675, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698], "normal": [119, 124, 125, 126, 157, 159, 170, 172, 197, 199, 207, 208, 209, 285, 530, 532, 538, 539, 542, 547, 652, 688, 693, 775, 777], "modified_opt": [119, 124, 125, 126, 157, 159, 170, 197], "violat": [119, 124, 126, 157, 159, 170, 193, 197, 332, 534, 535, 540, 541, 543, 544, 550, 551, 624, 639, 694, 777], "feasibilitytol": [119, 126], "displayinterv": [119, 126], "outputflag": [119, 126], "logtoconsol": [119, 126], "tol_x": [119, 191, 624], "xtol": [119, 624], "tol_f": [119, 191, 624], "ftol": 119, "maxit": [119, 624], "opt_fnam": [119, 124, 125, 126, 157, 159, 170, 197, 624], "knitrooptsfil": [119, 193], "auto": [119, 624, 639], "knitro_user_options_n": [119, 624, 639], "Their": [119, 124, 125, 126, 157, 159, 170, 197, 619], "app": 119, "ieq": [120, 121, 122, 123], "igt": [120, 121, 122, 123], "ilt": [120, 121, 122, 123], "eq": [120, 122], "convert_lin_constraint": [120, 122, 259, 260], "convert_quad_constraint": [120, 259, 260], "g_e": 120, "_e": 120, "b_e": 120, "ae": [121, 122, 123], "ai": [121, 122, 123, 610], "bi": [121, 122, 123, 214], "convert_constraint_multipli": [121, 122, 123, 259, 260], "qe": 123, "Be": [123, 214], "qi": 123, "di": [123, 214, 560, 562], "nq": [123, 217, 218, 219, 220], "nqe": [123, 214], "nqi": [123, 214], "symmetr": [123, 323, 648, 649], "cplexoptimset": 124, "simplex": [124, 146, 171, 624, 639], "barrier": [124, 624, 639], "conflict": 124, "sift": [124, 624, 639], "tune": 124, "lpmethod": [124, 624], "qpmethod": [124, 624], "cplex_user_options_": 124, "cplex_user_options_3": 124, "thread": [124, 126, 157, 624, 639], "refactor": 124, "timelimit": [124, 126, 624, 639], "10000": 124, "ibm": [124, 131, 624], "knowledgecent": 124, "sssa5p": 124, "cplexlp": [124, 131, 163, 224], "cplexqp": [124, 131, 163, 224], "msglev": 125, "glpk_user_options_3": 125, "lpsolver": 125, "gurobi_user_options_": 126, "gurobi_user_options_3": 126, "optimalitytol": 126, "barconvtol": 126, "iterationlimit": 126, "3000": 126, "bariterlimit": 126, "200": [126, 230, 624, 639], "crossov": 126, "presolv": 126, "bpopt": 128, "catch": 129, "me": 129, "catchm": 129, "try": 129, "OR": [130, 140, 148, 223], "ilog": 131, "evalc": 132, "ver": [134, 146], "int": [134, 569], "mtd": 134, "fmincon_ipm": 134, "kit": [136, 164, 225], "callhigh": [138, 157, 158, 166, 227], "r2014a": 139, "ipopt_auxdata": 141, "isequaln": 142, "knitromatlab": [143, 144, 193], "knitro_nlp": [144, 193, 219, 220], "have_feature_knitro": [144, 259, 260], "have_feature_linprog_d": [145, 259, 260], "availblti": 146, "linprog_d": 146, "r2014b": 146, "have_feature_linprog": [146, 259, 260], "mosekopt": [147, 168, 170, 231], "opti_clp": 148, "opti": 148, "inverseproblem": 148, "have_feature_clp": [148, 259, 260], "optimopt": [150, 182, 191, 624], "have_feature_optim": [150, 259, 260], "have_feature_quadprog_l": [152, 259, 260], "larg": [153, 178, 191, 522, 570, 624], "quadprog_l": 153, "convex": [153, 217, 218, 220], "have_feature_quadprog": [153, 259, 260], "sdpt3": 154, "sdp": [154, 155, 624], "sqlp": 154, "sedumi": [155, 624], "lehigh": [155, 624], "yalmip": [156, 624], "platform": 156, "io": [156, 157, 166, 192, 227, 228, 624], "eps_prim_inf": [157, 197], "highs_user_options_3": 157, "ipm": 157, "dual_feasibility_toler": 157, "primal_feasibility_toler": 157, "ergo": [157, 166, 227], "constr_viol_tol": 159, "print_level": 159, "ipopt_user_options_": 159, "ipopt_user_options_3": 159, "nlp_scaling_method": 159, "none": [159, 202, 212, 262, 282, 533, 566, 597, 777], "500": [159, 167, 230, 624, 639], "derivative_test": 159, "knitro_solv": 160, "plant": [162, 578], "compani": 162, "incur": 162, "ship": 162, "inventori": 162, "shortag": 162, "decid": [162, 624, 639], "vtype": [163, 164, 165, 166, 167, 168, 169, 342, 444], "semi": [163, 165, 166, 167, 589], "cplexmiqp": 163, "cplexmilp": 163, "dummi": [164, 166, 169, 225], "NOT": [164, 166, 223, 225, 227, 572, 624, 639], "errnum": [164, 225], "model_status_str": [166, 227], "700": [167, 230, 639], "tour": 167, "node009": 167, "195": 167, "273": 167, "1365": 167, "msk_dpar_intpnt_tol_pfea": 170, "lp_alg": [170, 624], "msk_ipar_optim": [170, 624, 639], "msk_ipar_intpnt_max_iter": [170, 624, 639], "gap_tol": [170, 624], "msk_dpar_intpnt_tol_rel_gap": [170, 624, 639], "max_tim": [170, 624], "msk_dpar_optimizer_max_tim": [170, 624, 639], "num_thread": [170, 624], "msk_ipar_intpnt_num_thread": [170, 624, 639], "mosek_user_options_": 170, "mosek_user_options_3": 170, "msk_dpar_intpnt_tol_dfea": 170, "msk_ipar_sim_max_iter": 170, "5000000": 170, "manaul": 170, "symbol": [170, 171], "mosek_symbcon": [170, 259, 260, 624], "stuct": 171, "safer": 171, "mosek_lp_alg": [171, 639], "v7": 171, "msk_optimizer_dual_simplex": 171, "nane": 172, "class_": 172, "constructor_args_": 172, "aid": 172, "new_obj": [172, 347], "isequ": 172, "freshli": [172, 518], "nleqopt": 174, "nlpopt": 175, "pneopt": 176, "qcqpopt": 177, "mpopt2qpopt": [177, 259, 260], "qpopt": 178, "nest": [179, 505, 506, 568, 570, 595], "destin": 179, "recurs": 179, "manner": 179, "valid_field": 179, "invalid": 179, "copy_mod": 179, "pointer": 179, "heirarchi": 179, "home": 179, "t_nested_struct_copi": [179, 259, 260], "sp": [180, 624], "default_max_it": 180, "need_jac": 180, "update_fcn": 180, "partial": [180, 182, 184, 187, 212, 343, 539, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 579, 616, 726], "tol": [180, 181, 182, 183, 184, 187, 191, 211, 522, 523, 524, 546, 624, 639], "normf": [180, 181, 183, 187], "normdx": 180, "chilimath": [180, 182, 184, 187, 212], "lesson": [180, 182, 184, 187, 212], "advanc": [180, 182, 184, 187, 212], "algebra": [180, 182, 184, 187, 212], "f1": [180, 182, 184, 187, 526, 598], "newton_update_fcn": 180, "jac_approx_fcn": 181, "jj": 181, "approxim": [181, 187, 542, 624], "christi": [181, 183], "patton": [181, 183], "luk": [181, 183], "youtub": [181, 183], "watch": [181, 183], "pjg4yhtgerg": [181, 183], "57": [181, 183, 186], "jac_approx_fcn2": 181, "optimset": [182, 191, 624], "nleqs_cor": [183, 184, 187, 259, 260], "x_update_fcn": 183, "x_update_fcn2": 183, "core_sp": 184, "nleqs_fsolv": [184, 259, 260], "lin_solv": [187, 624], "larger": [187, 624, 700], "decomp": 187, "substitutn": 187, "reorder": [187, 518, 567, 568, 594, 595, 624], "suitabl": [188, 189, 190, 191, 214, 215, 216, 624, 678, 698], "tini": [188, 190], "sparsiti": [188, 190], "nlp_costfcn": [188, 190, 259, 260], "nlp_hessfcn": [188, 189, 259, 260], "nlp_consfcn": [189, 190, 259, 260], "bfg": [191, 624, 639], "lbfg": [191, 624, 639], "exact": [191, 624, 639], "finit": [191, 624, 639], "sqp": [191, 624], "ipreturncodes__inc_8h_sourc": [192, 228], "cpu": [192, 228], "knitro_opt_fnam": 193, "3_referencemanu": 193, "knitromatlabrefer": 193, "funccount": 193, "constrviol": 193, "firstorderopt": 193, "measur": 193, "nlps_fmincon": [194, 259, 260], "nlps_ipopt": [194, 259, 260], "nlps_knitro": [194, 259, 260], "osqp_user_options_3": 197, "polish": 197, "5000": [197, 604], "solver_set": [197, 232], "cx": [199, 200, 201, 204, 205, 352, 532, 534, 535, 536, 537, 540, 541, 543, 544, 548, 549, 550, 551, 717, 718], "px": [199, 200, 201, 352, 532, 535, 537, 541, 544, 549, 551, 717, 718], "regist": [199, 202, 210, 211, 532, 533, 545, 546, 569], "pne_register_callback": [199, 212, 259, 260], "cb": [199, 212, 532], "recent": [199, 532], "x_hat": [199, 212], "tangent": [199, 204, 207, 208, 209, 212, 530, 532, 536, 538, 539, 542, 547, 688], "default_step": [199, 212, 532], "default_parm": [199, 212, 532], "this_step": [199, 532], "this_parm": [199, 532], "parm": [199, 212, 532], "event": [199, 200, 201, 202, 203, 204, 205, 211, 212, 352, 532, 533, 534, 535, 536, 537, 540, 541, 543, 544, 546, 548, 549, 550, 551, 688], "pne_detect_ev": [199, 203, 259, 260], "care": [199, 532], "efv": [199, 204, 205], "propos": [199, 202, 532], "prior": [199, 532], "done_msg": [199, 200, 201, 212, 688], "reason": [199, 284, 532], "warmstart": [199, 212, 494], "warm": [199, 212, 354, 494], "rollback": [199, 202, 211, 532, 533, 535, 537, 541, 544, 546, 549, 551, 688, 717, 718], "retri": [199, 532], "request": [199, 202, 211, 496, 498, 532, 533, 541, 544, 546], "msg": [199, 200, 201, 202, 212, 261, 269, 271, 272, 274, 275, 532, 533, 535, 537, 541, 544, 549, 551, 675, 688], "negat": [199, 532], "my_cback": [199, 210, 212], "nose": [200, 204, 212, 532, 536, 537, 624, 688], "pne_event_nos": [200, 205, 211, 259, 260], "rais": [200, 201, 535, 537, 549, 551], "pne_callback_default": [200, 201, 210, 212, 259, 260], "target_lam": [201, 202, 533, 549], "pne_event_target_lam": [201, 204, 211, 259, 260], "predict": [201, 209, 212, 530, 538, 539, 542, 547, 549, 688], "overshoot": [201, 549], "adjust": [201, 283, 328, 336, 496, 549], "reg_ev": [202, 211], "nefv": 202, "cefv": 202, "critical_ev": [202, 533], "eidx": [202, 533], "interv": [202, 203, 533], "critic": [202, 212, 533, 613, 688], "step_scal": [202, 533], "linearli": [202, 533, 648, 649], "interpol": [202, 286, 494, 533], "estim": [202, 533, 624], "qlim": [202, 533, 544], "event_log": 203, "ev": 203, "search": [203, 605], "detec": 203, "pne_mast": 204, "stop_at": [204, 205, 212, 624, 688], "pne_register_ev": [204, 205, 212, 259, 260], "xp": [207, 208, 209, 212], "zp": [207, 208, 209, 212], "arc": [207, 209, 212, 624], "dp": [207, 208, 209], "distanc": 207, "paramer": [207, 208, 209], "pne_pfcn_natur": [207, 209, 259, 260], "pne_pfcn_pseudo_arc_len": [207, 208, 259, 260], "pne_pfcn_arc_len": [208, 209, 259, 260], "pseudo": [209, 212, 624], "lie": [209, 503], "hyperplan": 209, "orthogon": 209, "correct": [209, 212, 498, 523, 619, 624, 670, 688], "reg_cb": 210, "pne_callback_nos": [210, 259, 260], "pne_callback_target_lam": [210, 259, 260], "my_ev": [211, 212], "default_event_tol": [211, 212], "nleqs_opt": 212, "solve_bas": 212, "stop": [212, 624], "lam_stop": [212, 624], "adapt_step": [212, 624, 688], "toggl": [212, 262, 278, 624], "adapt": [212, 624, 688], "disabl": [212, 624, 774, 775, 776, 777, 816], "adapt_step_damp": [212, 624], "damp": [212, 624, 639], "adapt_step_tol": [212, 624], "adapt_step_w": 212, "step_min": [212, 624], "step_max": [212, 624], "target_lam_tol": [212, 624], "nose_tol": [212, 624], "output_fcn": 212, "increment": [212, 271, 272, 274, 624], "paus": [212, 624], "yfcn": 212, "idx_default": 212, "xname": 212, "yname": 212, "xfcn": 212, "title2": 212, "ne": [212, 286], "lam_hat": [212, 530, 532, 542, 688], "max_lam": [212, 688], "cont_step": 212, "counter": [212, 266, 268, 493], "opposit": [212, 775], "dir_from_jac_eig": 212, "smallest": 212, "eigenvalu": 212, "pnes_callback_default": 212, "f1p": 212, "lq": [213, 217, 218, 219, 220], "uq": [213, 217, 218, 219, 220], "lqi": 213, "uqi": 213, "qq_2": 213, "blkqe": 214, "blkqi": 214, "inequalii": 214, "equalii": 214, "qcqp_nlp_costfcn": [214, 216, 220, 259, 260], "qcqp_nlp_hessfcn": [214, 215, 220, 259, 260], "qcqp_nlp_consfcn": [215, 216, 220, 259, 260], "qqi": 216, "qqe": 216, "qcp": [217, 218, 219, 220], "gurobi_opt": [217, 259, 260, 624, 639], "artelys_knitro_opt": [218, 259, 260], "qcqp_knitro": 218, "suboptim": 222, "explan": [223, 648, 649], "gkpk": 225, "knitro_qp": 229, "knitro_lp": 229, "400": [230, 624, 639], "have_fcn": 234, "convert_lin_constraint_multipli": [259, 260], "glpk_option": [259, 260, 624], "mpopt2nleqopt": [259, 260], "mpopt2nlpopt": [259, 260], "mpopt2pneopt": [259, 260], "mpopt2qcqpopt": [259, 260], "gurobiv": [259, 260], "highsver": [259, 260], "knitrov": [259, 260], "mpomver": [259, 260], "osqpver": [259, 260], "miqps_cplex": [259, 260], "miqps_glpk": [259, 260], "miqps_gurobi": [259, 260], "miqps_high": [259, 260], "miqps_mosek": [259, 260], "miqps_ot": [259, 260], "pne_detected_ev": [259, 260], "qps_bpmpd": [259, 260], "qps_clp": [259, 260], "qps_cplex": [259, 260], "qps_glpk": [259, 260], "qps_gurobi": [259, 260], "qps_high": [259, 260], "qps_ipopt": [259, 260], "qps_knitro": [259, 260], "qps_mosek": [259, 260], "qps_osqp": [259, 260], "qps_ot": [259, 260], "qcqps_gurobi": [259, 260], "qcqps_knitro": [259, 260], "qcqps_nlp": [259, 260], "lp_ex1": [259, 260], "milp_ex1": [259, 260], "nleqs_master_ex1": [259, 260], "nleqs_master_ex2": [259, 260], "nlps_master_ex1": [259, 260], "nlps_master_ex2": [259, 260], "pne_ex1": [259, 260], "qcqp_ex1": [259, 260], "qp_ex1": [259, 260], "test_mp_opt_model": [259, 260], "t_nleqs_mast": [259, 260], "t_pnes_mast": [259, 260], "t_qps_master": [259, 260], "t_qcqps_master": [259, 260], "t_miqps_mast": [259, 260], "t_nlps_master": [259, 260], "t_mp_opt_model": [259, 260], "t_mm_solve_leq": [259, 260], "t_mm_solve_nleq": [259, 260], "t_mm_solve_pn": [259, 260], "t_mm_solve_qp": [259, 260], "t_mm_solve_qcqp": [259, 260], "t_mm_solve_miqp": [259, 260], "t_mm_solve_nlp": [259, 260], "t_have_fcn": [259, 260], "t_opt_model": [259, 260], "t_om_solve_leq": [259, 260], "t_om_solve_nleq": [259, 260], "t_om_solve_pn": [259, 260], "t_om_solve_qp": [259, 260], "t_om_solve_qcqp": [259, 260], "t_om_solve_miqp": [259, 260], "t_om_solve_nlp": [259, 260], "have_feature_bpmpd": [259, 260], "have_feature_catchm": [259, 260], "have_feature_cplex": [259, 260], "have_feature_evalc": [259, 260], "have_feature_fmincon_ipm": [259, 260], "have_feature_fmincon": [259, 260], "have_feature_fsolv": [259, 260], "have_feature_glpk": [259, 260], "have_feature_gurobi": [259, 260], "have_feature_high": [259, 260], "have_feature_intlinprog": [259, 260], "have_feature_ipopt_auxdata": [259, 260], "have_feature_ipopt": [259, 260], "have_feature_isequaln": [259, 260], "have_feature_knitromatlab": [259, 260], "have_feature_mosek": [259, 260], "have_feature_opti_clp": [259, 260], "have_feature_optimopt": [259, 260], "have_feature_osqp": [259, 260], "have_feature_sdpt3": [259, 260], "have_feature_sedumi": [259, 260], "have_feature_yalmip": [259, 260], "milp_example1": 260, "good": 260, "qcqp_example1": 260, "cond": [261, 272], "assert": [261, 278], "debug_mod": [261, 278], "errid": 261, "toggle_debug_mod": [261, 279, 280], "rtype": 262, "ver_str": 262, "vstr": 262, "ver_num": 262, "vnum": 262, "rdate": 262, "all_info": 262, "clear_cach": 262, "availabl": 262, "clear": 262, "011004": 262, "feb": 262, "av": 262, "have_feature_": 262, "disp": [262, 347], "have_feature_matlab": [262, 279, 280], "have_feature_octav": [262, 279, 280], "num_of_test": 266, "t_ok": [266, 268, 269, 271, 274, 275, 276, 279, 280], "t_i": [266, 268, 269, 272, 274, 275, 276, 279, 280], "t_file_match": [266, 268, 271, 272, 274, 275, 276, 279, 280], "t_str_match": [266, 268, 269, 271, 272, 274, 276, 279, 280], "t_skip": [266, 268, 269, 271, 272, 275, 279, 280], "t_end": [266, 269, 271, 272, 273, 274, 275, 279, 280], "pi": [266, 268, 271, 272, 274, 279, 579], "debug_assert": [267, 278, 279, 280], "statist": 268, "t_begin": [268, 269, 271, 272, 273, 274, 275, 279, 280], "got_fnam": 269, "exp_fnam": 269, "rep": [269, 275], "del_got_fnam": 269, "ok": [269, 271, 272, 275, 279], "compar": [269, 275, 528, 597, 598, 682], "regexprep": [269, 275], "strrep": [269, 275], "eol": [269, 275], "test_generated_output": [269, 275], "expected_output": [269, 275], "mytest": [269, 275], "got": [271, 275], "prec": 271, "nan": [271, 614, 681, 682], "expr": 272, "test_nam": 273, "t_loadcas": [273, 515, 783], "t_jacobian": [273, 515, 783], "t_hessian": [273, 515, 783], "strcmp": 275, "fileread": [275, 676, 683], "on_off": [278, 774, 775, 776, 777], "ON": [278, 674], "familiar": 279, "clone": 279, "repositori": 279, "mptestxxx": 279, "xxx": 279, "kept": [279, 532], "test_mptest": [279, 280], "resembl": 279, "t_test_fcn": [279, 280], "t_have_featur": [279, 280], "mptest_ex1": 279, "test_everything_ex1": 279, "09": 279, "mptestver": [279, 280], "t_debug_assert": [279, 280], "guidelin": 279, "report": [279, 578, 624, 639], "claus": 279, "bsd": 279, "agenc": 279, "task_pf_legaci": [281, 515], "task_cpf_legaci": [281, 515], "task_opf_legaci": [281, 291, 515], "task_shared_legaci": [281, 495, 497, 499, 515], "dme_branch_opf": [281, 515], "dme_bus_opf": [281, 515], "dme_gen_opf": [281, 515], "dme_load_cpf": [281, 515], "dme_load_opf": [281, 515], "dme_shunt_cpf": [281, 515], "dme_shunt": [281, 336, 337, 515], "dme_shunt_opf": [281, 515], "dm_converter_mpc2_legaci": [281, 497, 515], "dmce_branch_mpc2": [281, 515], "dmce_bus_mpc2": [281, 515], "dmce_load_mpc2": [281, 500, 515], "dmce_shunt_mpc2": [281, 515], "net_model_ac": [281, 446, 447, 515], "net_model_acc": [281, 515], "nme_branch_ac": [281, 452, 453, 515], "nme_branch_acc": [281, 515], "nme_branch_acp": [281, 515], "nme_branch_dc": [281, 515], "nme_bus_acc": [281, 515], "nme_bus_dc": [281, 515], "nme_gen_ac": [281, 470, 471, 515], "nme_gen_acc": [281, 515], "nme_gen_dc": [281, 515], "nme_load_ac": [281, 482, 483, 515], "nme_load_acc": [281, 515], "nme_load_acp": [281, 515], "nme_load_dc": [281, 515], "nme_shunt": [281, 487, 490, 515], "nme_shunt_ac": [281, 488, 489, 515], "nme_shunt_acc": [281, 515], "nme_shunt_acp": [281, 515], "nme_shunt_dc": [281, 515], "math_model_pf": [281, 370, 375, 515], "math_model_pf_ac": [281, 371, 372, 373, 374, 515], "math_model_pf_acci": [281, 515], "math_model_pf_acc": [281, 515], "math_model_pf_acpi": [281, 515], "math_model_pf_acp": [281, 515], "math_model_pf_dc": [281, 515], "math_model_cpf_acc": [281, 350, 515], "math_model_cpf_acci": [281, 515], "math_model_cpf_acp": [281, 353, 515], "math_model_cpf_acpi": [281, 515], "math_model_opf": [281, 348, 356, 367, 515], "math_model_opf_ac": [281, 357, 362, 515], "math_model_opf_acci": [281, 359, 515], "math_model_opf_acci_legaci": [281, 515], "math_model_opf_accs_legaci": [281, 515], "math_model_opf_acpi": [281, 364, 515], "math_model_opf_acpi_legaci": [281, 515], "math_model_opf_acps_legaci": [281, 515], "math_model_opf_dc": [281, 368, 515], "math_model_opf_dc_legaci": [281, 515], "mm_shared_pfcpf": [281, 348, 379, 387, 515], "mm_shared_pfcpf_ac": [281, 381, 384, 515], "mm_shared_pfcpf_ac_i": [281, 382, 385, 515], "mm_shared_pfcpf_acc": [281, 351, 372, 382, 515], "mm_shared_pfcpf_acci": [281, 350, 371, 515], "mm_shared_pfcpf_acp": [281, 354, 374, 385, 515], "mm_shared_pfcpf_acpi": [281, 353, 373, 515], "mm_shared_pfcpf_dc": [281, 375, 515], "mm_shared_opf_legaci": [281, 359, 361, 364, 366, 368, 497, 515], "mme_branch_pf_ac": [281, 515], "mme_branch_pf_dc": [281, 515], "mme_branch_opf": [281, 390, 393, 515], "mme_branch_opf_ac": [281, 391, 392, 515], "mme_branch_opf_acc": [281, 515], "mme_branch_opf_acp": [281, 515], "mme_branch_opf_dc": [281, 515], "mme_bu": [281, 400, 403, 404, 405, 515], "mme_bus_pf_ac": [281, 515], "mme_bus_pf_dc": [281, 515], "mme_bus_opf_ac": [281, 401, 402, 515], "mme_bus_opf_acc": [281, 515], "mme_bus_opf_acp": [281, 515], "mme_bus_opf_dc": [281, 515], "mme_gen_pf_ac": [281, 515], "mme_gen_pf_dc": [281, 515], "mme_gen_opf": [281, 417, 419, 515], "mme_gen_opf_dc": [281, 515], "mme_load": [281, 432, 433, 515], "mme_load_pf_ac": [281, 431, 515], "mme_load_pf_dc": [281, 515], "mme_load_cpf": [281, 515], "mme_shunt": [281, 440, 441, 515], "mme_shunt_pf_ac": [281, 439, 515], "mme_shunt_pf_dc": [281, 515], "mme_shunt_cpf": [281, 515], "mp_table_subclass": [281, 284, 285, 515, 786], "mapped_arrai": [281, 340, 515, 800], "sm_legacy_cost": [281, 515], "dmce_reserve_gen_mpc2": [281, 504, 515], "dmce_reserve_zone_mpc2": [281, 504, 515], "dme_reserve_gen": [281, 504, 515], "dme_reserve_zon": [281, 504, 515], "mme_reserve_gen": [281, 504, 515], "mme_reserve_zon": [281, 504, 515], "dmce_bus3p_mpc2": [281, 501, 515], "dmce_gen3p_mpc2": [281, 501, 515], "dmce_load3p_mpc2": [281, 501, 515], "dmce_line3p_mpc2": [281, 501, 515], "dmce_xfmr3p_mpc2": [281, 501, 515], "dmce_shunt3p_mpc2": [281, 501, 515], "dmce_buslink_mpc2": [281, 501, 515], "dme_bus3p_opf": [281, 501, 515], "dme_gen3p_opf": [281, 501, 515], "dme_load3p_opf": [281, 501, 515], "dme_line3p_opf": [281, 501, 515], "dme_xfmr3p_opf": [281, 501, 515], "dme_shunt3p_opf": [281, 501, 515], "dme_buslink_opf": [281, 501, 515], "nme_bus3p": [281, 457, 458, 515], "nme_bus3p_acc": [281, 501, 515], "nme_bus3p_acp": [281, 501, 515], "nme_gen3p": [281, 467, 468, 515], "nme_gen3p_acc": [281, 501, 515], "nme_gen3p_acp": [281, 501, 515], "nme_load3p": [281, 501, 515], "nme_line3p": [281, 501, 515], "nme_xfmr3p": [281, 501, 515], "nme_shunt3p": [281, 501, 515], "nme_buslink": [281, 463, 464, 515], "nme_buslink_acc": [281, 501, 515], "nme_buslink_acp": [281, 501, 515], "mme_bus3p": [281, 398, 399, 501, 515], "mme_gen3p": [281, 415, 501, 515], "mme_line3p": [281, 429, 501, 515], "mme_xfmr3p": [281, 443, 501, 515], "mme_shunt3p": [281, 438, 501, 515], "mme_buslink": [281, 407, 410, 515], "mme_buslink_pf_ac": [281, 411, 412, 515], "mme_buslink_pf_acc": [281, 501, 515], "mme_buslink_pf_acp": [281, 501, 515], "mme_bus3p_opf_acc": [281, 501, 515], "mme_bus3p_opf_acp": [281, 501, 515], "mme_gen3p_opf": [281, 501, 515], "mme_line3p_opf": [281, 501, 515], "mme_xfmr3p_opf": [281, 501, 515], "mme_shunt3p_opf": [281, 501, 515], "mme_buslink_opf": [281, 408, 409, 515], "mme_buslink_opf_acc": [281, 501, 515], "mme_buslink_opf_acp": [281, 501, 515], "enumer": 282, "is_valid": 282, "seal": [282, 506], "z_base_chang": 283, "to_consecutive_bus_numb": 283, "remove_gen_q_lim": 283, "relocate_branch_shunt": 283, "tap": [283, 526, 527, 566, 596], "ishybrid": 283, "idea": 283, "buslink": [283, 297, 315, 316, 406, 407, 408, 409, 410, 411, 412, 462, 463, 464, 501], "case10ba": 283, "z_old": 283, "basekv_old": 283, "basekva_old": 283, "basekv_new": 283, "basekva_new": 283, "z_new": 283, "mpc0": [283, 604], "i2": [283, 284, 416, 423, 569, 602], "case_nam": 283, "guarante": 283, "poly_n": 284, "pwl_n": 284, "pwl_qty": 284, "pwl_cost": 284, "var_nam": [284, 293, 505, 506], "subsref": [284, 285, 293, 347, 505, 506], "subsasgn": [284, 285, 347, 505, 506], "deleg": [284, 343, 506], "readabl": [284, 342, 344, 345, 346, 444], "c_0": 284, "c_1": 284, "c_n": 284, "c_j": 284, "f_1": 284, "f_2": 284, "x_n": 284, "f_n": 284, "quantii": 284, "x_j": 284, "piecwis": 284, "f_j": 284, "pu_bas": [284, 285], "polynmi": 284, "i0": [284, 347, 416, 423], "x_scale": 284, "ccm": 284, "sum_": 284, "f_i": 284, "x_i": 284, "eval_poly_fcn": 284, "diff_poly_fcn": 284, "cumbersom": 285, "pp_flag": [286, 288], "pp_section_label": 286, "pp_section_list": [286, 288], "pp_have_sect": [286, 292], "pp_section": 286, "pp_get_head": [286, 292], "pp_get_headers_cnt": 286, "pp_get_headers_ext": 286, "pp_data": [286, 292], "set_bus_v_lims_via_vg": 286, "bus3p": [286, 315, 501], "new_dm": [286, 292], "elm": 286, "s0": 286, "s1": 286, "suppress": [286, 624], "blank_lin": 286, "blank": 286, "pp_get_headers_oth": [286, 288, 332], "use_vg": [286, 624], "fraction": [286, 624], "format_tag": [289, 290], "export": [289, 290, 292, 293, 328, 336, 376, 495, 497, 499, 696], "init_export": [289, 290], "new_dmc": 289, "prepar": [289, 292, 389], "fname_out": 289, "classic": 290, "legacy_user_mod_input": 291, "legacy_user_nln_constraint": 291, "fparm": [291, 517, 526, 648, 649, 780], "cw": [291, 517, 526, 648, 649, 780], "zl": [291, 526, 648, 649, 780], "zu": [291, 526, 648, 649, 780], "user_constraint": 291, "undefin": 292, "table_exist": 292, "dm_converter_el": 292, "pp_row": 292, "pp_get_foot": 292, "pp_have_section_cnt": 292, "pp_data_cnt": [292, 309, 311], "pp_have_section_ext": [292, 311], "pp_data_ext": [292, 311, 314], "pp_get_title_det": 292, "pp_get_footers_det": [292, 309, 317, 325, 330, 333], "nc": [292, 293], "sole": 292, "subclass_var1": 292, "subclass_var2": 292, "pp_have_section_oth": [292, 332], "pp_data_oth": [292, 332], "newlin": 292, "data_sub": [293, 304, 305], "get_import_s": [293, 303, 304, 307], "get_export_s": [293, 303, 304, 307], "get_input_table_valu": 293, "import_col": 293, "export_col": 293, "bus_status_import": [295, 296], "bus_name_import": 296, "bus_name_export": 296, "pwl1": 299, "start_cost_import": 299, "start_cost_export": 299, "gen_cost_import": 299, "p_or_q": 299, "gen_cost_export": 299, "gencost0": 299, "create_line_construction_t": [301, 323], "lc": [301, 323], "scale_factor_fcn": 303, "zip_sf": 303, "sys_wide_zip_load": [303, 500, 624], "import_cost": 304, "import_qti": 304, "import_ramp": 304, "import_req": 305, "import_zon": 305, "g_fr": 309, "conduct": [309, 333, 334, 526, 597], "b_fr": 309, "g_to": 309, "b_to": 309, "sm_ub_a": 309, "long": [309, 526, 596], "rate": [309, 330, 526, 570, 596, 601], "sm_ub_b": 309, "sm_ub_c": 309, "emerg": [309, 526, 596], "cm_ub_a": 309, "cm_ub_b": 309, "cm_ub_c": 309, "vad_lb": 309, "vad_ub": 309, "tm": [309, 338], "ta": 309, "shift": [309, 526, 566, 596, 599, 612, 623, 777], "pl_fr": 309, "ql_fr": 309, "pl_to": 309, "ql_to": 309, "psh_fr": 309, "qsh_fr": 309, "psh_to": 309, "qsh_to": 309, "xformer": 309, "radian": [309, 311, 312, 565, 613], "rate_a": [309, 566, 596, 777], "loss_tol": 309, "mu_flow_fr_ub": 310, "mu_flow_to_ub": 310, "mu_vad_lb": 310, "mu_vad_ub": 310, "usd": [310, 314, 317, 320, 322, 330, 331], "pp_get_title_lim": [310, 332], "base_kv": [311, 312, 338, 566, 597], "vm_lb": 311, "vm_ub": 311, "va_start": 311, "set_bus_type_ref": 311, "set_bus_type_pq": 311, "vm1_start": 312, "vm2_start": 312, "vm3_start": 312, "va1_start": 312, "va2_start": 312, "va3_start": 312, "lam_p": [314, 512, 513, 566, 597], "lam_q": [314, 566, 597], "mu_vm_lb": 314, "mu_vm_ub": 314, "pg1_start": [315, 318], "pg2_start": [315, 318], "pg3_start": [315, 318], "qg1_start": [315, 318], "qg2_start": [315, 318], "qg3_start": [315, 318], "startup_cost_cold": 317, "cold": 317, "pc1": [317, 526, 566, 581, 601, 608], "pc2": [317, 526, 566, 581, 601, 608], "qc1_lb": 317, "qc1_ub": 317, "qc2_lb": 317, "qc2_ub": 317, "bus_on": [317, 318], "pg_start": 317, "qg_start": 317, "violated_q_lim": 317, "isload": [317, 515, 606, 699, 777, 778, 783], "vm1_setpoint": 318, "vm2_setpoint": 318, "vm3_setpoint": 318, "cost_pg": [320, 322], "cost_qg": 320, "mu_pg_lb": 320, "mu_pg_ub": [320, 330], "mu_qg_lb": 320, "mu_qg_ub": 320, "max_pwl_gencost": 320, "fr": 321, "pl1_fr": [323, 338], "ql1_fr": [323, 338], "pl2_fr": [323, 338], "ql2_fr": [323, 338], "pl3_fr": [323, 338], "ql3_fr": [323, 338], "pl1_to": [323, 338], "ql1_to": [323, 338], "pl2_to": [323, 338], "ql2_to": [323, 338], "pl3_to": [323, 338], "ql3_to": [323, 338], "lc_tab": 323, "ohm": 323, "lc_y_idx": 323, "yc": 323, "lc_table_var_nam": 323, "vec2symmat": 323, "symmat2vec": 323, "pd": [325, 526, 566, 597, 699, 778], "p_p": 325, "qd": [325, 526, 566, 597, 699, 778], "q_p": 325, "pd_i": 325, "p_i": 325, "qd_i": 325, "q_i": 325, "pd_z": 325, "p_z": 325, "qd_z": 325, "q_z": 325, "_p": 325, "_z": 325, "pf1": 326, "pf2": 326, "pf3": 326, "dmb": [328, 336], "dmt": [328, 336], "qty": [330, 639, 693, 776], "ramp10": 330, "minut": [330, 526, 601], "alloc": [330, 379, 387, 624, 639], "r_lb": 330, "r_ub": 330, "total_cost": 330, "prc": [330, 331, 693, 776], "req": [331, 693, 776], "pp_set_tols_lim": 332, "pp_rows_oth": 332, "pp_get_footers_oth": 332, "pp_rows_lim": 332, "pp_get_footers_lim": 332, "pp_data_lim": 332, "b_": 333, "absorb": 333, "class_list": 340, "aspect": [341, 504], "xt": 341, "form_nam": [342, 344, 345, 346, 348, 350, 351, 353, 354, 358, 360, 363, 365, 367, 371, 372, 373, 374, 375], "form_tag": [342, 344, 345, 346, 348, 350, 351, 353, 354, 358, 360, 363, 365, 367, 371, 372, 373, 374, 375], "model_param": [342, 343, 346], "model_vvar": [342, 344, 345, 346], "model_zvar": [342, 343, 346], "get_param": 342, "find_form_class": 342, "acc": [342, 344], "acp": [342, 345, 348], "properi": 342, "p1": [342, 526, 598], "p2": [342, 526, 598], "pn": [342, 526, 598], "pa": 342, "namea": 342, "pb": 342, "nameb": 342, "canon": 342, "form_class": 342, "netork": 342, "longest": 342, "params_ncol": [343, 346], "inln_hess": 343, "snln_hess": 343, "port_inj_curr": [343, 344, 345, 445, 806, 807], "port_inj_pow": [343, 344, 345, 346, 445, 808, 809], "port_inj_current_hess": [343, 344, 345, 445], "port_inj_power_hess": [343, 344, 345, 445], "port_inj_current_jac": [343, 344, 345], "port_inj_current_hess_v": [343, 344, 345], "port_inj_current_hess_vz": [343, 344, 345], "port_inj_power_jac": [343, 344, 345], "port_inj_power_hess_v": [343, 344, 345], "port_inj_power_hess_vz": [343, 344, 345], "port_apparent_power_lim_fcn": 343, "port_active_power_lim_fcn": 343, "port_active_power2_lim_fcn": 343, "port_current_lim_fcn": 343, "port_apparent_power_lim_hess": 343, "port_active_power_lim_hess": 343, "port_active_power2_lim_hess": 343, "port_current_lim_hess": 343, "aux_data_va_vm": [343, 344, 345], "param_ncol": [343, 346], "x_": [343, 344, 345, 445, 449, 481], "sysx": [343, 344, 345, 346, 445, 449, 481], "iv1": 343, "iv2": 343, "izr": 343, "izi": 343, "gi_": 343, "formula": [343, 579], "sv1": 343, "sv2": 343, "szr": 343, "szi": 343, "mulipli": [343, 344, 418, 445], "v_": [343, 344, 345, 379, 449], "invdiagv": [343, 344, 345], "diagslincj": [343, 344, 345], "z_": [343, 344, 345, 379, 449], "diaginv": [343, 344, 345], "dlamj": [343, 344, 345], "diagv": [343, 344, 345], "diagvi": [343, 344, 345], "diagilincj": [343, 344, 345], "hmax": 343, "repesent": [344, 345], "va_fcn": [344, 408], "va_hess": [344, 408], "vm2_fcn": [344, 408], "vm2_hess": [344, 408], "iu": 344, "iw": 344, "iuu": 344, "iuw": 344, "iww": 344, "iuzr": 344, "iuzi": 344, "iwzr": 344, "iwzi": 344, "su": 344, "sw": 344, "suu": 344, "suw": 344, "sww": 344, "suzr": 344, "suzi": 344, "swzr": 344, "swzi": 344, "connvert": 344, "va_lb": 344, "va_ub": 344, "vm2_lb": 344, "vm2_ub": 344, "iva": 345, "ivm": 345, "ivava": 345, "ivavm": 345, "ivmvm": 345, "ivazr": 345, "ivazi": 345, "ivmzr": 345, "ivmzi": 345, "sva": 345, "svm": 345, "svava": 345, "svavm": 345, "svmvm": 345, "svazr": 345, "svazi": 345, "svmzr": 345, "svmzi": 345, "ma": 347, "width": 347, "height": 347, "depth": 347, "treat": [347, 520, 522, 523, 524], "add_el": 347, "color": 347, "weight": [347, 615, 624], "delete_el": 347, "has_nam": 347, "add_nam": 347, "name2idx": 347, "num_el": 347, "overwrit": 347, "corrspond": 347, "aux_data": 348, "task_nam": [348, 355, 369], "add_aux_data": 348, "build_base_aux_data": 348, "add_system_var": [348, 355, 369], "add_system_constraint": [348, 359, 361, 364, 366, 368], "add_node_balance_constraint": [348, 350, 351, 353, 354, 358, 360, 363, 365, 367, 371, 372, 373, 374, 375], "add_system_cost": [348, 359, 361, 364, 366, 368], "update_nm_var": 348, "build_aux_data": [348, 355, 378, 382, 385, 386, 387], "mmx": [348, 357, 362, 367, 381, 384, 387], "nm_var": 348, "var_map": 348, "nm_var_typ": 348, "nm_i1": 348, "nm_in": 348, "nm_idx": 348, "mm_i1": 348, "mm_in": 348, "mm_idx": 348, "convert_x_m2n": [348, 357, 362, 367, 381, 384, 387], "math_model_cpf": [349, 352], "event_vlim": 352, "callback_vlim": 352, "expand_z_warmstart": 354, "solve_opts_warmstart": 354, "interior_va": [355, 357], "nodal_current_balance_fcn": 356, "nodal_power_balance_fcn": 356, "nodal_current_balance_hess": 356, "nodal_power_balance_hess": 356, "node_power_balance_pric": [358, 360, 363, 365], "formluat": [359, 361, 364, 366, 368], "legacy_user_var_nam": [359, 361, 364, 366, 368], "gs_x_updat": 374, "zg_x_updat": 374, "fd_jac_approx": 374, "fdpf_b_matrix_model": 374, "accordingli": [376, 541, 544], "mod_set_types_legaci": 377, "init_set_types_legaci": 377, "get_mpc": [377, 517, 687], "build_legaci": 377, "add_legacy_user_var": 377, "add_legacy_user_cost": 377, "add_legacy_user_constraint": 377, "add_legacy_user_constraints_ac": 377, "add_legacy_cost": [377, 492, 517], "eval_legacy_cost": [377, 517], "params_legacy_cost": [377, 517], "add_system_varset_pf": 379, "vvar": 379, "typ": 379, "update_z": [379, 387], "sinj": 379, "formuat": [380, 381, 382, 383, 384, 385, 386], "build_aux_data_i": 380, "only_v": [381, 384, 387], "pf_convert": [381, 384, 387], "add_system_vars_pf": [382, 383, 385, 386, 387], "node_balance_equ": [382, 383, 385, 386], "fdpf": [386, 515, 611, 783], "ang_diff_param": 389, "ang_diff_pric": [389, 391], "interior_vm": 400, "avg": 400, "clip": 400, "voltage_constraint": [410, 462], "pf_va_fcn": 411, "pf_vm_fcn": 411, "poly_p": 416, "poly_q": 416, "actv": [416, 423], "bulid": [417, 419], "pq_capability_constraint": 417, "makeapq": [417, 515, 781, 783], "has_pq_cap": 417, "upper_low": 417, "haspqcap": [417, 515, 723, 783], "disp_load_constant_pf_constraint": 417, "makeavl": [417, 515, 783], "oval": [418, 503], "cap": [418, 608], "rectangular": 418, "radii": 418, "the_np": 444, "the_nz": 444, "add_nod": [444, 449], "add_stat": [444, 449], "stack_matrix_param": 444, "stack_vector_param": 444, "add_port": 444, "set_type_label": 444, "get_node_idx": 444, "get_port_idx": 444, "get_state_idx": 444, "ensure_ref_nod": 444, "vnotz": 444, "unus": [444, 526], "vr0": 444, "vrmin": 444, "vrmax": 444, "zij_lb": 444, "zij_ub": 444, "nidx": [444, 449], "pidx": 444, "sidx": [444, 682], "skip_ensure_ref": 444, "ntv": [444, 449, 456], "by_elm": 444, "implicitli": 445, "port_inj_nln": 445, "port_inj_nln_hess": 445, "nodal_complex_current_bal": 445, "nodal_complex_power_bal": 445, "nodal_complex_current_balance_hess": 445, "nodal_complex_power_balance_hess": 445, "get_va": 445, "gv1": 445, "gv2": 445, "gzr": 445, "gzi": 445, "snln_": 445, "inln_": 445, "kcl": 445, "initial_voltage_angl": [446, 447], "math_model_el": 449, "get_nv_": 449, "x2vz": 449, "node_indic": 449, "incidence_matrix": 449, "nv_": 449, "vi_": 449, "cd": 449, "ang_diff_fcn": 452, "aang": [452, 607, 650, 651], "lang": [452, 607, 650, 651], "uang": [452, 607, 650, 651], "ang_diff_hess": 452, "vr3": 457, "vi3": 457, "plink": 462, "qlink": 462, "vec2symmat_stack": 478, "port_inj_current_nln": 481, "port_inj_power_nln": 481, "opf_model": [492, 497, 515, 648, 756, 783], "interact": [493, 508, 566], "mm_opt": 493, "i_dm": 493, "i_nm": 493, "i_mm": 493, "didn": 493, "load_dm": [493, 507, 515], "run_pr": [493, 494, 495, 496, 497, 498, 499, 500], "run_post": [493, 495, 497, 499], "print_soln_head": [493, 496], "dm_converter_cr": 493, "data_model_cr": 493, "data_model_build": [493, 494], "data_model_build_pr": 493, "data_model_build_post": [493, 496, 497], "network_model_cr": 493, "network_model_build": [493, 494], "network_model_build_pr": 493, "network_model_build_post": [493, 498], "network_model_upd": [493, 494], "math_model_cr": 493, "math_model_build": 493, "math_model_opt": [493, 494], "propag": 493, "mpoopt": 493, "handel": 493, "dm_converter_build": 493, "restart": 494, "superclass": [494, 496, 497, 498], "clam": 494, "plam": 494, "cv": 494, "current_bal": [494, 496, 498, 624], "legacy_post_run": [495, 497, 499], "post": [495, 497, 499], "run_pre_legaci": [495, 497, 499, 500], "printout": 496, "variat": 497, "opf_execut": [497, 515, 663, 783], "dcopf_solv": [497, 515, 783], "nlpopf_solv": [497, 515, 783], "ref0": 498, "va_ref0": 498, "fixed_q_idx": 498, "fixed_q_qti": 498, "enforce_q_lim": [498, 624, 639, 688, 694], "optimi": [501, 502], "gen3p": 501, "load3p": 501, "line3p": 501, "xfmr3p": 501, "shunt3p": 501, "half": [503, 581], "region": [503, 593, 624, 639], "qmin": [503, 526, 543, 566, 601, 699, 777, 778], "qmax": [503, 526, 543, 566, 601, 699, 777, 778], "gen_opf_ac": 503, "gen_opf_ac_ov": 503, "reserve_gen": 504, "reserve_zon": 504, "var1": [505, 510], "var2": [505, 510], "name1": [505, 624, 639], "name2": [505, 624, 639], "rownam": 505, "dimensionnam": 505, "focus": 505, "join": 505, "istabl": [505, 506], "concaten": [505, 506], "vertcat": [505, 506], "unfortun": 505, "realli": 505, "last_var": 505, "last_row": 505, "sub_t": 505, "jn": 505, "var_": 505, "t1": [505, 506], "t2": [505, 506], "extract_named_arg": 505, "row_nam": 505, "dim_nam": 505, "act": 506, "isn": 506, "cannot": [506, 578], "fine": 506, "php": 506, "65037": 506, "emul": 506, "get_tabl": 506, "set_tabl": 506, "install_matpow": [507, 515], "save_it": 508, "rm_oldpath": 508, "assist": 508, "session": [508, 816], "addpath": 508, "silent": 508, "mode": [508, 688, 816], "my": 508, "temporarili": 508, "matpower8": 508, "uninstal": 508, "nativ": [510, 624], "tablici": [510, 592], "table_class": 510, "print_fnam": [511, 512, 513, 514], "soln_fnam": [511, 512, 513, 514], "case9target": [511, 688], "miscellan": 515, "test_matpow": [515, 785], "t_mp_mapped_arrai": [515, 785], "t_mp_tabl": [515, 785], "t_mp_data_model": [515, 785], "t_dmc_element": [515, 785], "t_mp_dm_converter_mpc2": [515, 785], "t_nm_element": [515, 785], "t_port_inj_current_acc": [515, 785], "t_port_inj_current_acp": [515, 785], "t_port_inj_power_acc": [515, 785], "t_port_inj_power_acp": [515, 785], "t_node_test": [515, 785], "t_run_mp": [515, 785], "t_run_opf_default": [515, 785], "t_pretty_print": [515, 785], "t_mpxt_legacy_dclin": [515, 785], "t_mpxt_reserv": [515, 785], "mp_foo_tabl": [515, 785], "t_case9_gizmo": [515, 785], "runpf": [515, 565, 571, 576, 579, 624, 641, 642, 643, 644, 645, 646, 688, 690, 774, 782, 783], "runcpf": [515, 530, 532, 545, 546, 624, 783], "runopf": [515, 624, 648, 675, 689, 693, 695, 774, 783, 816], "runuopf": [515, 691, 692, 780, 783], "rundcpf": [515, 565, 694, 783], "rundcopf": [515, 563, 691, 692, 783], "runduopf": [515, 689, 695, 783], "runopf_w_r": [515, 518, 686, 687, 769, 776, 783], "cdf2mpc": [515, 783], "printpf": [515, 518, 765, 783], "psse2mpc": [515, 680, 682, 683, 766, 783], "save2pss": [515, 712, 783], "savecas": [515, 518, 526, 577, 578, 783], "savechgtab": [515, 783], "e2i_data": [515, 568, 569, 594, 720, 783], "e2i_field": [515, 567, 569, 595, 720, 783], "i2e_data": [515, 567, 595, 602, 720, 783], "i2e_field": [515, 568, 594, 602, 720, 783], "get_reord": [515, 700, 720, 783], "set_reord": [515, 580, 720, 783], "calc_v_i_sum": [515, 783], "calc_v_pq_sum": [515, 620, 783], "calc_v_y_sum": [515, 783], "dcpf": [515, 612, 783], "gausspf": [515, 783], "make_vcorr": [515, 783], "make_zpv": [515, 783], "newtonpf": [515, 642, 643, 644, 645, 646, 783], "newtonpf_i_cart": [515, 641, 644, 645, 646, 783], "newtonpf_i_hybrid": [515, 783], "newtonpf_i_polar": [515, 641, 642, 643, 645, 646, 783], "newtonpf_s_cart": [515, 641, 642, 643, 644, 783], "newtonpf_s_hybrid": [515, 783], "order_radi": [515, 783], "pfsoln": [515, 783], "radial_pf": [515, 522, 523, 524, 619, 670, 783], "zgausspf": [515, 783], "cpf_corrector": [515, 538, 539, 783], "cpf_current_mpc": [515, 783], "cpf_default_callback": [515, 535, 537, 541, 544, 545, 549, 551, 624, 783], "cpf_detect_ev": [515, 532, 783], "cpf_flim_ev": [515, 535, 783], "cpf_flim_event_cb": [515, 545, 783], "cpf_nose_ev": [515, 537, 783], "cpf_nose_event_cb": [515, 535, 545, 783], "cpf_p": [515, 783], "cpf_p_jac": [515, 783], "cpf_plim_ev": [515, 541, 783], "cpf_plim_event_cb": [515, 545, 783], "cpf_predictor": [515, 538, 539, 783], "cpf_qlim_ev": [515, 544, 783], "cpf_qlim_event_cb": [515, 545, 783], "cpf_register_callback": [515, 532, 783], "cpf_register_ev": [515, 783], "cpf_tangent": [515, 783], "cpf_target_lam_ev": [515, 549, 783], "cpf_target_lam_event_cb": [515, 545, 783], "cpf_vlim_ev": [515, 551, 783], "cpf_vlim_event_cb": [515, 545, 783], "dcopf": [515, 648, 783], "fmincopf": [515, 783], "uopf": [515, 648, 783], "makeaang": [515, 650, 651, 783], "makeai": [515, 783], "margcost": [515, 731, 783], "opf_arg": [515, 783], "opf_setup": [515, 656, 783], "opf_branch_ang_fcn": [515, 651, 783], "opf_branch_ang_hess": [515, 650, 783], "opf_branch_flow_fcn": [515, 653, 783], "opf_branch_flow_hess": [515, 652, 783], "opf_current_balance_fcn": [515, 655, 783], "opf_current_balance_hess": [515, 783], "opf_gen_cost_fcn": [515, 783], "opf_legacy_user_cost_fcn": [515, 783], "opf_power_balance_fcn": [515, 662, 783], "opf_power_balance_hess": [515, 654, 661, 783], "opf_veq_fcn": [515, 665, 783], "opf_veq_hess": [515, 664, 783], "opf_vlim_fcn": [515, 667, 783], "opf_vlim_hess": [515, 666, 783], "opf_vref_fcn": [515, 669, 783], "opf_vref_hess": [515, 668, 783], "totcost": [515, 772, 783], "update_mupq": [515, 783], "add_userfcn": [515, 526, 686, 687, 774, 775, 776, 777, 783], "remove_userfcn": [515, 518, 687, 774, 775, 776, 777, 783], "run_userfcn": [515, 518, 686, 774, 775, 776, 777, 783], "toggle_dclin": [515, 518, 600, 707, 719, 783], "toggle_iflim": [515, 518, 686, 687, 783], "toggle_softlim": [515, 518, 521, 783], "dibr_dv": [515, 552, 558, 783], "dsbr_dv": [515, 552, 558, 783], "dabr_dv": [515, 552, 783], "dimis_dv": [515, 783], "dsbus_dv": [515, 783], "d2ibr_dv2": [515, 783], "d2sbr_dv2": [515, 552, 783], "d2abr_dv2": [515, 783], "d2imis_dv2": [515, 783], "d2imis_dvdsg": [515, 783], "d2sbus_dv2": [515, 783], "miqps_matpow": [515, 732, 783], "qps_matpow": [515, 767, 783], "makeb": [515, 783], "makebdc": [515, 783], "makejac": [515, 618, 783], "makelodf": [515, 615, 729, 783], "makeptdf": [515, 614, 730, 783], "makesbu": [515, 554, 560, 618, 783], "makesdzip": [515, 783], "makeybu": [515, 552, 553, 554, 556, 557, 559, 560, 561, 562, 613, 616, 783], "apply_chang": [515, 566, 599, 698, 701, 715, 783], "bustyp": [515, 783], "calc_branch_angl": [515, 783], "case_info": [515, 570, 725, 783], "compare_cas": [515, 783], "define_const": [515, 596, 597, 598, 601, 783], "extract_island": [515, 574, 725, 783], "feval_w_path": [515, 721, 783], "find_bridg": [515, 614, 783], "find_island": [515, 525, 570, 725, 783], "gentyp": [515, 526, 570, 577, 783], "get_loss": [515, 722, 783], "idx_brch": [515, 526, 566, 783], "idx_bu": [515, 519, 526, 566, 783], "idx_cost": [515, 519, 526, 566, 783], "idx_gen": [515, 519, 526, 566, 783], "load2disp": [515, 727, 783], "loadsh": [515, 783], "modcost": [515, 599, 699, 733, 783], "poly2pwl": [515, 783], "polycost": [515, 672, 783], "pqcost": [515, 783], "scale_load": [515, 770, 778, 783], "total_load": [515, 699, 771, 783], "have_feature_e4st": [515, 783], "have_feature_minopf": [515, 783], "have_feature_most": [515, 783], "have_feature_mp_cor": [515, 783], "have_feature_pdipmopf": [515, 783], "have_feature_regexp_split": [515, 783], "have_feature_scpdipmopf": [515, 783], "have_feature_sdp_pf": [515, 783], "have_feature_smartmarket": [515, 783], "have_feature_syngrid": [515, 783], "have_feature_t": [515, 783], "have_feature_tralmopf": [515, 783], "connected_compon": [515, 570, 574, 725, 783], "mpoption_info_clp": [515, 783], "mpoption_info_cplex": [515, 783], "mpoption_info_fmincon": [515, 783], "mpoption_info_glpk": [515, 783], "mpoption_info_gurobi": [515, 783], "mpoption_info_high": [515, 783], "mpoption_info_intlinprog": [515, 783], "mpoption_info_ipopt": [515, 783], "mpoption_info_knitro": [515, 783], "mpoption_info_linprog": [515, 783], "mpoption_info_mip": [515, 783], "mpoption_info_mosek": [515, 783], "mpoption_info_osqp": [515, 783], "mpoption_info_quadprog": [515, 783], "mpoption_old": [515, 783], "psse_convert": [515, 678, 679, 783], "psse_convert_hvdc": [515, 783], "psse_convert_xfmr": [515, 783], "psse_pars": [515, 682, 783], "psse_parse_lin": [515, 680, 783], "psse_parse_sect": [515, 680, 783], "psse_read": [515, 677, 678, 679, 680, 682, 783], "t_apply_chang": [515, 783], "t_auction_minopf": [515, 783], "t_auction_mip": [515, 783], "t_auction_tspopf_pdipm": [515, 783], "t_chgtab": [515, 783], "t_cpf": [515, 783], "t_dcline": [515, 783], "t_ext2int2ext": [515, 783], "t_feval_w_path": [515, 783], "t_get_loss": [515, 783], "t_haspqcap": [515, 783], "t_island": [515, 783], "t_load2disp": [515, 783], "t_makelodf": [515, 783], "t_makeptdf": [515, 783], "t_margcost": [515, 783], "t_miqps_matpow": [515, 783], "t_modcost": [515, 783], "t_mpoption": [515, 783], "t_mpoption_ov": [515, 783], "t_off2cas": [515, 783], "t_opf_dc_bpmpd": [515, 783], "t_opf_dc_clp": [515, 783], "t_opf_dc_cplex": [515, 783], "t_opf_dc_default": [515, 783], "t_opf_dc_glpk": [515, 783], "t_opf_dc_gurobi": [515, 783], "t_opf_dc_high": [515, 783], "t_opf_dc_ipopt": [515, 783], "t_opf_dc_mip": [515, 783], "t_opf_dc_mips_sc": [515, 783], "t_opf_dc_mosek": [515, 783], "t_opf_dc_osqp": [515, 783], "t_opf_dc_ot": [515, 783], "t_opf_default": [515, 783], "t_opf_fmincon": [515, 783], "t_opf_ipopt": [515, 783], "t_opf_knitro": [515, 783], "t_opf_minopf": [515, 783], "t_opf_mip": [515, 783], "t_opf_model": [515, 783], "t_opf_softlim": [515, 777, 783], "t_opf_tspopf_pdipm": [515, 783], "t_opf_tspopf_scpdipm": [515, 783], "t_opf_tspopf_tralm": [515, 783], "t_opf_userfcn": [515, 783], "t_pf_ac": [515, 783], "t_pf_dc": [515, 783], "t_pf_radial": [515, 783], "t_printpf": [515, 783], "t_psse": [515, 783], "t_qps_matpow": [515, 783], "t_runmarket": [515, 783], "t_runopf_w_r": [515, 783], "t_scale_load": [515, 783], "t_total_load": [515, 783], "t_totcost": [515, 783], "t_vdep_load": [515, 783], "opf_nle_fcn1": [515, 783], "opf_nle_hess1": [515, 783], "t_auction_cas": [515, 783], "t_case30_userfcn": [515, 693, 775, 776, 783], "t_case9_opf": [515, 783], "t_case9_opfv2": [515, 707, 783], "t_case9_pf": [515, 783], "t_case9_pfv2": [515, 783], "t_case9_save2pss": [515, 783], "t_case_ext": [515, 783], "t_case_int": [515, 783], "t_cpf_cb1": [515, 783], "t_cpf_cb2": [515, 783], "rr": 517, "set_mpc": 517, "f_u": 517, "nw": 517, "ddl": 517, "ddq": 517, "dl": [517, 577, 578], "dq": 517, "buld_cost_param": 517, "get_cost_param": [517, 658], "cp1": 517, "n1": 517, "cw1": 517, "cp2": 517, "n2": 517, "cw2": 517, "usr1": 517, "usr2": 517, "allow_multipl": 518, "userfcn": [518, 648, 649, 686, 687, 757, 761, 774, 775, 776, 777, 780], "presum": 518, "userfcn_reserves_ext2int": 518, "userfcn_reserves_formul": 518, "userfcn_reserves_int2ext": 518, "descriptor": [518, 675], "userfcn_reserves_printpf": 518, "prefix": 518, "mpc_modifi": 519, "mpc_origin": 519, "best": 519, "idx_branch": 519, "7th": 519, "ct_rep": [519, 566, 599], "ct_load_all_p": [519, 566, 599], "ct_rel": [519, 566, 599], "delta": 521, "TO": 521, "af": [521, 558], "vslack": [522, 523, 524], "zb": [522, 523, 524, 619, 620], "ybf": [522, 523, 524], "ybt": [522, 523, 524], "yd": [522, 523, 524, 620], "vg": [522, 523, 524, 526, 566, 601, 624], "summat": [522, 523, 524, 624], "qpv": [522, 523, 524], "sslack": [522, 523, 524], "iter_max": [522, 523, 524], "indici": [522, 523, 524, 620, 670], "principl": [522, 523, 524, 670], "send": [522, 523, 524, 670], "receiv": [522, 523, 524, 670], "addmitt": [522, 523, 524], "shirmohammadi": 522, "hong": 522, "semlyen": 522, "luo": 522, "compens": [522, 578], "weakli": [522, 524], "mesh": [522, 524], "753": 522, "1988": 522, "192932": 522, "1309": 522, "1316": 522, "nov": 522, "1990": 522, "99382": 522, "vcpf": 523, "rajic": [523, 619, 670], "ackovski": [523, 619, 670], "taleski": [523, 524, 619, 670], "1056": [523, 619, 670], "1062": [523, 619, 670], "apr": [523, 619, 670], "1994": [523, 619, 670], "296308": [523, 619], "dragoslav": 524, "raji\u010di\u0107": 524, "rubin": 524, "novel": 524, "radial": [524, 624], "analysi": 524, "volum": 524, "decemb": 524, "1998": 524, "1016": 524, "s0378": 524, "7796": 524, "00067": 524, "island": [525, 570, 573, 574, 614], "fopen": [525, 675], "pti": 526, "item": 526, "idx_area": 526, "regard": 526, "bus_nam": [526, 570, 679], "maxvm": [526, 597], "minvm": [526, 597], "machin": [526, 601], "remot": 526, "mbase": [526, 566, 601], "qc1min": [526, 566, 581, 601, 608], "qc1max": [526, 566, 581, 601, 608], "qc2min": [526, 566, 581, 601, 608], "qc2max": [526, 566, 581, 601, 608], "agc": [526, 601], "timescal": [526, 601], "apf": [526, 566, 601], "particip": [526, 601], "ratea": [526, 596, 688], "unlimit": 526, "rateb": [526, 596], "ratec": [526, 596], "delai": 526, "gf": [526, 577], "bf": [526, 612], "gt": [526, 578], "bt": [526, 578], "angmin": [526, 566, 596, 607, 777], "360": [526, 596, 607], "angmax": [526, 566, 596, 607, 777], "dollar": [526, 598], "fn": [526, 598], "break": [526, 573, 598, 619], "cn": [526, 598], "c0": [526, 527, 598], "highest": [526, 598], "longer": 526, "price_ref_bu": 526, "cdf_file_nam": 527, "mpc_name": [527, 676], "comment": [527, 676, 680, 681, 682, 683, 697, 698], "ieee300": 527, "mpc1": [528, 570], "unvisit": 529, "graph": 529, "ybu": [530, 531, 532, 547, 552, 553, 554, 556, 557, 559, 560, 561, 562, 571, 576, 613, 618, 641, 642, 643, 644, 645, 646, 654, 655, 661, 662, 671, 782], "sbusb": [530, 532, 547], "v_hat": [530, 532, 542, 688], "sbust": [530, 532, 547], "vprv": [530, 538, 539, 547], "lamprv": [530, 538, 539, 547], "lprv": 530, "scheme": [530, 688], "mpct": 531, "yf": [531, 532, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 613, 618, 652, 653, 671], "yt": [531, 532, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 613, 618, 652, 653, 671], "mpc_base": [531, 532], "mpc_target": [531, 532], "evnt": [532, 535, 537, 541, 544, 549, 551, 717, 718], "cb_data": [532, 534, 535, 536, 537, 540, 541, 543, 544, 548, 549, 550, 551, 717, 718], "cb_arg": [532, 535, 537, 541, 544, 545, 549, 551, 717, 718], "paramter": 532, "cb_state": 532, "ef": [532, 534, 536, 540, 543, 548, 550], "idx_pmax": 532, "underli": [532, 816], "job": 532, "user_callback": [532, 545, 624], "cpf_event": [533, 546], "cef": 533, "pef": 533, "sratea": 534, "flim": 535, "dp_dv": 539, "dp_dlam": 539, "plim": 541, "encount": [541, 544], "transfer": [541, 544, 615, 688], "choos": [541, 544, 624, 639], "remain": [544, 571, 576, 641, 642, 643, 644, 645, 646, 688, 694, 777, 782], "cpf_callback": 545, "53": 545, "zprv": 547, "postiv": 547, "vlim": [551, 666], "d2f_dv2": 552, "df_dv1": 552, "df_dv2": 552, "h11": 552, "h12": 552, "h21": 552, "h22": 552, "cf": [552, 556, 559, 561], "dsf_dv1": 552, "dsf_dv2": 552, "dst_dv1": 552, "dst_dv2": 552, "dv1": [552, 558], "daf_dv1": [552, 558], "dv2": [552, 558], "daf_dv2": [552, 558], "februari": [552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 815], "3237866": [552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 815], "ybr": [553, 556], "vcart": [553, 554, 555, 556, 557, 559, 560, 561, 562], "haa": [553, 556], "hav": [553, 556], "hva": [553, 556], "hvv": [553, 556], "hrr": [553, 556], "hri": [553, 556], "hir": [553, 556], "hii": [553, 556], "dva": [553, 554, 555, 556, 557, 559, 560, 561, 562], "dibr_dva": 553, "dibr_dvm": 553, "dvr": [553, 554, 555, 556, 557, 559, 560, 561, 562], "dibr_dvr": 553, "dvi": [553, 554, 555, 556, 557, 559, 560, 561, 562], "dibr_dvi": 553, "sereet": [553, 554, 555, 556, 557, 559, 560, 561, 562, 815], "april": [553, 554, 555, 556, 557, 559, 560, 561, 562, 815], "2018": [553, 554, 555, 556, 557, 559, 560, 561, 562, 815], "3237909": [553, 554, 555, 556, 557, 559, 560, 561, 562, 815], "sbu": [554, 560, 571, 576, 616, 641, 642, 643, 644, 645, 646, 782], "gaa": [554, 557], "gav": [554, 557], "gva": [554, 557], "gvv": [554, 557], "grr": [554, 555, 557], "gir": [554, 555, 557], "gii": [554, 555, 557], "dimis_dva": [554, 560], "dimis_dvm": [554, 560], "gri": [554, 555, 557], "dimis_dvr": [554, 560], "dimis_dvi": [554, 560], "addendum": [554, 555, 560, 815], "3237900": [554, 555, 560, 815], "cg": 555, "sg": [555, 616], "gsv": 555, "gen_bu": [555, 566, 601], "gpa": 555, "gpv": 555, "gqa": 555, "gqv": 555, "dimis_dpg": 555, "dimis_dqg": 555, "gpr": 555, "gpi": 555, "gqr": 555, "gqi": 555, "cbr": 556, "brch": 556, "dsbr_dva": 556, "dsbr_dvm": 556, "dsbr_dvr": 556, "dsbr_dvi": 556, "dsbus_dva": [557, 562], "dsbus_dvm": [557, 562, 616], "dsbus_dvr": [557, 562], "dsbus_dvi": [557, 562], "dff_dv1": 558, "dff_dv2": 558, "dft_dv1": 558, "dft_dv2": 558, "ff": 558, "ft": 558, "dat_dv1": 558, "dat_dv2": 558, "sensit": [558, 566, 613], "daf": 558, "dpf": 558, "dqf": 558, "v1": 558, "il": [558, 652, 653], "dif_dva": 559, "dif_dvm": 559, "dit_dva": 559, "dit_dvm": 559, "IF": 559, "IT": [559, 578], "dif_dvr": 559, "dif_dvi": 559, "dit_dvr": 559, "dit_dvi": 559, "dvf": [559, 561], "dif": [559, 561], "imi": 560, "ibu": [560, 562], "idg": 560, "dimi": 560, "dsf_dva": 561, "dsf_dvm": 561, "dst_dva": 561, "dst_dvm": 561, "dsf_dvr": 561, "dsf_dvi": 561, "dst_dvr": 561, "dst_dvi": 561, "dsf": 561, "mino": [564, 583, 624, 639, 647, 648, 754], "xr": [564, 647, 648, 780], "pimul": [564, 647, 648, 780], "pbu": 565, "swing": [565, 571, 576, 641, 642, 643, 644, 645, 646, 782], "bus_i": [566, 597], "bus_typ": [566, 597], "bus_area": [566, 597, 699, 778], "mu_vmax": [566, 597, 777], "mu_vmin": [566, 597], "br_r": [566, 596], "br_x": [566, 596], "br_b": [566, 596], "rate_b": [566, 596], "rate_c": [566, 596], "mu_sf": [566, 596, 777], "mu_st": [566, 596, 777], "mu_angmin": [566, 596], "mu_angmax": [566, 596], "mu_qmax": [566, 601, 781], "mu_qmin": [566, 601, 781], "ramp_q": [566, 601], "pw_linear": [566, 598], "ncost": [566, 598], "ct_label": [566, 599], "ct_prob": [566, 599], "ct_tabl": [566, 599], "ct_row": [566, 599], "ct_chgtype": [566, 599], "ct_add": [566, 599], "ct_newval": [566, 599], "ct_load_all_pq": [566, 599], "ct_load_fix_pq": [566, 599], "ct_load_dis_pq": [566, 599], "ct_load_fix_p": [566, 599], "ct_load_dis_p": [566, 599], "ct_modcost_f": [566, 599], "ct_modcost_x": [566, 599], "frequent": 566, "concern": 566, "accord": [567, 594, 681, 699, 777], "disturb": [567, 594], "a_int": [567, 594], "a_ext": [567, 594], "gencost_int": [567, 594], "gencost_ext": [567, 594], "revers": [569, 578], "external_bus_numb": [569, 602], "internal_bus_numb": [569, 602], "matow": [569, 602], "e2i": 569, "mpc_arrai": 570, "mpc_k": 570, "travers": 570, "elimin": [570, 688], "mpc_list": 570, "traver": 570, "mpc3": 570, "bus_label": 570, "gen_nam": 570, "emiss": 570, "genloc": 570, "bpp": [571, 611, 782], "prime": [571, 578, 611, 782], "guess": [571, 576, 641, 642, 643, 644, 645, 646, 782], "fpath": 572, "x1": 572, "xn": 572, "yn": 572, "feval": 572, "caller": 572, "testfunct": 572, "mytestfcn": 572, "x2": 572, "bridg": [573, 614], "nonbridg": 573, "filter": [573, 610], "tarjan": 573, "520": [575, 639], "unord": [577, 578], "biomass": 577, "coal": [577, 578], "dfo": 577, "distil": 577, "oil": 577, "diesel": [577, 578], "fo1": 577, "fo2": 577, "fo4": 577, "geotherm": [577, 578], "hydrop": 577, "pump": [577, 578, 603], "jetfuel": 577, "jet": [577, 578], "lng": 577, "liquefi": 577, "ga": [577, 578], "nuclear": [577, 578], "refus": 577, "municip": 577, "solid": [577, 578], "wast": 577, "rfo": 577, "fo5": 577, "fo6": 577, "solar": [577, 578], "syncgen": 577, "condensor": 577, "wasteheat": 577, "heat": 577, "wood": 577, "eia": 578, "860": 578, "instruct": [578, 648, 649], "mover": 578, "gov": 578, "survei": 578, "eia_860": 578, "ba": 578, "ce": 578, "compress": 578, "air": 578, "concentr": 578, "fw": 578, "flywheel": 578, "hydraul": 578, "turbin": 578, "steam": 578, "combust": 578, "ic": [578, 624], "piston": 578, "reciproc": 578, "ca": 578, "ct": 578, "integr": 578, "gasif": 578, "shaft": 578, "hydrokinet": 578, "axial": 578, "hb": 578, "wave": 578, "buoi": 578, "hk": 578, "hy": 578, "hydroelectr": 578, "water": 578, "pipelin": 578, "photovolta": 578, "wt": 578, "onshor": 578, "offshor": 578, "fc": 578, "powerworld": 578, "un": 578, "je": 578, "boil": 578, "reactor": 578, "graphit": 578, "nh": 578, "temperatur": 578, "pressur": 578, "turbo": 578, "condens": 578, "ti": 578, "motor": 578, "w1": 578, "w2": 578, "w3": 578, "w4": 578, "chg": 579, "fchg": 579, "tchg": 579, "dloss_dv": 579, "dchg_dvm": 579, "tau": 579, "bc": 579, "total_system_real_loss": 579, "total_system_reac_loss": 579, "hilo": 581, "slope": [581, 781], "intersect": 581, "plane": 581, "box": 581, "smart": 581, "redund": 581, "e4st": 582, "environment": 582, "minopf": [583, 624, 639, 703], "mp_core": [585, 816], "pdipmopf": [586, 705], "tspopf": [586, 588, 593, 624, 639, 648], "regexp": 587, "regexp_split": 587, "scpdipmopf": 588, "sdp_pf": [589, 624], "mx": [589, 591], "smartmarket": 590, "runmarket": 590, "syngrid": 591, "r2013b": 592, "apjank": 592, "tralmopf": 593, "trust": [593, 624, 639], "augment": [593, 624, 639], "langrangian": [593, 624, 639], "oldval": [594, 595], "a_orig": 594, "gencost_orig": 594, "ploss": 596, "restor": 602, "revert": 602, "AND": [603, 777], "revis": [603, 676, 680], "sensibl": 603, "elast": 603, "voll": 604, "lost": 604, "casefil": 605, "doesn": 605, "abort": 605, "fewer": 605, "ild": 606, "curtail": 606, "shed": 606, "nld": 606, "total_load_sh": 606, "iang": 607, "apqh": 608, "ubpqh": 608, "apql": 608, "ubpql": 608, "trapezoid": 608, "constain": 608, "ipqh": 608, "ipql": 608, "ivl": 609, "pgba": 610, "qgba": 610, "yba": 610, "BY": 610, "basin": [610, 648], "fdxb": [611, 624], "fdbx": [611, 624], "pf_alg": [611, 639], "bbu": 612, "pbusinj": 612, "pfinj": 612, "fulljac": 613, "ptdf": [614, 615], "mask_bridg": 614, "outag": 614, "lodf": 614, "nbr": [614, 615], "bus_idx": 615, "txfr": 615, "rand": 615, "v_corr": 619, "seen": 619, "zpv": 620, "mutual": 620, "joint": 620, "forward": [620, 685], "sweep": [620, 685], "margin": [621, 699, 777], "marginalcost": 621, "modtyp": [623, 699], "newgencost": 623, "f_alpha": 623, "scale_f": [623, 699], "scale_x": [623, 699], "shift_f": 623, "shift_x": 623, "value1": [624, 639], "value2": [624, 639], "embed": 624, "opt0": 624, "opt_vector": 624, "uppercas": 624, "permit": 624, "sh": 624, "ip": 624, "ih": 624, "xb": [624, 639], "bx": [624, 639], "zg": 624, "implicit": [624, 782], "pqsum": 624, "isum": 624, "ysum": 624, "vcorr": 624, "expens": [624, 639, 691, 695], "enforce_p_lim": [624, 688], "enforce_v_lim": [624, 688], "enforce_flow_lim": [624, 688], "p_lims_tol": 624, "q_lims_tol": 624, "v_lims_tol": 624, "flow_lims_tol": 624, "pdipm": [624, 639, 648, 758], "sdpopf": 624, "semidefinit": 624, "tralm": [624, 639, 760], "op": 624, "analyt": 624, "5e": [624, 639], "setpt": 624, "averag": 624, "flow_lim": [624, 652], "ignore_angle_lim": 624, "diff": 624, "softlim": [624, 757, 777], "soft": [624, 757, 777], "strategi": 624, "return_raw_d": [624, 639], "littl": [624, 639], "sys_sum": 624, "area_sum": 624, "out_line_lim": [624, 639], "out_pg_lim": [624, 639], "out_qg_lim": [624, 639], "pwr": 624, "suppress_detail": 624, "complementari": [624, 639], "cntrl": 624, "concurr": [624, 639], "rowtol": 624, "majdamp": 624, "mindamp": 624, "minor": [624, 639], "penalti": [624, 639], "major_it": 624, "minor_it": 624, "fort": [624, 639], "1200": [624, 639], "supbasic_lim": 624, "superbas": [624, 639], "mult_pric": 624, "gap": [624, 639], "smooth_ratio": 624, "primaltol": 624, "dualtol": 624, "use_legacy_cor": [624, 816], "bypass": [624, 816], "pw": 624, "qw": 624, "pf_tol": 639, "opf_alg": 639, "565": 639, "pf_max_it": 639, "pf_max_it_fd": 639, "pf_max_it_g": 639, "pf_dc": 639, "540": 639, "560": 639, "545": 639, "550": 639, "opf_viol": 639, "constr_tol_x": 639, "constr_tol_f": 639, "constr_max_it": 639, "opf_flow_lim": 639, "opf_ignore_ang_lim": 639, "opf_alg_dc": 639, "out_al": 639, "33": [639, 696], "out_sys_sum": 639, "out_area_sum": 639, "out_bu": 639, "out_branch": 639, "out_gen": 639, "out_all_lim": 639, "out_v_lim": 639, "44": 639, "out_forc": 639, "55": 639, "fmc_alg": 639, "mns_feastol": 639, "mns_rowtol": 639, "63": 639, "mns_xtol": 639, "mns_majdamp": 639, "mns_mindamp": 639, "mns_penalty_parm": 639, "67": 639, "mns_major_it": 639, "mns_minor_it": 639, "mns_max_it": 639, "mns_verbos": 639, "71": 639, "mns_core": 639, "mns_supbasic_lim": 639, "mns_mult_pric": 639, "pdipm_feastol": 639, "82": 639, "pdipm_gradtol": 639, "83": 639, "pdipm_comptol": 639, "pdipm_costtol": 639, "pdipm_max_it": 639, "scpdipm_red_it": 639, "tralm_feastol": 639, "tralm_primetol": 639, "tralm_dualtol": 639, "tralm_costtol": 639, "91": 639, "tralm_major_it": 639, "tralm_minor_it": 639, "smoothing_ratio": 639, "cplex_lpmethod": 639, "96": 639, "cplex_qpmethod": 639, "111": 639, "mosek_max_it": 639, "113": 639, "mosek_gap_tol": 639, "mosek_max_tim": 639, "mosek_num_thread": 639, "116": 639, "grb_method": 639, "122": 639, "grb_timelimit": 639, "grb_thread": 639, "raphson": [641, 642, 643, 644, 645, 646], "latter": [648, 780], "encod": [648, 649], "fun": 648, "mistmatch": 648, "pqh": 648, "pql": 648, "ycon": 648, "au": 649, "lbu": 649, "ubu": 649, "vadif": 650, "dvadif": 650, "d2vadif": 651, "ig": 657, "veq": 664, "dveq": 664, "d2veq": 665, "dvlim": 666, "d2vlim": 667, "vref": 668, "dvref": 668, "d2vref": 669, "bus0": 671, "gen0": 671, "branch0": 671, "npt": 672, "pwlcost": 672, "too": [673, 688], "effeci": 673, "polyv": 673, "polyd": 673, "pcost": 674, "qcost": 674, "stdout": 675, "fclose": 675, "rawfile_nam": [676, 683], "identif": 676, "hvdc": [676, 678], "accumul": [677, 679, 680, 682], "twodc": [678, 680], "trans2": [679, 680], "trans3": [679, 680], "OF": [680, 682, 683], "swshunt": 680, "templat": [681, 682], "float": [681, 682], "sscanf": [681, 682], "quot": [681, 682], "strip": [681, 682], "rv": 687, "basecasedata": 688, "targetcasedata": 688, "solvedcas": [688, 689, 690, 691, 692, 693, 694, 695], "nstep": 688, "nevent": 688, "fal": 688, "induc": 688, "bifurc": 688, "target_lam_v": 688, "did": 688, "event_nam": 688, "casedata": [689, 690, 691, 692, 693, 694, 695], "decommit": [691, 695, 780], "heurist": [691, 695], "shut": [691, 695, 780], "nrz": [693, 776], "ngr": [693, 776], "rmin": [693, 776], "rmax": [693, 776], "rawver": 696, "overwritten": [696, 697], "casestruct": 697, "pssecon2chgtab": 698, "extent": 698, "dmd": 699, "load_zon": [699, 778], "ONES": 699, "benefit": 699, "untouch": 700, "pad": 700, "iflim": [706, 761], "off2cas": 736, "scpdipm": 759, "runmkt": 768, "smartmkt": 768, "t_f": [774, 775, 776, 777], "caution": 774, "results1": 774, "results2": 774, "nif": 775, "busnum": 777, "base_cost": 777, "hl_mod": 777, "hl": 777, "hl_val": 777, "overload": 777, "ovl_cost": 777, "reativ": 778, "realiz": 778, "totalcost": 779, "sequenc": 780, "candid": 780, "gain": 780, "mu_pqh": 781, "mu_pql": 781, "seriou": 782, "out_ac": 804, "multip": 805, "wrt": [806, 807, 808, 809], "uniform": 815, "3237850": 815, "tech": 815, "4110676": 815, "decrib": 816, "Or": 816, "mainli": 816}, "objects": {"": [[518, 0, 1, "", "add_userfcn"], [519, 0, 1, "", "apply_changes"], [43, 0, 1, "", "apply_profile"], [119, 0, 1, "", "artelys_knitro_options"], [521, 0, 1, "", "calc_branch_angle"], [522, 0, 1, "", "calc_v_i_sum"], [523, 0, 1, "", "calc_v_pq_sum"], [524, 0, 1, "", "calc_v_y_sum"], [525, 0, 1, "", "case_info"], [528, 0, 1, "", "compare_case"], [529, 0, 1, "", "connected_components"], [120, 0, 1, "", "convert_constraint_multipliers"], [121, 0, 1, "", "convert_lin_constraint"], [122, 0, 1, "", "convert_lin_constraint_multipliers"], [123, 0, 1, "", "convert_quad_constraint"], [530, 0, 1, "", "cpf_corrector"], [531, 0, 1, "", "cpf_current_mpc"], [532, 0, 1, "", "cpf_default_callback"], [533, 0, 1, "", "cpf_detect_events"], [534, 0, 1, "", "cpf_flim_event"], [535, 0, 1, "", "cpf_flim_event_cb"], [536, 0, 1, "", "cpf_nose_event"], [537, 0, 1, "", "cpf_nose_event_cb"], [538, 0, 1, "", "cpf_p"], [539, 0, 1, "", "cpf_p_jac"], [540, 0, 1, "", "cpf_plim_event"], [541, 0, 1, "", "cpf_plim_event_cb"], [542, 0, 1, "", "cpf_predictor"], [543, 0, 1, "", "cpf_qlim_event"], [544, 0, 1, "", "cpf_qlim_event_cb"], [545, 0, 1, "", "cpf_register_callback"], [546, 0, 1, "", "cpf_register_event"], [547, 0, 1, "", "cpf_tangent"], [548, 0, 1, "", "cpf_target_lam_event"], [549, 0, 1, "", "cpf_target_lam_event_cb"], [550, 0, 1, "", "cpf_vlim_event"], [551, 0, 1, "", "cpf_vlim_event_cb"], [124, 0, 1, "", "cplex_options"], [552, 0, 1, "", "d2Abr_dV2"], [553, 0, 1, "", "d2Ibr_dV2"], [554, 0, 1, "", "d2Imis_dV2"], [555, 0, 1, "", "d2Imis_dVdSg"], [556, 0, 1, "", "d2Sbr_dV2"], [557, 0, 1, "", "d2Sbus_dV2"], [558, 0, 1, "", "dAbr_dV"], [559, 0, 1, "", "dIbr_dV"], [560, 0, 1, "", "dImis_dV"], [561, 0, 1, "", "dSbr_dV"], [562, 0, 1, "", "dSbus_dV"], [564, 0, 1, "", "dcopf_solver"], [261, 0, 1, "", "debug_assert"], [566, 1, 1, "", "define_constants"], [567, 0, 1, "", "e2i_data"], [568, 0, 1, "", "e2i_field"], [45, 0, 1, "", "ex_case3a"], [46, 0, 1, "", "ex_case3b"], [47, 0, 1, "", "ex_contab"], [48, 0, 1, "", "ex_load_profile"], [49, 0, 1, "", "ex_storage"], [50, 0, 1, "", "ex_transmat"], [51, 0, 1, "", "ex_wind"], [52, 0, 1, "", "ex_wind_profile"], [53, 0, 1, "", "ex_wind_profile_d"], [54, 0, 1, "", "ex_wind_uc"], [55, 0, 1, "", "ex_xgd"], [56, 0, 1, "", "ex_xgd_ramp"], [57, 0, 1, "", "ex_xgd_res"], [58, 0, 1, "", "ex_xgd_uc"], [570, 0, 1, "", "extract_islands"], [572, 0, 1, "", "feval_w_path"], [59, 0, 1, "", "filter_ramp_transitions"], [573, 0, 1, "", "find_bridges"], [574, 0, 1, "", "find_islands"], [14, 0, 1, "", "generate_autodoc_stubs"], [15, 0, 1, "", "generate_matpower_autodoc"], [16, 0, 1, "", "generate_source_symlinks"], [579, 0, 1, "", "get_losses"], [580, 0, 1, "", "get_reorder"], [125, 0, 1, "", "glpk_options"], [126, 0, 1, "", "gurobi_options"], [581, 0, 1, "", "hasPQcap"], [262, 0, 1, "", "have_feature"], [128, 0, 1, "", "have_feature_bpmpd"], [129, 0, 1, "", "have_feature_catchme"], [130, 0, 1, "", "have_feature_clp"], [131, 0, 1, "", "have_feature_cplex"], [582, 0, 1, "", "have_feature_e4st"], [132, 0, 1, "", "have_feature_evalc"], [133, 0, 1, "", "have_feature_fmincon"], [134, 0, 1, "", "have_feature_fmincon_ipm"], [135, 0, 1, "", "have_feature_fsolve"], [136, 0, 1, "", "have_feature_glpk"], [137, 0, 1, "", "have_feature_gurobi"], [138, 0, 1, "", "have_feature_highs"], [139, 0, 1, "", "have_feature_intlinprog"], [140, 0, 1, "", "have_feature_ipopt"], [141, 0, 1, "", "have_feature_ipopt_auxdata"], [142, 0, 1, "", "have_feature_isequaln"], [143, 0, 1, "", "have_feature_knitro"], [144, 0, 1, "", "have_feature_knitromatlab"], [145, 0, 1, "", "have_feature_linprog"], [146, 0, 1, "", "have_feature_linprog_ds"], [22, 0, 1, "", "have_feature_lu_vec"], [263, 0, 1, "", "have_feature_matlab"], [583, 0, 1, "", "have_feature_minopf"], [23, 0, 1, "", "have_feature_mips"], [147, 0, 1, "", "have_feature_mosek"], [584, 0, 1, "", "have_feature_most"], [585, 0, 1, "", "have_feature_mp_core"], [264, 0, 1, "", "have_feature_octave"], [148, 0, 1, "", "have_feature_opti_clp"], [149, 0, 1, "", "have_feature_optim"], [150, 0, 1, "", "have_feature_optimoptions"], [151, 0, 1, "", "have_feature_osqp"], [24, 0, 1, "", "have_feature_pardiso"], [25, 0, 1, "", "have_feature_pardiso_legacy"], [26, 0, 1, "", "have_feature_pardiso_object"], [586, 0, 1, "", "have_feature_pdipmopf"], [152, 0, 1, "", "have_feature_quadprog"], [153, 0, 1, "", "have_feature_quadprog_ls"], [587, 0, 1, "", "have_feature_regexp_split"], [588, 0, 1, "", "have_feature_scpdipmopf"], [589, 0, 1, "", "have_feature_sdp_pf"], [154, 0, 1, "", "have_feature_sdpt3"], [155, 0, 1, "", "have_feature_sedumi"], [590, 0, 1, "", "have_feature_smartmarket"], [591, 0, 1, "", "have_feature_syngrid"], [592, 0, 1, "", "have_feature_table"], [593, 0, 1, "", "have_feature_tralmopf"], [156, 0, 1, "", "have_feature_yalmip"], [157, 0, 1, "", "highs_options"], [594, 0, 1, "", "i2e_data"], [595, 0, 1, "", "i2e_field"], [596, 0, 1, "", "idx_brch"], [597, 0, 1, "", "idx_bus"], [598, 0, 1, "", "idx_cost"], [599, 0, 1, "", "idx_ct"], [600, 0, 1, "", "idx_dcline"], [601, 0, 1, "", "idx_gen"], [61, 0, 1, "", "idx_profile"], [508, 0, 1, "", "install_matpower"], [159, 0, 1, "", "ipopt_options"], [161, 0, 1, "", "lp_ex1"], [607, 0, 1, "", "makeAang"], [608, 0, 1, "", "makeApq"], [609, 0, 1, "", "makeAvl"], [610, 0, 1, "", "makeAy"], [611, 0, 1, "", "makeB"], [612, 0, 1, "", "makeBdc"], [613, 0, 1, "", "makeJac"], [614, 0, 1, "", "makeLODF"], [615, 0, 1, "", "makePTDF"], [616, 0, 1, "", "makeSbus"], [617, 0, 1, "", "makeSdzip"], [618, 0, 1, "", "makeYbus"], [619, 0, 1, "", "make_vcorr"], [620, 0, 1, "", "make_zpv"], [66, 0, 1, "", "md_init"], [162, 0, 1, "", "milp_ex1"], [28, 0, 1, "", "mips_example1"], [29, 0, 1, "", "mips_example2"], [163, 0, 1, "", "miqps_cplex"], [164, 0, 1, "", "miqps_glpk"], [165, 0, 1, "", "miqps_gurobi"], [166, 0, 1, "", "miqps_highs"], [167, 0, 1, "", "miqps_master"], [622, 0, 1, "", "miqps_matpower"], [168, 0, 1, "", "miqps_mosek"], [169, 0, 1, "", "miqps_ot"], [170, 0, 1, "", "mosek_options"], [171, 0, 1, "", "mosek_symbcon"], [68, 0, 1, "", "most_ex1_ed"], [69, 0, 1, "", "most_ex2_dcopf"], [70, 0, 1, "", "most_ex3_dcopf_w_uc"], [71, 0, 1, "", "most_ex4_dcopf_ss"], [72, 0, 1, "", "most_ex5_mpopf"], [73, 0, 1, "", "most_ex6_uc"], [74, 0, 1, "", "most_ex7_suc"], [75, 0, 1, "", "most_summary"], [786, 2, 1, "", "mp_foo_table"], [117, 2, 1, "", "mp_idx_manager"], [505, 2, 1, "", "mp_table"], [510, 0, 1, "", "mp_table_class"], [506, 2, 1, "", "mp_table_subclass"], [625, 0, 1, "", "mpoption_info_clp"], [626, 0, 1, "", "mpoption_info_cplex"], [627, 0, 1, "", "mpoption_info_fmincon"], [628, 0, 1, "", "mpoption_info_glpk"], [629, 0, 1, "", "mpoption_info_gurobi"], [630, 0, 1, "", "mpoption_info_highs"], [631, 0, 1, "", "mpoption_info_intlinprog"], [632, 0, 1, "", "mpoption_info_ipopt"], [633, 0, 1, "", "mpoption_info_knitro"], [634, 0, 1, "", "mpoption_info_linprog"], [635, 0, 1, "", "mpoption_info_mips"], [636, 0, 1, "", "mpoption_info_mosek"], [77, 0, 1, "", "mpoption_info_most"], [637, 0, 1, "", "mpoption_info_osqp"], [638, 0, 1, "", "mpoption_info_quadprog"], [639, 0, 1, "", "mpoption_old"], [179, 0, 1, "", "nested_struct_copy"], [642, 0, 1, "", "newtonpf_I_cart"], [643, 0, 1, "", "newtonpf_I_hybrid"], [644, 0, 1, "", "newtonpf_I_polar"], [645, 0, 1, "", "newtonpf_S_cart"], [646, 0, 1, "", "newtonpf_S_hybrid"], [180, 0, 1, "", "nleqs_core"], [181, 0, 1, "", "nleqs_fd_newton"], [182, 0, 1, "", "nleqs_fsolve"], [183, 0, 1, "", "nleqs_gauss_seidel"], [184, 0, 1, "", "nleqs_master"], [185, 0, 1, "", "nleqs_master_ex1"], [186, 0, 1, "", "nleqs_master_ex2"], [187, 0, 1, "", "nleqs_newton"], [188, 0, 1, "", "nlp_consfcn"], [189, 0, 1, "", "nlp_costfcn"], [190, 0, 1, "", "nlp_hessfcn"], [647, 0, 1, "", "nlpopf_solver"], [191, 0, 1, "", "nlps_fmincon"], [192, 0, 1, "", "nlps_ipopt"], [193, 0, 1, "", "nlps_knitro"], [194, 0, 1, "", "nlps_master"], [195, 0, 1, "", "nlps_master_ex1"], [196, 0, 1, "", "nlps_master_ex2"], [649, 0, 1, "", "opf_args"], [650, 0, 1, "", "opf_branch_ang_fcn"], [651, 0, 1, "", "opf_branch_ang_hess"], [652, 0, 1, "", "opf_branch_flow_fcn"], [653, 0, 1, "", "opf_branch_flow_hess"], [654, 0, 1, "", "opf_current_balance_fcn"], [655, 0, 1, "", "opf_current_balance_hess"], [656, 0, 1, "", "opf_execute"], [657, 0, 1, "", "opf_gen_cost_fcn"], [658, 0, 1, "", "opf_legacy_user_cost_fcn"], [517, 2, 1, "", "opf_model"], [659, 0, 1, "", "opf_nle_fcn1"], [660, 0, 1, "", "opf_nle_hess1"], [661, 0, 1, "", "opf_power_balance_fcn"], [662, 0, 1, "", "opf_power_balance_hess"], [663, 0, 1, "", "opf_setup"], [664, 0, 1, "", "opf_veq_fcn"], [665, 0, 1, "", "opf_veq_hess"], [666, 0, 1, "", "opf_vlim_fcn"], [667, 0, 1, "", "opf_vlim_hess"], [668, 0, 1, "", "opf_vref_fcn"], [669, 0, 1, "", "opf_vref_hess"], [118, 2, 1, "", "opt_model"], [670, 0, 1, "", "order_radial"], [197, 0, 1, "", "osqp_options"], [78, 0, 1, "", "plot_gen"], [79, 0, 1, "", "plot_storage"], [80, 0, 1, "", "plot_uc"], [81, 0, 1, "", "plot_uc_data"], [199, 0, 1, "", "pne_callback_default"], [200, 0, 1, "", "pne_callback_nose"], [201, 0, 1, "", "pne_callback_target_lam"], [202, 0, 1, "", "pne_detect_events"], [203, 0, 1, "", "pne_detected_event"], [204, 0, 1, "", "pne_event_nose"], [205, 0, 1, "", "pne_event_target_lam"], [206, 0, 1, "", "pne_ex1"], [207, 0, 1, "", "pne_pfcn_arc_len"], [208, 0, 1, "", "pne_pfcn_natural"], [209, 0, 1, "", "pne_pfcn_pseudo_arc_len"], [210, 0, 1, "", "pne_register_callbacks"], [211, 0, 1, "", "pne_register_events"], [212, 0, 1, "", "pnes_master"], [677, 0, 1, "", "psse_convert"], [678, 0, 1, "", "psse_convert_hvdc"], [679, 0, 1, "", "psse_convert_xfmr"], [680, 0, 1, "", "psse_parse"], [681, 0, 1, "", "psse_parse_line"], [682, 0, 1, "", "psse_parse_section"], [683, 0, 1, "", "psse_read"], [213, 0, 1, "", "qcqp_ex1"], [214, 0, 1, "", "qcqp_nlp_consfcn"], [215, 0, 1, "", "qcqp_nlp_costfcn"], [216, 0, 1, "", "qcqp_nlp_hessfcn"], [217, 0, 1, "", "qcqps_gurobi"], [218, 0, 1, "", "qcqps_knitro"], [219, 0, 1, "", "qcqps_master"], [220, 0, 1, "", "qcqps_nlps"], [221, 0, 1, "", "qp_ex1"], [222, 0, 1, "", "qps_bpmpd"], [223, 0, 1, "", "qps_clp"], [224, 0, 1, "", "qps_cplex"], [225, 0, 1, "", "qps_glpk"], [226, 0, 1, "", "qps_gurobi"], [227, 0, 1, "", "qps_highs"], [228, 0, 1, "", "qps_ipopt"], [229, 0, 1, "", "qps_knitro"], [230, 0, 1, "", "qps_master"], [684, 0, 1, "", "qps_matpower"], [32, 0, 1, "", "qps_mips"], [231, 0, 1, "", "qps_mosek"], [232, 0, 1, "", "qps_osqp"], [233, 0, 1, "", "qps_ot"], [685, 0, 1, "", "radial_pf"], [686, 0, 1, "", "remove_userfcn"], [511, 0, 1, "", "run_cpf"], [512, 0, 1, "", "run_mp"], [513, 0, 1, "", "run_opf"], [514, 0, 1, "", "run_pf"], [687, 0, 1, "", "run_userfcn"], [693, 0, 1, "", "runopf_w_res"], [699, 0, 1, "", "scale_load"], [700, 0, 1, "", "set_reorder"], [701, 0, 1, "", "t_apply_changes"], [702, 0, 1, "", "t_auction_case"], [703, 0, 1, "", "t_auction_minopf"], [704, 0, 1, "", "t_auction_mips"], [705, 0, 1, "", "t_auction_tspopf_pdipm"], [266, 0, 1, "", "t_begin"], [82, 0, 1, "", "t_case30_most"], [706, 0, 1, "", "t_case30_userfcns"], [83, 0, 1, "", "t_case3_most"], [787, 0, 1, "", "t_case3p_a"], [788, 0, 1, "", "t_case3p_b"], [789, 0, 1, "", "t_case3p_c"], [790, 0, 1, "", "t_case3p_d"], [791, 0, 1, "", "t_case3p_e"], [792, 0, 1, "", "t_case3p_f"], [793, 0, 1, "", "t_case3p_g"], [794, 0, 1, "", "t_case3p_h"], [707, 0, 1, "", "t_case9_dcline"], [795, 0, 1, "", "t_case9_gizmo"], [708, 0, 1, "", "t_case9_opf"], [709, 0, 1, "", "t_case9_opfv2"], [710, 0, 1, "", "t_case9_pf"], [711, 0, 1, "", "t_case9_pfv2"], [712, 0, 1, "", "t_case9_save2psse"], [713, 0, 1, "", "t_case_ext"], [714, 0, 1, "", "t_case_int"], [84, 0, 1, "", "t_case_tlmp"], [85, 0, 1, "", "t_case_tlmp_storage"], [715, 0, 1, "", "t_chgtab"], [796, 0, 1, "", "t_convert_1p_to_3p"], [716, 0, 1, "", "t_cpf"], [717, 0, 1, "", "t_cpf_cb1"], [718, 0, 1, "", "t_cpf_cb2"], [719, 0, 1, "", "t_dcline"], [267, 0, 1, "", "t_debug_assert"], [797, 0, 1, "", "t_dmc_element"], [268, 0, 1, "", "t_end"], [720, 0, 1, "", "t_ext2int2ext"], [721, 0, 1, "", "t_feval_w_path"], [269, 0, 1, "", "t_file_match"], [722, 0, 1, "", "t_get_losses"], [723, 0, 1, "", "t_hasPQcap"], [234, 0, 1, "", "t_have_fcn"], [270, 0, 1, "", "t_have_feature"], [724, 0, 1, "", "t_hessian"], [271, 0, 1, "", "t_is"], [725, 0, 1, "", "t_islands"], [726, 0, 1, "", "t_jacobian"], [727, 0, 1, "", "t_load2disp"], [728, 0, 1, "", "t_loadcase"], [729, 0, 1, "", "t_makeLODF"], [730, 0, 1, "", "t_makePTDF"], [731, 0, 1, "", "t_margcost"], [33, 0, 1, "", "t_mips"], [34, 0, 1, "", "t_mips_pardiso"], [235, 0, 1, "", "t_miqps_master"], [732, 0, 1, "", "t_miqps_matpower"], [236, 0, 1, "", "t_mm_solve_leqs"], [237, 0, 1, "", "t_mm_solve_miqps"], [238, 0, 1, "", "t_mm_solve_nleqs"], [239, 0, 1, "", "t_mm_solve_nlps"], [240, 0, 1, "", "t_mm_solve_pne"], [241, 0, 1, "", "t_mm_solve_qcqps"], [242, 0, 1, "", "t_mm_solve_qps"], [733, 0, 1, "", "t_modcost"], [86, 0, 1, "", "t_most_30b_1_1_0"], [87, 0, 1, "", "t_most_30b_1_1_0_uc"], [88, 0, 1, "", "t_most_30b_1_1_17"], [89, 0, 1, "", "t_most_30b_3_1_0"], [90, 0, 1, "", "t_most_30b_3_1_17"], [91, 0, 1, "", "t_most_3b_1_1_0"], [92, 0, 1, "", "t_most_3b_1_1_2"], [93, 0, 1, "", "t_most_3b_3_1_0"], [94, 0, 1, "", "t_most_3b_3_1_2"], [95, 0, 1, "", "t_most_fixed_res"], [96, 0, 1, "", "t_most_mpopf"], [97, 0, 1, "", "t_most_sp"], [98, 0, 1, "", "t_most_spuc"], [99, 0, 1, "", "t_most_suc"], [100, 0, 1, "", "t_most_tlmp"], [101, 0, 1, "", "t_most_uc"], [102, 0, 1, "", "t_most_w_ds"], [798, 0, 1, "", "t_mp_data_model"], [799, 0, 1, "", "t_mp_dm_converter_mpc2"], [800, 0, 1, "", "t_mp_mapped_array"], [243, 0, 1, "", "t_mp_opt_model"], [801, 0, 1, "", "t_mp_table"], [35, 0, 1, "", "t_mplinsolve"], [734, 0, 1, "", "t_mpoption"], [735, 0, 1, "", "t_mpoption_ov"], [802, 0, 1, "", "t_mpxt_legacy_dcline"], [803, 0, 1, "", "t_mpxt_reserves"], [244, 0, 1, "", "t_nested_struct_copy"], [245, 0, 1, "", "t_nleqs_master"], [246, 0, 1, "", "t_nlps_master"], [804, 0, 1, "", "t_nm_element"], [805, 0, 1, "", "t_node_test"], [736, 0, 1, "", "t_off2case"], [272, 0, 1, "", "t_ok"], [247, 0, 1, "", "t_om_solve_leqs"], [248, 0, 1, "", "t_om_solve_miqps"], [249, 0, 1, "", "t_om_solve_nleqs"], [250, 0, 1, "", "t_om_solve_nlps"], [251, 0, 1, "", "t_om_solve_pne"], [252, 0, 1, "", "t_om_solve_qcqps"], [253, 0, 1, "", "t_om_solve_qps"], [737, 0, 1, "", "t_opf_dc_bpmpd"], [738, 0, 1, "", "t_opf_dc_clp"], [739, 0, 1, "", "t_opf_dc_cplex"], [740, 0, 1, "", "t_opf_dc_default"], [741, 0, 1, "", "t_opf_dc_glpk"], [742, 0, 1, "", "t_opf_dc_gurobi"], [743, 0, 1, "", "t_opf_dc_highs"], [744, 0, 1, "", "t_opf_dc_ipopt"], [745, 0, 1, "", "t_opf_dc_mips"], [746, 0, 1, "", "t_opf_dc_mips_sc"], [747, 0, 1, "", "t_opf_dc_mosek"], [748, 0, 1, "", "t_opf_dc_osqp"], [749, 0, 1, "", "t_opf_dc_ot"], [750, 0, 1, "", "t_opf_default"], [751, 0, 1, "", "t_opf_fmincon"], [752, 0, 1, "", "t_opf_ipopt"], [753, 0, 1, "", "t_opf_knitro"], [754, 0, 1, "", "t_opf_minopf"], [755, 0, 1, "", "t_opf_mips"], [756, 0, 1, "", "t_opf_model"], [757, 0, 1, "", "t_opf_softlims"], [758, 0, 1, "", "t_opf_tspopf_pdipm"], [759, 0, 1, "", "t_opf_tspopf_scpdipm"], [760, 0, 1, "", "t_opf_tspopf_tralm"], [761, 0, 1, "", "t_opf_userfcns"], [254, 0, 1, "", "t_opt_model"], [762, 0, 1, "", "t_pf_ac"], [763, 0, 1, "", "t_pf_dc"], [764, 0, 1, "", "t_pf_radial"], [255, 0, 1, "", "t_pnes_master"], [806, 0, 1, "", "t_port_inj_current_acc"], [807, 0, 1, "", "t_port_inj_current_acp"], [808, 0, 1, "", "t_port_inj_power_acc"], [809, 0, 1, "", "t_port_inj_power_acp"], [810, 0, 1, "", "t_pretty_print"], [765, 0, 1, "", "t_printpf"], [766, 0, 1, "", "t_psse"], [256, 0, 1, "", "t_qcqps_master"], [257, 0, 1, "", "t_qps_master"], [767, 0, 1, "", "t_qps_matpower"], [36, 0, 1, "", "t_qps_mips"], [811, 0, 1, "", "t_run_mp"], [812, 0, 1, "", "t_run_mp_3p"], [813, 0, 1, "", "t_run_opf_default"], [273, 0, 1, "", "t_run_tests"], [768, 0, 1, "", "t_runmarket"], [769, 0, 1, "", "t_runopf_w_res"], [770, 0, 1, "", "t_scale_load"], [274, 0, 1, "", "t_skip"], [275, 0, 1, "", "t_str_match"], [276, 0, 1, "", "t_test_fcns"], [771, 0, 1, "", "t_total_load"], [772, 0, 1, "", "t_totcost"], [773, 0, 1, "", "t_vdep_load"], [814, 0, 1, "", "test_matpower"], [37, 0, 1, "", "test_mips"], [103, 0, 1, "", "test_most"], [258, 0, 1, "", "test_mp_opt_model"], [277, 0, 1, "", "test_mptest"], [774, 0, 1, "", "toggle_dcline"], [278, 0, 1, "", "toggle_debug_mode"], [775, 0, 1, "", "toggle_iflims"], [776, 0, 1, "", "toggle_reserves"], [777, 0, 1, "", "toggle_softlims"], [778, 0, 1, "", "total_load"], [781, 0, 1, "", "update_mupq"]], "mips": [[27, 0, 1, "", "mips"]], "most": [[67, 0, 1, "", "most"]], "mp": [[282, 2, 1, "", "NODE_TYPE"], [283, 2, 1, "", "case_utils"], [284, 2, 1, "", "cost_table"], [285, 2, 1, "", "cost_table_utils"], [286, 2, 1, "", "data_model"], [287, 2, 1, "", "data_model_cpf"], [288, 2, 1, "", "data_model_opf"], [289, 2, 1, "", "dm_converter"], [290, 2, 1, "", "dm_converter_mpc2"], [291, 2, 1, "", "dm_converter_mpc2_legacy"], [292, 2, 1, "", "dm_element"], [293, 2, 1, "", "dmc_element"], [294, 2, 1, "", "dmce_branch_mpc2"], [295, 2, 1, "", "dmce_bus3p_mpc2"], [296, 2, 1, "", "dmce_bus_mpc2"], [297, 2, 1, "", "dmce_buslink_mpc2"], [298, 2, 1, "", "dmce_gen3p_mpc2"], [299, 2, 1, "", "dmce_gen_mpc2"], [300, 2, 1, "", "dmce_legacy_dcline_mpc2"], [301, 2, 1, "", "dmce_line3p_mpc2"], [302, 2, 1, "", "dmce_load3p_mpc2"], [303, 2, 1, "", "dmce_load_mpc2"], [304, 2, 1, "", "dmce_reserve_gen_mpc2"], [305, 2, 1, "", "dmce_reserve_zone_mpc2"], [306, 2, 1, "", "dmce_shunt3p_mpc2"], [307, 2, 1, "", "dmce_shunt_mpc2"], [308, 2, 1, "", "dmce_xfmr3p_mpc2"], [309, 2, 1, "", "dme_branch"], [310, 2, 1, "", "dme_branch_opf"], [311, 2, 1, "", "dme_bus"], [312, 2, 1, "", "dme_bus3p"], [313, 2, 1, "", "dme_bus3p_opf"], [314, 2, 1, "", "dme_bus_opf"], [315, 2, 1, "", "dme_buslink"], [316, 2, 1, "", "dme_buslink_opf"], [317, 2, 1, "", "dme_gen"], [318, 2, 1, "", "dme_gen3p"], [319, 2, 1, "", "dme_gen3p_opf"], [320, 2, 1, "", "dme_gen_opf"], [321, 2, 1, "", "dme_legacy_dcline"], [322, 2, 1, "", "dme_legacy_dcline_opf"], [323, 2, 1, "", "dme_line3p"], [324, 2, 1, "", "dme_line3p_opf"], [325, 2, 1, "", "dme_load"], [326, 2, 1, "", "dme_load3p"], [327, 2, 1, "", "dme_load3p_opf"], [328, 2, 1, "", "dme_load_cpf"], [329, 2, 1, "", "dme_load_opf"], [330, 2, 1, "", "dme_reserve_gen"], [331, 2, 1, "", "dme_reserve_zone"], [332, 2, 1, "", "dme_shared_opf"], [333, 2, 1, "", "dme_shunt"], [334, 2, 1, "", "dme_shunt3p"], [335, 2, 1, "", "dme_shunt3p_opf"], [336, 2, 1, "", "dme_shunt_cpf"], [337, 2, 1, "", "dme_shunt_opf"], [338, 2, 1, "", "dme_xfmr3p"], [339, 2, 1, "", "dme_xfmr3p_opf"], [340, 2, 1, "", "element_container"], [341, 2, 1, "", "extension"], [342, 2, 1, "", "form"], [343, 2, 1, "", "form_ac"], [344, 2, 1, "", "form_acc"], [345, 2, 1, "", "form_acp"], [346, 2, 1, "", "form_dc"], [509, 0, 1, "", "load_dm"], [347, 2, 1, "", "mapped_array"], [348, 2, 1, "", "math_model"], [349, 2, 1, "", "math_model_cpf_acc"], [350, 2, 1, "", "math_model_cpf_acci"], [351, 2, 1, "", "math_model_cpf_accs"], [352, 2, 1, "", "math_model_cpf_acp"], [353, 2, 1, "", "math_model_cpf_acpi"], [354, 2, 1, "", "math_model_cpf_acps"], [355, 2, 1, "", "math_model_opf"], [356, 2, 1, "", "math_model_opf_ac"], [357, 2, 1, "", "math_model_opf_acc"], [358, 2, 1, "", "math_model_opf_acci"], [359, 2, 1, "", "math_model_opf_acci_legacy"], [360, 2, 1, "", "math_model_opf_accs"], [361, 2, 1, "", "math_model_opf_accs_legacy"], [362, 2, 1, "", "math_model_opf_acp"], [363, 2, 1, "", "math_model_opf_acpi"], [364, 2, 1, "", "math_model_opf_acpi_legacy"], [365, 2, 1, "", "math_model_opf_acps"], [366, 2, 1, "", "math_model_opf_acps_legacy"], [367, 2, 1, "", "math_model_opf_dc"], [368, 2, 1, "", "math_model_opf_dc_legacy"], [369, 2, 1, "", "math_model_pf"], [370, 2, 1, "", "math_model_pf_ac"], [371, 2, 1, "", "math_model_pf_acci"], [372, 2, 1, "", "math_model_pf_accs"], [373, 2, 1, "", "math_model_pf_acpi"], [374, 2, 1, "", "math_model_pf_acps"], [375, 2, 1, "", "math_model_pf_dc"], [376, 2, 1, "", "mm_element"], [377, 2, 1, "", "mm_shared_opf_legacy"], [378, 2, 1, "", "mm_shared_pfcpf"], [379, 2, 1, "", "mm_shared_pfcpf_ac"], [380, 2, 1, "", "mm_shared_pfcpf_ac_i"], [381, 2, 1, "", "mm_shared_pfcpf_acc"], [382, 2, 1, "", "mm_shared_pfcpf_acci"], [383, 2, 1, "", "mm_shared_pfcpf_accs"], [384, 2, 1, "", "mm_shared_pfcpf_acp"], [385, 2, 1, "", "mm_shared_pfcpf_acpi"], [386, 2, 1, "", "mm_shared_pfcpf_acps"], [387, 2, 1, "", "mm_shared_pfcpf_dc"], [388, 2, 1, "", "mme_branch"], [389, 2, 1, "", "mme_branch_opf"], [390, 2, 1, "", "mme_branch_opf_ac"], [391, 2, 1, "", "mme_branch_opf_acc"], [392, 2, 1, "", "mme_branch_opf_acp"], [393, 2, 1, "", "mme_branch_opf_dc"], [394, 2, 1, "", "mme_branch_pf_ac"], [395, 2, 1, "", "mme_branch_pf_dc"], [396, 2, 1, "", "mme_bus"], [397, 2, 1, "", "mme_bus3p"], [398, 2, 1, "", "mme_bus3p_opf_acc"], [399, 2, 1, "", "mme_bus3p_opf_acp"], [400, 2, 1, "", "mme_bus_opf_ac"], [401, 2, 1, "", "mme_bus_opf_acc"], [402, 2, 1, "", "mme_bus_opf_acp"], [403, 2, 1, "", "mme_bus_opf_dc"], [404, 2, 1, "", "mme_bus_pf_ac"], [405, 2, 1, "", "mme_bus_pf_dc"], [406, 2, 1, "", "mme_buslink"], [407, 2, 1, "", "mme_buslink_opf"], [408, 2, 1, "", "mme_buslink_opf_acc"], [409, 2, 1, "", "mme_buslink_opf_acp"], [410, 2, 1, "", "mme_buslink_pf_ac"], [411, 2, 1, "", "mme_buslink_pf_acc"], [412, 2, 1, "", "mme_buslink_pf_acp"], [413, 2, 1, "", "mme_gen"], [414, 2, 1, "", "mme_gen3p"], [415, 2, 1, "", "mme_gen3p_opf"], [416, 2, 1, "", "mme_gen_opf"], [417, 2, 1, "", "mme_gen_opf_ac"], [418, 2, 1, "", "mme_gen_opf_ac_oval"], [419, 2, 1, "", "mme_gen_opf_dc"], [420, 2, 1, "", "mme_gen_pf_ac"], [421, 2, 1, "", "mme_gen_pf_dc"], [422, 2, 1, "", "mme_legacy_dcline"], [423, 2, 1, "", "mme_legacy_dcline_opf"], [424, 2, 1, "", "mme_legacy_dcline_opf_ac"], [425, 2, 1, "", "mme_legacy_dcline_opf_dc"], [426, 2, 1, "", "mme_legacy_dcline_pf_ac"], [427, 2, 1, "", "mme_legacy_dcline_pf_dc"], [428, 2, 1, "", "mme_line3p"], [429, 2, 1, "", "mme_line3p_opf"], [430, 2, 1, "", "mme_load"], [431, 2, 1, "", "mme_load_cpf"], [432, 2, 1, "", "mme_load_pf_ac"], [433, 2, 1, "", "mme_load_pf_dc"], [434, 2, 1, "", "mme_reserve_gen"], [435, 2, 1, "", "mme_reserve_zone"], [436, 2, 1, "", "mme_shunt"], [437, 2, 1, "", "mme_shunt3p"], [438, 2, 1, "", "mme_shunt3p_opf"], [439, 2, 1, "", "mme_shunt_cpf"], [440, 2, 1, "", "mme_shunt_pf_ac"], [441, 2, 1, "", "mme_shunt_pf_dc"], [442, 2, 1, "", "mme_xfmr3p"], [443, 2, 1, "", "mme_xfmr3p_opf"], [444, 2, 1, "", "net_model"], [445, 2, 1, "", "net_model_ac"], [446, 2, 1, "", "net_model_acc"], [447, 2, 1, "", "net_model_acp"], [448, 2, 1, "", "net_model_dc"], [449, 2, 1, "", "nm_element"], [450, 2, 1, "", "nme_branch"], [451, 2, 1, "", "nme_branch_ac"], [452, 2, 1, "", "nme_branch_acc"], [453, 2, 1, "", "nme_branch_acp"], [454, 2, 1, "", "nme_branch_dc"], [455, 2, 1, "", "nme_bus"], [456, 2, 1, "", "nme_bus3p"], [457, 2, 1, "", "nme_bus3p_acc"], [458, 2, 1, "", "nme_bus3p_acp"], [459, 2, 1, "", "nme_bus_acc"], [460, 2, 1, "", "nme_bus_acp"], [461, 2, 1, "", "nme_bus_dc"], [462, 2, 1, "", "nme_buslink"], [463, 2, 1, "", "nme_buslink_acc"], [464, 2, 1, "", "nme_buslink_acp"], [465, 2, 1, "", "nme_gen"], [466, 2, 1, "", "nme_gen3p"], [467, 2, 1, "", "nme_gen3p_acc"], [468, 2, 1, "", "nme_gen3p_acp"], [469, 2, 1, "", "nme_gen_ac"], [470, 2, 1, "", "nme_gen_acc"], [471, 2, 1, "", "nme_gen_acp"], [472, 2, 1, "", "nme_gen_dc"], [473, 2, 1, "", "nme_legacy_dcline"], [474, 2, 1, "", "nme_legacy_dcline_ac"], [475, 2, 1, "", "nme_legacy_dcline_acc"], [476, 2, 1, "", "nme_legacy_dcline_acp"], [477, 2, 1, "", "nme_legacy_dcline_dc"], [478, 2, 1, "", "nme_line3p"], [479, 2, 1, "", "nme_load"], [480, 2, 1, "", "nme_load3p"], [481, 2, 1, "", "nme_load_ac"], [482, 2, 1, "", "nme_load_acc"], [483, 2, 1, "", "nme_load_acp"], [484, 2, 1, "", "nme_load_dc"], [485, 2, 1, "", "nme_shunt"], [486, 2, 1, "", "nme_shunt3p"], [487, 2, 1, "", "nme_shunt_ac"], [488, 2, 1, "", "nme_shunt_acc"], [489, 2, 1, "", "nme_shunt_acp"], [490, 2, 1, "", "nme_shunt_dc"], [491, 2, 1, "", "nme_xfmr3p"], [107, 2, 1, "", "opt_model"], [108, 2, 1, "", "set_manager"], [109, 2, 1, "", "set_manager_opt_model"], [492, 2, 1, "", "sm_legacy_cost"], [110, 2, 1, "", "sm_lin_constraint"], [111, 2, 1, "", "sm_nln_constraint"], [112, 2, 1, "", "sm_nln_cost"], [113, 2, 1, "", "sm_quad_constraint"], [114, 2, 1, "", "sm_quad_cost"], [115, 2, 1, "", "sm_quad_cost_legacy"], [116, 2, 1, "", "sm_variable"], [172, 0, 1, "", "struct2object"], [493, 2, 1, "", "task"], [494, 2, 1, "", "task_cpf"], [495, 2, 1, "", "task_cpf_legacy"], [496, 2, 1, "", "task_opf"], [497, 2, 1, "", "task_opf_legacy"], [498, 2, 1, "", "task_pf"], [499, 2, 1, "", "task_pf_legacy"], [500, 2, 1, "", "task_shared_legacy"], [501, 2, 1, "", "xt_3p"], [502, 2, 1, "", "xt_legacy_dcline"], [503, 2, 1, "", "xt_oval_cap_curve"], [504, 2, 1, "", "xt_reserves"]], "mp.NODE_TYPE": [[282, 3, 1, "", "NONE"], [282, 3, 1, "", "PQ"], [282, 3, 1, "", "PV"], [282, 3, 1, "", "REF"], [282, 4, 1, "", "is_valid"]], "mp.case_utils": [[283, 4, 1, "", "convert_1p_to_3p"], [283, 4, 1, "", "relocate_branch_shunts"], [283, 4, 1, "", "remove_gen_q_lims"], [283, 4, 1, "", "to_consecutive_bus_numbers"], [283, 4, 1, "", "z_base_change"]], "mp.cost_table": [[284, 5, 1, "", "cost_table"], [284, 4, 1, "", "diff_poly_fcn"], [284, 4, 1, "", "eval_poly_fcn"], [284, 5, 1, "", "max_pwl_cost"], [284, 4, 1, "", "poly_cost_fcn"], [284, 5, 1, "", "poly_params"], [284, 5, 1, "", "pwl_params"]], "mp.cost_table_utils": [[285, 4, 1, "", "max_pwl_cost"], [285, 4, 1, "", "poly_params"], [285, 4, 1, "", "pwl_params"]], "mp.data_model": [[286, 3, 1, "", "base_kva"], [286, 3, 1, "", "base_mva"], [286, 5, 1, "", "build"], [286, 5, 1, "", "build_params"], [286, 5, 1, "", "copy"], [286, 5, 1, "", "count"], [286, 5, 1, "", "data_model"], [286, 5, 1, "", "display"], [286, 5, 1, "", "initialize"], [286, 5, 1, "", "online"], [286, 5, 1, "", "pp_data"], [286, 5, 1, "", "pp_flags"], [286, 5, 1, "", "pp_get_headers"], [286, 5, 1, "", "pp_get_headers_cnt"], [286, 5, 1, "", "pp_get_headers_ext"], [286, 5, 1, "", "pp_get_headers_other"], [286, 5, 1, "", "pp_have_section"], [286, 5, 1, "", "pp_section"], [286, 5, 1, "", "pp_section_label"], [286, 5, 1, "", "pp_section_list"], [286, 5, 1, "", "pretty_print"], [286, 5, 1, "", "rebuild"], [286, 5, 1, "", "set_bus_v_lims_via_vg"], [286, 3, 1, "", "source"], [286, 5, 1, "", "update_status"], [286, 3, 1, "", "userdata"]], "mp.data_model_cpf": [[287, 5, 1, "", "data_model_cpf"]], "mp.data_model_opf": [[288, 5, 1, "", "data_model_opf"], [288, 5, 1, "", "pp_flags"], [288, 5, 1, "", "pp_get_headers_other"], [288, 5, 1, "", "pp_section_list"]], "mp.dm_converter": [[289, 5, 1, "", "build"], [289, 5, 1, "", "copy"], [289, 5, 1, "", "display"], [289, 5, 1, "", "export"], [289, 5, 1, "", "format_tag"], [289, 5, 1, "", "import"], [289, 5, 1, "", "init_export"], [289, 5, 1, "", "save"]], "mp.dm_converter_mpc2": [[290, 5, 1, "", "dm_converter_mpc2"], [290, 5, 1, "", "format_tag"], [290, 5, 1, "", "import"], [290, 5, 1, "", "init_export"], [290, 5, 1, "", "save"]], "mp.dm_converter_mpc2_legacy": [[291, 5, 1, "", "legacy_user_mod_inputs"], [291, 5, 1, "", "legacy_user_nln_constraints"]], "mp.dm_element": [[292, 5, 1, "", "ID"], [292, 3, 1, "", "ID2i"], [292, 5, 1, "", "build_params"], [292, 5, 1, "", "copy"], [292, 5, 1, "", "count"], [292, 5, 1, "", "cxn_idx_prop"], [292, 5, 1, "", "cxn_type"], [292, 5, 1, "", "cxn_type_prop"], [292, 5, 1, "", "display"], [292, 5, 1, "", "dm_converter_element"], [292, 5, 1, "", "export_vars"], [292, 5, 1, "", "export_vars_offline_val"], [292, 3, 1, "", "i2on"], [292, 5, 1, "", "init_status"], [292, 5, 1, "", "initialize"], [292, 5, 1, "", "label"], [292, 5, 1, "", "labels"], [292, 5, 1, "", "main_table_var_names"], [292, 3, 1, "", "n"], [292, 5, 1, "", "name"], [292, 3, 1, "", "nr"], [292, 3, 1, "", "off"], [292, 3, 1, "", "on"], [292, 5, 1, "", "pp_data"], [292, 5, 1, "", "pp_data_cnt"], [292, 5, 1, "", "pp_data_det"], [292, 5, 1, "", "pp_data_ext"], [292, 5, 1, "", "pp_data_row_det"], [292, 5, 1, "", "pp_data_sum"], [292, 5, 1, "", "pp_get_footers"], [292, 5, 1, "", "pp_get_footers_det"], [292, 5, 1, "", "pp_get_headers"], [292, 5, 1, "", "pp_get_headers_det"], [292, 5, 1, "", "pp_get_title_det"], [292, 5, 1, "", "pp_have_section"], [292, 5, 1, "", "pp_have_section_cnt"], [292, 5, 1, "", "pp_have_section_det"], [292, 5, 1, "", "pp_have_section_ext"], [292, 5, 1, "", "pp_have_section_sum"], [292, 5, 1, "", "pp_rows"], [292, 5, 1, "", "pretty_print"], [292, 5, 1, "", "rebuild"], [292, 3, 1, "", "tab"], [292, 5, 1, "", "table_exists"], [292, 5, 1, "", "update_status"]], "mp.dmc_element": [[293, 5, 1, "", "data_exists"], [293, 5, 1, "", "data_field"], [293, 5, 1, "", "data_model_element"], [293, 5, 1, "", "data_subs"], [293, 5, 1, "", "default_export_data_nrows"], [293, 5, 1, "", "default_export_data_table"], [293, 5, 1, "", "export"], [293, 5, 1, "", "export_col"], [293, 5, 1, "", "export_table_values"], [293, 5, 1, "", "get_export_size"], [293, 5, 1, "", "get_export_spec"], [293, 5, 1, "", "get_import_size"], [293, 5, 1, "", "get_import_spec"], [293, 5, 1, "", "get_input_table_values"], [293, 5, 1, "", "import"], [293, 5, 1, "", "import_col"], [293, 5, 1, "", "import_table_values"], [293, 5, 1, "", "init_export_data"], [293, 5, 1, "", "name"], [293, 5, 1, "", "table_var_map"]], "mp.dmce_branch_mpc2": [[294, 5, 1, "", "data_field"], [294, 5, 1, "", "default_export_data_table"], [294, 5, 1, "", "name"], [294, 5, 1, "", "table_var_map"]], "mp.dmce_bus3p_mpc2": [[295, 5, 1, "", "bus_status_import"], [295, 5, 1, "", "data_field"], [295, 5, 1, "", "name"], [295, 5, 1, "", "table_var_map"]], "mp.dmce_bus_mpc2": [[296, 5, 1, "", "bus_name_export"], [296, 5, 1, "", "bus_name_import"], [296, 5, 1, "", "bus_status_import"], [296, 5, 1, "", "data_field"], [296, 5, 1, "", "default_export_data_table"], [296, 5, 1, "", "init_export_data"], [296, 5, 1, "", "name"], [296, 5, 1, "", "table_var_map"]], "mp.dmce_buslink_mpc2": [[297, 5, 1, "", "data_field"], [297, 5, 1, "", "name"], [297, 5, 1, "", "table_var_map"]], "mp.dmce_gen3p_mpc2": [[298, 5, 1, "", "data_field"], [298, 5, 1, "", "name"], [298, 5, 1, "", "table_var_map"]], "mp.dmce_gen_mpc2": [[299, 4, 1, "", "cost_table2gencost"], [299, 5, 1, "", "data_field"], [299, 5, 1, "", "default_export_data_table"], [299, 5, 1, "", "gen_cost_export"], [299, 5, 1, "", "gen_cost_import"], [299, 4, 1, "", "gencost2cost_table"], [299, 5, 1, "", "name"], [299, 3, 1, "", "pwl1"], [299, 5, 1, "", "start_cost_export"], [299, 5, 1, "", "start_cost_import"], [299, 5, 1, "", "table_var_map"]], "mp.dmce_legacy_dcline_mpc2": [[300, 5, 1, "", "data_field"], [300, 5, 1, "", "dcline_cost_export"], [300, 5, 1, "", "dcline_cost_import"], [300, 5, 1, "", "default_export_data_table"], [300, 5, 1, "", "name"], [300, 5, 1, "", "table_var_map"]], "mp.dmce_line3p_mpc2": [[301, 5, 1, "", "create_line_construction_table"], [301, 5, 1, "", "data_field"], [301, 5, 1, "", "import"], [301, 5, 1, "", "name"], [301, 5, 1, "", "table_var_map"]], "mp.dmce_load3p_mpc2": [[302, 3, 1, "", "bus"], [302, 5, 1, "", "data_field"], [302, 5, 1, "", "name"], [302, 5, 1, "", "table_var_map"]], "mp.dmce_load_mpc2": [[303, 3, 1, "", "bus"], [303, 5, 1, "", "data_field"], [303, 5, 1, "", "get_export_size"], [303, 5, 1, "", "get_import_size"], [303, 5, 1, "", "name"], [303, 5, 1, "", "scale_factor_fcn"], [303, 5, 1, "", "sys_wide_zip_loads"], [303, 5, 1, "", "table_var_map"]], "mp.dmce_reserve_gen_mpc2": [[304, 5, 1, "", "data_field"], [304, 5, 1, "", "data_subs"], [304, 5, 1, "", "get_export_size"], [304, 5, 1, "", "get_import_size"], [304, 5, 1, "", "import"], [304, 5, 1, "", "import_cost"], [304, 5, 1, "", "import_qty"], [304, 5, 1, "", "import_ramp"], [304, 5, 1, "", "name"], [304, 5, 1, "", "table_var_map"]], "mp.dmce_reserve_zone_mpc2": [[305, 5, 1, "", "data_field"], [305, 5, 1, "", "data_subs"], [305, 5, 1, "", "import_req"], [305, 5, 1, "", "import_zones"], [305, 5, 1, "", "name"], [305, 5, 1, "", "table_var_map"]], "mp.dmce_shunt3p_mpc2": [[306, 5, 1, "", "data_field"], [306, 5, 1, "", "name"], [306, 5, 1, "", "table_var_map"]], "mp.dmce_shunt_mpc2": [[307, 3, 1, "", "bus"], [307, 5, 1, "", "data_field"], [307, 5, 1, "", "get_export_size"], [307, 5, 1, "", "get_import_size"], [307, 5, 1, "", "name"], [307, 5, 1, "", "table_var_map"]], "mp.dmce_xfmr3p_mpc2": [[308, 5, 1, "", "data_field"], [308, 5, 1, "", "name"], [308, 5, 1, "", "table_var_map"]], "mp.dme_branch": [[309, 3, 1, "", "b_fr"], [309, 3, 1, "", "b_to"], [309, 5, 1, "", "build_params"], [309, 5, 1, "", "cxn_idx_prop"], [309, 5, 1, "", "cxn_type"], [309, 5, 1, "", "export_vars"], [309, 5, 1, "", "export_vars_offline_val"], [309, 3, 1, "", "fbus"], [309, 3, 1, "", "g_fr"], [309, 3, 1, "", "g_to"], [309, 5, 1, "", "initialize"], [309, 5, 1, "", "label"], [309, 5, 1, "", "labels"], [309, 3, 1, "", "loss_tol"], [309, 5, 1, "", "main_table_var_names"], [309, 5, 1, "", "name"], [309, 5, 1, "", "pp_data_cnt"], [309, 5, 1, "", "pp_data_row_det"], [309, 5, 1, "", "pp_data_sum"], [309, 5, 1, "", "pp_get_footers_det"], [309, 5, 1, "", "pp_get_headers_det"], [309, 5, 1, "", "pp_have_section_det"], [309, 5, 1, "", "pp_have_section_sum"], [309, 3, 1, "", "r"], [309, 3, 1, "", "rate_a"], [309, 3, 1, "", "ta"], [309, 3, 1, "", "tbus"], [309, 3, 1, "", "tm"], [309, 5, 1, "", "update_status"], [309, 3, 1, "", "x"]], "mp.dme_branch_opf": [[310, 5, 1, "", "export_vars"], [310, 5, 1, "", "export_vars_offline_val"], [310, 5, 1, "", "main_table_var_names"], [310, 5, 1, "", "pp_binding_rows_lim"], [310, 5, 1, "", "pp_data_row_lim"], [310, 5, 1, "", "pp_get_headers_lim"], [310, 5, 1, "", "pp_get_title_lim"], [310, 5, 1, "", "pp_have_section_lim"], [310, 5, 1, "", "pretty_print"]], "mp.dme_bus": [[311, 5, 1, "", "build_params"], [311, 5, 1, "", "export_vars"], [311, 5, 1, "", "export_vars_offline_val"], [311, 5, 1, "", "init_status"], [311, 5, 1, "", "label"], [311, 5, 1, "", "labels"], [311, 5, 1, "", "main_table_var_names"], [311, 5, 1, "", "name"], [311, 5, 1, "", "pp_data_cnt"], [311, 5, 1, "", "pp_data_ext"], [311, 5, 1, "", "pp_data_row_det"], [311, 5, 1, "", "pp_get_headers_det"], [311, 5, 1, "", "pp_have_section_det"], [311, 5, 1, "", "pp_have_section_ext"], [311, 5, 1, "", "set_bus_type_pq"], [311, 5, 1, "", "set_bus_type_pv"], [311, 5, 1, "", "set_bus_type_ref"], [311, 3, 1, "", "type"], [311, 5, 1, "", "update_status"], [311, 3, 1, "", "va_start"], [311, 3, 1, "", "vm_control"], [311, 3, 1, "", "vm_lb"], [311, 3, 1, "", "vm_start"], [311, 3, 1, "", "vm_ub"]], "mp.dme_bus3p": [[312, 5, 1, "", "build_params"], [312, 5, 1, "", "init_status"], [312, 5, 1, "", "label"], [312, 5, 1, "", "labels"], [312, 5, 1, "", "main_table_var_names"], [312, 5, 1, "", "name"], [312, 5, 1, "", "pp_data_row_det"], [312, 5, 1, "", "pp_get_headers_det"], [312, 5, 1, "", "pp_have_section_det"], [312, 3, 1, "", "type"], [312, 5, 1, "", "update_status"], [312, 3, 1, "", "va1_start"], [312, 3, 1, "", "va2_start"], [312, 3, 1, "", "va3_start"], [312, 3, 1, "", "vm1_start"], [312, 3, 1, "", "vm2_start"], [312, 3, 1, "", "vm3_start"], [312, 3, 1, "", "vm_control"]], "mp.dme_bus_opf": [[314, 5, 1, "", "export_vars"], [314, 5, 1, "", "export_vars_offline_val"], [314, 5, 1, "", "main_table_var_names"], [314, 5, 1, "", "pp_binding_rows_lim"], [314, 5, 1, "", "pp_data_ext"], [314, 5, 1, "", "pp_data_row_det"], [314, 5, 1, "", "pp_data_row_lim"], [314, 5, 1, "", "pp_get_headers_det"], [314, 5, 1, "", "pp_get_headers_lim"], [314, 5, 1, "", "pp_have_section_lim"]], "mp.dme_buslink": [[315, 5, 1, "", "build_params"], [315, 3, 1, "", "bus"], [315, 3, 1, "", "bus3p"], [315, 5, 1, "", "cxn_idx_prop"], [315, 5, 1, "", "cxn_type"], [315, 5, 1, "", "initialize"], [315, 5, 1, "", "label"], [315, 5, 1, "", "labels"], [315, 5, 1, "", "main_table_var_names"], [315, 5, 1, "", "name"], [315, 3, 1, "", "pg1_start"], [315, 3, 1, "", "pg2_start"], [315, 3, 1, "", "pg3_start"], [315, 5, 1, "", "pp_data_row_det"], [315, 5, 1, "", "pp_get_headers_det"], [315, 5, 1, "", "pp_have_section_det"], [315, 3, 1, "", "qg1_start"], [315, 3, 1, "", "qg2_start"], [315, 3, 1, "", "qg3_start"], [315, 5, 1, "", "update_status"]], "mp.dme_gen": [[317, 5, 1, "", "apply_vm_setpoint"], [317, 5, 1, "", "build_params"], [317, 3, 1, "", "bus"], [317, 3, 1, "", "bus_on"], [317, 5, 1, "", "cxn_idx_prop"], [317, 5, 1, "", "cxn_type"], [317, 5, 1, "", "export_vars"], [317, 5, 1, "", "export_vars_offline_val"], [317, 5, 1, "", "have_cost"], [317, 5, 1, "", "initialize"], [317, 5, 1, "", "isload"], [317, 5, 1, "", "label"], [317, 5, 1, "", "labels"], [317, 5, 1, "", "main_table_var_names"], [317, 5, 1, "", "name"], [317, 3, 1, "", "pg_lb"], [317, 3, 1, "", "pg_start"], [317, 3, 1, "", "pg_ub"], [317, 5, 1, "", "pp_data_row_det"], [317, 5, 1, "", "pp_data_sum"], [317, 5, 1, "", "pp_get_footers_det"], [317, 5, 1, "", "pp_get_headers_det"], [317, 5, 1, "", "pp_have_section_det"], [317, 5, 1, "", "pp_have_section_sum"], [317, 3, 1, "", "qg_lb"], [317, 3, 1, "", "qg_start"], [317, 3, 1, "", "qg_ub"], [317, 5, 1, "", "update_status"], [317, 5, 1, "", "violated_q_lims"], [317, 3, 1, "", "vm_setpoint"]], "mp.dme_gen3p": [[318, 5, 1, "", "apply_vm_setpoint"], [318, 5, 1, "", "build_params"], [318, 3, 1, "", "bus"], [318, 3, 1, "", "bus_on"], [318, 5, 1, "", "cxn_idx_prop"], [318, 5, 1, "", "cxn_type"], [318, 5, 1, "", "initialize"], [318, 5, 1, "", "label"], [318, 5, 1, "", "labels"], [318, 5, 1, "", "main_table_var_names"], [318, 5, 1, "", "name"], [318, 3, 1, "", "pg1_start"], [318, 3, 1, "", "pg2_start"], [318, 3, 1, "", "pg3_start"], [318, 5, 1, "", "pp_data_row_det"], [318, 5, 1, "", "pp_data_sum"], [318, 5, 1, "", "pp_get_headers_det"], [318, 5, 1, "", "pp_have_section_det"], [318, 5, 1, "", "pp_have_section_sum"], [318, 3, 1, "", "qg1_start"], [318, 3, 1, "", "qg2_start"], [318, 3, 1, "", "qg3_start"], [318, 5, 1, "", "update_status"], [318, 3, 1, "", "vm1_setpoint"], [318, 3, 1, "", "vm2_setpoint"], [318, 3, 1, "", "vm3_setpoint"]], "mp.dme_gen_opf": [[320, 5, 1, "", "build_cost_params"], [320, 5, 1, "", "export_vars"], [320, 5, 1, "", "export_vars_offline_val"], [320, 5, 1, "", "have_cost"], [320, 5, 1, "", "main_table_var_names"], [320, 5, 1, "", "max_pwl_gencost"], [320, 5, 1, "", "pp_binding_rows_lim"], [320, 5, 1, "", "pp_data_row_lim"], [320, 5, 1, "", "pp_get_headers_lim"], [320, 5, 1, "", "pp_have_section_lim"], [320, 5, 1, "", "pretty_print"]], "mp.dme_legacy_dcline": [[321, 5, 1, "", "apply_vm_setpoints"], [321, 5, 1, "", "build_params"], [321, 5, 1, "", "cxn_idx_prop"], [321, 5, 1, "", "cxn_type"], [321, 5, 1, "", "export_vars"], [321, 5, 1, "", "export_vars_offline_val"], [321, 3, 1, "", "fbus"], [321, 3, 1, "", "fbus_on"], [321, 5, 1, "", "have_cost"], [321, 5, 1, "", "initialize"], [321, 5, 1, "", "label"], [321, 5, 1, "", "labels"], [321, 3, 1, "", "loss0"], [321, 3, 1, "", "loss1"], [321, 5, 1, "", "main_table_var_names"], [321, 5, 1, "", "name"], [321, 3, 1, "", "p_fr_lb"], [321, 3, 1, "", "p_fr_start"], [321, 3, 1, "", "p_fr_ub"], [321, 3, 1, "", "p_to_start"], [321, 5, 1, "", "pp_data_row_det"], [321, 5, 1, "", "pp_data_sum"], [321, 5, 1, "", "pp_get_headers_det"], [321, 5, 1, "", "pp_have_section_det"], [321, 5, 1, "", "pp_have_section_sum"], [321, 3, 1, "", "q_fr_lb"], [321, 3, 1, "", "q_fr_start"], [321, 3, 1, "", "q_fr_ub"], [321, 3, 1, "", "q_to_lb"], [321, 3, 1, "", "q_to_start"], [321, 3, 1, "", "q_to_ub"], [321, 3, 1, "", "tbus"], [321, 3, 1, "", "tbus_on"], [321, 5, 1, "", "update_status"], [321, 3, 1, "", "vm_setpoint_fr"], [321, 3, 1, "", "vm_setpoint_to"]], "mp.dme_legacy_dcline_opf": [[322, 5, 1, "", "build_cost_params"], [322, 5, 1, "", "export_vars"], [322, 5, 1, "", "export_vars_offline_val"], [322, 5, 1, "", "have_cost"], [322, 5, 1, "", "main_table_var_names"], [322, 5, 1, "", "pp_binding_rows_lim"], [322, 5, 1, "", "pp_data_row_lim"], [322, 5, 1, "", "pp_get_headers_lim"], [322, 5, 1, "", "pp_have_section_lim"], [322, 5, 1, "", "pretty_print"]], "mp.dme_line3p": [[323, 5, 1, "", "build_params"], [323, 5, 1, "", "create_line_construction_table"], [323, 5, 1, "", "cxn_idx_prop"], [323, 5, 1, "", "cxn_type"], [323, 3, 1, "", "fbus"], [323, 3, 1, "", "freq"], [323, 5, 1, "", "initialize"], [323, 5, 1, "", "label"], [323, 5, 1, "", "labels"], [323, 3, 1, "", "lc"], [323, 3, 1, "", "lc_tab"], [323, 5, 1, "", "lc_table_var_names"], [323, 3, 1, "", "lc_y_idx"], [323, 3, 1, "", "len"], [323, 5, 1, "", "main_table_var_names"], [323, 5, 1, "", "name"], [323, 5, 1, "", "pp_data_row_det"], [323, 5, 1, "", "pp_data_sum"], [323, 5, 1, "", "pp_get_headers_det"], [323, 5, 1, "", "pp_have_section_det"], [323, 5, 1, "", "pp_have_section_sum"], [323, 5, 1, "", "pretty_print"], [323, 5, 1, "", "symmat2vec"], [323, 3, 1, "", "tbus"], [323, 5, 1, "", "update_status"], [323, 5, 1, "", "vec2symmat"], [323, 3, 1, "", "yc"], [323, 3, 1, "", "ys"]], "mp.dme_load": [[325, 5, 1, "", "build_params"], [325, 3, 1, "", "bus"], [325, 5, 1, "", "cxn_idx_prop"], [325, 5, 1, "", "cxn_type"], [325, 5, 1, "", "initialize"], [325, 5, 1, "", "label"], [325, 5, 1, "", "labels"], [325, 5, 1, "", "main_table_var_names"], [325, 5, 1, "", "name"], [325, 3, 1, "", "pd"], [325, 3, 1, "", "pd_i"], [325, 3, 1, "", "pd_z"], [325, 5, 1, "", "pp_data_row_det"], [325, 5, 1, "", "pp_data_sum"], [325, 5, 1, "", "pp_get_footers_det"], [325, 5, 1, "", "pp_get_headers_det"], [325, 5, 1, "", "pp_have_section_det"], [325, 5, 1, "", "pp_have_section_sum"], [325, 3, 1, "", "qd"], [325, 3, 1, "", "qd_i"], [325, 3, 1, "", "qd_z"], [325, 5, 1, "", "update_status"]], "mp.dme_load3p": [[326, 5, 1, "", "build_params"], [326, 3, 1, "", "bus"], [326, 5, 1, "", "cxn_idx_prop"], [326, 5, 1, "", "cxn_type"], [326, 5, 1, "", "initialize"], [326, 5, 1, "", "label"], [326, 5, 1, "", "labels"], [326, 5, 1, "", "main_table_var_names"], [326, 5, 1, "", "name"], [326, 3, 1, "", "pd1"], [326, 3, 1, "", "pd2"], [326, 3, 1, "", "pd3"], [326, 3, 1, "", "pf1"], [326, 3, 1, "", "pf2"], [326, 3, 1, "", "pf3"], [326, 5, 1, "", "pp_data_row_det"], [326, 5, 1, "", "pp_data_sum"], [326, 5, 1, "", "pp_get_headers_det"], [326, 5, 1, "", "pp_have_section_det"], [326, 5, 1, "", "pp_have_section_sum"], [326, 5, 1, "", "update_status"]], "mp.dme_load_cpf": [[328, 5, 1, "", "export_vars"], [328, 5, 1, "", "parameterized"]], "mp.dme_reserve_gen": [[330, 5, 1, "", "build_params"], [330, 5, 1, "", "export_vars"], [330, 5, 1, "", "export_vars_offline_val"], [330, 3, 1, "", "gen"], [330, 5, 1, "", "label"], [330, 5, 1, "", "labels"], [330, 5, 1, "", "main_table_var_names"], [330, 5, 1, "", "name"], [330, 5, 1, "", "pp_binding_rows_lim"], [330, 5, 1, "", "pp_data_row_det"], [330, 5, 1, "", "pp_data_row_lim"], [330, 5, 1, "", "pp_data_sum"], [330, 5, 1, "", "pp_get_footers_det"], [330, 5, 1, "", "pp_get_headers_det"], [330, 5, 1, "", "pp_get_headers_lim"], [330, 5, 1, "", "pp_have_section_det"], [330, 5, 1, "", "pp_have_section_lim"], [330, 5, 1, "", "pp_have_section_sum"], [330, 3, 1, "", "r_ub"], [330, 5, 1, "", "update_status"]], "mp.dme_reserve_zone": [[331, 5, 1, "", "build_params"], [331, 5, 1, "", "export_vars"], [331, 5, 1, "", "export_vars_offline_val"], [331, 5, 1, "", "label"], [331, 5, 1, "", "labels"], [331, 5, 1, "", "main_table_var_names"], [331, 5, 1, "", "name"], [331, 5, 1, "", "pp_data_row_det"], [331, 5, 1, "", "pp_get_headers_det"], [331, 5, 1, "", "pp_have_section_det"], [331, 3, 1, "", "req"], [331, 5, 1, "", "update_status"], [331, 3, 1, "", "zones"]], "mp.dme_shared_opf": [[332, 3, 1, "", "ctol"], [332, 5, 1, "", "pp_binding_rows_lim"], [332, 5, 1, "", "pp_data_lim"], [332, 5, 1, "", "pp_data_other"], [332, 5, 1, "", "pp_data_row_lim"], [332, 5, 1, "", "pp_get_footers_lim"], [332, 5, 1, "", "pp_get_footers_other"], [332, 5, 1, "", "pp_get_headers_lim"], [332, 5, 1, "", "pp_get_headers_other"], [332, 5, 1, "", "pp_get_title_lim"], [332, 5, 1, "", "pp_have_section_lim"], [332, 5, 1, "", "pp_have_section_other"], [332, 5, 1, "", "pp_rows_lim"], [332, 5, 1, "", "pp_rows_other"], [332, 5, 1, "", "pp_set_tols_lim"], [332, 3, 1, "", "ptol"]], "mp.dme_shunt": [[333, 3, 1, "", "bs"], [333, 5, 1, "", "build_params"], [333, 3, 1, "", "bus"], [333, 5, 1, "", "cxn_idx_prop"], [333, 5, 1, "", "cxn_type"], [333, 3, 1, "", "gs"], [333, 5, 1, "", "initialize"], [333, 5, 1, "", "label"], [333, 5, 1, "", "labels"], [333, 5, 1, "", "main_table_var_names"], [333, 5, 1, "", "name"], [333, 5, 1, "", "pp_data_row_det"], [333, 5, 1, "", "pp_data_sum"], [333, 5, 1, "", "pp_get_footers_det"], [333, 5, 1, "", "pp_get_headers_det"], [333, 5, 1, "", "pp_have_section_det"], [333, 5, 1, "", "pp_have_section_sum"], [333, 5, 1, "", "update_status"]], "mp.dme_shunt3p": [[334, 3, 1, "", "bs1"], [334, 3, 1, "", "bs2"], [334, 3, 1, "", "bs3"], [334, 5, 1, "", "build_params"], [334, 3, 1, "", "bus"], [334, 5, 1, "", "cxn_idx_prop"], [334, 5, 1, "", "cxn_type"], [334, 3, 1, "", "gs1"], [334, 3, 1, "", "gs2"], [334, 3, 1, "", "gs3"], [334, 5, 1, "", "initialize"], [334, 5, 1, "", "label"], [334, 5, 1, "", "labels"], [334, 5, 1, "", "main_table_var_names"], [334, 5, 1, "", "name"], [334, 5, 1, "", "pp_data_row_det"], [334, 5, 1, "", "pp_data_sum"], [334, 5, 1, "", "pp_get_headers_det"], [334, 5, 1, "", "pp_have_section_det"], [334, 5, 1, "", "pp_have_section_sum"], [334, 5, 1, "", "update_status"]], "mp.dme_shunt_cpf": [[336, 5, 1, "", "export_vars"], [336, 5, 1, "", "parameterized"]], "mp.dme_xfmr3p": [[338, 5, 1, "", "build_params"], [338, 5, 1, "", "cxn_idx_prop"], [338, 5, 1, "", "cxn_type"], [338, 3, 1, "", "fbus"], [338, 5, 1, "", "initialize"], [338, 5, 1, "", "label"], [338, 5, 1, "", "labels"], [338, 5, 1, "", "main_table_var_names"], [338, 5, 1, "", "name"], [338, 5, 1, "", "pp_data_row_det"], [338, 5, 1, "", "pp_data_sum"], [338, 5, 1, "", "pp_get_headers_det"], [338, 5, 1, "", "pp_have_section_det"], [338, 5, 1, "", "pp_have_section_sum"], [338, 5, 1, "", "pretty_print"], [338, 3, 1, "", "r"], [338, 3, 1, "", "tbus"], [338, 3, 1, "", "tm"], [338, 5, 1, "", "update_status"], [338, 3, 1, "", "x"]], "mp.element_container": [[340, 3, 1, "", "element_classes"], [340, 3, 1, "", "elements"], [340, 5, 1, "", "modify_element_classes"]], "mp.extension": [[341, 5, 1, "", "data_model_class"], [341, 5, 1, "", "dm_converter_class"], [341, 5, 1, "", "dm_element_classes"], [341, 5, 1, "", "dmc_element_classes"], [341, 5, 1, "", "math_model_class"], [341, 5, 1, "", "mm_element_classes"], [341, 5, 1, "", "network_model_class"], [341, 5, 1, "", "nm_element_classes"], [341, 5, 1, "", "task_class"]], "mp.form": [[342, 5, 1, "", "find_form_class"], [342, 5, 1, "", "form_name"], [342, 5, 1, "", "form_tag"], [342, 5, 1, "", "get_params"], [342, 5, 1, "", "model_params"], [342, 5, 1, "", "model_vvars"], [342, 5, 1, "", "model_zvars"]], "mp.form_ac": [[343, 3, 1, "", "L"], [343, 3, 1, "", "M"], [343, 3, 1, "", "N"], [343, 3, 1, "", "Y"], [343, 5, 1, "", "aux_data_va_vm"], [343, 3, 1, "", "i"], [343, 3, 1, "", "inln"], [343, 3, 1, "", "inln_hess"], [343, 5, 1, "", "model_params"], [343, 5, 1, "", "model_zvars"], [343, 3, 1, "", "param_ncols"], [343, 5, 1, "", "port_active_power2_lim_fcn"], [343, 5, 1, "", "port_active_power2_lim_hess"], [343, 5, 1, "", "port_active_power_lim_fcn"], [343, 5, 1, "", "port_active_power_lim_hess"], [343, 5, 1, "", "port_apparent_power_lim_fcn"], [343, 5, 1, "", "port_apparent_power_lim_hess"], [343, 5, 1, "", "port_current_lim_fcn"], [343, 5, 1, "", "port_current_lim_hess"], [343, 5, 1, "", "port_inj_current"], [343, 5, 1, "", "port_inj_current_hess"], [343, 5, 1, "", "port_inj_current_hess_v"], [343, 5, 1, "", "port_inj_current_hess_vz"], [343, 5, 1, "", "port_inj_current_jac"], [343, 5, 1, "", "port_inj_power"], [343, 5, 1, "", "port_inj_power_hess"], [343, 5, 1, "", "port_inj_power_hess_v"], [343, 5, 1, "", "port_inj_power_hess_vz"], [343, 5, 1, "", "port_inj_power_jac"], [343, 3, 1, "", "s"], [343, 3, 1, "", "snln"], [343, 3, 1, "", "snln_hess"]], "mp.form_acc": [[344, 5, 1, "", "aux_data_va_vm"], [344, 5, 1, "", "form_name"], [344, 5, 1, "", "form_tag"], [344, 5, 1, "", "model_vvars"], [344, 5, 1, "", "port_inj_current_hess_v"], [344, 5, 1, "", "port_inj_current_hess_vz"], [344, 5, 1, "", "port_inj_current_jac"], [344, 5, 1, "", "port_inj_power_hess_v"], [344, 5, 1, "", "port_inj_power_hess_vz"], [344, 5, 1, "", "port_inj_power_jac"], [344, 5, 1, "", "va_fcn"], [344, 5, 1, "", "va_hess"], [344, 5, 1, "", "vm2_fcn"], [344, 5, 1, "", "vm2_hess"]], "mp.form_acp": [[345, 5, 1, "", "aux_data_va_vm"], [345, 5, 1, "", "form_name"], [345, 5, 1, "", "form_tag"], [345, 5, 1, "", "model_vvars"], [345, 5, 1, "", "port_inj_current_hess_v"], [345, 5, 1, "", "port_inj_current_hess_vz"], [345, 5, 1, "", "port_inj_current_jac"], [345, 5, 1, "", "port_inj_power_hess_v"], [345, 5, 1, "", "port_inj_power_hess_vz"], [345, 5, 1, "", "port_inj_power_jac"]], "mp.form_dc": [[346, 3, 1, "", "B"], [346, 3, 1, "", "K"], [346, 5, 1, "", "form_name"], [346, 5, 1, "", "form_tag"], [346, 5, 1, "", "model_params"], [346, 5, 1, "", "model_vvars"], [346, 5, 1, "", "model_zvars"], [346, 3, 1, "", "p"], [346, 3, 1, "", "param_ncols"], [346, 5, 1, "", "port_inj_power"]], "mp.mapped_array": [[347, 5, 1, "", "add_elements"], [347, 5, 1, "", "add_names"], [347, 5, 1, "", "copy"], [347, 5, 1, "", "delete_elements"], [347, 5, 1, "", "display"], [347, 5, 1, "", "has_name"], [347, 5, 1, "", "length"], [347, 5, 1, "", "mapped_array"], [347, 5, 1, "", "name2idx"], [347, 5, 1, "", "size"], [347, 5, 1, "", "subsasgn"], [347, 5, 1, "", "subsref"]], "mp.math_model": [[348, 5, 1, "", "add_aux_data"], [348, 5, 1, "", "add_constraints"], [348, 5, 1, "", "add_costs"], [348, 5, 1, "", "add_node_balance_constraints"], [348, 5, 1, "", "add_system_constraints"], [348, 5, 1, "", "add_system_costs"], [348, 5, 1, "", "add_system_vars"], [348, 5, 1, "", "add_vars"], [348, 3, 1, "", "aux_data"], [348, 5, 1, "", "build"], [348, 5, 1, "", "build_base_aux_data"], [348, 5, 1, "", "data_model_update"], [348, 5, 1, "", "display"], [348, 5, 1, "", "form_name"], [348, 5, 1, "", "form_tag"], [348, 5, 1, "", "network_model_x_soln"], [348, 5, 1, "", "solve_opts"], [348, 5, 1, "", "task_name"], [348, 5, 1, "", "task_tag"], [348, 5, 1, "", "update_nm_vars"]], "mp.math_model_cpf_acc": [[349, 5, 1, "", "math_model_cpf_acc"]], "mp.math_model_cpf_acci": [[350, 5, 1, "", "add_node_balance_constraints"], [350, 5, 1, "", "form_name"], [350, 5, 1, "", "form_tag"]], "mp.math_model_cpf_accs": [[351, 5, 1, "", "add_node_balance_constraints"], [351, 5, 1, "", "form_name"], [351, 5, 1, "", "form_tag"]], "mp.math_model_cpf_acp": [[352, 5, 1, "", "callback_vlim"], [352, 5, 1, "", "event_vlim"], [352, 5, 1, "", "math_model_cpf_acp"]], "mp.math_model_cpf_acpi": [[353, 5, 1, "", "add_node_balance_constraints"], [353, 5, 1, "", "form_name"], [353, 5, 1, "", "form_tag"]], "mp.math_model_cpf_acps": [[354, 5, 1, "", "add_node_balance_constraints"], [354, 5, 1, "", "expand_z_warmstart"], [354, 5, 1, "", "form_name"], [354, 5, 1, "", "form_tag"], [354, 5, 1, "", "solve_opts_warmstart"]], "mp.math_model_opf": [[355, 5, 1, "", "add_system_vars"], [355, 5, 1, "", "build_aux_data"], [355, 5, 1, "", "interior_va"], [355, 5, 1, "", "interior_x0"], [355, 5, 1, "", "task_name"], [355, 5, 1, "", "task_tag"]], "mp.math_model_opf_ac": [[356, 5, 1, "", "nodal_current_balance_fcn"], [356, 5, 1, "", "nodal_current_balance_hess"], [356, 5, 1, "", "nodal_power_balance_fcn"], [356, 5, 1, "", "nodal_power_balance_hess"], [356, 5, 1, "", "solve_opts"]], "mp.math_model_opf_acc": [[357, 5, 1, "", "convert_x_m2n"], [357, 5, 1, "", "interior_va"], [357, 5, 1, "", "math_model_opf_acc"]], "mp.math_model_opf_acci": [[358, 5, 1, "", "add_node_balance_constraints"], [358, 5, 1, "", "form_name"], [358, 5, 1, "", "form_tag"], [358, 5, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acci_legacy": [[359, 5, 1, "", "add_named_set"], [359, 5, 1, "", "add_system_constraints"], [359, 5, 1, "", "add_system_costs"], [359, 5, 1, "", "add_vars"], [359, 5, 1, "", "build"], [359, 5, 1, "", "def_set_types"], [359, 5, 1, "", "init_set_types"], [359, 5, 1, "", "legacy_user_var_names"], [359, 5, 1, "", "math_model_opf_acci_legacy"]], "mp.math_model_opf_accs": [[360, 5, 1, "", "add_node_balance_constraints"], [360, 5, 1, "", "form_name"], [360, 5, 1, "", "form_tag"], [360, 5, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_accs_legacy": [[361, 5, 1, "", "add_named_set"], [361, 5, 1, "", "add_system_constraints"], [361, 5, 1, "", "add_system_costs"], [361, 5, 1, "", "add_vars"], [361, 5, 1, "", "build"], [361, 5, 1, "", "def_set_types"], [361, 5, 1, "", "init_set_types"], [361, 5, 1, "", "legacy_user_var_names"], [361, 5, 1, "", "math_model_opf_accs_legacy"]], "mp.math_model_opf_acp": [[362, 5, 1, "", "convert_x_m2n"], [362, 5, 1, "", "math_model_opf_acp"]], "mp.math_model_opf_acpi": [[363, 5, 1, "", "add_node_balance_constraints"], [363, 5, 1, "", "form_name"], [363, 5, 1, "", "form_tag"], [363, 5, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acpi_legacy": [[364, 5, 1, "", "add_named_set"], [364, 5, 1, "", "add_system_constraints"], [364, 5, 1, "", "add_system_costs"], [364, 5, 1, "", "add_vars"], [364, 5, 1, "", "build"], [364, 5, 1, "", "def_set_types"], [364, 5, 1, "", "init_set_types"], [364, 5, 1, "", "legacy_user_var_names"], [364, 5, 1, "", "math_model_opf_acpi_legacy"]], "mp.math_model_opf_acps": [[365, 5, 1, "", "add_node_balance_constraints"], [365, 5, 1, "", "form_name"], [365, 5, 1, "", "form_tag"], [365, 5, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acps_legacy": [[366, 5, 1, "", "add_named_set"], [366, 5, 1, "", "add_system_constraints"], [366, 5, 1, "", "add_system_costs"], [366, 5, 1, "", "add_vars"], [366, 5, 1, "", "build"], [366, 5, 1, "", "def_set_types"], [366, 5, 1, "", "init_set_types"], [366, 5, 1, "", "legacy_user_var_names"], [366, 5, 1, "", "math_model_opf_acps_legacy"]], "mp.math_model_opf_dc": [[367, 5, 1, "", "add_node_balance_constraints"], [367, 5, 1, "", "convert_x_m2n"], [367, 5, 1, "", "form_name"], [367, 5, 1, "", "form_tag"], [367, 5, 1, "", "math_model_opf_dc"], [367, 5, 1, "", "solve_opts"]], "mp.math_model_opf_dc_legacy": [[368, 5, 1, "", "add_named_set"], [368, 5, 1, "", "add_system_constraints"], [368, 5, 1, "", "add_system_costs"], [368, 5, 1, "", "add_vars"], [368, 5, 1, "", "build"], [368, 5, 1, "", "def_set_types"], [368, 5, 1, "", "init_set_types"], [368, 5, 1, "", "legacy_user_var_names"], [368, 5, 1, "", "math_model_opf_dc_legacy"]], "mp.math_model_pf": [[369, 5, 1, "", "add_costs"], [369, 5, 1, "", "add_system_vars"], [369, 5, 1, "", "solve_opts"], [369, 5, 1, "", "task_name"], [369, 5, 1, "", "task_tag"]], "mp.math_model_pf_ac": [[370, 5, 1, "", "math_model_pf_ac"]], "mp.math_model_pf_acci": [[371, 5, 1, "", "add_node_balance_constraints"], [371, 5, 1, "", "form_name"], [371, 5, 1, "", "form_tag"]], "mp.math_model_pf_accs": [[372, 5, 1, "", "add_node_balance_constraints"], [372, 5, 1, "", "form_name"], [372, 5, 1, "", "form_tag"]], "mp.math_model_pf_acpi": [[373, 5, 1, "", "add_node_balance_constraints"], [373, 5, 1, "", "form_name"], [373, 5, 1, "", "form_tag"]], "mp.math_model_pf_acps": [[374, 5, 1, "", "add_node_balance_constraints"], [374, 5, 1, "", "fd_jac_approx"], [374, 5, 1, "", "fdpf_B_matrix_models"], [374, 5, 1, "", "form_name"], [374, 5, 1, "", "form_tag"], [374, 5, 1, "", "gs_x_update"], [374, 5, 1, "", "zg_x_update"]], "mp.math_model_pf_dc": [[375, 5, 1, "", "add_node_balance_constraints"], [375, 5, 1, "", "form_name"], [375, 5, 1, "", "form_tag"], [375, 5, 1, "", "math_model_pf_dc"], [375, 5, 1, "", "solve_opts"]], "mp.mm_element": [[376, 5, 1, "", "add_constraints"], [376, 5, 1, "", "add_costs"], [376, 5, 1, "", "add_vars"], [376, 5, 1, "", "data_model_element"], [376, 5, 1, "", "data_model_update"], [376, 5, 1, "", "data_model_update_off"], [376, 5, 1, "", "data_model_update_on"], [376, 5, 1, "", "name"], [376, 5, 1, "", "network_model_element"]], "mp.mm_shared_opf_legacy": [[377, 5, 1, "", "add_legacy_cost"], [377, 5, 1, "", "add_legacy_user_constraints"], [377, 5, 1, "", "add_legacy_user_constraints_ac"], [377, 5, 1, "", "add_legacy_user_costs"], [377, 5, 1, "", "add_legacy_user_vars"], [377, 5, 1, "", "build_legacy"], [377, 5, 1, "", "eval_legacy_cost"], [377, 5, 1, "", "get_mpc"], [377, 5, 1, "", "init_set_types_legacy"], [377, 5, 1, "", "mod_set_types_legacy"], [377, 5, 1, "", "params_legacy_cost"]], "mp.mm_shared_pfcpf": [[378, 5, 1, "", "build_aux_data"]], "mp.mm_shared_pfcpf_ac": [[379, 5, 1, "", "add_system_varset_pf"], [379, 5, 1, "", "update_z"]], "mp.mm_shared_pfcpf_ac_i": [[380, 5, 1, "", "build_aux_data_i"]], "mp.mm_shared_pfcpf_acc": [[381, 5, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acci": [[382, 5, 1, "", "add_system_vars_pf"], [382, 5, 1, "", "build_aux_data"], [382, 5, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_accs": [[383, 5, 1, "", "add_system_vars_pf"], [383, 5, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acp": [[384, 5, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acpi": [[385, 5, 1, "", "add_system_vars_pf"], [385, 5, 1, "", "build_aux_data"], [385, 5, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acps": [[386, 5, 1, "", "add_system_vars_pf"], [386, 5, 1, "", "build_aux_data"], [386, 5, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_dc": [[387, 5, 1, "", "add_system_vars_pf"], [387, 5, 1, "", "build_aux_data"], [387, 5, 1, "", "convert_x_m2n"], [387, 5, 1, "", "update_z"]], "mp.mme_branch": [[388, 5, 1, "", "name"]], "mp.mme_branch_opf": [[389, 5, 1, "", "ang_diff_params"], [389, 5, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_ac": [[390, 5, 1, "", "add_constraints"], [390, 5, 1, "", "data_model_update_on"]], "mp.mme_branch_opf_acc": [[391, 5, 1, "", "add_constraints"], [391, 5, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_acp": [[392, 5, 1, "", "add_constraints"]], "mp.mme_branch_opf_dc": [[393, 5, 1, "", "add_constraints"], [393, 5, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_ac": [[394, 5, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_dc": [[395, 5, 1, "", "data_model_update_on"]], "mp.mme_bus": [[396, 5, 1, "", "name"]], "mp.mme_bus3p": [[397, 5, 1, "", "data_model_update_on"], [397, 5, 1, "", "name"]], "mp.mme_bus3p_opf_acc": [[398, 5, 1, "", "interior_x0"]], "mp.mme_bus3p_opf_acp": [[399, 5, 1, "", "interior_x0"]], "mp.mme_bus_opf_ac": [[400, 5, 1, "", "interior_vm"]], "mp.mme_bus_opf_acc": [[401, 5, 1, "", "add_constraints"], [401, 5, 1, "", "data_model_update_on"], [401, 5, 1, "", "interior_x0"]], "mp.mme_bus_opf_acp": [[402, 5, 1, "", "data_model_update_on"], [402, 5, 1, "", "interior_x0"]], "mp.mme_bus_opf_dc": [[403, 5, 1, "", "data_model_update_on"], [403, 5, 1, "", "interior_x0"]], "mp.mme_bus_pf_ac": [[404, 5, 1, "", "data_model_update_on"]], "mp.mme_bus_pf_dc": [[405, 5, 1, "", "data_model_update_on"]], "mp.mme_buslink": [[406, 5, 1, "", "name"]], "mp.mme_buslink_opf": [[407, 5, 1, "", "interior_x0"]], "mp.mme_buslink_opf_acc": [[408, 5, 1, "", "add_constraints"], [408, 5, 1, "", "va_fcn"], [408, 5, 1, "", "va_hess"], [408, 5, 1, "", "vm2_fcn"], [408, 5, 1, "", "vm2_hess"]], "mp.mme_buslink_opf_acp": [[409, 5, 1, "", "add_constraints"]], "mp.mme_buslink_pf_ac": [[410, 5, 1, "", "add_constraints"], [410, 5, 1, "", "add_vars"], [410, 5, 1, "", "voltage_constraints"]], "mp.mme_buslink_pf_acc": [[411, 5, 1, "", "add_constraints"], [411, 5, 1, "", "pf_va_fcn"], [411, 5, 1, "", "pf_vm_fcn"]], "mp.mme_buslink_pf_acp": [[412, 5, 1, "", "add_constraints"]], "mp.mme_gen": [[413, 5, 1, "", "name"]], "mp.mme_gen3p": [[414, 5, 1, "", "data_model_update_on"], [414, 5, 1, "", "name"]], "mp.mme_gen3p_opf": [[415, 5, 1, "", "interior_x0"]], "mp.mme_gen_opf": [[416, 5, 1, "", "add_costs"], [416, 5, 1, "", "add_vars"], [416, 3, 1, "", "cost"], [416, 5, 1, "", "interior_x0"]], "mp.mme_gen_opf_ac": [[417, 5, 1, "", "add_constraints"], [417, 5, 1, "", "add_costs"], [417, 5, 1, "", "build_cost_params"], [417, 5, 1, "", "data_model_update_on"], [417, 5, 1, "", "disp_load_constant_pf_constraint"], [417, 5, 1, "", "has_pq_cap"], [417, 5, 1, "", "pq_capability_constraint"]], "mp.mme_gen_opf_ac_oval": [[418, 5, 1, "", "add_constraints"], [418, 5, 1, "", "oval_pq_capability_fcn"], [418, 5, 1, "", "oval_pq_capability_hess"]], "mp.mme_gen_opf_dc": [[419, 5, 1, "", "add_constraints"], [419, 5, 1, "", "build_cost_params"], [419, 5, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_ac": [[420, 5, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_dc": [[421, 5, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline": [[422, 5, 1, "", "name"]], "mp.mme_legacy_dcline_opf": [[423, 5, 1, "", "add_constraints"], [423, 5, 1, "", "add_costs"], [423, 5, 1, "", "add_vars"], [423, 5, 1, "", "build_cost_params"], [423, 3, 1, "", "cost"], [423, 5, 1, "", "interior_x0"]], "mp.mme_legacy_dcline_opf_ac": [[424, 5, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_opf_dc": [[425, 5, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_ac": [[426, 5, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_dc": [[427, 5, 1, "", "data_model_update_on"]], "mp.mme_line3p": [[428, 5, 1, "", "data_model_update_on"], [428, 5, 1, "", "name"]], "mp.mme_line3p_opf": [[429, 5, 1, "", "interior_x0"]], "mp.mme_load": [[430, 5, 1, "", "name"]], "mp.mme_load_cpf": [[431, 5, 1, "", "data_model_update_on"]], "mp.mme_load_pf_ac": [[432, 5, 1, "", "data_model_update_on"]], "mp.mme_load_pf_dc": [[433, 5, 1, "", "data_model_update_on"]], "mp.mme_reserve_gen": [[434, 5, 1, "", "add_constraints"], [434, 5, 1, "", "add_costs"], [434, 5, 1, "", "add_vars"], [434, 5, 1, "", "data_model_update_on"], [434, 5, 1, "", "name"]], "mp.mme_reserve_zone": [[435, 5, 1, "", "add_constraints"], [435, 5, 1, "", "data_model_update_on"], [435, 5, 1, "", "name"]], "mp.mme_shunt": [[436, 5, 1, "", "name"]], "mp.mme_shunt3p": [[437, 5, 1, "", "data_model_update_on"], [437, 5, 1, "", "name"]], "mp.mme_shunt3p_opf": [[438, 5, 1, "", "interior_x0"]], "mp.mme_shunt_cpf": [[439, 5, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_ac": [[440, 5, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_dc": [[441, 5, 1, "", "data_model_update_on"]], "mp.mme_xfmr3p": [[442, 5, 1, "", "data_model_update_on"], [442, 5, 1, "", "name"]], "mp.mme_xfmr3p_opf": [[443, 5, 1, "", "interior_x0"]], "mp.net_model": [[444, 5, 1, "", "add_node"], [444, 5, 1, "", "add_nodes"], [444, 5, 1, "", "add_port"], [444, 5, 1, "", "add_state"], [444, 5, 1, "", "add_states"], [444, 5, 1, "", "add_var"], [444, 5, 1, "", "add_vvars"], [444, 5, 1, "", "add_zvars"], [444, 5, 1, "", "build"], [444, 5, 1, "", "build_params"], [444, 5, 1, "", "def_set_types"], [444, 5, 1, "", "display"], [444, 5, 1, "", "ensure_ref_node"], [444, 5, 1, "", "get_node_idx"], [444, 5, 1, "", "get_port_idx"], [444, 5, 1, "", "get_state_idx"], [444, 5, 1, "", "init_set_types"], [444, 5, 1, "", "name"], [444, 3, 1, "", "node"], [444, 5, 1, "", "node_types"], [444, 5, 1, "", "np"], [444, 3, 1, "", "nv"], [444, 5, 1, "", "nz"], [444, 5, 1, "", "params_var"], [444, 3, 1, "", "port"], [444, 5, 1, "", "set_node_type_pq"], [444, 5, 1, "", "set_node_type_pv"], [444, 5, 1, "", "set_node_type_ref"], [444, 5, 1, "", "set_type_idx_map"], [444, 5, 1, "", "set_type_label"], [444, 5, 1, "", "stack_matrix_params"], [444, 5, 1, "", "stack_vector_params"], [444, 3, 1, "", "state"], [444, 3, 1, "", "the_np"], [444, 3, 1, "", "the_nz"]], "mp.net_model_ac": [[445, 5, 1, "", "build_params"], [445, 5, 1, "", "def_set_types"], [445, 5, 1, "", "get_va"], [445, 5, 1, "", "nodal_complex_current_balance"], [445, 5, 1, "", "nodal_complex_current_balance_hess"], [445, 5, 1, "", "nodal_complex_power_balance"], [445, 5, 1, "", "nodal_complex_power_balance_hess"], [445, 5, 1, "", "port_inj_nln"], [445, 5, 1, "", "port_inj_nln_hess"], [445, 5, 1, "", "port_inj_soln"]], "mp.net_model_acc": [[446, 5, 1, "", "def_set_types"], [446, 5, 1, "", "initial_voltage_angle"], [446, 5, 1, "", "net_model_acc"]], "mp.net_model_acp": [[447, 5, 1, "", "def_set_types"], [447, 5, 1, "", "initial_voltage_angle"], [447, 5, 1, "", "net_model_acp"]], "mp.net_model_dc": [[448, 5, 1, "", "build_params"], [448, 5, 1, "", "def_set_types"], [448, 5, 1, "", "net_model_dc"], [448, 5, 1, "", "port_inj_soln"], [448, 3, 1, "", "va"], [448, 3, 1, "", "z"]], "mp.nm_element": [[449, 3, 1, "", "C"], [449, 3, 1, "", "D"], [449, 5, 1, "", "add_nodes"], [449, 5, 1, "", "add_states"], [449, 5, 1, "", "add_vvars"], [449, 5, 1, "", "add_zvars"], [449, 5, 1, "", "build_params"], [449, 5, 1, "", "count"], [449, 5, 1, "", "data_model_element"], [449, 5, 1, "", "display"], [449, 5, 1, "", "get_nv_"], [449, 5, 1, "", "incidence_matrix"], [449, 5, 1, "", "math_model_element"], [449, 5, 1, "", "name"], [449, 3, 1, "", "nk"], [449, 5, 1, "", "nn"], [449, 5, 1, "", "node_indices"], [449, 5, 1, "", "node_types"], [449, 5, 1, "", "np"], [449, 5, 1, "", "nz"], [449, 5, 1, "", "set_node_type_pq"], [449, 5, 1, "", "set_node_type_pv"], [449, 5, 1, "", "set_node_type_ref"], [449, 3, 1, "", "soln"], [449, 5, 1, "", "x2vz"]], "mp.nme_branch": [[450, 5, 1, "", "name"], [450, 5, 1, "", "np"]], "mp.nme_branch_ac": [[451, 5, 1, "", "build_params"]], "mp.nme_branch_acc": [[452, 5, 1, "", "ang_diff_fcn"], [452, 5, 1, "", "ang_diff_hess"]], "mp.nme_branch_dc": [[454, 5, 1, "", "build_params"]], "mp.nme_bus": [[455, 5, 1, "", "name"], [455, 5, 1, "", "nn"], [455, 5, 1, "", "node_types"], [455, 5, 1, "", "set_node_type_pq"], [455, 5, 1, "", "set_node_type_pv"], [455, 5, 1, "", "set_node_type_ref"]], "mp.nme_bus3p": [[456, 5, 1, "", "name"], [456, 5, 1, "", "nn"], [456, 5, 1, "", "node_types"]], "mp.nme_bus3p_acc": [[457, 5, 1, "", "add_vvars"]], "mp.nme_bus3p_acp": [[458, 5, 1, "", "add_vvars"]], "mp.nme_bus_acc": [[459, 5, 1, "", "add_vvars"]], "mp.nme_bus_acp": [[460, 5, 1, "", "add_vvars"]], "mp.nme_bus_dc": [[461, 5, 1, "", "add_vvars"]], "mp.nme_buslink": [[462, 5, 1, "", "add_zvars"], [462, 5, 1, "", "build_params"], [462, 5, 1, "", "name"], [462, 5, 1, "", "np"], [462, 5, 1, "", "nz"], [462, 5, 1, "", "voltage_constraints"]], "mp.nme_gen": [[465, 5, 1, "", "name"], [465, 5, 1, "", "np"], [465, 5, 1, "", "nz"]], "mp.nme_gen3p": [[466, 5, 1, "", "add_zvars"], [466, 5, 1, "", "build_params"], [466, 5, 1, "", "name"], [466, 5, 1, "", "np"], [466, 5, 1, "", "nz"]], "mp.nme_gen_ac": [[469, 5, 1, "", "add_zvars"], [469, 5, 1, "", "build_params"]], "mp.nme_gen_dc": [[472, 5, 1, "", "add_zvars"], [472, 5, 1, "", "build_params"]], "mp.nme_legacy_dcline": [[473, 5, 1, "", "name"], [473, 5, 1, "", "np"], [473, 5, 1, "", "nz"]], "mp.nme_legacy_dcline_ac": [[474, 5, 1, "", "add_zvars"], [474, 5, 1, "", "build_params"]], "mp.nme_legacy_dcline_dc": [[477, 5, 1, "", "add_zvars"], [477, 5, 1, "", "build_params"]], "mp.nme_line3p": [[478, 5, 1, "", "build_params"], [478, 5, 1, "", "name"], [478, 5, 1, "", "np"], [478, 5, 1, "", "vec2symmat_stacked"]], "mp.nme_load": [[479, 5, 1, "", "name"], [479, 5, 1, "", "np"]], "mp.nme_load3p": [[480, 5, 1, "", "build_params"], [480, 5, 1, "", "name"], [480, 5, 1, "", "np"]], "mp.nme_load_ac": [[481, 5, 1, "", "build_params"], [481, 5, 1, "", "port_inj_current_nln"], [481, 5, 1, "", "port_inj_power_nln"]], "mp.nme_load_dc": [[484, 5, 1, "", "build_params"]], "mp.nme_shunt": [[485, 5, 1, "", "name"], [485, 5, 1, "", "np"]], "mp.nme_shunt3p": [[486, 5, 1, "", "build_params"], [486, 5, 1, "", "name"], [486, 5, 1, "", "np"]], "mp.nme_shunt_ac": [[487, 5, 1, "", "build_params"]], "mp.nme_shunt_dc": [[490, 5, 1, "", "build_params"]], "mp.nme_xfmr3p": [[491, 5, 1, "", "build_params"], [491, 5, 1, "", "name"], [491, 5, 1, "", "np"]], "mp.opt_model": [[107, 5, 1, "", "copy"], [107, 5, 1, "", "display"], [107, 5, 1, "", "display_footer"], [107, 5, 1, "", "display_header"], [107, 5, 1, "", "display_soln"], [107, 5, 1, "", "from_struct"], [107, 5, 1, "", "get_idx"], [107, 5, 1, "", "get_set_types"], [107, 5, 1, "", "get_userdata"], [107, 5, 1, "", "has_parsed_soln"], [107, 5, 1, "", "is_mixed_integer"], [107, 5, 1, "", "is_solved"], [107, 3, 1, "", "lin"], [107, 3, 1, "", "nlc"], [107, 3, 1, "", "nle"], [107, 3, 1, "", "nli"], [107, 5, 1, "", "opt_model"], [107, 5, 1, "", "parse_soln"], [107, 3, 1, "", "prob_type"], [107, 5, 1, "", "problem_type"], [107, 3, 1, "", "qcn"], [107, 3, 1, "", "qdc"], [107, 3, 1, "", "soln"], [107, 5, 1, "", "solve"], [107, 5, 1, "", "to_struct"], [107, 3, 1, "", "userdata"], [107, 3, 1, "", "var"]], "mp.set_manager": [[108, 3, 1, "", "N"], [108, 3, 1, "", "NS"], [108, 5, 1, "", "add"], [108, 5, 1, "", "copy"], [108, 3, 1, "", "data"], [108, 5, 1, "", "describe_idx"], [108, 5, 1, "", "display"], [108, 5, 1, "", "from_struct"], [108, 5, 1, "", "get_N"], [108, 3, 1, "", "idx"], [108, 5, 1, "", "init_indexed_name"], [108, 3, 1, "", "label"], [108, 3, 1, "", "order"], [108, 5, 1, "", "set_manager"], [108, 5, 1, "", "set_type_idx_map"], [108, 5, 1, "", "to_struct"]], "mp.set_manager_opt_model": [[109, 5, 1, "", "display_soln"], [109, 5, 1, "", "has_parsed_soln"], [109, 5, 1, "", "params"], [109, 5, 1, "", "parse_soln"], [109, 5, 1, "", "set_manager_opt_model"], [109, 5, 1, "", "set_params"], [109, 3, 1, "", "soln"]], "mp.sm_legacy_cost": [[492, 3, 1, "", "cache"], [492, 5, 1, "", "sm_legacy_cost"]], "mp.sm_lin_constraint": [[110, 5, 1, "", "add"], [110, 3, 1, "", "cache"], [110, 5, 1, "", "display_soln"], [110, 5, 1, "", "eval"], [110, 5, 1, "", "get_soln"], [110, 5, 1, "", "params"], [110, 5, 1, "", "parse_soln"], [110, 5, 1, "", "set_params"], [110, 5, 1, "", "sm_lin_constraint"]], "mp.sm_nln_constraint": [[111, 5, 1, "", "add"], [111, 5, 1, "", "display_soln"], [111, 5, 1, "", "eval"], [111, 5, 1, "", "eval_hess"], [111, 5, 1, "", "get_soln"], [111, 5, 1, "", "params"], [111, 5, 1, "", "parse_soln"], [111, 5, 1, "", "set_params"], [111, 5, 1, "", "sm_nln_constraint"]], "mp.sm_nln_cost": [[112, 5, 1, "", "add"], [112, 5, 1, "", "display_soln"], [112, 5, 1, "", "eval"], [112, 5, 1, "", "get_soln"], [112, 5, 1, "", "params"], [112, 5, 1, "", "set_params"], [112, 5, 1, "", "sm_nln_cost"]], "mp.sm_quad_constraint": [[113, 5, 1, "", "add"], [113, 4, 1, "", "blkprod2vertcat"], [113, 3, 1, "", "cache"], [113, 5, 1, "", "display_soln"], [113, 5, 1, "", "eval"], [113, 5, 1, "", "get_soln"], [113, 5, 1, "", "params"], [113, 5, 1, "", "parse_soln"], [113, 5, 1, "", "set_params"], [113, 5, 1, "", "sm_quad_constraint"]], "mp.sm_quad_cost": [[114, 5, 1, "", "add"], [114, 3, 1, "", "cache"], [114, 5, 1, "", "copy"], [114, 5, 1, "", "display_soln"], [114, 5, 1, "", "eval"], [114, 5, 1, "", "get_soln"], [114, 5, 1, "", "params"], [114, 5, 1, "", "set_params"], [114, 5, 1, "", "sm_quad_cost"]], "mp.sm_quad_cost_legacy": [[115, 5, 1, "", "add"], [115, 3, 1, "", "cache"], [115, 5, 1, "", "copy"], [115, 5, 1, "", "display_soln"], [115, 5, 1, "", "eval"], [115, 5, 1, "", "get_soln"], [115, 5, 1, "", "params"], [115, 5, 1, "", "set_params"], [115, 5, 1, "", "sm_quad_cost_legacy"]], "mp.sm_variable": [[116, 5, 1, "", "add"], [116, 3, 1, "", "cache"], [116, 5, 1, "", "display_soln"], [116, 5, 1, "", "get_soln"], [116, 5, 1, "", "params"], [116, 5, 1, "", "parse_soln"], [116, 5, 1, "", "set_params"], [116, 5, 1, "", "sm_variable"], [116, 4, 1, "", "varsets_cell2struct"], [116, 5, 1, "", "varsets_idx"], [116, 5, 1, "", "varsets_len"], [116, 5, 1, "", "varsets_x"]], "mp.task": [[493, 5, 1, "", "data_model_build"], [493, 5, 1, "", "data_model_build_post"], [493, 5, 1, "", "data_model_build_pre"], [493, 5, 1, "", "data_model_class"], [493, 5, 1, "", "data_model_class_default"], [493, 5, 1, "", "data_model_create"], [493, 3, 1, "", "dm"], [493, 5, 1, "", "dm_converter_build"], [493, 5, 1, "", "dm_converter_class"], [493, 5, 1, "", "dm_converter_class_mpc2_default"], [493, 5, 1, "", "dm_converter_create"], [493, 3, 1, "", "dmc"], [493, 3, 1, "", "et"], [493, 3, 1, "", "i_dm"], [493, 3, 1, "", "i_mm"], [493, 3, 1, "", "i_nm"], [493, 5, 1, "", "load_dm"], [493, 5, 1, "", "math_model_build"], [493, 5, 1, "", "math_model_class"], [493, 5, 1, "", "math_model_class_default"], [493, 5, 1, "", "math_model_create"], [493, 5, 1, "", "math_model_opt"], [493, 3, 1, "", "message"], [493, 3, 1, "", "mm"], [493, 3, 1, "", "mm_opt"], [493, 3, 1, "", "name"], [493, 5, 1, "", "network_model_build"], [493, 5, 1, "", "network_model_build_post"], [493, 5, 1, "", "network_model_build_pre"], [493, 5, 1, "", "network_model_class"], [493, 5, 1, "", "network_model_class_default"], [493, 5, 1, "", "network_model_create"], [493, 5, 1, "", "network_model_update"], [493, 5, 1, "", "network_model_x_soln"], [493, 5, 1, "", "next_dm"], [493, 5, 1, "", "next_mm"], [493, 5, 1, "", "next_nm"], [493, 3, 1, "", "nm"], [493, 5, 1, "", "print_soln"], [493, 5, 1, "", "print_soln_header"], [493, 5, 1, "", "run"], [493, 5, 1, "", "run_post"], [493, 5, 1, "", "run_pre"], [493, 5, 1, "", "save_soln"], [493, 3, 1, "", "success"], [493, 3, 1, "", "tag"]], "mp.task_cpf": [[494, 5, 1, "", "data_model_build"], [494, 5, 1, "", "data_model_class_default"], [494, 5, 1, "", "dm_converter_class"], [494, 5, 1, "", "math_model_class_default"], [494, 5, 1, "", "math_model_opt"], [494, 5, 1, "", "network_model_build"], [494, 5, 1, "", "network_model_update"], [494, 5, 1, "", "network_model_x_soln"], [494, 5, 1, "", "next_mm"], [494, 5, 1, "", "run_pre"], [494, 5, 1, "", "task_cpf"], [494, 3, 1, "", "warmstart"]], "mp.task_cpf_legacy": [[495, 5, 1, "", "legacy_post_run"], [495, 5, 1, "", "run_post"], [495, 5, 1, "", "run_pre"]], "mp.task_opf": [[496, 5, 1, "", "data_model_build_post"], [496, 5, 1, "", "data_model_class_default"], [496, 3, 1, "", "dc"], [496, 5, 1, "", "math_model_class_default"], [496, 5, 1, "", "network_model_class_default"], [496, 5, 1, "", "print_soln_header"], [496, 5, 1, "", "run_pre"]], "mp.task_opf_legacy": [[497, 5, 1, "", "data_model_build_post"], [497, 5, 1, "", "dm_converter_class_mpc2_default"], [497, 5, 1, "", "legacy_post_run"], [497, 5, 1, "", "math_model_class_default"], [497, 5, 1, "", "run_post"], [497, 5, 1, "", "run_pre"]], "mp.task_pf": [[498, 3, 1, "", "dc"], [498, 5, 1, "", "enforce_q_lims"], [498, 3, 1, "", "fixed_q_idx"], [498, 3, 1, "", "fixed_q_qty"], [498, 3, 1, "", "iterations"], [498, 5, 1, "", "math_model_class_default"], [498, 3, 1, "", "name"], [498, 5, 1, "", "network_model_build_post"], [498, 5, 1, "", "network_model_class_default"], [498, 5, 1, "", "network_model_x_soln"], [498, 5, 1, "", "next_dm"], [498, 3, 1, "", "ref"], [498, 3, 1, "", "ref0"], [498, 5, 1, "", "run_pre"], [498, 3, 1, "", "tag"], [498, 3, 1, "", "va_ref0"]], "mp.task_pf_legacy": [[499, 5, 1, "", "legacy_post_run"], [499, 5, 1, "", "run_post"], [499, 5, 1, "", "run_pre"]], "mp.task_shared_legacy": [[500, 5, 1, "", "run_pre_legacy"]], "mp.xt_3p": [[501, 5, 1, "", "dm_element_classes"], [501, 5, 1, "", "dmc_element_classes"], [501, 5, 1, "", "mm_element_classes"], [501, 5, 1, "", "nm_element_classes"]], "mp.xt_legacy_dcline": [[502, 5, 1, "", "dm_element_classes"], [502, 5, 1, "", "dmc_element_classes"], [502, 5, 1, "", "mm_element_classes"], [502, 5, 1, "", "nm_element_classes"]], "mp.xt_oval_cap_curve": [[503, 5, 1, "", "mm_element_classes"]], "mp.xt_reserves": [[504, 5, 1, "", "dm_element_classes"], [504, 5, 1, "", "dmc_element_classes"], [504, 5, 1, "", "mm_element_classes"]], "mp_idx_manager": [[117, 5, 1, "", "add_named_set"], [117, 5, 1, "", "copy"], [117, 5, 1, "", "describe_idx"], [117, 5, 1, "", "display_set"], [117, 5, 1, "", "get"], [117, 5, 1, "", "getN"], [117, 5, 1, "", "get_idx"], [117, 5, 1, "", "get_userdata"], [117, 5, 1, "", "init_indexed_name"], [117, 5, 1, "", "init_set_types"], [117, 5, 1, "", "mp_idx_manager"], [117, 5, 1, "", "set_type_idx_map"], [117, 5, 1, "", "valid_named_set_type"]], "mp_table": [[505, 5, 1, "", "display"], [505, 5, 1, "", "end"], [505, 4, 1, "", "extract_named_args"], [505, 5, 1, "", "horzcat"], [505, 5, 1, "", "isempty"], [505, 5, 1, "", "istable"], [505, 5, 1, "", "mp_table"], [505, 5, 1, "", "size"], [505, 5, 1, "", "subsasgn"], [505, 5, 1, "", "subsref"], [505, 5, 1, "", "vertcat"]], "mp_table_subclass": [[506, 5, 1, "", "get_table"], [506, 5, 1, "", "set_table"]], "opf_model": [[517, 5, 1, "", "add_legacy_cost"], [517, 5, 1, "", "add_named_set"], [517, 3, 1, "", "cost"], [517, 5, 1, "", "def_set_types"], [517, 5, 1, "", "display"], [517, 5, 1, "", "eval_legacy_cost"], [517, 5, 1, "", "get_mpc"], [517, 5, 1, "", "init_set_types"], [517, 3, 1, "", "mpc"], [517, 5, 1, "", "opf_model"], [517, 5, 1, "", "params_legacy_cost"], [517, 5, 1, "", "set_mpc"]], "opt_model": [[118, 5, 1, "", "add_lin_constraint"], [118, 5, 1, "", "add_nln_constraint"], [118, 5, 1, "", "add_nln_cost"], [118, 5, 1, "", "add_quad_cost"], [118, 5, 1, "", "add_var"], [118, 5, 1, "", "copy"], [118, 5, 1, "", "def_set_types"], [118, 5, 1, "", "display"], [118, 5, 1, "", "display_soln"], [118, 5, 1, "", "eval_lin_constraint"], [118, 5, 1, "", "eval_nln_constraint"], [118, 5, 1, "", "eval_nln_constraint_hess"], [118, 5, 1, "", "eval_nln_cost"], [118, 5, 1, "", "eval_quad_cost"], [118, 5, 1, "", "from_struct"], [118, 5, 1, "", "get_idx"], [118, 5, 1, "", "get_soln"], [118, 5, 1, "", "has_parsed_soln"], [118, 5, 1, "", "init_indexed_name"], [118, 5, 1, "", "is_mixed_integer"], [118, 5, 1, "", "is_solved"], [118, 3, 1, "", "lin"], [118, 3, 1, "", "nlc"], [118, 3, 1, "", "nle"], [118, 3, 1, "", "nli"], [118, 5, 1, "", "opt_model"], [118, 5, 1, "", "params_lin_constraint"], [118, 5, 1, "", "params_nln_constraint"], [118, 5, 1, "", "params_nln_cost"], [118, 5, 1, "", "params_quad_cost"], [118, 5, 1, "", "params_var"], [118, 5, 1, "", "parse_soln"], [118, 3, 1, "", "prob_type"], [118, 5, 1, "", "problem_type"], [118, 3, 1, "", "qcn"], [118, 3, 1, "", "qdc"], [118, 5, 1, "", "set_params"], [118, 3, 1, "", "soln"], [118, 5, 1, "", "solve"], [118, 5, 1, "", "to_struct"], [118, 3, 1, "", "var"], [118, 5, 1, "", "varsets_cell2struct"], [118, 5, 1, "", "varsets_idx"], [118, 5, 1, "", "varsets_len"], [118, 5, 1, "", "varsets_x"]]}, "objtypes": {"0": "mat:function", "1": "mat:script", "2": "mat:class", "3": "mat:attribute", "4": "mat:staticmethod", "5": "mat:method"}, "objnames": {"0": ["mat", "function", "MATLAB function"], "1": ["mat", "script", "MATLAB script"], "2": ["mat", "class", "MATLAB class"], "3": ["mat", "attribute", "MATLAB attribute"], "4": ["mat", "staticmethod", "MATLAB static method"], "5": ["mat", "method", "MATLAB method"]}, "titleterms": {"acknowledg": [0, 279], "architectur": 1, "overview": [1, 21], "m": [1, 2, 5, 6, 12, 21, 281, 507, 515, 783, 785, 815, 816], "span": [1, 2, 5, 6, 12, 21, 281, 507, 515, 783, 785, 815, 816], "style": [1, 2, 5, 6, 12, 21, 281, 507, 515, 783, 785, 815, 816], "font": [1, 2, 5, 6, 12, 21, 281, 507, 515, 783, 785, 815, 816], "size": [1, 2, 5, 6, 12, 21, 281, 507, 515, 783, 785, 815, 816], "smaller": [1, 2, 5, 6, 12, 21, 281, 507, 515, 783, 785, 815, 816], "atpow": [1, 2, 5, 6, 12, 21, 281, 507, 515, 783, 785, 815, 816], "matpow": [1, 2, 5, 6, 12, 21, 281, 507, 515, 783, 785, 815, 816], "object": [1, 3, 4, 7, 8, 11], "instanc": 1, "class": [1, 2, 7, 260, 281, 783], "hierarchi": 1, "two": 1, "framework": [1, 816], "custom": [1, 2, 17], "default": 2, "determin": 2, "task": [2, 11, 17, 281, 493], "model": [2, 3, 4, 7, 8, 11, 17, 19, 259, 260, 281], "data": [2, 3, 4, 7, 17, 19, 20, 281, 783, 785], "convert": [2, 4, 11, 17, 19, 281], "specif": [2, 4], "method": [2, 3, 11], "element": [2, 3, 4, 7, 8, 17, 19, 281, 815], "modifi": 2, "via": [2, 12], "option": [2, 12, 260], "extens": [2, 12, 18, 19, 281, 341], "build": [3, 4, 7, 8, 11, 13, 17, 783], "system": 3, "level": [3, 507, 783], "paramet": [3, 8, 19], "print": [3, 17], "tabl": [3, 17], "properti": 3, "connect": [3, 17], "import": [4, 17], "export": [4, 17], "variabl": [4, 7, 17], "map": [4, 17], "valu": [4, 17], "develop": [5, 6], "": [5, 38, 105, 259, 279, 816], "manual": [5, 13, 21, 38, 105, 259, 279, 515, 816], "introduct": [6, 516], "environ": 6, "github": 6, "repositori": 6, "convent": 6, "mathemat": [7, 17, 19, 281], "solv": 7, "math": 7, "updat": [7, 13, 17], "network": [7, 8, 17, 19, 281], "ad": 7, "constraint": [7, 12, 281], "cost": 7, "share": 7, "formul": [8, 17, 19], "dc": [8, 17, 281], "ac": [8, 17, 19], "complex": 8, "power": [8, 17, 20, 783], "inject": 8, "current": [8, 815], "node": 8, "type": [8, 17, 19], "exampl": [8, 12, 20, 39, 106, 260, 281], "bu": 8, "gener": 8, "branch": 8, "load": 8, "aggreg": 8, "notat": 9, "refer": [10, 13, 38, 39, 105, 106, 259, 260, 280, 515], "run": [11, 20], "iter": 11, "execut": 11, "other": [11, 21, 39, 106, 280, 507, 783], "how": [12, 13, 17, 18, 20, 21], "add": 12, "an": [12, 18], "opf": [12, 17, 281, 648, 783, 815], "function": [12, 13, 17, 39, 106, 260, 280, 507, 783], "deriv": [12, 783, 815], "implement": [12, 260], "us": [12, 17, 18], "new": [12, 17, 816], "origin": 12, "box": 12, "capabl": 12, "curv": 12, "oval": 12, "see": [12, 17, 18], "also": [12, 17, 18], "document": [13, 21, 279], "util": [13, 260, 783], "generate_autodoc_stub": 14, "generate_matpower_autodoc": 15, "generate_source_symlink": 16, "creat": [17, 18], "transmiss": 17, "line": [17, 281], "name": 17, "main": [17, 39, 106], "output": [17, 783], "stage": 17, "pretti": 17, "subclass": 17, "field": 17, "sourc": 17, "all": [17, 19, 21], "cartesian": [17, 19, 815], "v": [17, 19], "polar": [17, 19], "flow": [17, 20, 783, 815], "optim": 17, "A": 19, "test": [19, 39, 106, 260, 279, 280, 783, 785], "gizmo": 19, "3": 19, "port": 19, "compon": 19, "three": [20, 281], "phase": [20, 281], "format": 20, "bus3p": 20, "line3p": 20, "xfmr3p": 20, "shunt3p": 20, "load3p": 20, "gen3p": 20, "lc": 20, "buslink": 20, "case": 20, "singl": 20, "convers": [20, 783], "home": 21, "get": 21, "start": 21, "more": 21, "legaci": [21, 260, 281, 783, 816], "pdf": 21, "To": 21, "guid": 21, "tech": 21, "note": [21, 815], "public": 21, "link": 21, "have_feature_lu_vec": 22, "have_feature_mip": 23, "have_feature_pardiso": 24, "have_feature_pardiso_legaci": 25, "have_feature_pardiso_object": 26, "mip": [27, 38, 39], "mips_example1": 28, "mips_example2": 29, "mipsver": 30, "mplinsolv": 31, "qps_mip": 32, "t_mip": 33, "t_mips_pardiso": 34, "t_mplinsolv": 35, "t_qps_mip": 36, "test_mip": 37, "user": [38, 105, 259, 279, 281, 783, 816], "privat": [39, 106, 260, 280, 783], "addgen2mpc": 40, "addstorag": 41, "addwind": 42, "apply_profil": 43, "c118swf": 44, "ex_case3a": 45, "ex_case3b": 46, "ex_contab": 47, "ex_load_profil": 48, "ex_storag": 49, "ex_transmat": 50, "ex_wind": 51, "ex_wind_profil": 52, "ex_wind_profile_d": 53, "ex_wind_uc": 54, "ex_xgd": 55, "ex_xgd_ramp": 56, "ex_xgd_r": 57, "ex_xgd_uc": 58, "filter_ramp_transit": 59, "getprofil": 60, "idx_profil": 61, "loadgenericdata": 62, "loadmd": 63, "loadstoragedata": 64, "loadxgendata": 65, "md_init": 66, "most": [67, 105, 106], "most_ex1_": 68, "most_ex2_dcopf": 69, "most_ex3_dcopf_w_uc": 70, "most_ex4_dcopf_ss": 71, "most_ex5_mpopf": 72, "most_ex6_uc": 73, "most_ex7_suc": 74, "most_summari": 75, "mostver": 76, "mpoption_info_most": 77, "plot_gen": 78, "plot_storag": 79, "plot_uc": 80, "plot_uc_data": 81, "t_case30_most": 82, "t_case3_most": 83, "t_case_tlmp": 84, "t_case_tlmp_storag": 85, "t_most_30b_1_1_0": 86, "t_most_30b_1_1_0_uc": 87, "t_most_30b_1_1_17": 88, "t_most_30b_3_1_0": 89, "t_most_30b_3_1_17": 90, "t_most_3b_1_1_0": 91, "t_most_3b_1_1_2": 92, "t_most_3b_3_1_0": 93, "t_most_3b_3_1_2": 94, "t_most_fixed_r": 95, "t_most_mpopf": 96, "t_most_sp": 97, "t_most_spuc": 98, "t_most_suc": 99, "t_most_tlmp": 100, "t_most_uc": 101, "t_most_w_d": 102, "test_most": 103, "uniformwindprofil": 104, "mp": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 172, 259, 260, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 509, 815], "opt_model": [107, 118], "set_manag": 108, "set_manager_opt_model": 109, "sm_lin_constraint": 110, "sm_nln_constraint": 111, "sm_nln_cost": 112, "sm_quad_constraint": 113, "sm_quad_cost": 114, "sm_quad_cost_legaci": 115, "sm_variabl": 116, "mp_idx_manag": 117, "artelys_knitro_opt": 119, "convert_constraint_multipli": 120, "convert_lin_constraint": 121, "convert_lin_constraint_multipli": 122, "convert_quad_constraint": 123, "cplex_opt": 124, "glpk_option": 125, "gurobi_opt": 126, "gurobiv": 127, "have_feature_bpmpd": 128, "have_feature_catchm": 129, "have_feature_clp": 130, "have_feature_cplex": 131, "have_feature_evalc": 132, "have_feature_fmincon": 133, "have_feature_fmincon_ipm": 134, "have_feature_fsolv": 135, "have_feature_glpk": 136, "have_feature_gurobi": 137, "have_feature_high": 138, "have_feature_intlinprog": 139, "have_feature_ipopt": 140, "have_feature_ipopt_auxdata": 141, "have_feature_isequaln": 142, "have_feature_knitro": 143, "have_feature_knitromatlab": 144, "have_feature_linprog": 145, "have_feature_linprog_d": 146, "have_feature_mosek": 147, "have_feature_opti_clp": 148, "have_feature_optim": 149, "have_feature_optimopt": 150, "have_feature_osqp": 151, "have_feature_quadprog": 152, "have_feature_quadprog_l": 153, "have_feature_sdpt3": 154, "have_feature_sedumi": 155, "have_feature_yalmip": 156, "highs_opt": 157, "highsver": 158, "ipopt_opt": 159, "knitrov": 160, "lp_ex1": 161, "milp_ex1": 162, "miqps_cplex": 163, "miqps_glpk": 164, "miqps_gurobi": 165, "miqps_high": 166, "miqps_mast": 167, "miqps_mosek": 168, "miqps_ot": 169, "mosek_opt": 170, "mosek_symbcon": 171, "struct2object": 172, "mpomver": 173, "mpopt2nleqopt": 174, "mpopt2nlpopt": 175, "mpopt2pneopt": 176, "mpopt2qcqpopt": 177, "mpopt2qpopt": 178, "nested_struct_copi": 179, "nleqs_cor": 180, "nleqs_fd_newton": 181, "nleqs_fsolv": 182, "nleqs_gauss_seidel": 183, "nleqs_mast": 184, "nleqs_master_ex1": 185, "nleqs_master_ex2": 186, "nleqs_newton": 187, "nlp_consfcn": 188, "nlp_costfcn": 189, "nlp_hessfcn": 190, "nlps_fmincon": 191, "nlps_ipopt": 192, "nlps_knitro": 193, "nlps_master": 194, "nlps_master_ex1": 195, "nlps_master_ex2": 196, "osqp_opt": 197, "osqpver": 198, "pne_callback_default": 199, "pne_callback_nos": 200, "pne_callback_target_lam": 201, "pne_detect_ev": 202, "pne_detected_ev": 203, "pne_event_nos": 204, "pne_event_target_lam": 205, "pne_ex1": 206, "pne_pfcn_arc_len": 207, "pne_pfcn_natur": 208, "pne_pfcn_pseudo_arc_len": 209, "pne_register_callback": 210, "pne_register_ev": 211, "pnes_mast": 212, "qcqp_ex1": 213, "qcqp_nlp_consfcn": 214, "qcqp_nlp_costfcn": 215, "qcqp_nlp_hessfcn": 216, "qcqps_gurobi": 217, "qcqps_knitro": 218, "qcqps_master": 219, "qcqps_nlp": 220, "qp_ex1": 221, "qps_bpmpd": 222, "qps_clp": 223, "qps_cplex": 224, "qps_glpk": 225, "qps_gurobi": 226, "qps_high": 227, "qps_ipopt": 228, "qps_knitro": 229, "qps_master": 230, "qps_mosek": 231, "qps_osqp": 232, "qps_ot": 233, "t_have_fcn": 234, "t_miqps_mast": 235, "t_mm_solve_leq": 236, "t_mm_solve_miqp": 237, "t_mm_solve_nleq": 238, "t_mm_solve_nlp": 239, "t_mm_solve_pn": 240, "t_mm_solve_qcqp": 241, "t_mm_solve_qp": 242, "t_mp_opt_model": 243, "t_nested_struct_copi": 244, "t_nleqs_mast": 245, "t_nlps_master": 246, "t_om_solve_leq": 247, "t_om_solve_miqp": 248, "t_om_solve_nleq": 249, "t_om_solve_nlp": 250, "t_om_solve_pn": 251, "t_om_solve_qcqp": 252, "t_om_solve_qp": 253, "t_opt_model": 254, "t_pnes_mast": 255, "t_qcqps_master": 256, "t_qps_master": 257, "test_mp_opt_model": 258, "opt": [259, 260], "mpom": [259, 260], "master": 260, "handl": 260, "version": [260, 784], "inform": 260, "solver": [260, 783], "interfac": 260, "miqp": [260, 783], "nleq": 260, "nlp": 260, "pne": 260, "lp": [260, 783], "qp": [260, 783], "qcqp": 260, "debug_assert": 261, "have_featur": 262, "have_feature_matlab": 263, "have_feature_octav": 264, "mptestver": 265, "t_begin": 266, "t_debug_assert": 267, "t_end": 268, "t_file_match": 269, "t_have_featur": 270, "t_i": 271, "t_ok": 272, "t_run_test": 273, "t_skip": 274, "t_str_match": 275, "t_test_fcn": 276, "test_mptest": 277, "toggle_debug_mod": 278, "instal": [279, 507], "usag": 279, "contribut": 279, "licens": 279, "core": 281, "contain": 281, "mixin": 281, "miscellan": 281, "base": 281, "fix": 281, "zonal": 281, "reserv": 281, "prototyp": 281, "node_typ": 282, "case_util": 283, "cost_tabl": 284, "cost_table_util": 285, "data_model": 286, "data_model_cpf": 287, "data_model_opf": 288, "dm_convert": 289, "dm_converter_mpc2": 290, "dm_converter_mpc2_legaci": 291, "dm_element": 292, "dmc_element": 293, "dmce_branch_mpc2": 294, "dmce_bus3p_mpc2": 295, "dmce_bus_mpc2": 296, "dmce_buslink_mpc2": 297, "dmce_gen3p_mpc2": 298, "dmce_gen_mpc2": 299, "dmce_legacy_dcline_mpc2": 300, "dmce_line3p_mpc2": 301, "dmce_load3p_mpc2": 302, "dmce_load_mpc2": 303, "dmce_reserve_gen_mpc2": 304, "dmce_reserve_zone_mpc2": 305, "dmce_shunt3p_mpc2": 306, "dmce_shunt_mpc2": 307, "dmce_xfmr3p_mpc2": 308, "dme_branch": 309, "dme_branch_opf": 310, "dme_bu": 311, "dme_bus3p": 312, "dme_bus3p_opf": 313, "dme_bus_opf": 314, "dme_buslink": 315, "dme_buslink_opf": 316, "dme_gen": 317, "dme_gen3p": 318, "dme_gen3p_opf": 319, "dme_gen_opf": 320, "dme_legacy_dclin": 321, "dme_legacy_dcline_opf": 322, "dme_line3p": 323, "dme_line3p_opf": 324, "dme_load": 325, "dme_load3p": 326, "dme_load3p_opf": 327, "dme_load_cpf": 328, "dme_load_opf": 329, "dme_reserve_gen": 330, "dme_reserve_zon": 331, "dme_shared_opf": 332, "dme_shunt": 333, "dme_shunt3p": 334, "dme_shunt3p_opf": 335, "dme_shunt_cpf": 336, "dme_shunt_opf": 337, "dme_xfmr3p": 338, "dme_xfmr3p_opf": 339, "element_contain": 340, "form": 342, "form_ac": 343, "form_acc": 344, "form_acp": 345, "form_dc": 346, "mapped_arrai": 347, "math_model": 348, "math_model_cpf_acc": [349, 351], "math_model_cpf_acci": 350, "math_model_cpf_acp": [352, 354], "math_model_cpf_acpi": 353, "math_model_opf": 355, "math_model_opf_ac": 356, "math_model_opf_acc": [357, 360], "math_model_opf_acci": 358, "math_model_opf_acci_legaci": 359, "math_model_opf_accs_legaci": 361, "math_model_opf_acp": [362, 365], "math_model_opf_acpi": 363, "math_model_opf_acpi_legaci": 364, "math_model_opf_acps_legaci": 366, "math_model_opf_dc": 367, "math_model_opf_dc_legaci": 368, "math_model_pf": 369, "math_model_pf_ac": 370, "math_model_pf_acci": 371, "math_model_pf_acc": 372, "math_model_pf_acpi": 373, "math_model_pf_acp": 374, "math_model_pf_dc": 375, "mm_element": 376, "mm_shared_opf_legaci": 377, "mm_shared_pfcpf": 378, "mm_shared_pfcpf_ac": 379, "mm_shared_pfcpf_ac_i": 380, "mm_shared_pfcpf_acc": [381, 383], "mm_shared_pfcpf_acci": 382, "mm_shared_pfcpf_acp": [384, 386], "mm_shared_pfcpf_acpi": 385, "mm_shared_pfcpf_dc": 387, "mme_branch": 388, "mme_branch_opf": 389, "mme_branch_opf_ac": 390, "mme_branch_opf_acc": 391, "mme_branch_opf_acp": 392, "mme_branch_opf_dc": 393, "mme_branch_pf_ac": 394, "mme_branch_pf_dc": 395, "mme_bu": 396, "mme_bus3p": 397, "mme_bus3p_opf_acc": 398, "mme_bus3p_opf_acp": 399, "mme_bus_opf_ac": 400, "mme_bus_opf_acc": 401, "mme_bus_opf_acp": 402, "mme_bus_opf_dc": 403, "mme_bus_pf_ac": 404, "mme_bus_pf_dc": 405, "mme_buslink": 406, "mme_buslink_opf": 407, "mme_buslink_opf_acc": 408, "mme_buslink_opf_acp": 409, "mme_buslink_pf_ac": 410, "mme_buslink_pf_acc": 411, "mme_buslink_pf_acp": 412, "mme_gen": 413, "mme_gen3p": 414, "mme_gen3p_opf": 415, "mme_gen_opf": 416, "mme_gen_opf_ac": 417, "mme_gen_opf_ac_ov": 418, "mme_gen_opf_dc": 419, "mme_gen_pf_ac": 420, "mme_gen_pf_dc": 421, "mme_legacy_dclin": 422, "mme_legacy_dcline_opf": 423, "mme_legacy_dcline_opf_ac": 424, "mme_legacy_dcline_opf_dc": 425, "mme_legacy_dcline_pf_ac": 426, "mme_legacy_dcline_pf_dc": 427, "mme_line3p": 428, "mme_line3p_opf": 429, "mme_load": 430, "mme_load_cpf": 431, "mme_load_pf_ac": 432, "mme_load_pf_dc": 433, "mme_reserve_gen": 434, "mme_reserve_zon": 435, "mme_shunt": 436, "mme_shunt3p": 437, "mme_shunt3p_opf": 438, "mme_shunt_cpf": 439, "mme_shunt_pf_ac": 440, "mme_shunt_pf_dc": 441, "mme_xfmr3p": 442, "mme_xfmr3p_opf": 443, "net_model": 444, "net_model_ac": 445, "net_model_acc": 446, "net_model_acp": 447, "net_model_dc": 448, "nm_element": 449, "nme_branch": 450, "nme_branch_ac": 451, "nme_branch_acc": 452, "nme_branch_acp": 453, "nme_branch_dc": 454, "nme_bu": 455, "nme_bus3p": 456, "nme_bus3p_acc": 457, "nme_bus3p_acp": 458, "nme_bus_acc": 459, "nme_bus_acp": 460, "nme_bus_dc": 461, "nme_buslink": 462, "nme_buslink_acc": 463, "nme_buslink_acp": 464, "nme_gen": 465, "nme_gen3p": 466, "nme_gen3p_acc": 467, "nme_gen3p_acp": 468, "nme_gen_ac": 469, "nme_gen_acc": 470, "nme_gen_acp": 471, "nme_gen_dc": 472, "nme_legacy_dclin": 473, "nme_legacy_dcline_ac": 474, "nme_legacy_dcline_acc": 475, "nme_legacy_dcline_acp": 476, "nme_legacy_dcline_dc": 477, "nme_line3p": 478, "nme_load": 479, "nme_load3p": 480, "nme_load_ac": 481, "nme_load_acc": 482, "nme_load_acp": 483, "nme_load_dc": 484, "nme_shunt": 485, "nme_shunt3p": 486, "nme_shunt_ac": 487, "nme_shunt_acc": 488, "nme_shunt_acp": 489, "nme_shunt_dc": 490, "nme_xfmr3p": 491, "sm_legacy_cost": 492, "task_cpf": 494, "task_cpf_legaci": 495, "task_opf": 496, "task_opf_legaci": 497, "task_pf": 498, "task_pf_legaci": 499, "task_shared_legaci": 500, "xt_3p": 501, "xt_legacy_dclin": 502, "xt_oval_cap_curv": 503, "xt_reserv": 504, "mp_tabl": 505, "mp_table_subclass": 506, "limit": 506, "top": [507, 783], "simul": [507, 783], "install_matpow": 508, "load_dm": 509, "mp_table_class": 510, "run_cpf": 511, "run_mp": 512, "run_opf": 513, "run_pf": 514, "opf_model": 517, "add_userfcn": 518, "apply_chang": 519, "bustyp": 520, "calc_branch_angl": 521, "calc_v_i_sum": 522, "calc_v_pq_sum": 523, "calc_v_y_sum": 524, "case_info": 525, "caseformat": 526, "cdf2mpc": 527, "compare_cas": 528, "connected_compon": 529, "cpf_corrector": 530, "cpf_current_mpc": 531, "cpf_default_callback": 532, "cpf_detect_ev": 533, "cpf_flim_ev": 534, "cpf_flim_event_cb": 535, "cpf_nose_ev": 536, "cpf_nose_event_cb": 537, "cpf_p": 538, "cpf_p_jac": 539, "cpf_plim_ev": 540, "cpf_plim_event_cb": 541, "cpf_predictor": 542, "cpf_qlim_ev": 543, "cpf_qlim_event_cb": 544, "cpf_register_callback": 545, "cpf_register_ev": 546, "cpf_tangent": 547, "cpf_target_lam_ev": 548, "cpf_target_lam_event_cb": 549, "cpf_vlim_ev": 550, "cpf_vlim_event_cb": 551, "d2abr_dv2": 552, "d2ibr_dv2": 553, "d2imis_dv2": 554, "d2imis_dvdsg": 555, "d2sbr_dv2": 556, "d2sbus_dv2": 557, "dabr_dv": 558, "dibr_dv": 559, "dimis_dv": 560, "dsbr_dv": 561, "dsbus_dv": 562, "dcopf": 563, "dcopf_solv": 564, "dcpf": 565, "define_const": 566, "e2i_data": 567, "e2i_field": 568, "ext2int": 569, "extract_island": 570, "fdpf": 571, "feval_w_path": 572, "find_bridg": 573, "find_island": 574, "fmincopf": 575, "gausspf": 576, "genfuel": 577, "gentyp": 578, "get_loss": 579, "get_reord": 580, "haspqcap": 581, "have_feature_e4st": 582, "have_feature_minopf": 583, "have_feature_most": 584, "have_feature_mp_cor": 585, "have_feature_pdipmopf": 586, "have_feature_regexp_split": 587, "have_feature_scpdipmopf": 588, "have_feature_sdp_pf": 589, "have_feature_smartmarket": 590, "have_feature_syngrid": 591, "have_feature_t": 592, "have_feature_tralmopf": 593, "i2e_data": 594, "i2e_field": 595, "idx_brch": 596, "idx_bu": 597, "idx_cost": 598, "idx_ct": 599, "idx_dclin": 600, "idx_gen": 601, "int2ext": 602, "isload": 603, "load2disp": 604, "loadcas": 605, "loadsh": 606, "makeaang": 607, "makeapq": 608, "makeavl": 609, "makeai": 610, "makeb": 611, "makebdc": 612, "makejac": 613, "makelodf": 614, "makeptdf": 615, "makesbu": 616, "makesdzip": 617, "makeybu": 618, "make_vcorr": 619, "make_zpv": 620, "margcost": 621, "miqps_matpow": 622, "modcost": 623, "mpoption": 624, "mpoption_info_clp": 625, "mpoption_info_cplex": 626, "mpoption_info_fmincon": 627, "mpoption_info_glpk": 628, "mpoption_info_gurobi": 629, "mpoption_info_high": 630, "mpoption_info_intlinprog": 631, "mpoption_info_ipopt": 632, "mpoption_info_knitro": 633, "mpoption_info_linprog": 634, "mpoption_info_mip": 635, "mpoption_info_mosek": 636, "mpoption_info_osqp": 637, "mpoption_info_quadprog": 638, "mpoption_old": 639, "mpver": 640, "newtonpf": 641, "newtonpf_i_cart": 642, "newtonpf_i_hybrid": 643, "newtonpf_i_polar": 644, "newtonpf_s_cart": 645, "newtonpf_s_hybrid": 646, "nlpopf_solv": 647, "opf_arg": 649, "opf_branch_ang_fcn": 650, "opf_branch_ang_hess": 651, "opf_branch_flow_fcn": 652, "opf_branch_flow_hess": 653, "opf_current_balance_fcn": 654, "opf_current_balance_hess": 655, "opf_execut": 656, "opf_gen_cost_fcn": 657, "opf_legacy_user_cost_fcn": 658, "opf_nle_fcn1": 659, "opf_nle_hess1": 660, "opf_power_balance_fcn": 661, "opf_power_balance_hess": 662, "opf_setup": 663, "opf_veq_fcn": 664, "opf_veq_hess": 665, "opf_vlim_fcn": 666, "opf_vlim_hess": 667, "opf_vref_fcn": 668, "opf_vref_hess": 669, "order_radi": 670, "pfsoln": 671, "poly2pwl": 672, "polycost": 673, "pqcost": 674, "printpf": 675, "psse2mpc": 676, "psse_convert": 677, "psse_convert_hvdc": 678, "psse_convert_xfmr": 679, "psse_pars": 680, "psse_parse_lin": 681, "psse_parse_sect": 682, "psse_read": 683, "qps_matpow": 684, "radial_pf": 685, "remove_userfcn": 686, "run_userfcn": 687, "runcpf": 688, "rundcopf": 689, "rundcpf": 690, "runduopf": 691, "runopf": 692, "runopf_w_r": 693, "runpf": 694, "runuopf": 695, "save2pss": 696, "savecas": 697, "savechgtab": 698, "scale_load": 699, "set_reord": 700, "t_apply_chang": 701, "t_auction_cas": 702, "t_auction_minopf": 703, "t_auction_mip": 704, "t_auction_tspopf_pdipm": 705, "t_case30_userfcn": 706, "t_case9_dclin": 707, "t_case9_opf": 708, "t_case9_opfv2": 709, "t_case9_pf": 710, "t_case9_pfv2": 711, "t_case9_save2pss": 712, "t_case_ext": 713, "t_case_int": 714, "t_chgtab": 715, "t_cpf": 716, "t_cpf_cb1": 717, "t_cpf_cb2": 718, "t_dcline": 719, "t_ext2int2ext": 720, "t_feval_w_path": 721, "t_get_loss": 722, "t_haspqcap": 723, "t_hessian": 724, "t_island": 725, "t_jacobian": 726, "t_load2disp": 727, "t_loadcas": 728, "t_makelodf": 729, "t_makeptdf": 730, "t_margcost": 731, "t_miqps_matpow": 732, "t_modcost": 733, "t_mpoption": 734, "t_mpoption_ov": 735, "t_off2cas": 736, "t_opf_dc_bpmpd": 737, "t_opf_dc_clp": 738, "t_opf_dc_cplex": 739, "t_opf_dc_default": 740, "t_opf_dc_glpk": 741, "t_opf_dc_gurobi": 742, "t_opf_dc_high": 743, "t_opf_dc_ipopt": 744, "t_opf_dc_mip": 745, "t_opf_dc_mips_sc": 746, "t_opf_dc_mosek": 747, "t_opf_dc_osqp": 748, "t_opf_dc_ot": 749, "t_opf_default": 750, "t_opf_fmincon": 751, "t_opf_ipopt": 752, "t_opf_knitro": 753, "t_opf_minopf": 754, "t_opf_mip": 755, "t_opf_model": 756, "t_opf_softlim": 757, "t_opf_tspopf_pdipm": 758, "t_opf_tspopf_scpdipm": 759, "t_opf_tspopf_tralm": 760, "t_opf_userfcn": 761, "t_pf_ac": 762, "t_pf_dc": 763, "t_pf_radial": 764, "t_printpf": 765, "t_psse": 766, "t_qps_matpow": 767, "t_runmarket": 768, "t_runopf_w_r": 769, "t_scale_load": 770, "t_total_load": 771, "t_totcost": 772, "t_vdep_load": 773, "toggle_dclin": 774, "toggle_iflim": 775, "toggle_reserv": 776, "toggle_softlim": 777, "total_load": 778, "totcost": 779, "uopf": 780, "update_mupq": 781, "zgausspf": 782, "input": 783, "continu": 783, "wrapper": 783, "callback": 783, "milp": 783, "matrix": 783, "featur": 783, "detect": 783, "previou": 784, "mp_foo_tabl": 786, "t_case3p_a": 787, "t_case3p_b": 788, "t_case3p_c": 789, "t_case3p_d": 790, "t_case3p_": 791, "t_case3p_f": 792, "t_case3p_g": 793, "t_case3p_h": 794, "t_case9_gizmo": 795, "t_convert_1p_to_3p": 796, "t_dmc_element": 797, "t_mp_data_model": 798, "t_mp_dm_converter_mpc2": 799, "t_mp_mapped_arrai": 800, "t_mp_tabl": 801, "t_mpxt_legacy_dclin": 802, "t_mpxt_reserv": 803, "t_nm_element": 804, "t_node_test": 805, "t_port_inj_current_acc": 806, "t_port_inj_current_acp": 807, "t_port_inj_power_acc": 808, "t_port_inj_power_acp": 809, "t_pretty_print": 810, "t_run_mp": 811, "t_run_mp_3p": 812, "t_run_opf_default": 813, "test_matpow": 814, "technic": 815, "tn1": 815, "auction": 815, "tn2": 815, "tn3": 815, "tn4": 815, "tn5": 815, "flexibl": 816}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Acknowledgments": [[0, "acknowledgments"], [279, "acknowledgments"]], "Architecture Overview": [[1, "architecture-overview"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Object Instances": [[1, "matpower-object-instances"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Class Hierarchies": [[1, "matpower-class-hierarchies"]], "Two M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Frameworks": [[1, "two-matpower-frameworks"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Customization": [[1, "matpower-customization"]], "Customizing M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{}": [[2, "customizing-matpower"]], "Default Class Determination": [[2, "default-class-determination"]], "Task Class": [[2, "task-class"]], "Model and Data Converter Classes": [[2, "model-and-data-converter-classes"]], "Class Specification Methods of a Task": [[2, "id7"]], "Element Classes": [[2, "element-classes"]], "Element Class Modifiers": [[2, "id8"]], "Customization via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Options": [[2, "customization-via-matpower-options"]], "Class Customization Options": [[2, "id9"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extensions": [[2, "matpower-extensions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Methods": [[2, "id10"]], "Data Model Object": [[3, "data-model-object"]], "Data Models": [[3, "data-models"]], "Building a Data Model": [[3, "building-a-data-model"]], "System Level Parameters": [[3, "system-level-parameters"]], "Printing a Data Model": [[3, "printing-a-data-model"]], "Data Model Elements": [[3, "data-model-elements"]], "Data Tables": [[3, "data-tables"]], "Properties": [[3, "properties"]], "Data Model Element Properties": [[3, "id6"]], "Methods": [[3, "methods"]], "Connections": [[3, "connections"]], "Data Model Converter Object": [[4, "data-model-converter-object"]], "Data Model Converters": [[4, "data-model-converters"]], "Building a Data Model Converter": [[4, "building-a-data-model-converter"]], "Importing Data": [[4, "importing-data"]], "Exporting Data": [[4, "exporting-data"]], "Data Model Converter Elements": [[4, "data-model-converter-elements"]], "Data Import Specifications": [[4, "data-import-specifications"]], "Variable Map Values": [[4, "id5"]], "Data Export Specifications": [[4, "data-export-specifications"]], "Introduction": [[6, "introduction"], [516, "introduction"]], "Development Environment": [[6, "development-environment"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} GitHub Repositories": [[6, "id1"]], "Conventions": [[6, "conventions"]], "Mathematical Model Object": [[7, "mathematical-model-object"]], "Mathematical Models": [[7, "mathematical-models"]], "Building a Mathematical Model": [[7, "building-a-mathematical-model"]], "Solving a Math Model": [[7, "solving-a-math-model"]], "Updating Network and Data Models": [[7, "updating-network-and-data-models"]], "Mathematical Model Elements": [[7, "mathematical-model-elements"]], "Adding Variables, Constraints, and Costs": [[7, "adding-variables-constraints-and-costs"]], "Updating Data Model Elements": [[7, "updating-data-model-elements"]], "Shared Classes": [[7, "shared-classes"]], "Network Model Object": [[8, "network-model-object"]], "Network Model Formulations": [[8, "network-model-formulations"]], "DC Formulation": [[8, "dc-formulation"], [17, "dc-formulation"]], "AC Formulations": [[8, "ac-formulations"], [17, "ac-formulations"], [19, "ac-formulations"]], "Complex Power Injections": [[8, "complex-power-injections"]], "Complex Current Injections": [[8, "complex-current-injections"]], "Network Models": [[8, "network-models"]], "Building a Network Model": [[8, "building-a-network-model"]], "Node Types": [[8, "node-types"]], "Network Model Elements": [[8, "network-model-elements"]], "Example Elements": [[8, "example-elements"]], "Bus": [[8, "bus"]], "Generator": [[8, "generator"]], "Branch": [[8, "branch"]], "Load": [[8, "load"]], "Building Element Parameters": [[8, "building-element-parameters"]], "Aggregation": [[8, "aggregation"]], "Notation": [[9, "notation"]], "References": [[10, "references"]], "Task Object": [[11, "task-object"]], "Running a Task": [[11, "running-a-task"]], "Building Model and Converter Objects": [[11, "building-model-and-converter-objects"]], "Iterative Execution": [[11, "iterative-execution"]], "Other Methods": [[11, "other-methods"]], "How to Add an OPF Constraint": [[12, "how-to-add-an-opf-constraint"]], "Function and Derivatives": [[12, "function-and-derivatives"]], "Implementation": [[12, "implementation"]], "Using the New Constraint": [[12, "using-the-new-constraint"]], "Example": [[12, "example"]], "Original \u201cbox\u201d capability curves": [[12, "original-box-capability-curves"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} options": [[12, "oval-capability-curves-via-matpower-options"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} extension": [[12, "oval-capability-curves-via-matpower-extension"]], "See Also": [[12, "see-also"], [17, "see-also"], [18, "see-also"]], "How to Build the Documentation": [[13, "how-to-build-the-documentation"]], "Updating the Reference Manual": [[13, "updating-the-reference-manual"]], "Reference Manual Utility Functions": [[13, "reference-manual-utility-functions"]], "How to Create a New Element Type": [[17, "how-to-create-a-new-element-type"]], "DC Transmission Line": [[17, "dc-transmission-line"]], "Data Model Element": [[17, "data-model-element"], [19, "data-model-element"]], "DC Line Data Model": [[17, "id2"]], "Naming": [[17, "naming"]], "Connectivity": [[17, "connectivity"]], "Main Data Table": [[17, "main-data-table"]], "Output Values": [[17, "output-values"]], "Building the Element in Stages": [[17, "building-the-element-in-stages"]], "Pretty Printing": [[17, "pretty-printing"]], "OPF Subclass": [[17, "opf-subclass"]], "Data Model Converter Element": [[17, "data-model-converter-element"], [19, "data-model-converter-element"]], "Main Field in Data Source": [[17, "main-field-in-data-source"]], "Table Variable Map": [[17, "table-variable-map"]], "Custom Import/Export Functions": [[17, "custom-import-export-functions"]], "Network Model Element": [[17, "network-model-element"], [19, "network-model-element"]], "All Formulations": [[17, "all-formulations"], [19, "all-formulations"]], "AC Cartesian vs Polar Formulations": [[17, "ac-cartesian-vs-polar-formulations"], [19, "ac-cartesian-vs-polar-formulations"]], "Mathematical Model Element": [[17, "mathematical-model-element"], [19, "mathematical-model-element"]], "All Tasks and Formulations": [[17, "all-tasks-and-formulations"]], "Power Flow": [[17, "power-flow"]], "Optimal Power Flow": [[17, "optimal-power-flow"]], "Data Model Update": [[17, "data-model-update"]], "AC Optimal Power Flow": [[17, "ac-optimal-power-flow"]], "DC Optimal Power Flow": [[17, "dc-optimal-power-flow"]], "Using the New Element": [[17, "using-the-new-element"]], "How to Create an Extension": [[18, "how-to-create-an-extension"]], "Using the Extension": [[18, "using-the-extension"]], "A Test Gizmo Element Type": [[19, "a-test-gizmo-element-type"]], "3-Port Gizmo": [[19, "port-gizmo"]], "Gizmo Components/Parameters": [[19, "id2"]], "Gizmo Data Model": [[19, "id3"]], "Gizmo Extension": [[19, "gizmo-extension"]], "How to Run a Three-Phase Power Flow": [[20, "how-to-run-a-three-phase-power-flow"]], "Data Format": [[20, "data-format"]], "bus3p": [[20, "bus3p"]], "line3p": [[20, "line3p"]], "xfmr3p": [[20, "xfmr3p"]], "shunt3p": [[20, "shunt3p"]], "load3p": [[20, "load3p"]], "gen3p": [[20, "gen3p"]], "lc": [[20, "lc"]], "buslink": [[20, "buslink"]], "Example Cases": [[20, "example-cases"]], "Single Phase to Three-Phase Conversion": [[20, "single-phase-to-three-phase-conversion"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Documentation": [[21, "matpower-documentation"]], "Home": [[21, null]], "Get Started": [[21, null]], "Overview": [[21, "overview"]], "Manuals": [[21, null]], "More Manuals": [[21, "more-manuals"]], "All Legacy PDF Manuals": [[21, "all-legacy-pdf-manuals"]], "How To Guides": [[21, null]], "Tech Notes": [[21, null]], "Publications": [[21, "publications"]], "Other Links": [[21, null]], "MIPS User\u2019s Manual": [[38, "mips-user-s-manual"]], "Reference": [[38, "reference"], [39, "reference"], [105, "reference"], [106, "reference"], [259, "reference"], [260, "reference"], [280, "reference"]], "Main MIPS Functions": [[39, "main-mips-functions"]], "Other Function": [[39, "other-function"]], "MIPS Examples": [[39, "mips-examples"]], "MIPS Tests": [[39, "mips-tests"]], "Private Functions": [[39, "private-functions"], [106, "private-functions"], [260, "private-functions"], [280, "private-functions"]], "MOST User\u2019s Manual": [[105, "most-user-s-manual"]], "Main MOST Functions": [[106, "main-most-functions"]], "Other Functions": [[106, "other-functions"], [280, "other-functions"], [507, "other-functions"], [783, "other-functions"]], "MOST Examples": [[106, "most-examples"]], "MOST Tests": [[106, "most-tests"]], "MP-Opt-Model\\mpom{} User\u2019s Manual": [[259, "mpom-user-s-manual"]], "MP-Opt-Model\\mpom{} Classes": [[260, "mpom-classes"]], "MP-Opt-Model\\mpom{} Functions": [[260, "mpom-functions"]], "Master Functions": [[260, "master-functions"]], "Utility Functions": [[260, "utility-functions"], [783, "utility-functions"]], "Options Handling Functions": [[260, "options-handling-functions"]], "Version Information Functions": [[260, "version-information-functions"]], "Solver Interfaces & Implementations": [[260, "solver-interfaces-implementations"]], "MIQP Solver": [[260, "miqp-solver"]], "NLEQ Solver": [[260, "nleq-solver"]], "NLP Solver": [[260, "nlp-solver"]], "PNE Solver": [[260, "pne-solver"]], "LP/QP Solver": [[260, "lp-qp-solver"]], "QCQP Solver": [[260, "qcqp-solver"]], "MP-Opt-Model\\mpom{} Examples": [[260, "mpom-examples"]], "MP-Opt-Model\\mpom{} Tests": [[260, "mpom-tests"]], "Legacy Tests": [[260, "legacy-tests"], [783, "legacy-tests"]], "MP-Test User\u2019s Manual": [[279, "mp-test-user-s-manual"]], "Installation": [[279, "installation"]], "Usage": [[279, "usage"]], "Documentation": [[279, "documentation"]], "Contributing": [[279, "contributing"]], "License": [[279, "license"]], "Testing Functions": [[280, "testing-functions"]], "Tests of MP-Test": [[280, "tests-of-mp-test"]], "Classes": [[281, "classes"]], "Task Classes": [[281, "task-classes"]], "Core Task Classes": [[281, "core-task-classes"]], "Legacy Task Classes": [[281, "legacy-task-classes"]], "Data Model Classes": [[281, "data-model-classes"]], "Containers": [[281, "containers"], [281, "id1"], [281, "id3"], [281, "id5"]], "Elements": [[281, "elements"], [281, "id2"], [281, "id4"], [281, "id6"]], "Element Mixins": [[281, "element-mixins"]], "Data Model Converter Classes": [[281, "data-model-converter-classes"]], "Network Model Classes": [[281, "network-model-classes"]], "Mathematical Model Classes": [[281, "mathematical-model-classes"]], "Container Mixins": [[281, "container-mixins"]], "Miscellaneous Classes": [[281, "miscellaneous-classes"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Classes": [[281, "matpower-extension-classes"]], "Base": [[281, "base"]], "OPF Fixed Zonal Reserves Extension": [[281, "opf-fixed-zonal-reserves-extension"]], "Three-Phase Prototype Extension": [[281, "three-phase-prototype-extension"]], "Legacy DC Line Extension": [[281, "legacy-dc-line-extension"]], "Example User Constraint Extension": [[281, "example-user-constraint-extension"]], "Functions": [[507, "functions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Installer": [[507, "matpower-installer"]], "Top-Level Simulation Functions": [[507, "top-level-simulation-functions"], [783, "top-level-simulation-functions"]], "Legacy": [[783, "legacy"]], "Legacy Class": [[783, "legacy-class"]], "Legacy Functions": [[783, "legacy-functions"]], "Input/Output Functions": [[783, "input-output-functions"]], "Data Conversion Functions": [[783, "data-conversion-functions"]], "Power Flow Functions": [[783, "power-flow-functions"]], "Continuation Power Flow Functions": [[783, "continuation-power-flow-functions"]], "OPF and Wrapper Functions": [[783, "opf-and-wrapper-functions"]], "Other OPF Functions": [[783, "other-opf-functions"]], "OPF User Callback Functions": [[783, "opf-user-callback-functions"]], "Power Flow Derivative Functions": [[783, "power-flow-derivative-functions"]], "LP, QP, MILP & MIQP Solver Functions": [[783, "lp-qp-milp-miqp-solver-functions"]], "Matrix Building Functions": [[783, "matrix-building-functions"]], "Private Feature Detection Functions": [[783, "private-feature-detection-functions"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[783, "legacy-matpower-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[783, "legacy-matpower-test-data"]], "Previous Versions": [[784, "previous-versions"]], "Tests": [[785, "tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[785, "matpower-tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[785, "matpower-test-data"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Technical Notes": [[815, "matpower-technical-notes"]], "[TN1] Auctions and OPFs": [[815, "tn1-auctions-and-opfs"]], "[TN2] Flows/Derivatives": [[815, "tn2-flows-derivatives"]], "[TN3] Flows/Derivatives, Current": [[815, "tn3-flows-derivatives-current"]], "[TN4] Flows/Derivatives, Cartesian": [[815, "tn4-flows-derivatives-cartesian"]], "[TN5] MP-Element": [[815, "tn5-mp-element"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} User\u2019s Manual": [[816, "matpower-user-s-manual"]], "Legacy Framework": [[816, "legacy-framework"]], "New Flexible Framework": [[816, "new-flexible-framework"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Developer\u2019s Manual": [[5, "matpower-developer-s-manual"]], "generate_autodoc_stubs": [[14, "generate-autodoc-stubs"]], "generate_matpower_autodoc": [[15, "generate-matpower-autodoc"]], "generate_source_symlinks": [[16, "generate-source-symlinks"]], "have_feature_lu_vec": [[22, "have-feature-lu-vec"]], "have_feature_mips": [[23, "have-feature-mips"]], "have_feature_pardiso": [[24, "have-feature-pardiso"]], "have_feature_pardiso_legacy": [[25, "have-feature-pardiso-legacy"]], "have_feature_pardiso_object": [[26, "have-feature-pardiso-object"]], "mips": [[27, "mips"]], "mips_example1": [[28, "mips-example1"]], "mips_example2": [[29, "mips-example2"]], "mipsver": [[30, "mipsver"]], "mplinsolve": [[31, "mplinsolve"]], "qps_mips": [[32, "qps-mips"]], "t_mips": [[33, "t-mips"]], "t_mips_pardiso": [[34, "t-mips-pardiso"]], "t_mplinsolve": [[35, "t-mplinsolve"]], "t_qps_mips": [[36, "t-qps-mips"]], "test_mips": [[37, "test-mips"]], "addgen2mpc": [[40, "addgen2mpc"]], "addstorage": [[41, "addstorage"]], "addwind": [[42, "addwind"]], "apply_profile": [[43, "apply-profile"]], "c118swf": [[44, "c118swf"]], "ex_case3a": [[45, "ex-case3a"]], "ex_case3b": [[46, "ex-case3b"]], "ex_contab": [[47, "ex-contab"]], "ex_load_profile": [[48, "ex-load-profile"]], "ex_storage": [[49, "ex-storage"]], "ex_transmat": [[50, "ex-transmat"]], "ex_wind": [[51, "ex-wind"]], "ex_wind_profile": [[52, "ex-wind-profile"]], "ex_wind_profile_d": [[53, "ex-wind-profile-d"]], "ex_wind_uc": [[54, "ex-wind-uc"]], "ex_xgd": [[55, "ex-xgd"]], "ex_xgd_ramp": [[56, "ex-xgd-ramp"]], "ex_xgd_res": [[57, "ex-xgd-res"]], "ex_xgd_uc": [[58, "ex-xgd-uc"]], "filter_ramp_transitions": [[59, "filter-ramp-transitions"]], "getprofiles": [[60, "getprofiles"]], "idx_profile": [[61, "idx-profile"]], "loadgenericdata": [[62, "loadgenericdata"]], "loadmd": [[63, "loadmd"]], "loadstoragedata": [[64, "loadstoragedata"]], "loadxgendata": [[65, "loadxgendata"]], "md_init": [[66, "md-init"]], "most": [[67, "most"]], "most_ex1_ed": [[68, "most-ex1-ed"]], "most_ex2_dcopf": [[69, "most-ex2-dcopf"]], "most_ex3_dcopf_w_uc": [[70, "most-ex3-dcopf-w-uc"]], "most_ex4_dcopf_ss": [[71, "most-ex4-dcopf-ss"]], "most_ex5_mpopf": [[72, "most-ex5-mpopf"]], "most_ex6_uc": [[73, "most-ex6-uc"]], "most_ex7_suc": [[74, "most-ex7-suc"]], "most_summary": [[75, "most-summary"]], "mostver": [[76, "mostver"]], "mpoption_info_most": [[77, "mpoption-info-most"]], "plot_gen": [[78, "plot-gen"]], "plot_storage": [[79, "plot-storage"]], "plot_uc": [[80, "plot-uc"]], "plot_uc_data": [[81, "plot-uc-data"]], "t_case30_most": [[82, "t-case30-most"]], "t_case3_most": [[83, "t-case3-most"]], "t_case_tlmp": [[84, "t-case-tlmp"]], "t_case_tlmp_storage": [[85, "t-case-tlmp-storage"]], "t_most_30b_1_1_0": [[86, "t-most-30b-1-1-0"]], "t_most_30b_1_1_0_uc": [[87, "t-most-30b-1-1-0-uc"]], "t_most_30b_1_1_17": [[88, "t-most-30b-1-1-17"]], "t_most_30b_3_1_0": [[89, "t-most-30b-3-1-0"]], "t_most_30b_3_1_17": [[90, "t-most-30b-3-1-17"]], "t_most_3b_1_1_0": [[91, "t-most-3b-1-1-0"]], "t_most_3b_1_1_2": [[92, "t-most-3b-1-1-2"]], "t_most_3b_3_1_0": [[93, "t-most-3b-3-1-0"]], "t_most_3b_3_1_2": [[94, "t-most-3b-3-1-2"]], "t_most_fixed_res": [[95, "t-most-fixed-res"]], "t_most_mpopf": [[96, "t-most-mpopf"]], "t_most_sp": [[97, "t-most-sp"]], "t_most_spuc": [[98, "t-most-spuc"]], "t_most_suc": [[99, "t-most-suc"]], "t_most_tlmp": [[100, "t-most-tlmp"]], "t_most_uc": [[101, "t-most-uc"]], "t_most_w_ds": [[102, "t-most-w-ds"]], "test_most": [[103, "test-most"]], "uniformwindprofile": [[104, "uniformwindprofile"]], "mp.opt_model": [[107, "mp-opt-model"]], "mp.set_manager": [[108, "mp-set-manager"]], "mp.set_manager_opt_model": [[109, "mp-set-manager-opt-model"]], "mp.sm_lin_constraint": [[110, "mp-sm-lin-constraint"]], "mp.sm_nln_constraint": [[111, "mp-sm-nln-constraint"]], "mp.sm_nln_cost": [[112, "mp-sm-nln-cost"]], "mp.sm_quad_constraint": [[113, "mp-sm-quad-constraint"]], "mp.sm_quad_cost": [[114, "mp-sm-quad-cost"]], "mp.sm_quad_cost_legacy": [[115, "mp-sm-quad-cost-legacy"]], "mp.sm_variable": [[116, "mp-sm-variable"]], "mp_idx_manager": [[117, "mp-idx-manager"]], "opt_model": [[118, "opt-model"]], "artelys_knitro_options": [[119, "artelys-knitro-options"]], "convert_constraint_multipliers": [[120, "convert-constraint-multipliers"]], "convert_lin_constraint": [[121, "convert-lin-constraint"]], "convert_lin_constraint_multipliers": [[122, "convert-lin-constraint-multipliers"]], "convert_quad_constraint": [[123, "convert-quad-constraint"]], "cplex_options": [[124, "cplex-options"]], "glpk_options": [[125, "glpk-options"]], "gurobi_options": [[126, "gurobi-options"]], "gurobiver": [[127, "gurobiver"]], "have_feature_bpmpd": [[128, "have-feature-bpmpd"]], "have_feature_catchme": [[129, "have-feature-catchme"]], "have_feature_clp": [[130, "have-feature-clp"]], "have_feature_cplex": [[131, "have-feature-cplex"]], "have_feature_evalc": [[132, "have-feature-evalc"]], "have_feature_fmincon": [[133, "have-feature-fmincon"]], "have_feature_fmincon_ipm": [[134, "have-feature-fmincon-ipm"]], "have_feature_fsolve": [[135, "have-feature-fsolve"]], "have_feature_glpk": [[136, "have-feature-glpk"]], "have_feature_gurobi": [[137, "have-feature-gurobi"]], "have_feature_highs": [[138, "have-feature-highs"]], "have_feature_intlinprog": [[139, "have-feature-intlinprog"]], "have_feature_ipopt": [[140, "have-feature-ipopt"]], "have_feature_ipopt_auxdata": [[141, "have-feature-ipopt-auxdata"]], "have_feature_isequaln": [[142, "have-feature-isequaln"]], "have_feature_knitro": [[143, "have-feature-knitro"]], "have_feature_knitromatlab": [[144, "have-feature-knitromatlab"]], "have_feature_linprog": [[145, "have-feature-linprog"]], "have_feature_linprog_ds": [[146, "have-feature-linprog-ds"]], "have_feature_mosek": [[147, "have-feature-mosek"]], "have_feature_opti_clp": [[148, "have-feature-opti-clp"]], "have_feature_optim": [[149, "have-feature-optim"]], "have_feature_optimoptions": [[150, "have-feature-optimoptions"]], "have_feature_osqp": [[151, "have-feature-osqp"]], "have_feature_quadprog": [[152, "have-feature-quadprog"]], "have_feature_quadprog_ls": [[153, "have-feature-quadprog-ls"]], "have_feature_sdpt3": [[154, "have-feature-sdpt3"]], "have_feature_sedumi": [[155, "have-feature-sedumi"]], "have_feature_yalmip": [[156, "have-feature-yalmip"]], "highs_options": [[157, "highs-options"]], "highsver": [[158, "highsver"]], "ipopt_options": [[159, "ipopt-options"]], "knitrover": [[160, "knitrover"]], "lp_ex1": [[161, "lp-ex1"]], "milp_ex1": [[162, "milp-ex1"]], "miqps_cplex": [[163, "miqps-cplex"]], "miqps_glpk": [[164, "miqps-glpk"]], "miqps_gurobi": [[165, "miqps-gurobi"]], "miqps_highs": [[166, "miqps-highs"]], "miqps_master": [[167, "miqps-master"]], "miqps_mosek": [[168, "miqps-mosek"]], "miqps_ot": [[169, "miqps-ot"]], "mosek_options": [[170, "mosek-options"]], "mosek_symbcon": [[171, "mosek-symbcon"]], "mp.struct2object": [[172, "mp-struct2object"]], "mpomver": [[173, "mpomver"]], "mpopt2nleqopt": [[174, "mpopt2nleqopt"]], "mpopt2nlpopt": [[175, "mpopt2nlpopt"]], "mpopt2pneopt": [[176, "mpopt2pneopt"]], "mpopt2qcqpopt": [[177, "mpopt2qcqpopt"]], "mpopt2qpopt": [[178, "mpopt2qpopt"]], "nested_struct_copy": [[179, "nested-struct-copy"]], "nleqs_core": [[180, "nleqs-core"]], "nleqs_fd_newton": [[181, "nleqs-fd-newton"]], "nleqs_fsolve": [[182, "nleqs-fsolve"]], "nleqs_gauss_seidel": [[183, "nleqs-gauss-seidel"]], "nleqs_master": [[184, "nleqs-master"]], "nleqs_master_ex1": [[185, "nleqs-master-ex1"]], "nleqs_master_ex2": [[186, "nleqs-master-ex2"]], "nleqs_newton": [[187, "nleqs-newton"]], "nlp_consfcn": [[188, "nlp-consfcn"]], "nlp_costfcn": [[189, "nlp-costfcn"]], "nlp_hessfcn": [[190, "nlp-hessfcn"]], "nlps_fmincon": [[191, "nlps-fmincon"]], "nlps_ipopt": [[192, "nlps-ipopt"]], "nlps_knitro": [[193, "nlps-knitro"]], "nlps_master": [[194, "nlps-master"]], "nlps_master_ex1": [[195, "nlps-master-ex1"]], "nlps_master_ex2": [[196, "nlps-master-ex2"]], "osqp_options": [[197, "osqp-options"]], "osqpver": [[198, "osqpver"]], "pne_callback_default": [[199, "pne-callback-default"]], "pne_callback_nose": [[200, "pne-callback-nose"]], "pne_callback_target_lam": [[201, "pne-callback-target-lam"]], "pne_detect_events": [[202, "pne-detect-events"]], "pne_detected_event": [[203, "pne-detected-event"]], "pne_event_nose": [[204, "pne-event-nose"]], "pne_event_target_lam": [[205, "pne-event-target-lam"]], "pne_ex1": [[206, "pne-ex1"]], "pne_pfcn_arc_len": [[207, "pne-pfcn-arc-len"]], "pne_pfcn_natural": [[208, "pne-pfcn-natural"]], "pne_pfcn_pseudo_arc_len": [[209, "pne-pfcn-pseudo-arc-len"]], "pne_register_callbacks": [[210, "pne-register-callbacks"]], "pne_register_events": [[211, "pne-register-events"]], "pnes_master": [[212, "pnes-master"]], "qcqp_ex1": [[213, "qcqp-ex1"]], "qcqp_nlp_consfcn": [[214, "qcqp-nlp-consfcn"]], "qcqp_nlp_costfcn": [[215, "qcqp-nlp-costfcn"]], "qcqp_nlp_hessfcn": [[216, "qcqp-nlp-hessfcn"]], "qcqps_gurobi": [[217, "qcqps-gurobi"]], "qcqps_knitro": [[218, "qcqps-knitro"]], "qcqps_master": [[219, "qcqps-master"]], "qcqps_nlps": [[220, "qcqps-nlps"]], "qp_ex1": [[221, "qp-ex1"]], "qps_bpmpd": [[222, "qps-bpmpd"]], "qps_clp": [[223, "qps-clp"]], "qps_cplex": [[224, "qps-cplex"]], "qps_glpk": [[225, "qps-glpk"]], "qps_gurobi": [[226, "qps-gurobi"]], "qps_highs": [[227, "qps-highs"]], "qps_ipopt": [[228, "qps-ipopt"]], "qps_knitro": [[229, "qps-knitro"]], "qps_master": [[230, "qps-master"]], "qps_mosek": [[231, "qps-mosek"]], "qps_osqp": [[232, "qps-osqp"]], "qps_ot": [[233, "qps-ot"]], "t_have_fcn": [[234, "t-have-fcn"]], "t_miqps_master": [[235, "t-miqps-master"]], "t_mm_solve_leqs": [[236, "t-mm-solve-leqs"]], "t_mm_solve_miqps": [[237, "t-mm-solve-miqps"]], "t_mm_solve_nleqs": [[238, "t-mm-solve-nleqs"]], "t_mm_solve_nlps": [[239, "t-mm-solve-nlps"]], "t_mm_solve_pne": [[240, "t-mm-solve-pne"]], "t_mm_solve_qcqps": [[241, "t-mm-solve-qcqps"]], "t_mm_solve_qps": [[242, "t-mm-solve-qps"]], "t_mp_opt_model": [[243, "t-mp-opt-model"]], "t_nested_struct_copy": [[244, "t-nested-struct-copy"]], "t_nleqs_master": [[245, "t-nleqs-master"]], "t_nlps_master": [[246, "t-nlps-master"]], "t_om_solve_leqs": [[247, "t-om-solve-leqs"]], "t_om_solve_miqps": [[248, "t-om-solve-miqps"]], "t_om_solve_nleqs": [[249, "t-om-solve-nleqs"]], "t_om_solve_nlps": [[250, "t-om-solve-nlps"]], "t_om_solve_pne": [[251, "t-om-solve-pne"]], "t_om_solve_qcqps": [[252, "t-om-solve-qcqps"]], "t_om_solve_qps": [[253, "t-om-solve-qps"]], "t_opt_model": [[254, "t-opt-model"]], "t_pnes_master": [[255, "t-pnes-master"]], "t_qcqps_master": [[256, "t-qcqps-master"]], "t_qps_master": [[257, "t-qps-master"]], "test_mp_opt_model": [[258, "test-mp-opt-model"]], "debug_assert": [[261, "debug-assert"]], "have_feature": [[262, "have-feature"]], "have_feature_matlab": [[263, "have-feature-matlab"]], "have_feature_octave": [[264, "have-feature-octave"]], "mptestver": [[265, "mptestver"]], "t_begin": [[266, "t-begin"]], "t_debug_assert": [[267, "t-debug-assert"]], "t_end": [[268, "t-end"]], "t_file_match": [[269, "t-file-match"]], "t_have_feature": [[270, "t-have-feature"]], "t_is": [[271, "t-is"]], "t_ok": [[272, "t-ok"]], "t_run_tests": [[273, "t-run-tests"]], "t_skip": [[274, "t-skip"]], "t_str_match": [[275, "t-str-match"]], "t_test_fcns": [[276, "t-test-fcns"]], "test_mptest": [[277, "test-mptest"]], "toggle_debug_mode": [[278, "toggle-debug-mode"]], "mp.NODE_TYPE": [[282, "mp-node-type"]], "mp.case_utils": [[283, "mp-case-utils"]], "mp.cost_table": [[284, "mp-cost-table"]], "mp.cost_table_utils": [[285, "mp-cost-table-utils"]], "mp.data_model": [[286, "mp-data-model"]], "mp.data_model_cpf": [[287, "mp-data-model-cpf"]], "mp.data_model_opf": [[288, "mp-data-model-opf"]], "mp.dm_converter": [[289, "mp-dm-converter"]], "mp.dm_converter_mpc2": [[290, "mp-dm-converter-mpc2"]], "mp.dm_converter_mpc2_legacy": [[291, "mp-dm-converter-mpc2-legacy"]], "mp.dm_element": [[292, "mp-dm-element"]], "mp.dmc_element": [[293, "mp-dmc-element"]], "mp.dmce_branch_mpc2": [[294, "mp-dmce-branch-mpc2"]], "mp.dmce_bus3p_mpc2": [[295, "mp-dmce-bus3p-mpc2"]], "mp.dmce_bus_mpc2": [[296, "mp-dmce-bus-mpc2"]], "mp.dmce_buslink_mpc2": [[297, "mp-dmce-buslink-mpc2"]], "mp.dmce_gen3p_mpc2": [[298, "mp-dmce-gen3p-mpc2"]], "mp.dmce_gen_mpc2": [[299, "mp-dmce-gen-mpc2"]], "mp.dmce_legacy_dcline_mpc2": [[300, "mp-dmce-legacy-dcline-mpc2"]], "mp.dmce_line3p_mpc2": [[301, "mp-dmce-line3p-mpc2"]], "mp.dmce_load3p_mpc2": [[302, "mp-dmce-load3p-mpc2"]], "mp.dmce_load_mpc2": [[303, "mp-dmce-load-mpc2"]], "mp.dmce_reserve_gen_mpc2": [[304, "mp-dmce-reserve-gen-mpc2"]], "mp.dmce_reserve_zone_mpc2": [[305, "mp-dmce-reserve-zone-mpc2"]], "mp.dmce_shunt3p_mpc2": [[306, "mp-dmce-shunt3p-mpc2"]], "mp.dmce_shunt_mpc2": [[307, "mp-dmce-shunt-mpc2"]], "mp.dmce_xfmr3p_mpc2": [[308, "mp-dmce-xfmr3p-mpc2"]], "mp.dme_branch": [[309, "mp-dme-branch"]], "mp.dme_branch_opf": [[310, "mp-dme-branch-opf"]], "mp.dme_bus": [[311, "mp-dme-bus"]], "mp.dme_bus3p": [[312, "mp-dme-bus3p"]], "mp.dme_bus3p_opf": [[313, "mp-dme-bus3p-opf"]], "mp.dme_bus_opf": [[314, "mp-dme-bus-opf"]], "mp.dme_buslink": [[315, "mp-dme-buslink"]], "mp.dme_buslink_opf": [[316, "mp-dme-buslink-opf"]], "mp.dme_gen": [[317, "mp-dme-gen"]], "mp.dme_gen3p": [[318, "mp-dme-gen3p"]], "mp.dme_gen3p_opf": [[319, "mp-dme-gen3p-opf"]], "mp.dme_gen_opf": [[320, "mp-dme-gen-opf"]], "mp.dme_legacy_dcline": [[321, "mp-dme-legacy-dcline"]], "mp.dme_legacy_dcline_opf": [[322, "mp-dme-legacy-dcline-opf"]], "mp.dme_line3p": [[323, "mp-dme-line3p"]], "mp.dme_line3p_opf": [[324, "mp-dme-line3p-opf"]], "mp.dme_load": [[325, "mp-dme-load"]], "mp.dme_load3p": [[326, "mp-dme-load3p"]], "mp.dme_load3p_opf": [[327, "mp-dme-load3p-opf"]], "mp.dme_load_cpf": [[328, "mp-dme-load-cpf"]], "mp.dme_load_opf": [[329, "mp-dme-load-opf"]], "mp.dme_reserve_gen": [[330, "mp-dme-reserve-gen"]], "mp.dme_reserve_zone": [[331, "mp-dme-reserve-zone"]], "mp.dme_shared_opf": [[332, "mp-dme-shared-opf"]], "mp.dme_shunt": [[333, "mp-dme-shunt"]], "mp.dme_shunt3p": [[334, "mp-dme-shunt3p"]], "mp.dme_shunt3p_opf": [[335, "mp-dme-shunt3p-opf"]], "mp.dme_shunt_cpf": [[336, "mp-dme-shunt-cpf"]], "mp.dme_shunt_opf": [[337, "mp-dme-shunt-opf"]], "mp.dme_xfmr3p": [[338, "mp-dme-xfmr3p"]], "mp.dme_xfmr3p_opf": [[339, "mp-dme-xfmr3p-opf"]], "mp.element_container": [[340, "mp-element-container"]], "mp.extension": [[341, "mp-extension"]], "mp.form": [[342, "mp-form"]], "mp.form_ac": [[343, "mp-form-ac"]], "mp.form_acc": [[344, "mp-form-acc"]], "mp.form_acp": [[345, "mp-form-acp"]], "mp.form_dc": [[346, "mp-form-dc"]], "mp.mapped_array": [[347, "mp-mapped-array"]], "mp.math_model": [[348, "mp-math-model"]], "mp.math_model_cpf_acc": [[349, "mp-math-model-cpf-acc"]], "mp.math_model_cpf_acci": [[350, "mp-math-model-cpf-acci"]], "mp.math_model_cpf_accs": [[351, "mp-math-model-cpf-accs"]], "mp.math_model_cpf_acp": [[352, "mp-math-model-cpf-acp"]], "mp.math_model_cpf_acpi": [[353, "mp-math-model-cpf-acpi"]], "mp.math_model_cpf_acps": [[354, "mp-math-model-cpf-acps"]], "mp.math_model_opf": [[355, "mp-math-model-opf"]], "mp.math_model_opf_ac": [[356, "mp-math-model-opf-ac"]], "mp.math_model_opf_acc": [[357, "mp-math-model-opf-acc"]], "mp.math_model_opf_acci": [[358, "mp-math-model-opf-acci"]], "mp.math_model_opf_acci_legacy": [[359, "mp-math-model-opf-acci-legacy"]], "mp.math_model_opf_accs": [[360, "mp-math-model-opf-accs"]], "mp.math_model_opf_accs_legacy": [[361, "mp-math-model-opf-accs-legacy"]], "mp.math_model_opf_acp": [[362, "mp-math-model-opf-acp"]], "mp.math_model_opf_acpi": [[363, "mp-math-model-opf-acpi"]], "mp.math_model_opf_acpi_legacy": [[364, "mp-math-model-opf-acpi-legacy"]], "mp.math_model_opf_acps": [[365, "mp-math-model-opf-acps"]], "mp.math_model_opf_acps_legacy": [[366, "mp-math-model-opf-acps-legacy"]], "mp.math_model_opf_dc": [[367, "mp-math-model-opf-dc"]], "mp.math_model_opf_dc_legacy": [[368, "mp-math-model-opf-dc-legacy"]], "mp.math_model_pf": [[369, "mp-math-model-pf"]], "mp.math_model_pf_ac": [[370, "mp-math-model-pf-ac"]], "mp.math_model_pf_acci": [[371, "mp-math-model-pf-acci"]], "mp.math_model_pf_accs": [[372, "mp-math-model-pf-accs"]], "mp.math_model_pf_acpi": [[373, "mp-math-model-pf-acpi"]], "mp.math_model_pf_acps": [[374, "mp-math-model-pf-acps"]], "mp.math_model_pf_dc": [[375, "mp-math-model-pf-dc"]], "mp.mm_element": [[376, "mp-mm-element"]], "mp.mm_shared_opf_legacy": [[377, "mp-mm-shared-opf-legacy"]], "mp.mm_shared_pfcpf": [[378, "mp-mm-shared-pfcpf"]], "mp.mm_shared_pfcpf_ac": [[379, "mp-mm-shared-pfcpf-ac"]], "mp.mm_shared_pfcpf_ac_i": [[380, "mp-mm-shared-pfcpf-ac-i"]], "mp.mm_shared_pfcpf_acc": [[381, "mp-mm-shared-pfcpf-acc"]], "mp.mm_shared_pfcpf_acci": [[382, "mp-mm-shared-pfcpf-acci"]], "mp.mm_shared_pfcpf_accs": [[383, "mp-mm-shared-pfcpf-accs"]], "mp.mm_shared_pfcpf_acp": [[384, "mp-mm-shared-pfcpf-acp"]], "mp.mm_shared_pfcpf_acpi": [[385, "mp-mm-shared-pfcpf-acpi"]], "mp.mm_shared_pfcpf_acps": [[386, "mp-mm-shared-pfcpf-acps"]], "mp.mm_shared_pfcpf_dc": [[387, "mp-mm-shared-pfcpf-dc"]], "mp.mme_branch": [[388, "mp-mme-branch"]], "mp.mme_branch_opf": [[389, "mp-mme-branch-opf"]], "mp.mme_branch_opf_ac": [[390, "mp-mme-branch-opf-ac"]], "mp.mme_branch_opf_acc": [[391, "mp-mme-branch-opf-acc"]], "mp.mme_branch_opf_acp": [[392, "mp-mme-branch-opf-acp"]], "mp.mme_branch_opf_dc": [[393, "mp-mme-branch-opf-dc"]], "mp.mme_branch_pf_ac": [[394, "mp-mme-branch-pf-ac"]], "mp.mme_branch_pf_dc": [[395, "mp-mme-branch-pf-dc"]], "mp.mme_bus": [[396, "mp-mme-bus"]], "mp.mme_bus3p": [[397, "mp-mme-bus3p"]], "mp.mme_bus3p_opf_acc": [[398, "mp-mme-bus3p-opf-acc"]], "mp.mme_bus3p_opf_acp": [[399, "mp-mme-bus3p-opf-acp"]], "mp.mme_bus_opf_ac": [[400, "mp-mme-bus-opf-ac"]], "mp.mme_bus_opf_acc": [[401, "mp-mme-bus-opf-acc"]], "mp.mme_bus_opf_acp": [[402, "mp-mme-bus-opf-acp"]], "mp.mme_bus_opf_dc": [[403, "mp-mme-bus-opf-dc"]], "mp.mme_bus_pf_ac": [[404, "mp-mme-bus-pf-ac"]], "mp.mme_bus_pf_dc": [[405, "mp-mme-bus-pf-dc"]], "mp.mme_buslink": [[406, "mp-mme-buslink"]], "mp.mme_buslink_opf": [[407, "mp-mme-buslink-opf"]], "mp.mme_buslink_opf_acc": [[408, "mp-mme-buslink-opf-acc"]], "mp.mme_buslink_opf_acp": [[409, "mp-mme-buslink-opf-acp"]], "mp.mme_buslink_pf_ac": [[410, "mp-mme-buslink-pf-ac"]], "mp.mme_buslink_pf_acc": [[411, "mp-mme-buslink-pf-acc"]], "mp.mme_buslink_pf_acp": [[412, "mp-mme-buslink-pf-acp"]], "mp.mme_gen": [[413, "mp-mme-gen"]], "mp.mme_gen3p": [[414, "mp-mme-gen3p"]], "mp.mme_gen3p_opf": [[415, "mp-mme-gen3p-opf"]], "mp.mme_gen_opf": [[416, "mp-mme-gen-opf"]], "mp.mme_gen_opf_ac": [[417, "mp-mme-gen-opf-ac"]], "mp.mme_gen_opf_ac_oval": [[418, "mp-mme-gen-opf-ac-oval"]], "mp.mme_gen_opf_dc": [[419, "mp-mme-gen-opf-dc"]], "mp.mme_gen_pf_ac": [[420, "mp-mme-gen-pf-ac"]], "mp.mme_gen_pf_dc": [[421, "mp-mme-gen-pf-dc"]], "mp.mme_legacy_dcline": [[422, "mp-mme-legacy-dcline"]], "mp.mme_legacy_dcline_opf": [[423, "mp-mme-legacy-dcline-opf"]], "mp.mme_legacy_dcline_opf_ac": [[424, "mp-mme-legacy-dcline-opf-ac"]], "mp.mme_legacy_dcline_opf_dc": [[425, "mp-mme-legacy-dcline-opf-dc"]], "mp.mme_legacy_dcline_pf_ac": [[426, "mp-mme-legacy-dcline-pf-ac"]], "mp.mme_legacy_dcline_pf_dc": [[427, "mp-mme-legacy-dcline-pf-dc"]], "mp.mme_line3p": [[428, "mp-mme-line3p"]], "mp.mme_line3p_opf": [[429, "mp-mme-line3p-opf"]], "mp.mme_load": [[430, "mp-mme-load"]], "mp.mme_load_cpf": [[431, "mp-mme-load-cpf"]], "mp.mme_load_pf_ac": [[432, "mp-mme-load-pf-ac"]], "mp.mme_load_pf_dc": [[433, "mp-mme-load-pf-dc"]], "mp.mme_reserve_gen": [[434, "mp-mme-reserve-gen"]], "mp.mme_reserve_zone": [[435, "mp-mme-reserve-zone"]], "mp.mme_shunt": [[436, "mp-mme-shunt"]], "mp.mme_shunt3p": [[437, "mp-mme-shunt3p"]], "mp.mme_shunt3p_opf": [[438, "mp-mme-shunt3p-opf"]], "mp.mme_shunt_cpf": [[439, "mp-mme-shunt-cpf"]], "mp.mme_shunt_pf_ac": [[440, "mp-mme-shunt-pf-ac"]], "mp.mme_shunt_pf_dc": [[441, "mp-mme-shunt-pf-dc"]], "mp.mme_xfmr3p": [[442, "mp-mme-xfmr3p"]], "mp.mme_xfmr3p_opf": [[443, "mp-mme-xfmr3p-opf"]], "mp.net_model": [[444, "mp-net-model"]], "mp.net_model_ac": [[445, "mp-net-model-ac"]], "mp.net_model_acc": [[446, "mp-net-model-acc"]], "mp.net_model_acp": [[447, "mp-net-model-acp"]], "mp.net_model_dc": [[448, "mp-net-model-dc"]], "mp.nm_element": [[449, "mp-nm-element"]], "mp.nme_branch": [[450, "mp-nme-branch"]], "mp.nme_branch_ac": [[451, "mp-nme-branch-ac"]], "mp.nme_branch_acc": [[452, "mp-nme-branch-acc"]], "mp.nme_branch_acp": [[453, "mp-nme-branch-acp"]], "mp.nme_branch_dc": [[454, "mp-nme-branch-dc"]], "mp.nme_bus": [[455, "mp-nme-bus"]], "mp.nme_bus3p": [[456, "mp-nme-bus3p"]], "mp.nme_bus3p_acc": [[457, "mp-nme-bus3p-acc"]], "mp.nme_bus3p_acp": [[458, "mp-nme-bus3p-acp"]], "mp.nme_bus_acc": [[459, "mp-nme-bus-acc"]], "mp.nme_bus_acp": [[460, "mp-nme-bus-acp"]], "mp.nme_bus_dc": [[461, "mp-nme-bus-dc"]], "mp.nme_buslink": [[462, "mp-nme-buslink"]], "mp.nme_buslink_acc": [[463, "mp-nme-buslink-acc"]], "mp.nme_buslink_acp": [[464, "mp-nme-buslink-acp"]], "mp.nme_gen": [[465, "mp-nme-gen"]], "mp.nme_gen3p": [[466, "mp-nme-gen3p"]], "mp.nme_gen3p_acc": [[467, "mp-nme-gen3p-acc"]], "mp.nme_gen3p_acp": [[468, "mp-nme-gen3p-acp"]], "mp.nme_gen_ac": [[469, "mp-nme-gen-ac"]], "mp.nme_gen_acc": [[470, "mp-nme-gen-acc"]], "mp.nme_gen_acp": [[471, "mp-nme-gen-acp"]], "mp.nme_gen_dc": [[472, "mp-nme-gen-dc"]], "mp.nme_legacy_dcline": [[473, "mp-nme-legacy-dcline"]], "mp.nme_legacy_dcline_ac": [[474, "mp-nme-legacy-dcline-ac"]], "mp.nme_legacy_dcline_acc": [[475, "mp-nme-legacy-dcline-acc"]], "mp.nme_legacy_dcline_acp": [[476, "mp-nme-legacy-dcline-acp"]], "mp.nme_legacy_dcline_dc": [[477, "mp-nme-legacy-dcline-dc"]], "mp.nme_line3p": [[478, "mp-nme-line3p"]], "mp.nme_load": [[479, "mp-nme-load"]], "mp.nme_load3p": [[480, "mp-nme-load3p"]], "mp.nme_load_ac": [[481, "mp-nme-load-ac"]], "mp.nme_load_acc": [[482, "mp-nme-load-acc"]], "mp.nme_load_acp": [[483, "mp-nme-load-acp"]], "mp.nme_load_dc": [[484, "mp-nme-load-dc"]], "mp.nme_shunt": [[485, "mp-nme-shunt"]], "mp.nme_shunt3p": [[486, "mp-nme-shunt3p"]], "mp.nme_shunt_ac": [[487, "mp-nme-shunt-ac"]], "mp.nme_shunt_acc": [[488, "mp-nme-shunt-acc"]], "mp.nme_shunt_acp": [[489, "mp-nme-shunt-acp"]], "mp.nme_shunt_dc": [[490, "mp-nme-shunt-dc"]], "mp.nme_xfmr3p": [[491, "mp-nme-xfmr3p"]], "mp.sm_legacy_cost": [[492, "mp-sm-legacy-cost"]], "mp.task": [[493, "mp-task"]], "mp.task_cpf": [[494, "mp-task-cpf"]], "mp.task_cpf_legacy": [[495, "mp-task-cpf-legacy"]], "mp.task_opf": [[496, "mp-task-opf"]], "mp.task_opf_legacy": [[497, "mp-task-opf-legacy"]], "mp.task_pf": [[498, "mp-task-pf"]], "mp.task_pf_legacy": [[499, "mp-task-pf-legacy"]], "mp.task_shared_legacy": [[500, "mp-task-shared-legacy"]], "mp.xt_3p": [[501, "mp-xt-3p"]], "mp.xt_legacy_dcline": [[502, "mp-xt-legacy-dcline"]], "mp.xt_oval_cap_curve": [[503, "mp-xt-oval-cap-curve"]], "mp.xt_reserves": [[504, "mp-xt-reserves"]], "mp_table": [[505, "mp-table"]], "mp_table_subclass": [[506, "mp-table-subclass"]], "Limitations": [[506, null]], "install_matpower": [[508, "install-matpower"]], "mp.load_dm": [[509, "mp-load-dm"]], "mp_table_class": [[510, "mp-table-class"]], "run_cpf": [[511, "run-cpf"]], "run_mp": [[512, "run-mp"]], "run_opf": [[513, "run-opf"]], "run_pf": [[514, "run-pf"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Reference Manual": [[515, "matpower-reference-manual"]], "opf_model": [[517, "opf-model"]], "add_userfcn": [[518, "add-userfcn"]], "apply_changes": [[519, "apply-changes"]], "bustypes": [[520, "bustypes"]], "calc_branch_angle": [[521, "calc-branch-angle"]], "calc_v_i_sum": [[522, "calc-v-i-sum"]], "calc_v_pq_sum": [[523, "calc-v-pq-sum"]], "calc_v_y_sum": [[524, "calc-v-y-sum"]], "case_info": [[525, "case-info"]], "caseformat": [[526, "caseformat"]], "cdf2mpc": [[527, "cdf2mpc"]], "compare_case": [[528, "compare-case"]], "connected_components": [[529, "connected-components"]], "cpf_corrector": [[530, "cpf-corrector"]], "cpf_current_mpc": [[531, "cpf-current-mpc"]], "cpf_default_callback": [[532, "cpf-default-callback"]], "cpf_detect_events": [[533, "cpf-detect-events"]], "cpf_flim_event": [[534, "cpf-flim-event"]], "cpf_flim_event_cb": [[535, "cpf-flim-event-cb"]], "cpf_nose_event": [[536, "cpf-nose-event"]], "cpf_nose_event_cb": [[537, "cpf-nose-event-cb"]], "cpf_p": [[538, "cpf-p"]], "cpf_p_jac": [[539, "cpf-p-jac"]], "cpf_plim_event": [[540, "cpf-plim-event"]], "cpf_plim_event_cb": [[541, "cpf-plim-event-cb"]], "cpf_predictor": [[542, "cpf-predictor"]], "cpf_qlim_event": [[543, "cpf-qlim-event"]], "cpf_qlim_event_cb": [[544, "cpf-qlim-event-cb"]], "cpf_register_callback": [[545, "cpf-register-callback"]], "cpf_register_event": [[546, "cpf-register-event"]], "cpf_tangent": [[547, "cpf-tangent"]], "cpf_target_lam_event": [[548, "cpf-target-lam-event"]], "cpf_target_lam_event_cb": [[549, "cpf-target-lam-event-cb"]], "cpf_vlim_event": [[550, "cpf-vlim-event"]], "cpf_vlim_event_cb": [[551, "cpf-vlim-event-cb"]], "d2Abr_dV2": [[552, "d2abr-dv2"]], "d2Ibr_dV2": [[553, "d2ibr-dv2"]], "d2Imis_dV2": [[554, "d2imis-dv2"]], "d2Imis_dVdSg": [[555, "d2imis-dvdsg"]], "d2Sbr_dV2": [[556, "d2sbr-dv2"]], "d2Sbus_dV2": [[557, "d2sbus-dv2"]], "dAbr_dV": [[558, "dabr-dv"]], "dIbr_dV": [[559, "dibr-dv"]], "dImis_dV": [[560, "dimis-dv"]], "dSbr_dV": [[561, "dsbr-dv"]], "dSbus_dV": [[562, "dsbus-dv"]], "dcopf": [[563, "dcopf"]], "dcopf_solver": [[564, "dcopf-solver"]], "dcpf": [[565, "dcpf"]], "define_constants": [[566, "define-constants"]], "e2i_data": [[567, "e2i-data"]], "e2i_field": [[568, "e2i-field"]], "ext2int": [[569, "ext2int"]], "extract_islands": [[570, "extract-islands"]], "fdpf": [[571, "fdpf"]], "feval_w_path": [[572, "feval-w-path"]], "find_bridges": [[573, "find-bridges"]], "find_islands": [[574, "find-islands"]], "fmincopf": [[575, "fmincopf"]], "gausspf": [[576, "gausspf"]], "genfuels": [[577, "genfuels"]], "gentypes": [[578, "gentypes"]], "get_losses": [[579, "get-losses"]], "get_reorder": [[580, "get-reorder"]], "hasPQcap": [[581, "haspqcap"]], "have_feature_e4st": [[582, "have-feature-e4st"]], "have_feature_minopf": [[583, "have-feature-minopf"]], "have_feature_most": [[584, "have-feature-most"]], "have_feature_mp_core": [[585, "have-feature-mp-core"]], "have_feature_pdipmopf": [[586, "have-feature-pdipmopf"]], "have_feature_regexp_split": [[587, "have-feature-regexp-split"]], "have_feature_scpdipmopf": [[588, "have-feature-scpdipmopf"]], "have_feature_sdp_pf": [[589, "have-feature-sdp-pf"]], "have_feature_smartmarket": [[590, "have-feature-smartmarket"]], "have_feature_syngrid": [[591, "have-feature-syngrid"]], "have_feature_table": [[592, "have-feature-table"]], "have_feature_tralmopf": [[593, "have-feature-tralmopf"]], "i2e_data": [[594, "i2e-data"]], "i2e_field": [[595, "i2e-field"]], "idx_brch": [[596, "idx-brch"]], "idx_bus": [[597, "idx-bus"]], "idx_cost": [[598, "idx-cost"]], "idx_ct": [[599, "idx-ct"]], "idx_dcline": [[600, "idx-dcline"]], "idx_gen": [[601, "idx-gen"]], "int2ext": [[602, "int2ext"]], "isload": [[603, "isload"]], "load2disp": [[604, "load2disp"]], "loadcase": [[605, "loadcase"]], "loadshed": [[606, "loadshed"]], "makeAang": [[607, "makeaang"]], "makeApq": [[608, "makeapq"]], "makeAvl": [[609, "makeavl"]], "makeAy": [[610, "makeay"]], "makeB": [[611, "makeb"]], "makeBdc": [[612, "makebdc"]], "makeJac": [[613, "makejac"]], "makeLODF": [[614, "makelodf"]], "makePTDF": [[615, "makeptdf"]], "makeSbus": [[616, "makesbus"]], "makeSdzip": [[617, "makesdzip"]], "makeYbus": [[618, "makeybus"]], "make_vcorr": [[619, "make-vcorr"]], "make_zpv": [[620, "make-zpv"]], "margcost": [[621, "margcost"]], "miqps_matpower": [[622, "miqps-matpower"]], "modcost": [[623, "modcost"]], "mpoption": [[624, "mpoption"]], "mpoption_info_clp": [[625, "mpoption-info-clp"]], "mpoption_info_cplex": [[626, "mpoption-info-cplex"]], "mpoption_info_fmincon": [[627, "mpoption-info-fmincon"]], "mpoption_info_glpk": [[628, "mpoption-info-glpk"]], "mpoption_info_gurobi": [[629, "mpoption-info-gurobi"]], "mpoption_info_highs": [[630, "mpoption-info-highs"]], "mpoption_info_intlinprog": [[631, "mpoption-info-intlinprog"]], "mpoption_info_ipopt": [[632, "mpoption-info-ipopt"]], "mpoption_info_knitro": [[633, "mpoption-info-knitro"]], "mpoption_info_linprog": [[634, "mpoption-info-linprog"]], "mpoption_info_mips": [[635, "mpoption-info-mips"]], "mpoption_info_mosek": [[636, "mpoption-info-mosek"]], "mpoption_info_osqp": [[637, "mpoption-info-osqp"]], "mpoption_info_quadprog": [[638, "mpoption-info-quadprog"]], "mpoption_old": [[639, "mpoption-old"]], "mpver": [[640, "mpver"]], "newtonpf": [[641, "newtonpf"]], "newtonpf_I_cart": [[642, "newtonpf-i-cart"]], "newtonpf_I_hybrid": [[643, "newtonpf-i-hybrid"]], "newtonpf_I_polar": [[644, "newtonpf-i-polar"]], "newtonpf_S_cart": [[645, "newtonpf-s-cart"]], "newtonpf_S_hybrid": [[646, "newtonpf-s-hybrid"]], "nlpopf_solver": [[647, "nlpopf-solver"]], "opf": [[648, "opf"]], "opf_args": [[649, "opf-args"]], "opf_branch_ang_fcn": [[650, "opf-branch-ang-fcn"]], "opf_branch_ang_hess": [[651, "opf-branch-ang-hess"]], "opf_branch_flow_fcn": [[652, "opf-branch-flow-fcn"]], "opf_branch_flow_hess": [[653, "opf-branch-flow-hess"]], "opf_current_balance_fcn": [[654, "opf-current-balance-fcn"]], "opf_current_balance_hess": [[655, "opf-current-balance-hess"]], "opf_execute": [[656, "opf-execute"]], "opf_gen_cost_fcn": [[657, "opf-gen-cost-fcn"]], "opf_legacy_user_cost_fcn": [[658, "opf-legacy-user-cost-fcn"]], "opf_nle_fcn1": [[659, "opf-nle-fcn1"]], "opf_nle_hess1": [[660, "opf-nle-hess1"]], "opf_power_balance_fcn": [[661, "opf-power-balance-fcn"]], "opf_power_balance_hess": [[662, "opf-power-balance-hess"]], "opf_setup": [[663, "opf-setup"]], "opf_veq_fcn": [[664, "opf-veq-fcn"]], "opf_veq_hess": [[665, "opf-veq-hess"]], "opf_vlim_fcn": [[666, "opf-vlim-fcn"]], "opf_vlim_hess": [[667, "opf-vlim-hess"]], "opf_vref_fcn": [[668, "opf-vref-fcn"]], "opf_vref_hess": [[669, "opf-vref-hess"]], "order_radial": [[670, "order-radial"]], "pfsoln": [[671, "pfsoln"]], "poly2pwl": [[672, "poly2pwl"]], "polycost": [[673, "polycost"]], "pqcost": [[674, "pqcost"]], "printpf": [[675, "printpf"]], "psse2mpc": [[676, "psse2mpc"]], "psse_convert": [[677, "psse-convert"]], "psse_convert_hvdc": [[678, "psse-convert-hvdc"]], "psse_convert_xfmr": [[679, "psse-convert-xfmr"]], "psse_parse": [[680, "psse-parse"]], "psse_parse_line": [[681, "psse-parse-line"]], "psse_parse_section": [[682, "psse-parse-section"]], "psse_read": [[683, "psse-read"]], "qps_matpower": [[684, "qps-matpower"]], "radial_pf": [[685, "radial-pf"]], "remove_userfcn": [[686, "remove-userfcn"]], "run_userfcn": [[687, "run-userfcn"]], "runcpf": [[688, "runcpf"]], "rundcopf": [[689, "rundcopf"]], "rundcpf": [[690, "rundcpf"]], "runduopf": [[691, "runduopf"]], "runopf": [[692, "runopf"]], "runopf_w_res": [[693, "runopf-w-res"]], "runpf": [[694, "runpf"]], "runuopf": [[695, "runuopf"]], "save2psse": [[696, "save2psse"]], "savecase": [[697, "savecase"]], "savechgtab": [[698, "savechgtab"]], "scale_load": [[699, "scale-load"]], "set_reorder": [[700, "set-reorder"]], "t_apply_changes": [[701, "t-apply-changes"]], "t_auction_case": [[702, "t-auction-case"]], "t_auction_minopf": [[703, "t-auction-minopf"]], "t_auction_mips": [[704, "t-auction-mips"]], "t_auction_tspopf_pdipm": [[705, "t-auction-tspopf-pdipm"]], "t_case30_userfcns": [[706, "t-case30-userfcns"]], "t_case9_dcline": [[707, "t-case9-dcline"]], "t_case9_opf": [[708, "t-case9-opf"]], "t_case9_opfv2": [[709, "t-case9-opfv2"]], "t_case9_pf": [[710, "t-case9-pf"]], "t_case9_pfv2": [[711, "t-case9-pfv2"]], "t_case9_save2psse": [[712, "t-case9-save2psse"]], "t_case_ext": [[713, "t-case-ext"]], "t_case_int": [[714, "t-case-int"]], "t_chgtab": [[715, "t-chgtab"]], "t_cpf": [[716, "t-cpf"]], "t_cpf_cb1": [[717, "t-cpf-cb1"]], "t_cpf_cb2": [[718, "t-cpf-cb2"]], "t_dcline": [[719, "t-dcline"]], "t_ext2int2ext": [[720, "t-ext2int2ext"]], "t_feval_w_path": [[721, "t-feval-w-path"]], "t_get_losses": [[722, "t-get-losses"]], "t_hasPQcap": [[723, "t-haspqcap"]], "t_hessian": [[724, "t-hessian"]], "t_islands": [[725, "t-islands"]], "t_jacobian": [[726, "t-jacobian"]], "t_load2disp": [[727, "t-load2disp"]], "t_loadcase": [[728, "t-loadcase"]], "t_makeLODF": [[729, "t-makelodf"]], "t_makePTDF": [[730, "t-makeptdf"]], "t_margcost": [[731, "t-margcost"]], "t_miqps_matpower": [[732, "t-miqps-matpower"]], "t_modcost": [[733, "t-modcost"]], "t_mpoption": [[734, "t-mpoption"]], "t_mpoption_ov": [[735, "t-mpoption-ov"]], "t_off2case": [[736, "t-off2case"]], "t_opf_dc_bpmpd": [[737, "t-opf-dc-bpmpd"]], "t_opf_dc_clp": [[738, "t-opf-dc-clp"]], "t_opf_dc_cplex": [[739, "t-opf-dc-cplex"]], "t_opf_dc_default": [[740, "t-opf-dc-default"]], "t_opf_dc_glpk": [[741, "t-opf-dc-glpk"]], "t_opf_dc_gurobi": [[742, "t-opf-dc-gurobi"]], "t_opf_dc_highs": [[743, "t-opf-dc-highs"]], "t_opf_dc_ipopt": [[744, "t-opf-dc-ipopt"]], "t_opf_dc_mips": [[745, "t-opf-dc-mips"]], "t_opf_dc_mips_sc": [[746, "t-opf-dc-mips-sc"]], "t_opf_dc_mosek": [[747, "t-opf-dc-mosek"]], "t_opf_dc_osqp": [[748, "t-opf-dc-osqp"]], "t_opf_dc_ot": [[749, "t-opf-dc-ot"]], "t_opf_default": [[750, "t-opf-default"]], "t_opf_fmincon": [[751, "t-opf-fmincon"]], "t_opf_ipopt": [[752, "t-opf-ipopt"]], "t_opf_knitro": [[753, "t-opf-knitro"]], "t_opf_minopf": [[754, "t-opf-minopf"]], "t_opf_mips": [[755, "t-opf-mips"]], "t_opf_model": [[756, "t-opf-model"]], "t_opf_softlims": [[757, "t-opf-softlims"]], "t_opf_tspopf_pdipm": [[758, "t-opf-tspopf-pdipm"]], "t_opf_tspopf_scpdipm": [[759, "t-opf-tspopf-scpdipm"]], "t_opf_tspopf_tralm": [[760, "t-opf-tspopf-tralm"]], "t_opf_userfcns": [[761, "t-opf-userfcns"]], "t_pf_ac": [[762, "t-pf-ac"]], "t_pf_dc": [[763, "t-pf-dc"]], "t_pf_radial": [[764, "t-pf-radial"]], "t_printpf": [[765, "t-printpf"]], "t_psse": [[766, "t-psse"]], "t_qps_matpower": [[767, "t-qps-matpower"]], "t_runmarket": [[768, "t-runmarket"]], "t_runopf_w_res": [[769, "t-runopf-w-res"]], "t_scale_load": [[770, "t-scale-load"]], "t_total_load": [[771, "t-total-load"]], "t_totcost": [[772, "t-totcost"]], "t_vdep_load": [[773, "t-vdep-load"]], "toggle_dcline": [[774, "toggle-dcline"]], "toggle_iflims": [[775, "toggle-iflims"]], "toggle_reserves": [[776, "toggle-reserves"]], "toggle_softlims": [[777, "toggle-softlims"]], "total_load": [[778, "total-load"]], "totcost": [[779, "totcost"]], "uopf": [[780, "uopf"]], "update_mupq": [[781, "update-mupq"]], "zgausspf": [[782, "zgausspf"]], "mp_foo_table": [[786, "mp-foo-table"]], "t_case3p_a": [[787, "t-case3p-a"]], "t_case3p_b": [[788, "t-case3p-b"]], "t_case3p_c": [[789, "t-case3p-c"]], "t_case3p_d": [[790, "t-case3p-d"]], "t_case3p_e": [[791, "t-case3p-e"]], "t_case3p_f": [[792, "t-case3p-f"]], "t_case3p_g": [[793, "t-case3p-g"]], "t_case3p_h": [[794, "t-case3p-h"]], "t_case9_gizmo": [[795, "t-case9-gizmo"]], "t_convert_1p_to_3p": [[796, "t-convert-1p-to-3p"]], "t_dmc_element": [[797, "t-dmc-element"]], "t_mp_data_model": [[798, "t-mp-data-model"]], "t_mp_dm_converter_mpc2": [[799, "t-mp-dm-converter-mpc2"]], "t_mp_mapped_array": [[800, "t-mp-mapped-array"]], "t_mp_table": [[801, "t-mp-table"]], "t_mpxt_legacy_dcline": [[802, "t-mpxt-legacy-dcline"]], "t_mpxt_reserves": [[803, "t-mpxt-reserves"]], "t_nm_element": [[804, "t-nm-element"]], "t_node_test": [[805, "t-node-test"]], "t_port_inj_current_acc": [[806, "t-port-inj-current-acc"]], "t_port_inj_current_acp": [[807, "t-port-inj-current-acp"]], "t_port_inj_power_acc": [[808, "t-port-inj-power-acc"]], "t_port_inj_power_acp": [[809, "t-port-inj-power-acp"]], "t_pretty_print": [[810, "t-pretty-print"]], "t_run_mp": [[811, "t-run-mp"]], "t_run_mp_3p": [[812, "t-run-mp-3p"]], "t_run_opf_default": [[813, "t-run-opf-default"]], "test_matpower": [[814, "test-matpower"]]}, "indexentries": {"generate_autodoc_stubs() (built-in function)": [[14, "generate_autodoc_stubs"]], "generate_matpower_autodoc() (built-in function)": [[15, "generate_matpower_autodoc"]], "generate_source_symlinks() (built-in function)": [[16, "generate_source_symlinks"]], "have_feature_lu_vec() (built-in function)": [[22, "have_feature_lu_vec"]], "have_feature_mips() (built-in function)": [[23, "have_feature_mips"]], "have_feature_pardiso() (built-in function)": [[24, "have_feature_pardiso"]], "have_feature_pardiso_legacy() (built-in function)": [[25, "have_feature_pardiso_legacy"]], "have_feature_pardiso_object() (built-in function)": [[26, "have_feature_pardiso_object"]], "mips() (in module mips)": [[27, "mips.mips"]], "mips_example1() (built-in function)": [[28, "mips_example1"]], "mips_example2() (built-in function)": [[29, "mips_example2"]], "mipsver() (built-in function)": [[30, "mipsver"]], "mplinsolve() (built-in function)": [[31, "mplinsolve"]], "qps_mips() (built-in function)": [[32, "qps_mips"]], "t_mips() (built-in function)": [[33, "t_mips"]], "t_mips_pardiso() (built-in function)": [[34, "t_mips_pardiso"]], "t_mplinsolve() (built-in function)": [[35, "t_mplinsolve"]], "t_qps_mips() (built-in function)": [[36, "t_qps_mips"]], "test_mips() (built-in function)": [[37, "test_mips"]], "addgen2mpc() (built-in function)": [[40, "addgen2mpc"]], "addstorage() (built-in function)": [[41, "addstorage"]], "addwind() (built-in function)": [[42, "addwind"]], "apply_profile() (built-in function)": [[43, "apply_profile"]], "c118swf() (built-in function)": [[44, "c118swf"]], "ex_case3a() (built-in function)": [[45, "ex_case3a"]], "ex_case3b() (built-in function)": [[46, "ex_case3b"]], "ex_contab() (built-in function)": [[47, "ex_contab"]], "ex_load_profile() (built-in function)": [[48, "ex_load_profile"]], "ex_storage() (built-in function)": [[49, "ex_storage"]], "ex_transmat() (built-in function)": [[50, "ex_transmat"]], "ex_wind() (built-in function)": [[51, "ex_wind"]], "ex_wind_profile() (built-in function)": [[52, "ex_wind_profile"]], "ex_wind_profile_d() (built-in function)": [[53, "ex_wind_profile_d"]], "ex_wind_uc() (built-in function)": [[54, "ex_wind_uc"]], "ex_xgd() (built-in function)": [[55, "ex_xgd"]], "ex_xgd_ramp() (built-in function)": [[56, "ex_xgd_ramp"]], "ex_xgd_res() (built-in function)": [[57, "ex_xgd_res"]], "ex_xgd_uc() (built-in function)": [[58, "ex_xgd_uc"]], "filter_ramp_transitions() (built-in function)": [[59, "filter_ramp_transitions"]], "getprofiles() (built-in function)": [[60, "getprofiles"]], "idx_profile() (built-in function)": [[61, "idx_profile"]], "loadgenericdata() (built-in function)": [[62, "loadgenericdata"]], "loadmd() (built-in function)": [[63, "loadmd"]], "loadstoragedata() (built-in function)": [[64, "loadstoragedata"]], "loadxgendata() (built-in function)": [[65, "loadxgendata"]], "md_init() (built-in function)": [[66, "md_init"]], "most() (in module most)": [[67, "most.most"]], "most_ex1_ed() (built-in function)": [[68, "most_ex1_ed"]], "most_ex2_dcopf() (built-in function)": [[69, "most_ex2_dcopf"]], "most_ex3_dcopf_w_uc() (built-in function)": [[70, "most_ex3_dcopf_w_uc"]], "most_ex4_dcopf_ss() (built-in function)": [[71, "most_ex4_dcopf_ss"]], "most_ex5_mpopf() (built-in function)": [[72, "most_ex5_mpopf"]], "most_ex6_uc() (built-in function)": [[73, "most_ex6_uc"]], "most_ex7_suc() (built-in function)": [[74, "most_ex7_suc"]], "most_summary() (built-in function)": [[75, "most_summary"]], "mostver() (built-in function)": [[76, "mostver"]], "mpoption_info_most() (built-in function)": [[77, "mpoption_info_most"]], "plot_gen() (built-in function)": [[78, "plot_gen"]], "plot_storage() (built-in function)": [[79, "plot_storage"]], "plot_uc() (built-in function)": [[80, "plot_uc"]], "plot_uc_data() (built-in function)": [[81, "plot_uc_data"]], "t_case30_most() (built-in function)": [[82, "t_case30_most"]], "t_case3_most() (built-in function)": [[83, "t_case3_most"]], "t_case_tlmp() (built-in function)": [[84, "t_case_tlmp"]], "t_case_tlmp_storage() (built-in function)": [[85, "t_case_tlmp_storage"]], "t_most_30b_1_1_0() (built-in function)": [[86, "t_most_30b_1_1_0"]], "t_most_30b_1_1_0_uc() (built-in function)": [[87, "t_most_30b_1_1_0_uc"]], "t_most_30b_1_1_17() (built-in function)": [[88, "t_most_30b_1_1_17"]], "t_most_30b_3_1_0() (built-in function)": [[89, "t_most_30b_3_1_0"]], "t_most_30b_3_1_17() (built-in function)": [[90, "t_most_30b_3_1_17"]], "t_most_3b_1_1_0() (built-in function)": [[91, "t_most_3b_1_1_0"]], "t_most_3b_1_1_2() (built-in function)": [[92, "t_most_3b_1_1_2"]], "t_most_3b_3_1_0() (built-in function)": [[93, "t_most_3b_3_1_0"]], "t_most_3b_3_1_2() (built-in function)": [[94, "t_most_3b_3_1_2"]], "t_most_fixed_res() (built-in function)": [[95, "t_most_fixed_res"]], "t_most_mpopf() (built-in function)": [[96, "t_most_mpopf"]], "t_most_sp() (built-in function)": [[97, "t_most_sp"]], "t_most_spuc() (built-in function)": [[98, "t_most_spuc"]], "t_most_suc() (built-in function)": [[99, "t_most_suc"]], "t_most_tlmp() (built-in function)": [[100, "t_most_tlmp"]], "t_most_uc() (built-in function)": [[101, "t_most_uc"]], "t_most_w_ds() (built-in function)": [[102, "t_most_w_ds"]], "test_most() (built-in function)": [[103, "test_most"]], "uniformwindprofile() (built-in function)": [[104, "uniformwindprofile"]], "copy() (mp.opt_model method)": [[107, "mp.opt_model.copy"]], "display() (mp.opt_model method)": [[107, "mp.opt_model.display"]], "display_footer() (mp.opt_model method)": [[107, "mp.opt_model.display_footer"]], "display_header() (mp.opt_model method)": [[107, "mp.opt_model.display_header"]], "display_soln() (mp.opt_model method)": [[107, "mp.opt_model.display_soln"]], "from_struct() (mp.opt_model method)": [[107, "mp.opt_model.from_struct"]], "get_idx() (mp.opt_model method)": [[107, "mp.opt_model.get_idx"]], "get_set_types() (mp.opt_model method)": [[107, "mp.opt_model.get_set_types"]], "get_userdata() (mp.opt_model method)": [[107, "mp.opt_model.get_userdata"]], "has_parsed_soln() (mp.opt_model method)": [[107, "mp.opt_model.has_parsed_soln"]], "is_mixed_integer() (mp.opt_model method)": [[107, "mp.opt_model.is_mixed_integer"]], "is_solved() (mp.opt_model method)": [[107, "mp.opt_model.is_solved"]], "lin (mp.opt_model attribute)": [[107, "mp.opt_model.lin"]], "nlc (mp.opt_model attribute)": [[107, "mp.opt_model.nlc"]], "nle (mp.opt_model attribute)": [[107, "mp.opt_model.nle"]], "nli (mp.opt_model attribute)": [[107, "mp.opt_model.nli"]], "opt_model (class in mp)": [[107, "mp.opt_model"]], "opt_model() (mp.opt_model method)": [[107, "mp.opt_model.opt_model"]], "parse_soln() (mp.opt_model method)": [[107, "mp.opt_model.parse_soln"]], "prob_type (mp.opt_model attribute)": [[107, "mp.opt_model.prob_type"]], "problem_type() (mp.opt_model method)": [[107, "mp.opt_model.problem_type"]], "qcn (mp.opt_model attribute)": [[107, "mp.opt_model.qcn"]], "qdc (mp.opt_model attribute)": [[107, "mp.opt_model.qdc"]], "soln (mp.opt_model attribute)": [[107, "mp.opt_model.soln"]], "solve() (mp.opt_model method)": [[107, "mp.opt_model.solve"]], "to_struct() (mp.opt_model method)": [[107, "mp.opt_model.to_struct"]], "userdata (mp.opt_model attribute)": [[107, "mp.opt_model.userdata"]], "var (mp.opt_model attribute)": [[107, "mp.opt_model.var"]], "n (mp.set_manager attribute)": [[108, "mp.set_manager.N"]], "ns (mp.set_manager attribute)": [[108, "mp.set_manager.NS"]], "add() (mp.set_manager method)": [[108, "mp.set_manager.add"]], "copy() (mp.set_manager method)": [[108, "mp.set_manager.copy"]], "data (mp.set_manager attribute)": [[108, "mp.set_manager.data"]], "describe_idx() (mp.set_manager method)": [[108, "mp.set_manager.describe_idx"]], "display() (mp.set_manager method)": [[108, "mp.set_manager.display"]], "from_struct() (mp.set_manager method)": [[108, "mp.set_manager.from_struct"]], "get_n() (mp.set_manager method)": [[108, "mp.set_manager.get_N"]], "idx (mp.set_manager attribute)": [[108, "mp.set_manager.idx"]], "init_indexed_name() (mp.set_manager method)": [[108, "mp.set_manager.init_indexed_name"]], "label (mp.set_manager attribute)": [[108, "mp.set_manager.label"]], "order (mp.set_manager attribute)": [[108, "mp.set_manager.order"]], "set_manager (class in mp)": [[108, "mp.set_manager"]], "set_manager() (mp.set_manager method)": [[108, "mp.set_manager.set_manager"]], "set_type_idx_map() (mp.set_manager method)": [[108, "mp.set_manager.set_type_idx_map"]], "to_struct() (mp.set_manager method)": [[108, "mp.set_manager.to_struct"]], "display_soln() (mp.set_manager_opt_model method)": [[109, "mp.set_manager_opt_model.display_soln"]], "has_parsed_soln() (mp.set_manager_opt_model method)": [[109, "mp.set_manager_opt_model.has_parsed_soln"]], "params() (mp.set_manager_opt_model method)": [[109, "mp.set_manager_opt_model.params"]], "parse_soln() (mp.set_manager_opt_model method)": [[109, "mp.set_manager_opt_model.parse_soln"]], "set_manager_opt_model (class in mp)": [[109, "mp.set_manager_opt_model"]], "set_manager_opt_model() (mp.set_manager_opt_model method)": [[109, "mp.set_manager_opt_model.set_manager_opt_model"]], "set_params() (mp.set_manager_opt_model method)": [[109, "mp.set_manager_opt_model.set_params"]], "soln (mp.set_manager_opt_model attribute)": [[109, "mp.set_manager_opt_model.soln"]], "add() (mp.sm_lin_constraint method)": [[110, "mp.sm_lin_constraint.add"]], "cache (mp.sm_lin_constraint attribute)": [[110, "mp.sm_lin_constraint.cache"]], "display_soln() (mp.sm_lin_constraint method)": [[110, "mp.sm_lin_constraint.display_soln"]], "eval() (mp.sm_lin_constraint method)": [[110, "mp.sm_lin_constraint.eval"]], "get_soln() (mp.sm_lin_constraint method)": [[110, "mp.sm_lin_constraint.get_soln"]], "params() (mp.sm_lin_constraint method)": [[110, "mp.sm_lin_constraint.params"]], "parse_soln() (mp.sm_lin_constraint method)": [[110, "mp.sm_lin_constraint.parse_soln"]], "set_params() (mp.sm_lin_constraint method)": [[110, "mp.sm_lin_constraint.set_params"]], "sm_lin_constraint (class in mp)": [[110, "mp.sm_lin_constraint"]], "sm_lin_constraint() (mp.sm_lin_constraint method)": [[110, "mp.sm_lin_constraint.sm_lin_constraint"]], "add() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.add"]], "display_soln() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.display_soln"]], "eval() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.eval"]], "eval_hess() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.eval_hess"]], "get_soln() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.get_soln"]], "params() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.params"]], "parse_soln() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.parse_soln"]], "set_params() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.set_params"]], "sm_nln_constraint (class in mp)": [[111, "mp.sm_nln_constraint"]], "sm_nln_constraint() (mp.sm_nln_constraint method)": [[111, "mp.sm_nln_constraint.sm_nln_constraint"]], "add() (mp.sm_nln_cost method)": [[112, "mp.sm_nln_cost.add"]], "display_soln() (mp.sm_nln_cost method)": [[112, "mp.sm_nln_cost.display_soln"]], "eval() (mp.sm_nln_cost method)": [[112, "mp.sm_nln_cost.eval"]], "get_soln() (mp.sm_nln_cost method)": [[112, "mp.sm_nln_cost.get_soln"]], "params() (mp.sm_nln_cost method)": [[112, "mp.sm_nln_cost.params"]], "set_params() (mp.sm_nln_cost method)": [[112, "mp.sm_nln_cost.set_params"]], "sm_nln_cost (class in mp)": [[112, "mp.sm_nln_cost"]], "sm_nln_cost() (mp.sm_nln_cost method)": [[112, "mp.sm_nln_cost.sm_nln_cost"]], "add() (mp.sm_quad_constraint method)": [[113, "mp.sm_quad_constraint.add"]], "blkprod2vertcat() (mp.sm_quad_constraint static method)": [[113, "mp.sm_quad_constraint.blkprod2vertcat"]], "cache (mp.sm_quad_constraint attribute)": [[113, "mp.sm_quad_constraint.cache"]], "display_soln() (mp.sm_quad_constraint method)": [[113, "mp.sm_quad_constraint.display_soln"]], "eval() (mp.sm_quad_constraint method)": [[113, "mp.sm_quad_constraint.eval"]], "get_soln() (mp.sm_quad_constraint method)": [[113, "mp.sm_quad_constraint.get_soln"]], "params() (mp.sm_quad_constraint method)": [[113, "mp.sm_quad_constraint.params"]], "parse_soln() (mp.sm_quad_constraint method)": [[113, "mp.sm_quad_constraint.parse_soln"]], "set_params() (mp.sm_quad_constraint method)": [[113, "mp.sm_quad_constraint.set_params"]], "sm_quad_constraint (class in mp)": [[113, "mp.sm_quad_constraint"]], "sm_quad_constraint() (mp.sm_quad_constraint method)": [[113, "mp.sm_quad_constraint.sm_quad_constraint"]], "add() (mp.sm_quad_cost method)": [[114, "mp.sm_quad_cost.add"]], "cache (mp.sm_quad_cost attribute)": [[114, "mp.sm_quad_cost.cache"]], "copy() (mp.sm_quad_cost method)": [[114, "mp.sm_quad_cost.copy"]], "display_soln() (mp.sm_quad_cost method)": [[114, "mp.sm_quad_cost.display_soln"]], "eval() (mp.sm_quad_cost method)": [[114, "mp.sm_quad_cost.eval"]], "get_soln() (mp.sm_quad_cost method)": [[114, "mp.sm_quad_cost.get_soln"]], "params() (mp.sm_quad_cost method)": [[114, "mp.sm_quad_cost.params"]], "set_params() (mp.sm_quad_cost method)": [[114, "mp.sm_quad_cost.set_params"]], "sm_quad_cost (class in mp)": [[114, "mp.sm_quad_cost"]], "sm_quad_cost() (mp.sm_quad_cost method)": [[114, "mp.sm_quad_cost.sm_quad_cost"]], "add() (mp.sm_quad_cost_legacy method)": [[115, "mp.sm_quad_cost_legacy.add"]], "cache (mp.sm_quad_cost_legacy attribute)": [[115, "mp.sm_quad_cost_legacy.cache"]], "copy() (mp.sm_quad_cost_legacy method)": [[115, "mp.sm_quad_cost_legacy.copy"]], "display_soln() (mp.sm_quad_cost_legacy method)": [[115, "mp.sm_quad_cost_legacy.display_soln"]], "eval() (mp.sm_quad_cost_legacy method)": [[115, "mp.sm_quad_cost_legacy.eval"]], "get_soln() (mp.sm_quad_cost_legacy method)": [[115, "mp.sm_quad_cost_legacy.get_soln"]], "params() (mp.sm_quad_cost_legacy method)": [[115, "mp.sm_quad_cost_legacy.params"]], "set_params() (mp.sm_quad_cost_legacy method)": [[115, "mp.sm_quad_cost_legacy.set_params"]], "sm_quad_cost_legacy (class in mp)": [[115, "mp.sm_quad_cost_legacy"]], "sm_quad_cost_legacy() (mp.sm_quad_cost_legacy method)": [[115, "mp.sm_quad_cost_legacy.sm_quad_cost_legacy"]], "add() (mp.sm_variable method)": [[116, "mp.sm_variable.add"]], "cache (mp.sm_variable attribute)": [[116, "mp.sm_variable.cache"]], "display_soln() (mp.sm_variable method)": [[116, "mp.sm_variable.display_soln"]], "get_soln() (mp.sm_variable method)": [[116, "mp.sm_variable.get_soln"]], "params() (mp.sm_variable method)": [[116, "mp.sm_variable.params"]], "parse_soln() (mp.sm_variable method)": [[116, "mp.sm_variable.parse_soln"]], "set_params() (mp.sm_variable method)": [[116, "mp.sm_variable.set_params"]], "sm_variable (class in mp)": [[116, "mp.sm_variable"]], "sm_variable() (mp.sm_variable method)": [[116, "mp.sm_variable.sm_variable"]], "varsets_cell2struct() (mp.sm_variable static method)": [[116, "mp.sm_variable.varsets_cell2struct"]], "varsets_idx() (mp.sm_variable method)": [[116, "mp.sm_variable.varsets_idx"]], "varsets_len() (mp.sm_variable method)": [[116, "mp.sm_variable.varsets_len"]], "varsets_x() (mp.sm_variable method)": [[116, "mp.sm_variable.varsets_x"]], "add_named_set() (mp_idx_manager method)": [[117, "mp_idx_manager.add_named_set"]], "copy() (mp_idx_manager method)": [[117, "mp_idx_manager.copy"]], "describe_idx() (mp_idx_manager method)": [[117, "mp_idx_manager.describe_idx"]], "display_set() (mp_idx_manager method)": [[117, "mp_idx_manager.display_set"]], "get() (mp_idx_manager method)": [[117, "mp_idx_manager.get"]], "getn() (mp_idx_manager method)": [[117, "mp_idx_manager.getN"]], "get_idx() (mp_idx_manager method)": [[117, "mp_idx_manager.get_idx"]], "get_userdata() (mp_idx_manager method)": [[117, "mp_idx_manager.get_userdata"]], "init_indexed_name() (mp_idx_manager method)": [[117, "mp_idx_manager.init_indexed_name"]], "init_set_types() (mp_idx_manager method)": [[117, "mp_idx_manager.init_set_types"]], "mp_idx_manager (built-in class)": [[117, "mp_idx_manager"]], "mp_idx_manager() (mp_idx_manager method)": [[117, "mp_idx_manager.mp_idx_manager"]], "set_type_idx_map() (mp_idx_manager method)": [[117, "mp_idx_manager.set_type_idx_map"]], "valid_named_set_type() (mp_idx_manager method)": [[117, "mp_idx_manager.valid_named_set_type"]], "add_lin_constraint() (opt_model method)": [[118, "opt_model.add_lin_constraint"]], "add_nln_constraint() (opt_model method)": [[118, "opt_model.add_nln_constraint"]], "add_nln_cost() (opt_model method)": [[118, "opt_model.add_nln_cost"]], "add_quad_cost() (opt_model method)": [[118, "opt_model.add_quad_cost"]], "add_var() (opt_model method)": [[118, "opt_model.add_var"]], "copy() (opt_model method)": [[118, "opt_model.copy"]], "def_set_types() (opt_model method)": [[118, "opt_model.def_set_types"]], "display() (opt_model method)": [[118, "opt_model.display"]], "display_soln() (opt_model method)": [[118, "opt_model.display_soln"]], "eval_lin_constraint() (opt_model method)": [[118, "opt_model.eval_lin_constraint"]], "eval_nln_constraint() (opt_model method)": [[118, "opt_model.eval_nln_constraint"]], "eval_nln_constraint_hess() (opt_model method)": [[118, "opt_model.eval_nln_constraint_hess"]], "eval_nln_cost() (opt_model method)": [[118, "opt_model.eval_nln_cost"]], "eval_quad_cost() (opt_model method)": [[118, "opt_model.eval_quad_cost"]], "from_struct() (opt_model method)": [[118, "opt_model.from_struct"]], "get_idx() (opt_model method)": [[118, "opt_model.get_idx"]], "get_soln() (opt_model method)": [[118, "opt_model.get_soln"]], "has_parsed_soln() (opt_model method)": [[118, "opt_model.has_parsed_soln"]], "init_indexed_name() (opt_model method)": [[118, "opt_model.init_indexed_name"]], "is_mixed_integer() (opt_model method)": [[118, "opt_model.is_mixed_integer"]], "is_solved() (opt_model method)": [[118, "opt_model.is_solved"]], "lin (opt_model attribute)": [[118, "opt_model.lin"]], "nlc (opt_model attribute)": [[118, "opt_model.nlc"]], "nle (opt_model attribute)": [[118, "opt_model.nle"]], "nli (opt_model attribute)": [[118, "opt_model.nli"]], "opt_model (built-in class)": [[118, "opt_model"]], "opt_model() (opt_model method)": [[118, "opt_model.opt_model"]], "params_lin_constraint() (opt_model method)": [[118, "opt_model.params_lin_constraint"]], "params_nln_constraint() (opt_model method)": [[118, "opt_model.params_nln_constraint"]], "params_nln_cost() (opt_model method)": [[118, "opt_model.params_nln_cost"]], "params_quad_cost() (opt_model method)": [[118, "opt_model.params_quad_cost"]], "params_var() (opt_model method)": [[118, "opt_model.params_var"]], "parse_soln() (opt_model method)": [[118, "opt_model.parse_soln"]], "prob_type (opt_model attribute)": [[118, "opt_model.prob_type"]], "problem_type() (opt_model method)": [[118, "opt_model.problem_type"]], "qcn (opt_model attribute)": [[118, "opt_model.qcn"]], "qdc (opt_model attribute)": [[118, "opt_model.qdc"]], "set_params() (opt_model method)": [[118, "opt_model.set_params"]], "soln (opt_model attribute)": [[118, "opt_model.soln"]], "solve() (opt_model method)": [[118, "opt_model.solve"]], "to_struct() (opt_model method)": [[118, "opt_model.to_struct"]], "var (opt_model attribute)": [[118, "opt_model.var"]], "varsets_cell2struct() (opt_model method)": [[118, "opt_model.varsets_cell2struct"]], "varsets_idx() (opt_model method)": [[118, "opt_model.varsets_idx"]], "varsets_len() (opt_model method)": [[118, "opt_model.varsets_len"]], "varsets_x() (opt_model method)": [[118, "opt_model.varsets_x"]], "artelys_knitro_options() (built-in function)": [[119, "artelys_knitro_options"]], "convert_constraint_multipliers() (built-in function)": [[120, "convert_constraint_multipliers"]], "convert_lin_constraint() (built-in function)": [[121, "convert_lin_constraint"]], "convert_lin_constraint_multipliers() (built-in function)": [[122, "convert_lin_constraint_multipliers"]], "convert_quad_constraint() (built-in function)": [[123, "convert_quad_constraint"]], "cplex_options() (built-in function)": [[124, "cplex_options"]], "glpk_options() (built-in function)": [[125, "glpk_options"]], "gurobi_options() (built-in function)": [[126, "gurobi_options"]], "gurobiver() (built-in function)": [[127, "gurobiver"]], "have_feature_bpmpd() (built-in function)": [[128, "have_feature_bpmpd"]], "have_feature_catchme() (built-in function)": [[129, "have_feature_catchme"]], "have_feature_clp() (built-in function)": [[130, "have_feature_clp"]], "have_feature_cplex() (built-in function)": [[131, "have_feature_cplex"]], "have_feature_evalc() (built-in function)": [[132, "have_feature_evalc"]], "have_feature_fmincon() (built-in function)": [[133, "have_feature_fmincon"]], "have_feature_fmincon_ipm() (built-in function)": [[134, "have_feature_fmincon_ipm"]], "have_feature_fsolve() (built-in function)": [[135, "have_feature_fsolve"]], "have_feature_glpk() (built-in function)": [[136, "have_feature_glpk"]], "have_feature_gurobi() (built-in function)": [[137, "have_feature_gurobi"]], "have_feature_highs() (built-in function)": [[138, "have_feature_highs"]], "have_feature_intlinprog() (built-in function)": [[139, "have_feature_intlinprog"]], "have_feature_ipopt() (built-in function)": [[140, "have_feature_ipopt"]], "have_feature_ipopt_auxdata() (built-in function)": [[141, "have_feature_ipopt_auxdata"]], "have_feature_isequaln() (built-in function)": [[142, "have_feature_isequaln"]], "have_feature_knitro() (built-in function)": [[143, "have_feature_knitro"]], "have_feature_knitromatlab() (built-in function)": [[144, "have_feature_knitromatlab"]], "have_feature_linprog() (built-in function)": [[145, "have_feature_linprog"]], "have_feature_linprog_ds() (built-in function)": [[146, "have_feature_linprog_ds"]], "have_feature_mosek() (built-in function)": [[147, "have_feature_mosek"]], "have_feature_opti_clp() (built-in function)": [[148, "have_feature_opti_clp"]], "have_feature_optim() (built-in function)": [[149, "have_feature_optim"]], "have_feature_optimoptions() (built-in function)": [[150, "have_feature_optimoptions"]], "have_feature_osqp() (built-in function)": [[151, "have_feature_osqp"]], "have_feature_quadprog() (built-in function)": [[152, "have_feature_quadprog"]], "have_feature_quadprog_ls() (built-in function)": [[153, "have_feature_quadprog_ls"]], "have_feature_sdpt3() (built-in function)": [[154, "have_feature_sdpt3"]], "have_feature_sedumi() (built-in function)": [[155, "have_feature_sedumi"]], "have_feature_yalmip() (built-in function)": [[156, "have_feature_yalmip"]], "highs_options() (built-in function)": [[157, "highs_options"]], "highsver() (built-in function)": [[158, "highsver"]], "ipopt_options() (built-in function)": [[159, "ipopt_options"]], "knitrover() (built-in function)": [[160, "knitrover"]], "lp_ex1() (built-in function)": [[161, "lp_ex1"]], "milp_ex1() (built-in function)": [[162, "milp_ex1"]], "miqps_cplex() (built-in function)": [[163, "miqps_cplex"]], "miqps_glpk() (built-in function)": [[164, "miqps_glpk"]], "miqps_gurobi() (built-in function)": [[165, "miqps_gurobi"]], "miqps_highs() (built-in function)": [[166, "miqps_highs"]], "miqps_master() (built-in function)": [[167, "miqps_master"]], "miqps_mosek() (built-in function)": [[168, "miqps_mosek"]], "miqps_ot() (built-in function)": [[169, "miqps_ot"]], "mosek_options() (built-in function)": [[170, "mosek_options"]], "mosek_symbcon() (built-in function)": [[171, "mosek_symbcon"]], "struct2object() (in module mp)": [[172, "mp.struct2object"]], "mpomver() (built-in function)": [[173, "mpomver"]], "mpopt2nleqopt() (built-in function)": [[174, "mpopt2nleqopt"]], "mpopt2nlpopt() (built-in function)": [[175, "mpopt2nlpopt"]], "mpopt2pneopt() (built-in function)": [[176, "mpopt2pneopt"]], "mpopt2qcqpopt() (built-in function)": [[177, "mpopt2qcqpopt"]], "mpopt2qpopt() (built-in function)": [[178, "mpopt2qpopt"]], "nested_struct_copy() (built-in function)": [[179, "nested_struct_copy"]], "nleqs_core() (built-in function)": [[180, "nleqs_core"]], "nleqs_fd_newton() (built-in function)": [[181, "nleqs_fd_newton"]], "nleqs_fsolve() (built-in function)": [[182, "nleqs_fsolve"]], "nleqs_gauss_seidel() (built-in function)": [[183, "nleqs_gauss_seidel"]], "nleqs_master() (built-in function)": [[184, "nleqs_master"]], "nleqs_master_ex1() (built-in function)": [[185, "nleqs_master_ex1"]], "nleqs_master_ex2() (built-in function)": [[186, "nleqs_master_ex2"]], "nleqs_newton() (built-in function)": [[187, "nleqs_newton"]], "nlp_consfcn() (built-in function)": [[188, "nlp_consfcn"]], "nlp_costfcn() (built-in function)": [[189, "nlp_costfcn"]], "nlp_hessfcn() (built-in function)": [[190, "nlp_hessfcn"]], "nlps_fmincon() (built-in function)": [[191, "nlps_fmincon"]], "nlps_ipopt() (built-in function)": [[192, "nlps_ipopt"]], "nlps_knitro() (built-in function)": [[193, "nlps_knitro"]], "nlps_master() (built-in function)": [[194, "nlps_master"]], "nlps_master_ex1() (built-in function)": [[195, "nlps_master_ex1"]], "nlps_master_ex2() (built-in function)": [[196, "nlps_master_ex2"]], "osqp_options() (built-in function)": [[197, "osqp_options"]], "osqpver() (built-in function)": [[198, "osqpver"]], "pne_callback_default() (built-in function)": [[199, "pne_callback_default"]], "pne_callback_nose() (built-in function)": [[200, "pne_callback_nose"]], "pne_callback_target_lam() (built-in function)": [[201, "pne_callback_target_lam"]], "pne_detect_events() (built-in function)": [[202, "pne_detect_events"]], "pne_detected_event() (built-in function)": [[203, "pne_detected_event"]], "pne_event_nose() (built-in function)": [[204, "pne_event_nose"]], "pne_event_target_lam() (built-in function)": [[205, "pne_event_target_lam"]], "pne_ex1() (built-in function)": [[206, "pne_ex1"]], "pne_pfcn_arc_len() (built-in function)": [[207, "pne_pfcn_arc_len"]], "pne_pfcn_natural() (built-in function)": [[208, "pne_pfcn_natural"]], "pne_pfcn_pseudo_arc_len() (built-in function)": [[209, "pne_pfcn_pseudo_arc_len"]], "pne_register_callbacks() (built-in function)": [[210, "pne_register_callbacks"]], "pne_register_events() (built-in function)": [[211, "pne_register_events"]], "pnes_master() (built-in function)": [[212, "pnes_master"]], "qcqp_ex1() (built-in function)": [[213, "qcqp_ex1"]], "qcqp_nlp_consfcn() (built-in function)": [[214, "qcqp_nlp_consfcn"]], "qcqp_nlp_costfcn() (built-in function)": [[215, "qcqp_nlp_costfcn"]], "qcqp_nlp_hessfcn() (built-in function)": [[216, "qcqp_nlp_hessfcn"]], "qcqps_gurobi() (built-in function)": [[217, "qcqps_gurobi"]], "qcqps_knitro() (built-in function)": [[218, "qcqps_knitro"]], "qcqps_master() (built-in function)": [[219, "qcqps_master"]], "qcqps_nlps() (built-in function)": [[220, "qcqps_nlps"]], "qp_ex1() (built-in function)": [[221, "qp_ex1"]], "qps_bpmpd() (built-in function)": [[222, "qps_bpmpd"]], "qps_clp() (built-in function)": [[223, "qps_clp"]], "qps_cplex() (built-in function)": [[224, "qps_cplex"]], "qps_glpk() (built-in function)": [[225, "qps_glpk"]], "qps_gurobi() (built-in function)": [[226, "qps_gurobi"]], "qps_highs() (built-in function)": [[227, "qps_highs"]], "qps_ipopt() (built-in function)": [[228, "qps_ipopt"]], "qps_knitro() (built-in function)": [[229, "qps_knitro"]], "qps_master() (built-in function)": [[230, "qps_master"]], "qps_mosek() (built-in function)": [[231, "qps_mosek"]], "qps_osqp() (built-in function)": [[232, "qps_osqp"]], "qps_ot() (built-in function)": [[233, "qps_ot"]], "t_have_fcn() (built-in function)": [[234, "t_have_fcn"]], "t_miqps_master() (built-in function)": [[235, "t_miqps_master"]], "t_mm_solve_leqs() (built-in function)": [[236, "t_mm_solve_leqs"]], "t_mm_solve_miqps() (built-in function)": [[237, "t_mm_solve_miqps"]], "t_mm_solve_nleqs() (built-in function)": [[238, "t_mm_solve_nleqs"]], "t_mm_solve_nlps() (built-in function)": [[239, "t_mm_solve_nlps"]], "t_mm_solve_pne() (built-in function)": [[240, "t_mm_solve_pne"]], "t_mm_solve_qcqps() (built-in function)": [[241, "t_mm_solve_qcqps"]], "t_mm_solve_qps() (built-in function)": [[242, "t_mm_solve_qps"]], "t_mp_opt_model() (built-in function)": [[243, "t_mp_opt_model"]], "t_nested_struct_copy() (built-in function)": [[244, "t_nested_struct_copy"]], "t_nleqs_master() (built-in function)": [[245, "t_nleqs_master"]], "t_nlps_master() (built-in function)": [[246, "t_nlps_master"]], "t_om_solve_leqs() (built-in function)": [[247, "t_om_solve_leqs"]], "t_om_solve_miqps() (built-in function)": [[248, "t_om_solve_miqps"]], "t_om_solve_nleqs() (built-in function)": [[249, "t_om_solve_nleqs"]], "t_om_solve_nlps() (built-in function)": [[250, "t_om_solve_nlps"]], "t_om_solve_pne() (built-in function)": [[251, "t_om_solve_pne"]], "t_om_solve_qcqps() (built-in function)": [[252, "t_om_solve_qcqps"]], "t_om_solve_qps() (built-in function)": [[253, "t_om_solve_qps"]], "t_opt_model() (built-in function)": [[254, "t_opt_model"]], "t_pnes_master() (built-in function)": [[255, "t_pnes_master"]], "t_qcqps_master() (built-in function)": [[256, "t_qcqps_master"]], "t_qps_master() (built-in function)": [[257, "t_qps_master"]], "test_mp_opt_model() (built-in function)": [[258, "test_mp_opt_model"]], "debug_assert() (built-in function)": [[261, "debug_assert"]], "have_feature() (built-in function)": [[262, "have_feature"]], "have_feature_matlab() (built-in function)": [[263, "have_feature_matlab"]], "have_feature_octave() (built-in function)": [[264, "have_feature_octave"]], "mptestver() (built-in function)": [[265, "mptestver"]], "t_begin() (built-in function)": [[266, "t_begin"]], "t_debug_assert() (built-in function)": [[267, "t_debug_assert"]], "t_end() (built-in function)": [[268, "t_end"]], "t_file_match() (built-in function)": [[269, "t_file_match"]], "t_have_feature() (built-in function)": [[270, "t_have_feature"]], "t_is() (built-in function)": [[271, "t_is"]], "t_ok() (built-in function)": [[272, "t_ok"]], "t_run_tests() (built-in function)": [[273, "t_run_tests"]], "t_skip() (built-in function)": [[274, "t_skip"]], "t_str_match() (built-in function)": [[275, "t_str_match"]], "t_test_fcns() (built-in function)": [[276, "t_test_fcns"]], "test_mptest() (built-in function)": [[277, "test_mptest"]], "toggle_debug_mode() (built-in function)": [[278, "toggle_debug_mode"]], "node_type (class in mp)": [[282, "mp.NODE_TYPE"]], "none (mp.node_type attribute)": [[282, "mp.NODE_TYPE.NONE"]], "pq (mp.node_type attribute)": [[282, "mp.NODE_TYPE.PQ"]], "pv (mp.node_type attribute)": [[282, "mp.NODE_TYPE.PV"]], "ref (mp.node_type attribute)": [[282, "mp.NODE_TYPE.REF"]], "is_valid() (mp.node_type static method)": [[282, "mp.NODE_TYPE.is_valid"]], "case_utils (class in mp)": [[283, "mp.case_utils"]], "convert_1p_to_3p() (mp.case_utils static method)": [[283, "mp.case_utils.convert_1p_to_3p"]], "relocate_branch_shunts() (mp.case_utils static method)": [[283, "mp.case_utils.relocate_branch_shunts"]], "remove_gen_q_lims() (mp.case_utils static method)": [[283, "mp.case_utils.remove_gen_q_lims"]], "to_consecutive_bus_numbers() (mp.case_utils static method)": [[283, "mp.case_utils.to_consecutive_bus_numbers"]], "z_base_change() (mp.case_utils static method)": [[283, "mp.case_utils.z_base_change"]], "cost_table (class in mp)": [[284, "mp.cost_table"]], "cost_table() (mp.cost_table method)": [[284, "mp.cost_table.cost_table"]], "diff_poly_fcn() (mp.cost_table static method)": [[284, "mp.cost_table.diff_poly_fcn"]], "eval_poly_fcn() (mp.cost_table static method)": [[284, "mp.cost_table.eval_poly_fcn"]], "max_pwl_cost() (mp.cost_table method)": [[284, "mp.cost_table.max_pwl_cost"]], "poly_cost_fcn() (mp.cost_table static method)": [[284, "mp.cost_table.poly_cost_fcn"]], "poly_params() (mp.cost_table method)": [[284, "mp.cost_table.poly_params"]], "pwl_params() (mp.cost_table method)": [[284, "mp.cost_table.pwl_params"]], "cost_table_utils (class in mp)": [[285, "mp.cost_table_utils"]], "max_pwl_cost() (mp.cost_table_utils static method)": [[285, "mp.cost_table_utils.max_pwl_cost"]], "poly_params() (mp.cost_table_utils static method)": [[285, "mp.cost_table_utils.poly_params"]], "pwl_params() (mp.cost_table_utils static method)": [[285, "mp.cost_table_utils.pwl_params"]], "base_kva (mp.data_model attribute)": [[286, "mp.data_model.base_kva"]], "base_mva (mp.data_model attribute)": [[286, "mp.data_model.base_mva"]], "build() (mp.data_model method)": [[286, "mp.data_model.build"]], "build_params() (mp.data_model method)": [[286, "mp.data_model.build_params"]], "copy() (mp.data_model method)": [[286, "mp.data_model.copy"]], "count() (mp.data_model method)": [[286, "mp.data_model.count"]], "data_model (class in mp)": [[286, "mp.data_model"]], "data_model() (mp.data_model method)": [[286, "mp.data_model.data_model"]], "display() (mp.data_model method)": [[286, "mp.data_model.display"]], "initialize() (mp.data_model method)": [[286, "mp.data_model.initialize"]], "online() (mp.data_model method)": [[286, "mp.data_model.online"]], "pp_data() (mp.data_model method)": [[286, "mp.data_model.pp_data"]], "pp_flags() (mp.data_model method)": [[286, "mp.data_model.pp_flags"]], "pp_get_headers() (mp.data_model method)": [[286, "mp.data_model.pp_get_headers"]], "pp_get_headers_cnt() (mp.data_model method)": [[286, "mp.data_model.pp_get_headers_cnt"]], "pp_get_headers_ext() (mp.data_model method)": [[286, "mp.data_model.pp_get_headers_ext"]], "pp_get_headers_other() (mp.data_model method)": [[286, "mp.data_model.pp_get_headers_other"]], "pp_have_section() (mp.data_model method)": [[286, "mp.data_model.pp_have_section"]], "pp_section() (mp.data_model method)": [[286, "mp.data_model.pp_section"]], "pp_section_label() (mp.data_model method)": [[286, "mp.data_model.pp_section_label"]], "pp_section_list() (mp.data_model method)": [[286, "mp.data_model.pp_section_list"]], "pretty_print() (mp.data_model method)": [[286, "mp.data_model.pretty_print"]], "rebuild() (mp.data_model method)": [[286, "mp.data_model.rebuild"]], "set_bus_v_lims_via_vg() (mp.data_model method)": [[286, "mp.data_model.set_bus_v_lims_via_vg"]], "source (mp.data_model attribute)": [[286, "mp.data_model.source"]], "update_status() (mp.data_model method)": [[286, "mp.data_model.update_status"]], "userdata (mp.data_model attribute)": [[286, "mp.data_model.userdata"]], "data_model_cpf (class in mp)": [[287, "mp.data_model_cpf"]], "data_model_cpf() (mp.data_model_cpf method)": [[287, "mp.data_model_cpf.data_model_cpf"]], "data_model_opf (class in mp)": [[288, "mp.data_model_opf"]], "data_model_opf() (mp.data_model_opf method)": [[288, "mp.data_model_opf.data_model_opf"]], "pp_flags() (mp.data_model_opf method)": [[288, "mp.data_model_opf.pp_flags"]], "pp_get_headers_other() (mp.data_model_opf method)": [[288, "mp.data_model_opf.pp_get_headers_other"]], "pp_section_list() (mp.data_model_opf method)": [[288, "mp.data_model_opf.pp_section_list"]], "build() (mp.dm_converter method)": [[289, "mp.dm_converter.build"]], "copy() (mp.dm_converter method)": [[289, "mp.dm_converter.copy"]], "display() (mp.dm_converter method)": [[289, "mp.dm_converter.display"]], "dm_converter (class in mp)": [[289, "mp.dm_converter"]], "export() (mp.dm_converter method)": [[289, "mp.dm_converter.export"]], "format_tag() (mp.dm_converter method)": [[289, "mp.dm_converter.format_tag"]], "import() (mp.dm_converter method)": [[289, "mp.dm_converter.import"]], "init_export() (mp.dm_converter method)": [[289, "mp.dm_converter.init_export"]], "save() (mp.dm_converter method)": [[289, "mp.dm_converter.save"]], "dm_converter_mpc2 (class in mp)": [[290, "mp.dm_converter_mpc2"]], "dm_converter_mpc2() (mp.dm_converter_mpc2 method)": [[290, "mp.dm_converter_mpc2.dm_converter_mpc2"]], "format_tag() (mp.dm_converter_mpc2 method)": [[290, "mp.dm_converter_mpc2.format_tag"]], "import() (mp.dm_converter_mpc2 method)": [[290, "mp.dm_converter_mpc2.import"]], "init_export() (mp.dm_converter_mpc2 method)": [[290, "mp.dm_converter_mpc2.init_export"]], "save() (mp.dm_converter_mpc2 method)": [[290, "mp.dm_converter_mpc2.save"]], "dm_converter_mpc2_legacy (class in mp)": [[291, "mp.dm_converter_mpc2_legacy"]], "legacy_user_mod_inputs() (mp.dm_converter_mpc2_legacy method)": [[291, "mp.dm_converter_mpc2_legacy.legacy_user_mod_inputs"]], "legacy_user_nln_constraints() (mp.dm_converter_mpc2_legacy method)": [[291, "mp.dm_converter_mpc2_legacy.legacy_user_nln_constraints"]], "id() (mp.dm_element method)": [[292, "mp.dm_element.ID"]], "id2i (mp.dm_element attribute)": [[292, "mp.dm_element.ID2i"]], "build_params() (mp.dm_element method)": [[292, "mp.dm_element.build_params"]], "copy() (mp.dm_element method)": [[292, "mp.dm_element.copy"]], "count() (mp.dm_element method)": [[292, "mp.dm_element.count"]], "cxn_idx_prop() (mp.dm_element method)": [[292, "mp.dm_element.cxn_idx_prop"]], "cxn_type() (mp.dm_element method)": [[292, "mp.dm_element.cxn_type"]], "cxn_type_prop() (mp.dm_element method)": [[292, "mp.dm_element.cxn_type_prop"]], "display() (mp.dm_element method)": [[292, "mp.dm_element.display"]], "dm_converter_element() (mp.dm_element method)": [[292, "mp.dm_element.dm_converter_element"]], "dm_element (class in mp)": [[292, "mp.dm_element"]], "export_vars() (mp.dm_element method)": [[292, "mp.dm_element.export_vars"]], "export_vars_offline_val() (mp.dm_element method)": [[292, "mp.dm_element.export_vars_offline_val"]], "i2on (mp.dm_element attribute)": [[292, "mp.dm_element.i2on"]], "init_status() (mp.dm_element method)": [[292, "mp.dm_element.init_status"]], "initialize() (mp.dm_element method)": [[292, "mp.dm_element.initialize"]], "label() (mp.dm_element method)": [[292, "mp.dm_element.label"]], "labels() (mp.dm_element method)": [[292, "mp.dm_element.labels"]], "main_table_var_names() (mp.dm_element method)": [[292, "mp.dm_element.main_table_var_names"]], "n (mp.dm_element attribute)": [[292, "mp.dm_element.n"]], "name() (mp.dm_element method)": [[292, "mp.dm_element.name"]], "nr (mp.dm_element attribute)": [[292, "mp.dm_element.nr"]], "off (mp.dm_element attribute)": [[292, "mp.dm_element.off"]], "on (mp.dm_element attribute)": [[292, "mp.dm_element.on"]], "pp_data() (mp.dm_element method)": [[292, "mp.dm_element.pp_data"]], "pp_data_cnt() (mp.dm_element method)": [[292, "mp.dm_element.pp_data_cnt"]], "pp_data_det() (mp.dm_element method)": [[292, "mp.dm_element.pp_data_det"]], "pp_data_ext() (mp.dm_element method)": [[292, "mp.dm_element.pp_data_ext"]], "pp_data_row_det() (mp.dm_element method)": [[292, "mp.dm_element.pp_data_row_det"]], "pp_data_sum() (mp.dm_element method)": [[292, "mp.dm_element.pp_data_sum"]], "pp_get_footers() (mp.dm_element method)": [[292, "mp.dm_element.pp_get_footers"]], "pp_get_footers_det() (mp.dm_element method)": [[292, "mp.dm_element.pp_get_footers_det"]], "pp_get_headers() (mp.dm_element method)": [[292, "mp.dm_element.pp_get_headers"]], "pp_get_headers_det() (mp.dm_element method)": [[292, "mp.dm_element.pp_get_headers_det"]], "pp_get_title_det() (mp.dm_element method)": [[292, "mp.dm_element.pp_get_title_det"]], "pp_have_section() (mp.dm_element method)": [[292, "mp.dm_element.pp_have_section"]], "pp_have_section_cnt() (mp.dm_element method)": [[292, "mp.dm_element.pp_have_section_cnt"]], "pp_have_section_det() (mp.dm_element method)": [[292, "mp.dm_element.pp_have_section_det"]], "pp_have_section_ext() (mp.dm_element method)": [[292, "mp.dm_element.pp_have_section_ext"]], "pp_have_section_sum() (mp.dm_element method)": [[292, "mp.dm_element.pp_have_section_sum"]], "pp_rows() (mp.dm_element method)": [[292, "mp.dm_element.pp_rows"]], "pretty_print() (mp.dm_element method)": [[292, "mp.dm_element.pretty_print"]], "rebuild() (mp.dm_element method)": [[292, "mp.dm_element.rebuild"]], "tab (mp.dm_element attribute)": [[292, "mp.dm_element.tab"]], "table_exists() (mp.dm_element method)": [[292, "mp.dm_element.table_exists"]], "update_status() (mp.dm_element method)": [[292, "mp.dm_element.update_status"]], "data_exists() (mp.dmc_element method)": [[293, "mp.dmc_element.data_exists"]], "data_field() (mp.dmc_element method)": [[293, "mp.dmc_element.data_field"]], "data_model_element() (mp.dmc_element method)": [[293, "mp.dmc_element.data_model_element"]], "data_subs() (mp.dmc_element method)": [[293, "mp.dmc_element.data_subs"]], "default_export_data_nrows() (mp.dmc_element method)": [[293, "mp.dmc_element.default_export_data_nrows"]], "default_export_data_table() (mp.dmc_element method)": [[293, "mp.dmc_element.default_export_data_table"]], "dmc_element (class in mp)": [[293, "mp.dmc_element"]], "export() (mp.dmc_element method)": [[293, "mp.dmc_element.export"]], "export_col() (mp.dmc_element method)": [[293, "mp.dmc_element.export_col"]], "export_table_values() (mp.dmc_element method)": [[293, "mp.dmc_element.export_table_values"]], "get_export_size() (mp.dmc_element method)": [[293, "mp.dmc_element.get_export_size"]], "get_export_spec() (mp.dmc_element method)": [[293, "mp.dmc_element.get_export_spec"]], "get_import_size() (mp.dmc_element method)": [[293, "mp.dmc_element.get_import_size"]], "get_import_spec() (mp.dmc_element method)": [[293, "mp.dmc_element.get_import_spec"]], "get_input_table_values() (mp.dmc_element method)": [[293, "mp.dmc_element.get_input_table_values"]], "import() (mp.dmc_element method)": [[293, "mp.dmc_element.import"]], "import_col() (mp.dmc_element method)": [[293, "mp.dmc_element.import_col"]], "import_table_values() (mp.dmc_element method)": [[293, "mp.dmc_element.import_table_values"]], "init_export_data() (mp.dmc_element method)": [[293, "mp.dmc_element.init_export_data"]], "name() (mp.dmc_element method)": [[293, "mp.dmc_element.name"]], "table_var_map() (mp.dmc_element method)": [[293, "mp.dmc_element.table_var_map"]], "data_field() (mp.dmce_branch_mpc2 method)": [[294, "mp.dmce_branch_mpc2.data_field"]], "default_export_data_table() (mp.dmce_branch_mpc2 method)": [[294, "mp.dmce_branch_mpc2.default_export_data_table"]], "dmce_branch_mpc2 (class in mp)": [[294, "mp.dmce_branch_mpc2"]], "name() (mp.dmce_branch_mpc2 method)": [[294, "mp.dmce_branch_mpc2.name"]], "table_var_map() (mp.dmce_branch_mpc2 method)": [[294, "mp.dmce_branch_mpc2.table_var_map"]], "bus_status_import() (mp.dmce_bus3p_mpc2 method)": [[295, "mp.dmce_bus3p_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus3p_mpc2 method)": [[295, "mp.dmce_bus3p_mpc2.data_field"]], "dmce_bus3p_mpc2 (class in mp)": [[295, "mp.dmce_bus3p_mpc2"]], "name() (mp.dmce_bus3p_mpc2 method)": [[295, "mp.dmce_bus3p_mpc2.name"]], "table_var_map() (mp.dmce_bus3p_mpc2 method)": [[295, "mp.dmce_bus3p_mpc2.table_var_map"]], "bus_name_export() (mp.dmce_bus_mpc2 method)": [[296, "mp.dmce_bus_mpc2.bus_name_export"]], "bus_name_import() (mp.dmce_bus_mpc2 method)": [[296, "mp.dmce_bus_mpc2.bus_name_import"]], "bus_status_import() (mp.dmce_bus_mpc2 method)": [[296, "mp.dmce_bus_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus_mpc2 method)": [[296, "mp.dmce_bus_mpc2.data_field"]], "default_export_data_table() (mp.dmce_bus_mpc2 method)": [[296, "mp.dmce_bus_mpc2.default_export_data_table"]], "dmce_bus_mpc2 (class in mp)": [[296, "mp.dmce_bus_mpc2"]], "init_export_data() (mp.dmce_bus_mpc2 method)": [[296, "mp.dmce_bus_mpc2.init_export_data"]], "name() (mp.dmce_bus_mpc2 method)": [[296, "mp.dmce_bus_mpc2.name"]], "table_var_map() (mp.dmce_bus_mpc2 method)": [[296, "mp.dmce_bus_mpc2.table_var_map"]], "data_field() (mp.dmce_buslink_mpc2 method)": [[297, "mp.dmce_buslink_mpc2.data_field"]], "dmce_buslink_mpc2 (class in mp)": [[297, "mp.dmce_buslink_mpc2"]], "name() (mp.dmce_buslink_mpc2 method)": [[297, "mp.dmce_buslink_mpc2.name"]], "table_var_map() (mp.dmce_buslink_mpc2 method)": [[297, "mp.dmce_buslink_mpc2.table_var_map"]], "data_field() (mp.dmce_gen3p_mpc2 method)": [[298, "mp.dmce_gen3p_mpc2.data_field"]], "dmce_gen3p_mpc2 (class in mp)": [[298, "mp.dmce_gen3p_mpc2"]], "name() (mp.dmce_gen3p_mpc2 method)": [[298, "mp.dmce_gen3p_mpc2.name"]], "table_var_map() (mp.dmce_gen3p_mpc2 method)": [[298, "mp.dmce_gen3p_mpc2.table_var_map"]], "cost_table2gencost() (mp.dmce_gen_mpc2 static method)": [[299, "mp.dmce_gen_mpc2.cost_table2gencost"]], "data_field() (mp.dmce_gen_mpc2 method)": [[299, "mp.dmce_gen_mpc2.data_field"]], "default_export_data_table() (mp.dmce_gen_mpc2 method)": [[299, "mp.dmce_gen_mpc2.default_export_data_table"]], "dmce_gen_mpc2 (class in mp)": [[299, "mp.dmce_gen_mpc2"]], "gen_cost_export() (mp.dmce_gen_mpc2 method)": [[299, "mp.dmce_gen_mpc2.gen_cost_export"]], "gen_cost_import() (mp.dmce_gen_mpc2 method)": [[299, "mp.dmce_gen_mpc2.gen_cost_import"]], "gencost2cost_table() (mp.dmce_gen_mpc2 static method)": [[299, "mp.dmce_gen_mpc2.gencost2cost_table"]], "name() (mp.dmce_gen_mpc2 method)": [[299, "mp.dmce_gen_mpc2.name"]], "pwl1 (mp.dmce_gen_mpc2 attribute)": [[299, "mp.dmce_gen_mpc2.pwl1"]], "start_cost_export() (mp.dmce_gen_mpc2 method)": [[299, "mp.dmce_gen_mpc2.start_cost_export"]], "start_cost_import() (mp.dmce_gen_mpc2 method)": [[299, "mp.dmce_gen_mpc2.start_cost_import"]], "table_var_map() (mp.dmce_gen_mpc2 method)": [[299, "mp.dmce_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_legacy_dcline_mpc2 method)": [[300, "mp.dmce_legacy_dcline_mpc2.data_field"]], "dcline_cost_export() (mp.dmce_legacy_dcline_mpc2 method)": [[300, "mp.dmce_legacy_dcline_mpc2.dcline_cost_export"]], "dcline_cost_import() (mp.dmce_legacy_dcline_mpc2 method)": [[300, "mp.dmce_legacy_dcline_mpc2.dcline_cost_import"]], "default_export_data_table() (mp.dmce_legacy_dcline_mpc2 method)": [[300, "mp.dmce_legacy_dcline_mpc2.default_export_data_table"]], "dmce_legacy_dcline_mpc2 (class in mp)": [[300, "mp.dmce_legacy_dcline_mpc2"]], "name() (mp.dmce_legacy_dcline_mpc2 method)": [[300, "mp.dmce_legacy_dcline_mpc2.name"]], "table_var_map() (mp.dmce_legacy_dcline_mpc2 method)": [[300, "mp.dmce_legacy_dcline_mpc2.table_var_map"]], "create_line_construction_table() (mp.dmce_line3p_mpc2 method)": [[301, "mp.dmce_line3p_mpc2.create_line_construction_table"]], "data_field() (mp.dmce_line3p_mpc2 method)": [[301, "mp.dmce_line3p_mpc2.data_field"]], "dmce_line3p_mpc2 (class in mp)": [[301, "mp.dmce_line3p_mpc2"]], "import() (mp.dmce_line3p_mpc2 method)": [[301, "mp.dmce_line3p_mpc2.import"]], "name() (mp.dmce_line3p_mpc2 method)": [[301, "mp.dmce_line3p_mpc2.name"]], "table_var_map() (mp.dmce_line3p_mpc2 method)": [[301, "mp.dmce_line3p_mpc2.table_var_map"]], "bus (mp.dmce_load3p_mpc2 attribute)": [[302, "mp.dmce_load3p_mpc2.bus"]], "data_field() (mp.dmce_load3p_mpc2 method)": [[302, "mp.dmce_load3p_mpc2.data_field"]], "dmce_load3p_mpc2 (class in mp)": [[302, "mp.dmce_load3p_mpc2"]], "name() (mp.dmce_load3p_mpc2 method)": [[302, "mp.dmce_load3p_mpc2.name"]], "table_var_map() (mp.dmce_load3p_mpc2 method)": [[302, "mp.dmce_load3p_mpc2.table_var_map"]], "bus (mp.dmce_load_mpc2 attribute)": [[303, "mp.dmce_load_mpc2.bus"]], "data_field() (mp.dmce_load_mpc2 method)": [[303, "mp.dmce_load_mpc2.data_field"]], "dmce_load_mpc2 (class in mp)": [[303, "mp.dmce_load_mpc2"]], "get_export_size() (mp.dmce_load_mpc2 method)": [[303, "mp.dmce_load_mpc2.get_export_size"]], "get_import_size() (mp.dmce_load_mpc2 method)": [[303, "mp.dmce_load_mpc2.get_import_size"]], "name() (mp.dmce_load_mpc2 method)": [[303, "mp.dmce_load_mpc2.name"]], "scale_factor_fcn() (mp.dmce_load_mpc2 method)": [[303, "mp.dmce_load_mpc2.scale_factor_fcn"]], "sys_wide_zip_loads() (mp.dmce_load_mpc2 method)": [[303, "mp.dmce_load_mpc2.sys_wide_zip_loads"]], "table_var_map() (mp.dmce_load_mpc2 method)": [[303, "mp.dmce_load_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.data_subs"]], "dmce_reserve_gen_mpc2 (class in mp)": [[304, "mp.dmce_reserve_gen_mpc2"]], "get_export_size() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.get_export_size"]], "get_import_size() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.get_import_size"]], "import() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.import"]], "import_cost() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.import_cost"]], "import_qty() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.import_qty"]], "import_ramp() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.import_ramp"]], "name() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.name"]], "table_var_map() (mp.dmce_reserve_gen_mpc2 method)": [[304, "mp.dmce_reserve_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_zone_mpc2 method)": [[305, "mp.dmce_reserve_zone_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_zone_mpc2 method)": [[305, "mp.dmce_reserve_zone_mpc2.data_subs"]], "dmce_reserve_zone_mpc2 (class in mp)": [[305, "mp.dmce_reserve_zone_mpc2"]], "import_req() (mp.dmce_reserve_zone_mpc2 method)": [[305, "mp.dmce_reserve_zone_mpc2.import_req"]], "import_zones() (mp.dmce_reserve_zone_mpc2 method)": [[305, "mp.dmce_reserve_zone_mpc2.import_zones"]], "name() (mp.dmce_reserve_zone_mpc2 method)": [[305, "mp.dmce_reserve_zone_mpc2.name"]], "table_var_map() (mp.dmce_reserve_zone_mpc2 method)": [[305, "mp.dmce_reserve_zone_mpc2.table_var_map"]], "data_field() (mp.dmce_shunt3p_mpc2 method)": [[306, "mp.dmce_shunt3p_mpc2.data_field"]], "dmce_shunt3p_mpc2 (class in mp)": [[306, "mp.dmce_shunt3p_mpc2"]], "name() (mp.dmce_shunt3p_mpc2 method)": [[306, "mp.dmce_shunt3p_mpc2.name"]], "table_var_map() (mp.dmce_shunt3p_mpc2 method)": [[306, "mp.dmce_shunt3p_mpc2.table_var_map"]], "bus (mp.dmce_shunt_mpc2 attribute)": [[307, "mp.dmce_shunt_mpc2.bus"]], "data_field() (mp.dmce_shunt_mpc2 method)": [[307, "mp.dmce_shunt_mpc2.data_field"]], "dmce_shunt_mpc2 (class in mp)": [[307, "mp.dmce_shunt_mpc2"]], "get_export_size() (mp.dmce_shunt_mpc2 method)": [[307, "mp.dmce_shunt_mpc2.get_export_size"]], "get_import_size() (mp.dmce_shunt_mpc2 method)": [[307, "mp.dmce_shunt_mpc2.get_import_size"]], "name() (mp.dmce_shunt_mpc2 method)": [[307, "mp.dmce_shunt_mpc2.name"]], "table_var_map() (mp.dmce_shunt_mpc2 method)": [[307, "mp.dmce_shunt_mpc2.table_var_map"]], "data_field() (mp.dmce_xfmr3p_mpc2 method)": [[308, "mp.dmce_xfmr3p_mpc2.data_field"]], "dmce_xfmr3p_mpc2 (class in mp)": [[308, "mp.dmce_xfmr3p_mpc2"]], "name() (mp.dmce_xfmr3p_mpc2 method)": [[308, "mp.dmce_xfmr3p_mpc2.name"]], "table_var_map() (mp.dmce_xfmr3p_mpc2 method)": [[308, "mp.dmce_xfmr3p_mpc2.table_var_map"]], "b_fr (mp.dme_branch attribute)": [[309, "mp.dme_branch.b_fr"]], "b_to (mp.dme_branch attribute)": [[309, "mp.dme_branch.b_to"]], "build_params() (mp.dme_branch method)": [[309, "mp.dme_branch.build_params"]], "cxn_idx_prop() (mp.dme_branch method)": [[309, "mp.dme_branch.cxn_idx_prop"]], "cxn_type() (mp.dme_branch method)": [[309, "mp.dme_branch.cxn_type"]], "dme_branch (class in mp)": [[309, "mp.dme_branch"]], "export_vars() (mp.dme_branch method)": [[309, "mp.dme_branch.export_vars"]], "export_vars_offline_val() (mp.dme_branch method)": [[309, "mp.dme_branch.export_vars_offline_val"]], "fbus (mp.dme_branch attribute)": [[309, "mp.dme_branch.fbus"]], "g_fr (mp.dme_branch attribute)": [[309, "mp.dme_branch.g_fr"]], "g_to (mp.dme_branch attribute)": [[309, "mp.dme_branch.g_to"]], "initialize() (mp.dme_branch method)": [[309, "mp.dme_branch.initialize"]], "label() (mp.dme_branch method)": [[309, "mp.dme_branch.label"]], "labels() (mp.dme_branch method)": [[309, "mp.dme_branch.labels"]], "loss_tol (mp.dme_branch attribute)": [[309, "mp.dme_branch.loss_tol"]], "main_table_var_names() (mp.dme_branch method)": [[309, "mp.dme_branch.main_table_var_names"]], "name() (mp.dme_branch method)": [[309, "mp.dme_branch.name"]], "pp_data_cnt() (mp.dme_branch method)": [[309, "mp.dme_branch.pp_data_cnt"]], "pp_data_row_det() (mp.dme_branch method)": [[309, "mp.dme_branch.pp_data_row_det"]], "pp_data_sum() (mp.dme_branch method)": [[309, "mp.dme_branch.pp_data_sum"]], "pp_get_footers_det() (mp.dme_branch method)": [[309, "mp.dme_branch.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_branch method)": [[309, "mp.dme_branch.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_branch method)": [[309, "mp.dme_branch.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_branch method)": [[309, "mp.dme_branch.pp_have_section_sum"]], "r (mp.dme_branch attribute)": [[309, "mp.dme_branch.r"]], "rate_a (mp.dme_branch attribute)": [[309, "mp.dme_branch.rate_a"]], "ta (mp.dme_branch attribute)": [[309, "mp.dme_branch.ta"]], "tbus (mp.dme_branch attribute)": [[309, "mp.dme_branch.tbus"]], "tm (mp.dme_branch attribute)": [[309, "mp.dme_branch.tm"]], "update_status() (mp.dme_branch method)": [[309, "mp.dme_branch.update_status"]], "x (mp.dme_branch attribute)": [[309, "mp.dme_branch.x"]], "dme_branch_opf (class in mp)": [[310, "mp.dme_branch_opf"]], "export_vars() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.export_vars"]], "export_vars_offline_val() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.pp_get_headers_lim"]], "pp_get_title_lim() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_branch_opf method)": [[310, "mp.dme_branch_opf.pretty_print"]], "build_params() (mp.dme_bus method)": [[311, "mp.dme_bus.build_params"]], "dme_bus (class in mp)": [[311, "mp.dme_bus"]], "export_vars() (mp.dme_bus method)": [[311, "mp.dme_bus.export_vars"]], "export_vars_offline_val() (mp.dme_bus method)": [[311, "mp.dme_bus.export_vars_offline_val"]], "init_status() (mp.dme_bus method)": [[311, "mp.dme_bus.init_status"]], "label() (mp.dme_bus method)": [[311, "mp.dme_bus.label"]], "labels() (mp.dme_bus method)": [[311, "mp.dme_bus.labels"]], "main_table_var_names() (mp.dme_bus method)": [[311, "mp.dme_bus.main_table_var_names"]], "name() (mp.dme_bus method)": [[311, "mp.dme_bus.name"]], "pp_data_cnt() (mp.dme_bus method)": [[311, "mp.dme_bus.pp_data_cnt"]], "pp_data_ext() (mp.dme_bus method)": [[311, "mp.dme_bus.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus method)": [[311, "mp.dme_bus.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus method)": [[311, "mp.dme_bus.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus method)": [[311, "mp.dme_bus.pp_have_section_det"]], "pp_have_section_ext() (mp.dme_bus method)": [[311, "mp.dme_bus.pp_have_section_ext"]], "set_bus_type_pq() (mp.dme_bus method)": [[311, "mp.dme_bus.set_bus_type_pq"]], "set_bus_type_pv() (mp.dme_bus method)": [[311, "mp.dme_bus.set_bus_type_pv"]], "set_bus_type_ref() (mp.dme_bus method)": [[311, "mp.dme_bus.set_bus_type_ref"]], "type (mp.dme_bus attribute)": [[311, "mp.dme_bus.type"]], "update_status() (mp.dme_bus method)": [[311, "mp.dme_bus.update_status"]], "va_start (mp.dme_bus attribute)": [[311, "mp.dme_bus.va_start"]], "vm_control (mp.dme_bus attribute)": [[311, "mp.dme_bus.vm_control"]], "vm_lb (mp.dme_bus attribute)": [[311, "mp.dme_bus.vm_lb"]], "vm_start (mp.dme_bus attribute)": [[311, "mp.dme_bus.vm_start"]], "vm_ub (mp.dme_bus attribute)": [[311, "mp.dme_bus.vm_ub"]], "build_params() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.build_params"]], "dme_bus3p (class in mp)": [[312, "mp.dme_bus3p"]], "init_status() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.init_status"]], "label() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.label"]], "labels() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.labels"]], "main_table_var_names() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.main_table_var_names"]], "name() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.name"]], "pp_data_row_det() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.pp_have_section_det"]], "type (mp.dme_bus3p attribute)": [[312, "mp.dme_bus3p.type"]], "update_status() (mp.dme_bus3p method)": [[312, "mp.dme_bus3p.update_status"]], "va1_start (mp.dme_bus3p attribute)": [[312, "mp.dme_bus3p.va1_start"]], "va2_start (mp.dme_bus3p attribute)": [[312, "mp.dme_bus3p.va2_start"]], "va3_start (mp.dme_bus3p attribute)": [[312, "mp.dme_bus3p.va3_start"]], "vm1_start (mp.dme_bus3p attribute)": [[312, "mp.dme_bus3p.vm1_start"]], "vm2_start (mp.dme_bus3p attribute)": [[312, "mp.dme_bus3p.vm2_start"]], "vm3_start (mp.dme_bus3p attribute)": [[312, "mp.dme_bus3p.vm3_start"]], "vm_control (mp.dme_bus3p attribute)": [[312, "mp.dme_bus3p.vm_control"]], "dme_bus3p_opf (class in mp)": [[313, "mp.dme_bus3p_opf"]], "dme_bus_opf (class in mp)": [[314, "mp.dme_bus_opf"]], "export_vars() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.export_vars"]], "export_vars_offline_val() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.pp_binding_rows_lim"]], "pp_data_ext() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.pp_data_row_lim"]], "pp_get_headers_det() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_bus_opf method)": [[314, "mp.dme_bus_opf.pp_have_section_lim"]], "build_params() (mp.dme_buslink method)": [[315, "mp.dme_buslink.build_params"]], "bus (mp.dme_buslink attribute)": [[315, "mp.dme_buslink.bus"]], "bus3p (mp.dme_buslink attribute)": [[315, "mp.dme_buslink.bus3p"]], "cxn_idx_prop() (mp.dme_buslink method)": [[315, "mp.dme_buslink.cxn_idx_prop"]], "cxn_type() (mp.dme_buslink method)": [[315, "mp.dme_buslink.cxn_type"]], "dme_buslink (class in mp)": [[315, "mp.dme_buslink"]], "initialize() (mp.dme_buslink method)": [[315, "mp.dme_buslink.initialize"]], "label() (mp.dme_buslink method)": [[315, "mp.dme_buslink.label"]], "labels() (mp.dme_buslink method)": [[315, "mp.dme_buslink.labels"]], "main_table_var_names() (mp.dme_buslink method)": [[315, "mp.dme_buslink.main_table_var_names"]], "name() (mp.dme_buslink method)": [[315, "mp.dme_buslink.name"]], "pg1_start (mp.dme_buslink attribute)": [[315, "mp.dme_buslink.pg1_start"]], "pg2_start (mp.dme_buslink attribute)": [[315, "mp.dme_buslink.pg2_start"]], "pg3_start (mp.dme_buslink attribute)": [[315, "mp.dme_buslink.pg3_start"]], "pp_data_row_det() (mp.dme_buslink method)": [[315, "mp.dme_buslink.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_buslink method)": [[315, "mp.dme_buslink.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_buslink method)": [[315, "mp.dme_buslink.pp_have_section_det"]], "qg1_start (mp.dme_buslink attribute)": [[315, "mp.dme_buslink.qg1_start"]], "qg2_start (mp.dme_buslink attribute)": [[315, "mp.dme_buslink.qg2_start"]], "qg3_start (mp.dme_buslink attribute)": [[315, "mp.dme_buslink.qg3_start"]], "update_status() (mp.dme_buslink method)": [[315, "mp.dme_buslink.update_status"]], "dme_buslink_opf (class in mp)": [[316, "mp.dme_buslink_opf"]], "apply_vm_setpoint() (mp.dme_gen method)": [[317, "mp.dme_gen.apply_vm_setpoint"]], "build_params() (mp.dme_gen method)": [[317, "mp.dme_gen.build_params"]], "bus (mp.dme_gen attribute)": [[317, "mp.dme_gen.bus"]], "bus_on (mp.dme_gen attribute)": [[317, "mp.dme_gen.bus_on"]], "cxn_idx_prop() (mp.dme_gen method)": [[317, "mp.dme_gen.cxn_idx_prop"]], "cxn_type() (mp.dme_gen method)": [[317, "mp.dme_gen.cxn_type"]], "dme_gen (class in mp)": [[317, "mp.dme_gen"]], "export_vars() (mp.dme_gen method)": [[317, "mp.dme_gen.export_vars"]], "export_vars_offline_val() (mp.dme_gen method)": [[317, "mp.dme_gen.export_vars_offline_val"]], "have_cost() (mp.dme_gen method)": [[317, "mp.dme_gen.have_cost"]], "initialize() (mp.dme_gen method)": [[317, "mp.dme_gen.initialize"]], "isload() (mp.dme_gen method)": [[317, "mp.dme_gen.isload"]], "label() (mp.dme_gen method)": [[317, "mp.dme_gen.label"]], "labels() (mp.dme_gen method)": [[317, "mp.dme_gen.labels"]], "main_table_var_names() (mp.dme_gen method)": [[317, "mp.dme_gen.main_table_var_names"]], "name() (mp.dme_gen method)": [[317, "mp.dme_gen.name"]], "pg_lb (mp.dme_gen attribute)": [[317, "mp.dme_gen.pg_lb"]], "pg_start (mp.dme_gen attribute)": [[317, "mp.dme_gen.pg_start"]], "pg_ub (mp.dme_gen attribute)": [[317, "mp.dme_gen.pg_ub"]], "pp_data_row_det() (mp.dme_gen method)": [[317, "mp.dme_gen.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen method)": [[317, "mp.dme_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_gen method)": [[317, "mp.dme_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_gen method)": [[317, "mp.dme_gen.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen method)": [[317, "mp.dme_gen.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen method)": [[317, "mp.dme_gen.pp_have_section_sum"]], "qg_lb (mp.dme_gen attribute)": [[317, "mp.dme_gen.qg_lb"]], "qg_start (mp.dme_gen attribute)": [[317, "mp.dme_gen.qg_start"]], "qg_ub (mp.dme_gen attribute)": [[317, "mp.dme_gen.qg_ub"]], "update_status() (mp.dme_gen method)": [[317, "mp.dme_gen.update_status"]], "violated_q_lims() (mp.dme_gen method)": [[317, "mp.dme_gen.violated_q_lims"]], "vm_setpoint (mp.dme_gen attribute)": [[317, "mp.dme_gen.vm_setpoint"]], "apply_vm_setpoint() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.apply_vm_setpoint"]], "build_params() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.build_params"]], "bus (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.bus"]], "bus_on (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.bus_on"]], "cxn_idx_prop() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.cxn_idx_prop"]], "cxn_type() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.cxn_type"]], "dme_gen3p (class in mp)": [[318, "mp.dme_gen3p"]], "initialize() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.initialize"]], "label() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.label"]], "labels() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.labels"]], "main_table_var_names() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.main_table_var_names"]], "name() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.name"]], "pg1_start (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.pg1_start"]], "pg2_start (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.pg2_start"]], "pg3_start (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.pg3_start"]], "pp_data_row_det() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.pp_have_section_sum"]], "qg1_start (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.qg1_start"]], "qg2_start (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.qg2_start"]], "qg3_start (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.qg3_start"]], "update_status() (mp.dme_gen3p method)": [[318, "mp.dme_gen3p.update_status"]], "vm1_setpoint (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.vm1_setpoint"]], "vm2_setpoint (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.vm2_setpoint"]], "vm3_setpoint (mp.dme_gen3p attribute)": [[318, "mp.dme_gen3p.vm3_setpoint"]], "dme_gen3p_opf (class in mp)": [[319, "mp.dme_gen3p_opf"]], "build_cost_params() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.build_cost_params"]], "dme_gen_opf (class in mp)": [[320, "mp.dme_gen_opf"]], "export_vars() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.export_vars"]], "export_vars_offline_val() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.export_vars_offline_val"]], "have_cost() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.have_cost"]], "main_table_var_names() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.main_table_var_names"]], "max_pwl_gencost() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.max_pwl_gencost"]], "pp_binding_rows_lim() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_gen_opf method)": [[320, "mp.dme_gen_opf.pretty_print"]], "apply_vm_setpoints() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.apply_vm_setpoints"]], "build_params() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.build_params"]], "cxn_idx_prop() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.cxn_idx_prop"]], "cxn_type() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.cxn_type"]], "dme_legacy_dcline (class in mp)": [[321, "mp.dme_legacy_dcline"]], "export_vars() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.export_vars_offline_val"]], "fbus (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.fbus"]], "fbus_on (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.fbus_on"]], "have_cost() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.have_cost"]], "initialize() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.initialize"]], "label() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.label"]], "labels() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.labels"]], "loss0 (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.loss0"]], "loss1 (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.loss1"]], "main_table_var_names() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.main_table_var_names"]], "name() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.name"]], "p_fr_lb (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.p_fr_lb"]], "p_fr_start (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.p_fr_start"]], "p_fr_ub (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.p_fr_ub"]], "p_to_start (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.p_to_start"]], "pp_data_row_det() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.pp_data_row_det"]], "pp_data_sum() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.pp_data_sum"]], "pp_get_headers_det() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.pp_have_section_sum"]], "q_fr_lb (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.q_fr_lb"]], "q_fr_start (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.q_fr_start"]], "q_fr_ub (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.q_fr_ub"]], "q_to_lb (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.q_to_lb"]], "q_to_start (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.q_to_start"]], "q_to_ub (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.q_to_ub"]], "tbus (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.tbus"]], "tbus_on (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.tbus_on"]], "update_status() (mp.dme_legacy_dcline method)": [[321, "mp.dme_legacy_dcline.update_status"]], "vm_setpoint_fr (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.vm_setpoint_fr"]], "vm_setpoint_to (mp.dme_legacy_dcline attribute)": [[321, "mp.dme_legacy_dcline.vm_setpoint_to"]], "build_cost_params() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.build_cost_params"]], "dme_legacy_dcline_opf (class in mp)": [[322, "mp.dme_legacy_dcline_opf"]], "export_vars() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.export_vars_offline_val"]], "have_cost() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.have_cost"]], "main_table_var_names() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_legacy_dcline_opf method)": [[322, "mp.dme_legacy_dcline_opf.pretty_print"]], "build_params() (mp.dme_line3p method)": [[323, "mp.dme_line3p.build_params"]], "create_line_construction_table() (mp.dme_line3p method)": [[323, "mp.dme_line3p.create_line_construction_table"]], "cxn_idx_prop() (mp.dme_line3p method)": [[323, "mp.dme_line3p.cxn_idx_prop"]], "cxn_type() (mp.dme_line3p method)": [[323, "mp.dme_line3p.cxn_type"]], "dme_line3p (class in mp)": [[323, "mp.dme_line3p"]], "fbus (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.fbus"]], "freq (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.freq"]], "initialize() (mp.dme_line3p method)": [[323, "mp.dme_line3p.initialize"]], "label() (mp.dme_line3p method)": [[323, "mp.dme_line3p.label"]], "labels() (mp.dme_line3p method)": [[323, "mp.dme_line3p.labels"]], "lc (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.lc"]], "lc_tab (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.lc_tab"]], "lc_table_var_names() (mp.dme_line3p method)": [[323, "mp.dme_line3p.lc_table_var_names"]], "lc_y_idx (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.lc_y_idx"]], "len (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.len"]], "main_table_var_names() (mp.dme_line3p method)": [[323, "mp.dme_line3p.main_table_var_names"]], "name() (mp.dme_line3p method)": [[323, "mp.dme_line3p.name"]], "pp_data_row_det() (mp.dme_line3p method)": [[323, "mp.dme_line3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_line3p method)": [[323, "mp.dme_line3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_line3p method)": [[323, "mp.dme_line3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_line3p method)": [[323, "mp.dme_line3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_line3p method)": [[323, "mp.dme_line3p.pp_have_section_sum"]], "pretty_print() (mp.dme_line3p method)": [[323, "mp.dme_line3p.pretty_print"]], "symmat2vec() (mp.dme_line3p method)": [[323, "mp.dme_line3p.symmat2vec"]], "tbus (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.tbus"]], "update_status() (mp.dme_line3p method)": [[323, "mp.dme_line3p.update_status"]], "vec2symmat() (mp.dme_line3p method)": [[323, "mp.dme_line3p.vec2symmat"]], "yc (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.yc"]], "ys (mp.dme_line3p attribute)": [[323, "mp.dme_line3p.ys"]], "dme_line3p_opf (class in mp)": [[324, "mp.dme_line3p_opf"]], "build_params() (mp.dme_load method)": [[325, "mp.dme_load.build_params"]], "bus (mp.dme_load attribute)": [[325, "mp.dme_load.bus"]], "cxn_idx_prop() (mp.dme_load method)": [[325, "mp.dme_load.cxn_idx_prop"]], "cxn_type() (mp.dme_load method)": [[325, "mp.dme_load.cxn_type"]], "dme_load (class in mp)": [[325, "mp.dme_load"]], "initialize() (mp.dme_load method)": [[325, "mp.dme_load.initialize"]], "label() (mp.dme_load method)": [[325, "mp.dme_load.label"]], "labels() (mp.dme_load method)": [[325, "mp.dme_load.labels"]], "main_table_var_names() (mp.dme_load method)": [[325, "mp.dme_load.main_table_var_names"]], "name() (mp.dme_load method)": [[325, "mp.dme_load.name"]], "pd (mp.dme_load attribute)": [[325, "mp.dme_load.pd"]], "pd_i (mp.dme_load attribute)": [[325, "mp.dme_load.pd_i"]], "pd_z (mp.dme_load attribute)": [[325, "mp.dme_load.pd_z"]], "pp_data_row_det() (mp.dme_load method)": [[325, "mp.dme_load.pp_data_row_det"]], "pp_data_sum() (mp.dme_load method)": [[325, "mp.dme_load.pp_data_sum"]], "pp_get_footers_det() (mp.dme_load method)": [[325, "mp.dme_load.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_load method)": [[325, "mp.dme_load.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load method)": [[325, "mp.dme_load.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load method)": [[325, "mp.dme_load.pp_have_section_sum"]], "qd (mp.dme_load attribute)": [[325, "mp.dme_load.qd"]], "qd_i (mp.dme_load attribute)": [[325, "mp.dme_load.qd_i"]], "qd_z (mp.dme_load attribute)": [[325, "mp.dme_load.qd_z"]], "update_status() (mp.dme_load method)": [[325, "mp.dme_load.update_status"]], "build_params() (mp.dme_load3p method)": [[326, "mp.dme_load3p.build_params"]], "bus (mp.dme_load3p attribute)": [[326, "mp.dme_load3p.bus"]], "cxn_idx_prop() (mp.dme_load3p method)": [[326, "mp.dme_load3p.cxn_idx_prop"]], "cxn_type() (mp.dme_load3p method)": [[326, "mp.dme_load3p.cxn_type"]], "dme_load3p (class in mp)": [[326, "mp.dme_load3p"]], "initialize() (mp.dme_load3p method)": [[326, "mp.dme_load3p.initialize"]], "label() (mp.dme_load3p method)": [[326, "mp.dme_load3p.label"]], "labels() (mp.dme_load3p method)": [[326, "mp.dme_load3p.labels"]], "main_table_var_names() (mp.dme_load3p method)": [[326, "mp.dme_load3p.main_table_var_names"]], "name() (mp.dme_load3p method)": [[326, "mp.dme_load3p.name"]], "pd1 (mp.dme_load3p attribute)": [[326, "mp.dme_load3p.pd1"]], "pd2 (mp.dme_load3p attribute)": [[326, "mp.dme_load3p.pd2"]], "pd3 (mp.dme_load3p attribute)": [[326, "mp.dme_load3p.pd3"]], "pf1 (mp.dme_load3p attribute)": [[326, "mp.dme_load3p.pf1"]], "pf2 (mp.dme_load3p attribute)": [[326, "mp.dme_load3p.pf2"]], "pf3 (mp.dme_load3p attribute)": [[326, "mp.dme_load3p.pf3"]], "pp_data_row_det() (mp.dme_load3p method)": [[326, "mp.dme_load3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_load3p method)": [[326, "mp.dme_load3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_load3p method)": [[326, "mp.dme_load3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load3p method)": [[326, "mp.dme_load3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load3p method)": [[326, "mp.dme_load3p.pp_have_section_sum"]], "update_status() (mp.dme_load3p method)": [[326, "mp.dme_load3p.update_status"]], "dme_load3p_opf (class in mp)": [[327, "mp.dme_load3p_opf"]], "dme_load_cpf (class in mp)": [[328, "mp.dme_load_cpf"]], "export_vars() (mp.dme_load_cpf method)": [[328, "mp.dme_load_cpf.export_vars"]], "parameterized() (mp.dme_load_cpf method)": [[328, "mp.dme_load_cpf.parameterized"]], "dme_load_opf (class in mp)": [[329, "mp.dme_load_opf"]], "build_params() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.build_params"]], "dme_reserve_gen (class in mp)": [[330, "mp.dme_reserve_gen"]], "export_vars() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.export_vars_offline_val"]], "gen (mp.dme_reserve_gen attribute)": [[330, "mp.dme_reserve_gen.gen"]], "label() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.label"]], "labels() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.labels"]], "main_table_var_names() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.main_table_var_names"]], "name() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.name"]], "pp_binding_rows_lim() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_binding_rows_lim"]], "pp_data_row_det() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_data_row_lim"]], "pp_data_sum() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_get_headers_lim"]], "pp_have_section_det() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_have_section_det"]], "pp_have_section_lim() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_have_section_lim"]], "pp_have_section_sum() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.pp_have_section_sum"]], "r_ub (mp.dme_reserve_gen attribute)": [[330, "mp.dme_reserve_gen.r_ub"]], "update_status() (mp.dme_reserve_gen method)": [[330, "mp.dme_reserve_gen.update_status"]], "build_params() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.build_params"]], "dme_reserve_zone (class in mp)": [[331, "mp.dme_reserve_zone"]], "export_vars() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.export_vars_offline_val"]], "label() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.label"]], "labels() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.labels"]], "main_table_var_names() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.main_table_var_names"]], "name() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.name"]], "pp_data_row_det() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.pp_have_section_det"]], "req (mp.dme_reserve_zone attribute)": [[331, "mp.dme_reserve_zone.req"]], "update_status() (mp.dme_reserve_zone method)": [[331, "mp.dme_reserve_zone.update_status"]], "zones (mp.dme_reserve_zone attribute)": [[331, "mp.dme_reserve_zone.zones"]], "ctol (mp.dme_shared_opf attribute)": [[332, "mp.dme_shared_opf.ctol"]], "dme_shared_opf (class in mp)": [[332, "mp.dme_shared_opf"]], "pp_binding_rows_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_binding_rows_lim"]], "pp_data_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_data_lim"]], "pp_data_other() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_data_other"]], "pp_data_row_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_data_row_lim"]], "pp_get_footers_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_get_footers_lim"]], "pp_get_footers_other() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_get_footers_other"]], "pp_get_headers_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_get_headers_lim"]], "pp_get_headers_other() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_get_headers_other"]], "pp_get_title_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_have_section_lim"]], "pp_have_section_other() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_have_section_other"]], "pp_rows_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_rows_lim"]], "pp_rows_other() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_rows_other"]], "pp_set_tols_lim() (mp.dme_shared_opf method)": [[332, "mp.dme_shared_opf.pp_set_tols_lim"]], "ptol (mp.dme_shared_opf attribute)": [[332, "mp.dme_shared_opf.ptol"]], "bs (mp.dme_shunt attribute)": [[333, "mp.dme_shunt.bs"]], "build_params() (mp.dme_shunt method)": [[333, "mp.dme_shunt.build_params"]], "bus (mp.dme_shunt attribute)": [[333, "mp.dme_shunt.bus"]], "cxn_idx_prop() (mp.dme_shunt method)": [[333, "mp.dme_shunt.cxn_idx_prop"]], "cxn_type() (mp.dme_shunt method)": [[333, "mp.dme_shunt.cxn_type"]], "dme_shunt (class in mp)": [[333, "mp.dme_shunt"]], "gs (mp.dme_shunt attribute)": [[333, "mp.dme_shunt.gs"]], "initialize() (mp.dme_shunt method)": [[333, "mp.dme_shunt.initialize"]], "label() (mp.dme_shunt method)": [[333, "mp.dme_shunt.label"]], "labels() (mp.dme_shunt method)": [[333, "mp.dme_shunt.labels"]], "main_table_var_names() (mp.dme_shunt method)": [[333, "mp.dme_shunt.main_table_var_names"]], "name() (mp.dme_shunt method)": [[333, "mp.dme_shunt.name"]], "pp_data_row_det() (mp.dme_shunt method)": [[333, "mp.dme_shunt.pp_data_row_det"]], "pp_data_sum() (mp.dme_shunt method)": [[333, "mp.dme_shunt.pp_data_sum"]], "pp_get_footers_det() (mp.dme_shunt method)": [[333, "mp.dme_shunt.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_shunt method)": [[333, "mp.dme_shunt.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_shunt method)": [[333, "mp.dme_shunt.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_shunt method)": [[333, "mp.dme_shunt.pp_have_section_sum"]], "update_status() (mp.dme_shunt method)": [[333, "mp.dme_shunt.update_status"]], "bs1 (mp.dme_shunt3p attribute)": [[334, "mp.dme_shunt3p.bs1"]], "bs2 (mp.dme_shunt3p attribute)": [[334, "mp.dme_shunt3p.bs2"]], "bs3 (mp.dme_shunt3p attribute)": [[334, "mp.dme_shunt3p.bs3"]], "build_params() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.build_params"]], "bus (mp.dme_shunt3p attribute)": [[334, "mp.dme_shunt3p.bus"]], "cxn_idx_prop() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.cxn_idx_prop"]], "cxn_type() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.cxn_type"]], "dme_shunt3p (class in mp)": [[334, "mp.dme_shunt3p"]], "gs1 (mp.dme_shunt3p attribute)": [[334, "mp.dme_shunt3p.gs1"]], "gs2 (mp.dme_shunt3p attribute)": [[334, "mp.dme_shunt3p.gs2"]], "gs3 (mp.dme_shunt3p attribute)": [[334, "mp.dme_shunt3p.gs3"]], "initialize() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.initialize"]], "label() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.label"]], "labels() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.labels"]], "main_table_var_names() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.main_table_var_names"]], "name() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.name"]], "pp_data_row_det() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.pp_have_section_sum"]], "update_status() (mp.dme_shunt3p method)": [[334, "mp.dme_shunt3p.update_status"]], "dme_shunt3p_opf (class in mp)": [[335, "mp.dme_shunt3p_opf"]], "dme_shunt_cpf (class in mp)": [[336, "mp.dme_shunt_cpf"]], "export_vars() (mp.dme_shunt_cpf method)": [[336, "mp.dme_shunt_cpf.export_vars"]], "parameterized() (mp.dme_shunt_cpf method)": [[336, "mp.dme_shunt_cpf.parameterized"]], "dme_shunt_opf (class in mp)": [[337, "mp.dme_shunt_opf"]], "build_params() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.build_params"]], "cxn_idx_prop() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.cxn_idx_prop"]], "cxn_type() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.cxn_type"]], "dme_xfmr3p (class in mp)": [[338, "mp.dme_xfmr3p"]], "fbus (mp.dme_xfmr3p attribute)": [[338, "mp.dme_xfmr3p.fbus"]], "initialize() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.initialize"]], "label() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.label"]], "labels() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.labels"]], "main_table_var_names() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.main_table_var_names"]], "name() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.name"]], "pp_data_row_det() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.pp_have_section_sum"]], "pretty_print() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.pretty_print"]], "r (mp.dme_xfmr3p attribute)": [[338, "mp.dme_xfmr3p.r"]], "tbus (mp.dme_xfmr3p attribute)": [[338, "mp.dme_xfmr3p.tbus"]], "tm (mp.dme_xfmr3p attribute)": [[338, "mp.dme_xfmr3p.tm"]], "update_status() (mp.dme_xfmr3p method)": [[338, "mp.dme_xfmr3p.update_status"]], "x (mp.dme_xfmr3p attribute)": [[338, "mp.dme_xfmr3p.x"]], "dme_xfmr3p_opf (class in mp)": [[339, "mp.dme_xfmr3p_opf"]], "element_classes (mp.element_container attribute)": [[340, "mp.element_container.element_classes"]], "element_container (class in mp)": [[340, "mp.element_container"]], "elements (mp.element_container attribute)": [[340, "mp.element_container.elements"]], "modify_element_classes() (mp.element_container method)": [[340, "mp.element_container.modify_element_classes"]], "data_model_class() (mp.extension method)": [[341, "mp.extension.data_model_class"]], "dm_converter_class() (mp.extension method)": [[341, "mp.extension.dm_converter_class"]], "dm_element_classes() (mp.extension method)": [[341, "mp.extension.dm_element_classes"]], "dmc_element_classes() (mp.extension method)": [[341, "mp.extension.dmc_element_classes"]], "extension (class in mp)": [[341, "mp.extension"]], "math_model_class() (mp.extension method)": [[341, "mp.extension.math_model_class"]], "mm_element_classes() (mp.extension method)": [[341, "mp.extension.mm_element_classes"]], "network_model_class() (mp.extension method)": [[341, "mp.extension.network_model_class"]], "nm_element_classes() (mp.extension method)": [[341, "mp.extension.nm_element_classes"]], "task_class() (mp.extension method)": [[341, "mp.extension.task_class"]], "find_form_class() (mp.form method)": [[342, "mp.form.find_form_class"]], "form (class in mp)": [[342, "mp.form"]], "form_name() (mp.form method)": [[342, "mp.form.form_name"]], "form_tag() (mp.form method)": [[342, "mp.form.form_tag"]], "get_params() (mp.form method)": [[342, "mp.form.get_params"]], "model_params() (mp.form method)": [[342, "mp.form.model_params"]], "model_vvars() (mp.form method)": [[342, "mp.form.model_vvars"]], "model_zvars() (mp.form method)": [[342, "mp.form.model_zvars"]], "l (mp.form_ac attribute)": [[343, "mp.form_ac.L"]], "m (mp.form_ac attribute)": [[343, "mp.form_ac.M"]], "n (mp.form_ac attribute)": [[343, "mp.form_ac.N"]], "y (mp.form_ac attribute)": [[343, "mp.form_ac.Y"]], "aux_data_va_vm() (mp.form_ac method)": [[343, "mp.form_ac.aux_data_va_vm"]], "form_ac (class in mp)": [[343, "mp.form_ac"]], "i (mp.form_ac attribute)": [[343, "mp.form_ac.i"]], "inln (mp.form_ac attribute)": [[343, "mp.form_ac.inln"]], "inln_hess (mp.form_ac attribute)": [[343, "mp.form_ac.inln_hess"]], "model_params() (mp.form_ac method)": [[343, "mp.form_ac.model_params"]], "model_zvars() (mp.form_ac method)": [[343, "mp.form_ac.model_zvars"]], "param_ncols (mp.form_ac attribute)": [[343, "mp.form_ac.param_ncols"]], "port_active_power2_lim_fcn() (mp.form_ac method)": [[343, "mp.form_ac.port_active_power2_lim_fcn"]], "port_active_power2_lim_hess() (mp.form_ac method)": [[343, "mp.form_ac.port_active_power2_lim_hess"]], "port_active_power_lim_fcn() (mp.form_ac method)": [[343, "mp.form_ac.port_active_power_lim_fcn"]], "port_active_power_lim_hess() (mp.form_ac method)": [[343, "mp.form_ac.port_active_power_lim_hess"]], "port_apparent_power_lim_fcn() (mp.form_ac method)": [[343, "mp.form_ac.port_apparent_power_lim_fcn"]], "port_apparent_power_lim_hess() (mp.form_ac method)": [[343, "mp.form_ac.port_apparent_power_lim_hess"]], "port_current_lim_fcn() (mp.form_ac method)": [[343, "mp.form_ac.port_current_lim_fcn"]], "port_current_lim_hess() (mp.form_ac method)": [[343, "mp.form_ac.port_current_lim_hess"]], "port_inj_current() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_current"]], "port_inj_current_hess() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_current_hess"]], "port_inj_current_hess_v() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_current_jac"]], "port_inj_power() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_power"]], "port_inj_power_hess() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_power_hess"]], "port_inj_power_hess_v() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_ac method)": [[343, "mp.form_ac.port_inj_power_jac"]], "s (mp.form_ac attribute)": [[343, "mp.form_ac.s"]], "snln (mp.form_ac attribute)": [[343, "mp.form_ac.snln"]], "snln_hess (mp.form_ac attribute)": [[343, "mp.form_ac.snln_hess"]], "aux_data_va_vm() (mp.form_acc method)": [[344, "mp.form_acc.aux_data_va_vm"]], "form_acc (class in mp)": [[344, "mp.form_acc"]], "form_name() (mp.form_acc method)": [[344, "mp.form_acc.form_name"]], "form_tag() (mp.form_acc method)": [[344, "mp.form_acc.form_tag"]], "model_vvars() (mp.form_acc method)": [[344, "mp.form_acc.model_vvars"]], "port_inj_current_hess_v() (mp.form_acc method)": [[344, "mp.form_acc.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acc method)": [[344, "mp.form_acc.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acc method)": [[344, "mp.form_acc.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acc method)": [[344, "mp.form_acc.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acc method)": [[344, "mp.form_acc.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acc method)": [[344, "mp.form_acc.port_inj_power_jac"]], "va_fcn() (mp.form_acc method)": [[344, "mp.form_acc.va_fcn"]], "va_hess() (mp.form_acc method)": [[344, "mp.form_acc.va_hess"]], "vm2_fcn() (mp.form_acc method)": [[344, "mp.form_acc.vm2_fcn"]], "vm2_hess() (mp.form_acc method)": [[344, "mp.form_acc.vm2_hess"]], "aux_data_va_vm() (mp.form_acp method)": [[345, "mp.form_acp.aux_data_va_vm"]], "form_acp (class in mp)": [[345, "mp.form_acp"]], "form_name() (mp.form_acp method)": [[345, "mp.form_acp.form_name"]], "form_tag() (mp.form_acp method)": [[345, "mp.form_acp.form_tag"]], "model_vvars() (mp.form_acp method)": [[345, "mp.form_acp.model_vvars"]], "port_inj_current_hess_v() (mp.form_acp method)": [[345, "mp.form_acp.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acp method)": [[345, "mp.form_acp.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acp method)": [[345, "mp.form_acp.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acp method)": [[345, "mp.form_acp.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acp method)": [[345, "mp.form_acp.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acp method)": [[345, "mp.form_acp.port_inj_power_jac"]], "b (mp.form_dc attribute)": [[346, "mp.form_dc.B"]], "k (mp.form_dc attribute)": [[346, "mp.form_dc.K"]], "form_dc (class in mp)": [[346, "mp.form_dc"]], "form_name() (mp.form_dc method)": [[346, "mp.form_dc.form_name"]], "form_tag() (mp.form_dc method)": [[346, "mp.form_dc.form_tag"]], "model_params() (mp.form_dc method)": [[346, "mp.form_dc.model_params"]], "model_vvars() (mp.form_dc method)": [[346, "mp.form_dc.model_vvars"]], "model_zvars() (mp.form_dc method)": [[346, "mp.form_dc.model_zvars"]], "p (mp.form_dc attribute)": [[346, "mp.form_dc.p"]], "param_ncols (mp.form_dc attribute)": [[346, "mp.form_dc.param_ncols"]], "port_inj_power() (mp.form_dc method)": [[346, "mp.form_dc.port_inj_power"]], "add_elements() (mp.mapped_array method)": [[347, "mp.mapped_array.add_elements"]], "add_names() (mp.mapped_array method)": [[347, "mp.mapped_array.add_names"]], "copy() (mp.mapped_array method)": [[347, "mp.mapped_array.copy"]], "delete_elements() (mp.mapped_array method)": [[347, "mp.mapped_array.delete_elements"]], "display() (mp.mapped_array method)": [[347, "mp.mapped_array.display"]], "has_name() (mp.mapped_array method)": [[347, "mp.mapped_array.has_name"]], "length() (mp.mapped_array method)": [[347, "mp.mapped_array.length"]], "mapped_array (class in mp)": [[347, "mp.mapped_array"]], "mapped_array() (mp.mapped_array method)": [[347, "mp.mapped_array.mapped_array"]], "name2idx() (mp.mapped_array method)": [[347, "mp.mapped_array.name2idx"]], "size() (mp.mapped_array method)": [[347, "mp.mapped_array.size"]], "subsasgn() (mp.mapped_array method)": [[347, "mp.mapped_array.subsasgn"]], "subsref() (mp.mapped_array method)": [[347, "mp.mapped_array.subsref"]], "add_aux_data() (mp.math_model method)": [[348, "mp.math_model.add_aux_data"]], "add_constraints() (mp.math_model method)": [[348, "mp.math_model.add_constraints"]], "add_costs() (mp.math_model method)": [[348, "mp.math_model.add_costs"]], "add_node_balance_constraints() (mp.math_model method)": [[348, "mp.math_model.add_node_balance_constraints"]], "add_system_constraints() (mp.math_model method)": [[348, "mp.math_model.add_system_constraints"]], "add_system_costs() (mp.math_model method)": [[348, "mp.math_model.add_system_costs"]], "add_system_vars() (mp.math_model method)": [[348, "mp.math_model.add_system_vars"]], "add_vars() (mp.math_model method)": [[348, "mp.math_model.add_vars"]], "aux_data (mp.math_model attribute)": [[348, "mp.math_model.aux_data"]], "build() (mp.math_model method)": [[348, "mp.math_model.build"]], "build_base_aux_data() (mp.math_model method)": [[348, "mp.math_model.build_base_aux_data"]], "data_model_update() (mp.math_model method)": [[348, "mp.math_model.data_model_update"]], "display() (mp.math_model method)": [[348, "mp.math_model.display"]], "form_name() (mp.math_model method)": [[348, "mp.math_model.form_name"]], "form_tag() (mp.math_model method)": [[348, "mp.math_model.form_tag"]], "math_model (class in mp)": [[348, "mp.math_model"]], "network_model_x_soln() (mp.math_model method)": [[348, "mp.math_model.network_model_x_soln"]], "solve_opts() (mp.math_model method)": [[348, "mp.math_model.solve_opts"]], "task_name() (mp.math_model method)": [[348, "mp.math_model.task_name"]], "task_tag() (mp.math_model method)": [[348, "mp.math_model.task_tag"]], "update_nm_vars() (mp.math_model method)": [[348, "mp.math_model.update_nm_vars"]], "math_model_cpf_acc (class in mp)": [[349, "mp.math_model_cpf_acc"]], "math_model_cpf_acc() (mp.math_model_cpf_acc method)": [[349, "mp.math_model_cpf_acc.math_model_cpf_acc"]], "add_node_balance_constraints() (mp.math_model_cpf_acci method)": [[350, "mp.math_model_cpf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acci method)": [[350, "mp.math_model_cpf_acci.form_name"]], "form_tag() (mp.math_model_cpf_acci method)": [[350, "mp.math_model_cpf_acci.form_tag"]], "math_model_cpf_acci (class in mp)": [[350, "mp.math_model_cpf_acci"]], "add_node_balance_constraints() (mp.math_model_cpf_accs method)": [[351, "mp.math_model_cpf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_accs method)": [[351, "mp.math_model_cpf_accs.form_name"]], "form_tag() (mp.math_model_cpf_accs method)": [[351, "mp.math_model_cpf_accs.form_tag"]], "math_model_cpf_accs (class in mp)": [[351, "mp.math_model_cpf_accs"]], "callback_vlim() (mp.math_model_cpf_acp method)": [[352, "mp.math_model_cpf_acp.callback_vlim"]], "event_vlim() (mp.math_model_cpf_acp method)": [[352, "mp.math_model_cpf_acp.event_vlim"]], "math_model_cpf_acp (class in mp)": [[352, "mp.math_model_cpf_acp"]], "math_model_cpf_acp() (mp.math_model_cpf_acp method)": [[352, "mp.math_model_cpf_acp.math_model_cpf_acp"]], "add_node_balance_constraints() (mp.math_model_cpf_acpi method)": [[353, "mp.math_model_cpf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acpi method)": [[353, "mp.math_model_cpf_acpi.form_name"]], "form_tag() (mp.math_model_cpf_acpi method)": [[353, "mp.math_model_cpf_acpi.form_tag"]], "math_model_cpf_acpi (class in mp)": [[353, "mp.math_model_cpf_acpi"]], "add_node_balance_constraints() (mp.math_model_cpf_acps method)": [[354, "mp.math_model_cpf_acps.add_node_balance_constraints"]], "expand_z_warmstart() (mp.math_model_cpf_acps method)": [[354, "mp.math_model_cpf_acps.expand_z_warmstart"]], "form_name() (mp.math_model_cpf_acps method)": [[354, "mp.math_model_cpf_acps.form_name"]], "form_tag() (mp.math_model_cpf_acps method)": [[354, "mp.math_model_cpf_acps.form_tag"]], "math_model_cpf_acps (class in mp)": [[354, "mp.math_model_cpf_acps"]], "solve_opts_warmstart() (mp.math_model_cpf_acps method)": [[354, "mp.math_model_cpf_acps.solve_opts_warmstart"]], "add_system_vars() (mp.math_model_opf method)": [[355, "mp.math_model_opf.add_system_vars"]], "build_aux_data() (mp.math_model_opf method)": [[355, "mp.math_model_opf.build_aux_data"]], "interior_va() (mp.math_model_opf method)": [[355, "mp.math_model_opf.interior_va"]], "interior_x0() (mp.math_model_opf method)": [[355, "mp.math_model_opf.interior_x0"]], "math_model_opf (class in mp)": [[355, "mp.math_model_opf"]], "task_name() (mp.math_model_opf method)": [[355, "mp.math_model_opf.task_name"]], "task_tag() (mp.math_model_opf method)": [[355, "mp.math_model_opf.task_tag"]], "math_model_opf_ac (class in mp)": [[356, "mp.math_model_opf_ac"]], "nodal_current_balance_fcn() (mp.math_model_opf_ac method)": [[356, "mp.math_model_opf_ac.nodal_current_balance_fcn"]], "nodal_current_balance_hess() (mp.math_model_opf_ac method)": [[356, "mp.math_model_opf_ac.nodal_current_balance_hess"]], "nodal_power_balance_fcn() (mp.math_model_opf_ac method)": [[356, "mp.math_model_opf_ac.nodal_power_balance_fcn"]], "nodal_power_balance_hess() (mp.math_model_opf_ac method)": [[356, "mp.math_model_opf_ac.nodal_power_balance_hess"]], "solve_opts() (mp.math_model_opf_ac method)": [[356, "mp.math_model_opf_ac.solve_opts"]], "convert_x_m2n() (mp.math_model_opf_acc method)": [[357, "mp.math_model_opf_acc.convert_x_m2n"]], "interior_va() (mp.math_model_opf_acc method)": [[357, "mp.math_model_opf_acc.interior_va"]], "math_model_opf_acc (class in mp)": [[357, "mp.math_model_opf_acc"]], "math_model_opf_acc() (mp.math_model_opf_acc method)": [[357, "mp.math_model_opf_acc.math_model_opf_acc"]], "add_node_balance_constraints() (mp.math_model_opf_acci method)": [[358, "mp.math_model_opf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acci method)": [[358, "mp.math_model_opf_acci.form_name"]], "form_tag() (mp.math_model_opf_acci method)": [[358, "mp.math_model_opf_acci.form_tag"]], "math_model_opf_acci (class in mp)": [[358, "mp.math_model_opf_acci"]], "node_power_balance_prices() (mp.math_model_opf_acci method)": [[358, "mp.math_model_opf_acci.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.add_vars"]], "build() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.build"]], "def_set_types() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.legacy_user_var_names"]], "math_model_opf_acci_legacy (class in mp)": [[359, "mp.math_model_opf_acci_legacy"]], "math_model_opf_acci_legacy() (mp.math_model_opf_acci_legacy method)": [[359, "mp.math_model_opf_acci_legacy.math_model_opf_acci_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_accs method)": [[360, "mp.math_model_opf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_accs method)": [[360, "mp.math_model_opf_accs.form_name"]], "form_tag() (mp.math_model_opf_accs method)": [[360, "mp.math_model_opf_accs.form_tag"]], "math_model_opf_accs (class in mp)": [[360, "mp.math_model_opf_accs"]], "node_power_balance_prices() (mp.math_model_opf_accs method)": [[360, "mp.math_model_opf_accs.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.add_vars"]], "build() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.build"]], "def_set_types() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.legacy_user_var_names"]], "math_model_opf_accs_legacy (class in mp)": [[361, "mp.math_model_opf_accs_legacy"]], "math_model_opf_accs_legacy() (mp.math_model_opf_accs_legacy method)": [[361, "mp.math_model_opf_accs_legacy.math_model_opf_accs_legacy"]], "convert_x_m2n() (mp.math_model_opf_acp method)": [[362, "mp.math_model_opf_acp.convert_x_m2n"]], "math_model_opf_acp (class in mp)": [[362, "mp.math_model_opf_acp"]], "math_model_opf_acp() (mp.math_model_opf_acp method)": [[362, "mp.math_model_opf_acp.math_model_opf_acp"]], "add_node_balance_constraints() (mp.math_model_opf_acpi method)": [[363, "mp.math_model_opf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acpi method)": [[363, "mp.math_model_opf_acpi.form_name"]], "form_tag() (mp.math_model_opf_acpi method)": [[363, "mp.math_model_opf_acpi.form_tag"]], "math_model_opf_acpi (class in mp)": [[363, "mp.math_model_opf_acpi"]], "node_power_balance_prices() (mp.math_model_opf_acpi method)": [[363, "mp.math_model_opf_acpi.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.add_vars"]], "build() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.build"]], "def_set_types() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.legacy_user_var_names"]], "math_model_opf_acpi_legacy (class in mp)": [[364, "mp.math_model_opf_acpi_legacy"]], "math_model_opf_acpi_legacy() (mp.math_model_opf_acpi_legacy method)": [[364, "mp.math_model_opf_acpi_legacy.math_model_opf_acpi_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_acps method)": [[365, "mp.math_model_opf_acps.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acps method)": [[365, "mp.math_model_opf_acps.form_name"]], "form_tag() (mp.math_model_opf_acps method)": [[365, "mp.math_model_opf_acps.form_tag"]], "math_model_opf_acps (class in mp)": [[365, "mp.math_model_opf_acps"]], "node_power_balance_prices() (mp.math_model_opf_acps method)": [[365, "mp.math_model_opf_acps.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.add_vars"]], "build() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.build"]], "def_set_types() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.legacy_user_var_names"]], "math_model_opf_acps_legacy (class in mp)": [[366, "mp.math_model_opf_acps_legacy"]], "math_model_opf_acps_legacy() (mp.math_model_opf_acps_legacy method)": [[366, "mp.math_model_opf_acps_legacy.math_model_opf_acps_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_dc method)": [[367, "mp.math_model_opf_dc.add_node_balance_constraints"]], "convert_x_m2n() (mp.math_model_opf_dc method)": [[367, "mp.math_model_opf_dc.convert_x_m2n"]], "form_name() (mp.math_model_opf_dc method)": [[367, "mp.math_model_opf_dc.form_name"]], "form_tag() (mp.math_model_opf_dc method)": [[367, "mp.math_model_opf_dc.form_tag"]], "math_model_opf_dc (class in mp)": [[367, "mp.math_model_opf_dc"]], "math_model_opf_dc() (mp.math_model_opf_dc method)": [[367, "mp.math_model_opf_dc.math_model_opf_dc"]], "solve_opts() (mp.math_model_opf_dc method)": [[367, "mp.math_model_opf_dc.solve_opts"]], "add_named_set() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.add_vars"]], "build() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.build"]], "def_set_types() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.legacy_user_var_names"]], "math_model_opf_dc_legacy (class in mp)": [[368, "mp.math_model_opf_dc_legacy"]], "math_model_opf_dc_legacy() (mp.math_model_opf_dc_legacy method)": [[368, "mp.math_model_opf_dc_legacy.math_model_opf_dc_legacy"]], "add_costs() (mp.math_model_pf method)": [[369, "mp.math_model_pf.add_costs"]], "add_system_vars() (mp.math_model_pf method)": [[369, "mp.math_model_pf.add_system_vars"]], "math_model_pf (class in mp)": [[369, "mp.math_model_pf"]], "solve_opts() (mp.math_model_pf method)": [[369, "mp.math_model_pf.solve_opts"]], "task_name() (mp.math_model_pf method)": [[369, "mp.math_model_pf.task_name"]], "task_tag() (mp.math_model_pf method)": [[369, "mp.math_model_pf.task_tag"]], "math_model_pf_ac (class in mp)": [[370, "mp.math_model_pf_ac"]], "math_model_pf_ac() (mp.math_model_pf_ac method)": [[370, "mp.math_model_pf_ac.math_model_pf_ac"]], "add_node_balance_constraints() (mp.math_model_pf_acci method)": [[371, "mp.math_model_pf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acci method)": [[371, "mp.math_model_pf_acci.form_name"]], "form_tag() (mp.math_model_pf_acci method)": [[371, "mp.math_model_pf_acci.form_tag"]], "math_model_pf_acci (class in mp)": [[371, "mp.math_model_pf_acci"]], "add_node_balance_constraints() (mp.math_model_pf_accs method)": [[372, "mp.math_model_pf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_accs method)": [[372, "mp.math_model_pf_accs.form_name"]], "form_tag() (mp.math_model_pf_accs method)": [[372, "mp.math_model_pf_accs.form_tag"]], "math_model_pf_accs (class in mp)": [[372, "mp.math_model_pf_accs"]], "add_node_balance_constraints() (mp.math_model_pf_acpi method)": [[373, "mp.math_model_pf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acpi method)": [[373, "mp.math_model_pf_acpi.form_name"]], "form_tag() (mp.math_model_pf_acpi method)": [[373, "mp.math_model_pf_acpi.form_tag"]], "math_model_pf_acpi (class in mp)": [[373, "mp.math_model_pf_acpi"]], "add_node_balance_constraints() (mp.math_model_pf_acps method)": [[374, "mp.math_model_pf_acps.add_node_balance_constraints"]], "fd_jac_approx() (mp.math_model_pf_acps method)": [[374, "mp.math_model_pf_acps.fd_jac_approx"]], "fdpf_b_matrix_models() (mp.math_model_pf_acps method)": [[374, "mp.math_model_pf_acps.fdpf_B_matrix_models"]], "form_name() (mp.math_model_pf_acps method)": [[374, "mp.math_model_pf_acps.form_name"]], "form_tag() (mp.math_model_pf_acps method)": [[374, "mp.math_model_pf_acps.form_tag"]], "gs_x_update() (mp.math_model_pf_acps method)": [[374, "mp.math_model_pf_acps.gs_x_update"]], "math_model_pf_acps (class in mp)": [[374, "mp.math_model_pf_acps"]], "zg_x_update() (mp.math_model_pf_acps method)": [[374, "mp.math_model_pf_acps.zg_x_update"]], "add_node_balance_constraints() (mp.math_model_pf_dc method)": [[375, "mp.math_model_pf_dc.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_dc method)": [[375, "mp.math_model_pf_dc.form_name"]], "form_tag() (mp.math_model_pf_dc method)": [[375, "mp.math_model_pf_dc.form_tag"]], "math_model_pf_dc (class in mp)": [[375, "mp.math_model_pf_dc"]], "math_model_pf_dc() (mp.math_model_pf_dc method)": [[375, "mp.math_model_pf_dc.math_model_pf_dc"]], "solve_opts() (mp.math_model_pf_dc method)": [[375, "mp.math_model_pf_dc.solve_opts"]], "add_constraints() (mp.mm_element method)": [[376, "mp.mm_element.add_constraints"]], "add_costs() (mp.mm_element method)": [[376, "mp.mm_element.add_costs"]], "add_vars() (mp.mm_element method)": [[376, "mp.mm_element.add_vars"]], "data_model_element() (mp.mm_element method)": [[376, "mp.mm_element.data_model_element"]], "data_model_update() (mp.mm_element method)": [[376, "mp.mm_element.data_model_update"]], "data_model_update_off() (mp.mm_element method)": [[376, "mp.mm_element.data_model_update_off"]], "data_model_update_on() (mp.mm_element method)": [[376, "mp.mm_element.data_model_update_on"]], "mm_element (class in mp)": [[376, "mp.mm_element"]], "name() (mp.mm_element method)": [[376, "mp.mm_element.name"]], "network_model_element() (mp.mm_element method)": [[376, "mp.mm_element.network_model_element"]], "add_legacy_cost() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.add_legacy_cost"]], "add_legacy_user_constraints() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.add_legacy_user_constraints"]], "add_legacy_user_constraints_ac() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.add_legacy_user_constraints_ac"]], "add_legacy_user_costs() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.add_legacy_user_costs"]], "add_legacy_user_vars() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.add_legacy_user_vars"]], "build_legacy() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.build_legacy"]], "eval_legacy_cost() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.eval_legacy_cost"]], "get_mpc() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.get_mpc"]], "init_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.init_set_types_legacy"]], "mm_shared_opf_legacy (class in mp)": [[377, "mp.mm_shared_opf_legacy"]], "mod_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.mod_set_types_legacy"]], "params_legacy_cost() (mp.mm_shared_opf_legacy method)": [[377, "mp.mm_shared_opf_legacy.params_legacy_cost"]], "build_aux_data() (mp.mm_shared_pfcpf method)": [[378, "mp.mm_shared_pfcpf.build_aux_data"]], "mm_shared_pfcpf (class in mp)": [[378, "mp.mm_shared_pfcpf"]], "add_system_varset_pf() (mp.mm_shared_pfcpf_ac method)": [[379, "mp.mm_shared_pfcpf_ac.add_system_varset_pf"]], "mm_shared_pfcpf_ac (class in mp)": [[379, "mp.mm_shared_pfcpf_ac"]], "update_z() (mp.mm_shared_pfcpf_ac method)": [[379, "mp.mm_shared_pfcpf_ac.update_z"]], "build_aux_data_i() (mp.mm_shared_pfcpf_ac_i method)": [[380, "mp.mm_shared_pfcpf_ac_i.build_aux_data_i"]], "mm_shared_pfcpf_ac_i (class in mp)": [[380, "mp.mm_shared_pfcpf_ac_i"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acc method)": [[381, "mp.mm_shared_pfcpf_acc.convert_x_m2n"]], "mm_shared_pfcpf_acc (class in mp)": [[381, "mp.mm_shared_pfcpf_acc"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acci method)": [[382, "mp.mm_shared_pfcpf_acci.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acci method)": [[382, "mp.mm_shared_pfcpf_acci.build_aux_data"]], "mm_shared_pfcpf_acci (class in mp)": [[382, "mp.mm_shared_pfcpf_acci"]], "node_balance_equations() (mp.mm_shared_pfcpf_acci method)": [[382, "mp.mm_shared_pfcpf_acci.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_accs method)": [[383, "mp.mm_shared_pfcpf_accs.add_system_vars_pf"]], "mm_shared_pfcpf_accs (class in mp)": [[383, "mp.mm_shared_pfcpf_accs"]], "node_balance_equations() (mp.mm_shared_pfcpf_accs method)": [[383, "mp.mm_shared_pfcpf_accs.node_balance_equations"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acp method)": [[384, "mp.mm_shared_pfcpf_acp.convert_x_m2n"]], "mm_shared_pfcpf_acp (class in mp)": [[384, "mp.mm_shared_pfcpf_acp"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acpi method)": [[385, "mp.mm_shared_pfcpf_acpi.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acpi method)": [[385, "mp.mm_shared_pfcpf_acpi.build_aux_data"]], "mm_shared_pfcpf_acpi (class in mp)": [[385, "mp.mm_shared_pfcpf_acpi"]], "node_balance_equations() (mp.mm_shared_pfcpf_acpi method)": [[385, "mp.mm_shared_pfcpf_acpi.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acps method)": [[386, "mp.mm_shared_pfcpf_acps.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acps method)": [[386, "mp.mm_shared_pfcpf_acps.build_aux_data"]], "mm_shared_pfcpf_acps (class in mp)": [[386, "mp.mm_shared_pfcpf_acps"]], "node_balance_equations() (mp.mm_shared_pfcpf_acps method)": [[386, "mp.mm_shared_pfcpf_acps.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_dc method)": [[387, "mp.mm_shared_pfcpf_dc.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_dc method)": [[387, "mp.mm_shared_pfcpf_dc.build_aux_data"]], "convert_x_m2n() (mp.mm_shared_pfcpf_dc method)": [[387, "mp.mm_shared_pfcpf_dc.convert_x_m2n"]], "mm_shared_pfcpf_dc (class in mp)": [[387, "mp.mm_shared_pfcpf_dc"]], "update_z() (mp.mm_shared_pfcpf_dc method)": [[387, "mp.mm_shared_pfcpf_dc.update_z"]], "mme_branch (class in mp)": [[388, "mp.mme_branch"]], "name() (mp.mme_branch method)": [[388, "mp.mme_branch.name"]], "ang_diff_params() (mp.mme_branch_opf method)": [[389, "mp.mme_branch_opf.ang_diff_params"]], "ang_diff_prices() (mp.mme_branch_opf method)": [[389, "mp.mme_branch_opf.ang_diff_prices"]], "mme_branch_opf (class in mp)": [[389, "mp.mme_branch_opf"]], "add_constraints() (mp.mme_branch_opf_ac method)": [[390, "mp.mme_branch_opf_ac.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_ac method)": [[390, "mp.mme_branch_opf_ac.data_model_update_on"]], "mme_branch_opf_ac (class in mp)": [[390, "mp.mme_branch_opf_ac"]], "add_constraints() (mp.mme_branch_opf_acc method)": [[391, "mp.mme_branch_opf_acc.add_constraints"]], "ang_diff_prices() (mp.mme_branch_opf_acc method)": [[391, "mp.mme_branch_opf_acc.ang_diff_prices"]], "mme_branch_opf_acc (class in mp)": [[391, "mp.mme_branch_opf_acc"]], "add_constraints() (mp.mme_branch_opf_acp method)": [[392, "mp.mme_branch_opf_acp.add_constraints"]], "mme_branch_opf_acp (class in mp)": [[392, "mp.mme_branch_opf_acp"]], "add_constraints() (mp.mme_branch_opf_dc method)": [[393, "mp.mme_branch_opf_dc.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_dc method)": [[393, "mp.mme_branch_opf_dc.data_model_update_on"]], "mme_branch_opf_dc (class in mp)": [[393, "mp.mme_branch_opf_dc"]], "data_model_update_on() (mp.mme_branch_pf_ac method)": [[394, "mp.mme_branch_pf_ac.data_model_update_on"]], "mme_branch_pf_ac (class in mp)": [[394, "mp.mme_branch_pf_ac"]], "data_model_update_on() (mp.mme_branch_pf_dc method)": [[395, "mp.mme_branch_pf_dc.data_model_update_on"]], "mme_branch_pf_dc (class in mp)": [[395, "mp.mme_branch_pf_dc"]], "mme_bus (class in mp)": [[396, "mp.mme_bus"]], "name() (mp.mme_bus method)": [[396, "mp.mme_bus.name"]], "data_model_update_on() (mp.mme_bus3p method)": [[397, "mp.mme_bus3p.data_model_update_on"]], "mme_bus3p (class in mp)": [[397, "mp.mme_bus3p"]], "name() (mp.mme_bus3p method)": [[397, "mp.mme_bus3p.name"]], "interior_x0() (mp.mme_bus3p_opf_acc method)": [[398, "mp.mme_bus3p_opf_acc.interior_x0"]], "mme_bus3p_opf_acc (class in mp)": [[398, "mp.mme_bus3p_opf_acc"]], "interior_x0() (mp.mme_bus3p_opf_acp method)": [[399, "mp.mme_bus3p_opf_acp.interior_x0"]], "mme_bus3p_opf_acp (class in mp)": [[399, "mp.mme_bus3p_opf_acp"]], "interior_vm() (mp.mme_bus_opf_ac method)": [[400, "mp.mme_bus_opf_ac.interior_vm"]], "mme_bus_opf_ac (class in mp)": [[400, "mp.mme_bus_opf_ac"]], "add_constraints() (mp.mme_bus_opf_acc method)": [[401, "mp.mme_bus_opf_acc.add_constraints"]], "data_model_update_on() (mp.mme_bus_opf_acc method)": [[401, "mp.mme_bus_opf_acc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acc method)": [[401, "mp.mme_bus_opf_acc.interior_x0"]], "mme_bus_opf_acc (class in mp)": [[401, "mp.mme_bus_opf_acc"]], "data_model_update_on() (mp.mme_bus_opf_acp method)": [[402, "mp.mme_bus_opf_acp.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acp method)": [[402, "mp.mme_bus_opf_acp.interior_x0"]], "mme_bus_opf_acp (class in mp)": [[402, "mp.mme_bus_opf_acp"]], "data_model_update_on() (mp.mme_bus_opf_dc method)": [[403, "mp.mme_bus_opf_dc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_dc method)": [[403, "mp.mme_bus_opf_dc.interior_x0"]], "mme_bus_opf_dc (class in mp)": [[403, "mp.mme_bus_opf_dc"]], "data_model_update_on() (mp.mme_bus_pf_ac method)": [[404, "mp.mme_bus_pf_ac.data_model_update_on"]], "mme_bus_pf_ac (class in mp)": [[404, "mp.mme_bus_pf_ac"]], "data_model_update_on() (mp.mme_bus_pf_dc method)": [[405, "mp.mme_bus_pf_dc.data_model_update_on"]], "mme_bus_pf_dc (class in mp)": [[405, "mp.mme_bus_pf_dc"]], "mme_buslink (class in mp)": [[406, "mp.mme_buslink"]], "name() (mp.mme_buslink method)": [[406, "mp.mme_buslink.name"]], "interior_x0() (mp.mme_buslink_opf method)": [[407, "mp.mme_buslink_opf.interior_x0"]], "mme_buslink_opf (class in mp)": [[407, "mp.mme_buslink_opf"]], "add_constraints() (mp.mme_buslink_opf_acc method)": [[408, "mp.mme_buslink_opf_acc.add_constraints"]], "mme_buslink_opf_acc (class in mp)": [[408, "mp.mme_buslink_opf_acc"]], "va_fcn() (mp.mme_buslink_opf_acc method)": [[408, "mp.mme_buslink_opf_acc.va_fcn"]], "va_hess() (mp.mme_buslink_opf_acc method)": [[408, "mp.mme_buslink_opf_acc.va_hess"]], "vm2_fcn() (mp.mme_buslink_opf_acc method)": [[408, "mp.mme_buslink_opf_acc.vm2_fcn"]], "vm2_hess() (mp.mme_buslink_opf_acc method)": [[408, "mp.mme_buslink_opf_acc.vm2_hess"]], "add_constraints() (mp.mme_buslink_opf_acp method)": [[409, "mp.mme_buslink_opf_acp.add_constraints"]], "mme_buslink_opf_acp (class in mp)": [[409, "mp.mme_buslink_opf_acp"]], "add_constraints() (mp.mme_buslink_pf_ac method)": [[410, "mp.mme_buslink_pf_ac.add_constraints"]], "add_vars() (mp.mme_buslink_pf_ac method)": [[410, "mp.mme_buslink_pf_ac.add_vars"]], "mme_buslink_pf_ac (class in mp)": [[410, "mp.mme_buslink_pf_ac"]], "voltage_constraints() (mp.mme_buslink_pf_ac method)": [[410, "mp.mme_buslink_pf_ac.voltage_constraints"]], "add_constraints() (mp.mme_buslink_pf_acc method)": [[411, "mp.mme_buslink_pf_acc.add_constraints"]], "mme_buslink_pf_acc (class in mp)": [[411, "mp.mme_buslink_pf_acc"]], "pf_va_fcn() (mp.mme_buslink_pf_acc method)": [[411, "mp.mme_buslink_pf_acc.pf_va_fcn"]], "pf_vm_fcn() (mp.mme_buslink_pf_acc method)": [[411, "mp.mme_buslink_pf_acc.pf_vm_fcn"]], "add_constraints() (mp.mme_buslink_pf_acp method)": [[412, "mp.mme_buslink_pf_acp.add_constraints"]], "mme_buslink_pf_acp (class in mp)": [[412, "mp.mme_buslink_pf_acp"]], "mme_gen (class in mp)": [[413, "mp.mme_gen"]], "name() (mp.mme_gen method)": [[413, "mp.mme_gen.name"]], "data_model_update_on() (mp.mme_gen3p method)": [[414, "mp.mme_gen3p.data_model_update_on"]], "mme_gen3p (class in mp)": [[414, "mp.mme_gen3p"]], "name() (mp.mme_gen3p method)": [[414, "mp.mme_gen3p.name"]], "interior_x0() (mp.mme_gen3p_opf method)": [[415, "mp.mme_gen3p_opf.interior_x0"]], "mme_gen3p_opf (class in mp)": [[415, "mp.mme_gen3p_opf"]], "add_costs() (mp.mme_gen_opf method)": [[416, "mp.mme_gen_opf.add_costs"]], "add_vars() (mp.mme_gen_opf method)": [[416, "mp.mme_gen_opf.add_vars"]], "cost (mp.mme_gen_opf attribute)": [[416, "mp.mme_gen_opf.cost"]], "interior_x0() (mp.mme_gen_opf method)": [[416, "mp.mme_gen_opf.interior_x0"]], "mme_gen_opf (class in mp)": [[416, "mp.mme_gen_opf"]], "add_constraints() (mp.mme_gen_opf_ac method)": [[417, "mp.mme_gen_opf_ac.add_constraints"]], "add_costs() (mp.mme_gen_opf_ac method)": [[417, "mp.mme_gen_opf_ac.add_costs"]], "build_cost_params() (mp.mme_gen_opf_ac method)": [[417, "mp.mme_gen_opf_ac.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_ac method)": [[417, "mp.mme_gen_opf_ac.data_model_update_on"]], "disp_load_constant_pf_constraint() (mp.mme_gen_opf_ac method)": [[417, "mp.mme_gen_opf_ac.disp_load_constant_pf_constraint"]], "has_pq_cap() (mp.mme_gen_opf_ac method)": [[417, "mp.mme_gen_opf_ac.has_pq_cap"]], "mme_gen_opf_ac (class in mp)": [[417, "mp.mme_gen_opf_ac"]], "pq_capability_constraint() (mp.mme_gen_opf_ac method)": [[417, "mp.mme_gen_opf_ac.pq_capability_constraint"]], "add_constraints() (mp.mme_gen_opf_ac_oval method)": [[418, "mp.mme_gen_opf_ac_oval.add_constraints"]], "mme_gen_opf_ac_oval (class in mp)": [[418, "mp.mme_gen_opf_ac_oval"]], "oval_pq_capability_fcn() (mp.mme_gen_opf_ac_oval method)": [[418, "mp.mme_gen_opf_ac_oval.oval_pq_capability_fcn"]], "oval_pq_capability_hess() (mp.mme_gen_opf_ac_oval method)": [[418, "mp.mme_gen_opf_ac_oval.oval_pq_capability_hess"]], "add_constraints() (mp.mme_gen_opf_dc method)": [[419, "mp.mme_gen_opf_dc.add_constraints"]], "build_cost_params() (mp.mme_gen_opf_dc method)": [[419, "mp.mme_gen_opf_dc.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_dc method)": [[419, "mp.mme_gen_opf_dc.data_model_update_on"]], "mme_gen_opf_dc (class in mp)": [[419, "mp.mme_gen_opf_dc"]], "data_model_update_on() (mp.mme_gen_pf_ac method)": [[420, "mp.mme_gen_pf_ac.data_model_update_on"]], "mme_gen_pf_ac (class in mp)": [[420, "mp.mme_gen_pf_ac"]], "data_model_update_on() (mp.mme_gen_pf_dc method)": [[421, "mp.mme_gen_pf_dc.data_model_update_on"]], "mme_gen_pf_dc (class in mp)": [[421, "mp.mme_gen_pf_dc"]], "mme_legacy_dcline (class in mp)": [[422, "mp.mme_legacy_dcline"]], "name() (mp.mme_legacy_dcline method)": [[422, "mp.mme_legacy_dcline.name"]], "add_constraints() (mp.mme_legacy_dcline_opf method)": [[423, "mp.mme_legacy_dcline_opf.add_constraints"]], "add_costs() (mp.mme_legacy_dcline_opf method)": [[423, "mp.mme_legacy_dcline_opf.add_costs"]], "add_vars() (mp.mme_legacy_dcline_opf method)": [[423, "mp.mme_legacy_dcline_opf.add_vars"]], "build_cost_params() (mp.mme_legacy_dcline_opf method)": [[423, "mp.mme_legacy_dcline_opf.build_cost_params"]], "cost (mp.mme_legacy_dcline_opf attribute)": [[423, "mp.mme_legacy_dcline_opf.cost"]], "interior_x0() (mp.mme_legacy_dcline_opf method)": [[423, "mp.mme_legacy_dcline_opf.interior_x0"]], "mme_legacy_dcline_opf (class in mp)": [[423, "mp.mme_legacy_dcline_opf"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_ac method)": [[424, "mp.mme_legacy_dcline_opf_ac.data_model_update_on"]], "mme_legacy_dcline_opf_ac (class in mp)": [[424, "mp.mme_legacy_dcline_opf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_dc method)": [[425, "mp.mme_legacy_dcline_opf_dc.data_model_update_on"]], "mme_legacy_dcline_opf_dc (class in mp)": [[425, "mp.mme_legacy_dcline_opf_dc"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_ac method)": [[426, "mp.mme_legacy_dcline_pf_ac.data_model_update_on"]], "mme_legacy_dcline_pf_ac (class in mp)": [[426, "mp.mme_legacy_dcline_pf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_dc method)": [[427, "mp.mme_legacy_dcline_pf_dc.data_model_update_on"]], "mme_legacy_dcline_pf_dc (class in mp)": [[427, "mp.mme_legacy_dcline_pf_dc"]], "data_model_update_on() (mp.mme_line3p method)": [[428, "mp.mme_line3p.data_model_update_on"]], "mme_line3p (class in mp)": [[428, "mp.mme_line3p"]], "name() (mp.mme_line3p method)": [[428, "mp.mme_line3p.name"]], "interior_x0() (mp.mme_line3p_opf method)": [[429, "mp.mme_line3p_opf.interior_x0"]], "mme_line3p_opf (class in mp)": [[429, "mp.mme_line3p_opf"]], "mme_load (class in mp)": [[430, "mp.mme_load"]], "name() (mp.mme_load method)": [[430, "mp.mme_load.name"]], "data_model_update_on() (mp.mme_load_cpf method)": [[431, "mp.mme_load_cpf.data_model_update_on"]], "mme_load_cpf (class in mp)": [[431, "mp.mme_load_cpf"]], "data_model_update_on() (mp.mme_load_pf_ac method)": [[432, "mp.mme_load_pf_ac.data_model_update_on"]], "mme_load_pf_ac (class in mp)": [[432, "mp.mme_load_pf_ac"]], "data_model_update_on() (mp.mme_load_pf_dc method)": [[433, "mp.mme_load_pf_dc.data_model_update_on"]], "mme_load_pf_dc (class in mp)": [[433, "mp.mme_load_pf_dc"]], "add_constraints() (mp.mme_reserve_gen method)": [[434, "mp.mme_reserve_gen.add_constraints"]], "add_costs() (mp.mme_reserve_gen method)": [[434, "mp.mme_reserve_gen.add_costs"]], "add_vars() (mp.mme_reserve_gen method)": [[434, "mp.mme_reserve_gen.add_vars"]], "data_model_update_on() (mp.mme_reserve_gen method)": [[434, "mp.mme_reserve_gen.data_model_update_on"]], "mme_reserve_gen (class in mp)": [[434, "mp.mme_reserve_gen"]], "name() (mp.mme_reserve_gen method)": [[434, "mp.mme_reserve_gen.name"]], "add_constraints() (mp.mme_reserve_zone method)": [[435, "mp.mme_reserve_zone.add_constraints"]], "data_model_update_on() (mp.mme_reserve_zone method)": [[435, "mp.mme_reserve_zone.data_model_update_on"]], "mme_reserve_zone (class in mp)": [[435, "mp.mme_reserve_zone"]], "name() (mp.mme_reserve_zone method)": [[435, "mp.mme_reserve_zone.name"]], "mme_shunt (class in mp)": [[436, "mp.mme_shunt"]], "name() (mp.mme_shunt method)": [[436, "mp.mme_shunt.name"]], "data_model_update_on() (mp.mme_shunt3p method)": [[437, "mp.mme_shunt3p.data_model_update_on"]], "mme_shunt3p (class in mp)": [[437, "mp.mme_shunt3p"]], "name() (mp.mme_shunt3p method)": [[437, "mp.mme_shunt3p.name"]], "interior_x0() (mp.mme_shunt3p_opf method)": [[438, "mp.mme_shunt3p_opf.interior_x0"]], "mme_shunt3p_opf (class in mp)": [[438, "mp.mme_shunt3p_opf"]], "data_model_update_on() (mp.mme_shunt_cpf method)": [[439, "mp.mme_shunt_cpf.data_model_update_on"]], "mme_shunt_cpf (class in mp)": [[439, "mp.mme_shunt_cpf"]], "data_model_update_on() (mp.mme_shunt_pf_ac method)": [[440, "mp.mme_shunt_pf_ac.data_model_update_on"]], "mme_shunt_pf_ac (class in mp)": [[440, "mp.mme_shunt_pf_ac"]], "data_model_update_on() (mp.mme_shunt_pf_dc method)": [[441, "mp.mme_shunt_pf_dc.data_model_update_on"]], "mme_shunt_pf_dc (class in mp)": [[441, "mp.mme_shunt_pf_dc"]], "data_model_update_on() (mp.mme_xfmr3p method)": [[442, "mp.mme_xfmr3p.data_model_update_on"]], "mme_xfmr3p (class in mp)": [[442, "mp.mme_xfmr3p"]], "name() (mp.mme_xfmr3p method)": [[442, "mp.mme_xfmr3p.name"]], "interior_x0() (mp.mme_xfmr3p_opf method)": [[443, "mp.mme_xfmr3p_opf.interior_x0"]], "mme_xfmr3p_opf (class in mp)": [[443, "mp.mme_xfmr3p_opf"]], "add_node() (mp.net_model method)": [[444, "mp.net_model.add_node"]], "add_nodes() (mp.net_model method)": [[444, "mp.net_model.add_nodes"]], "add_port() (mp.net_model method)": [[444, "mp.net_model.add_port"]], "add_state() (mp.net_model method)": [[444, "mp.net_model.add_state"]], "add_states() (mp.net_model method)": [[444, "mp.net_model.add_states"]], "add_var() (mp.net_model method)": [[444, "mp.net_model.add_var"]], "add_vvars() (mp.net_model method)": [[444, "mp.net_model.add_vvars"]], "add_zvars() (mp.net_model method)": [[444, "mp.net_model.add_zvars"]], "build() (mp.net_model method)": [[444, "mp.net_model.build"]], "build_params() (mp.net_model method)": [[444, "mp.net_model.build_params"]], "def_set_types() (mp.net_model method)": [[444, "mp.net_model.def_set_types"]], "display() (mp.net_model method)": [[444, "mp.net_model.display"]], "ensure_ref_node() (mp.net_model method)": [[444, "mp.net_model.ensure_ref_node"]], "get_node_idx() (mp.net_model method)": [[444, "mp.net_model.get_node_idx"]], "get_port_idx() (mp.net_model method)": [[444, "mp.net_model.get_port_idx"]], "get_state_idx() (mp.net_model method)": [[444, "mp.net_model.get_state_idx"]], "init_set_types() (mp.net_model method)": [[444, "mp.net_model.init_set_types"]], "name() (mp.net_model method)": [[444, "mp.net_model.name"]], "net_model (class in mp)": [[444, "mp.net_model"]], "node (mp.net_model attribute)": [[444, "mp.net_model.node"]], "node_types() (mp.net_model method)": [[444, "mp.net_model.node_types"]], "np() (mp.net_model method)": [[444, "mp.net_model.np"]], "nv (mp.net_model attribute)": [[444, "mp.net_model.nv"]], "nz() (mp.net_model method)": [[444, "mp.net_model.nz"]], "params_var() (mp.net_model method)": [[444, "mp.net_model.params_var"]], "port (mp.net_model attribute)": [[444, "mp.net_model.port"]], "set_node_type_pq() (mp.net_model method)": [[444, "mp.net_model.set_node_type_pq"]], "set_node_type_pv() (mp.net_model method)": [[444, "mp.net_model.set_node_type_pv"]], "set_node_type_ref() (mp.net_model method)": [[444, "mp.net_model.set_node_type_ref"]], "set_type_idx_map() (mp.net_model method)": [[444, "mp.net_model.set_type_idx_map"]], "set_type_label() (mp.net_model method)": [[444, "mp.net_model.set_type_label"]], "stack_matrix_params() (mp.net_model method)": [[444, "mp.net_model.stack_matrix_params"]], "stack_vector_params() (mp.net_model method)": [[444, "mp.net_model.stack_vector_params"]], "state (mp.net_model attribute)": [[444, "mp.net_model.state"]], "the_np (mp.net_model attribute)": [[444, "mp.net_model.the_np"]], "the_nz (mp.net_model attribute)": [[444, "mp.net_model.the_nz"]], "build_params() (mp.net_model_ac method)": [[445, "mp.net_model_ac.build_params"]], "def_set_types() (mp.net_model_ac method)": [[445, "mp.net_model_ac.def_set_types"]], "get_va() (mp.net_model_ac method)": [[445, "mp.net_model_ac.get_va"]], "net_model_ac (class in mp)": [[445, "mp.net_model_ac"]], "nodal_complex_current_balance() (mp.net_model_ac method)": [[445, "mp.net_model_ac.nodal_complex_current_balance"]], "nodal_complex_current_balance_hess() (mp.net_model_ac method)": [[445, "mp.net_model_ac.nodal_complex_current_balance_hess"]], "nodal_complex_power_balance() (mp.net_model_ac method)": [[445, "mp.net_model_ac.nodal_complex_power_balance"]], "nodal_complex_power_balance_hess() (mp.net_model_ac method)": [[445, "mp.net_model_ac.nodal_complex_power_balance_hess"]], "port_inj_nln() (mp.net_model_ac method)": [[445, "mp.net_model_ac.port_inj_nln"]], "port_inj_nln_hess() (mp.net_model_ac method)": [[445, "mp.net_model_ac.port_inj_nln_hess"]], "port_inj_soln() (mp.net_model_ac method)": [[445, "mp.net_model_ac.port_inj_soln"]], "def_set_types() (mp.net_model_acc method)": [[446, "mp.net_model_acc.def_set_types"]], "initial_voltage_angle() (mp.net_model_acc method)": [[446, "mp.net_model_acc.initial_voltage_angle"]], "net_model_acc (class in mp)": [[446, "mp.net_model_acc"]], "net_model_acc() (mp.net_model_acc method)": [[446, "mp.net_model_acc.net_model_acc"]], "def_set_types() (mp.net_model_acp method)": [[447, "mp.net_model_acp.def_set_types"]], "initial_voltage_angle() (mp.net_model_acp method)": [[447, "mp.net_model_acp.initial_voltage_angle"]], "net_model_acp (class in mp)": [[447, "mp.net_model_acp"]], "net_model_acp() (mp.net_model_acp method)": [[447, "mp.net_model_acp.net_model_acp"]], "build_params() (mp.net_model_dc method)": [[448, "mp.net_model_dc.build_params"]], "def_set_types() (mp.net_model_dc method)": [[448, "mp.net_model_dc.def_set_types"]], "net_model_dc (class in mp)": [[448, "mp.net_model_dc"]], "net_model_dc() (mp.net_model_dc method)": [[448, "mp.net_model_dc.net_model_dc"]], "port_inj_soln() (mp.net_model_dc method)": [[448, "mp.net_model_dc.port_inj_soln"]], "va (mp.net_model_dc attribute)": [[448, "mp.net_model_dc.va"]], "z (mp.net_model_dc attribute)": [[448, "mp.net_model_dc.z"]], "c (mp.nm_element attribute)": [[449, "mp.nm_element.C"]], "d (mp.nm_element attribute)": [[449, "mp.nm_element.D"]], "add_nodes() (mp.nm_element method)": [[449, "mp.nm_element.add_nodes"]], "add_states() (mp.nm_element method)": [[449, "mp.nm_element.add_states"]], "add_vvars() (mp.nm_element method)": [[449, "mp.nm_element.add_vvars"]], "add_zvars() (mp.nm_element method)": [[449, "mp.nm_element.add_zvars"]], "build_params() (mp.nm_element method)": [[449, "mp.nm_element.build_params"]], "count() (mp.nm_element method)": [[449, "mp.nm_element.count"]], "data_model_element() (mp.nm_element method)": [[449, "mp.nm_element.data_model_element"]], "display() (mp.nm_element method)": [[449, "mp.nm_element.display"]], "get_nv_() (mp.nm_element method)": [[449, "mp.nm_element.get_nv_"]], "incidence_matrix() (mp.nm_element method)": [[449, "mp.nm_element.incidence_matrix"]], "math_model_element() (mp.nm_element method)": [[449, "mp.nm_element.math_model_element"]], "name() (mp.nm_element method)": [[449, "mp.nm_element.name"]], "nk (mp.nm_element attribute)": [[449, "mp.nm_element.nk"]], "nm_element (class in mp)": [[449, "mp.nm_element"]], "nn() (mp.nm_element method)": [[449, "mp.nm_element.nn"]], "node_indices() (mp.nm_element method)": [[449, "mp.nm_element.node_indices"]], "node_types() (mp.nm_element method)": [[449, "mp.nm_element.node_types"]], "np() (mp.nm_element method)": [[449, "mp.nm_element.np"]], "nz() (mp.nm_element method)": [[449, "mp.nm_element.nz"]], "set_node_type_pq() (mp.nm_element method)": [[449, "mp.nm_element.set_node_type_pq"]], "set_node_type_pv() (mp.nm_element method)": [[449, "mp.nm_element.set_node_type_pv"]], "set_node_type_ref() (mp.nm_element method)": [[449, "mp.nm_element.set_node_type_ref"]], "soln (mp.nm_element attribute)": [[449, "mp.nm_element.soln"]], "x2vz() (mp.nm_element method)": [[449, "mp.nm_element.x2vz"]], "name() (mp.nme_branch method)": [[450, "mp.nme_branch.name"]], "nme_branch (class in mp)": [[450, "mp.nme_branch"]], "np() (mp.nme_branch method)": [[450, "mp.nme_branch.np"]], "build_params() (mp.nme_branch_ac method)": [[451, "mp.nme_branch_ac.build_params"]], "nme_branch_ac (class in mp)": [[451, "mp.nme_branch_ac"]], "ang_diff_fcn() (mp.nme_branch_acc method)": [[452, "mp.nme_branch_acc.ang_diff_fcn"]], "ang_diff_hess() (mp.nme_branch_acc method)": [[452, "mp.nme_branch_acc.ang_diff_hess"]], "nme_branch_acc (class in mp)": [[452, "mp.nme_branch_acc"]], "nme_branch_acp (class in mp)": [[453, "mp.nme_branch_acp"]], "build_params() (mp.nme_branch_dc method)": [[454, "mp.nme_branch_dc.build_params"]], "nme_branch_dc (class in mp)": [[454, "mp.nme_branch_dc"]], "name() (mp.nme_bus method)": [[455, "mp.nme_bus.name"]], "nme_bus (class in mp)": [[455, "mp.nme_bus"]], "nn() (mp.nme_bus method)": [[455, "mp.nme_bus.nn"]], "node_types() (mp.nme_bus method)": [[455, "mp.nme_bus.node_types"]], "set_node_type_pq() (mp.nme_bus method)": [[455, "mp.nme_bus.set_node_type_pq"]], "set_node_type_pv() (mp.nme_bus method)": [[455, "mp.nme_bus.set_node_type_pv"]], "set_node_type_ref() (mp.nme_bus method)": [[455, "mp.nme_bus.set_node_type_ref"]], "name() (mp.nme_bus3p method)": [[456, "mp.nme_bus3p.name"]], "nme_bus3p (class in mp)": [[456, "mp.nme_bus3p"]], "nn() (mp.nme_bus3p method)": [[456, "mp.nme_bus3p.nn"]], "node_types() (mp.nme_bus3p method)": [[456, "mp.nme_bus3p.node_types"]], "add_vvars() (mp.nme_bus3p_acc method)": [[457, "mp.nme_bus3p_acc.add_vvars"]], "nme_bus3p_acc (class in mp)": [[457, "mp.nme_bus3p_acc"]], "add_vvars() (mp.nme_bus3p_acp method)": [[458, "mp.nme_bus3p_acp.add_vvars"]], "nme_bus3p_acp (class in mp)": [[458, "mp.nme_bus3p_acp"]], "add_vvars() (mp.nme_bus_acc method)": [[459, "mp.nme_bus_acc.add_vvars"]], "nme_bus_acc (class in mp)": [[459, "mp.nme_bus_acc"]], "add_vvars() (mp.nme_bus_acp method)": [[460, "mp.nme_bus_acp.add_vvars"]], "nme_bus_acp (class in mp)": [[460, "mp.nme_bus_acp"]], "add_vvars() (mp.nme_bus_dc method)": [[461, "mp.nme_bus_dc.add_vvars"]], "nme_bus_dc (class in mp)": [[461, "mp.nme_bus_dc"]], "add_zvars() (mp.nme_buslink method)": [[462, "mp.nme_buslink.add_zvars"]], "build_params() (mp.nme_buslink method)": [[462, "mp.nme_buslink.build_params"]], "name() (mp.nme_buslink method)": [[462, "mp.nme_buslink.name"]], "nme_buslink (class in mp)": [[462, "mp.nme_buslink"]], "np() (mp.nme_buslink method)": [[462, "mp.nme_buslink.np"]], "nz() (mp.nme_buslink method)": [[462, "mp.nme_buslink.nz"]], "voltage_constraints() (mp.nme_buslink method)": [[462, "mp.nme_buslink.voltage_constraints"]], "nme_buslink_acc (class in mp)": [[463, "mp.nme_buslink_acc"]], "nme_buslink_acp (class in mp)": [[464, "mp.nme_buslink_acp"]], "name() (mp.nme_gen method)": [[465, "mp.nme_gen.name"]], "nme_gen (class in mp)": [[465, "mp.nme_gen"]], "np() (mp.nme_gen method)": [[465, "mp.nme_gen.np"]], "nz() (mp.nme_gen method)": [[465, "mp.nme_gen.nz"]], "add_zvars() (mp.nme_gen3p method)": [[466, "mp.nme_gen3p.add_zvars"]], "build_params() (mp.nme_gen3p method)": [[466, "mp.nme_gen3p.build_params"]], "name() (mp.nme_gen3p method)": [[466, "mp.nme_gen3p.name"]], "nme_gen3p (class in mp)": [[466, "mp.nme_gen3p"]], "np() (mp.nme_gen3p method)": [[466, "mp.nme_gen3p.np"]], "nz() (mp.nme_gen3p method)": [[466, "mp.nme_gen3p.nz"]], "nme_gen3p_acc (class in mp)": [[467, "mp.nme_gen3p_acc"]], "nme_gen3p_acp (class in mp)": [[468, "mp.nme_gen3p_acp"]], "add_zvars() (mp.nme_gen_ac method)": [[469, "mp.nme_gen_ac.add_zvars"]], "build_params() (mp.nme_gen_ac method)": [[469, "mp.nme_gen_ac.build_params"]], "nme_gen_ac (class in mp)": [[469, "mp.nme_gen_ac"]], "nme_gen_acc (class in mp)": [[470, "mp.nme_gen_acc"]], "nme_gen_acp (class in mp)": [[471, "mp.nme_gen_acp"]], "add_zvars() (mp.nme_gen_dc method)": [[472, "mp.nme_gen_dc.add_zvars"]], "build_params() (mp.nme_gen_dc method)": [[472, "mp.nme_gen_dc.build_params"]], "nme_gen_dc (class in mp)": [[472, "mp.nme_gen_dc"]], "name() (mp.nme_legacy_dcline method)": [[473, "mp.nme_legacy_dcline.name"]], "nme_legacy_dcline (class in mp)": [[473, "mp.nme_legacy_dcline"]], "np() (mp.nme_legacy_dcline method)": [[473, "mp.nme_legacy_dcline.np"]], "nz() (mp.nme_legacy_dcline method)": [[473, "mp.nme_legacy_dcline.nz"]], "add_zvars() (mp.nme_legacy_dcline_ac method)": [[474, "mp.nme_legacy_dcline_ac.add_zvars"]], "build_params() (mp.nme_legacy_dcline_ac method)": [[474, "mp.nme_legacy_dcline_ac.build_params"]], "nme_legacy_dcline_ac (class in mp)": [[474, "mp.nme_legacy_dcline_ac"]], "nme_legacy_dcline_acc (class in mp)": [[475, "mp.nme_legacy_dcline_acc"]], "nme_legacy_dcline_acp (class in mp)": [[476, "mp.nme_legacy_dcline_acp"]], "add_zvars() (mp.nme_legacy_dcline_dc method)": [[477, "mp.nme_legacy_dcline_dc.add_zvars"]], "build_params() (mp.nme_legacy_dcline_dc method)": [[477, "mp.nme_legacy_dcline_dc.build_params"]], "nme_legacy_dcline_dc (class in mp)": [[477, "mp.nme_legacy_dcline_dc"]], "build_params() (mp.nme_line3p method)": [[478, "mp.nme_line3p.build_params"]], "name() (mp.nme_line3p method)": [[478, "mp.nme_line3p.name"]], "nme_line3p (class in mp)": [[478, "mp.nme_line3p"]], "np() (mp.nme_line3p method)": [[478, "mp.nme_line3p.np"]], "vec2symmat_stacked() (mp.nme_line3p method)": [[478, "mp.nme_line3p.vec2symmat_stacked"]], "name() (mp.nme_load method)": [[479, "mp.nme_load.name"]], "nme_load (class in mp)": [[479, "mp.nme_load"]], "np() (mp.nme_load method)": [[479, "mp.nme_load.np"]], "build_params() (mp.nme_load3p method)": [[480, "mp.nme_load3p.build_params"]], "name() (mp.nme_load3p method)": [[480, "mp.nme_load3p.name"]], "nme_load3p (class in mp)": [[480, "mp.nme_load3p"]], "np() (mp.nme_load3p method)": [[480, "mp.nme_load3p.np"]], "build_params() (mp.nme_load_ac method)": [[481, "mp.nme_load_ac.build_params"]], "nme_load_ac (class in mp)": [[481, "mp.nme_load_ac"]], "port_inj_current_nln() (mp.nme_load_ac method)": [[481, "mp.nme_load_ac.port_inj_current_nln"]], "port_inj_power_nln() (mp.nme_load_ac method)": [[481, "mp.nme_load_ac.port_inj_power_nln"]], "nme_load_acc (class in mp)": [[482, "mp.nme_load_acc"]], "nme_load_acp (class in mp)": [[483, "mp.nme_load_acp"]], "build_params() (mp.nme_load_dc method)": [[484, "mp.nme_load_dc.build_params"]], "nme_load_dc (class in mp)": [[484, "mp.nme_load_dc"]], "name() (mp.nme_shunt method)": [[485, "mp.nme_shunt.name"]], "nme_shunt (class in mp)": [[485, "mp.nme_shunt"]], "np() (mp.nme_shunt method)": [[485, "mp.nme_shunt.np"]], "build_params() (mp.nme_shunt3p method)": [[486, "mp.nme_shunt3p.build_params"]], "name() (mp.nme_shunt3p method)": [[486, "mp.nme_shunt3p.name"]], "nme_shunt3p (class in mp)": [[486, "mp.nme_shunt3p"]], "np() (mp.nme_shunt3p method)": [[486, "mp.nme_shunt3p.np"]], "build_params() (mp.nme_shunt_ac method)": [[487, "mp.nme_shunt_ac.build_params"]], "nme_shunt_ac (class in mp)": [[487, "mp.nme_shunt_ac"]], "nme_shunt_acc (class in mp)": [[488, "mp.nme_shunt_acc"]], "nme_shunt_acp (class in mp)": [[489, "mp.nme_shunt_acp"]], "build_params() (mp.nme_shunt_dc method)": [[490, "mp.nme_shunt_dc.build_params"]], "nme_shunt_dc (class in mp)": [[490, "mp.nme_shunt_dc"]], "build_params() (mp.nme_xfmr3p method)": [[491, "mp.nme_xfmr3p.build_params"]], "name() (mp.nme_xfmr3p method)": [[491, "mp.nme_xfmr3p.name"]], "nme_xfmr3p (class in mp)": [[491, "mp.nme_xfmr3p"]], "np() (mp.nme_xfmr3p method)": [[491, "mp.nme_xfmr3p.np"]], "cache (mp.sm_legacy_cost attribute)": [[492, "mp.sm_legacy_cost.cache"]], "sm_legacy_cost (class in mp)": [[492, "mp.sm_legacy_cost"]], "sm_legacy_cost() (mp.sm_legacy_cost method)": [[492, "mp.sm_legacy_cost.sm_legacy_cost"]], "data_model_build() (mp.task method)": [[493, "mp.task.data_model_build"]], "data_model_build_post() (mp.task method)": [[493, "mp.task.data_model_build_post"]], "data_model_build_pre() (mp.task method)": [[493, "mp.task.data_model_build_pre"]], "data_model_class() (mp.task method)": [[493, "mp.task.data_model_class"]], "data_model_class_default() (mp.task method)": [[493, "mp.task.data_model_class_default"]], "data_model_create() (mp.task method)": [[493, "mp.task.data_model_create"]], "dm (mp.task attribute)": [[493, "mp.task.dm"]], "dm_converter_build() (mp.task method)": [[493, "mp.task.dm_converter_build"]], "dm_converter_class() (mp.task method)": [[493, "mp.task.dm_converter_class"]], "dm_converter_class_mpc2_default() (mp.task method)": [[493, "mp.task.dm_converter_class_mpc2_default"]], "dm_converter_create() (mp.task method)": [[493, "mp.task.dm_converter_create"]], "dmc (mp.task attribute)": [[493, "mp.task.dmc"]], "et (mp.task attribute)": [[493, "mp.task.et"]], "i_dm (mp.task attribute)": [[493, "mp.task.i_dm"]], "i_mm (mp.task attribute)": [[493, "mp.task.i_mm"]], "i_nm (mp.task attribute)": [[493, "mp.task.i_nm"]], "load_dm() (mp.task method)": [[493, "mp.task.load_dm"]], "math_model_build() (mp.task method)": [[493, "mp.task.math_model_build"]], "math_model_class() (mp.task method)": [[493, "mp.task.math_model_class"]], "math_model_class_default() (mp.task method)": [[493, "mp.task.math_model_class_default"]], "math_model_create() (mp.task method)": [[493, "mp.task.math_model_create"]], "math_model_opt() (mp.task method)": [[493, "mp.task.math_model_opt"]], "message (mp.task attribute)": [[493, "mp.task.message"]], "mm (mp.task attribute)": [[493, "mp.task.mm"]], "mm_opt (mp.task attribute)": [[493, "mp.task.mm_opt"]], "name (mp.task attribute)": [[493, "mp.task.name"]], "network_model_build() (mp.task method)": [[493, "mp.task.network_model_build"]], "network_model_build_post() (mp.task method)": [[493, "mp.task.network_model_build_post"]], "network_model_build_pre() (mp.task method)": [[493, "mp.task.network_model_build_pre"]], "network_model_class() (mp.task method)": [[493, "mp.task.network_model_class"]], "network_model_class_default() (mp.task method)": [[493, "mp.task.network_model_class_default"]], "network_model_create() (mp.task method)": [[493, "mp.task.network_model_create"]], "network_model_update() (mp.task method)": [[493, "mp.task.network_model_update"]], "network_model_x_soln() (mp.task method)": [[493, "mp.task.network_model_x_soln"]], "next_dm() (mp.task method)": [[493, "mp.task.next_dm"]], "next_mm() (mp.task method)": [[493, "mp.task.next_mm"]], "next_nm() (mp.task method)": [[493, "mp.task.next_nm"]], "nm (mp.task attribute)": [[493, "mp.task.nm"]], "print_soln() (mp.task method)": [[493, "mp.task.print_soln"]], "print_soln_header() (mp.task method)": [[493, "mp.task.print_soln_header"]], "run() (mp.task method)": [[493, "mp.task.run"]], "run_post() (mp.task method)": [[493, "mp.task.run_post"]], "run_pre() (mp.task method)": [[493, "mp.task.run_pre"]], "save_soln() (mp.task method)": [[493, "mp.task.save_soln"]], "success (mp.task attribute)": [[493, "mp.task.success"]], "tag (mp.task attribute)": [[493, "mp.task.tag"]], "task (class in mp)": [[493, "mp.task"]], "data_model_build() (mp.task_cpf method)": [[494, "mp.task_cpf.data_model_build"]], "data_model_class_default() (mp.task_cpf method)": [[494, "mp.task_cpf.data_model_class_default"]], "dm_converter_class() (mp.task_cpf method)": [[494, "mp.task_cpf.dm_converter_class"]], "math_model_class_default() (mp.task_cpf method)": [[494, "mp.task_cpf.math_model_class_default"]], "math_model_opt() (mp.task_cpf method)": [[494, "mp.task_cpf.math_model_opt"]], "network_model_build() (mp.task_cpf method)": [[494, "mp.task_cpf.network_model_build"]], "network_model_update() (mp.task_cpf method)": [[494, "mp.task_cpf.network_model_update"]], "network_model_x_soln() (mp.task_cpf method)": [[494, "mp.task_cpf.network_model_x_soln"]], "next_mm() (mp.task_cpf method)": [[494, "mp.task_cpf.next_mm"]], "run_pre() (mp.task_cpf method)": [[494, "mp.task_cpf.run_pre"]], "task_cpf (class in mp)": [[494, "mp.task_cpf"]], "task_cpf() (mp.task_cpf method)": [[494, "mp.task_cpf.task_cpf"]], "warmstart (mp.task_cpf attribute)": [[494, "mp.task_cpf.warmstart"]], "legacy_post_run() (mp.task_cpf_legacy method)": [[495, "mp.task_cpf_legacy.legacy_post_run"]], "run_post() (mp.task_cpf_legacy method)": [[495, "mp.task_cpf_legacy.run_post"]], "run_pre() (mp.task_cpf_legacy method)": [[495, "mp.task_cpf_legacy.run_pre"]], "task_cpf_legacy (class in mp)": [[495, "mp.task_cpf_legacy"]], "data_model_build_post() (mp.task_opf method)": [[496, "mp.task_opf.data_model_build_post"]], "data_model_class_default() (mp.task_opf method)": [[496, "mp.task_opf.data_model_class_default"]], "dc (mp.task_opf attribute)": [[496, "mp.task_opf.dc"]], "math_model_class_default() (mp.task_opf method)": [[496, "mp.task_opf.math_model_class_default"]], "network_model_class_default() (mp.task_opf method)": [[496, "mp.task_opf.network_model_class_default"]], "print_soln_header() (mp.task_opf method)": [[496, "mp.task_opf.print_soln_header"]], "run_pre() (mp.task_opf method)": [[496, "mp.task_opf.run_pre"]], "task_opf (class in mp)": [[496, "mp.task_opf"]], "data_model_build_post() (mp.task_opf_legacy method)": [[497, "mp.task_opf_legacy.data_model_build_post"]], "dm_converter_class_mpc2_default() (mp.task_opf_legacy method)": [[497, "mp.task_opf_legacy.dm_converter_class_mpc2_default"]], "legacy_post_run() (mp.task_opf_legacy method)": [[497, "mp.task_opf_legacy.legacy_post_run"]], "math_model_class_default() (mp.task_opf_legacy method)": [[497, "mp.task_opf_legacy.math_model_class_default"]], "run_post() (mp.task_opf_legacy method)": [[497, "mp.task_opf_legacy.run_post"]], "run_pre() (mp.task_opf_legacy method)": [[497, "mp.task_opf_legacy.run_pre"]], "task_opf_legacy (class in mp)": [[497, "mp.task_opf_legacy"]], "dc (mp.task_pf attribute)": [[498, "mp.task_pf.dc"]], "enforce_q_lims() (mp.task_pf method)": [[498, "mp.task_pf.enforce_q_lims"]], "fixed_q_idx (mp.task_pf attribute)": [[498, "mp.task_pf.fixed_q_idx"]], "fixed_q_qty (mp.task_pf attribute)": [[498, "mp.task_pf.fixed_q_qty"]], "iterations (mp.task_pf attribute)": [[498, "mp.task_pf.iterations"]], "math_model_class_default() (mp.task_pf method)": [[498, "mp.task_pf.math_model_class_default"]], "name (mp.task_pf attribute)": [[498, "mp.task_pf.name"]], "network_model_build_post() (mp.task_pf method)": [[498, "mp.task_pf.network_model_build_post"]], "network_model_class_default() (mp.task_pf method)": [[498, "mp.task_pf.network_model_class_default"]], "network_model_x_soln() (mp.task_pf method)": [[498, "mp.task_pf.network_model_x_soln"]], "next_dm() (mp.task_pf method)": [[498, "mp.task_pf.next_dm"]], "ref (mp.task_pf attribute)": [[498, "mp.task_pf.ref"]], "ref0 (mp.task_pf attribute)": [[498, "mp.task_pf.ref0"]], "run_pre() (mp.task_pf method)": [[498, "mp.task_pf.run_pre"]], "tag (mp.task_pf attribute)": [[498, "mp.task_pf.tag"]], "task_pf (class in mp)": [[498, "mp.task_pf"]], "va_ref0 (mp.task_pf attribute)": [[498, "mp.task_pf.va_ref0"]], "legacy_post_run() (mp.task_pf_legacy method)": [[499, "mp.task_pf_legacy.legacy_post_run"]], "run_post() (mp.task_pf_legacy method)": [[499, "mp.task_pf_legacy.run_post"]], "run_pre() (mp.task_pf_legacy method)": [[499, "mp.task_pf_legacy.run_pre"]], "task_pf_legacy (class in mp)": [[499, "mp.task_pf_legacy"]], "run_pre_legacy() (mp.task_shared_legacy method)": [[500, "mp.task_shared_legacy.run_pre_legacy"]], "task_shared_legacy (class in mp)": [[500, "mp.task_shared_legacy"]], "dm_element_classes() (mp.xt_3p method)": [[501, "mp.xt_3p.dm_element_classes"]], "dmc_element_classes() (mp.xt_3p method)": [[501, "mp.xt_3p.dmc_element_classes"]], "mm_element_classes() (mp.xt_3p method)": [[501, "mp.xt_3p.mm_element_classes"]], "nm_element_classes() (mp.xt_3p method)": [[501, "mp.xt_3p.nm_element_classes"]], "xt_3p (class in mp)": [[501, "mp.xt_3p"]], "dm_element_classes() (mp.xt_legacy_dcline method)": [[502, "mp.xt_legacy_dcline.dm_element_classes"]], "dmc_element_classes() (mp.xt_legacy_dcline method)": [[502, "mp.xt_legacy_dcline.dmc_element_classes"]], "mm_element_classes() (mp.xt_legacy_dcline method)": [[502, "mp.xt_legacy_dcline.mm_element_classes"]], "nm_element_classes() (mp.xt_legacy_dcline method)": [[502, "mp.xt_legacy_dcline.nm_element_classes"]], "xt_legacy_dcline (class in mp)": [[502, "mp.xt_legacy_dcline"]], "mm_element_classes() (mp.xt_oval_cap_curve method)": [[503, "mp.xt_oval_cap_curve.mm_element_classes"]], "xt_oval_cap_curve (class in mp)": [[503, "mp.xt_oval_cap_curve"]], "dm_element_classes() (mp.xt_reserves method)": [[504, "mp.xt_reserves.dm_element_classes"]], "dmc_element_classes() (mp.xt_reserves method)": [[504, "mp.xt_reserves.dmc_element_classes"]], "mm_element_classes() (mp.xt_reserves method)": [[504, "mp.xt_reserves.mm_element_classes"]], "xt_reserves (class in mp)": [[504, "mp.xt_reserves"]], "display() (mp_table method)": [[505, "mp_table.display"]], "end() (mp_table method)": [[505, "mp_table.end"]], "extract_named_args() (mp_table static method)": [[505, "mp_table.extract_named_args"]], "horzcat() (mp_table method)": [[505, "mp_table.horzcat"]], "isempty() (mp_table method)": [[505, "mp_table.isempty"]], "istable() (mp_table method)": [[505, "mp_table.istable"]], "mp_table (built-in class)": [[505, "mp_table"]], "mp_table() (mp_table method)": [[505, "mp_table.mp_table"]], "size() (mp_table method)": [[505, "mp_table.size"]], "subsasgn() (mp_table method)": [[505, "mp_table.subsasgn"]], "subsref() (mp_table method)": [[505, "mp_table.subsref"]], "vertcat() (mp_table method)": [[505, "mp_table.vertcat"]], "get_table() (mp_table_subclass method)": [[506, "mp_table_subclass.get_table"]], "mp_table_subclass (built-in class)": [[506, "mp_table_subclass"]], "set_table() (mp_table_subclass method)": [[506, "mp_table_subclass.set_table"]], "install_matpower() (built-in function)": [[508, "install_matpower"]], "load_dm() (in module mp)": [[509, "mp.load_dm"]], "mp_table_class() (built-in function)": [[510, "mp_table_class"]], "run_cpf() (built-in function)": [[511, "run_cpf"]], "run_mp() (built-in function)": [[512, "run_mp"]], "run_opf() (built-in function)": [[513, "run_opf"]], "run_pf() (built-in function)": [[514, "run_pf"]], "add_legacy_cost() (opf_model method)": [[517, "opf_model.add_legacy_cost"]], "add_named_set() (opf_model method)": [[517, "opf_model.add_named_set"]], "cost (opf_model attribute)": [[517, "opf_model.cost"]], "def_set_types() (opf_model method)": [[517, "opf_model.def_set_types"]], "display() (opf_model method)": [[517, "opf_model.display"]], "eval_legacy_cost() (opf_model method)": [[517, "opf_model.eval_legacy_cost"]], "get_mpc() (opf_model method)": [[517, "opf_model.get_mpc"]], "init_set_types() (opf_model method)": [[517, "opf_model.init_set_types"]], "mpc (opf_model attribute)": [[517, "opf_model.mpc"]], "opf_model (built-in class)": [[517, "opf_model"]], "opf_model() (opf_model method)": [[517, "opf_model.opf_model"]], "params_legacy_cost() (opf_model method)": [[517, "opf_model.params_legacy_cost"]], "set_mpc() (opf_model method)": [[517, "opf_model.set_mpc"]], "add_userfcn() (built-in function)": [[518, "add_userfcn"]], "apply_changes() (built-in function)": [[519, "apply_changes"]], "bustypes() (built-in function)": [[520, "bustypes"]], "calc_branch_angle() (built-in function)": [[521, "calc_branch_angle"]], "calc_v_i_sum() (built-in function)": [[522, "calc_v_i_sum"]], "calc_v_pq_sum() (built-in function)": [[523, "calc_v_pq_sum"]], "calc_v_y_sum() (built-in function)": [[524, "calc_v_y_sum"]], "case_info() (built-in function)": [[525, "case_info"]], "cdf2mpc() (built-in function)": [[527, "cdf2mpc"]], "compare_case() (built-in function)": [[528, "compare_case"]], "connected_components() (built-in function)": [[529, "connected_components"]], "cpf_corrector() (built-in function)": [[530, "cpf_corrector"]], "cpf_current_mpc() (built-in function)": [[531, "cpf_current_mpc"]], "cpf_default_callback() (built-in function)": [[532, "cpf_default_callback"]], "cpf_detect_events() (built-in function)": [[533, "cpf_detect_events"]], "cpf_flim_event() (built-in function)": [[534, "cpf_flim_event"]], "cpf_flim_event_cb() (built-in function)": [[535, "cpf_flim_event_cb"]], "cpf_nose_event() (built-in function)": [[536, "cpf_nose_event"]], "cpf_nose_event_cb() (built-in function)": [[537, "cpf_nose_event_cb"]], "cpf_p() (built-in function)": [[538, "cpf_p"]], "cpf_p_jac() (built-in function)": [[539, "cpf_p_jac"]], "cpf_plim_event() (built-in function)": [[540, "cpf_plim_event"]], "cpf_plim_event_cb() (built-in function)": [[541, "cpf_plim_event_cb"]], "cpf_predictor() (built-in function)": [[542, "cpf_predictor"]], "cpf_qlim_event() (built-in function)": [[543, "cpf_qlim_event"]], "cpf_qlim_event_cb() (built-in function)": [[544, "cpf_qlim_event_cb"]], "cpf_register_callback() (built-in function)": [[545, "cpf_register_callback"]], "cpf_register_event() (built-in function)": [[546, "cpf_register_event"]], "cpf_tangent() (built-in function)": [[547, "cpf_tangent"]], "cpf_target_lam_event() (built-in function)": [[548, "cpf_target_lam_event"]], "cpf_target_lam_event_cb() (built-in function)": [[549, "cpf_target_lam_event_cb"]], "cpf_vlim_event() (built-in function)": [[550, "cpf_vlim_event"]], "cpf_vlim_event_cb() (built-in function)": [[551, "cpf_vlim_event_cb"]], "d2abr_dv2() (built-in function)": [[552, "d2Abr_dV2"]], "d2ibr_dv2() (built-in function)": [[553, "d2Ibr_dV2"]], "d2imis_dv2() (built-in function)": [[554, "d2Imis_dV2"]], "d2imis_dvdsg() (built-in function)": [[555, "d2Imis_dVdSg"]], "d2sbr_dv2() (built-in function)": [[556, "d2Sbr_dV2"]], "d2sbus_dv2() (built-in function)": [[557, "d2Sbus_dV2"]], "dabr_dv() (built-in function)": [[558, "dAbr_dV"]], "dibr_dv() (built-in function)": [[559, "dIbr_dV"]], "dimis_dv() (built-in function)": [[560, "dImis_dV"]], "dsbr_dv() (built-in function)": [[561, "dSbr_dV"]], "dsbus_dv() (built-in function)": [[562, "dSbus_dV"]], "dcopf() (built-in function)": [[563, "dcopf"]], "dcopf_solver() (built-in function)": [[564, "dcopf_solver"]], "dcpf() (built-in function)": [[565, "dcpf"]], "e2i_data() (built-in function)": [[567, "e2i_data"]], "e2i_field() (built-in function)": [[568, "e2i_field"]], "ext2int() (built-in function)": [[569, "ext2int"]], "extract_islands() (built-in function)": [[570, "extract_islands"]], "fdpf() (built-in function)": [[571, "fdpf"]], "feval_w_path() (built-in function)": [[572, "feval_w_path"]], "find_bridges() (built-in function)": [[573, "find_bridges"]], "find_islands() (built-in function)": [[574, "find_islands"]], "fmincopf() (built-in function)": [[575, "fmincopf"]], "gausspf() (built-in function)": [[576, "gausspf"]], "genfuels() (built-in function)": [[577, "genfuels"]], "gentypes() (built-in function)": [[578, "gentypes"]], "get_losses() (built-in function)": [[579, "get_losses"]], "get_reorder() (built-in function)": [[580, "get_reorder"]], "haspqcap() (built-in function)": [[581, "hasPQcap"]], "have_feature_e4st() (built-in function)": [[582, "have_feature_e4st"]], "have_feature_minopf() (built-in function)": [[583, "have_feature_minopf"]], "have_feature_most() (built-in function)": [[584, "have_feature_most"]], "have_feature_mp_core() (built-in function)": [[585, "have_feature_mp_core"]], "have_feature_pdipmopf() (built-in function)": [[586, "have_feature_pdipmopf"]], "have_feature_regexp_split() (built-in function)": [[587, "have_feature_regexp_split"]], "have_feature_scpdipmopf() (built-in function)": [[588, "have_feature_scpdipmopf"]], "have_feature_sdp_pf() (built-in function)": [[589, "have_feature_sdp_pf"]], "have_feature_smartmarket() (built-in function)": [[590, "have_feature_smartmarket"]], "have_feature_syngrid() (built-in function)": [[591, "have_feature_syngrid"]], "have_feature_table() (built-in function)": [[592, "have_feature_table"]], "have_feature_tralmopf() (built-in function)": [[593, "have_feature_tralmopf"]], "i2e_data() (built-in function)": [[594, "i2e_data"]], "i2e_field() (built-in function)": [[595, "i2e_field"]], "idx_brch() (built-in function)": [[596, "idx_brch"]], "idx_bus() (built-in function)": [[597, "idx_bus"]], "idx_cost() (built-in function)": [[598, "idx_cost"]], "idx_ct() (built-in function)": [[599, "idx_ct"]], "idx_dcline() (built-in function)": [[600, "idx_dcline"]], "idx_gen() (built-in function)": [[601, "idx_gen"]], "int2ext() (built-in function)": [[602, "int2ext"]], "isload() (built-in function)": [[603, "isload"]], "load2disp() (built-in function)": [[604, "load2disp"]], "loadcase() (built-in function)": [[605, "loadcase"]], "loadshed() (built-in function)": [[606, "loadshed"]], "makeaang() (built-in function)": [[607, "makeAang"]], "makeapq() (built-in function)": [[608, "makeApq"]], "makeavl() (built-in function)": [[609, "makeAvl"]], "makeay() (built-in function)": [[610, "makeAy"]], "makeb() (built-in function)": [[611, "makeB"]], "makebdc() (built-in function)": [[612, "makeBdc"]], "makejac() (built-in function)": [[613, "makeJac"]], "makelodf() (built-in function)": [[614, "makeLODF"]], "makeptdf() (built-in function)": [[615, "makePTDF"]], "makesbus() (built-in function)": [[616, "makeSbus"]], "makesdzip() (built-in function)": [[617, "makeSdzip"]], "makeybus() (built-in function)": [[618, "makeYbus"]], "make_vcorr() (built-in function)": [[619, "make_vcorr"]], "make_zpv() (built-in function)": [[620, "make_zpv"]], "margcost() (built-in function)": [[621, "margcost"]], "miqps_matpower() (built-in function)": [[622, "miqps_matpower"]], "modcost() (built-in function)": [[623, "modcost"]], "mpoption() (built-in function)": [[624, "mpoption"]], "mpoption_info_clp() (built-in function)": [[625, "mpoption_info_clp"]], "mpoption_info_cplex() (built-in function)": [[626, "mpoption_info_cplex"]], "mpoption_info_fmincon() (built-in function)": [[627, "mpoption_info_fmincon"]], "mpoption_info_glpk() (built-in function)": [[628, "mpoption_info_glpk"]], "mpoption_info_gurobi() (built-in function)": [[629, "mpoption_info_gurobi"]], "mpoption_info_highs() (built-in function)": [[630, "mpoption_info_highs"]], "mpoption_info_intlinprog() (built-in function)": [[631, "mpoption_info_intlinprog"]], "mpoption_info_ipopt() (built-in function)": [[632, "mpoption_info_ipopt"]], "mpoption_info_knitro() (built-in function)": [[633, "mpoption_info_knitro"]], "mpoption_info_linprog() (built-in function)": [[634, "mpoption_info_linprog"]], "mpoption_info_mips() (built-in function)": [[635, "mpoption_info_mips"]], "mpoption_info_mosek() (built-in function)": [[636, "mpoption_info_mosek"]], "mpoption_info_osqp() (built-in function)": [[637, "mpoption_info_osqp"]], "mpoption_info_quadprog() (built-in function)": [[638, "mpoption_info_quadprog"]], "mpoption_old() (built-in function)": [[639, "mpoption_old"]], "mpver() (built-in function)": [[640, "mpver"]], "newtonpf() (built-in function)": [[641, "newtonpf"]], "newtonpf_i_cart() (built-in function)": [[642, "newtonpf_I_cart"]], "newtonpf_i_hybrid() (built-in function)": [[643, "newtonpf_I_hybrid"]], "newtonpf_i_polar() (built-in function)": [[644, "newtonpf_I_polar"]], "newtonpf_s_cart() (built-in function)": [[645, "newtonpf_S_cart"]], "newtonpf_s_hybrid() (built-in function)": [[646, "newtonpf_S_hybrid"]], "nlpopf_solver() (built-in function)": [[647, "nlpopf_solver"]], "opf() (built-in function)": [[648, "opf"]], "opf_args() (built-in function)": [[649, "opf_args"]], "opf_branch_ang_fcn() (built-in function)": [[650, "opf_branch_ang_fcn"]], "opf_branch_ang_hess() (built-in function)": [[651, "opf_branch_ang_hess"]], "opf_branch_flow_fcn() (built-in function)": [[652, "opf_branch_flow_fcn"]], "opf_branch_flow_hess() (built-in function)": [[653, "opf_branch_flow_hess"]], "opf_current_balance_fcn() (built-in function)": [[654, "opf_current_balance_fcn"]], "opf_current_balance_hess() (built-in function)": [[655, "opf_current_balance_hess"]], "opf_execute() (built-in function)": [[656, "opf_execute"]], "opf_gen_cost_fcn() (built-in function)": [[657, "opf_gen_cost_fcn"]], "opf_legacy_user_cost_fcn() (built-in function)": [[658, "opf_legacy_user_cost_fcn"]], "opf_nle_fcn1() (built-in function)": [[659, "opf_nle_fcn1"]], "opf_nle_hess1() (built-in function)": [[660, "opf_nle_hess1"]], "opf_power_balance_fcn() (built-in function)": [[661, "opf_power_balance_fcn"]], "opf_power_balance_hess() (built-in function)": [[662, "opf_power_balance_hess"]], "opf_setup() (built-in function)": [[663, "opf_setup"]], "opf_veq_fcn() (built-in function)": [[664, "opf_veq_fcn"]], "opf_veq_hess() (built-in function)": [[665, "opf_veq_hess"]], "opf_vlim_fcn() (built-in function)": [[666, "opf_vlim_fcn"]], "opf_vlim_hess() (built-in function)": [[667, "opf_vlim_hess"]], "opf_vref_fcn() (built-in function)": [[668, "opf_vref_fcn"]], "opf_vref_hess() (built-in function)": [[669, "opf_vref_hess"]], "order_radial() (built-in function)": [[670, "order_radial"]], "pfsoln() (built-in function)": [[671, "pfsoln"]], "poly2pwl() (built-in function)": [[672, "poly2pwl"]], "polycost() (built-in function)": [[673, "polycost"]], "pqcost() (built-in function)": [[674, "pqcost"]], "printpf() (built-in function)": [[675, "printpf"]], "psse2mpc() (built-in function)": [[676, "psse2mpc"]], "psse_convert() (built-in function)": [[677, "psse_convert"]], "psse_convert_hvdc() (built-in function)": [[678, "psse_convert_hvdc"]], "psse_convert_xfmr() (built-in function)": [[679, "psse_convert_xfmr"]], "psse_parse() (built-in function)": [[680, "psse_parse"]], "psse_parse_line() (built-in function)": [[681, "psse_parse_line"]], "psse_parse_section() (built-in function)": [[682, "psse_parse_section"]], "psse_read() (built-in function)": [[683, "psse_read"]], "qps_matpower() (built-in function)": [[684, "qps_matpower"]], "radial_pf() (built-in function)": [[685, "radial_pf"]], "remove_userfcn() (built-in function)": [[686, "remove_userfcn"]], "run_userfcn() (built-in function)": [[687, "run_userfcn"]], "runcpf() (built-in function)": [[688, "runcpf"]], "rundcopf() (built-in function)": [[689, "rundcopf"]], "rundcpf() (built-in function)": [[690, "rundcpf"]], "runduopf() (built-in function)": [[691, "runduopf"]], "runopf() (built-in function)": [[692, "runopf"]], "runopf_w_res() (built-in function)": [[693, "runopf_w_res"]], "runpf() (built-in function)": [[694, "runpf"]], "runuopf() (built-in function)": [[695, "runuopf"]], "save2psse() (built-in function)": [[696, "save2psse"]], "savecase() (built-in function)": [[697, "savecase"]], "savechgtab() (built-in function)": [[698, "savechgtab"]], "scale_load() (built-in function)": [[699, "scale_load"]], "set_reorder() (built-in function)": [[700, "set_reorder"]], "t_apply_changes() (built-in function)": [[701, "t_apply_changes"]], "t_auction_case() (built-in function)": [[702, "t_auction_case"]], "t_auction_minopf() (built-in function)": [[703, "t_auction_minopf"]], "t_auction_mips() (built-in function)": [[704, "t_auction_mips"]], "t_auction_tspopf_pdipm() (built-in function)": [[705, "t_auction_tspopf_pdipm"]], "t_case30_userfcns() (built-in function)": [[706, "t_case30_userfcns"]], "t_case9_dcline() (built-in function)": [[707, "t_case9_dcline"]], "t_case9_opf() (built-in function)": [[708, "t_case9_opf"]], "t_case9_opfv2() (built-in function)": [[709, "t_case9_opfv2"]], "t_case9_pf() (built-in function)": [[710, "t_case9_pf"]], "t_case9_pfv2() (built-in function)": [[711, "t_case9_pfv2"]], "t_case9_save2psse() (built-in function)": [[712, "t_case9_save2psse"]], "t_case_ext() (built-in function)": [[713, "t_case_ext"]], "t_case_int() (built-in function)": [[714, "t_case_int"]], "t_chgtab() (built-in function)": [[715, "t_chgtab"]], "t_cpf() (built-in function)": [[716, "t_cpf"]], "t_cpf_cb1() (built-in function)": [[717, "t_cpf_cb1"]], "t_cpf_cb2() (built-in function)": [[718, "t_cpf_cb2"]], "t_dcline() (built-in function)": [[719, "t_dcline"]], "t_ext2int2ext() (built-in function)": [[720, "t_ext2int2ext"]], "t_feval_w_path() (built-in function)": [[721, "t_feval_w_path"]], "t_get_losses() (built-in function)": [[722, "t_get_losses"]], "t_haspqcap() (built-in function)": [[723, "t_hasPQcap"]], "t_hessian() (built-in function)": [[724, "t_hessian"]], "t_islands() (built-in function)": [[725, "t_islands"]], "t_jacobian() (built-in function)": [[726, "t_jacobian"]], "t_load2disp() (built-in function)": [[727, "t_load2disp"]], "t_loadcase() (built-in function)": [[728, "t_loadcase"]], "t_makelodf() (built-in function)": [[729, "t_makeLODF"]], "t_makeptdf() (built-in function)": [[730, "t_makePTDF"]], "t_margcost() (built-in function)": [[731, "t_margcost"]], "t_miqps_matpower() (built-in function)": [[732, "t_miqps_matpower"]], "t_modcost() (built-in function)": [[733, "t_modcost"]], "t_mpoption() (built-in function)": [[734, "t_mpoption"]], "t_mpoption_ov() (built-in function)": [[735, "t_mpoption_ov"]], "t_off2case() (built-in function)": [[736, "t_off2case"]], "t_opf_dc_bpmpd() (built-in function)": [[737, "t_opf_dc_bpmpd"]], "t_opf_dc_clp() (built-in function)": [[738, "t_opf_dc_clp"]], "t_opf_dc_cplex() (built-in function)": [[739, "t_opf_dc_cplex"]], "t_opf_dc_default() (built-in function)": [[740, "t_opf_dc_default"]], "t_opf_dc_glpk() (built-in function)": [[741, "t_opf_dc_glpk"]], "t_opf_dc_gurobi() (built-in function)": [[742, "t_opf_dc_gurobi"]], "t_opf_dc_highs() (built-in function)": [[743, "t_opf_dc_highs"]], "t_opf_dc_ipopt() (built-in function)": [[744, "t_opf_dc_ipopt"]], "t_opf_dc_mips() (built-in function)": [[745, "t_opf_dc_mips"]], "t_opf_dc_mips_sc() (built-in function)": [[746, "t_opf_dc_mips_sc"]], "t_opf_dc_mosek() (built-in function)": [[747, "t_opf_dc_mosek"]], "t_opf_dc_osqp() (built-in function)": [[748, "t_opf_dc_osqp"]], "t_opf_dc_ot() (built-in function)": [[749, "t_opf_dc_ot"]], "t_opf_default() (built-in function)": [[750, "t_opf_default"]], "t_opf_fmincon() (built-in function)": [[751, "t_opf_fmincon"]], "t_opf_ipopt() (built-in function)": [[752, "t_opf_ipopt"]], "t_opf_knitro() (built-in function)": [[753, "t_opf_knitro"]], "t_opf_minopf() (built-in function)": [[754, "t_opf_minopf"]], "t_opf_mips() (built-in function)": [[755, "t_opf_mips"]], "t_opf_model() (built-in function)": [[756, "t_opf_model"]], "t_opf_softlims() (built-in function)": [[757, "t_opf_softlims"]], "t_opf_tspopf_pdipm() (built-in function)": [[758, "t_opf_tspopf_pdipm"]], "t_opf_tspopf_scpdipm() (built-in function)": [[759, "t_opf_tspopf_scpdipm"]], "t_opf_tspopf_tralm() (built-in function)": [[760, "t_opf_tspopf_tralm"]], "t_opf_userfcns() (built-in function)": [[761, "t_opf_userfcns"]], "t_pf_ac() (built-in function)": [[762, "t_pf_ac"]], "t_pf_dc() (built-in function)": [[763, "t_pf_dc"]], "t_pf_radial() (built-in function)": [[764, "t_pf_radial"]], "t_printpf() (built-in function)": [[765, "t_printpf"]], "t_psse() (built-in function)": [[766, "t_psse"]], "t_qps_matpower() (built-in function)": [[767, "t_qps_matpower"]], "t_runmarket() (built-in function)": [[768, "t_runmarket"]], "t_runopf_w_res() (built-in function)": [[769, "t_runopf_w_res"]], "t_scale_load() (built-in function)": [[770, "t_scale_load"]], "t_total_load() (built-in function)": [[771, "t_total_load"]], "t_totcost() (built-in function)": [[772, "t_totcost"]], "t_vdep_load() (built-in function)": [[773, "t_vdep_load"]], "toggle_dcline() (built-in function)": [[774, "toggle_dcline"]], "toggle_iflims() (built-in function)": [[775, "toggle_iflims"]], "toggle_reserves() (built-in function)": [[776, "toggle_reserves"]], "toggle_softlims() (built-in function)": [[777, "toggle_softlims"]], "total_load() (built-in function)": [[778, "total_load"]], "totcost() (built-in function)": [[779, "totcost"]], "uopf() (built-in function)": [[780, "uopf"]], "update_mupq() (built-in function)": [[781, "update_mupq"]], "zgausspf() (built-in function)": [[782, "zgausspf"]], "mp_foo_table (built-in class)": [[786, "mp_foo_table"]], "t_case3p_a() (built-in function)": [[787, "t_case3p_a"]], "t_case3p_b() (built-in function)": [[788, "t_case3p_b"]], "t_case3p_c() (built-in function)": [[789, "t_case3p_c"]], "t_case3p_d() (built-in function)": [[790, "t_case3p_d"]], "t_case3p_e() (built-in function)": [[791, "t_case3p_e"]], "t_case3p_f() (built-in function)": [[792, "t_case3p_f"]], "t_case3p_g() (built-in function)": [[793, "t_case3p_g"]], "t_case3p_h() (built-in function)": [[794, "t_case3p_h"]], "t_case9_gizmo() (built-in function)": [[795, "t_case9_gizmo"]], "t_convert_1p_to_3p() (built-in function)": [[796, "t_convert_1p_to_3p"]], "t_dmc_element() (built-in function)": [[797, "t_dmc_element"]], "t_mp_data_model() (built-in function)": [[798, "t_mp_data_model"]], "t_mp_dm_converter_mpc2() (built-in function)": [[799, "t_mp_dm_converter_mpc2"]], "t_mp_mapped_array() (built-in function)": [[800, "t_mp_mapped_array"]], "t_mp_table() (built-in function)": [[801, "t_mp_table"]], "t_mpxt_legacy_dcline() (built-in function)": [[802, "t_mpxt_legacy_dcline"]], "t_mpxt_reserves() (built-in function)": [[803, "t_mpxt_reserves"]], "t_nm_element() (built-in function)": [[804, "t_nm_element"]], "t_node_test() (built-in function)": [[805, "t_node_test"]], "t_port_inj_current_acc() (built-in function)": [[806, "t_port_inj_current_acc"]], "t_port_inj_current_acp() (built-in function)": [[807, "t_port_inj_current_acp"]], "t_port_inj_power_acc() (built-in function)": [[808, "t_port_inj_power_acc"]], "t_port_inj_power_acp() (built-in function)": [[809, "t_port_inj_power_acp"]], "t_pretty_print() (built-in function)": [[810, "t_pretty_print"]], "t_run_mp() (built-in function)": [[811, "t_run_mp"]], "t_run_mp_3p() (built-in function)": [[812, "t_run_mp_3p"]], "t_run_opf_default() (built-in function)": [[813, "t_run_opf_default"]], "test_matpower() (built-in function)": [[814, "test_matpower"]]}})