Search.setIndex({"docnames": ["dev-manual/acknowledgments", "dev-manual/architecture", "dev-manual/customizing", "dev-manual/data-model", "dev-manual/data-model-converter", "dev-manual/index", "dev-manual/introduction", "dev-manual/math-model", "dev-manual/net-model", "dev-manual/notation", "dev-manual/references", "dev-manual/task", "howto/add-constraint", "howto/builddocs", "howto/builddocs/generate_autodoc_stubs", "howto/builddocs/generate_matpower_autodoc", "howto/builddocs/generate_source_symlinks", "howto/element", "howto/extension", "howto/gizmo-element/index", "howto/three-phase", "index", "mips/functions/have_feature_lu_vec", "mips/functions/have_feature_pardiso", "mips/functions/have_feature_pardiso_legacy", "mips/functions/have_feature_pardiso_object", "mips/functions/mips", "mips/functions/mips_example1", "mips/functions/mips_example2", "mips/functions/mipsver", "mips/functions/mplinsolve", "mips/functions/qps_mips", "mips/functions/t_mips", "mips/functions/t_mips_pardiso", "mips/functions/t_mplinsolve", "mips/functions/t_qps_mips", "mips/functions/test_mips", "mips/index", "mips/reference", "most/functions/addgen2mpc", "most/functions/addstorage", "most/functions/addwind", "most/functions/apply_profile", "most/functions/c118swf", "most/functions/ex_case3a", "most/functions/ex_case3b", "most/functions/ex_contab", "most/functions/ex_load_profile", "most/functions/ex_storage", "most/functions/ex_transmat", "most/functions/ex_wind", "most/functions/ex_wind_profile", "most/functions/ex_wind_profile_d", "most/functions/ex_wind_uc", "most/functions/ex_xgd", "most/functions/ex_xgd_ramp", "most/functions/ex_xgd_res", "most/functions/ex_xgd_uc", "most/functions/filter_ramp_transitions", "most/functions/getprofiles", "most/functions/idx_profile", "most/functions/loadgenericdata", "most/functions/loadmd", "most/functions/loadstoragedata", "most/functions/loadxgendata", "most/functions/md_init", "most/functions/most", "most/functions/most_ex1_ed", "most/functions/most_ex2_dcopf", "most/functions/most_ex3_dcopf_w_uc", "most/functions/most_ex4_dcopf_ss", "most/functions/most_ex5_mpopf", "most/functions/most_ex6_uc", "most/functions/most_ex7_suc", "most/functions/most_summary", "most/functions/mostver", "most/functions/mpoption_info_most", "most/functions/plot_gen", "most/functions/plot_storage", "most/functions/plot_uc", "most/functions/plot_uc_data", "most/functions/t_case30_most", "most/functions/t_case3_most", "most/functions/t_case_tlmp", "most/functions/t_case_tlmp_storage", "most/functions/t_most_30b_1_1_0", "most/functions/t_most_30b_1_1_0_uc", "most/functions/t_most_30b_1_1_17", "most/functions/t_most_30b_3_1_0", "most/functions/t_most_30b_3_1_17", "most/functions/t_most_3b_1_1_0", "most/functions/t_most_3b_1_1_2", "most/functions/t_most_3b_3_1_0", "most/functions/t_most_3b_3_1_2", "most/functions/t_most_fixed_res", "most/functions/t_most_mpopf", "most/functions/t_most_sp", "most/functions/t_most_spuc", "most/functions/t_most_suc", "most/functions/t_most_tlmp", "most/functions/t_most_uc", "most/functions/t_most_w_ds", "most/functions/test_most", "most/functions/uniformwindprofile", "most/index", "most/reference", "mpom/classes/mp/set_manager", "mpom/classes/mp/set_manager_opt_model", "mpom/classes/mp/sm_lin_constraint", "mpom/classes/mp/sm_nln_constraint", "mpom/classes/mp/sm_nln_cost", "mpom/classes/mp/sm_quad_constraint", "mpom/classes/mp/sm_quad_cost", "mpom/classes/mp/sm_variable", "mpom/classes/mp_idx_manager", "mpom/classes/opt_model", "mpom/functions/artelys_knitro_options", "mpom/functions/convert_constraint_multipliers", "mpom/functions/convert_lin_constraint", "mpom/functions/convert_lin_constraint_multipliers", "mpom/functions/convert_quad_constraint", "mpom/functions/cplex_options", "mpom/functions/glpk_options", "mpom/functions/gurobi_options", "mpom/functions/gurobiver", "mpom/functions/have_feature_bpmpd", "mpom/functions/have_feature_catchme", "mpom/functions/have_feature_clp", "mpom/functions/have_feature_cplex", "mpom/functions/have_feature_evalc", "mpom/functions/have_feature_fmincon", "mpom/functions/have_feature_fmincon_ipm", "mpom/functions/have_feature_fsolve", "mpom/functions/have_feature_glpk", "mpom/functions/have_feature_gurobi", "mpom/functions/have_feature_intlinprog", "mpom/functions/have_feature_ipopt", "mpom/functions/have_feature_ipopt_auxdata", "mpom/functions/have_feature_isequaln", "mpom/functions/have_feature_knitro", "mpom/functions/have_feature_knitromatlab", "mpom/functions/have_feature_ktrlink", "mpom/functions/have_feature_linprog", "mpom/functions/have_feature_linprog_ds", "mpom/functions/have_feature_mosek", "mpom/functions/have_feature_opti_clp", "mpom/functions/have_feature_optim", "mpom/functions/have_feature_optimoptions", "mpom/functions/have_feature_osqp", "mpom/functions/have_feature_quadprog", "mpom/functions/have_feature_quadprog_ls", "mpom/functions/have_feature_sdpt3", "mpom/functions/have_feature_sedumi", "mpom/functions/have_feature_yalmip", "mpom/functions/ipopt_options", "mpom/functions/knitrover", "mpom/functions/miqps_cplex", "mpom/functions/miqps_glpk", "mpom/functions/miqps_gurobi", "mpom/functions/miqps_master", "mpom/functions/miqps_mosek", "mpom/functions/miqps_ot", "mpom/functions/mosek_options", "mpom/functions/mosek_symbcon", "mpom/functions/mpomver", "mpom/functions/mpopt2nleqopt", "mpom/functions/mpopt2nlpopt", "mpom/functions/mpopt2pneopt", "mpom/functions/mpopt2qcqpopt", "mpom/functions/mpopt2qpopt", "mpom/functions/nested_struct_copy", "mpom/functions/nleqs_core", "mpom/functions/nleqs_fd_newton", "mpom/functions/nleqs_fsolve", "mpom/functions/nleqs_gauss_seidel", "mpom/functions/nleqs_master", "mpom/functions/nleqs_master_ex1", "mpom/functions/nleqs_master_ex2", "mpom/functions/nleqs_newton", "mpom/functions/nlp_consfcn", "mpom/functions/nlp_costfcn", "mpom/functions/nlp_hessfcn", "mpom/functions/nlps_fmincon", "mpom/functions/nlps_ipopt", "mpom/functions/nlps_knitro", "mpom/functions/nlps_master", "mpom/functions/nlps_master_ex1", "mpom/functions/nlps_master_ex2", "mpom/functions/osqp_options", "mpom/functions/osqpver", "mpom/functions/pne_callback_default", "mpom/functions/pne_callback_nose", "mpom/functions/pne_callback_target_lam", "mpom/functions/pne_detect_events", "mpom/functions/pne_detected_event", "mpom/functions/pne_event_nose", "mpom/functions/pne_event_target_lam", "mpom/functions/pne_ex1", "mpom/functions/pne_pfcn_arc_len", "mpom/functions/pne_pfcn_natural", "mpom/functions/pne_pfcn_pseudo_arc_len", "mpom/functions/pne_register_callbacks", "mpom/functions/pne_register_events", "mpom/functions/pnes_master", "mpom/functions/qcqp_ex1", "mpom/functions/qcqp_nlp_consfcn", "mpom/functions/qcqp_nlp_costfcn", "mpom/functions/qcqp_nlp_hessfcn", "mpom/functions/qcqps_gurobi", "mpom/functions/qcqps_knitro", "mpom/functions/qcqps_master", "mpom/functions/qp_ex1", "mpom/functions/qps_bpmpd", "mpom/functions/qps_clp", "mpom/functions/qps_cplex", "mpom/functions/qps_glpk", "mpom/functions/qps_gurobi", "mpom/functions/qps_ipopt", "mpom/functions/qps_knitro", "mpom/functions/qps_master", "mpom/functions/qps_mosek", "mpom/functions/qps_osqp", "mpom/functions/qps_ot", "mpom/functions/t_miqps_master", "mpom/functions/t_nested_struct_copy", "mpom/functions/t_nleqs_master", "mpom/functions/t_nlps_master", "mpom/functions/t_om_solve_leqs", "mpom/functions/t_om_solve_miqps", "mpom/functions/t_om_solve_nleqs", "mpom/functions/t_om_solve_nlps", "mpom/functions/t_om_solve_pne", "mpom/functions/t_om_solve_qcqps", "mpom/functions/t_om_solve_qps", "mpom/functions/t_opt_model", "mpom/functions/t_pnes_master", "mpom/functions/t_qcqps_master", "mpom/functions/t_qps_master", "mpom/functions/test_mp_opt_model", "mpom/index", "mpom/reference", "mptest/functions/have_feature", "mptest/functions/have_feature_matlab", "mptest/functions/have_feature_octave", "mptest/functions/mptestver", "mptest/functions/t_begin", "mptest/functions/t_end", "mptest/functions/t_file_match", "mptest/functions/t_have_feature", "mptest/functions/t_is", "mptest/functions/t_ok", "mptest/functions/t_run_tests", "mptest/functions/t_skip", "mptest/functions/t_str_match", "mptest/functions/t_test_fcns", "mptest/functions/test_mptest", "mptest/index", "mptest/reference", "ref-manual/classes/index", "ref-manual/classes/mp/NODE_TYPE", "ref-manual/classes/mp/cost_table", "ref-manual/classes/mp/cost_table_utils", "ref-manual/classes/mp/data_model", "ref-manual/classes/mp/data_model_cpf", "ref-manual/classes/mp/data_model_opf", "ref-manual/classes/mp/dm_converter", "ref-manual/classes/mp/dm_converter_mpc2", "ref-manual/classes/mp/dm_converter_mpc2_legacy", "ref-manual/classes/mp/dm_element", "ref-manual/classes/mp/dmc_element", "ref-manual/classes/mp/dmce_branch_mpc2", "ref-manual/classes/mp/dmce_bus3p_mpc2", "ref-manual/classes/mp/dmce_bus_mpc2", "ref-manual/classes/mp/dmce_buslink_mpc2", "ref-manual/classes/mp/dmce_gen3p_mpc2", "ref-manual/classes/mp/dmce_gen_mpc2", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2", "ref-manual/classes/mp/dmce_line3p_mpc2", "ref-manual/classes/mp/dmce_load3p_mpc2", "ref-manual/classes/mp/dmce_load_mpc2", "ref-manual/classes/mp/dmce_reserve_gen_mpc2", "ref-manual/classes/mp/dmce_reserve_zone_mpc2", "ref-manual/classes/mp/dmce_shunt_mpc2", "ref-manual/classes/mp/dmce_xfmr3p_mpc2", "ref-manual/classes/mp/dme_branch", "ref-manual/classes/mp/dme_branch_opf", "ref-manual/classes/mp/dme_bus", "ref-manual/classes/mp/dme_bus3p", "ref-manual/classes/mp/dme_bus3p_opf", "ref-manual/classes/mp/dme_bus_opf", "ref-manual/classes/mp/dme_buslink", "ref-manual/classes/mp/dme_buslink_opf", "ref-manual/classes/mp/dme_gen", "ref-manual/classes/mp/dme_gen3p", "ref-manual/classes/mp/dme_gen3p_opf", "ref-manual/classes/mp/dme_gen_opf", "ref-manual/classes/mp/dme_legacy_dcline", "ref-manual/classes/mp/dme_legacy_dcline_opf", "ref-manual/classes/mp/dme_line3p", "ref-manual/classes/mp/dme_line3p_opf", "ref-manual/classes/mp/dme_load", "ref-manual/classes/mp/dme_load3p", "ref-manual/classes/mp/dme_load3p_opf", "ref-manual/classes/mp/dme_load_cpf", "ref-manual/classes/mp/dme_load_opf", "ref-manual/classes/mp/dme_reserve_gen", "ref-manual/classes/mp/dme_reserve_zone", "ref-manual/classes/mp/dme_shared_opf", "ref-manual/classes/mp/dme_shunt", "ref-manual/classes/mp/dme_shunt_cpf", "ref-manual/classes/mp/dme_shunt_opf", "ref-manual/classes/mp/dme_xfmr3p", "ref-manual/classes/mp/dme_xfmr3p_opf", "ref-manual/classes/mp/element_container", "ref-manual/classes/mp/extension", "ref-manual/classes/mp/form", "ref-manual/classes/mp/form_ac", "ref-manual/classes/mp/form_acc", "ref-manual/classes/mp/form_acp", "ref-manual/classes/mp/form_dc", "ref-manual/classes/mp/mapped_array", "ref-manual/classes/mp/math_model", "ref-manual/classes/mp/math_model_cpf_acc", "ref-manual/classes/mp/math_model_cpf_acci", "ref-manual/classes/mp/math_model_cpf_accs", "ref-manual/classes/mp/math_model_cpf_acp", "ref-manual/classes/mp/math_model_cpf_acpi", "ref-manual/classes/mp/math_model_cpf_acps", "ref-manual/classes/mp/math_model_opf", "ref-manual/classes/mp/math_model_opf_ac", "ref-manual/classes/mp/math_model_opf_acc", "ref-manual/classes/mp/math_model_opf_acci", "ref-manual/classes/mp/math_model_opf_acci_legacy", "ref-manual/classes/mp/math_model_opf_accs", "ref-manual/classes/mp/math_model_opf_accs_legacy", "ref-manual/classes/mp/math_model_opf_acp", "ref-manual/classes/mp/math_model_opf_acpi", "ref-manual/classes/mp/math_model_opf_acpi_legacy", "ref-manual/classes/mp/math_model_opf_acps", "ref-manual/classes/mp/math_model_opf_acps_legacy", "ref-manual/classes/mp/math_model_opf_dc", "ref-manual/classes/mp/math_model_opf_dc_legacy", "ref-manual/classes/mp/math_model_pf", "ref-manual/classes/mp/math_model_pf_ac", "ref-manual/classes/mp/math_model_pf_acci", "ref-manual/classes/mp/math_model_pf_accs", "ref-manual/classes/mp/math_model_pf_acpi", "ref-manual/classes/mp/math_model_pf_acps", "ref-manual/classes/mp/math_model_pf_dc", "ref-manual/classes/mp/mm_element", "ref-manual/classes/mp/mm_shared_opf_legacy", "ref-manual/classes/mp/mm_shared_pfcpf", "ref-manual/classes/mp/mm_shared_pfcpf_ac", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i", "ref-manual/classes/mp/mm_shared_pfcpf_acc", "ref-manual/classes/mp/mm_shared_pfcpf_acci", "ref-manual/classes/mp/mm_shared_pfcpf_accs", "ref-manual/classes/mp/mm_shared_pfcpf_acp", "ref-manual/classes/mp/mm_shared_pfcpf_acpi", "ref-manual/classes/mp/mm_shared_pfcpf_acps", "ref-manual/classes/mp/mm_shared_pfcpf_dc", "ref-manual/classes/mp/mme_branch", "ref-manual/classes/mp/mme_branch_opf", "ref-manual/classes/mp/mme_branch_opf_ac", "ref-manual/classes/mp/mme_branch_opf_acc", "ref-manual/classes/mp/mme_branch_opf_acp", "ref-manual/classes/mp/mme_branch_opf_dc", "ref-manual/classes/mp/mme_branch_pf_ac", "ref-manual/classes/mp/mme_branch_pf_dc", "ref-manual/classes/mp/mme_bus", "ref-manual/classes/mp/mme_bus3p", "ref-manual/classes/mp/mme_bus3p_opf_acc", "ref-manual/classes/mp/mme_bus3p_opf_acp", "ref-manual/classes/mp/mme_bus_opf_ac", "ref-manual/classes/mp/mme_bus_opf_acc", "ref-manual/classes/mp/mme_bus_opf_acp", "ref-manual/classes/mp/mme_bus_opf_dc", "ref-manual/classes/mp/mme_bus_pf_ac", "ref-manual/classes/mp/mme_bus_pf_dc", "ref-manual/classes/mp/mme_buslink", "ref-manual/classes/mp/mme_buslink_opf", "ref-manual/classes/mp/mme_buslink_opf_acc", "ref-manual/classes/mp/mme_buslink_opf_acp", "ref-manual/classes/mp/mme_buslink_pf_ac", "ref-manual/classes/mp/mme_buslink_pf_acc", "ref-manual/classes/mp/mme_buslink_pf_acp", "ref-manual/classes/mp/mme_gen", "ref-manual/classes/mp/mme_gen3p", "ref-manual/classes/mp/mme_gen3p_opf", "ref-manual/classes/mp/mme_gen_opf", "ref-manual/classes/mp/mme_gen_opf_ac", "ref-manual/classes/mp/mme_gen_opf_ac_oval", "ref-manual/classes/mp/mme_gen_opf_dc", "ref-manual/classes/mp/mme_gen_pf_ac", "ref-manual/classes/mp/mme_gen_pf_dc", "ref-manual/classes/mp/mme_legacy_dcline", "ref-manual/classes/mp/mme_legacy_dcline_opf", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc", "ref-manual/classes/mp/mme_line3p", "ref-manual/classes/mp/mme_line3p_opf", "ref-manual/classes/mp/mme_load", "ref-manual/classes/mp/mme_load_cpf", "ref-manual/classes/mp/mme_load_pf_ac", "ref-manual/classes/mp/mme_load_pf_dc", "ref-manual/classes/mp/mme_reserve_gen", "ref-manual/classes/mp/mme_reserve_zone", "ref-manual/classes/mp/mme_shunt", "ref-manual/classes/mp/mme_shunt_cpf", "ref-manual/classes/mp/mme_shunt_pf_ac", "ref-manual/classes/mp/mme_shunt_pf_dc", "ref-manual/classes/mp/mme_xfmr3p", "ref-manual/classes/mp/mme_xfmr3p_opf", "ref-manual/classes/mp/net_model", "ref-manual/classes/mp/net_model_ac", "ref-manual/classes/mp/net_model_acc", "ref-manual/classes/mp/net_model_acp", "ref-manual/classes/mp/net_model_dc", "ref-manual/classes/mp/nm_element", "ref-manual/classes/mp/nme_branch", "ref-manual/classes/mp/nme_branch_ac", "ref-manual/classes/mp/nme_branch_acc", "ref-manual/classes/mp/nme_branch_acp", "ref-manual/classes/mp/nme_branch_dc", "ref-manual/classes/mp/nme_bus", "ref-manual/classes/mp/nme_bus3p", "ref-manual/classes/mp/nme_bus3p_acc", "ref-manual/classes/mp/nme_bus3p_acp", "ref-manual/classes/mp/nme_bus_acc", "ref-manual/classes/mp/nme_bus_acp", "ref-manual/classes/mp/nme_bus_dc", "ref-manual/classes/mp/nme_buslink", "ref-manual/classes/mp/nme_buslink_acc", "ref-manual/classes/mp/nme_buslink_acp", "ref-manual/classes/mp/nme_gen", "ref-manual/classes/mp/nme_gen3p", "ref-manual/classes/mp/nme_gen3p_acc", "ref-manual/classes/mp/nme_gen3p_acp", "ref-manual/classes/mp/nme_gen_ac", "ref-manual/classes/mp/nme_gen_acc", "ref-manual/classes/mp/nme_gen_acp", "ref-manual/classes/mp/nme_gen_dc", "ref-manual/classes/mp/nme_legacy_dcline", "ref-manual/classes/mp/nme_legacy_dcline_ac", "ref-manual/classes/mp/nme_legacy_dcline_acc", "ref-manual/classes/mp/nme_legacy_dcline_acp", "ref-manual/classes/mp/nme_legacy_dcline_dc", "ref-manual/classes/mp/nme_line3p", "ref-manual/classes/mp/nme_load", "ref-manual/classes/mp/nme_load3p", "ref-manual/classes/mp/nme_load_ac", "ref-manual/classes/mp/nme_load_acc", "ref-manual/classes/mp/nme_load_acp", "ref-manual/classes/mp/nme_load_dc", "ref-manual/classes/mp/nme_shunt", "ref-manual/classes/mp/nme_shunt_ac", "ref-manual/classes/mp/nme_shunt_acc", "ref-manual/classes/mp/nme_shunt_acp", "ref-manual/classes/mp/nme_shunt_dc", "ref-manual/classes/mp/nme_xfmr3p", "ref-manual/classes/mp/sm_legacy_cost", "ref-manual/classes/mp/task", "ref-manual/classes/mp/task_cpf", "ref-manual/classes/mp/task_cpf_legacy", "ref-manual/classes/mp/task_opf", "ref-manual/classes/mp/task_opf_legacy", "ref-manual/classes/mp/task_pf", "ref-manual/classes/mp/task_pf_legacy", "ref-manual/classes/mp/task_shared_legacy", "ref-manual/classes/mp/xt_3p", "ref-manual/classes/mp/xt_legacy_dcline", "ref-manual/classes/mp/xt_oval_cap_curve", "ref-manual/classes/mp/xt_reserves", "ref-manual/classes/mp_table", "ref-manual/classes/mp_table_subclass", "ref-manual/functions/index", "ref-manual/functions/install_matpower", "ref-manual/functions/mp/load_dm", "ref-manual/functions/mp_table_class", "ref-manual/functions/run_cpf", "ref-manual/functions/run_mp", "ref-manual/functions/run_opf", "ref-manual/functions/run_pf", "ref-manual/index", "ref-manual/introduction", "ref-manual/legacy/classes/opf_model", "ref-manual/legacy/functions/add_userfcn", "ref-manual/legacy/functions/apply_changes", "ref-manual/legacy/functions/bustypes", "ref-manual/legacy/functions/calc_branch_angle", "ref-manual/legacy/functions/calc_v_i_sum", "ref-manual/legacy/functions/calc_v_pq_sum", "ref-manual/legacy/functions/calc_v_y_sum", "ref-manual/legacy/functions/case_info", "ref-manual/legacy/functions/caseformat", "ref-manual/legacy/functions/cdf2mpc", "ref-manual/legacy/functions/compare_case", "ref-manual/legacy/functions/connected_components", "ref-manual/legacy/functions/cpf_corrector", "ref-manual/legacy/functions/cpf_current_mpc", "ref-manual/legacy/functions/cpf_default_callback", "ref-manual/legacy/functions/cpf_detect_events", "ref-manual/legacy/functions/cpf_flim_event", "ref-manual/legacy/functions/cpf_flim_event_cb", "ref-manual/legacy/functions/cpf_nose_event", "ref-manual/legacy/functions/cpf_nose_event_cb", "ref-manual/legacy/functions/cpf_p", "ref-manual/legacy/functions/cpf_p_jac", "ref-manual/legacy/functions/cpf_plim_event", "ref-manual/legacy/functions/cpf_plim_event_cb", "ref-manual/legacy/functions/cpf_predictor", "ref-manual/legacy/functions/cpf_qlim_event", "ref-manual/legacy/functions/cpf_qlim_event_cb", "ref-manual/legacy/functions/cpf_register_callback", "ref-manual/legacy/functions/cpf_register_event", "ref-manual/legacy/functions/cpf_tangent", "ref-manual/legacy/functions/cpf_target_lam_event", "ref-manual/legacy/functions/cpf_target_lam_event_cb", "ref-manual/legacy/functions/cpf_vlim_event", "ref-manual/legacy/functions/cpf_vlim_event_cb", "ref-manual/legacy/functions/d2Abr_dV2", "ref-manual/legacy/functions/d2Ibr_dV2", "ref-manual/legacy/functions/d2Imis_dV2", "ref-manual/legacy/functions/d2Imis_dVdSg", "ref-manual/legacy/functions/d2Sbr_dV2", "ref-manual/legacy/functions/d2Sbus_dV2", "ref-manual/legacy/functions/dAbr_dV", "ref-manual/legacy/functions/dIbr_dV", "ref-manual/legacy/functions/dImis_dV", "ref-manual/legacy/functions/dSbr_dV", "ref-manual/legacy/functions/dSbus_dV", "ref-manual/legacy/functions/dcopf", "ref-manual/legacy/functions/dcopf_solver", "ref-manual/legacy/functions/dcpf", "ref-manual/legacy/functions/define_constants", "ref-manual/legacy/functions/e2i_data", "ref-manual/legacy/functions/e2i_field", "ref-manual/legacy/functions/ext2int", "ref-manual/legacy/functions/extract_islands", "ref-manual/legacy/functions/fdpf", "ref-manual/legacy/functions/feval_w_path", "ref-manual/legacy/functions/find_bridges", "ref-manual/legacy/functions/find_islands", "ref-manual/legacy/functions/fmincopf", "ref-manual/legacy/functions/gausspf", "ref-manual/legacy/functions/genfuels", "ref-manual/legacy/functions/gentypes", "ref-manual/legacy/functions/get_losses", "ref-manual/legacy/functions/get_reorder", "ref-manual/legacy/functions/hasPQcap", "ref-manual/legacy/functions/have_feature_e4st", "ref-manual/legacy/functions/have_feature_minopf", "ref-manual/legacy/functions/have_feature_most", "ref-manual/legacy/functions/have_feature_mp_core", "ref-manual/legacy/functions/have_feature_pdipmopf", "ref-manual/legacy/functions/have_feature_regexp_split", "ref-manual/legacy/functions/have_feature_scpdipmopf", "ref-manual/legacy/functions/have_feature_sdp_pf", "ref-manual/legacy/functions/have_feature_smartmarket", "ref-manual/legacy/functions/have_feature_syngrid", "ref-manual/legacy/functions/have_feature_table", "ref-manual/legacy/functions/have_feature_tralmopf", "ref-manual/legacy/functions/i2e_data", "ref-manual/legacy/functions/i2e_field", "ref-manual/legacy/functions/idx_brch", "ref-manual/legacy/functions/idx_bus", "ref-manual/legacy/functions/idx_cost", "ref-manual/legacy/functions/idx_ct", "ref-manual/legacy/functions/idx_dcline", "ref-manual/legacy/functions/idx_gen", "ref-manual/legacy/functions/int2ext", "ref-manual/legacy/functions/isload", "ref-manual/legacy/functions/load2disp", "ref-manual/legacy/functions/loadcase", "ref-manual/legacy/functions/loadshed", "ref-manual/legacy/functions/makeAang", "ref-manual/legacy/functions/makeApq", "ref-manual/legacy/functions/makeAvl", "ref-manual/legacy/functions/makeAy", "ref-manual/legacy/functions/makeB", "ref-manual/legacy/functions/makeBdc", "ref-manual/legacy/functions/makeJac", "ref-manual/legacy/functions/makeLODF", "ref-manual/legacy/functions/makePTDF", "ref-manual/legacy/functions/makeSbus", "ref-manual/legacy/functions/makeSdzip", "ref-manual/legacy/functions/makeYbus", "ref-manual/legacy/functions/make_vcorr", "ref-manual/legacy/functions/make_zpv", "ref-manual/legacy/functions/margcost", "ref-manual/legacy/functions/miqps_matpower", "ref-manual/legacy/functions/modcost", "ref-manual/legacy/functions/mpoption", "ref-manual/legacy/functions/mpoption_info_clp", "ref-manual/legacy/functions/mpoption_info_cplex", "ref-manual/legacy/functions/mpoption_info_fmincon", "ref-manual/legacy/functions/mpoption_info_glpk", "ref-manual/legacy/functions/mpoption_info_gurobi", "ref-manual/legacy/functions/mpoption_info_intlinprog", "ref-manual/legacy/functions/mpoption_info_ipopt", "ref-manual/legacy/functions/mpoption_info_knitro", "ref-manual/legacy/functions/mpoption_info_linprog", "ref-manual/legacy/functions/mpoption_info_mips", "ref-manual/legacy/functions/mpoption_info_mosek", "ref-manual/legacy/functions/mpoption_info_osqp", "ref-manual/legacy/functions/mpoption_info_quadprog", "ref-manual/legacy/functions/mpoption_old", "ref-manual/legacy/functions/mpver", "ref-manual/legacy/functions/newtonpf", "ref-manual/legacy/functions/newtonpf_I_cart", "ref-manual/legacy/functions/newtonpf_I_hybrid", "ref-manual/legacy/functions/newtonpf_I_polar", "ref-manual/legacy/functions/newtonpf_S_cart", "ref-manual/legacy/functions/newtonpf_S_hybrid", "ref-manual/legacy/functions/nlpopf_solver", "ref-manual/legacy/functions/opf", "ref-manual/legacy/functions/opf_args", "ref-manual/legacy/functions/opf_branch_ang_fcn", "ref-manual/legacy/functions/opf_branch_ang_hess", "ref-manual/legacy/functions/opf_branch_flow_fcn", "ref-manual/legacy/functions/opf_branch_flow_hess", "ref-manual/legacy/functions/opf_current_balance_fcn", "ref-manual/legacy/functions/opf_current_balance_hess", "ref-manual/legacy/functions/opf_execute", "ref-manual/legacy/functions/opf_gen_cost_fcn", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn", "ref-manual/legacy/functions/opf_nle_fcn1", "ref-manual/legacy/functions/opf_nle_hess1", "ref-manual/legacy/functions/opf_power_balance_fcn", "ref-manual/legacy/functions/opf_power_balance_hess", "ref-manual/legacy/functions/opf_setup", "ref-manual/legacy/functions/opf_veq_fcn", "ref-manual/legacy/functions/opf_veq_hess", "ref-manual/legacy/functions/opf_vlim_fcn", "ref-manual/legacy/functions/opf_vlim_hess", "ref-manual/legacy/functions/opf_vref_fcn", "ref-manual/legacy/functions/opf_vref_hess", "ref-manual/legacy/functions/order_radial", "ref-manual/legacy/functions/pfsoln", "ref-manual/legacy/functions/poly2pwl", "ref-manual/legacy/functions/polycost", "ref-manual/legacy/functions/pqcost", "ref-manual/legacy/functions/printpf", "ref-manual/legacy/functions/psse2mpc", "ref-manual/legacy/functions/psse_convert", "ref-manual/legacy/functions/psse_convert_hvdc", "ref-manual/legacy/functions/psse_convert_xfmr", "ref-manual/legacy/functions/psse_parse", "ref-manual/legacy/functions/psse_parse_line", "ref-manual/legacy/functions/psse_parse_section", "ref-manual/legacy/functions/psse_read", "ref-manual/legacy/functions/qps_matpower", "ref-manual/legacy/functions/radial_pf", "ref-manual/legacy/functions/remove_userfcn", "ref-manual/legacy/functions/run_userfcn", "ref-manual/legacy/functions/runcpf", "ref-manual/legacy/functions/rundcopf", "ref-manual/legacy/functions/rundcpf", "ref-manual/legacy/functions/runduopf", "ref-manual/legacy/functions/runopf", "ref-manual/legacy/functions/runopf_w_res", "ref-manual/legacy/functions/runpf", "ref-manual/legacy/functions/runuopf", "ref-manual/legacy/functions/save2psse", "ref-manual/legacy/functions/savecase", "ref-manual/legacy/functions/savechgtab", "ref-manual/legacy/functions/scale_load", "ref-manual/legacy/functions/set_reorder", "ref-manual/legacy/functions/t_apply_changes", "ref-manual/legacy/functions/t_auction_case", "ref-manual/legacy/functions/t_auction_minopf", "ref-manual/legacy/functions/t_auction_mips", "ref-manual/legacy/functions/t_auction_tspopf_pdipm", "ref-manual/legacy/functions/t_case30_userfcns", "ref-manual/legacy/functions/t_case9_dcline", "ref-manual/legacy/functions/t_case9_opf", "ref-manual/legacy/functions/t_case9_opfv2", "ref-manual/legacy/functions/t_case9_pf", "ref-manual/legacy/functions/t_case9_pfv2", "ref-manual/legacy/functions/t_case9_save2psse", "ref-manual/legacy/functions/t_case_ext", "ref-manual/legacy/functions/t_case_int", "ref-manual/legacy/functions/t_chgtab", "ref-manual/legacy/functions/t_cpf", "ref-manual/legacy/functions/t_cpf_cb1", "ref-manual/legacy/functions/t_cpf_cb2", "ref-manual/legacy/functions/t_dcline", "ref-manual/legacy/functions/t_ext2int2ext", "ref-manual/legacy/functions/t_feval_w_path", "ref-manual/legacy/functions/t_get_losses", "ref-manual/legacy/functions/t_hasPQcap", "ref-manual/legacy/functions/t_hessian", "ref-manual/legacy/functions/t_islands", "ref-manual/legacy/functions/t_jacobian", "ref-manual/legacy/functions/t_load2disp", "ref-manual/legacy/functions/t_loadcase", "ref-manual/legacy/functions/t_makeLODF", "ref-manual/legacy/functions/t_makePTDF", "ref-manual/legacy/functions/t_margcost", "ref-manual/legacy/functions/t_miqps_matpower", "ref-manual/legacy/functions/t_modcost", "ref-manual/legacy/functions/t_mpoption", "ref-manual/legacy/functions/t_mpoption_ov", "ref-manual/legacy/functions/t_off2case", "ref-manual/legacy/functions/t_opf_dc_bpmpd", "ref-manual/legacy/functions/t_opf_dc_clp", "ref-manual/legacy/functions/t_opf_dc_cplex", "ref-manual/legacy/functions/t_opf_dc_default", "ref-manual/legacy/functions/t_opf_dc_glpk", "ref-manual/legacy/functions/t_opf_dc_gurobi", "ref-manual/legacy/functions/t_opf_dc_ipopt", "ref-manual/legacy/functions/t_opf_dc_mips", "ref-manual/legacy/functions/t_opf_dc_mips_sc", "ref-manual/legacy/functions/t_opf_dc_mosek", "ref-manual/legacy/functions/t_opf_dc_osqp", "ref-manual/legacy/functions/t_opf_dc_ot", "ref-manual/legacy/functions/t_opf_default", "ref-manual/legacy/functions/t_opf_fmincon", "ref-manual/legacy/functions/t_opf_ipopt", "ref-manual/legacy/functions/t_opf_knitro", "ref-manual/legacy/functions/t_opf_minopf", "ref-manual/legacy/functions/t_opf_mips", "ref-manual/legacy/functions/t_opf_model", "ref-manual/legacy/functions/t_opf_softlims", "ref-manual/legacy/functions/t_opf_tspopf_pdipm", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm", "ref-manual/legacy/functions/t_opf_tspopf_tralm", "ref-manual/legacy/functions/t_opf_userfcns", "ref-manual/legacy/functions/t_pf_ac", "ref-manual/legacy/functions/t_pf_dc", "ref-manual/legacy/functions/t_pf_radial", "ref-manual/legacy/functions/t_printpf", "ref-manual/legacy/functions/t_psse", "ref-manual/legacy/functions/t_qps_matpower", "ref-manual/legacy/functions/t_runmarket", "ref-manual/legacy/functions/t_runopf_w_res", "ref-manual/legacy/functions/t_scale_load", "ref-manual/legacy/functions/t_total_load", "ref-manual/legacy/functions/t_totcost", "ref-manual/legacy/functions/t_vdep_load", "ref-manual/legacy/functions/toggle_dcline", "ref-manual/legacy/functions/toggle_iflims", "ref-manual/legacy/functions/toggle_reserves", "ref-manual/legacy/functions/toggle_softlims", "ref-manual/legacy/functions/total_load", "ref-manual/legacy/functions/totcost", "ref-manual/legacy/functions/uopf", "ref-manual/legacy/functions/update_mupq", "ref-manual/legacy/functions/zgausspf", "ref-manual/legacy/index", "ref-manual/previous", "ref-manual/tests/index", "ref-manual/tests/mp_foo_table", "ref-manual/tests/t_case3p_a", "ref-manual/tests/t_case3p_b", "ref-manual/tests/t_case3p_c", "ref-manual/tests/t_case3p_d", "ref-manual/tests/t_case3p_e", "ref-manual/tests/t_case3p_f", "ref-manual/tests/t_case3p_g", "ref-manual/tests/t_case3p_h", "ref-manual/tests/t_case9_gizmo", "ref-manual/tests/t_dmc_element", "ref-manual/tests/t_mp_data_model", "ref-manual/tests/t_mp_dm_converter_mpc2", "ref-manual/tests/t_mp_mapped_array", "ref-manual/tests/t_mp_table", "ref-manual/tests/t_mpxt_legacy_dcline", "ref-manual/tests/t_mpxt_reserves", "ref-manual/tests/t_nm_element", "ref-manual/tests/t_node_test", "ref-manual/tests/t_port_inj_current_acc", "ref-manual/tests/t_port_inj_current_acp", "ref-manual/tests/t_port_inj_power_acc", "ref-manual/tests/t_port_inj_power_acp", "ref-manual/tests/t_pretty_print", "ref-manual/tests/t_run_mp", "ref-manual/tests/t_run_mp_3p", "ref-manual/tests/t_run_opf_default", "ref-manual/tests/test_matpower", "tech-notes", "users-manual/index"], "filenames": ["dev-manual/acknowledgments.rst", "dev-manual/architecture.rst", "dev-manual/customizing.rst", "dev-manual/data-model.rst", "dev-manual/data-model-converter.rst", "dev-manual/index.rst", "dev-manual/introduction.rst", "dev-manual/math-model.rst", "dev-manual/net-model.rst", "dev-manual/notation.rst", "dev-manual/references.rst", "dev-manual/task.rst", "howto/add-constraint.rst", "howto/builddocs.rst", "howto/builddocs/generate_autodoc_stubs.rst", "howto/builddocs/generate_matpower_autodoc.rst", "howto/builddocs/generate_source_symlinks.rst", "howto/element.rst", "howto/extension.rst", "howto/gizmo-element/index.rst", "howto/three-phase.rst", "index.rst", "mips/functions/have_feature_lu_vec.rst", "mips/functions/have_feature_pardiso.rst", "mips/functions/have_feature_pardiso_legacy.rst", "mips/functions/have_feature_pardiso_object.rst", "mips/functions/mips.rst", "mips/functions/mips_example1.rst", "mips/functions/mips_example2.rst", "mips/functions/mipsver.rst", "mips/functions/mplinsolve.rst", "mips/functions/qps_mips.rst", "mips/functions/t_mips.rst", "mips/functions/t_mips_pardiso.rst", "mips/functions/t_mplinsolve.rst", "mips/functions/t_qps_mips.rst", "mips/functions/test_mips.rst", "mips/index.rst", "mips/reference.rst", "most/functions/addgen2mpc.rst", "most/functions/addstorage.rst", "most/functions/addwind.rst", "most/functions/apply_profile.rst", "most/functions/c118swf.rst", "most/functions/ex_case3a.rst", "most/functions/ex_case3b.rst", "most/functions/ex_contab.rst", "most/functions/ex_load_profile.rst", "most/functions/ex_storage.rst", "most/functions/ex_transmat.rst", "most/functions/ex_wind.rst", "most/functions/ex_wind_profile.rst", "most/functions/ex_wind_profile_d.rst", "most/functions/ex_wind_uc.rst", "most/functions/ex_xgd.rst", "most/functions/ex_xgd_ramp.rst", "most/functions/ex_xgd_res.rst", "most/functions/ex_xgd_uc.rst", "most/functions/filter_ramp_transitions.rst", "most/functions/getprofiles.rst", "most/functions/idx_profile.rst", "most/functions/loadgenericdata.rst", "most/functions/loadmd.rst", "most/functions/loadstoragedata.rst", "most/functions/loadxgendata.rst", "most/functions/md_init.rst", "most/functions/most.rst", "most/functions/most_ex1_ed.rst", "most/functions/most_ex2_dcopf.rst", "most/functions/most_ex3_dcopf_w_uc.rst", "most/functions/most_ex4_dcopf_ss.rst", "most/functions/most_ex5_mpopf.rst", "most/functions/most_ex6_uc.rst", "most/functions/most_ex7_suc.rst", "most/functions/most_summary.rst", "most/functions/mostver.rst", "most/functions/mpoption_info_most.rst", "most/functions/plot_gen.rst", "most/functions/plot_storage.rst", "most/functions/plot_uc.rst", "most/functions/plot_uc_data.rst", "most/functions/t_case30_most.rst", "most/functions/t_case3_most.rst", "most/functions/t_case_tlmp.rst", "most/functions/t_case_tlmp_storage.rst", "most/functions/t_most_30b_1_1_0.rst", "most/functions/t_most_30b_1_1_0_uc.rst", "most/functions/t_most_30b_1_1_17.rst", "most/functions/t_most_30b_3_1_0.rst", "most/functions/t_most_30b_3_1_17.rst", "most/functions/t_most_3b_1_1_0.rst", "most/functions/t_most_3b_1_1_2.rst", "most/functions/t_most_3b_3_1_0.rst", "most/functions/t_most_3b_3_1_2.rst", "most/functions/t_most_fixed_res.rst", "most/functions/t_most_mpopf.rst", "most/functions/t_most_sp.rst", "most/functions/t_most_spuc.rst", "most/functions/t_most_suc.rst", "most/functions/t_most_tlmp.rst", "most/functions/t_most_uc.rst", "most/functions/t_most_w_ds.rst", "most/functions/test_most.rst", "most/functions/uniformwindprofile.rst", "most/index.rst", "most/reference.rst", "mpom/classes/mp/set_manager.rst", "mpom/classes/mp/set_manager_opt_model.rst", "mpom/classes/mp/sm_lin_constraint.rst", "mpom/classes/mp/sm_nln_constraint.rst", "mpom/classes/mp/sm_nln_cost.rst", "mpom/classes/mp/sm_quad_constraint.rst", "mpom/classes/mp/sm_quad_cost.rst", "mpom/classes/mp/sm_variable.rst", "mpom/classes/mp_idx_manager.rst", "mpom/classes/opt_model.rst", "mpom/functions/artelys_knitro_options.rst", "mpom/functions/convert_constraint_multipliers.rst", "mpom/functions/convert_lin_constraint.rst", "mpom/functions/convert_lin_constraint_multipliers.rst", "mpom/functions/convert_quad_constraint.rst", "mpom/functions/cplex_options.rst", "mpom/functions/glpk_options.rst", "mpom/functions/gurobi_options.rst", "mpom/functions/gurobiver.rst", "mpom/functions/have_feature_bpmpd.rst", "mpom/functions/have_feature_catchme.rst", "mpom/functions/have_feature_clp.rst", "mpom/functions/have_feature_cplex.rst", "mpom/functions/have_feature_evalc.rst", "mpom/functions/have_feature_fmincon.rst", "mpom/functions/have_feature_fmincon_ipm.rst", "mpom/functions/have_feature_fsolve.rst", "mpom/functions/have_feature_glpk.rst", "mpom/functions/have_feature_gurobi.rst", "mpom/functions/have_feature_intlinprog.rst", "mpom/functions/have_feature_ipopt.rst", "mpom/functions/have_feature_ipopt_auxdata.rst", "mpom/functions/have_feature_isequaln.rst", "mpom/functions/have_feature_knitro.rst", "mpom/functions/have_feature_knitromatlab.rst", "mpom/functions/have_feature_ktrlink.rst", "mpom/functions/have_feature_linprog.rst", "mpom/functions/have_feature_linprog_ds.rst", "mpom/functions/have_feature_mosek.rst", "mpom/functions/have_feature_opti_clp.rst", "mpom/functions/have_feature_optim.rst", "mpom/functions/have_feature_optimoptions.rst", "mpom/functions/have_feature_osqp.rst", "mpom/functions/have_feature_quadprog.rst", "mpom/functions/have_feature_quadprog_ls.rst", "mpom/functions/have_feature_sdpt3.rst", "mpom/functions/have_feature_sedumi.rst", "mpom/functions/have_feature_yalmip.rst", "mpom/functions/ipopt_options.rst", "mpom/functions/knitrover.rst", "mpom/functions/miqps_cplex.rst", "mpom/functions/miqps_glpk.rst", "mpom/functions/miqps_gurobi.rst", "mpom/functions/miqps_master.rst", "mpom/functions/miqps_mosek.rst", "mpom/functions/miqps_ot.rst", "mpom/functions/mosek_options.rst", "mpom/functions/mosek_symbcon.rst", "mpom/functions/mpomver.rst", "mpom/functions/mpopt2nleqopt.rst", "mpom/functions/mpopt2nlpopt.rst", "mpom/functions/mpopt2pneopt.rst", "mpom/functions/mpopt2qcqpopt.rst", "mpom/functions/mpopt2qpopt.rst", "mpom/functions/nested_struct_copy.rst", "mpom/functions/nleqs_core.rst", "mpom/functions/nleqs_fd_newton.rst", "mpom/functions/nleqs_fsolve.rst", "mpom/functions/nleqs_gauss_seidel.rst", "mpom/functions/nleqs_master.rst", "mpom/functions/nleqs_master_ex1.rst", "mpom/functions/nleqs_master_ex2.rst", "mpom/functions/nleqs_newton.rst", "mpom/functions/nlp_consfcn.rst", "mpom/functions/nlp_costfcn.rst", "mpom/functions/nlp_hessfcn.rst", "mpom/functions/nlps_fmincon.rst", "mpom/functions/nlps_ipopt.rst", "mpom/functions/nlps_knitro.rst", "mpom/functions/nlps_master.rst", "mpom/functions/nlps_master_ex1.rst", "mpom/functions/nlps_master_ex2.rst", "mpom/functions/osqp_options.rst", "mpom/functions/osqpver.rst", "mpom/functions/pne_callback_default.rst", "mpom/functions/pne_callback_nose.rst", "mpom/functions/pne_callback_target_lam.rst", "mpom/functions/pne_detect_events.rst", "mpom/functions/pne_detected_event.rst", "mpom/functions/pne_event_nose.rst", "mpom/functions/pne_event_target_lam.rst", "mpom/functions/pne_ex1.rst", "mpom/functions/pne_pfcn_arc_len.rst", "mpom/functions/pne_pfcn_natural.rst", "mpom/functions/pne_pfcn_pseudo_arc_len.rst", "mpom/functions/pne_register_callbacks.rst", "mpom/functions/pne_register_events.rst", "mpom/functions/pnes_master.rst", "mpom/functions/qcqp_ex1.rst", "mpom/functions/qcqp_nlp_consfcn.rst", "mpom/functions/qcqp_nlp_costfcn.rst", "mpom/functions/qcqp_nlp_hessfcn.rst", "mpom/functions/qcqps_gurobi.rst", "mpom/functions/qcqps_knitro.rst", "mpom/functions/qcqps_master.rst", "mpom/functions/qp_ex1.rst", "mpom/functions/qps_bpmpd.rst", "mpom/functions/qps_clp.rst", "mpom/functions/qps_cplex.rst", "mpom/functions/qps_glpk.rst", "mpom/functions/qps_gurobi.rst", "mpom/functions/qps_ipopt.rst", "mpom/functions/qps_knitro.rst", "mpom/functions/qps_master.rst", "mpom/functions/qps_mosek.rst", "mpom/functions/qps_osqp.rst", "mpom/functions/qps_ot.rst", "mpom/functions/t_miqps_master.rst", "mpom/functions/t_nested_struct_copy.rst", "mpom/functions/t_nleqs_master.rst", "mpom/functions/t_nlps_master.rst", "mpom/functions/t_om_solve_leqs.rst", "mpom/functions/t_om_solve_miqps.rst", "mpom/functions/t_om_solve_nleqs.rst", "mpom/functions/t_om_solve_nlps.rst", "mpom/functions/t_om_solve_pne.rst", "mpom/functions/t_om_solve_qcqps.rst", "mpom/functions/t_om_solve_qps.rst", "mpom/functions/t_opt_model.rst", "mpom/functions/t_pnes_master.rst", "mpom/functions/t_qcqps_master.rst", "mpom/functions/t_qps_master.rst", "mpom/functions/test_mp_opt_model.rst", "mpom/index.rst", "mpom/reference.rst", "mptest/functions/have_feature.rst", "mptest/functions/have_feature_matlab.rst", "mptest/functions/have_feature_octave.rst", "mptest/functions/mptestver.rst", "mptest/functions/t_begin.rst", "mptest/functions/t_end.rst", "mptest/functions/t_file_match.rst", "mptest/functions/t_have_feature.rst", "mptest/functions/t_is.rst", "mptest/functions/t_ok.rst", "mptest/functions/t_run_tests.rst", "mptest/functions/t_skip.rst", "mptest/functions/t_str_match.rst", "mptest/functions/t_test_fcns.rst", "mptest/functions/test_mptest.rst", "mptest/index.rst", "mptest/reference.rst", "ref-manual/classes/index.rst", "ref-manual/classes/mp/NODE_TYPE.rst", "ref-manual/classes/mp/cost_table.rst", "ref-manual/classes/mp/cost_table_utils.rst", "ref-manual/classes/mp/data_model.rst", "ref-manual/classes/mp/data_model_cpf.rst", "ref-manual/classes/mp/data_model_opf.rst", "ref-manual/classes/mp/dm_converter.rst", "ref-manual/classes/mp/dm_converter_mpc2.rst", "ref-manual/classes/mp/dm_converter_mpc2_legacy.rst", "ref-manual/classes/mp/dm_element.rst", "ref-manual/classes/mp/dmc_element.rst", "ref-manual/classes/mp/dmce_branch_mpc2.rst", "ref-manual/classes/mp/dmce_bus3p_mpc2.rst", "ref-manual/classes/mp/dmce_bus_mpc2.rst", "ref-manual/classes/mp/dmce_buslink_mpc2.rst", "ref-manual/classes/mp/dmce_gen3p_mpc2.rst", "ref-manual/classes/mp/dmce_gen_mpc2.rst", "ref-manual/classes/mp/dmce_legacy_dcline_mpc2.rst", "ref-manual/classes/mp/dmce_line3p_mpc2.rst", "ref-manual/classes/mp/dmce_load3p_mpc2.rst", "ref-manual/classes/mp/dmce_load_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_gen_mpc2.rst", "ref-manual/classes/mp/dmce_reserve_zone_mpc2.rst", "ref-manual/classes/mp/dmce_shunt_mpc2.rst", "ref-manual/classes/mp/dmce_xfmr3p_mpc2.rst", "ref-manual/classes/mp/dme_branch.rst", "ref-manual/classes/mp/dme_branch_opf.rst", "ref-manual/classes/mp/dme_bus.rst", "ref-manual/classes/mp/dme_bus3p.rst", "ref-manual/classes/mp/dme_bus3p_opf.rst", "ref-manual/classes/mp/dme_bus_opf.rst", "ref-manual/classes/mp/dme_buslink.rst", "ref-manual/classes/mp/dme_buslink_opf.rst", "ref-manual/classes/mp/dme_gen.rst", "ref-manual/classes/mp/dme_gen3p.rst", "ref-manual/classes/mp/dme_gen3p_opf.rst", "ref-manual/classes/mp/dme_gen_opf.rst", "ref-manual/classes/mp/dme_legacy_dcline.rst", "ref-manual/classes/mp/dme_legacy_dcline_opf.rst", "ref-manual/classes/mp/dme_line3p.rst", "ref-manual/classes/mp/dme_line3p_opf.rst", "ref-manual/classes/mp/dme_load.rst", "ref-manual/classes/mp/dme_load3p.rst", "ref-manual/classes/mp/dme_load3p_opf.rst", "ref-manual/classes/mp/dme_load_cpf.rst", "ref-manual/classes/mp/dme_load_opf.rst", "ref-manual/classes/mp/dme_reserve_gen.rst", "ref-manual/classes/mp/dme_reserve_zone.rst", "ref-manual/classes/mp/dme_shared_opf.rst", "ref-manual/classes/mp/dme_shunt.rst", "ref-manual/classes/mp/dme_shunt_cpf.rst", "ref-manual/classes/mp/dme_shunt_opf.rst", "ref-manual/classes/mp/dme_xfmr3p.rst", "ref-manual/classes/mp/dme_xfmr3p_opf.rst", "ref-manual/classes/mp/element_container.rst", "ref-manual/classes/mp/extension.rst", "ref-manual/classes/mp/form.rst", "ref-manual/classes/mp/form_ac.rst", "ref-manual/classes/mp/form_acc.rst", "ref-manual/classes/mp/form_acp.rst", "ref-manual/classes/mp/form_dc.rst", "ref-manual/classes/mp/mapped_array.rst", "ref-manual/classes/mp/math_model.rst", "ref-manual/classes/mp/math_model_cpf_acc.rst", "ref-manual/classes/mp/math_model_cpf_acci.rst", "ref-manual/classes/mp/math_model_cpf_accs.rst", "ref-manual/classes/mp/math_model_cpf_acp.rst", "ref-manual/classes/mp/math_model_cpf_acpi.rst", "ref-manual/classes/mp/math_model_cpf_acps.rst", "ref-manual/classes/mp/math_model_opf.rst", "ref-manual/classes/mp/math_model_opf_ac.rst", "ref-manual/classes/mp/math_model_opf_acc.rst", "ref-manual/classes/mp/math_model_opf_acci.rst", "ref-manual/classes/mp/math_model_opf_acci_legacy.rst", "ref-manual/classes/mp/math_model_opf_accs.rst", "ref-manual/classes/mp/math_model_opf_accs_legacy.rst", "ref-manual/classes/mp/math_model_opf_acp.rst", "ref-manual/classes/mp/math_model_opf_acpi.rst", "ref-manual/classes/mp/math_model_opf_acpi_legacy.rst", "ref-manual/classes/mp/math_model_opf_acps.rst", "ref-manual/classes/mp/math_model_opf_acps_legacy.rst", "ref-manual/classes/mp/math_model_opf_dc.rst", "ref-manual/classes/mp/math_model_opf_dc_legacy.rst", "ref-manual/classes/mp/math_model_pf.rst", "ref-manual/classes/mp/math_model_pf_ac.rst", "ref-manual/classes/mp/math_model_pf_acci.rst", "ref-manual/classes/mp/math_model_pf_accs.rst", "ref-manual/classes/mp/math_model_pf_acpi.rst", "ref-manual/classes/mp/math_model_pf_acps.rst", "ref-manual/classes/mp/math_model_pf_dc.rst", "ref-manual/classes/mp/mm_element.rst", "ref-manual/classes/mp/mm_shared_opf_legacy.rst", "ref-manual/classes/mp/mm_shared_pfcpf.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac.rst", "ref-manual/classes/mp/mm_shared_pfcpf_ac_i.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acc.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acci.rst", "ref-manual/classes/mp/mm_shared_pfcpf_accs.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acp.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acpi.rst", "ref-manual/classes/mp/mm_shared_pfcpf_acps.rst", "ref-manual/classes/mp/mm_shared_pfcpf_dc.rst", "ref-manual/classes/mp/mme_branch.rst", "ref-manual/classes/mp/mme_branch_opf.rst", "ref-manual/classes/mp/mme_branch_opf_ac.rst", "ref-manual/classes/mp/mme_branch_opf_acc.rst", "ref-manual/classes/mp/mme_branch_opf_acp.rst", "ref-manual/classes/mp/mme_branch_opf_dc.rst", "ref-manual/classes/mp/mme_branch_pf_ac.rst", "ref-manual/classes/mp/mme_branch_pf_dc.rst", "ref-manual/classes/mp/mme_bus.rst", "ref-manual/classes/mp/mme_bus3p.rst", "ref-manual/classes/mp/mme_bus3p_opf_acc.rst", "ref-manual/classes/mp/mme_bus3p_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_ac.rst", "ref-manual/classes/mp/mme_bus_opf_acc.rst", "ref-manual/classes/mp/mme_bus_opf_acp.rst", "ref-manual/classes/mp/mme_bus_opf_dc.rst", "ref-manual/classes/mp/mme_bus_pf_ac.rst", "ref-manual/classes/mp/mme_bus_pf_dc.rst", "ref-manual/classes/mp/mme_buslink.rst", "ref-manual/classes/mp/mme_buslink_opf.rst", "ref-manual/classes/mp/mme_buslink_opf_acc.rst", "ref-manual/classes/mp/mme_buslink_opf_acp.rst", "ref-manual/classes/mp/mme_buslink_pf_ac.rst", "ref-manual/classes/mp/mme_buslink_pf_acc.rst", "ref-manual/classes/mp/mme_buslink_pf_acp.rst", "ref-manual/classes/mp/mme_gen.rst", "ref-manual/classes/mp/mme_gen3p.rst", "ref-manual/classes/mp/mme_gen3p_opf.rst", "ref-manual/classes/mp/mme_gen_opf.rst", "ref-manual/classes/mp/mme_gen_opf_ac.rst", "ref-manual/classes/mp/mme_gen_opf_ac_oval.rst", "ref-manual/classes/mp/mme_gen_opf_dc.rst", "ref-manual/classes/mp/mme_gen_pf_ac.rst", "ref-manual/classes/mp/mme_gen_pf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_opf_dc.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_ac.rst", "ref-manual/classes/mp/mme_legacy_dcline_pf_dc.rst", "ref-manual/classes/mp/mme_line3p.rst", "ref-manual/classes/mp/mme_line3p_opf.rst", "ref-manual/classes/mp/mme_load.rst", "ref-manual/classes/mp/mme_load_cpf.rst", "ref-manual/classes/mp/mme_load_pf_ac.rst", "ref-manual/classes/mp/mme_load_pf_dc.rst", "ref-manual/classes/mp/mme_reserve_gen.rst", "ref-manual/classes/mp/mme_reserve_zone.rst", "ref-manual/classes/mp/mme_shunt.rst", "ref-manual/classes/mp/mme_shunt_cpf.rst", "ref-manual/classes/mp/mme_shunt_pf_ac.rst", "ref-manual/classes/mp/mme_shunt_pf_dc.rst", "ref-manual/classes/mp/mme_xfmr3p.rst", "ref-manual/classes/mp/mme_xfmr3p_opf.rst", "ref-manual/classes/mp/net_model.rst", "ref-manual/classes/mp/net_model_ac.rst", "ref-manual/classes/mp/net_model_acc.rst", "ref-manual/classes/mp/net_model_acp.rst", "ref-manual/classes/mp/net_model_dc.rst", "ref-manual/classes/mp/nm_element.rst", "ref-manual/classes/mp/nme_branch.rst", "ref-manual/classes/mp/nme_branch_ac.rst", "ref-manual/classes/mp/nme_branch_acc.rst", "ref-manual/classes/mp/nme_branch_acp.rst", "ref-manual/classes/mp/nme_branch_dc.rst", "ref-manual/classes/mp/nme_bus.rst", "ref-manual/classes/mp/nme_bus3p.rst", "ref-manual/classes/mp/nme_bus3p_acc.rst", "ref-manual/classes/mp/nme_bus3p_acp.rst", "ref-manual/classes/mp/nme_bus_acc.rst", "ref-manual/classes/mp/nme_bus_acp.rst", "ref-manual/classes/mp/nme_bus_dc.rst", "ref-manual/classes/mp/nme_buslink.rst", "ref-manual/classes/mp/nme_buslink_acc.rst", "ref-manual/classes/mp/nme_buslink_acp.rst", "ref-manual/classes/mp/nme_gen.rst", "ref-manual/classes/mp/nme_gen3p.rst", "ref-manual/classes/mp/nme_gen3p_acc.rst", "ref-manual/classes/mp/nme_gen3p_acp.rst", "ref-manual/classes/mp/nme_gen_ac.rst", "ref-manual/classes/mp/nme_gen_acc.rst", "ref-manual/classes/mp/nme_gen_acp.rst", "ref-manual/classes/mp/nme_gen_dc.rst", "ref-manual/classes/mp/nme_legacy_dcline.rst", "ref-manual/classes/mp/nme_legacy_dcline_ac.rst", "ref-manual/classes/mp/nme_legacy_dcline_acc.rst", "ref-manual/classes/mp/nme_legacy_dcline_acp.rst", "ref-manual/classes/mp/nme_legacy_dcline_dc.rst", "ref-manual/classes/mp/nme_line3p.rst", "ref-manual/classes/mp/nme_load.rst", "ref-manual/classes/mp/nme_load3p.rst", "ref-manual/classes/mp/nme_load_ac.rst", "ref-manual/classes/mp/nme_load_acc.rst", "ref-manual/classes/mp/nme_load_acp.rst", "ref-manual/classes/mp/nme_load_dc.rst", "ref-manual/classes/mp/nme_shunt.rst", "ref-manual/classes/mp/nme_shunt_ac.rst", "ref-manual/classes/mp/nme_shunt_acc.rst", "ref-manual/classes/mp/nme_shunt_acp.rst", "ref-manual/classes/mp/nme_shunt_dc.rst", "ref-manual/classes/mp/nme_xfmr3p.rst", "ref-manual/classes/mp/sm_legacy_cost.rst", "ref-manual/classes/mp/task.rst", "ref-manual/classes/mp/task_cpf.rst", "ref-manual/classes/mp/task_cpf_legacy.rst", "ref-manual/classes/mp/task_opf.rst", "ref-manual/classes/mp/task_opf_legacy.rst", "ref-manual/classes/mp/task_pf.rst", "ref-manual/classes/mp/task_pf_legacy.rst", "ref-manual/classes/mp/task_shared_legacy.rst", "ref-manual/classes/mp/xt_3p.rst", "ref-manual/classes/mp/xt_legacy_dcline.rst", "ref-manual/classes/mp/xt_oval_cap_curve.rst", "ref-manual/classes/mp/xt_reserves.rst", "ref-manual/classes/mp_table.rst", "ref-manual/classes/mp_table_subclass.rst", "ref-manual/functions/index.rst", "ref-manual/functions/install_matpower.rst", "ref-manual/functions/mp/load_dm.rst", "ref-manual/functions/mp_table_class.rst", "ref-manual/functions/run_cpf.rst", "ref-manual/functions/run_mp.rst", "ref-manual/functions/run_opf.rst", "ref-manual/functions/run_pf.rst", "ref-manual/index.rst", "ref-manual/introduction.rst", "ref-manual/legacy/classes/opf_model.rst", "ref-manual/legacy/functions/add_userfcn.rst", "ref-manual/legacy/functions/apply_changes.rst", "ref-manual/legacy/functions/bustypes.rst", "ref-manual/legacy/functions/calc_branch_angle.rst", "ref-manual/legacy/functions/calc_v_i_sum.rst", "ref-manual/legacy/functions/calc_v_pq_sum.rst", "ref-manual/legacy/functions/calc_v_y_sum.rst", "ref-manual/legacy/functions/case_info.rst", "ref-manual/legacy/functions/caseformat.rst", "ref-manual/legacy/functions/cdf2mpc.rst", "ref-manual/legacy/functions/compare_case.rst", "ref-manual/legacy/functions/connected_components.rst", "ref-manual/legacy/functions/cpf_corrector.rst", "ref-manual/legacy/functions/cpf_current_mpc.rst", "ref-manual/legacy/functions/cpf_default_callback.rst", "ref-manual/legacy/functions/cpf_detect_events.rst", "ref-manual/legacy/functions/cpf_flim_event.rst", "ref-manual/legacy/functions/cpf_flim_event_cb.rst", "ref-manual/legacy/functions/cpf_nose_event.rst", "ref-manual/legacy/functions/cpf_nose_event_cb.rst", "ref-manual/legacy/functions/cpf_p.rst", "ref-manual/legacy/functions/cpf_p_jac.rst", "ref-manual/legacy/functions/cpf_plim_event.rst", "ref-manual/legacy/functions/cpf_plim_event_cb.rst", "ref-manual/legacy/functions/cpf_predictor.rst", "ref-manual/legacy/functions/cpf_qlim_event.rst", "ref-manual/legacy/functions/cpf_qlim_event_cb.rst", "ref-manual/legacy/functions/cpf_register_callback.rst", "ref-manual/legacy/functions/cpf_register_event.rst", "ref-manual/legacy/functions/cpf_tangent.rst", "ref-manual/legacy/functions/cpf_target_lam_event.rst", "ref-manual/legacy/functions/cpf_target_lam_event_cb.rst", "ref-manual/legacy/functions/cpf_vlim_event.rst", "ref-manual/legacy/functions/cpf_vlim_event_cb.rst", "ref-manual/legacy/functions/d2Abr_dV2.rst", "ref-manual/legacy/functions/d2Ibr_dV2.rst", "ref-manual/legacy/functions/d2Imis_dV2.rst", "ref-manual/legacy/functions/d2Imis_dVdSg.rst", "ref-manual/legacy/functions/d2Sbr_dV2.rst", "ref-manual/legacy/functions/d2Sbus_dV2.rst", "ref-manual/legacy/functions/dAbr_dV.rst", "ref-manual/legacy/functions/dIbr_dV.rst", "ref-manual/legacy/functions/dImis_dV.rst", "ref-manual/legacy/functions/dSbr_dV.rst", "ref-manual/legacy/functions/dSbus_dV.rst", "ref-manual/legacy/functions/dcopf.rst", "ref-manual/legacy/functions/dcopf_solver.rst", "ref-manual/legacy/functions/dcpf.rst", "ref-manual/legacy/functions/define_constants.rst", "ref-manual/legacy/functions/e2i_data.rst", "ref-manual/legacy/functions/e2i_field.rst", "ref-manual/legacy/functions/ext2int.rst", "ref-manual/legacy/functions/extract_islands.rst", "ref-manual/legacy/functions/fdpf.rst", "ref-manual/legacy/functions/feval_w_path.rst", "ref-manual/legacy/functions/find_bridges.rst", "ref-manual/legacy/functions/find_islands.rst", "ref-manual/legacy/functions/fmincopf.rst", "ref-manual/legacy/functions/gausspf.rst", "ref-manual/legacy/functions/genfuels.rst", "ref-manual/legacy/functions/gentypes.rst", "ref-manual/legacy/functions/get_losses.rst", "ref-manual/legacy/functions/get_reorder.rst", "ref-manual/legacy/functions/hasPQcap.rst", "ref-manual/legacy/functions/have_feature_e4st.rst", "ref-manual/legacy/functions/have_feature_minopf.rst", "ref-manual/legacy/functions/have_feature_most.rst", "ref-manual/legacy/functions/have_feature_mp_core.rst", "ref-manual/legacy/functions/have_feature_pdipmopf.rst", "ref-manual/legacy/functions/have_feature_regexp_split.rst", "ref-manual/legacy/functions/have_feature_scpdipmopf.rst", "ref-manual/legacy/functions/have_feature_sdp_pf.rst", "ref-manual/legacy/functions/have_feature_smartmarket.rst", "ref-manual/legacy/functions/have_feature_syngrid.rst", "ref-manual/legacy/functions/have_feature_table.rst", "ref-manual/legacy/functions/have_feature_tralmopf.rst", "ref-manual/legacy/functions/i2e_data.rst", "ref-manual/legacy/functions/i2e_field.rst", "ref-manual/legacy/functions/idx_brch.rst", "ref-manual/legacy/functions/idx_bus.rst", "ref-manual/legacy/functions/idx_cost.rst", "ref-manual/legacy/functions/idx_ct.rst", "ref-manual/legacy/functions/idx_dcline.rst", "ref-manual/legacy/functions/idx_gen.rst", "ref-manual/legacy/functions/int2ext.rst", "ref-manual/legacy/functions/isload.rst", "ref-manual/legacy/functions/load2disp.rst", "ref-manual/legacy/functions/loadcase.rst", "ref-manual/legacy/functions/loadshed.rst", "ref-manual/legacy/functions/makeAang.rst", "ref-manual/legacy/functions/makeApq.rst", "ref-manual/legacy/functions/makeAvl.rst", "ref-manual/legacy/functions/makeAy.rst", "ref-manual/legacy/functions/makeB.rst", "ref-manual/legacy/functions/makeBdc.rst", "ref-manual/legacy/functions/makeJac.rst", "ref-manual/legacy/functions/makeLODF.rst", "ref-manual/legacy/functions/makePTDF.rst", "ref-manual/legacy/functions/makeSbus.rst", "ref-manual/legacy/functions/makeSdzip.rst", "ref-manual/legacy/functions/makeYbus.rst", "ref-manual/legacy/functions/make_vcorr.rst", "ref-manual/legacy/functions/make_zpv.rst", "ref-manual/legacy/functions/margcost.rst", "ref-manual/legacy/functions/miqps_matpower.rst", "ref-manual/legacy/functions/modcost.rst", "ref-manual/legacy/functions/mpoption.rst", "ref-manual/legacy/functions/mpoption_info_clp.rst", "ref-manual/legacy/functions/mpoption_info_cplex.rst", "ref-manual/legacy/functions/mpoption_info_fmincon.rst", "ref-manual/legacy/functions/mpoption_info_glpk.rst", "ref-manual/legacy/functions/mpoption_info_gurobi.rst", "ref-manual/legacy/functions/mpoption_info_intlinprog.rst", "ref-manual/legacy/functions/mpoption_info_ipopt.rst", "ref-manual/legacy/functions/mpoption_info_knitro.rst", "ref-manual/legacy/functions/mpoption_info_linprog.rst", "ref-manual/legacy/functions/mpoption_info_mips.rst", "ref-manual/legacy/functions/mpoption_info_mosek.rst", "ref-manual/legacy/functions/mpoption_info_osqp.rst", "ref-manual/legacy/functions/mpoption_info_quadprog.rst", "ref-manual/legacy/functions/mpoption_old.rst", "ref-manual/legacy/functions/mpver.rst", "ref-manual/legacy/functions/newtonpf.rst", "ref-manual/legacy/functions/newtonpf_I_cart.rst", "ref-manual/legacy/functions/newtonpf_I_hybrid.rst", "ref-manual/legacy/functions/newtonpf_I_polar.rst", "ref-manual/legacy/functions/newtonpf_S_cart.rst", "ref-manual/legacy/functions/newtonpf_S_hybrid.rst", "ref-manual/legacy/functions/nlpopf_solver.rst", "ref-manual/legacy/functions/opf.rst", "ref-manual/legacy/functions/opf_args.rst", "ref-manual/legacy/functions/opf_branch_ang_fcn.rst", "ref-manual/legacy/functions/opf_branch_ang_hess.rst", "ref-manual/legacy/functions/opf_branch_flow_fcn.rst", "ref-manual/legacy/functions/opf_branch_flow_hess.rst", "ref-manual/legacy/functions/opf_current_balance_fcn.rst", "ref-manual/legacy/functions/opf_current_balance_hess.rst", "ref-manual/legacy/functions/opf_execute.rst", "ref-manual/legacy/functions/opf_gen_cost_fcn.rst", "ref-manual/legacy/functions/opf_legacy_user_cost_fcn.rst", "ref-manual/legacy/functions/opf_nle_fcn1.rst", "ref-manual/legacy/functions/opf_nle_hess1.rst", "ref-manual/legacy/functions/opf_power_balance_fcn.rst", "ref-manual/legacy/functions/opf_power_balance_hess.rst", "ref-manual/legacy/functions/opf_setup.rst", "ref-manual/legacy/functions/opf_veq_fcn.rst", "ref-manual/legacy/functions/opf_veq_hess.rst", "ref-manual/legacy/functions/opf_vlim_fcn.rst", "ref-manual/legacy/functions/opf_vlim_hess.rst", "ref-manual/legacy/functions/opf_vref_fcn.rst", "ref-manual/legacy/functions/opf_vref_hess.rst", "ref-manual/legacy/functions/order_radial.rst", "ref-manual/legacy/functions/pfsoln.rst", "ref-manual/legacy/functions/poly2pwl.rst", "ref-manual/legacy/functions/polycost.rst", "ref-manual/legacy/functions/pqcost.rst", "ref-manual/legacy/functions/printpf.rst", "ref-manual/legacy/functions/psse2mpc.rst", "ref-manual/legacy/functions/psse_convert.rst", "ref-manual/legacy/functions/psse_convert_hvdc.rst", "ref-manual/legacy/functions/psse_convert_xfmr.rst", "ref-manual/legacy/functions/psse_parse.rst", "ref-manual/legacy/functions/psse_parse_line.rst", "ref-manual/legacy/functions/psse_parse_section.rst", "ref-manual/legacy/functions/psse_read.rst", "ref-manual/legacy/functions/qps_matpower.rst", "ref-manual/legacy/functions/radial_pf.rst", "ref-manual/legacy/functions/remove_userfcn.rst", "ref-manual/legacy/functions/run_userfcn.rst", "ref-manual/legacy/functions/runcpf.rst", "ref-manual/legacy/functions/rundcopf.rst", "ref-manual/legacy/functions/rundcpf.rst", "ref-manual/legacy/functions/runduopf.rst", "ref-manual/legacy/functions/runopf.rst", "ref-manual/legacy/functions/runopf_w_res.rst", "ref-manual/legacy/functions/runpf.rst", "ref-manual/legacy/functions/runuopf.rst", "ref-manual/legacy/functions/save2psse.rst", "ref-manual/legacy/functions/savecase.rst", "ref-manual/legacy/functions/savechgtab.rst", "ref-manual/legacy/functions/scale_load.rst", "ref-manual/legacy/functions/set_reorder.rst", "ref-manual/legacy/functions/t_apply_changes.rst", "ref-manual/legacy/functions/t_auction_case.rst", "ref-manual/legacy/functions/t_auction_minopf.rst", "ref-manual/legacy/functions/t_auction_mips.rst", "ref-manual/legacy/functions/t_auction_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_case30_userfcns.rst", "ref-manual/legacy/functions/t_case9_dcline.rst", "ref-manual/legacy/functions/t_case9_opf.rst", "ref-manual/legacy/functions/t_case9_opfv2.rst", "ref-manual/legacy/functions/t_case9_pf.rst", "ref-manual/legacy/functions/t_case9_pfv2.rst", "ref-manual/legacy/functions/t_case9_save2psse.rst", "ref-manual/legacy/functions/t_case_ext.rst", "ref-manual/legacy/functions/t_case_int.rst", "ref-manual/legacy/functions/t_chgtab.rst", "ref-manual/legacy/functions/t_cpf.rst", "ref-manual/legacy/functions/t_cpf_cb1.rst", "ref-manual/legacy/functions/t_cpf_cb2.rst", "ref-manual/legacy/functions/t_dcline.rst", "ref-manual/legacy/functions/t_ext2int2ext.rst", "ref-manual/legacy/functions/t_feval_w_path.rst", "ref-manual/legacy/functions/t_get_losses.rst", "ref-manual/legacy/functions/t_hasPQcap.rst", "ref-manual/legacy/functions/t_hessian.rst", "ref-manual/legacy/functions/t_islands.rst", "ref-manual/legacy/functions/t_jacobian.rst", "ref-manual/legacy/functions/t_load2disp.rst", "ref-manual/legacy/functions/t_loadcase.rst", "ref-manual/legacy/functions/t_makeLODF.rst", "ref-manual/legacy/functions/t_makePTDF.rst", "ref-manual/legacy/functions/t_margcost.rst", "ref-manual/legacy/functions/t_miqps_matpower.rst", "ref-manual/legacy/functions/t_modcost.rst", "ref-manual/legacy/functions/t_mpoption.rst", "ref-manual/legacy/functions/t_mpoption_ov.rst", "ref-manual/legacy/functions/t_off2case.rst", "ref-manual/legacy/functions/t_opf_dc_bpmpd.rst", "ref-manual/legacy/functions/t_opf_dc_clp.rst", "ref-manual/legacy/functions/t_opf_dc_cplex.rst", "ref-manual/legacy/functions/t_opf_dc_default.rst", "ref-manual/legacy/functions/t_opf_dc_glpk.rst", "ref-manual/legacy/functions/t_opf_dc_gurobi.rst", "ref-manual/legacy/functions/t_opf_dc_ipopt.rst", "ref-manual/legacy/functions/t_opf_dc_mips.rst", "ref-manual/legacy/functions/t_opf_dc_mips_sc.rst", "ref-manual/legacy/functions/t_opf_dc_mosek.rst", "ref-manual/legacy/functions/t_opf_dc_osqp.rst", "ref-manual/legacy/functions/t_opf_dc_ot.rst", "ref-manual/legacy/functions/t_opf_default.rst", "ref-manual/legacy/functions/t_opf_fmincon.rst", "ref-manual/legacy/functions/t_opf_ipopt.rst", "ref-manual/legacy/functions/t_opf_knitro.rst", "ref-manual/legacy/functions/t_opf_minopf.rst", "ref-manual/legacy/functions/t_opf_mips.rst", "ref-manual/legacy/functions/t_opf_model.rst", "ref-manual/legacy/functions/t_opf_softlims.rst", "ref-manual/legacy/functions/t_opf_tspopf_pdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_scpdipm.rst", "ref-manual/legacy/functions/t_opf_tspopf_tralm.rst", "ref-manual/legacy/functions/t_opf_userfcns.rst", "ref-manual/legacy/functions/t_pf_ac.rst", "ref-manual/legacy/functions/t_pf_dc.rst", "ref-manual/legacy/functions/t_pf_radial.rst", "ref-manual/legacy/functions/t_printpf.rst", "ref-manual/legacy/functions/t_psse.rst", "ref-manual/legacy/functions/t_qps_matpower.rst", "ref-manual/legacy/functions/t_runmarket.rst", "ref-manual/legacy/functions/t_runopf_w_res.rst", "ref-manual/legacy/functions/t_scale_load.rst", "ref-manual/legacy/functions/t_total_load.rst", "ref-manual/legacy/functions/t_totcost.rst", "ref-manual/legacy/functions/t_vdep_load.rst", "ref-manual/legacy/functions/toggle_dcline.rst", "ref-manual/legacy/functions/toggle_iflims.rst", "ref-manual/legacy/functions/toggle_reserves.rst", "ref-manual/legacy/functions/toggle_softlims.rst", "ref-manual/legacy/functions/total_load.rst", "ref-manual/legacy/functions/totcost.rst", "ref-manual/legacy/functions/uopf.rst", "ref-manual/legacy/functions/update_mupq.rst", "ref-manual/legacy/functions/zgausspf.rst", "ref-manual/legacy/index.rst", "ref-manual/previous.rst", "ref-manual/tests/index.rst", "ref-manual/tests/mp_foo_table.rst", "ref-manual/tests/t_case3p_a.rst", "ref-manual/tests/t_case3p_b.rst", "ref-manual/tests/t_case3p_c.rst", "ref-manual/tests/t_case3p_d.rst", "ref-manual/tests/t_case3p_e.rst", "ref-manual/tests/t_case3p_f.rst", "ref-manual/tests/t_case3p_g.rst", "ref-manual/tests/t_case3p_h.rst", "ref-manual/tests/t_case9_gizmo.rst", "ref-manual/tests/t_dmc_element.rst", "ref-manual/tests/t_mp_data_model.rst", "ref-manual/tests/t_mp_dm_converter_mpc2.rst", "ref-manual/tests/t_mp_mapped_array.rst", "ref-manual/tests/t_mp_table.rst", "ref-manual/tests/t_mpxt_legacy_dcline.rst", "ref-manual/tests/t_mpxt_reserves.rst", "ref-manual/tests/t_nm_element.rst", "ref-manual/tests/t_node_test.rst", "ref-manual/tests/t_port_inj_current_acc.rst", "ref-manual/tests/t_port_inj_current_acp.rst", "ref-manual/tests/t_port_inj_power_acc.rst", "ref-manual/tests/t_port_inj_power_acp.rst", "ref-manual/tests/t_pretty_print.rst", "ref-manual/tests/t_run_mp.rst", "ref-manual/tests/t_run_mp_3p.rst", "ref-manual/tests/t_run_opf_default.rst", "ref-manual/tests/test_matpower.rst", "tech-notes.rst", "users-manual/index.rst"], "titles": ["<span class=\"section-number\">10. </span>Acknowledgments", "<span class=\"section-number\">3. </span>Architecture Overview", "<span class=\"section-number\">9. </span>Customizing <span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span>", "<span class=\"section-number\">5. </span>Data Model Object", "<span class=\"section-number\">6. </span>Data Model Converter Object", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Developer\u2019s Manual", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">8. </span>Mathematical Model Object", "<span class=\"section-number\">7. </span>Network Model Object", "<span class=\"section-number\">2. </span>Notation", "<span class=\"section-number\">11. </span>References", "<span class=\"section-number\">4. </span>Task Object", "How to Add an OPF Constraint", "How to Build the Documentation", "generate_autodoc_stubs", "generate_matpower_autodoc", "generate_source_symlinks", "How to Create a New Element Type", "How to Create an Extension", "A Test Gizmo Element Type", "How to Run a Three-Phase Power Flow", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Documentation", "have_feature_lu_vec", "have_feature_pardiso", "have_feature_pardiso_legacy", "have_feature_pardiso_object", "mips", "mips_example1", "mips_example2", "mipsver", "mplinsolve", "qps_mips", "t_mips", "t_mips_pardiso", "t_mplinsolve", "t_qps_mips", "test_mips", "MIPS User\u2019s Manual", "Reference", "addgen2mpc", "addstorage", "addwind", "apply_profile", "c118swf", "ex_case3a", "ex_case3b", "ex_contab", "ex_load_profile", "ex_storage", "ex_transmat", "ex_wind", "ex_wind_profile", "ex_wind_profile_d", "ex_wind_uc", "ex_xgd", "ex_xgd_ramp", "ex_xgd_res", "ex_xgd_uc", "filter_ramp_transitions", "getprofiles", "idx_profile", "loadgenericdata", "loadmd", "loadstoragedata", "loadxgendata", "md_init", "most", "most_ex1_ed", "most_ex2_dcopf", "most_ex3_dcopf_w_uc", "most_ex4_dcopf_ss", "most_ex5_mpopf", "most_ex6_uc", "most_ex7_suc", "most_summary", "mostver", "mpoption_info_most", "plot_gen", "plot_storage", "plot_uc", "plot_uc_data", "t_case30_most", "t_case3_most", "t_case_tlmp", "t_case_tlmp_storage", "t_most_30b_1_1_0", "t_most_30b_1_1_0_uc", "t_most_30b_1_1_17", "t_most_30b_3_1_0", "t_most_30b_3_1_17", "t_most_3b_1_1_0", "t_most_3b_1_1_2", "t_most_3b_3_1_0", "t_most_3b_3_1_2", "t_most_fixed_res", "t_most_mpopf", "t_most_sp", "t_most_spuc", "t_most_suc", "t_most_tlmp", "t_most_uc", "t_most_w_ds", "test_most", "uniformwindprofile", "MOST User\u2019s Manual", "Reference", "mp.set_manager", "mp.set_manager_opt_model", "mp.sm_lin_constraint", "mp.sm_nln_constraint", "mp.sm_nln_cost", "mp.sm_quad_constraint", "mp.sm_quad_cost", "mp.sm_variable", "mp_idx_manager", "opt_model", "artelys_knitro_options", "convert_constraint_multipliers", "convert_lin_constraint", "convert_lin_constraint_multipliers", "convert_quad_constraint", "cplex_options", "glpk_options", "gurobi_options", "gurobiver", "have_feature_bpmpd", "have_feature_catchme", "have_feature_clp", "have_feature_cplex", "have_feature_evalc", "have_feature_fmincon", "have_feature_fmincon_ipm", "have_feature_fsolve", "have_feature_glpk", "have_feature_gurobi", "have_feature_intlinprog", "have_feature_ipopt", "have_feature_ipopt_auxdata", "have_feature_isequaln", "have_feature_knitro", "have_feature_knitromatlab", "have_feature_ktrlink", "have_feature_linprog", "have_feature_linprog_ds", "have_feature_mosek", "have_feature_opti_clp", "have_feature_optim", "have_feature_optimoptions", "have_feature_osqp", "have_feature_quadprog", "have_feature_quadprog_ls", "have_feature_sdpt3", "have_feature_sedumi", "have_feature_yalmip", "ipopt_options", "knitrover", "miqps_cplex", "miqps_glpk", "miqps_gurobi", "miqps_master", "miqps_mosek", "miqps_ot", "mosek_options", "mosek_symbcon", "mpomver", "mpopt2nleqopt", "mpopt2nlpopt", "mpopt2pneopt", "mpopt2qcqpopt", "mpopt2qpopt", "nested_struct_copy", "nleqs_core", "nleqs_fd_newton", "nleqs_fsolve", "nleqs_gauss_seidel", "nleqs_master", "nleqs_master_ex1", "nleqs_master_ex2", "nleqs_newton", "nlp_consfcn", "nlp_costfcn", "nlp_hessfcn", "nlps_fmincon", "nlps_ipopt", "nlps_knitro", "nlps_master", "nlps_master_ex1", "nlps_master_ex2", "osqp_options", "osqpver", "pne_callback_default", "pne_callback_nose", "pne_callback_target_lam", "pne_detect_events", "pne_detected_event", "pne_event_nose", "pne_event_target_lam", "pne_ex1", "pne_pfcn_arc_len", "pne_pfcn_natural", "pne_pfcn_pseudo_arc_len", "pne_register_callbacks", "pne_register_events", "pnes_master", "qcqp_ex1", "qcqp_nlp_consfcn", "qcqp_nlp_costfcn", "qcqp_nlp_hessfcn", "qcqps_gurobi", "qcqps_knitro", "qcqps_master", "qp_ex1", "qps_bpmpd", "qps_clp", "qps_cplex", "qps_glpk", "qps_gurobi", "qps_ipopt", "qps_knitro", "qps_master", "qps_mosek", "qps_osqp", "qps_ot", "t_miqps_master", "t_nested_struct_copy", "t_nleqs_master", "t_nlps_master", "t_om_solve_leqs", "t_om_solve_miqps", "t_om_solve_nleqs", "t_om_solve_nlps", "t_om_solve_pne", "t_om_solve_qcqps", "t_om_solve_qps", "t_opt_model", "t_pnes_master", "t_qcqps_master", "t_qps_master", "test_mp_opt_model", "<span class=\"raw-html\">MP-Opt-Model</span> User\u2019s Manual", "Reference", "have_feature", "have_feature_matlab", "have_feature_octave", "mptestver", "t_begin", "t_end", "t_file_match", "t_have_feature", "t_is", "t_ok", "t_run_tests", "t_skip", "t_str_match", "t_test_fcns", "test_mptest", "MP-Test User\u2019s Manual", "Reference", "<span class=\"section-number\">3. </span>Classes", "mp.NODE_TYPE", "mp.cost_table", "mp.cost_table_utils", "mp.data_model", "mp.data_model_cpf", "mp.data_model_opf", "mp.dm_converter", "mp.dm_converter_mpc2", "mp.dm_converter_mpc2_legacy", "mp.dm_element", "mp.dmc_element", "mp.dmce_branch_mpc2", "mp.dmce_bus3p_mpc2", "mp.dmce_bus_mpc2", "mp.dmce_buslink_mpc2", "mp.dmce_gen3p_mpc2", "mp.dmce_gen_mpc2", "mp.dmce_legacy_dcline_mpc2", "mp.dmce_line3p_mpc2", "mp.dmce_load3p_mpc2", "mp.dmce_load_mpc2", "mp.dmce_reserve_gen_mpc2", "mp.dmce_reserve_zone_mpc2", "mp.dmce_shunt_mpc2", "mp.dmce_xfmr3p_mpc2", "mp.dme_branch", "mp.dme_branch_opf", "mp.dme_bus", "mp.dme_bus3p", "mp.dme_bus3p_opf", "mp.dme_bus_opf", "mp.dme_buslink", "mp.dme_buslink_opf", "mp.dme_gen", "mp.dme_gen3p", "mp.dme_gen3p_opf", "mp.dme_gen_opf", "mp.dme_legacy_dcline", "mp.dme_legacy_dcline_opf", "mp.dme_line3p", "mp.dme_line3p_opf", "mp.dme_load", "mp.dme_load3p", "mp.dme_load3p_opf", "mp.dme_load_cpf", "mp.dme_load_opf", "mp.dme_reserve_gen", "mp.dme_reserve_zone", "mp.dme_shared_opf", "mp.dme_shunt", "mp.dme_shunt_cpf", "mp.dme_shunt_opf", "mp.dme_xfmr3p", "mp.dme_xfmr3p_opf", "mp.element_container", "mp.extension", "mp.form", "mp.form_ac", "mp.form_acc", "mp.form_acp", "mp.form_dc", "mp.mapped_array", "mp.math_model", "mp.math_model_cpf_acc", "mp.math_model_cpf_acci", "mp.math_model_cpf_accs", "mp.math_model_cpf_acp", "mp.math_model_cpf_acpi", "mp.math_model_cpf_acps", "mp.math_model_opf", "mp.math_model_opf_ac", "mp.math_model_opf_acc", "mp.math_model_opf_acci", "mp.math_model_opf_acci_legacy", "mp.math_model_opf_accs", "mp.math_model_opf_accs_legacy", "mp.math_model_opf_acp", "mp.math_model_opf_acpi", "mp.math_model_opf_acpi_legacy", "mp.math_model_opf_acps", "mp.math_model_opf_acps_legacy", "mp.math_model_opf_dc", "mp.math_model_opf_dc_legacy", "mp.math_model_pf", "mp.math_model_pf_ac", "mp.math_model_pf_acci", "mp.math_model_pf_accs", "mp.math_model_pf_acpi", "mp.math_model_pf_acps", "mp.math_model_pf_dc", "mp.mm_element", "mp.mm_shared_opf_legacy", "mp.mm_shared_pfcpf", "mp.mm_shared_pfcpf_ac", "mp.mm_shared_pfcpf_ac_i", "mp.mm_shared_pfcpf_acc", "mp.mm_shared_pfcpf_acci", "mp.mm_shared_pfcpf_accs", "mp.mm_shared_pfcpf_acp", "mp.mm_shared_pfcpf_acpi", "mp.mm_shared_pfcpf_acps", "mp.mm_shared_pfcpf_dc", "mp.mme_branch", "mp.mme_branch_opf", "mp.mme_branch_opf_ac", "mp.mme_branch_opf_acc", "mp.mme_branch_opf_acp", "mp.mme_branch_opf_dc", "mp.mme_branch_pf_ac", "mp.mme_branch_pf_dc", "mp.mme_bus", "mp.mme_bus3p", "mp.mme_bus3p_opf_acc", "mp.mme_bus3p_opf_acp", "mp.mme_bus_opf_ac", "mp.mme_bus_opf_acc", "mp.mme_bus_opf_acp", "mp.mme_bus_opf_dc", "mp.mme_bus_pf_ac", "mp.mme_bus_pf_dc", "mp.mme_buslink", "mp.mme_buslink_opf", "mp.mme_buslink_opf_acc", "mp.mme_buslink_opf_acp", "mp.mme_buslink_pf_ac", "mp.mme_buslink_pf_acc", "mp.mme_buslink_pf_acp", "mp.mme_gen", "mp.mme_gen3p", "mp.mme_gen3p_opf", "mp.mme_gen_opf", "mp.mme_gen_opf_ac", "mp.mme_gen_opf_ac_oval", "mp.mme_gen_opf_dc", "mp.mme_gen_pf_ac", "mp.mme_gen_pf_dc", "mp.mme_legacy_dcline", "mp.mme_legacy_dcline_opf", "mp.mme_legacy_dcline_opf_ac", "mp.mme_legacy_dcline_opf_dc", "mp.mme_legacy_dcline_pf_ac", "mp.mme_legacy_dcline_pf_dc", "mp.mme_line3p", "mp.mme_line3p_opf", "mp.mme_load", "mp.mme_load_cpf", "mp.mme_load_pf_ac", "mp.mme_load_pf_dc", "mp.mme_reserve_gen", "mp.mme_reserve_zone", "mp.mme_shunt", "mp.mme_shunt_cpf", "mp.mme_shunt_pf_ac", "mp.mme_shunt_pf_dc", "mp.mme_xfmr3p", "mp.mme_xfmr3p_opf", "mp.net_model", "mp.net_model_ac", "mp.net_model_acc", "mp.net_model_acp", "mp.net_model_dc", "mp.nm_element", "mp.nme_branch", "mp.nme_branch_ac", "mp.nme_branch_acc", "mp.nme_branch_acp", "mp.nme_branch_dc", "mp.nme_bus", "mp.nme_bus3p", "mp.nme_bus3p_acc", "mp.nme_bus3p_acp", "mp.nme_bus_acc", "mp.nme_bus_acp", "mp.nme_bus_dc", "mp.nme_buslink", "mp.nme_buslink_acc", "mp.nme_buslink_acp", "mp.nme_gen", "mp.nme_gen3p", "mp.nme_gen3p_acc", "mp.nme_gen3p_acp", "mp.nme_gen_ac", "mp.nme_gen_acc", "mp.nme_gen_acp", "mp.nme_gen_dc", "mp.nme_legacy_dcline", "mp.nme_legacy_dcline_ac", "mp.nme_legacy_dcline_acc", "mp.nme_legacy_dcline_acp", "mp.nme_legacy_dcline_dc", "mp.nme_line3p", "mp.nme_load", "mp.nme_load3p", "mp.nme_load_ac", "mp.nme_load_acc", "mp.nme_load_acp", "mp.nme_load_dc", "mp.nme_shunt", "mp.nme_shunt_ac", "mp.nme_shunt_acc", "mp.nme_shunt_acp", "mp.nme_shunt_dc", "mp.nme_xfmr3p", "mp.sm_legacy_cost", "mp.task", "mp.task_cpf", "mp.task_cpf_legacy", "mp.task_opf", "mp.task_opf_legacy", "mp.task_pf", "mp.task_pf_legacy", "mp.task_shared_legacy", "mp.xt_3p", "mp.xt_legacy_dcline", "mp.xt_oval_cap_curve", "mp.xt_reserves", "mp_table", "mp_table_subclass", "<span class=\"section-number\">2. </span>Functions", "install_matpower", "mp.load_dm", "mp_table_class", "run_cpf", "run_mp", "run_opf", "run_pf", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Reference Manual", "<span class=\"section-number\">1. </span>Introduction", "opf_model", "add_userfcn", "apply_changes", "bustypes", "calc_branch_angle", "calc_v_i_sum", "calc_v_pq_sum", "calc_v_y_sum", "case_info", "caseformat", "cdf2mpc", "compare_case", "connected_components", "cpf_corrector", "cpf_current_mpc", "cpf_default_callback", "cpf_detect_events", "cpf_flim_event", "cpf_flim_event_cb", "cpf_nose_event", "cpf_nose_event_cb", "cpf_p", "cpf_p_jac", "cpf_plim_event", "cpf_plim_event_cb", "cpf_predictor", "cpf_qlim_event", "cpf_qlim_event_cb", "cpf_register_callback", "cpf_register_event", "cpf_tangent", "cpf_target_lam_event", "cpf_target_lam_event_cb", "cpf_vlim_event", "cpf_vlim_event_cb", "d2Abr_dV2", "d2Ibr_dV2", "d2Imis_dV2", "d2Imis_dVdSg", "d2Sbr_dV2", "d2Sbus_dV2", "dAbr_dV", "dIbr_dV", "dImis_dV", "dSbr_dV", "dSbus_dV", "dcopf", "dcopf_solver", "dcpf", "define_constants", "e2i_data", "e2i_field", "ext2int", "extract_islands", "fdpf", "feval_w_path", "find_bridges", "find_islands", "fmincopf", "gausspf", "genfuels", "gentypes", "get_losses", "get_reorder", "hasPQcap", "have_feature_e4st", "have_feature_minopf", "have_feature_most", "have_feature_mp_core", "have_feature_pdipmopf", "have_feature_regexp_split", "have_feature_scpdipmopf", "have_feature_sdp_pf", "have_feature_smartmarket", "have_feature_syngrid", "have_feature_table", "have_feature_tralmopf", "i2e_data", "i2e_field", "idx_brch", "idx_bus", "idx_cost", "idx_ct", "idx_dcline", "idx_gen", "int2ext", "isload", "load2disp", "loadcase", "loadshed", "makeAang", "makeApq", "makeAvl", "makeAy", "makeB", "makeBdc", "makeJac", "makeLODF", "makePTDF", "makeSbus", "makeSdzip", "makeYbus", "make_vcorr", "make_zpv", "margcost", "miqps_matpower", "modcost", "mpoption", "mpoption_info_clp", "mpoption_info_cplex", "mpoption_info_fmincon", "mpoption_info_glpk", "mpoption_info_gurobi", "mpoption_info_intlinprog", "mpoption_info_ipopt", "mpoption_info_knitro", "mpoption_info_linprog", "mpoption_info_mips", "mpoption_info_mosek", "mpoption_info_osqp", "mpoption_info_quadprog", "mpoption_old", "mpver", "newtonpf", "newtonpf_I_cart", "newtonpf_I_hybrid", "newtonpf_I_polar", "newtonpf_S_cart", "newtonpf_S_hybrid", "nlpopf_solver", "opf", "opf_args", "opf_branch_ang_fcn", "opf_branch_ang_hess", "opf_branch_flow_fcn", "opf_branch_flow_hess", "opf_current_balance_fcn", "opf_current_balance_hess", "opf_execute", "opf_gen_cost_fcn", "opf_legacy_user_cost_fcn", "opf_nle_fcn1", "opf_nle_hess1", "opf_power_balance_fcn", "opf_power_balance_hess", "opf_setup", "opf_veq_fcn", "opf_veq_hess", "opf_vlim_fcn", "opf_vlim_hess", "opf_vref_fcn", "opf_vref_hess", "order_radial", "pfsoln", "poly2pwl", "polycost", "pqcost", "printpf", "psse2mpc", "psse_convert", "psse_convert_hvdc", "psse_convert_xfmr", "psse_parse", "psse_parse_line", "psse_parse_section", "psse_read", "qps_matpower", "radial_pf", "remove_userfcn", "run_userfcn", "runcpf", "rundcopf", "rundcpf", "runduopf", "runopf", "runopf_w_res", "runpf", "runuopf", "save2psse", "savecase", "savechgtab", "scale_load", "set_reorder", "t_apply_changes", "t_auction_case", "t_auction_minopf", "t_auction_mips", "t_auction_tspopf_pdipm", "t_case30_userfcns", "t_case9_dcline", "t_case9_opf", "t_case9_opfv2", "t_case9_pf", "t_case9_pfv2", "t_case9_save2psse", "t_case_ext", "t_case_int", "t_chgtab", "t_cpf", "t_cpf_cb1", "t_cpf_cb2", "t_dcline", "t_ext2int2ext", "t_feval_w_path", "t_get_losses", "t_hasPQcap", "t_hessian", "t_islands", "t_jacobian", "t_load2disp", "t_loadcase", "t_makeLODF", "t_makePTDF", "t_margcost", "t_miqps_matpower", "t_modcost", "t_mpoption", "t_mpoption_ov", "t_off2case", "t_opf_dc_bpmpd", "t_opf_dc_clp", "t_opf_dc_cplex", "t_opf_dc_default", "t_opf_dc_glpk", "t_opf_dc_gurobi", "t_opf_dc_ipopt", "t_opf_dc_mips", "t_opf_dc_mips_sc", "t_opf_dc_mosek", "t_opf_dc_osqp", "t_opf_dc_ot", "t_opf_default", "t_opf_fmincon", "t_opf_ipopt", "t_opf_knitro", "t_opf_minopf", "t_opf_mips", "t_opf_model", "t_opf_softlims", "t_opf_tspopf_pdipm", "t_opf_tspopf_scpdipm", "t_opf_tspopf_tralm", "t_opf_userfcns", "t_pf_ac", "t_pf_dc", "t_pf_radial", "t_printpf", "t_psse", "t_qps_matpower", "t_runmarket", "t_runopf_w_res", "t_scale_load", "t_total_load", "t_totcost", "t_vdep_load", "toggle_dcline", "toggle_iflims", "toggle_reserves", "toggle_softlims", "total_load", "totcost", "uopf", "update_mupq", "zgausspf", "<span class=\"section-number\">5. </span>Legacy", "<span class=\"section-number\">6. </span>Previous Versions", "<span class=\"section-number\">4. </span>Tests", "mp_foo_table", "t_case3p_a", "t_case3p_b", "t_case3p_c", "t_case3p_d", "t_case3p_e", "t_case3p_f", "t_case3p_g", "t_case3p_h", "t_case9_gizmo", "t_dmc_element", "t_mp_data_model", "t_mp_dm_converter_mpc2", "t_mp_mapped_array", "t_mp_table", "t_mpxt_legacy_dcline", "t_mpxt_reserves", "t_nm_element", "t_node_test", "t_port_inj_current_acc", "t_port_inj_current_acp", "t_port_inj_power_acc", "t_port_inj_power_acp", "t_pretty_print", "t_run_mp", "t_run_mp_3p", "t_run_opf_default", "test_matpower", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> Technical Notes", "<span class=\"raw-html\">M<span style=\"font-size:smaller\">ATPOWER</span></span> User\u2019s Manual"], "terms": {"matpow": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "github": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "user": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "manual": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "extra": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "matlab": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "reg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "gnu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "octav": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "pserc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "power": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "system": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "engin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "research": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "center": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "cert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "consortium": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "electr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "reliabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "technologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "solut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "mip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "interior": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "solver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "mp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783], "test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "readm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "opt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "model": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "most": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "schedul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "tool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "technic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783], "note": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "develop": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "The": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 17, 18, 19, 20, 21, 26, 30, 31, 37, 38, 42, 43, 60, 61, 62, 66, 77, 78, 79, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 190, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 241, 247, 249, 253, 256, 257, 262, 263, 264, 269, 295, 298, 314, 315, 316, 319, 320, 321, 415, 420, 463, 471, 472, 474, 476, 477, 479, 486, 487, 488, 492, 493, 494, 496, 497, 499, 502, 511, 514, 515, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 537, 538, 539, 541, 543, 544, 546, 551, 564, 565, 566, 567, 568, 570, 571, 573, 577, 580, 582, 583, 584, 585, 587, 589, 590, 591, 594, 608, 610, 611, 612, 613, 614, 615, 617, 618, 619, 639, 644, 645, 663, 665, 666, 675, 742, 743, 744, 745, 747, 750, 783], "team": 0, "would": [0, 2, 3, 4, 6, 7, 8, 12, 17, 19, 64, 114, 163, 170, 190, 261, 268, 420, 502, 745], "like": [0, 4, 6, 8, 12, 17, 42, 114, 115, 116, 121, 122, 123, 154, 162, 188, 190, 193, 247, 256, 268, 320, 420, 476, 502, 503], "support": [0, 6, 22, 24, 25, 121, 126, 129, 137, 138, 143, 147, 150, 256, 467, 480, 557], "numer": [0, 4, 6, 12, 17, 19, 20, 26, 31, 42, 60, 64, 115, 159, 170, 196, 203, 219, 241, 249, 320, 467, 502, 515, 516, 538, 565, 594, 649, 651, 669, 693, 695], "grant": [0, 256], "contract": [0, 77], "have": [0, 2, 3, 4, 6, 8, 13, 17, 19, 43, 60, 62, 81, 106, 111, 114, 115, 117, 119, 193, 204, 256, 260, 391, 420, 478, 487, 490, 491, 499, 502, 540, 544, 551, 569, 617, 650, 651, 657, 668, 746, 750], "contribut": [0, 6, 17, 21], "directli": [0, 2, 3, 4, 7, 12, 17, 38, 115, 170, 173, 182, 184, 197, 204, 211, 240, 247, 253, 256, 257, 269, 476, 479, 496, 536, 617, 618, 645, 650, 652], "indirectli": [0, 315, 316, 317, 318, 319, 463], "over": [0, 43, 66, 106, 463], "year": 0, "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 26, 30, 37, 38, 40, 41, 43, 59, 60, 62, 63, 64, 74, 76, 81, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 154, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 191, 192, 195, 196, 198, 199, 200, 203, 204, 213, 239, 241, 247, 249, 250, 252, 253, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 284, 313, 314, 315, 316, 319, 320, 321, 349, 353, 415, 417, 418, 419, 420, 463, 464, 465, 467, 468, 469, 473, 474, 475, 476, 478, 481, 482, 483, 484, 486, 487, 488, 496, 497, 502, 505, 507, 511, 514, 515, 519, 521, 533, 534, 536, 537, 538, 539, 540, 541, 546, 547, 548, 551, 562, 564, 565, 568, 569, 572, 573, 581, 583, 585, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 616, 617, 642, 645, 649, 655, 657, 663, 668, 742, 746, 750, 751, 755, 783], "includ": [0, 1, 3, 4, 6, 8, 12, 13, 15, 17, 18, 19, 20, 21, 30, 45, 58, 63, 64, 66, 74, 77, 78, 79, 81, 109, 115, 154, 190, 203, 208, 209, 210, 241, 256, 262, 263, 264, 267, 268, 284, 306, 313, 317, 321, 347, 361, 362, 363, 364, 365, 366, 367, 368, 389, 391, 396, 416, 417, 418, 420, 421, 463, 464, 468, 479, 481, 482, 483, 484, 486, 487, 495, 496, 497, 536, 539, 540, 541, 546, 548, 551, 556, 558, 562, 563, 566, 567, 570, 571, 572, 594, 608, 610, 611, 612, 613, 614, 615, 617, 618, 641, 645, 651, 652, 665, 667, 668, 689, 725, 729, 745, 746, 750], "fund": [0, 256], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 37, 40, 41, 43, 58, 59, 61, 62, 63, 64, 66, 83, 84, 95, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 135, 136, 142, 143, 149, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 190, 193, 198, 200, 203, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 250, 256, 260, 261, 262, 265, 266, 268, 269, 284, 285, 296, 297, 298, 311, 313, 315, 316, 317, 318, 319, 320, 321, 330, 335, 340, 342, 344, 345, 346, 347, 349, 362, 363, 364, 366, 367, 368, 370, 374, 375, 376, 377, 378, 387, 390, 392, 393, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435, 438, 439, 441, 442, 443, 446, 447, 449, 451, 453, 454, 455, 458, 459, 460, 461, 463, 464, 466, 467, 468, 470, 471, 472, 476, 478, 480, 482, 486, 487, 488, 491, 492, 493, 494, 496, 502, 503, 508, 509, 511, 512, 514, 517, 528, 529, 531, 537, 538, 539, 540, 548, 549, 564, 565, 566, 570, 572, 575, 580, 582, 583, 585, 588, 590, 594, 608, 617, 621, 622, 632, 639, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 657, 658, 659, 660, 661, 663, 664, 704, 751, 755], "u": [0, 3, 7, 13, 17, 18, 20, 26, 30, 31, 74, 106, 108, 111, 114, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 256, 262, 267, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 300, 301, 305, 306, 308, 311, 487, 496, 497, 500, 502, 517, 534, 551, 566, 567, 568, 570, 571, 581, 582, 586, 587, 588, 594, 608, 616, 617, 618, 642, 662, 743, 744, 748], "depart": [0, 256], "energi": [0, 77, 78, 256, 547, 548, 560], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 26, 30, 31, 36, 42, 43, 60, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91, 96, 97, 98, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 143, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 188, 190, 193, 194, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 238, 241, 247, 251, 253, 255, 256, 259, 260, 262, 268, 269, 273, 284, 285, 286, 287, 289, 290, 291, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 313, 316, 317, 319, 320, 379, 380, 381, 382, 383, 384, 385, 388, 391, 415, 416, 420, 426, 433, 434, 435, 436, 450, 456, 463, 465, 467, 469, 475, 478, 487, 488, 489, 491, 496, 497, 499, 500, 502, 503, 517, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 534, 537, 539, 540, 542, 548, 549, 551, 564, 566, 567, 568, 570, 571, 572, 573, 575, 576, 581, 582, 583, 584, 585, 586, 587, 588, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 616, 617, 618, 641, 642, 643, 644, 645, 646, 648, 649, 651, 652, 654, 657, 658, 659, 660, 661, 662, 663, 664, 666, 668, 686, 743, 744, 745, 746, 748, 752, 755, 759, 781, 782, 783], "nation": [0, 256], "scienc": [0, 256], "foundat": [0, 256], "2": [0, 1, 2, 3, 4, 7, 8, 9, 12, 13, 17, 18, 19, 20, 26, 28, 30, 31, 62, 64, 76, 79, 80, 83, 91, 93, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 188, 190, 197, 198, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 245, 246, 249, 250, 252, 256, 259, 260, 262, 265, 266, 268, 269, 284, 286, 287, 290, 293, 296, 298, 300, 301, 311, 313, 316, 317, 319, 320, 391, 415, 421, 444, 463, 475, 487, 488, 489, 492, 493, 494, 496, 498, 502, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 537, 538, 539, 540, 542, 545, 548, 549, 551, 564, 565, 566, 567, 568, 570, 571, 572, 575, 581, 589, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 616, 617, 618, 621, 639, 642, 643, 668, 687, 743, 745, 756, 757, 758, 782], "arpa": 0, "e": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 17, 18, 19, 26, 29, 30, 42, 60, 62, 66, 75, 76, 96, 97, 98, 100, 106, 109, 114, 115, 124, 155, 159, 164, 170, 171, 182, 183, 184, 185, 189, 190, 193, 201, 202, 203, 219, 241, 244, 259, 262, 265, 268, 269, 285, 289, 295, 297, 305, 306, 313, 314, 315, 316, 317, 318, 319, 321, 349, 415, 420, 463, 464, 470, 476, 482, 487, 488, 496, 502, 503, 504, 510, 513, 516, 520, 528, 539, 548, 581, 582, 583, 585, 588, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 645, 646, 647, 648, 649, 650, 651, 652, 657, 658, 659, 660, 661, 663, 664, 665, 668, 745, 746], "3": [0, 1, 2, 3, 7, 8, 9, 11, 12, 17, 18, 20, 26, 30, 31, 42, 43, 60, 62, 76, 79, 80, 88, 89, 90, 91, 92, 93, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 121, 122, 123, 137, 147, 154, 156, 157, 158, 159, 160, 161, 162, 172, 174, 177, 178, 182, 183, 184, 185, 188, 190, 193, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 245, 246, 249, 250, 252, 256, 259, 260, 262, 271, 273, 274, 277, 278, 283, 286, 287, 288, 290, 291, 293, 294, 298, 299, 301, 302, 311, 312, 313, 316, 317, 319, 320, 370, 371, 372, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 401, 402, 413, 414, 415, 416, 427, 428, 429, 433, 434, 435, 437, 438, 439, 449, 451, 461, 463, 471, 478, 487, 488, 489, 492, 496, 502, 503, 522, 524, 525, 530, 537, 538, 540, 548, 564, 565, 566, 567, 568, 570, 571, 581, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617, 618, 677, 678, 679, 680, 743, 755, 756, 757, 758, 759, 760, 761, 762, 763, 779, 782], "other": [0, 1, 2, 3, 5, 6, 7, 8, 17, 19, 37, 42, 60, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 175, 182, 184, 185, 190, 203, 208, 209, 210, 215, 219, 249, 256, 258, 262, 268, 321, 467, 475, 478, 485, 486, 488, 496, 502, 537, 538, 547, 548, 551, 564, 565, 594, 617, 621, 622, 645, 650, 651, 657, 742, 761, 762], "part": [0, 9, 17, 19, 20, 106, 107, 108, 109, 111, 113, 114, 256, 316, 317, 416, 417, 420, 496, 523, 524, 525, 526, 527, 529, 530, 531, 532, 543, 548, 590, 594, 633, 635, 637], "offic": [0, 256], "deliveri": [0, 256, 493, 548, 589, 639], "transmiss": [0, 1, 3, 8, 10, 19, 256, 284, 361, 362, 363, 364, 365, 366, 367, 368, 421, 492, 496], "program": [0, 6, 7, 21, 26, 31, 38, 115, 122, 127, 133, 136, 139, 145, 156, 157, 158, 159, 160, 161, 166, 168, 169, 182, 183, 184, 185, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 256, 559, 748], "under": [0, 3, 6, 30, 43, 241, 242, 243, 256, 476, 560], "laboratori": [0, 256], "cooper": [0, 256], "agreement": [0, 256], "No": [0, 26, 256, 471, 472, 657], "de": [0, 120, 205, 256], "fc26": [0, 256], "09nt43321": [0, 256], "materi": [0, 256], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 17, 19, 20, 21, 26, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 58, 59, 60, 61, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 81, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 182, 183, 184, 185, 188, 190, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 286, 287, 289, 298, 300, 313, 315, 316, 317, 318, 319, 320, 321, 349, 389, 396, 415, 416, 420, 463, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 504, 505, 510, 511, 513, 514, 515, 516, 519, 520, 521, 522, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 632, 639, 641, 642, 643, 644, 645, 649, 650, 651, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 675, 742, 743, 744, 745, 746, 747, 748, 750, 756, 757, 758, 759, 781, 783], "base": [0, 1, 3, 7, 9, 11, 14, 16, 17, 19, 20, 26, 31, 37, 43, 64, 79, 80, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 160, 161, 172, 173, 174, 178, 182, 183, 184, 193, 195, 203, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 239, 256, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 480, 481, 485, 487, 492, 496, 500, 501, 502, 505, 506, 517, 521, 522, 528, 553, 563, 567, 571, 586, 594, 608, 617, 626, 648, 657, 719, 720, 721, 722, 723, 726, 727, 728, 743, 749, 754, 783], "upon": [0, 3, 203, 256, 262, 594], "work": [0, 10, 17, 154, 163, 256, 261, 416, 419, 476, 477, 478, 480, 542, 594, 642, 697, 742], "Nos": [0, 256], "0532744": [0, 256], "1642341": [0, 256], "1931421": [0, 256], "ani": [0, 1, 2, 6, 7, 8, 11, 17, 19, 59, 63, 74, 106, 114, 115, 154, 165, 166, 167, 168, 169, 170, 190, 193, 247, 256, 260, 261, 262, 268, 313, 314, 320, 349, 416, 463, 475, 478, 482, 488, 498, 502, 503, 505, 515, 521, 537, 539, 542, 551, 564, 569, 580, 586, 594, 609, 617, 652, 657, 663, 668, 669, 745, 749], "opinion": [0, 256], "find": [0, 1, 4, 9, 13, 17, 111, 256, 467, 543, 544, 617, 742, 743, 744, 745], "conclus": [0, 256], "recommend": [0, 13, 163, 256], "express": [0, 8, 111, 250, 256, 528, 529, 530, 531, 532, 580, 586, 621], "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 37, 38, 42, 43, 59, 60, 61, 62, 63, 64, 66, 78, 79, 80, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 190, 193, 194, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 247, 249, 251, 253, 256, 257, 259, 260, 262, 263, 265, 268, 269, 284, 286, 287, 290, 292, 293, 295, 298, 300, 301, 305, 308, 311, 314, 315, 316, 319, 320, 321, 349, 391, 415, 417, 418, 419, 420, 463, 465, 467, 469, 471, 472, 475, 476, 477, 478, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 502, 505, 515, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 534, 536, 537, 538, 539, 540, 543, 548, 551, 564, 565, 566, 567, 568, 570, 571, 574, 577, 578, 580, 582, 583, 584, 585, 586, 589, 590, 594, 608, 616, 617, 618, 619, 621, 622, 625, 639, 643, 645, 649, 650, 651, 657, 658, 659, 660, 661, 662, 663, 664, 666, 668, 669, 745, 746, 748, 760, 761, 762], "those": [0, 1, 2, 3, 6, 7, 13, 17, 43, 109, 110, 115, 163, 256, 263, 268, 476, 496, 537, 548, 551, 564, 584, 650, 651, 662, 667, 745], "author": [0, 256], "do": [0, 1, 12, 17, 66, 77, 78, 79, 80, 170, 171, 203, 256, 259, 261, 314, 416, 419, 463, 467, 478, 540, 594, 608, 668, 669, 745], "necessarili": [0, 42, 163, 256], "reflect": [0, 256], "view": [0, 256], "synthet": [0, 561], "data": [0, 1, 5, 8, 11, 12, 18, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 74, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 190, 240, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 327, 349, 362, 363, 366, 367, 368, 370, 374, 375, 376, 377, 378, 387, 390, 392, 393, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 419, 420, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 479, 481, 482, 483, 484, 485, 487, 488, 492, 493, 494, 496, 497, 502, 504, 506, 510, 513, 518, 520, 536, 537, 538, 539, 540, 564, 565, 568, 569, 575, 578, 617, 618, 640, 644, 645, 646, 647, 648, 649, 650, 651, 652, 657, 658, 659, 660, 661, 663, 664, 666, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 748, 749, 755, 763], "grid": [0, 561], "r": [0, 9, 10, 20, 26, 30, 64, 106, 108, 111, 113, 114, 115, 160, 171, 173, 175, 178, 203, 220, 269, 284, 298, 305, 311, 316, 416, 487, 493, 496, 500, 502, 509, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 549, 551, 566, 583, 589, 617, 618, 639, 662, 668, 744, 782], "d": [0, 4, 8, 10, 17, 19, 26, 76, 106, 120, 170, 203, 249, 262, 265, 266, 269, 272, 320, 420, 463, 464, 465, 466, 467, 468, 469, 470, 479, 481, 482, 483, 484, 492, 493, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 589, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 639, 650, 651, 782], "project": [0, 6, 10, 21, 23, 208, 209, 210, 256, 608], "A": [1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 20, 21, 26, 30, 31, 60, 61, 106, 108, 111, 114, 115, 118, 119, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 204, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 262, 265, 267, 268, 269, 313, 321, 349, 381, 384, 389, 396, 415, 420, 487, 488, 492, 496, 537, 539, 540, 543, 550, 564, 566, 569, 580, 590, 594, 617, 618, 655, 669, 748, 782], "new": [1, 2, 3, 8, 11, 13, 18, 19, 21, 37, 39, 40, 41, 60, 66, 104, 107, 108, 109, 110, 111, 112, 113, 115, 159, 190, 219, 239, 258, 265, 415, 463, 471, 472, 486, 489, 511, 514, 539, 572, 594, 608, 652, 657, 662], "orient": [1, 2, 6, 25, 260, 475, 476, 492, 493, 494, 639, 743], "core": [1, 2, 20, 171, 175, 485, 486, 555, 594, 783], "design": [1, 6, 8, 496, 548], "around": [1, 2, 43, 476, 481, 483, 484, 533], "concept": 1, "gener": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 42, 43, 45, 59, 63, 64, 66, 74, 77, 79, 80, 81, 96, 97, 98, 100, 103, 106, 107, 109, 110, 114, 115, 116, 121, 123, 154, 162, 193, 256, 262, 268, 274, 275, 280, 292, 293, 294, 295, 305, 306, 386, 387, 388, 389, 390, 391, 392, 393, 394, 407, 416, 436, 437, 438, 439, 440, 441, 442, 443, 466, 468, 471, 473, 474, 476, 477, 478, 481, 482, 483, 484, 486, 487, 489, 490, 492, 493, 494, 496, 502, 503, 510, 511, 513, 514, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 537, 538, 539, 540, 541, 546, 547, 548, 551, 564, 565, 568, 569, 571, 572, 576, 578, 579, 580, 586, 589, 591, 593, 594, 608, 610, 611, 612, 613, 614, 615, 617, 618, 626, 627, 642, 643, 645, 654, 657, 660, 662, 663, 664, 677, 678, 679, 680, 742, 744, 745, 747, 748, 749, 750, 763, 782], "element": [1, 5, 9, 10, 11, 12, 18, 20, 21, 26, 42, 60, 62, 77, 78, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 193, 198, 199, 200, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 249, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 330, 335, 340, 343, 348, 349, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 471, 472, 473, 474, 481, 482, 483, 484, 485, 503, 537, 540, 549, 564, 593, 594, 617, 618, 626, 650, 657, 668, 669, 745, 746, 772], "wa": [1, 9, 43, 108, 109, 110, 114, 115, 190, 203, 249, 250, 252, 256, 487, 502, 565, 617, 657], "introduc": [1, 2, 9, 19], "8": [1, 7, 8, 12, 17, 18, 19, 20, 26, 31, 78, 106, 156, 157, 158, 160, 161, 171, 172, 174, 178, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 476, 496, 566, 567, 570, 571, 594, 608], "0": [1, 3, 7, 12, 13, 14, 16, 17, 18, 19, 20, 26, 28, 30, 31, 43, 60, 62, 64, 66, 74, 78, 80, 96, 97, 98, 100, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 123, 135, 140, 141, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 190, 193, 194, 196, 197, 201, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 245, 246, 247, 249, 250, 251, 252, 253, 256, 262, 268, 308, 316, 319, 415, 416, 420, 463, 465, 467, 469, 476, 478, 487, 489, 491, 496, 497, 502, 503, 515, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 534, 551, 566, 567, 568, 569, 570, 571, 573, 594, 608, 616, 617, 641, 644, 645, 646, 648, 649, 651, 652, 654, 657, 658, 659, 660, 661, 662, 663, 664, 668, 744, 745, 746, 748, 752, 783], "along": [1, 6, 17, 37, 104, 108, 112, 113, 193, 205, 239, 316, 415, 487, 534, 538, 539, 565, 616, 617], "emploi": 1, "chapter": [1, 26], "give": [1, 114, 115], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 17, 19, 20, 21, 29, 40, 41, 59, 60, 61, 62, 63, 64, 65, 75, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 124, 154, 155, 164, 165, 166, 167, 168, 169, 170, 171, 184, 189, 190, 193, 194, 198, 203, 208, 209, 210, 241, 244, 258, 259, 260, 262, 263, 264, 265, 268, 269, 313, 315, 316, 317, 318, 320, 321, 328, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 371, 372, 373, 374, 375, 376, 380, 388, 389, 391, 396, 402, 414, 415, 420, 463, 475, 476, 483, 487, 488, 489, 495, 496, 497, 502, 511, 514, 521, 534, 537, 539, 540, 541, 545, 546, 547, 548, 560, 564, 568, 569, 572, 575, 585, 587, 593, 594, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 625, 632, 644, 648, 657, 661, 662, 664, 666, 667, 668, 742, 743, 745, 748, 750, 783], "primari": [1, 4, 37, 104, 239, 256], "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 37, 40, 41, 43, 61, 64, 66, 74, 76, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 241, 242, 243, 245, 246, 248, 254, 256, 259, 260, 262, 268, 269, 285, 289, 295, 296, 297, 305, 306, 307, 313, 314, 316, 317, 319, 321, 325, 329, 391, 415, 416, 423, 452, 463, 465, 466, 467, 469, 470, 475, 476, 478, 479, 481, 482, 483, 484, 485, 486, 488, 496, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 533, 534, 536, 537, 538, 539, 542, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 576, 583, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 624, 628, 631, 634, 636, 638, 642, 644, 655, 657, 667, 668, 686, 687, 689, 734, 748, 752, 783], "solv": [1, 6, 11, 17, 18, 20, 21, 24, 26, 28, 30, 31, 38, 43, 66, 105, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 197, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 240, 321, 349, 416, 419, 420, 463, 464, 479, 481, 482, 483, 484, 492, 493, 494, 497, 500, 533, 534, 535, 541, 545, 546, 594, 610, 611, 612, 613, 614, 615, 616, 617, 654, 657, 658, 659, 660, 661, 663, 664, 748, 750, 778], "steadi": [1, 6, 21, 657], "state": [1, 3, 6, 7, 8, 9, 17, 19, 21, 58, 106, 190, 203, 241, 262, 268, 315, 316, 317, 318, 319, 321, 330, 335, 340, 354, 357, 360, 415, 416, 417, 418, 419, 420, 433, 436, 437, 440, 443, 444, 445, 448, 463, 502, 539, 594, 657], "simul": [1, 3, 21, 482, 485, 488, 552, 655], "problem": [1, 2, 3, 6, 7, 8, 11, 12, 17, 18, 21, 26, 28, 31, 43, 66, 70, 71, 72, 73, 95, 105, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 187, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 262, 321, 332, 334, 337, 339, 341, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 404, 405, 406, 410, 411, 412, 414, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 481, 483, 484, 487, 502, 594, 617, 618, 657, 742, 750], "flow": [1, 3, 7, 8, 11, 12, 18, 19, 21, 26, 43, 66, 68, 69, 74, 108, 109, 111, 268, 284, 285, 296, 297, 316, 321, 328, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 366, 367, 368, 377, 378, 383, 384, 385, 393, 394, 399, 400, 405, 406, 411, 412, 463, 464, 465, 466, 467, 468, 469, 471, 472, 477, 481, 482, 483, 484, 485, 492, 493, 494, 496, 497, 500, 502, 504, 505, 509, 512, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 541, 545, 546, 548, 549, 553, 556, 558, 559, 563, 566, 570, 581, 582, 583, 589, 594, 608, 610, 611, 612, 613, 614, 615, 616, 617, 621, 622, 623, 630, 633, 635, 637, 639, 640, 644, 654, 657, 658, 659, 660, 661, 662, 663, 664, 671, 675, 677, 678, 679, 680, 681, 685, 686, 687, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 730, 731, 732, 742, 743, 745, 748, 750, 763, 780], "continu": [1, 7, 17, 18, 20, 37, 96, 104, 113, 115, 156, 157, 158, 159, 160, 161, 165, 166, 167, 169, 190, 191, 192, 195, 196, 198, 199, 200, 203, 239, 263, 303, 309, 351, 352, 353, 354, 355, 356, 357, 358, 359, 415, 463, 464, 465, 471, 472, 477, 481, 485, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 512, 513, 517, 518, 519, 520, 521, 594, 608, 657, 685, 686, 687, 748, 783], "At": [1, 256, 491], "top": [1, 2, 79, 106, 170, 485, 594], "level": [1, 2, 26, 43, 106, 115, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 251, 476, 485, 503, 536, 591, 594, 725, 729, 747], "task": [1, 3, 5, 6, 7, 12, 18, 262, 263, 264, 265, 314, 321, 349, 415, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 479, 481, 482, 483, 484, 485, 538], "construct": [1, 2, 8, 11, 17, 19, 20, 21, 62, 114, 126, 260, 262, 264, 298, 314, 415, 420, 433, 475, 476, 501, 577, 578, 579, 580, 632], "variou": [1, 2, 6, 17, 19, 21, 105, 106, 114, 159, 171, 175, 185, 190, 210, 219, 488, 655], "layer": [1, 2, 11, 12, 17, 18, 19, 463], "desir": [1, 3, 4, 7, 8, 43, 61, 108, 109, 110, 111, 112, 113, 115, 196, 320, 482, 585, 657, 668], "type": [1, 2, 3, 4, 7, 13, 18, 20, 21, 30, 37, 39, 42, 60, 61, 62, 104, 106, 107, 113, 114, 115, 122, 165, 166, 167, 168, 169, 239, 241, 256, 258, 259, 260, 262, 265, 268, 269, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 313, 314, 315, 316, 319, 321, 349, 415, 416, 417, 418, 419, 420, 426, 463, 471, 472, 474, 475, 476, 482, 487, 489, 490, 496, 502, 514, 515, 547, 548, 567, 569, 594, 608, 650, 651, 745, 746], "formul": [1, 2, 5, 7, 18, 20, 115, 260, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 353, 415, 417, 418, 419, 420, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 471, 472, 487, 488, 496, 580, 594, 608, 617, 618, 656], "propog": 1, "back": [1, 3, 4, 17, 30, 66, 81, 106, 114, 117, 119, 170, 178, 190, 193, 196, 262, 268, 315, 321, 415, 463, 465, 467, 469, 488, 502, 538, 572, 594], "through": [1, 2, 3, 4, 7, 8, 19, 20, 194, 200, 240, 261, 262, 476, 748], "explicit": [1, 2, 13, 19, 30, 178, 261, 496, 575, 594], "three": [1, 2, 3, 8, 11, 17, 18, 19, 21, 44, 45, 79, 82, 107, 108, 109, 110, 111, 112, 113, 115, 190, 241, 268, 300, 314, 471, 485, 487, 496, 502, 537, 564, 587, 617, 618, 648, 668, 756, 757, 758, 759, 760, 761, 762], "structur": [1, 3, 4, 8, 17, 26, 31, 40, 41, 42, 61, 62, 65, 66, 74, 76, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 190, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 268, 320, 415, 487, 502, 537, 538, 539, 540, 564, 565, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 640, 745], "decoupl": [1, 115, 172, 175, 347, 541, 581, 594, 608, 750], "one": [1, 2, 3, 4, 6, 8, 11, 17, 19, 40, 41, 42, 43, 59, 63, 64, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 163, 165, 166, 167, 168, 169, 170, 190, 194, 203, 240, 241, 262, 268, 313, 316, 317, 320, 415, 416, 420, 476, 482, 488, 489, 496, 502, 537, 550, 564, 569, 590, 593, 594, 608, 617, 618, 652, 655, 662, 669, 744, 745, 748, 761, 762], "anoth": [1, 7, 8, 17, 19, 109, 115, 170, 196, 240, 268, 476, 518, 540], "visibl": [1, 3, 17, 19, 78, 171, 268], "paramet": [1, 4, 7, 9, 12, 17, 20, 26, 30, 60, 63, 107, 108, 109, 110, 111, 112, 113, 115, 116, 120, 121, 123, 162, 171, 175, 198, 199, 200, 203, 205, 260, 261, 262, 263, 268, 298, 303, 309, 315, 316, 319, 350, 389, 392, 396, 415, 416, 419, 420, 422, 425, 433, 437, 440, 443, 445, 448, 449, 451, 452, 455, 457, 460, 461, 462, 464, 474, 487, 495, 496, 500, 509, 512, 537, 538, 541, 546, 549, 564, 565, 566, 568, 577, 578, 579, 580, 594, 608, 617, 618, 627, 665, 666, 750], "quantiti": [1, 17, 74, 203, 260, 305, 420, 474, 583, 594, 662, 668, 744], "network": [1, 2, 3, 5, 11, 12, 18, 20, 66, 268, 314, 315, 316, 317, 318, 319, 321, 322, 325, 330, 335, 340, 349, 354, 357, 360, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 471, 472, 479, 481, 482, 483, 484, 485, 492, 494, 495, 540, 543, 544, 594, 608, 772], "connect": [1, 8, 19, 20, 262, 268, 415, 420, 489, 499, 525, 526, 529, 531, 539, 540, 544, 551, 564, 586], "mathemat": [1, 5, 6, 8, 9, 12, 21, 115, 240, 268, 314, 321, 328, 349, 407, 408, 463, 464, 466, 468, 471, 472, 473, 474, 479, 481, 482, 483, 484, 485, 496], "being": [1, 3, 8, 17, 40, 41, 42, 58, 60, 114, 115, 156, 157, 158, 159, 160, 161, 190, 268, 313, 463, 481, 502, 572, 580, 656, 663, 783], "resepect": 1, "math": [1, 2, 11, 12, 17, 18, 314, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 420, 463, 464, 466, 467, 468], "shown": [1, 3, 4, 8, 11, 12, 17, 19, 26, 30, 77, 78, 79, 80, 111, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 578], "figur": [1, 2, 3, 4, 7, 8, 11, 12, 17, 19, 77, 78, 79, 80], "further": [1, 7, 8, 60, 349, 420, 657], "particular": [1, 2, 3, 4, 8, 17, 18, 37, 42, 43, 59, 104, 106, 114, 115, 194, 239, 256, 268, 269, 315, 349, 415, 420, 463, 547, 548, 564], "format": [1, 2, 3, 4, 5, 17, 19, 21, 40, 41, 43, 44, 45, 62, 81, 82, 83, 84, 107, 115, 262, 265, 266, 269, 314, 471, 472, 474, 485, 489, 496, 497, 551, 575, 591, 647, 648, 657, 658, 659, 660, 661, 663, 664, 665, 666, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 747, 763], "legaci": [1, 2, 3, 17, 18, 24, 37, 104, 239, 262, 267, 276, 296, 297, 332, 334, 337, 339, 341, 350, 390, 395, 396, 397, 398, 399, 400, 444, 445, 446, 447, 448, 462, 465, 467, 469, 470, 472, 485, 486, 487, 594, 627, 685, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 730, 731, 732, 741, 769], "case": [1, 3, 4, 7, 8, 11, 12, 17, 18, 19, 39, 40, 41, 42, 43, 44, 45, 59, 61, 62, 63, 64, 77, 78, 79, 80, 81, 82, 83, 84, 95, 106, 109, 114, 115, 165, 166, 167, 168, 169, 170, 247, 253, 262, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 321, 415, 420, 463, 465, 467, 468, 469, 470, 479, 481, 482, 483, 484, 487, 488, 489, 491, 495, 496, 497, 498, 500, 501, 502, 505, 517, 521, 534, 537, 538, 539, 540, 547, 548, 549, 551, 564, 565, 566, 567, 570, 571, 572, 574, 575, 583, 585, 588, 590, 594, 616, 617, 618, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 645, 646, 647, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 697, 745, 746, 748, 755, 756, 757, 758, 759, 760, 761, 762, 763, 779, 783], "struct": [1, 2, 3, 4, 7, 11, 12, 14, 16, 17, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 188, 189, 190, 193, 194, 195, 196, 201, 202, 203, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 241, 244, 260, 261, 262, 265, 266, 268, 269, 314, 316, 317, 318, 319, 320, 321, 342, 349, 389, 396, 415, 420, 462, 463, 464, 465, 467, 469, 470, 479, 481, 482, 483, 484, 487, 488, 489, 491, 496, 497, 500, 501, 502, 503, 504, 506, 510, 513, 515, 516, 518, 520, 534, 537, 538, 539, 540, 546, 547, 548, 549, 564, 565, 572, 574, 575, 583, 587, 588, 594, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 626, 627, 630, 631, 632, 633, 634, 635, 636, 637, 638, 644, 645, 646, 647, 649, 651, 652, 654, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 697, 743, 744, 745, 746, 748, 749, 750], "mpc": [1, 2, 3, 4, 17, 20, 39, 40, 41, 48, 50, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 262, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 341, 463, 465, 467, 469, 470, 479, 481, 482, 483, 484, 487, 488, 489, 491, 495, 496, 497, 501, 534, 537, 538, 539, 540, 543, 544, 547, 548, 564, 565, 570, 572, 574, 575, 576, 579, 581, 582, 583, 584, 585, 588, 616, 617, 618, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 645, 646, 654, 655, 656, 665, 668, 675, 742, 743, 744, 745, 746, 748], "file": [1, 3, 6, 11, 13, 14, 15, 16, 21, 24, 37, 40, 41, 43, 44, 45, 47, 48, 50, 53, 59, 61, 62, 63, 64, 77, 78, 79, 80, 81, 82, 83, 84, 104, 107, 108, 109, 110, 111, 112, 113, 154, 184, 239, 247, 256, 262, 265, 266, 268, 463, 478, 481, 482, 483, 484, 486, 488, 489, 495, 496, 497, 540, 542, 560, 566, 567, 570, 571, 574, 575, 594, 608, 617, 618, 644, 645, 646, 647, 648, 649, 650, 651, 652, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 675, 676, 677, 678, 679, 680, 681, 697, 704, 763], "convers": [1, 3, 4, 17, 43, 262, 268, 485, 539, 581, 582, 588, 594, 608, 650, 651, 657, 658, 659, 660, 661, 663, 664], "servic": [1, 8, 17, 19, 20, 296, 363, 366, 367, 368, 370, 374, 375, 376, 377, 378, 387, 390, 392, 393, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 489, 490, 491, 496, 566, 570, 571, 580, 625, 632], "convert": [1, 3, 5, 43, 63, 64, 81, 113, 115, 117, 118, 119, 120, 240, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 313, 314, 321, 330, 335, 340, 354, 357, 360, 415, 463, 464, 467, 470, 471, 472, 474, 485, 488, 490, 497, 537, 538, 539, 564, 565, 572, 574, 575, 594, 641, 645, 646, 647, 648, 650, 651, 657, 663], "between": [1, 2, 3, 4, 7, 8, 17, 19, 43, 111, 199, 247, 249, 250, 252, 253, 262, 265, 353, 415, 463, 491, 590, 594, 641], "specif": [1, 3, 7, 8, 11, 14, 16, 17, 19, 38, 60, 66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 159, 171, 172, 173, 174, 175, 178, 184, 185, 208, 209, 210, 219, 240, 241, 256, 257, 262, 263, 264, 265, 267, 268, 269, 314, 315, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 415, 417, 418, 419, 420, 463, 465, 467, 469, 470, 471, 472, 473, 474, 479, 481, 482, 483, 484, 534, 548, 573, 585, 594, 616, 617, 668, 745, 783], "extern": [1, 17, 415, 488, 491, 537, 538, 539, 564, 565, 572, 657, 658, 659, 660, 661, 663, 664, 682, 745], "each": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 18, 19, 21, 42, 43, 60, 64, 77, 78, 80, 106, 107, 108, 109, 111, 113, 114, 115, 165, 166, 167, 168, 169, 170, 190, 203, 241, 247, 249, 251, 253, 262, 264, 265, 268, 269, 300, 306, 313, 314, 315, 316, 317, 318, 319, 320, 321, 349, 381, 382, 384, 385, 415, 416, 419, 420, 463, 471, 472, 473, 486, 487, 488, 489, 490, 491, 496, 498, 499, 502, 515, 528, 529, 531, 540, 543, 544, 549, 566, 567, 568, 570, 571, 576, 585, 587, 588, 590, 591, 593, 594, 617, 618, 649, 651, 652, 657, 662, 668, 743, 744, 745, 746, 747, 748], "plu": [1, 251], "organ": [1, 3, 6, 42, 106, 262], "collect": [1, 6, 17, 19, 74, 109, 115, 190, 316, 319, 502], "enclos": [1, 313, 650, 651], "contain": [1, 2, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 26, 30, 31, 40, 41, 42, 60, 61, 62, 63, 64, 66, 76, 106, 111, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 182, 183, 184, 185, 188, 190, 193, 195, 196, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 247, 261, 262, 265, 268, 269, 313, 314, 321, 349, 415, 420, 463, 471, 472, 474, 476, 479, 481, 482, 483, 484, 485, 487, 496, 497, 502, 503, 504, 506, 510, 513, 515, 516, 518, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 538, 540, 541, 542, 546, 547, 548, 565, 575, 585, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 617, 618, 621, 622, 642, 645, 646, 648, 649, 650, 651, 657, 658, 659, 660, 661, 662, 663, 664, 665, 750, 751], "correspond": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 26, 31, 39, 40, 41, 59, 60, 63, 64, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 170, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 193, 194, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 249, 260, 262, 265, 268, 269, 305, 315, 316, 317, 318, 319, 320, 321, 349, 363, 366, 367, 368, 370, 374, 375, 376, 377, 378, 387, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 420, 463, 465, 467, 469, 470, 471, 472, 486, 487, 488, 489, 496, 502, 522, 523, 524, 525, 526, 527, 537, 538, 540, 549, 551, 564, 565, 573, 576, 581, 584, 585, 587, 591, 593, 594, 608, 621, 622, 626, 643, 648, 649, 650, 651, 652, 657, 663, 668, 669, 745, 746, 747, 752], "devic": [1, 17], "g": [1, 2, 3, 7, 8, 14, 16, 17, 18, 19, 26, 29, 30, 60, 66, 75, 96, 97, 98, 100, 106, 108, 109, 111, 114, 115, 117, 124, 155, 164, 170, 171, 174, 175, 177, 179, 182, 183, 184, 185, 189, 190, 201, 205, 241, 244, 259, 262, 265, 268, 269, 285, 289, 295, 297, 305, 306, 308, 314, 315, 316, 317, 321, 349, 415, 416, 420, 463, 464, 467, 470, 476, 482, 487, 488, 492, 496, 502, 528, 536, 540, 567, 585, 594, 608, 609, 617, 623, 630, 650, 651, 657, 745, 748], "bu": [1, 3, 4, 12, 17, 18, 19, 20, 43, 44, 45, 60, 62, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 262, 268, 269, 271, 272, 278, 279, 282, 284, 286, 287, 288, 289, 290, 292, 293, 296, 297, 298, 300, 301, 308, 311, 349, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 420, 426, 427, 428, 429, 430, 431, 432, 466, 471, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 496, 497, 498, 500, 502, 508, 509, 511, 512, 514, 517, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 543, 544, 546, 549, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 577, 581, 582, 583, 585, 586, 587, 588, 589, 590, 594, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 623, 624, 630, 631, 640, 644, 645, 647, 648, 649, 654, 657, 658, 659, 660, 661, 663, 664, 666, 668, 675, 677, 678, 679, 680, 745, 746, 748, 750, 755, 756, 757, 758, 759, 760, 761, 762, 763, 783], "line": [1, 2, 3, 8, 18, 19, 20, 43, 77, 78, 106, 114, 115, 200, 247, 251, 262, 264, 265, 268, 276, 277, 284, 287, 296, 297, 298, 299, 320, 321, 361, 362, 363, 364, 365, 366, 367, 368, 395, 396, 397, 398, 399, 400, 401, 402, 415, 420, 421, 444, 445, 446, 447, 448, 449, 471, 472, 475, 485, 487, 491, 496, 529, 531, 539, 540, 549, 551, 564, 566, 567, 568, 570, 571, 572, 582, 584, 588, 594, 608, 621, 643, 645, 647, 649, 650, 652, 657, 666, 676, 688, 742, 743, 769], "some": [1, 6, 7, 8, 12, 17, 18, 19, 20, 21, 26, 43, 45, 59, 60, 105, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 249, 260, 261, 268, 317, 318, 465, 467, 469, 497, 548, 566, 567, 568, 570, 571, 594, 643, 656, 658, 659, 660, 661, 663, 664, 750, 783], "attribut": 1, "interfac": [1, 2, 6, 7, 24, 25, 31, 109, 110, 115, 156, 157, 158, 160, 161, 171, 172, 173, 174, 178, 182, 183, 184, 185, 188, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 594, 608, 675, 743, 783], "reserv": [1, 2, 18, 56, 58, 64, 66, 74, 77, 94, 280, 281, 305, 306, 314, 407, 408, 474, 485, 488, 496, 538, 565, 571, 662, 675, 729, 744], "requir": [1, 3, 6, 8, 13, 17, 18, 20, 21, 26, 42, 43, 60, 61, 62, 63, 64, 65, 66, 94, 115, 137, 141, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 174, 175, 182, 183, 184, 185, 193, 210, 219, 256, 268, 306, 362, 471, 472, 474, 478, 489, 503, 551, 572, 575, 594, 608, 656, 662, 744, 745], "provid": [1, 2, 3, 4, 6, 7, 8, 12, 17, 19, 26, 30, 31, 40, 41, 42, 61, 63, 64, 79, 80, 106, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 160, 161, 162, 171, 172, 173, 174, 178, 182, 183, 184, 185, 188, 196, 203, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 240, 261, 262, 263, 265, 268, 269, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 327, 328, 329, 330, 332, 334, 335, 337, 339, 340, 341, 343, 348, 349, 416, 420, 463, 464, 466, 468, 470, 478, 479, 481, 482, 483, 484, 486, 487, 540, 548, 572, 580, 585, 586, 594, 626, 662, 668, 744, 746, 783], "extraordinari": 1, "flexibl": [1, 2, 8, 12, 481, 482, 483, 484, 486], "allow": [1, 2, 7, 8, 11, 12, 17, 42, 43, 60, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 188, 203, 241, 261, 268, 321, 487, 488, 489, 496, 573, 594, 608, 660, 664], "environ": [1, 5, 13], "ad": [1, 2, 8, 12, 13, 17, 18, 19, 39, 40, 41, 43, 59, 106, 108, 109, 110, 111, 112, 114, 115, 190, 262, 265, 316, 317, 318, 320, 321, 327, 328, 352, 353, 360, 363, 364, 365, 366, 374, 381, 382, 383, 384, 385, 390, 392, 407, 408, 415, 487, 488, 492, 493, 494, 496, 536, 551, 566, 567, 570, 571, 648, 665, 666, 667, 746], "modifi": [1, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 42, 43, 59, 60, 76, 81, 103, 107, 108, 109, 110, 111, 112, 113, 115, 116, 121, 122, 123, 154, 162, 165, 166, 167, 168, 169, 188, 193, 256, 262, 265, 268, 269, 313, 314, 320, 415, 420, 471, 472, 473, 474, 478, 489, 497, 502, 503, 569, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 657, 666, 668, 742, 745, 755], "exist": [1, 2, 3, 8, 12, 18, 40, 41, 66, 107, 108, 109, 110, 111, 112, 113, 114, 115, 194, 201, 202, 241, 247, 262, 268, 269, 313, 320, 478, 497, 575, 594], "independ": [1, 7, 585], "rest": [1, 8, 564, 751], "In": [1, 2, 3, 4, 6, 7, 8, 11, 13, 17, 18, 19, 42, 43, 106, 114, 115, 203, 268, 321, 420, 463, 476, 536, 564, 585, 617, 662, 746, 748], "given": [1, 3, 4, 7, 8, 9, 12, 17, 18, 26, 40, 41, 42, 58, 62, 106, 108, 109, 110, 111, 112, 114, 115, 117, 119, 182, 183, 184, 185, 190, 247, 251, 262, 268, 269, 300, 415, 420, 487, 489, 496, 502, 528, 535, 537, 538, 541, 546, 566, 567, 568, 570, 571, 577, 584, 585, 591, 610, 611, 612, 613, 614, 615, 643, 644, 655, 656, 666, 747, 750], "run": [1, 2, 3, 5, 6, 12, 13, 17, 18, 19, 21, 36, 66, 102, 105, 190, 200, 201, 203, 215, 220, 238, 241, 242, 243, 245, 246, 251, 255, 256, 314, 463, 468, 477, 478, 479, 481, 482, 483, 484, 497, 515, 560, 644, 656, 657, 658, 659, 660, 661, 662, 663, 664, 781, 783], "set": [1, 2, 3, 4, 7, 8, 11, 12, 14, 16, 17, 19, 26, 30, 39, 42, 43, 59, 60, 62, 63, 64, 66, 76, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 147, 154, 162, 176, 177, 182, 188, 190, 191, 192, 193, 195, 196, 197, 203, 205, 240, 245, 251, 252, 256, 260, 262, 268, 313, 314, 315, 342, 349, 350, 391, 415, 416, 417, 418, 419, 420, 462, 466, 467, 468, 471, 472, 478, 481, 483, 484, 487, 489, 496, 502, 503, 505, 507, 511, 514, 519, 521, 533, 541, 546, 567, 568, 569, 571, 589, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 617, 618, 657, 662, 663, 742, 743, 744, 745, 750], "creat": [1, 2, 3, 4, 7, 8, 12, 13, 15, 19, 21, 58, 60, 64, 65, 66, 77, 78, 79, 80, 103, 106, 108, 111, 112, 115, 165, 166, 167, 168, 169, 205, 256, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 320, 321, 328, 415, 420, 463, 467, 482, 487, 497, 572, 594, 646, 665, 666, 772], "us": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 19, 20, 21, 26, 30, 31, 33, 37, 38, 42, 43, 59, 60, 62, 63, 64, 66, 76, 79, 80, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 245, 247, 256, 257, 258, 260, 261, 262, 265, 267, 268, 269, 300, 313, 314, 315, 316, 317, 318, 319, 321, 349, 353, 354, 355, 356, 357, 358, 359, 415, 420, 463, 464, 466, 467, 468, 471, 472, 475, 476, 478, 479, 480, 481, 483, 484, 487, 488, 489, 490, 492, 493, 494, 496, 497, 500, 502, 512, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 539, 540, 541, 543, 545, 546, 547, 548, 549, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 580, 581, 583, 585, 586, 589, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 633, 635, 637, 645, 651, 652, 653, 654, 657, 658, 659, 660, 661, 663, 664, 666, 667, 668, 672, 673, 674, 682, 683, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 742, 745, 746, 747, 748, 750, 780, 782, 783], "show": [1, 2, 3, 4, 7, 8, 17, 18, 19, 43], "mai": [1, 3, 8, 9, 17, 20, 26, 42, 60, 66, 106, 108, 109, 111, 113, 115, 162, 190, 213, 256, 262, 488, 492, 496, 497, 502, 573, 594, 663, 746], "sourc": [1, 3, 4, 6, 12, 13, 14, 15, 16, 18, 19, 21, 37, 104, 170, 239, 256, 262, 265, 266, 268, 269, 463, 465, 467, 469, 470, 479, 481, 482, 483, 484, 486, 548, 580], "individu": [1, 3, 7, 8, 11, 17, 19, 20, 24, 36, 77, 78, 79, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 238, 240, 245, 246, 251, 254, 255, 262, 268, 313, 350, 487, 489, 496, 539, 549, 572, 575, 583, 585, 588, 594, 608, 617, 618, 644, 658, 659, 660, 661, 663, 664, 748, 781], "4": [1, 2, 8, 9, 11, 12, 17, 18, 20, 26, 30, 31, 42, 106, 110, 112, 114, 115, 131, 156, 157, 158, 159, 160, 161, 163, 178, 182, 203, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 245, 246, 249, 250, 252, 256, 259, 284, 286, 287, 314, 415, 433, 469, 476, 488, 489, 492, 494, 496, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 548, 564, 566, 567, 568, 570, 571, 593, 594, 608, 746, 752, 755, 756, 757, 758, 759, 782], "label": [1, 3, 8, 17, 19, 42, 60, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 172, 203, 262, 268, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311, 315, 317, 318, 319, 415, 462, 489, 540, 569, 651], "white": 1, "circl": 1, "convent": [1, 3, 4, 5, 7, 8, 106, 107, 108, 109, 110, 111, 112, 113, 262, 265, 268, 269, 314, 321, 349, 415, 420, 488], "throughout": [1, 3, 9, 62, 262], "codebas": [1, 751], "variabl": [1, 3, 6, 8, 9, 12, 19, 26, 31, 42, 61, 66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 165, 166, 167, 169, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 262, 265, 267, 268, 269, 315, 316, 317, 318, 319, 320, 321, 328, 349, 383, 389, 396, 407, 415, 416, 417, 418, 419, 420, 428, 429, 430, 431, 432, 433, 437, 440, 443, 445, 448, 474, 475, 476, 487, 488, 496, 497, 534, 542, 579, 580, 590, 594, 608, 616, 617, 618, 627, 641, 643, 667], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 26, 29, 31, 37, 39, 40, 41, 43, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 80, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 162, 164, 170, 171, 188, 189, 193, 194, 202, 203, 239, 241, 244, 247, 251, 256, 260, 262, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 349, 350, 361, 369, 370, 379, 386, 387, 395, 401, 403, 407, 408, 409, 413, 415, 420, 421, 426, 427, 433, 436, 437, 444, 449, 450, 451, 456, 461, 463, 465, 466, 467, 468, 469, 470, 475, 478, 479, 481, 482, 483, 484, 487, 488, 489, 496, 497, 502, 503, 515, 516, 536, 540, 542, 566, 567, 568, 569, 570, 571, 574, 575, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 617, 618, 645, 648, 649, 651, 652, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 745, 783], "singl": [1, 2, 3, 8, 17, 18, 19, 20, 21, 26, 31, 42, 61, 79, 81, 83, 84, 96, 97, 106, 109, 114, 115, 118, 120, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 201, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 251, 260, 262, 268, 275, 290, 313, 314, 316, 319, 320, 415, 420, 471, 478, 487, 496, 537, 539, 540, 548, 564, 572, 585, 617, 626, 644, 650, 651, 666, 668, 746, 748, 756, 757, 758, 759, 760, 761, 762], "manag": [1, 11, 106, 107, 108, 109, 110, 111, 112, 113, 114, 462], "overal": [1, 6, 43, 489], "process": [1, 2, 4, 6, 11, 21, 265, 267, 268, 463, 465, 467, 469, 470, 583], "pf": [1, 2, 3, 7, 11, 17, 18, 20, 74, 165, 314, 321, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 383, 384, 385, 463, 464, 468, 469, 470, 471, 472, 477, 484, 528, 536, 566, 570, 581, 582, 594, 617, 663, 741], "cpf": [1, 2, 3, 7, 11, 17, 18, 20, 263, 303, 309, 314, 321, 322, 323, 324, 325, 326, 327, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 383, 384, 385, 404, 410, 463, 464, 465, 470, 471, 472, 477, 481, 482, 500, 502, 503, 504, 506, 508, 509, 510, 513, 515, 516, 517, 518, 520, 594, 657, 741], "opf": [1, 2, 3, 6, 7, 11, 18, 19, 20, 21, 43, 50, 54, 55, 56, 70, 71, 81, 95, 115, 116, 121, 123, 154, 162, 163, 166, 168, 169, 188, 262, 264, 285, 288, 289, 291, 294, 295, 297, 299, 302, 304, 307, 310, 312, 314, 321, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 350, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 380, 381, 382, 388, 389, 390, 391, 392, 396, 397, 398, 402, 414, 463, 466, 467, 470, 471, 472, 473, 474, 477, 482, 483, 485, 487, 488, 496, 497, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 545, 551, 553, 556, 558, 563, 564, 566, 567, 570, 571, 594, 608, 616, 618, 621, 625, 628, 629, 632, 644, 658, 660, 661, 662, 664, 677, 678, 679, 680, 725, 729, 741, 742, 743, 744, 745, 748, 783], "ha": [1, 2, 3, 4, 6, 7, 8, 11, 17, 19, 21, 60, 103, 114, 115, 191, 192, 193, 203, 260, 268, 300, 313, 349, 415, 468, 475, 476, 488, 496, 502, 503, 507, 519, 537, 538, 539, 540, 548, 551, 564, 566, 567, 569, 570, 571, 572, 575, 585, 591, 594, 617, 618, 643, 668, 747, 748, 762], "method": [1, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 26, 30, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 143, 171, 172, 173, 174, 175, 178, 185, 203, 210, 219, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 303, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 440, 443, 444, 445, 448, 449, 450, 451, 452, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 486, 487, 492, 493, 494, 500, 541, 546, 556, 558, 590, 594, 608, 610, 611, 612, 613, 614, 615, 617, 654, 663, 750], "up": [1, 8, 12, 13, 17, 18, 19, 20, 42, 43, 66, 108, 109, 110, 111, 112, 114, 115, 240, 245, 256, 342, 391, 476, 478, 486, 496, 585, 608, 668, 742, 743, 744, 745], "correspnd": 1, "For": [1, 2, 3, 4, 6, 7, 8, 12, 17, 18, 19, 21, 43, 60, 62, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 163, 203, 204, 241, 258, 260, 268, 307, 315, 316, 317, 318, 319, 415, 420, 471, 472, 473, 474, 481, 482, 483, 484, 498, 505, 507, 511, 514, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 537, 564, 565, 569, 581, 585, 593, 594, 617, 618, 745, 746, 783], "exampl": [1, 2, 3, 4, 6, 7, 11, 14, 16, 17, 18, 19, 26, 27, 28, 31, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 67, 68, 69, 70, 71, 72, 73, 82, 83, 84, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 197, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 241, 245, 246, 247, 249, 250, 251, 252, 253, 265, 268, 314, 320, 415, 420, 478, 481, 482, 483, 484, 485, 487, 488, 489, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 537, 538, 539, 540, 542, 547, 548, 549, 564, 565, 566, 567, 568, 570, 571, 572, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 594, 608, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 644, 656, 657, 658, 659, 660, 661, 662, 663, 664, 668, 704, 742, 746, 748, 783], "follow": [1, 3, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 26, 28, 30, 31, 37, 38, 39, 40, 41, 42, 43, 45, 60, 62, 63, 64, 74, 77, 78, 79, 80, 81, 104, 105, 106, 109, 110, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 188, 190, 193, 197, 201, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 241, 247, 249, 250, 252, 253, 256, 257, 260, 262, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 313, 415, 416, 417, 418, 419, 479, 481, 482, 483, 484, 487, 488, 496, 497, 502, 515, 528, 529, 530, 531, 532, 534, 537, 539, 540, 547, 548, 549, 564, 568, 569, 571, 572, 574, 577, 578, 579, 594, 608, 610, 611, 612, 613, 614, 615, 616, 617, 649, 650, 651, 652, 657, 658, 659, 660, 661, 662, 663, 664, 668, 743, 744, 745, 746, 783], "9": [1, 2, 12, 17, 18, 20, 31, 43, 116, 123, 140, 141, 156, 157, 158, 160, 161, 162, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 256, 313, 415, 493, 496, 566, 567, 570, 571, 589, 594, 608, 639, 677, 678, 679, 680, 760, 761, 762, 763], "mpopt": [1, 2, 7, 12, 17, 18, 20, 66, 116, 121, 122, 123, 154, 162, 163, 165, 166, 167, 168, 169, 188, 262, 264, 267, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 307, 308, 311, 314, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 358, 359, 360, 363, 364, 365, 366, 367, 368, 370, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 481, 482, 483, 484, 488, 492, 493, 494, 500, 501, 502, 534, 539, 541, 546, 572, 577, 581, 586, 587, 594, 610, 611, 612, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 644, 654, 657, 658, 659, 660, 661, 662, 663, 664, 745, 746, 748, 750, 783], "mpoption": [1, 2, 12, 18, 20, 66, 76, 116, 121, 122, 123, 154, 162, 163, 165, 166, 167, 168, 169, 170, 188, 485, 541, 546, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 617, 618, 644, 654, 657, 658, 659, 660, 661, 663, 664, 703, 748, 750, 751, 783], "verbos": [1, 12, 18, 20, 26, 30, 31, 36, 66, 74, 101, 102, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 238, 251, 255, 256, 478, 497, 503, 594, 608, 645, 646, 648, 649, 651, 652, 748, 781], "option": [1, 3, 4, 5, 6, 7, 8, 11, 13, 17, 18, 19, 26, 30, 31, 38, 39, 40, 41, 59, 61, 62, 63, 64, 66, 74, 76, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 147, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 194, 195, 196, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 241, 245, 247, 249, 250, 251, 253, 256, 257, 260, 262, 267, 268, 269, 314, 315, 316, 317, 319, 320, 321, 329, 340, 342, 349, 391, 415, 416, 420, 463, 464, 465, 467, 468, 469, 470, 478, 479, 481, 482, 483, 484, 487, 488, 495, 496, 497, 500, 502, 508, 509, 515, 517, 529, 531, 533, 534, 537, 538, 539, 540, 541, 544, 546, 547, 548, 549, 551, 564, 565, 572, 574, 575, 576, 581, 583, 584, 585, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 630, 631, 633, 634, 635, 636, 637, 638, 644, 645, 648, 649, 650, 651, 654, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 704, 744, 745, 746, 748, 750, 783], "task_opf": [1, 11, 258, 467, 479, 482, 483, 485], "case9": [1, 3, 4, 20, 481, 482, 483, 484, 657, 658, 659, 660, 661, 663, 664, 783], "step": [1, 3, 4, 7, 8, 11, 13, 17, 26, 115, 174, 178, 185, 190, 192, 193, 198, 199, 200, 202, 203, 210, 219, 256, 476, 496, 500, 501, 502, 503, 508, 509, 511, 512, 514, 516, 517, 519, 558, 594, 608, 657], "list": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 61, 63, 64, 107, 108, 109, 110, 111, 112, 113, 115, 165, 166, 167, 168, 169, 178, 190, 262, 264, 268, 269, 313, 415, 476, 488, 489, 490, 502, 503, 535, 536, 541, 546, 547, 548, 594, 643, 650, 651, 655, 666, 748, 750], "roughli": [1, 3, 262], "equival": [1, 17, 19, 117, 119, 253, 284, 320, 496], "perform": [1, 7, 26, 30, 31, 66, 171, 172, 173, 174, 178, 183, 184, 203, 217, 262, 512, 536, 538, 539, 541, 546, 583, 594, 610, 611, 612, 613, 614, 615, 639, 657, 669, 750], "when": [1, 2, 3, 4, 6, 8, 9, 12, 13, 17, 19, 29, 42, 43, 61, 66, 75, 77, 78, 106, 109, 110, 114, 115, 124, 155, 164, 170, 175, 189, 191, 192, 203, 241, 244, 245, 256, 258, 262, 265, 268, 320, 321, 415, 420, 463, 464, 475, 476, 487, 488, 497, 502, 505, 507, 511, 514, 519, 521, 537, 538, 585, 588, 590, 594, 609, 617, 618, 621, 657, 666, 742, 745], "It": [1, 3, 4, 6, 8, 17, 19, 20, 21, 42, 74, 108, 111, 112, 115, 247, 256, 262, 265, 476, 482, 487, 489, 492, 493, 494, 502, 511, 514, 529, 536, 537, 540, 551, 564, 652, 748], "defin": [1, 3, 4, 6, 7, 8, 11, 12, 17, 19, 20, 26, 31, 42, 43, 59, 60, 64, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 182, 183, 184, 185, 188, 190, 198, 199, 200, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 249, 259, 260, 262, 263, 267, 268, 269, 295, 298, 306, 316, 319, 321, 350, 415, 416, 420, 487, 488, 489, 496, 502, 515, 536, 542, 547, 548, 551, 566, 567, 568, 569, 570, 571, 575, 585, 590, 594, 608, 617, 618, 627, 628, 629, 657, 662, 668, 675, 742, 743, 746], "well": [1, 2, 3, 8, 17, 19, 77, 78, 106, 115, 240, 320, 415, 416, 463, 467, 474, 479, 492, 493, 494, 529, 531, 536, 537, 538, 540, 541, 546, 564, 565, 569, 594, 610, 611, 612, 613, 614, 615, 617, 652, 697, 742, 750], "explicitli": [1, 8, 13, 17, 203, 416, 594, 617], "actual": [1, 6, 11, 26, 109, 182, 183, 184, 185, 247, 249, 250, 253, 269, 420, 569, 743, 746], "code": [1, 7, 13, 17, 18, 19, 20, 26, 107, 108, 109, 110, 111, 112, 113, 115, 117, 159, 160, 163, 170, 171, 172, 173, 174, 175, 178, 182, 184, 185, 208, 209, 210, 219, 220, 241, 242, 243, 256, 260, 344, 345, 346, 347, 353, 467, 480, 497, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 536, 548, 569, 583, 594, 616, 617, 671, 672, 673, 674, 693, 695, 702, 755, 783], "thei": [1, 2, 4, 7, 8, 11, 12, 13, 17, 19, 38, 106, 109, 114, 115, 240, 249, 256, 257, 314, 316, 321, 487, 537, 538, 564, 565, 566, 567, 570, 571, 585], "return": [1, 2, 3, 4, 8, 11, 17, 19, 26, 29, 36, 40, 41, 59, 61, 63, 64, 75, 76, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 124, 154, 155, 160, 163, 164, 170, 172, 184, 189, 190, 193, 194, 202, 203, 212, 220, 238, 241, 244, 255, 259, 262, 265, 266, 268, 269, 314, 315, 316, 317, 318, 319, 320, 321, 349, 350, 373, 389, 415, 416, 420, 463, 465, 467, 469, 475, 476, 479, 480, 481, 482, 483, 484, 487, 495, 496, 499, 500, 502, 516, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 564, 565, 572, 573, 574, 575, 576, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 625, 627, 642, 643, 647, 648, 650, 651, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 684, 745, 746, 747, 748, 749, 750, 781], "call": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 26, 29, 30, 31, 38, 61, 75, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 189, 190, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 241, 244, 245, 246, 247, 249, 250, 252, 253, 257, 258, 260, 261, 262, 265, 267, 268, 269, 316, 317, 318, 320, 321, 349, 415, 416, 419, 420, 427, 463, 464, 465, 466, 467, 468, 469, 470, 475, 476, 478, 481, 482, 483, 484, 487, 488, 502, 515, 516, 533, 536, 537, 538, 542, 564, 565, 580, 609, 617, 618, 655, 657, 658, 659, 660, 661, 662, 663, 664, 748], "them": [1, 2, 3, 8, 17, 19, 20, 43, 77, 78, 96, 97, 98, 100, 114, 115, 116, 117, 119, 121, 122, 123, 154, 162, 188, 256, 262, 268, 314, 416, 419, 478, 575, 742, 743, 744, 745, 748], "overridden": [1, 2, 3, 11, 17, 18, 19, 63, 114, 182, 260, 314, 471, 472, 594], "subclass": [1, 2, 3, 4, 7, 8, 11, 12, 19, 106, 107, 114, 262, 263, 264, 265, 268, 269, 313, 315, 316, 321, 322, 325, 330, 335, 340, 343, 348, 349, 415, 416, 420, 463, 467, 476, 487, 754], "main": [1, 2, 3, 4, 6, 19, 26, 31, 37, 104, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 262, 268, 269, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 478, 481, 482, 483, 484], "specifi": [1, 2, 8, 11, 12, 17, 19, 26, 30, 31, 39, 40, 41, 59, 60, 61, 62, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 170, 179, 181, 182, 183, 184, 185, 190, 194, 201, 202, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 247, 253, 260, 261, 266, 268, 269, 308, 315, 316, 319, 320, 415, 420, 463, 482, 487, 489, 492, 493, 494, 495, 499, 502, 515, 537, 538, 540, 542, 549, 551, 564, 565, 569, 574, 581, 585, 591, 594, 608, 617, 618, 625, 643, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 743, 745, 746, 747], "help": [1, 6, 21, 30, 37, 66, 104, 106, 114, 115, 122, 239, 256, 486, 487, 489, 497, 534, 594, 616, 617], "both": [1, 3, 6, 7, 8, 11, 17, 18, 19, 43, 65, 66, 78, 79, 80, 109, 115, 247, 253, 315, 316, 317, 318, 319, 320, 321, 465, 471, 472, 480, 496, 537, 549, 551, 564, 566, 573, 577, 657, 668, 745, 746], "after": [1, 2, 13, 17, 114, 116, 121, 122, 123, 154, 162, 188, 190, 262, 265, 268, 463, 464, 466, 467, 468, 488, 502, 566, 567, 568, 570, 571, 580, 663, 668, 669], "itself": [1, 8, 60, 170, 268, 321, 415, 668, 745], "also": [1, 3, 4, 6, 7, 8, 9, 11, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 40, 41, 42, 43, 59, 62, 66, 75, 76, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 238, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 295, 313, 314, 315, 316, 317, 318, 319, 320, 321, 347, 349, 415, 416, 417, 418, 419, 420, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 491, 492, 493, 494, 496, 500, 502, 505, 507, 508, 509, 511, 514, 515, 519, 521, 522, 528, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 581, 582, 583, 584, 585, 586, 588, 589, 590, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 643, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 676, 742, 743, 744, 745, 746, 748, 749, 750, 781], "updat": [1, 3, 4, 6, 8, 11, 19, 26, 43, 59, 66, 171, 174, 175, 178, 190, 193, 201, 202, 203, 246, 262, 265, 268, 269, 303, 309, 314, 321, 327, 349, 352, 360, 363, 366, 367, 368, 370, 374, 375, 376, 377, 378, 387, 390, 392, 393, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 463, 464, 465, 467, 469, 470, 488, 502, 503, 511, 514, 515, 516, 538, 565, 583, 594, 612, 615, 640, 646, 648, 651, 665, 749, 750], "basic": [1, 256, 475], "dmc_class": [1, 18, 314, 463, 467, 471, 472, 474], "dm_converter_mpc2": [1, 3, 4, 258, 262, 265, 267, 269, 485, 766], "v2": [1, 17, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 528], "dm_class": [1, 18, 314, 463, 471, 472, 474], "data_model_opf": [1, 3, 258, 307, 485], "nm_class": [1, 18, 314, 463, 471, 472], "net_model_acp": [1, 8, 258, 485], "ac": [1, 6, 7, 9, 12, 18, 20, 43, 166, 168, 260, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 367, 371, 372, 373, 374, 375, 377, 381, 382, 383, 384, 385, 390, 391, 393, 397, 399, 404, 405, 410, 411, 416, 417, 418, 420, 422, 423, 424, 428, 429, 430, 431, 434, 435, 438, 439, 440, 441, 442, 445, 446, 447, 452, 453, 454, 457, 458, 459, 466, 468, 471, 472, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 545, 594, 608, 616, 617, 621, 622, 623, 624, 630, 631, 633, 635, 637, 657, 661, 663, 664, 718, 720, 723, 730, 780, 782, 783], "polar": [1, 2, 7, 8, 18, 20, 315, 316, 318, 321, 325, 326, 327, 335, 336, 337, 338, 339, 346, 347, 353, 357, 358, 359, 365, 372, 375, 382, 385, 418, 420, 424, 429, 431, 435, 439, 442, 447, 454, 459, 471, 472, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 594, 610, 612, 613, 615, 774, 776], "mm_class": [1, 12, 18, 314, 463, 471, 472, 473, 474], "math_model_opf_acp": [1, 7, 17, 258, 336, 339, 485], "dmc": [1, 3, 4, 262, 265, 268, 463, 464, 466, 467], "build": [1, 2, 5, 6, 19, 20, 21, 66, 108, 111, 112, 115, 213, 240, 262, 265, 268, 321, 332, 334, 337, 339, 341, 349, 415, 416, 419, 420, 422, 425, 433, 437, 440, 443, 445, 448, 449, 451, 452, 455, 457, 460, 461, 463, 464, 485, 487, 490, 581, 582, 583, 584, 585, 586, 587, 588, 594], "dm": [1, 3, 4, 7, 8, 12, 17, 19, 43, 262, 263, 264, 265, 266, 267, 268, 269, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 303, 305, 306, 307, 308, 309, 311, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 419, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 440, 443, 445, 448, 449, 451, 452, 455, 457, 460, 461, 463, 464, 465, 466, 467, 468, 469, 479, 481, 482, 483, 484], "nm": [1, 7, 8, 12, 17, 19, 316, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 440, 443, 445, 448, 449, 451, 452, 455, 457, 460, 461, 463, 464, 465, 466, 467, 468, 469], "mm": [1, 7, 8, 9, 12, 17, 19, 316, 321, 322, 325, 328, 349, 350, 354, 357, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 420, 463, 464, 465, 467, 468, 469, 487], "solve_opt": [1, 7, 321, 329, 340, 342, 348], "get": [1, 2, 4, 12, 14, 16, 17, 19, 37, 43, 61, 62, 104, 114, 115, 239, 256, 260, 261, 262, 268, 269, 315, 316, 317, 318, 319, 349, 415, 416, 417, 418, 420, 463, 467, 497, 567, 568, 571, 644, 783], "network_model_x_soln": [1, 7, 321, 463, 464, 468], "soln": [1, 17, 107, 108, 109, 110, 111, 112, 113, 115, 195, 196, 416, 419, 420, 463, 504, 506, 510, 513, 518, 520, 640], "port_inj_soln": [1, 416, 419], "comput": [1, 6, 8, 12, 26, 66, 109, 111, 115, 156, 157, 158, 159, 160, 161, 171, 179, 180, 182, 183, 184, 185, 205, 206, 260, 316, 317, 318, 319, 391, 416, 419, 487, 500, 508, 509, 512, 517, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 549, 566, 585, 586, 591, 594, 612, 615, 619, 621, 623, 630, 633, 635, 637, 644, 746, 747, 748], "data_model_upd": [1, 7, 19, 268, 321, 349], "four": [1, 2, 17, 20, 43, 115, 528, 529, 531, 755], "consist": [1, 2, 3, 8, 9, 11, 17, 19, 39, 43, 106, 108, 111, 112, 115, 420, 465, 467, 469, 487, 492, 493, 494, 502, 536, 668], "hold": [1, 17, 19, 111, 120, 203, 313, 496], "That": [1, 7, 8, 12, 13, 17, 19, 20, 111, 117, 119, 170, 261, 266, 268, 269, 315, 316, 317, 318, 319, 321, 420, 476], "etc": [1, 3, 13, 17, 18, 19, 20, 24, 66, 74, 106, 114, 171, 179, 180, 181, 190, 205, 206, 207, 262, 268, 315, 321, 463, 475, 496, 502, 536, 537, 564, 594, 625, 632, 657, 658, 659, 660, 661, 663, 664, 745], "associ": [1, 6, 7, 8, 18, 106, 548, 737], "valid": [1, 3, 61, 63, 64, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 165, 166, 167, 168, 169, 170, 241, 259, 268, 269, 320, 349, 415, 420, 549, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 650, 651], "field": [1, 2, 4, 14, 16, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 202, 203, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 244, 260, 267, 268, 269, 321, 349, 389, 396, 415, 420, 464, 467, 487, 488, 489, 496, 502, 503, 505, 507, 515, 519, 521, 534, 538, 539, 540, 547, 548, 549, 565, 572, 575, 587, 594, 604, 608, 609, 616, 617, 618, 649, 651, 652, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 668, 675, 742, 743, 744, 745, 746], "identifi": [1, 3, 17, 30, 106, 114, 115, 241, 262, 265, 266, 268, 415, 463, 489, 495, 496], "can": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 26, 31, 37, 42, 60, 62, 63, 64, 66, 77, 78, 79, 80, 96, 97, 98, 100, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 156, 157, 158, 159, 160, 161, 170, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 193, 201, 202, 203, 204, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 241, 247, 249, 256, 262, 268, 269, 313, 314, 316, 317, 319, 320, 321, 415, 420, 463, 475, 476, 479, 481, 482, 483, 484, 487, 488, 491, 496, 497, 502, 503, 515, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 537, 538, 539, 540, 541, 542, 546, 549, 564, 565, 569, 581, 583, 585, 588, 589, 593, 594, 617, 618, 621, 642, 644, 654, 655, 657, 658, 659, 660, 661, 663, 664, 745, 746, 748, 750, 752, 783], "befor": [1, 2, 3, 4, 7, 8, 17, 19, 106, 114, 115, 170, 190, 247, 253, 260, 262, 463, 465, 467, 469, 488, 502, 533, 564, 580, 666, 669], "its": [1, 2, 3, 4, 6, 7, 8, 11, 12, 17, 19, 21, 26, 43, 109, 110, 112, 114, 115, 171, 173, 175, 178, 182, 183, 184, 185, 190, 203, 262, 264, 265, 268, 269, 315, 349, 415, 417, 418, 419, 420, 478, 481, 482, 483, 484, 505, 521, 550, 569, 657], "simpli": [1, 2, 3, 4, 6, 8, 9, 11, 17, 18, 20, 62, 108, 111, 112, 115, 269, 318, 321, 487, 536, 538, 539, 540, 565, 621], "loop": [1, 3, 4, 7, 8, 190, 463, 502, 589, 590], "possibli": [1, 4, 17, 19, 31, 106, 108, 109, 110, 111, 112, 113, 115, 118, 156, 157, 158, 159, 160, 161, 193, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 265, 415, 420, 539, 650, 651, 665], "access": [1, 6, 8, 18, 20, 21, 115, 240, 260, 261, 269, 475, 476, 487], "respect": [1, 3, 4, 7, 8, 9, 11, 17, 19, 20, 26, 30, 31, 108, 111, 115, 156, 157, 158, 159, 160, 161, 169, 182, 183, 184, 185, 196, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 268, 316, 415, 463, 491, 496, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 537, 540, 541, 546, 549, 551, 564, 586, 587, 588, 594, 650, 651, 667, 743, 745, 750], "nme": [1, 8, 17, 315, 316, 317, 318, 319, 349, 362, 364, 381, 383, 384, 420, 427], "pull": [1, 17], "dme": [1, 3, 4, 12, 17, 19, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 349, 390, 420], "describ": [1, 2, 3, 6, 7, 12, 17, 18, 19, 20, 26, 31, 43, 62, 106, 109, 110, 114, 115, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 420, 462, 487, 496, 537, 564, 617, 657], "more": [1, 3, 6, 7, 8, 9, 12, 17, 19, 40, 41, 43, 106, 108, 109, 111, 113, 114, 115, 158, 203, 208, 209, 216, 218, 221, 258, 260, 262, 265, 268, 269, 313, 314, 315, 316, 317, 318, 319, 321, 349, 415, 420, 463, 467, 471, 472, 473, 474, 475, 488, 489, 514, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 617, 618, 642, 654, 657, 658, 659, 660, 661, 663, 664, 748, 782], "detail": [1, 3, 4, 8, 9, 17, 19, 20, 21, 26, 30, 31, 36, 42, 43, 44, 45, 59, 60, 62, 66, 74, 81, 82, 83, 84, 102, 106, 109, 110, 114, 115, 116, 121, 123, 154, 156, 158, 161, 162, 175, 182, 184, 190, 191, 192, 194, 201, 203, 214, 216, 218, 221, 222, 238, 251, 255, 256, 258, 261, 262, 265, 268, 269, 314, 315, 316, 317, 318, 319, 321, 415, 420, 471, 472, 473, 474, 487, 495, 496, 497, 502, 505, 507, 511, 514, 515, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 541, 545, 546, 548, 589, 594, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 644, 646, 657, 658, 660, 661, 664, 671, 675, 676, 677, 678, 679, 680, 681, 750, 763, 781], "summari": [1, 3, 17, 18, 20, 74, 79, 80, 96, 97, 98, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 245, 246, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 303, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 440, 443, 444, 445, 448, 449, 450, 451, 452, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 487, 498, 594, 608], "inherit": [1, 2, 3, 4, 7, 8, 17, 18, 19, 261, 268, 269, 315, 316, 317, 318, 319, 321, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 415, 417, 418, 419, 420, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435, 438, 439, 441, 442, 443, 446, 447, 449, 451, 453, 454, 455, 458, 459, 460, 461, 463, 464, 467, 471, 472, 476, 751], "repres": [1, 6, 8, 12, 17, 20, 42, 60, 106, 115, 120, 316, 415, 420, 548, 549, 573, 579, 594, 617, 618], "abstract": [1, 7, 17, 19, 107, 114, 265, 268, 269, 314, 315, 316, 321, 322, 325, 328, 329, 330, 335, 342, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 369, 373, 379, 380, 383, 386, 389, 395, 396, 403, 409, 415, 416, 420, 421, 422, 426, 427, 433, 436, 437, 440, 444, 445, 450, 452, 456, 457, 463], "displai": [1, 3, 17, 19, 26, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 247, 249, 250, 252, 253, 262, 265, 268, 284, 320, 321, 415, 420, 463, 475, 476, 478, 487, 497, 645, 646, 648, 649, 651, 652], "border": 1, "concret": [1, 3, 7, 8, 17, 19, 262, 265, 269, 315, 316, 317, 318, 319, 321, 415, 417, 418, 419], "doubl": [1, 26, 30, 31, 43, 62, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 241, 249, 260, 262, 269, 284, 285, 286, 287, 289, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 316, 317, 318, 319, 321, 391, 415, 416, 417, 418, 419, 420, 463, 468, 541, 581, 650, 651, 750], "signific": [1, 108, 115, 540], "portion": [1, 4, 20, 268, 316, 587, 617, 749, 761, 762], "implement": [1, 2, 3, 4, 6, 7, 8, 11, 14, 16, 17, 18, 19, 22, 23, 24, 25, 38, 42, 105, 106, 107, 109, 110, 114, 115, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 170, 174, 185, 190, 203, 210, 219, 239, 242, 243, 256, 257, 260, 261, 262, 265, 266, 268, 269, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311, 313, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 338, 340, 342, 344, 345, 346, 347, 348, 349, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 420, 421, 422, 423, 425, 426, 427, 433, 436, 437, 444, 449, 450, 451, 456, 461, 463, 464, 465, 466, 467, 468, 469, 475, 480, 487, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 578, 594, 617, 642, 662, 725, 729, 742, 743, 744, 745], "greatli": 1, "reduc": [1, 7, 26, 583, 594], "effort": 1, "involv": [1, 2, 7, 8, 17, 19], "distinguish": [1, 190, 502], "pss": [1, 4, 265, 645, 646, 647, 648, 649, 650, 651, 652, 665], "raw": [1, 4, 213, 265, 467, 534, 594, 608, 616, 617, 625, 645, 646, 647, 648, 649, 650, 651, 652, 665], "dc": [1, 7, 9, 18, 43, 55, 66, 68, 69, 70, 71, 95, 163, 169, 260, 261, 267, 276, 295, 296, 297, 315, 319, 321, 340, 341, 348, 350, 360, 366, 368, 376, 378, 392, 394, 395, 396, 397, 398, 399, 400, 406, 412, 419, 425, 432, 443, 444, 445, 446, 447, 448, 455, 460, 466, 468, 472, 485, 533, 534, 535, 540, 548, 582, 584, 585, 594, 608, 617, 647, 658, 659, 660, 676, 688, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 731, 742, 743, 745, 769], "cartesian": [1, 2, 7, 8, 18, 21, 315, 316, 317, 322, 323, 324, 330, 331, 332, 333, 334, 344, 345, 353, 354, 355, 356, 364, 371, 374, 381, 384, 417, 423, 428, 430, 431, 434, 438, 441, 446, 453, 458, 471, 472, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 594, 611, 612, 613, 614, 615, 619, 620, 773, 775], "goe": [1, 106, 114], "which": [1, 2, 3, 4, 6, 7, 8, 12, 13, 17, 18, 19, 21, 26, 30, 40, 41, 42, 59, 60, 62, 63, 64, 79, 80, 108, 109, 111, 114, 115, 141, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 247, 253, 259, 263, 268, 313, 315, 316, 319, 321, 349, 415, 416, 420, 480, 487, 488, 489, 496, 497, 502, 505, 511, 514, 515, 521, 536, 537, 539, 540, 541, 542, 546, 548, 550, 551, 564, 573, 588, 594, 608, 610, 611, 612, 613, 614, 615, 617, 618, 621, 643, 644, 650, 651, 657, 658, 659, 660, 661, 662, 663, 664, 666, 668, 669, 745, 746, 750, 783], "element_contain": [1, 2, 3, 4, 7, 8, 258, 262, 265, 321, 415, 485], "mixin": [1, 307, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 485], "share": [1, 3, 5, 6, 8, 17, 19, 307, 321, 344, 345, 346, 347, 353, 470, 548], "mention": [1, 11, 12, 476, 745], "abov": [1, 2, 11, 12, 13, 17, 19, 20, 26, 31, 42, 43, 63, 106, 114, 115, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 241, 257, 260, 476, 496, 551, 566, 567, 568, 570, 571, 577, 594, 608, 745, 746], "address": [1, 170, 476], "index": [1, 3, 4, 8, 9, 12, 13, 17, 19, 30, 59, 62, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 193, 194, 203, 260, 262, 268, 269, 284, 290, 292, 293, 296, 298, 300, 301, 305, 308, 311, 317, 320, 321, 391, 415, 416, 417, 418, 420, 475, 476, 487, 488, 489, 490, 492, 493, 494, 496, 502, 503, 536, 537, 538, 539, 540, 550, 564, 565, 566, 567, 568, 569, 570, 571, 580, 594, 610, 611, 612, 613, 614, 615, 625, 632, 633, 634, 635, 636, 639, 649, 651, 652, 657, 668, 669, 743, 745, 746], "suppli": [1, 26, 31, 79, 80, 106, 108, 109, 110, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 488, 537, 564, 574, 585, 594, 608, 644], "properti": [1, 2, 4, 6, 7, 8, 17, 19, 106, 107, 108, 109, 111, 112, 113, 114, 115, 259, 262, 265, 268, 275, 278, 279, 282, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 307, 308, 311, 313, 315, 316, 319, 321, 389, 396, 415, 416, 417, 418, 419, 420, 462, 463, 464, 465, 466, 467, 468, 469, 476, 486, 487], "element_class": [1, 2, 3, 4, 7, 8, 17, 19, 262, 265, 313], "sometim": [1, 3, 7, 108, 321], "certain": [1, 4, 8, 11, 30, 464], "across": [1, 7, 8, 42, 60, 62, 321, 381, 382, 384, 385, 470, 491, 577, 743], "wai": [1, 2, 6, 12, 17, 116, 121, 122, 123, 154, 162, 163, 188, 314, 475, 594, 617, 618, 742], "match": [1, 2, 4, 42, 60, 61, 66, 115, 156, 157, 158, 159, 160, 161, 179, 181, 247, 249, 251, 253, 256, 268, 320, 381, 382, 384, 385, 538, 565, 574, 640, 756, 757, 758, 759, 761, 762], "path": [1, 13, 14, 15, 16, 61, 77, 78, 79, 80, 247, 256, 315, 477, 478, 542, 590], "current": [1, 2, 7, 9, 14, 16, 19, 20, 21, 26, 29, 30, 43, 74, 75, 77, 78, 79, 80, 110, 115, 124, 154, 155, 162, 164, 175, 185, 189, 190, 192, 193, 195, 196, 198, 199, 200, 203, 208, 209, 210, 244, 284, 300, 316, 317, 318, 320, 323, 326, 329, 331, 332, 336, 337, 344, 346, 353, 355, 358, 380, 388, 402, 414, 415, 416, 463, 465, 467, 468, 469, 470, 475, 476, 477, 478, 479, 481, 482, 483, 484, 486, 488, 492, 496, 501, 502, 503, 504, 506, 508, 509, 510, 512, 513, 517, 518, 519, 520, 522, 523, 524, 525, 528, 529, 530, 542, 573, 587, 588, 589, 590, 594, 608, 609, 611, 612, 613, 621, 623, 624, 645, 665, 783], "approach": [1, 2, 17, 478], "util": [1, 21, 115, 239, 485], "first": [1, 2, 3, 4, 7, 8, 12, 17, 19, 26, 31, 43, 61, 62, 63, 64, 77, 78, 79, 80, 111, 112, 115, 118, 120, 154, 159, 165, 166, 168, 169, 184, 197, 201, 204, 210, 211, 219, 241, 260, 314, 320, 415, 420, 475, 478, 481, 483, 484, 496, 502, 515, 522, 539, 540, 542, 575, 586, 617, 618, 642, 643, 649, 652, 657, 663, 668, 743], "we": [1, 3, 6, 8, 12, 13, 17, 18, 19, 106, 111, 114, 115, 117, 119, 204, 256, 497, 590], "wrap": 1, "insid": [1, 313, 476], "inher": 1, "limit": [1, 3, 7, 11, 12, 17, 18, 19, 26, 31, 43, 74, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 191, 195, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 262, 284, 285, 289, 295, 297, 316, 317, 325, 362, 373, 374, 391, 423, 464, 466, 468, 474, 502, 504, 505, 510, 511, 513, 514, 520, 521, 566, 567, 570, 571, 577, 594, 608, 617, 618, 621, 622, 657, 662, 663, 675, 725, 743, 744, 745, 748, 749], "order": [1, 2, 7, 11, 17, 19, 26, 30, 31, 42, 43, 60, 61, 62, 81, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 162, 184, 188, 201, 260, 313, 315, 420, 467, 487, 488, 492, 493, 494, 496, 515, 534, 537, 538, 539, 540, 564, 565, 568, 572, 581, 582, 583, 585, 588, 594, 608, 616, 617, 639, 657, 658, 659, 660, 661, 663, 664], "backward": [1, 20, 62, 116, 121, 123, 154, 162, 539, 572, 581, 590, 594, 617, 618, 654, 746], "compat": [1, 20, 62, 111, 116, 121, 123, 154, 162, 467, 475, 480, 539, 572, 581, 594, 617, 618, 658, 659, 660, 661, 663, 664, 746, 783], "mechan": [1, 6, 18, 350, 742], "intern": [1, 3, 6, 17, 19, 62, 109, 114, 115, 170, 415, 420, 487, 488, 490, 496, 502, 534, 536, 537, 538, 539, 548, 564, 565, 572, 581, 582, 583, 585, 588, 616, 617, 625, 632, 654, 657, 658, 659, 660, 661, 663, 664, 683, 783], "all": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 26, 29, 31, 36, 42, 43, 60, 62, 63, 64, 65, 75, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 189, 190, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 238, 241, 244, 249, 251, 255, 256, 259, 260, 262, 268, 269, 275, 284, 290, 292, 293, 296, 298, 300, 301, 307, 308, 311, 315, 316, 317, 318, 319, 321, 349, 351, 352, 353, 354, 357, 391, 415, 416, 417, 418, 419, 420, 463, 474, 478, 487, 488, 489, 491, 502, 505, 511, 515, 521, 523, 528, 529, 530, 531, 532, 535, 539, 540, 541, 546, 567, 569, 571, 572, 574, 575, 576, 580, 583, 588, 590, 594, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 621, 622, 625, 632, 647, 648, 651, 654, 657, 658, 659, 660, 661, 663, 664, 668, 745, 746, 750, 781], "even": [1, 2, 20, 21, 42, 43, 79, 80, 158, 190, 208, 209, 216, 218, 221, 502, 594, 608], "importantli": 1, "extens": [1, 5, 11, 14, 16, 17, 20, 21, 61, 241, 265, 332, 334, 337, 339, 341, 463, 471, 472, 473, 474, 479, 481, 482, 483, 484, 485, 559, 575, 665, 666, 667, 688, 742, 769, 770, 783], "suit": [1, 256], "second": [1, 3, 4, 7, 8, 12, 17, 18, 19, 20, 43, 63, 64, 79, 80, 111, 112, 116, 121, 122, 123, 154, 162, 188, 215, 220, 241, 256, 320, 420, 463, 481, 495, 499, 540, 544, 617, 642, 644, 657, 658, 659, 660, 661, 663, 664], "abl": [1, 42, 263, 478, 496], "make": [1, 7, 8, 13, 18, 19, 21, 59, 106, 114, 115, 241, 260, 262, 265, 298, 415, 420, 470, 478, 486, 496, 580], "full": [1, 7, 8, 12, 30, 42, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 170, 175, 192, 196, 203, 251, 315, 316, 317, 319, 350, 391, 415, 416, 420, 487, 500, 519, 535, 541, 546, 583, 585, 588, 594, 610, 611, 612, 613, 614, 615, 618, 657, 663, 750, 783], "scope": 1, "end": [1, 2, 8, 9, 12, 17, 18, 19, 26, 43, 66, 78, 106, 108, 109, 110, 111, 112, 113, 114, 115, 171, 173, 175, 176, 177, 178, 182, 183, 184, 185, 197, 203, 204, 211, 241, 247, 251, 256, 268, 284, 285, 296, 297, 298, 311, 316, 319, 320, 321, 463, 475, 476, 487, 488, 491, 496, 499, 502, 528, 529, 531, 547, 548, 549, 566, 568, 570, 582, 617, 621, 622, 649, 650, 651, 652, 657, 658, 659, 660, 661, 663, 664, 666, 667], "take": [1, 4, 7, 8, 9, 12, 17, 18, 19, 43, 62, 108, 109, 110, 111, 112, 115, 190, 201, 202, 241, 321, 416, 419, 489, 502, 515, 522, 523, 524, 525, 526, 527, 529, 530, 542, 566, 569, 570, 574, 581, 593, 746], "advantag": [1, 17, 19], "capabl": [1, 19, 38, 240, 257, 292, 390, 391, 473, 496, 551, 571, 578, 617, 749], "add": [1, 2, 3, 4, 6, 7, 8, 13, 17, 18, 19, 21, 30, 39, 40, 41, 42, 59, 60, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 190, 256, 258, 262, 264, 265, 267, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 320, 321, 349, 350, 389, 396, 415, 416, 417, 418, 419, 420, 428, 429, 430, 431, 432, 433, 437, 440, 443, 445, 448, 464, 465, 466, 467, 469, 471, 472, 474, 478, 487, 488, 489, 502, 569, 745], "multiphas": 1, "unbalanc": [1, 2, 3, 20, 262, 314, 471, 755], "hybrid": [1, 20, 594, 612, 615, 756, 757, 758, 759, 760, 761, 762, 779], "own": [1, 2, 3, 4, 6, 7, 8, 21, 173, 175, 190, 201, 202, 256, 257, 262, 268, 269, 349, 420, 502, 515, 540], "version": [1, 4, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 37, 38, 43, 75, 104, 114, 115, 116, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 163, 164, 189, 190, 239, 241, 242, 243, 244, 256, 257, 260, 263, 265, 266, 315, 463, 478, 485, 496, 502, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 575, 581, 583, 594, 608, 609, 646, 658, 659, 660, 661, 663, 664, 666, 746, 755, 783], "run_pf": [1, 2, 17, 18, 20, 477, 479, 482, 485, 779], "run_cpf": [1, 2, 17, 18, 20, 477, 479, 482, 485, 779], "run_opf": [1, 2, 12, 17, 18, 20, 477, 479, 482, 485, 779, 780, 783], "underscor": [1, 783], "One": [1, 8, 756, 757, 758, 759], "differ": [1, 2, 4, 7, 17, 19, 20, 26, 31, 42, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 190, 199, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 247, 249, 268, 284, 285, 321, 362, 364, 365, 366, 423, 470, 475, 488, 491, 496, 498, 502, 538, 566, 577, 589, 594, 608, 619, 620, 746], "remov": [1, 3, 13, 17, 19, 43, 262, 313, 478, 539, 543, 572, 581, 584, 594, 655, 745, 746], "offlin": [1, 3, 7, 17, 19, 262, 268, 349, 580], "equip": [1, 625, 632], "renumb": [1, 539], "buse": [1, 2, 3, 4, 8, 17, 18, 19, 20, 43, 60, 74, 262, 268, 286, 287, 292, 293, 296, 370, 374, 375, 376, 377, 378, 489, 490, 492, 493, 494, 495, 500, 502, 508, 509, 512, 514, 517, 528, 529, 530, 531, 532, 535, 539, 540, 541, 544, 546, 564, 567, 572, 577, 585, 588, 589, 590, 594, 610, 611, 612, 613, 614, 615, 633, 634, 635, 636, 639, 648, 657, 668, 745, 746, 750, 756, 757, 758, 759, 760, 761, 762], "consecut": [1, 4, 17, 62, 490, 539, 572, 581, 582, 583, 585, 588], "ext2int": [1, 485, 488, 534, 537, 538, 565, 572, 583, 588, 616, 617, 632, 682, 683, 689, 751], "int2ext": [1, 485, 488, 539, 564, 565, 682, 683, 689, 742, 743, 744, 745, 751], "result": [1, 2, 3, 8, 11, 59, 74, 77, 78, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 160, 179, 181, 190, 193, 220, 221, 245, 246, 247, 249, 250, 253, 256, 262, 265, 316, 321, 415, 416, 463, 465, 467, 469, 476, 478, 479, 481, 482, 483, 484, 488, 496, 497, 502, 503, 505, 507, 511, 514, 519, 521, 534, 540, 549, 574, 580, 584, 594, 608, 616, 617, 618, 625, 644, 645, 654, 657, 658, 659, 660, 661, 662, 663, 664, 686, 687, 742, 743, 744, 745, 748], "callback": [1, 2, 190, 191, 192, 193, 201, 203, 325, 467, 485, 488, 496, 502, 503, 504, 505, 506, 507, 510, 511, 513, 514, 515, 518, 519, 520, 521, 539, 594, 655, 656, 657, 686, 687, 725, 729, 737, 742, 743, 744, 745], "necessari": [1, 3, 7, 17, 113, 115, 262, 268, 349, 468, 496, 511, 514, 666, 667], "so": [1, 2, 3, 4, 7, 8, 12, 13, 17, 18, 20, 21, 26, 59, 170, 256, 259, 261, 269, 420, 471, 472, 476, 497, 643, 668], "motiv": 1, "behind": [1, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "facilit": [1, 21], "who": [1, 6, 107, 108, 109, 111, 113, 247], "want": [1, 6, 17, 77, 78, 79, 80, 162, 583], "possibl": [1, 3, 19, 30, 43, 60, 77, 78, 79, 114, 593, 617, 618, 650, 657, 668, 745, 748], "overrid": [1, 2, 11, 12, 17, 18, 19, 106, 115, 116, 121, 122, 123, 154, 156, 157, 158, 160, 161, 162, 173, 182, 183, 184, 188, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 303, 309, 348, 364, 463, 475, 586, 594, 608, 654, 657, 658, 659, 660, 661, 663, 664, 704, 745], "behavior": [1, 2, 76, 170, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 668, 745], "complet": [1, 3, 7, 11, 12, 17, 18, 19, 21, 60, 108, 109, 111, 113, 115, 178, 196, 203, 262, 463, 489, 518, 539, 572, 594, 745, 783], "often": [1, 9, 74], "see": [1, 2, 3, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 40, 41, 42, 43, 44, 45, 59, 60, 62, 66, 74, 75, 76, 81, 82, 83, 84, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 238, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 295, 313, 314, 315, 316, 317, 318, 319, 320, 321, 349, 415, 416, 417, 418, 419, 420, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 491, 492, 493, 494, 496, 497, 500, 502, 505, 507, 508, 509, 511, 514, 515, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 581, 582, 583, 584, 585, 586, 588, 589, 590, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 671, 675, 676, 677, 678, 679, 680, 681, 742, 743, 744, 745, 746, 748, 749, 750, 751, 763, 781, 783], "essenti": [1, 3, 19, 314, 415], "modif": [1, 2, 6, 12, 60, 81, 314, 463, 569, 745], "addit": [1, 2, 3, 8, 12, 17, 18, 19, 20, 21, 30, 39, 42, 43, 62, 64, 105, 106, 109, 114, 262, 268, 314, 415, 479, 481, 482, 483, 484, 488, 489, 496, 534, 537, 538, 540, 548, 551, 564, 565, 567, 568, 569, 578, 616, 617, 618, 648, 656, 658, 660, 661, 662, 664, 676, 748, 783], "made": [1, 3, 58, 60, 62, 108, 109, 110, 111, 112, 115, 241, 539, 569], "default": [1, 3, 4, 5, 6, 11, 12, 14, 17, 18, 19, 26, 30, 31, 36, 40, 41, 61, 62, 63, 64, 66, 76, 77, 78, 79, 80, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 188, 190, 194, 201, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 238, 245, 247, 251, 255, 260, 262, 263, 264, 268, 269, 314, 316, 319, 322, 325, 348, 349, 415, 416, 417, 418, 419, 420, 463, 464, 466, 468, 475, 478, 479, 482, 487, 496, 497, 502, 515, 537, 541, 546, 564, 571, 574, 576, 585, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617, 618, 644, 645, 646, 648, 649, 651, 652, 654, 657, 658, 659, 660, 661, 663, 664, 668, 709, 718, 745, 746, 750, 780, 781, 783], "henc": [1, 43], "earli": 1, "cycl": [1, 7, 548], "should": [1, 6, 11, 13, 17, 19, 61, 109, 110, 115, 163, 165, 166, 168, 169, 179, 181, 190, 256, 262, 268, 321, 420, 488, 497, 502, 538, 540, 565, 580, 585, 608, 617, 618, 633, 634, 635, 636, 668, 756, 757, 758, 759, 761, 762], "execut": [1, 5, 116, 121, 122, 123, 154, 162, 188, 201, 245, 463, 478, 515, 625, 656], "successfulli": [1, 534, 616, 617], "command": [1, 6, 21, 37, 104, 114, 115, 239, 256, 477, 478, 487, 783], "without": [1, 3, 4, 6, 7, 8, 9, 29, 43, 75, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 155, 164, 189, 244, 268, 502, 540, 609], "With": [2, 29, 43, 75, 108, 111, 112, 115, 116, 121, 122, 123, 124, 154, 155, 162, 164, 188, 189, 244, 478, 487, 496, 586, 609, 745], "object": [2, 5, 6, 12, 17, 18, 19, 25, 26, 31, 66, 74, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 156, 157, 158, 159, 160, 161, 179, 180, 181, 182, 183, 184, 185, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 262, 263, 264, 265, 268, 269, 285, 289, 295, 297, 305, 306, 307, 313, 314, 315, 316, 320, 321, 322, 325, 328, 329, 330, 335, 342, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 415, 416, 417, 418, 419, 420, 463, 465, 466, 467, 469, 470, 475, 476, 479, 481, 482, 483, 484, 487, 488, 534, 566, 567, 570, 571, 616, 617, 625, 632, 644, 748], "architectur": [2, 5], "outlin": [2, 3], "section": [2, 3, 6, 7, 8, 9, 12, 17, 18, 19, 116, 121, 123, 154, 159, 251, 256, 262, 264, 265, 268, 269, 285, 288, 289, 291, 294, 295, 297, 298, 299, 302, 304, 307, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 349, 415, 420, 463, 471, 472, 473, 474, 594, 645, 649, 651, 652, 751, 783], "customiz": 2, "increas": [2, 43, 203, 517], "dramat": 2, "ones": [2, 9, 17, 19, 487, 522, 526, 529, 530, 531, 532, 594], "import": [2, 3, 6, 19, 43, 262, 265, 266, 269, 277, 280], "understand": [2, 6], "how": [2, 3, 4, 8, 19, 60, 114, 170, 256, 258, 268, 478, 488, 585, 650, 651], "select": [2, 9, 18, 30, 43, 115, 163, 165, 166, 167, 168, 169, 175, 315, 316, 317, 319, 416, 417, 418, 420, 464, 466, 468, 478, 500, 585, 657, 748], "instanti": [2, 3, 4, 7, 8, 262, 265, 463], "There": [2, 3, 8, 11, 12, 17, 42, 108, 116, 121, 122, 123, 154, 162, 188, 256, 478, 496], "sever": [2, 6, 17, 256, 496, 538], "below": [2, 3, 12, 17, 19, 20, 37, 59, 62, 63, 64, 104, 108, 109, 110, 111, 113, 115, 182, 203, 239, 476, 487, 496, 502, 522, 528, 536, 537, 551, 564, 566, 567, 568, 570, 571, 577, 578, 617, 618, 748], "illustr": [2, 4, 7, 8, 11, 19, 114, 488], "invok": [2, 7, 190, 502, 515, 539], "fact": [2, 17, 19], "simpl": [2, 3, 7, 8, 17, 20, 66, 79, 80, 106, 109, 115, 481, 483, 484, 533, 644, 742, 778], "wrapper": [2, 6, 31, 38, 156, 157, 158, 159, 160, 161, 173, 175, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 481, 482, 483, 484, 485, 533], "run_mp": [2, 6, 477, 481, 483, 484, 485, 778], "onli": [2, 4, 7, 8, 12, 13, 17, 18, 21, 58, 59, 64, 106, 108, 109, 110, 111, 112, 114, 115, 116, 121, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 190, 194, 203, 219, 245, 247, 253, 256, 268, 269, 320, 349, 415, 420, 465, 467, 469, 471, 472, 475, 476, 486, 502, 522, 539, 548, 549, 551, 569, 572, 585, 586, 594, 608, 617, 618, 621, 622, 642, 643, 668, 746], "valu": [2, 3, 7, 8, 18, 19, 26, 29, 30, 31, 42, 45, 58, 59, 60, 61, 62, 63, 64, 66, 74, 75, 76, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 244, 249, 259, 260, 262, 268, 269, 284, 298, 303, 309, 315, 320, 321, 415, 416, 420, 463, 465, 466, 467, 469, 470, 478, 487, 488, 489, 490, 496, 497, 499, 500, 501, 502, 503, 504, 506, 508, 509, 510, 512, 513, 515, 516, 517, 518, 519, 520, 530, 532, 534, 537, 538, 540, 543, 544, 547, 548, 551, 564, 565, 567, 568, 569, 574, 581, 583, 586, 588, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 616, 617, 618, 621, 623, 630, 644, 657, 663, 668, 745, 746, 747, 748, 749], "task_class": [2, 314, 479, 482], "argument": [2, 3, 4, 7, 8, 18, 26, 29, 31, 61, 63, 64, 66, 75, 76, 77, 78, 79, 107, 109, 110, 113, 114, 115, 116, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 189, 190, 191, 192, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 244, 247, 253, 268, 269, 320, 475, 478, 481, 483, 484, 487, 488, 495, 502, 505, 507, 511, 514, 515, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 537, 538, 539, 540, 542, 545, 551, 557, 564, 565, 580, 583, 584, 586, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 617, 618, 644, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 748], "handl": [2, 4, 7, 8, 17, 19, 26, 77, 78, 79, 80, 106, 107, 109, 110, 114, 115, 157, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 191, 192, 201, 202, 203, 215, 239, 264, 266, 267, 268, 269, 307, 313, 314, 315, 316, 320, 325, 332, 334, 337, 339, 341, 349, 350, 351, 353, 420, 463, 464, 468, 470, 474, 478, 479, 480, 482, 496, 497, 500, 502, 505, 507, 511, 514, 517, 519, 521, 522, 540, 585, 608, 610, 611, 612, 613, 614, 615, 655], "constructor": [2, 3, 4, 7, 8, 17, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 260, 262, 263, 264, 266, 313, 314, 320, 322, 325, 330, 332, 334, 335, 337, 339, 340, 341, 343, 348, 417, 418, 419, 462, 463, 464, 466, 468, 475, 479, 480, 482, 487], "pass": [2, 3, 4, 7, 8, 11, 12, 15, 17, 18, 20, 26, 61, 63, 64, 116, 121, 122, 123, 154, 162, 170, 173, 178, 182, 183, 184, 185, 188, 190, 203, 241, 247, 249, 250, 251, 253, 256, 268, 321, 463, 473, 475, 479, 488, 502, 515, 537, 538, 539, 542, 564, 565, 594, 617, 618, 650, 783], "mean": [2, 3, 17, 19, 20, 42, 60, 108, 114, 115, 173, 175, 203, 300, 308, 420, 536, 566, 567, 568, 569, 570, 571, 594, 617, 618], "either": [2, 3, 6, 8, 17, 26, 42, 61, 66, 106, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 123, 154, 159, 162, 188, 192, 219, 262, 321, 415, 476, 528, 538, 540, 551, 565, 575, 581, 594, 617, 618, 644, 650, 657, 658, 659, 660, 661, 663, 664, 666, 668, 746, 748], "two": [2, 3, 4, 5, 6, 7, 8, 12, 17, 19, 43, 79, 80, 109, 110, 111, 112, 115, 169, 247, 249, 253, 262, 268, 320, 474, 476, 478, 481, 494, 496, 498, 530, 532, 539, 548, 551, 572, 581, 586, 590, 643, 647, 648, 649, 651, 751], "descript": [2, 3, 4, 6, 8, 12, 17, 19, 20, 21, 30, 74, 114, 115, 203, 241, 260, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 488, 489, 548, 594, 608, 657, 662], "dm_converter_class": [2, 314, 463, 464], "final": [2, 17, 19, 20, 26, 31, 60, 66, 106, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 265, 415, 463, 502, 534, 537, 540, 541, 546, 564, 610, 611, 612, 613, 614, 615, 616, 617, 746, 750], "data_model_class": [2, 314, 463], "network_model_class": [2, 314, 463], "math_model_class": [2, 314, 463], "dm_converter_class_mpc2_default": [2, 463, 467], "data_model_class_default": [2, 463, 464, 466], "network_model_class_default": [2, 463, 466, 468], "math_model_class_default": [2, 463, 464, 466, 467, 468], "tabl": [2, 4, 6, 12, 13, 18, 19, 20, 39, 40, 41, 42, 54, 55, 56, 57, 60, 62, 63, 64, 260, 261, 262, 268, 269, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 313, 314, 320, 465, 467, 469, 471, 472, 473, 474, 475, 476, 480, 489, 536, 548, 562, 569, 667, 684, 768], "last": [2, 7, 108, 111, 115, 190, 198, 199, 200, 203, 314, 415, 475, 476, 502, 580, 643, 649, 652, 655], "cell": [2, 3, 4, 11, 12, 13, 14, 16, 17, 39, 42, 61, 62, 63, 64, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 170, 172, 190, 193, 201, 202, 203, 205, 208, 209, 210, 247, 251, 253, 260, 262, 268, 269, 298, 313, 314, 315, 316, 317, 318, 319, 320, 321, 391, 415, 420, 463, 475, 479, 481, 482, 483, 484, 487, 497, 499, 502, 503, 515, 537, 538, 540, 543, 544, 547, 548, 564, 565, 594, 626, 627, 645, 646, 648, 649, 650, 651, 652, 666, 667, 669], "arrai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 39, 42, 60, 61, 62, 63, 64, 75, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 124, 155, 164, 170, 171, 172, 174, 176, 177, 178, 189, 190, 193, 194, 197, 201, 202, 203, 204, 205, 208, 209, 210, 211, 241, 244, 247, 249, 250, 251, 252, 253, 260, 262, 265, 266, 268, 269, 298, 313, 314, 315, 316, 317, 318, 319, 320, 321, 349, 391, 415, 420, 463, 475, 479, 481, 482, 483, 484, 487, 497, 499, 502, 503, 515, 537, 538, 540, 543, 544, 547, 548, 564, 565, 594, 609, 626, 627, 645, 646, 648, 649, 650, 651, 652, 657, 666, 667, 669], "popul": [2, 17, 19, 467, 488, 656], "parent": [2, 12, 17, 19, 170, 268, 285, 288, 289, 291, 294, 295, 297, 299, 302, 303, 304, 309, 310, 312, 315, 416, 419, 420, 465, 467, 469], "runtim": [2, 215, 220], "done": [2, 3, 7, 8, 17, 19, 81, 170, 190, 191, 192, 261, 476, 502, 505, 507, 511, 514, 519, 521, 642, 686, 687], "delet": [2, 13, 247, 320], "replac": [2, 17, 19, 60, 79, 80, 114, 115, 247, 253, 313, 473, 489, 502, 569, 584, 594, 745], "entri": [2, 3, 4, 17, 42, 60, 106, 114, 194, 268, 269, 313, 321, 415, 650, 651], "action": [2, 11], "new_class": 2, "append": [2, 39, 40, 41, 59, 116, 121, 123, 154, 162, 264, 268, 313, 320, 488, 657, 658, 659, 660, 661, 663, 664], "old_class": 2, "isa": [2, 313], "true": [2, 14, 17, 30, 36, 66, 77, 78, 102, 106, 107, 108, 109, 111, 113, 114, 115, 190, 193, 238, 241, 245, 247, 249, 250, 251, 252, 253, 255, 259, 260, 262, 268, 269, 286, 287, 313, 320, 415, 420, 466, 468, 475, 476, 478, 488, 502, 551, 583, 584, 617, 644, 657, 663, 668, 745, 746, 748, 781], "typic": [2, 3, 4, 7, 8, 11, 17, 19, 262, 268, 269, 349, 420, 482, 488, 566, 567, 570, 571, 651, 652], "multipl": [2, 116, 121, 122, 123, 154, 162, 188, 201, 203, 240, 268, 420, 476, 478, 489, 502, 515, 537, 543, 564, 594, 608], "sequenti": [2, 3, 7, 8, 11, 247, 253], "modify_element_class": [2, 313], "previous": [2, 66, 115], "avail": [2, 10, 17, 19, 21, 22, 23, 24, 25, 26, 37, 104, 107, 115, 116, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 162, 169, 210, 219, 239, 241, 242, 243, 257, 260, 305, 416, 463, 464, 470, 476, 478, 480, 481, 482, 483, 484, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 542, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 594, 608, 617, 652, 668, 782, 783], "affect": [2, 12, 42, 60, 476, 478, 569, 745], "v": [2, 8, 9, 29, 45, 75, 76, 106, 108, 109, 110, 111, 112, 113, 115, 124, 155, 164, 172, 174, 189, 244, 298, 300, 308, 316, 350, 354, 357, 360, 415, 420, 487, 492, 493, 494, 496, 500, 501, 502, 508, 509, 512, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 541, 546, 567, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 640, 657, 750, 773, 774, 775, 776], "voltag": [2, 3, 8, 9, 17, 18, 19, 20, 43, 262, 268, 284, 285, 286, 287, 289, 292, 293, 296, 300, 308, 315, 316, 317, 318, 319, 325, 354, 355, 356, 357, 358, 359, 364, 365, 371, 372, 373, 374, 375, 381, 382, 383, 384, 385, 415, 416, 417, 418, 419, 420, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 453, 454, 458, 459, 464, 466, 468, 471, 472, 481, 484, 491, 492, 493, 494, 496, 500, 502, 508, 509, 512, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 537, 541, 546, 549, 564, 566, 567, 570, 571, 577, 582, 583, 586, 587, 588, 589, 590, 594, 608, 610, 611, 612, 613, 614, 615, 617, 619, 620, 633, 634, 635, 636, 637, 638, 639, 654, 657, 658, 659, 660, 661, 663, 664, 741, 746, 750, 782], "represent": [2, 3, 8, 17, 18, 19, 420, 471, 472, 594, 610, 611, 612, 613, 614, 615], "balanc": [2, 3, 7, 66, 74, 262, 289, 321, 323, 324, 326, 327, 329, 331, 333, 336, 338, 340, 344, 345, 346, 347, 348, 353, 355, 356, 358, 359, 416, 524, 525, 530, 594, 610, 611, 612, 613, 614, 615, 623, 624, 630, 631, 634, 636, 638, 782], "experiment": [2, 74, 470, 594], "come": [2, 17, 20, 416, 496, 755], "These": [2, 3, 7, 17, 19, 38, 42, 60, 105, 106, 190, 201, 202, 240, 257, 420, 477, 487, 502, 515, 742, 743, 744, 745], "summar": [2, 4, 6, 9, 17, 18, 19, 20, 21, 42, 117], "assign": [2, 4, 8, 17, 29, 75, 114, 124, 155, 164, 170, 189, 244, 262, 263, 264, 268, 269, 320, 321, 322, 325, 417, 418, 419, 475, 476, 502, 515, 567, 568, 609, 669], "exp": [2, 12, 470, 594, 783], "must": [2, 8, 12, 17, 19, 31, 39, 42, 60, 62, 66, 106, 107, 110, 111, 114, 115, 116, 121, 122, 123, 154, 162, 188, 208, 209, 210, 249, 260, 261, 262, 265, 268, 269, 315, 316, 317, 318, 319, 320, 349, 415, 420, 463, 475, 476, 478, 487, 548, 566, 567, 570, 571, 574, 580, 581, 582, 583, 585, 588, 642, 662, 742], "sinc": [2, 7, 8, 12, 17, 19, 26, 43, 114, 115, 119, 163, 182, 183, 184, 185, 260, 475, 476, 497], "doe": [2, 6, 7, 8, 19, 42, 114, 157, 215, 268, 321, 349, 463, 475, 480, 497, 548, 575, 581, 582, 588, 594, 641, 643, 665, 750], "recogn": [2, 496], "dmc_element_class": [2, 18, 314, 471, 472, 474], "dm_element_class": [2, 18, 314, 471, 472, 474], "nm_element_class": [2, 18, 314, 471, 472], "mm_element_class": [2, 12, 18, 314, 471, 472, 473, 474], "exclude_el": 2, "exclud": [2, 745], "char": [2, 14, 15, 16, 17, 29, 30, 75, 106, 107, 108, 109, 110, 111, 112, 113, 115, 124, 155, 164, 189, 190, 202, 241, 244, 247, 249, 250, 252, 253, 262, 265, 266, 268, 269, 313, 314, 315, 317, 318, 319, 320, 349, 415, 420, 463, 609, 651], "framework": [2, 5, 6, 12, 21, 258, 314, 465, 467, 469, 481, 482, 483, 484, 486, 751], "api": [2, 17, 38, 314, 539, 572, 617, 618], "bundl": [2, 43, 314], "togeth": [2, 17, 19, 109, 115, 314, 487], "packag": [2, 6, 15, 17, 18, 21, 256, 314, 465, 467, 469, 486, 594, 608, 609, 617, 742, 743, 744, 745], "xt_reserv": [2, 18, 258, 314, 485, 770], "co": [2, 145, 744], "fix": [2, 17, 18, 66, 94, 114, 179, 181, 314, 374, 468, 474, 485, 489, 502, 569, 574, 633, 634, 635, 636, 645, 657, 662, 668, 675, 744, 746], "zonal": [2, 18, 66, 306, 314, 474, 485, 662, 744], "standard": [2, 7, 17, 19, 20, 31, 39, 62, 63, 64, 66, 107, 108, 109, 110, 111, 112, 113, 156, 157, 158, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 201, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 260, 262, 268, 463, 488, 496, 515, 547, 548, 626, 668, 746], "toggle_reserv": [2, 485, 488, 655, 656, 662, 751], "run_opf_w_r": 2, "7": [2, 8, 12, 17, 18, 20, 30, 31, 42, 66, 106, 115, 135, 143, 156, 157, 158, 159, 160, 161, 172, 203, 256, 321, 496, 566, 567, 570, 571, 594, 608, 751, 752, 783], "earlier": [2, 114, 496, 751, 783], "To": [2, 12, 13, 17, 18, 20, 43, 114, 115, 170, 285, 288, 289, 291, 294, 295, 297, 299, 302, 303, 304, 309, 310, 312, 476, 783], "you": [2, 3, 6, 9, 13, 17, 19, 37, 58, 60, 77, 78, 79, 80, 104, 106, 114, 115, 162, 239, 256, 260, 475, 476, 477, 478, 497, 583, 783], "mpx": [2, 12, 17, 18, 20, 314, 463, 464, 468, 479, 481, 482, 483, 484], "veri": [2, 74, 475, 540], "nine": [2, 783], "five": [2, 20, 471, 759], "someth": [2, 17, 77, 78, 79, 80, 114, 115, 116, 121, 122, 123, 154, 162, 188, 193, 256, 268, 503, 748], "complex": [2, 9, 17, 19, 249, 316, 317, 415, 416, 417, 418, 420, 464, 500, 502, 508, 509, 512, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 541, 546, 549, 586, 587, 588, 594, 610, 611, 612, 613, 614, 615, 633, 635, 637, 657, 750, 782], "phase": [2, 3, 18, 21, 262, 271, 273, 274, 277, 278, 283, 284, 287, 288, 290, 291, 293, 294, 298, 299, 301, 302, 311, 312, 314, 370, 371, 372, 379, 380, 381, 382, 383, 384, 385, 387, 388, 401, 402, 413, 414, 427, 428, 429, 433, 434, 435, 437, 438, 439, 449, 451, 461, 471, 485, 496, 566, 582, 755, 756, 757, 758, 759, 760, 761, 762, 779], "load": [2, 3, 4, 17, 18, 19, 20, 43, 47, 59, 60, 61, 62, 63, 64, 74, 81, 105, 262, 263, 268, 278, 279, 300, 301, 302, 303, 304, 390, 403, 404, 405, 406, 415, 450, 451, 452, 453, 454, 455, 463, 470, 471, 479, 489, 492, 493, 494, 496, 524, 547, 548, 569, 571, 573, 574, 575, 576, 579, 586, 587, 594, 617, 649, 657, 668, 741, 745, 746, 755], "term": [2, 8, 12, 17, 19, 26, 108, 109, 110, 111, 112, 114, 115, 120, 205, 208, 209, 210, 260, 284, 296, 316, 317, 318, 416, 496, 566, 570, 743], "pleas": [2, 17, 19, 21, 26, 37, 43, 44, 45, 81, 82, 83, 84, 104, 114, 115, 119, 154, 239, 256, 545, 592, 653, 671, 675, 676, 677, 678, 679, 680, 681, 763, 783], "xt_3p": [2, 18, 20, 258, 314, 485], "input": [3, 4, 6, 11, 12, 14, 15, 16, 17, 20, 26, 29, 30, 31, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 241, 244, 245, 247, 249, 250, 251, 252, 253, 259, 260, 262, 265, 267, 268, 269, 313, 314, 315, 316, 317, 318, 319, 320, 321, 349, 391, 415, 416, 417, 418, 419, 420, 463, 464, 465, 467, 469, 470, 478, 479, 481, 482, 483, 484, 485, 487, 488, 491, 492, 493, 494, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 533, 534, 536, 539, 540, 542, 545, 549, 566, 567, 570, 571, 572, 574, 575, 576, 583, 588, 590, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 630, 631, 633, 634, 635, 636, 637, 638, 645, 646, 647, 648, 649, 650, 651, 652, 654, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 742, 743, 744, 745, 748], "output": [3, 4, 6, 13, 14, 16, 19, 26, 29, 30, 31, 39, 40, 41, 42, 59, 61, 62, 63, 64, 65, 66, 74, 75, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 244, 247, 249, 250, 251, 253, 254, 256, 259, 260, 262, 264, 265, 268, 269, 292, 293, 295, 314, 315, 316, 317, 318, 319, 321, 349, 363, 366, 367, 368, 370, 374, 375, 376, 377, 378, 387, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 463, 465, 467, 468, 469, 470, 473, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 491, 496, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 533, 534, 536, 541, 542, 545, 546, 549, 571, 576, 586, 591, 594, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 630, 631, 633, 634, 635, 636, 637, 638, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 657, 658, 659, 660, 661, 662, 663, 664, 667, 743, 744, 745, 747, 748, 750, 777], "present": [3, 17, 64, 66, 113, 115, 247, 253, 262, 487, 566, 567, 570, 571, 583, 586, 745], "encapsul": [3, 8, 115, 262, 268, 420, 487], "primarili": [3, 4, 7, 8, 262, 265, 415, 536], "class": [3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 239, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 482, 485, 486, 487, 754], "data_model": [3, 258, 263, 264, 265, 268, 269, 314, 321, 349, 415, 416, 419, 420, 463, 465, 467, 469, 479, 485, 765], "therefor": [3, 4, 7, 8, 43, 268, 321, 415, 417, 418, 419, 547, 548], "data_model_cpf": [3, 258, 485], "target": [3, 66, 192, 196, 203, 464, 481, 500, 502, 517, 518, 519, 594, 657, 668], "cost": [3, 17, 19, 26, 31, 39, 40, 41, 45, 56, 66, 81, 106, 109, 110, 112, 114, 115, 156, 157, 158, 159, 160, 161, 181, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 261, 267, 275, 292, 295, 297, 305, 321, 349, 350, 389, 390, 392, 396, 407, 462, 467, 474, 487, 488, 496, 497, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 564, 565, 568, 569, 580, 591, 593, 594, 617, 618, 626, 627, 641, 642, 643, 662, 668, 744, 745, 747, 748, 782], "nodal": [3, 7, 17, 262, 289, 329, 340, 416, 482, 483, 524, 525, 530, 594, 610, 611, 612, 613, 614, 615, 782], "price": [3, 7, 17, 66, 74, 107, 108, 109, 110, 111, 112, 113, 115, 156, 157, 158, 159, 160, 161, 262, 285, 289, 295, 297, 305, 306, 307, 331, 333, 336, 338, 362, 364, 474, 482, 483, 534, 594, 608, 616, 617, 662, 743, 744, 745, 749, 782], "shadow": [3, 7, 17, 74, 107, 108, 109, 110, 111, 112, 113, 115, 285, 289, 295, 297, 305, 307, 362, 364, 534, 616, 617, 662, 743, 744, 745, 749], "contraint": [3, 19, 111], "By": [3, 4, 7, 8, 11, 17, 106, 107, 108, 109, 110, 111, 112, 113, 262, 265, 268, 269, 314, 321, 349, 415, 420, 475, 783], "begin": [3, 4, 7, 8, 9, 17, 19, 26, 62, 66, 78, 114, 115, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 197, 203, 204, 211, 245, 262, 265, 268, 269, 314, 316, 319, 321, 349, 415, 420, 463, 499, 539, 568, 581, 582, 583, 585, 588, 649, 652], "initi": [3, 4, 7, 8, 17, 19, 26, 43, 65, 66, 106, 113, 114, 115, 190, 203, 245, 256, 262, 265, 266, 268, 269, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 308, 311, 321, 371, 372, 373, 374, 375, 376, 380, 388, 389, 396, 402, 414, 415, 416, 417, 418, 468, 487, 488, 496, 502, 535, 541, 546, 564, 566, 570, 574, 594, 610, 611, 612, 613, 614, 615, 617, 618, 750], "proce": [3, 7, 8, 262, 748], "stage": [3, 4, 7, 8, 62, 66, 115, 156, 157, 158, 159, 160, 161, 203, 262, 265, 268, 488, 548, 655, 656, 748], "everi": 3, "read": [3, 645, 646, 647, 648, 649, 650, 651, 652], "count": [3, 7, 8, 17, 20, 190, 249, 250, 252, 262, 268, 420, 500, 502], "determin": [3, 5, 7, 8, 11, 17, 19, 30, 107, 108, 109, 110, 111, 112, 115, 159, 175, 185, 193, 201, 203, 210, 219, 241, 262, 268, 321, 463, 476, 478, 515, 550, 576, 594, 645, 649, 668, 669, 745], "number": [3, 4, 6, 7, 8, 9, 17, 19, 26, 29, 30, 31, 42, 60, 62, 74, 75, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 171, 172, 173, 174, 175, 178, 182, 183, 184, 189, 201, 203, 213, 217, 220, 241, 244, 245, 251, 252, 260, 262, 268, 269, 286, 316, 319, 320, 415, 420, 468, 487, 489, 490, 491, 496, 515, 539, 541, 542, 546, 549, 565, 566, 567, 568, 569, 570, 571, 572, 577, 580, 581, 582, 583, 584, 585, 588, 594, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 645, 649, 650, 651, 654, 657, 662, 742, 744, 745, 750], "instanc": [3, 5, 8, 11, 17, 19, 259, 262, 268, 420, 655], "store": [3, 7, 8, 17, 19, 60, 66, 78, 107, 108, 109, 111, 113, 114, 115, 262, 268, 313, 316, 317, 318, 320, 420, 475, 476, 487, 538, 539, 565, 569, 742, 743, 744, 745], "nr": [3, 17, 19, 42, 268, 269, 594], "onlin": [3, 7, 8, 17, 19, 262, 268, 292, 293, 296, 305, 306, 349, 420, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 745], "statu": [3, 17, 18, 19, 20, 36, 74, 80, 102, 157, 183, 213, 215, 217, 221, 238, 255, 262, 268, 490, 496, 539, 566, 570, 571, 594, 608, 617, 742, 743, 744, 745, 781], "map": [3, 8, 19, 59, 106, 114, 203, 262, 268, 269, 306, 313, 320, 321, 415, 474, 572, 743], "id": [3, 4, 9, 17, 18, 19, 20, 60, 262, 268, 284, 290, 292, 293, 296, 298, 300, 301, 305, 308, 311, 415, 649, 650], "row": [3, 4, 8, 9, 17, 19, 30, 40, 41, 42, 59, 60, 79, 80, 108, 111, 112, 115, 120, 171, 172, 173, 175, 178, 203, 260, 262, 268, 269, 284, 286, 289, 292, 293, 296, 298, 300, 301, 305, 307, 308, 311, 415, 420, 475, 476, 487, 489, 496, 537, 538, 551, 564, 565, 569, 573, 585, 591, 593, 594, 608, 621, 622, 643, 657, 668, 742, 743, 745, 746, 747], "id2i": [3, 17, 19, 268], "criteria": [3, 262, 268, 657], "indic": [3, 4, 9, 11, 17, 19, 39, 40, 41, 42, 60, 63, 66, 77, 78, 79, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 165, 166, 168, 169, 190, 191, 192, 193, 202, 203, 260, 262, 268, 269, 275, 292, 293, 296, 313, 315, 316, 319, 320, 321, 415, 416, 420, 468, 478, 487, 492, 493, 494, 496, 499, 500, 502, 503, 505, 507, 508, 509, 511, 512, 514, 516, 517, 519, 521, 535, 536, 537, 539, 540, 541, 543, 544, 546, 564, 566, 567, 568, 569, 570, 571, 574, 576, 577, 578, 579, 585, 608, 610, 611, 612, 613, 614, 615, 621, 622, 626, 643, 649, 650, 651, 652, 743, 745, 750], "n": [3, 4, 9, 12, 17, 19, 30, 42, 59, 60, 63, 64, 103, 106, 109, 110, 111, 113, 114, 115, 118, 120, 156, 158, 159, 171, 173, 175, 178, 203, 260, 262, 267, 268, 316, 317, 318, 320, 389, 396, 415, 420, 475, 487, 496, 529, 530, 531, 532, 537, 539, 564, 568, 594, 608, 617, 618, 743, 748], "off": [3, 17, 18, 19, 20, 241, 268, 284, 489, 496, 539, 564, 566, 572, 663, 742, 743, 744, 745], "i2on": [3, 17, 268], "extract": [3, 4, 7, 17, 61, 114, 115, 256, 262, 268, 269, 298, 349, 362, 364, 420, 465, 467, 469, 475, 540, 649, 652], "calcul": [3, 262, 268, 491, 589, 590], "origin": [3, 4, 16, 17, 43, 247, 253, 262, 268, 538, 539, 572, 745], "p": [3, 9, 12, 17, 18, 20, 30, 107, 108, 109, 111, 113, 115, 159, 198, 199, 200, 260, 261, 262, 268, 284, 286, 287, 289, 290, 292, 293, 296, 300, 301, 305, 306, 308, 311, 319, 391, 420, 496, 497, 500, 502, 508, 517, 548, 551, 566, 567, 568, 570, 571, 581, 582, 586, 587, 588, 594, 608, 621, 642, 668, 743, 755], "few": [3, 4, 7, 8, 17, 20], "per": [3, 7, 8, 12, 17, 19, 20, 64, 74, 260, 262, 284, 296, 298, 349, 383, 407, 420, 421, 426, 427, 433, 436, 437, 444, 449, 450, 451, 456, 461, 474, 489, 549, 574, 583, 586, 594, 608, 626], "unit": [3, 6, 7, 9, 17, 20, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 57, 59, 63, 66, 72, 73, 77, 78, 79, 80, 97, 98, 100, 256, 260, 262, 284, 285, 289, 295, 296, 297, 305, 306, 496, 548, 566, 567, 570, 571, 573, 583, 586, 594, 608, 626, 660, 664, 748], "mva": [3, 18, 20, 262, 284, 285, 496, 504, 566, 571, 594, 608, 648, 657], "found": [3, 12, 17, 19, 20, 21, 61, 106, 108, 109, 110, 111, 112, 113, 114, 115, 191, 192, 260, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 507, 519, 560, 651, 652, 752, 783], "base_mva": [3, 17, 262, 390], "distribut": [3, 17, 145, 256, 298, 471, 492, 584, 589, 594, 732], "kva": [3, 20, 262, 311], "base_kva": [3, 20, 262, 311], "pretty_print": [3, 17, 262, 268, 285, 295, 297, 298, 311], "pretti": [3, 11, 19, 262, 264, 268, 285, 288, 289, 291, 294, 295, 297, 299, 302, 304, 307, 310, 312, 463, 481, 482, 483, 484, 488, 594, 608, 657, 658, 659, 660, 661, 663, 664, 777], "text": [3, 21, 203, 247, 262, 486, 649, 657], "consol": [3, 11, 74, 262, 268], "control": [3, 17, 26, 74, 115, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 262, 268, 286, 287, 463, 496, 558, 594, 608, 644], "cnt": [3, 17, 252, 262, 268], "total": [3, 8, 17, 18, 20, 42, 66, 106, 113, 114, 115, 203, 262, 268, 300, 305, 308, 415, 420, 468, 487, 496, 548, 549, 566, 568, 571, 662, 668, 744, 745, 746, 747], "sum": [3, 17, 77, 78, 172, 260, 262, 268, 549, 585, 626, 627, 746], "amount": [3, 106, 262, 540, 594, 608, 668, 745], "capac": [3, 18, 43, 103, 262, 305, 474], "loss": [3, 17, 18, 20, 262, 284, 286, 296, 496, 549, 566, 567, 570], "ext": [3, 17, 262, 268, 539, 565], "extrem": [3, 17, 261, 262, 268], "min": [3, 7, 12, 17, 18, 26, 31, 64, 66, 77, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 262, 496, 567, 571], "max": [3, 7, 12, 17, 18, 20, 26, 31, 62, 74, 77, 204, 211, 213, 262, 268, 489, 504, 576, 594, 608, 662, 668, 744, 746], "det": [3, 17, 262, 268], "dispatch": [3, 12, 17, 43, 67, 74, 77, 78, 81, 262, 390, 481, 482, 483, 484, 489, 547, 548, 569, 573, 574, 576, 579, 626, 668, 745, 746], "dm_element": [3, 17, 18, 19, 258, 262, 269, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311, 314, 349, 420, 485], "where": [3, 4, 6, 7, 8, 9, 13, 17, 19, 26, 31, 42, 43, 58, 60, 62, 63, 64, 77, 78, 79, 80, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 247, 253, 256, 260, 262, 300, 313, 316, 319, 320, 321, 349, 415, 420, 476, 477, 478, 487, 489, 491, 496, 499, 502, 515, 529, 531, 536, 537, 539, 540, 547, 548, 549, 550, 564, 565, 568, 569, 572, 577, 578, 580, 584, 585, 593, 594, 612, 615, 619, 621, 644, 657, 662, 668, 669, 742, 743, 744, 745, 746, 748], "relationship": [3, 4, 6, 7, 8, 117, 415], "here": [3, 4, 6, 7, 8, 17, 18, 26, 42, 43, 60, 111, 115, 162, 182, 183, 184, 185, 190, 285, 289, 295, 297, 305, 306, 415, 496, 502, 522, 523, 524, 525, 526, 527, 539, 569, 572, 575], "dme_bu": [3, 19, 258, 289, 485], "dme_gen": [3, 19, 258, 295, 485], "dme_load": [3, 19, 258, 303, 304, 485], "while": [3, 8, 17, 19, 476, 496, 742], "least": [3, 6, 43, 315, 316, 317, 318, 319, 415, 476, 489, 662, 744, 748], "tab": [3, 12, 13, 17, 19, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 476, 481, 482, 483, 484], "column": [3, 4, 9, 17, 19, 26, 30, 42, 60, 62, 63, 64, 80, 108, 111, 112, 113, 115, 172, 179, 180, 182, 183, 184, 185, 205, 206, 260, 268, 269, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311, 316, 319, 415, 420, 475, 476, 489, 496, 498, 535, 536, 537, 538, 541, 546, 551, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 584, 585, 586, 591, 617, 618, 620, 621, 622, 624, 626, 627, 631, 634, 636, 638, 650, 651, 668, 742, 743, 745, 746, 747, 750], "attempt": [3, 61, 241, 476, 645, 649], "common": [3, 6, 8, 10, 17, 19, 43, 159, 175, 185, 203, 210, 219, 268, 497], "ctm": [3, 10], "uid": [3, 17, 19, 268, 284, 290, 292, 293, 296, 298, 300, 301, 305, 308, 311], "posit": [3, 20, 196, 496, 547, 548, 567, 574, 745], "integ": [3, 6, 14, 16, 17, 20, 26, 30, 31, 62, 66, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 166, 169, 240, 245, 251, 252, 259, 260, 262, 268, 269, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311, 315, 316, 317, 319, 320, 391, 415, 416, 417, 418, 420, 463, 465, 467, 468, 469, 478, 489, 496, 567, 594, 608, 650, 651], "serv": [3, 8, 17, 314], "uniqu": [3, 8, 17, 20, 106, 114, 202, 268, 298, 415], "string": [3, 17, 19, 39, 42, 60, 61, 62, 79, 80, 114, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 172, 188, 213, 219, 241, 253, 268, 269, 478, 497, 502, 515, 516, 537, 538, 540, 542, 547, 548, 564, 565, 575, 594, 617, 618, 645, 646, 648, 649, 650, 651, 652, 657, 658, 659, 660, 661, 663, 664, 665, 666, 746], "source_uid": [3, 17, 19, 268], "record": [3, 20, 649, 651, 652], "besid": [3, 20], "vector": [3, 4, 7, 8, 9, 12, 17, 19, 22, 26, 30, 31, 39, 42, 59, 60, 62, 63, 64, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 190, 195, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 249, 260, 268, 269, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 308, 311, 315, 316, 317, 318, 319, 320, 321, 391, 415, 416, 417, 418, 419, 420, 464, 487, 491, 492, 493, 494, 499, 500, 502, 506, 508, 509, 512, 516, 517, 522, 523, 524, 525, 526, 527, 529, 531, 535, 537, 539, 540, 541, 543, 544, 546, 549, 551, 564, 566, 572, 573, 574, 576, 577, 579, 580, 582, 585, 586, 587, 588, 590, 591, 593, 594, 608, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 630, 631, 633, 634, 635, 636, 637, 638, 642, 657, 668, 745, 746, 747, 750], "m": [3, 9, 13, 14, 16, 17, 18, 19, 20, 37, 40, 41, 59, 61, 62, 63, 74, 81, 104, 111, 116, 118, 121, 122, 123, 154, 162, 188, 239, 256, 298, 316, 317, 318, 320, 415, 420, 475, 478, 488, 489, 496, 508, 542, 549, 575, 657, 658, 659, 660, 661, 663, 664, 666, 667, 672, 673, 674, 675], "time": [3, 8, 9, 17, 19, 26, 42, 60, 62, 66, 74, 106, 108, 109, 110, 111, 112, 113, 115, 118, 120, 204, 213, 215, 220, 256, 316, 319, 420, 463, 502, 515, 540, 594, 608, 617, 644, 657, 658, 659, 660, 661, 663, 664, 748], "largest": [3, 540], "n_r": 3, "enter": [3, 569], "gen": [3, 8, 12, 17, 18, 20, 39, 40, 41, 42, 60, 63, 64, 77, 79, 83, 84, 110, 112, 262, 268, 269, 275, 292, 293, 305, 306, 349, 390, 391, 415, 420, 468, 473, 481, 482, 483, 484, 487, 489, 490, 496, 497, 498, 510, 513, 524, 525, 530, 534, 536, 537, 538, 539, 540, 551, 564, 565, 569, 571, 572, 573, 575, 576, 578, 579, 583, 586, 594, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 640, 644, 649, 657, 658, 659, 660, 661, 662, 663, 664, 666, 668, 675, 742, 744, 745, 746, 748, 749], "singular": [3, 17, 19, 268], "plural": [3, 17, 19, 268], "charact": [3, 156, 157, 158, 159, 160, 161, 247, 269, 548, 650, 651, 652], "might": [3, 114, 488], "seem": [3, 750], "logic": 3, "constant": [3, 8, 9, 17, 19, 26, 60, 64, 77, 112, 115, 162, 163, 205, 259, 260, 296, 300, 492, 493, 494, 496, 536, 566, 567, 568, 569, 570, 571, 579, 587, 594, 617], "instead": [3, 17, 26, 30, 31, 60, 109, 113, 114, 115, 119, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 569, 592, 594, 608, 653, 745], "prevent": [3, 245], "effect": 3, "preclud": 3, "main_table_var_nam": [3, 17, 19, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 308, 311], "init_statu": [3, 268, 286, 287], "update_statu": [3, 17, 19, 262, 268, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311], "build_param": [3, 17, 19, 262, 268, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311, 415, 416, 419, 420, 422, 425, 433, 437, 440, 443, 445, 448, 449, 451, 452, 455, 457, 460, 461], "As": [3, 11, 12, 17, 18, 37, 104, 239, 256], "node": [3, 7, 9, 17, 259, 268, 286, 287, 321, 323, 324, 326, 327, 331, 333, 336, 338, 344, 345, 346, 347, 348, 352, 360, 415, 416, 417, 418, 420, 426, 427, 468, 492, 493, 494, 499, 639, 772], "port": [3, 7, 8, 9, 17, 26, 268, 284, 296, 315, 316, 319, 415, 416, 419, 420, 421, 433, 436, 437, 444, 449, 450, 451, 456, 461, 464], "hand": [3, 6, 7, 11, 17, 26, 31, 108, 111, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "inform": [3, 6, 8, 26, 40, 41, 106, 114, 182, 183, 184, 185, 190, 193, 203, 239, 241, 257, 262, 265, 268, 269, 313, 314, 316, 317, 318, 321, 349, 415, 420, 463, 471, 472, 473, 474, 489, 495, 496, 497, 502, 503, 522, 523, 526, 528, 529, 530, 532, 534, 539, 578, 586, 616, 617, 643, 748, 783], "link": [3, 13, 17, 19, 20, 268, 471, 486, 742], "branch": [3, 6, 7, 17, 18, 20, 43, 60, 74, 268, 270, 284, 285, 361, 362, 363, 364, 365, 366, 367, 368, 415, 421, 422, 423, 424, 425, 486, 487, 489, 491, 492, 493, 494, 496, 498, 499, 502, 504, 505, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 534, 536, 537, 539, 540, 543, 544, 549, 564, 566, 569, 572, 575, 577, 581, 582, 583, 584, 585, 588, 590, 594, 608, 616, 617, 618, 619, 620, 621, 622, 639, 640, 644, 645, 648, 649, 657, 658, 659, 660, 661, 663, 664, 666, 743, 745, 748], "pair": [3, 77, 78, 79, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 415, 479, 481, 482, 483, 484, 594, 742], "context": [3, 9, 108, 109, 110, 111, 112, 113, 115, 190, 201, 502, 515], "b": [3, 7, 9, 12, 17, 19, 20, 26, 30, 31, 111, 113, 115, 117, 118, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 308, 313, 319, 320, 381, 384, 389, 396, 415, 475, 496, 523, 524, 525, 526, 527, 529, 530, 531, 532, 535, 536, 540, 541, 550, 566, 567, 581, 582, 594, 668, 669, 746, 750, 782], "junction": [3, 268, 420], "could": [3, 17, 106, 114, 116, 121, 122, 123, 154, 162, 188, 522, 528, 657], "coupl": 3, "cxn_type": [3, 17, 19, 268, 284, 290, 292, 293, 296, 298, 300, 301, 308, 311, 420], "cxn_idx_prop": [3, 17, 19, 268, 284, 290, 292, 293, 296, 298, 300, 301, 308, 311, 420], "fbu": [3, 17, 20, 268, 284, 296, 298, 311, 420], "tbu": [3, 17, 20, 268, 284, 296, 298, 311, 420], "automat": [3, 4, 8, 11, 13, 17, 19, 81, 106, 114, 115, 159, 175, 185, 203, 210, 219, 262, 265, 268, 275, 320, 321, 415, 420, 463, 475, 486, 488, 496, 539, 540, 594, 608, 655], "had": [3, 43], "cxn_type_prop": [3, 268, 420], "built": [3, 7, 17, 19, 21, 26, 30, 37, 66, 104, 115, 178, 239, 256, 260, 269, 475, 487, 542, 594, 642], "mp_tabl": [3, 17, 19, 258, 476, 480, 485, 768], "mp_table_class": [3, 476, 477, 485], "abil": [4, 6, 265, 267, 475], "dure": [4, 17, 43, 265, 268, 657], "dm_convert": [4, 258, 262, 266, 267, 268, 269, 314, 463, 465, 467, 469, 485], "6": [4, 12, 17, 18, 20, 26, 30, 31, 43, 78, 147, 150, 156, 157, 158, 159, 160, 161, 182, 197, 203, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 269, 298, 415, 449, 461, 467, 489, 496, 566, 567, 570, 571, 594, 608, 675, 752], "yet": [4, 14, 16, 19, 37, 42, 104, 109, 110, 114, 115, 166, 239, 245, 246, 249, 250, 252, 480, 617, 783], "been": [4, 7, 17, 19, 81, 115, 117, 119, 191, 192, 193, 349, 468, 488, 490, 496, 502, 503, 507, 519, 537, 538, 594], "onc": [4, 7, 17, 19, 256, 349, 420, 488, 668], "readi": [4, 463], "loadcas": [4, 59, 485, 496, 654, 657, 658, 659, 660, 661, 663, 664, 697, 742, 751], "same": [4, 8, 17, 19, 26, 30, 43, 45, 62, 63, 64, 106, 111, 114, 163, 170, 172, 178, 190, 201, 202, 203, 262, 263, 269, 320, 389, 415, 420, 488, 496, 497, 502, 515, 516, 540, 549, 585, 591, 594, 608, 662, 675, 676, 743, 746, 747, 762], "again": [4, 17, 19, 43, 746], "scratch": [4, 583], "need": [4, 8, 12, 17, 19, 42, 60, 64, 108, 109, 110, 111, 112, 114, 115, 192, 203, 256, 263, 268, 269, 317, 318, 350, 465, 467, 469, 488, 497, 519, 539, 540, 542, 573, 582, 783], "dmc_element": [4, 17, 18, 258, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 314, 485, 764], "dmce": [4, 268, 269], "get_import_spec": [4, 269], "import_table_valu": [4, 269], "thing": [4, 17, 19], "interest": [4, 9, 11, 14, 16, 194, 260, 262, 315, 316, 317, 319, 391, 415, 416, 417, 418, 420, 489, 576, 626], "vmap": [4, 17, 269], "table_var_map": [4, 17, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "vn": [4, 17, 269, 271, 272, 275, 276, 279, 280, 281], "start": [4, 6, 13, 17, 26, 31, 106, 108, 111, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 320, 321, 327, 328, 464, 487, 496, 539, 568, 580, 594, 748, 783], "col": [4, 17, 20, 42, 60, 171, 173, 175, 178, 203, 260, 269, 415, 489, 743], "c": [4, 7, 8, 17, 19, 20, 26, 31, 64, 110, 112, 113, 115, 156, 157, 158, 159, 160, 161, 176, 177, 197, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 269, 271, 272, 298, 389, 396, 415, 420, 487, 496, 499, 548, 566, 570, 650, 651], "sf": [4, 269, 492, 493, 494, 504, 522, 528, 531, 616, 617], "sf_fcn": 4, "copi": [4, 17, 20, 76, 106, 114, 115, 170, 240, 262, 265, 268, 320, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607], "scale": [4, 9, 26, 30, 77, 78, 79, 80, 103, 150, 169, 178, 181, 193, 203, 207, 260, 269, 489, 503, 569, 593, 594, 668, 745, 750], "factor": [4, 20, 24, 30, 43, 60, 103, 181, 193, 203, 207, 269, 301, 390, 489, 496, 503, 569, 571, 579, 584, 594, 617, 668], "val": [4, 12, 17, 107, 108, 109, 110, 111, 112, 113, 114, 115, 202, 259, 269, 320, 475, 479, 481, 482, 483, 484, 516, 537, 564, 617], "num": [4, 17, 19, 647, 648, 649, 651], "scalar": [4, 9, 17, 19, 42, 60, 61, 63, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 202, 249, 260, 320, 415, 496, 500, 502, 508, 509, 512, 516, 517, 540, 574, 585, 593, 594, 668, 746], "fcn": [4, 12, 17, 106, 109, 110, 114, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 190, 193, 201, 202, 203, 487, 488, 502, 503, 515, 516, 568, 655], "ifn": 4, "efn": 4, "spec": [4, 12, 17, 201, 203, 247, 253, 269, 270, 271, 272, 275, 276, 280, 281, 349, 391], "ridx": [4, 17, 269, 272, 275, 276], "get_export_spec": [4, 269], "export_table_valu": [4, 269], "init_export_data": [4, 269, 272], "relev": [4, 7, 8, 12, 17, 20, 43, 66, 107, 108, 109, 110, 111, 112, 113, 115, 193, 321, 349, 478, 745], "data_exist": [4, 269], "fals": [4, 14, 17, 30, 36, 77, 78, 79, 80, 102, 106, 108, 109, 115, 190, 238, 241, 245, 247, 249, 250, 251, 253, 255, 268, 415, 502, 644, 657, 663, 781], "matrix": [4, 8, 9, 11, 17, 19, 20, 26, 30, 31, 39, 40, 41, 42, 49, 62, 63, 64, 80, 108, 109, 110, 111, 112, 114, 115, 118, 120, 156, 157, 158, 159, 160, 161, 171, 172, 173, 175, 178, 179, 180, 181, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 249, 260, 298, 306, 315, 316, 317, 319, 391, 415, 416, 420, 463, 485, 487, 496, 498, 499, 500, 502, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 537, 539, 541, 546, 551, 564, 566, 567, 568, 570, 571, 573, 575, 576, 577, 580, 583, 584, 585, 586, 588, 591, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 647, 648, 651, 668, 742, 746, 747, 750, 782], "pdf": [5, 6, 10, 13, 37, 77, 78, 79, 80, 96, 97, 98, 100, 104, 239, 485, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 548, 782, 783], "introduct": [5, 485], "notat": [5, 12, 117, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 782], "overview": [5, 6, 17, 19], "hierarchi": [5, 7, 17, 19], "custom": [5, 6, 12, 18, 19, 203, 267, 314, 332, 334, 337, 339, 341, 350, 471, 472, 473, 474, 477, 540], "iter": [5, 20, 23, 26, 31, 160, 171, 172, 173, 174, 175, 178, 182, 183, 184, 190, 203, 213, 217, 220, 463, 464, 468, 492, 493, 494, 500, 502, 541, 546, 594, 608, 610, 611, 612, 613, 614, 615, 654, 657, 663, 750], "via": [5, 17, 20, 21, 59, 109, 110, 115, 170, 182, 184, 190, 201, 202, 210, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 261, 481, 483, 484, 488, 502, 515, 594, 608, 650, 651, 701, 735], "acknowledg": 5, "purpos": [6, 17, 114, 261, 263, 264, 486], "wish": [6, 63, 64], "your": [6, 12, 18, 19, 21, 96, 97, 98, 100, 154, 163, 240, 256, 257, 476, 477, 478], "document": [6, 17, 18, 19, 20, 30, 37, 104, 121, 122, 123, 154, 156, 158, 161, 182, 183, 184, 214, 216, 217, 218, 221, 222, 239, 260, 486, 751, 752, 783], "languag": [6, 21], "scientif": 6, "commerci": 6, "product": [6, 111, 522, 523, 524, 525, 526, 527], "mathwork": [6, 26, 31, 156, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 212, 214, 216, 217, 218, 219, 220, 221, 222], "free": [6, 21], "open": [6, 21, 107, 108, 109, 110, 111, 112, 113, 495, 645, 652], "relat": [6, 7, 8, 11, 12, 21, 106, 114, 267, 316, 317, 318, 463, 539, 560, 582, 689, 734], "softwar": [6, 21, 594], "git": 6, "subrepo": 6, "except": [6, 9, 17, 26, 31, 42, 66, 76, 115, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 263, 320, 496, 502, 542, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 621, 662, 745, 762], "howev": [6, 7, 11, 17, 19, 43, 476, 783], "download": [6, 21, 96, 97, 98, 100, 256], "zip": [6, 256, 300, 470, 586, 587, 741, 746], "releas": [6, 21, 29, 75, 124, 155, 164, 189, 241, 244, 609], "depend": [6, 7, 8, 18, 60, 66, 76, 107, 111, 113, 115, 175, 203, 213, 256, 262, 265, 269, 316, 321, 420, 464, 466, 468, 471, 472, 488, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 538, 542, 580, 586, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 621, 650, 657, 741, 746], "mptest": [6, 256], "doc": [6, 10, 13, 14, 16, 21, 116, 122, 159, 162, 184, 188, 208, 209, 210, 215, 221, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 782], "have_featur": [6, 22, 23, 24, 25, 38, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 240, 242, 243, 248, 256, 257, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 783], "nonlinear": [6, 7, 8, 12, 17, 19, 21, 26, 27, 28, 38, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 136, 139, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 197, 203, 240, 267, 316, 391, 416, 452, 487, 594, 616, 617, 628, 629], "primal": [6, 26, 66, 115, 156, 157, 158, 159, 160, 161, 163, 185, 210, 212, 219, 220, 556, 558, 594, 608, 617], "dual": [6, 26, 115, 122, 143, 160, 163, 185, 210, 212, 219, 220, 317, 556, 558, 594, 608, 617], "linear": [6, 7, 8, 9, 17, 23, 26, 30, 31, 33, 34, 38, 45, 66, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 122, 127, 133, 145, 156, 157, 158, 159, 160, 161, 168, 169, 171, 173, 175, 178, 182, 183, 184, 185, 203, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 260, 261, 267, 275, 296, 316, 319, 389, 392, 396, 487, 496, 534, 551, 568, 570, 577, 578, 579, 580, 593, 594, 608, 616, 617, 618, 619, 641, 745], "equat": [6, 7, 17, 19, 30, 115, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 197, 203, 240, 559, 594, 610, 611, 612, 613, 614, 615, 617], "easi": [6, 17, 59], "unifi": [6, 8, 10, 240, 782], "lp": [6, 115, 125, 133, 142, 144, 168, 169, 215, 219, 237, 239, 485, 594, 608], "qp": [6, 7, 12, 31, 35, 38, 66, 74, 115, 125, 144, 148, 149, 157, 161, 168, 169, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 233, 237, 239, 485, 594, 608, 735], "mix": [6, 7, 66, 115, 156, 157, 158, 159, 160, 161, 166, 169, 240, 313, 315, 316, 317, 318, 319, 321, 593], "switch": [6, 12, 17, 18, 19, 645], "chang": [6, 12, 18, 20, 21, 42, 43, 45, 60, 62, 113, 115, 193, 468, 471, 472, 477, 478, 489, 502, 503, 511, 514, 516, 536, 539, 547, 548, 569, 667, 684, 745], "unsupport": [6, 466], "separ": [6, 17, 19, 78, 111, 256, 478], "resourc": 6, "sphinx": [6, 13, 14, 16, 21], "perman": [6, 478], "master": [6, 14, 16, 42, 60, 62, 239, 486], "latest": [6, 122, 162], "stabl": 6, "unreleas": [6, 21], "hopefulli": 6, "tag": [6, 22, 23, 24, 25, 106, 108, 109, 110, 111, 112, 113, 115, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 241, 242, 243, 262, 264, 265, 266, 314, 315, 321, 420, 463, 466, 468, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563], "becaus": [6, 17, 19, 43, 74, 476, 572, 742], "intend": [6, 38, 109, 114, 115, 193, 240, 247, 249, 250, 252, 253, 257, 268, 477, 487, 503], "unmodifi": 6, "stick": 6, "syntax": [6, 22, 26, 31, 116, 121, 122, 123, 126, 154, 156, 157, 158, 159, 160, 161, 162, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 188, 201, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 261, 475, 476, 617, 618, 657, 658, 659, 660, 661, 662, 663, 664, 748], "classdef": [6, 12, 17, 18, 19], "obj": [6, 12, 17, 18, 19, 26, 31, 106, 113, 114, 260, 268, 313, 320, 349, 415, 476, 617], "namespac": 6, "produc": [6, 42, 496], "html": [6, 13, 21, 116, 122, 159, 162, 183, 184, 188, 208, 209, 210, 217, 221], "what": [6, 9, 109, 115, 192, 519, 594, 608, 642, 644], "hint": 6, "click": 6, "icon": [6, 486], "upper": [6, 12, 17, 18, 26, 31, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 284, 285, 286, 289, 292, 295, 296, 297, 305, 317, 415, 486, 496, 511, 514, 521, 534, 551, 566, 567, 570, 571, 578, 594, 616, 617, 619, 620, 662, 743, 744, 745, 749], "right": [6, 8, 9, 13, 17, 19, 26, 31, 108, 111, 115, 156, 157, 158, 159, 160, 161, 176, 177, 182, 183, 184, 185, 197, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 316, 319, 486], "corner": 6, "page": [6, 188, 256, 486, 494], "cover": 6, "autom": 6, "contributor": 6, "guid": [6, 12, 17, 18, 19, 20, 159], "form": [7, 8, 9, 12, 17, 18, 30, 62, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 178, 190, 201, 202, 205, 207, 247, 253, 256, 258, 298, 316, 317, 318, 319, 321, 371, 372, 373, 374, 375, 376, 380, 383, 388, 389, 396, 402, 414, 415, 416, 417, 418, 419, 420, 462, 485, 487, 502, 515, 528, 529, 530, 531, 532, 534, 539, 548, 572, 583, 594, 616, 617, 618, 619, 746, 748], "x": [7, 8, 9, 17, 19, 20, 24, 25, 26, 30, 31, 42, 63, 64, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 150, 156, 157, 158, 159, 160, 161, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 252, 260, 268, 284, 298, 311, 316, 317, 319, 321, 329, 347, 350, 354, 355, 356, 357, 358, 359, 360, 391, 415, 416, 420, 452, 467, 476, 487, 491, 492, 496, 500, 502, 517, 522, 523, 524, 525, 526, 527, 534, 545, 549, 566, 576, 580, 584, 585, 586, 587, 593, 594, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 657, 662, 742, 743, 744, 745, 746, 783], "rvec": [7, 9, 12, 26, 31, 112, 117, 176, 177, 197], "f": [7, 8, 9, 26, 31, 74, 108, 110, 111, 112, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 197, 203, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 268, 347, 350, 467, 487, 492, 493, 494, 496, 522, 526, 529, 531, 534, 542, 549, 566, 568, 570, 589, 590, 593, 594, 608, 616, 617, 626, 627, 642, 644, 650, 651, 658, 660, 661, 664, 748], "param": [7, 9, 12, 17, 19, 26, 31, 43, 107, 108, 109, 110, 111, 112, 113, 115, 122, 162, 204, 211, 296, 315], "rmat": [7, 9, 12, 26, 111, 204], "trace": [7, 192, 196, 197, 203, 240, 519, 594, 657], "curv": [7, 190, 191, 192, 195, 196, 200, 203, 260, 292, 391, 473, 496, 497, 502, 506, 507, 518, 519, 551, 571, 578, 594, 608, 617, 657, 749], "parameter": [7, 115, 190, 192, 197, 198, 199, 200, 203, 240, 263, 303, 309, 500, 502, 508, 509, 517, 519, 594, 657], "lambda": [7, 17, 18, 26, 31, 107, 108, 109, 110, 111, 112, 113, 115, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 192, 195, 196, 197, 198, 199, 200, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 263, 303, 309, 423, 464, 497, 500, 502, 506, 508, 509, 512, 517, 518, 519, 594, 617, 620, 622, 624, 629, 631, 634, 636, 638, 657], "vari": [7, 115, 268, 488], "constrain": [7, 17, 26, 28, 66, 81, 115, 156, 157, 158, 159, 160, 161, 168, 187, 200, 204, 208, 209, 210, 240, 617, 618, 621, 622], "min_": [7, 26, 28, 31, 187, 204, 211], "textrm": [7, 111, 204], "qquad": 7, "h": [7, 12, 17, 21, 26, 31, 77, 78, 79, 80, 109, 115, 156, 157, 158, 159, 160, 161, 179, 181, 182, 183, 184, 185, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 262, 268, 316, 391, 416, 487, 492, 496, 578, 584, 585, 617, 618, 621, 748], "le": [7, 12, 17, 19, 26, 28, 31, 108, 109, 111, 117, 187, 204, 211], "_": [7, 8, 12, 26, 31, 111, 204, 211, 416], "quadrat": [7, 17, 31, 45, 106, 111, 112, 114, 115, 120, 156, 157, 158, 159, 160, 161, 168, 169, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 260, 487, 497, 594, 617, 618], "tran": [7, 9, 12, 31, 108, 109, 110, 111, 112, 204, 211], "q": [7, 9, 12, 17, 18, 30, 111, 112, 115, 120, 208, 209, 210, 260, 300, 308, 389, 391, 396, 468, 551, 594, 608, 652, 750], "k": [7, 9, 17, 19, 112, 113, 114, 115, 172, 190, 191, 192, 203, 260, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 307, 308, 311, 319, 325, 389, 396, 415, 420, 475, 487, 502, 505, 507, 511, 514, 519, 521, 540, 547, 548, 585, 657, 668, 686, 687, 746], "l": [7, 17, 19, 26, 30, 31, 106, 108, 111, 114, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 267, 296, 316, 317, 318, 487, 496, 534, 551, 578, 616, 617, 618, 662, 743, 744, 748], "math_model": [7, 258, 262, 314, 328, 342, 349, 415, 420, 463, 465, 467, 469, 485], "opt_model": [7, 66, 107, 114, 197, 204, 211, 227, 228, 229, 230, 231, 232, 233, 234, 239, 240, 321, 415, 487, 534, 627], "mp_idx_manag": [7, 8, 106, 115, 239, 240, 315, 321, 415, 416, 417, 418, 419], "nonzero": [7, 8], "auxiliari": [7, 316, 317, 318, 321], "appropri": [7, 9, 13, 17, 19, 26, 115, 241, 265, 315, 316, 496, 540, 575, 581, 582, 588, 668, 742], "characterist": 7, "mm_element": [7, 12, 17, 18, 258, 268, 314, 321, 361, 369, 370, 379, 386, 387, 395, 401, 403, 407, 408, 409, 413, 420, 485], "mme": [7, 349, 391, 420], "nme_bus_pf_acp": 7, "nme_bus_opf_acp": 7, "And": [7, 12, 19, 20, 471, 472], "similar": [7, 17, 43, 496, 528, 529, 531, 748], "mme_gen": [7, 258, 389, 393, 394, 485], "similarli": [7, 8, 12, 106, 109], "inject": [7, 9, 12, 17, 18, 19, 20, 284, 296, 297, 298, 308, 311, 316, 317, 318, 319, 352, 360, 391, 415, 416, 419, 464, 496, 500, 502, 517, 524, 527, 532, 535, 537, 541, 546, 549, 564, 566, 567, 570, 578, 582, 583, 585, 586, 588, 590, 610, 611, 612, 613, 614, 615, 617, 750], "aggreg": [7, 43, 77, 78, 108, 111, 112, 113, 115, 316, 319, 416, 419, 420, 462, 487], "piecewis": [7, 17, 260, 261, 275, 389, 392, 396, 496, 568, 593, 594, 608, 641], "angl": [7, 8, 9, 18, 20, 284, 285, 286, 287, 316, 317, 318, 319, 362, 364, 365, 366, 374, 416, 417, 418, 419, 420, 423, 468, 484, 491, 496, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 537, 541, 546, 549, 564, 566, 567, 577, 582, 583, 594, 608, 610, 611, 612, 613, 614, 615, 617, 619, 620, 637, 638, 750], "mme_branch": [7, 258, 362, 367, 368, 485], "sens": 7, "respons": [7, 17, 268], "data_model_update_off": [7, 349], "zero": [7, 8, 9, 17, 19, 26, 31, 40, 41, 45, 59, 108, 111, 112, 115, 116, 121, 123, 154, 156, 157, 158, 160, 161, 162, 179, 181, 193, 194, 202, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 262, 315, 420, 487, 490, 496, 497, 498, 499, 502, 503, 511, 514, 516, 523, 566, 571, 577, 585, 586, 589, 594, 608, 668, 669, 746], "out": [7, 12, 17, 20, 31, 105, 156, 157, 158, 159, 160, 161, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 246, 262, 264, 466, 489, 490, 491, 495, 496, 497, 511, 514, 543, 566, 570, 571, 575, 594, 644], "data_model_update_on": [7, 17, 349, 363, 366, 367, 368, 370, 374, 375, 376, 377, 378, 387, 390, 392, 393, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413], "differnt": 7, "avoid": [7, 13, 66, 115, 156, 157, 158, 159, 160, 161, 193, 540], "duplic": [7, 106, 114, 115, 262, 265, 268, 320], "mm_shared_": 7, "evalu": [7, 12, 26, 108, 109, 110, 111, 112, 113, 115, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 203, 205, 206, 207, 250, 260, 317, 318, 350, 464, 487, 522, 586, 591, 619, 620, 621, 622, 623, 624, 626, 627, 630, 631, 633, 634, 635, 636, 637, 638, 641, 642, 747], "jacobian": [7, 9, 12, 26, 109, 111, 115, 171, 172, 173, 175, 178, 179, 182, 183, 184, 185, 198, 199, 200, 203, 205, 316, 317, 318, 391, 416, 583, 594, 612, 615, 617, 621], "put": [7, 17, 19], "kei": [8, 114, 268, 269], "modular": [8, 241], "deriv": [8, 21, 109, 110, 112, 115, 171, 173, 175, 178, 203, 260, 315, 316, 317, 318, 319, 329, 423, 485, 487, 500, 502, 509, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 549, 586, 594, 608, 617, 626, 627, 642, 693, 695, 773, 774, 775, 776], "featur": [8, 11, 22, 23, 24, 25, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 203, 241, 242, 243, 475, 485, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 594, 783], "fulli": [8, 114, 783], "captur": 8, "oper": [8, 9, 17, 26, 30, 62, 111, 115, 148, 178, 256, 420, 539, 572, 594], "condit": [8, 26, 31, 43, 58, 62, 66, 250, 256, 594, 608], "non": [8, 9, 17, 19, 26, 45, 59, 64, 66, 77, 115, 116, 121, 123, 154, 162, 171, 173, 175, 178, 179, 181, 203, 208, 209, 267, 315, 316, 317, 318, 319, 415, 416, 419, 420, 433, 436, 437, 440, 443, 444, 445, 448, 468, 488, 496, 497, 498, 539, 543, 594, 608, 619, 651], "z": [8, 9, 17, 19, 26, 110, 112, 113, 114, 115, 190, 203, 316, 319, 354, 357, 360, 415, 419, 420, 487, 496, 500, 502, 508, 509, 512, 517, 587, 594, 617, 618, 750], "track": [8, 106, 114, 115, 315, 321, 415, 487], "n_p": [8, 9, 316, 319], "n_z": [8, 62, 319], "tn5": [8, 9, 10, 21], "lot": [8, 108, 111, 112, 115, 594, 608], "especi": [8, 256], "real": [8, 9, 17, 19, 26, 30, 74, 249, 316, 317, 415, 416, 417, 420, 489, 496, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 537, 549, 564, 566, 567, 569, 571, 574, 578, 582, 593, 617, 621, 623, 624, 633, 635, 637, 657, 663, 668], "predefin": [8, 17, 19], "activ": [8, 9, 12, 13, 17, 18, 20, 182, 268, 284, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 306, 308, 311, 316, 319, 352, 360, 383, 389, 391, 396, 481, 482, 483, 484, 491, 492, 493, 494, 496, 510, 511, 580, 594, 608, 626, 630, 631, 634, 636, 638, 654, 657, 668, 746], "va": [8, 9, 17, 113, 268, 286, 316, 317, 318, 319, 321, 416, 417, 418, 419, 431, 432, 484, 496, 528, 535, 536, 567, 577, 582, 617, 619], "n_": [8, 9, 260, 316], "left": [8, 9, 17, 19, 26, 31, 108, 111, 115, 156, 157, 158, 159, 160, 161, 176, 177, 182, 183, 184, 185, 197, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 316, 319, 745], "bb": [8, 9, 17, 111, 204, 205, 319, 425], "kk": [8, 9, 17, 319, 420, 443, 448, 487], "pv": [8, 9, 17, 20, 259, 286, 287, 319, 352, 415, 420, 425, 427, 455, 460, 464, 490, 492, 493, 494, 496, 500, 501, 502, 508, 509, 512, 514, 517, 535, 536, 541, 546, 548, 567, 589, 590, 610, 611, 612, 613, 614, 615, 640, 657, 663, 750, 757, 758, 761, 762], "suscept": [8, 9, 284, 298, 308, 496, 566, 567], "coeffici": [8, 9, 17, 31, 108, 111, 112, 115, 156, 157, 158, 159, 160, 161, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 296, 316, 319, 496, 568], "gp": [8, 17, 319, 419], "cc": [8, 9, 17, 19, 316, 319, 548], "gi": [8, 316], "compon": [8, 17, 115, 195, 260, 261, 300, 316, 499, 506, 522, 528], "ilin": [8, 17, 19, 316], "slin": [8, 17, 19, 316], "arbitrari": [8, 17, 19, 114, 171, 175, 262, 268, 316, 502, 515], "snln": [8, 17, 19, 316, 416, 452], "inln": [8, 17, 19, 316, 416, 452], "six": [8, 17, 19, 20, 471, 756, 757, 758], "yy": [8, 9, 17, 19, 20, 316, 422, 449, 452, 457, 461, 755], "ll": [8, 9, 17, 19, 114, 115, 316], "nn": [8, 9, 17, 19, 111, 316, 420, 426, 427, 433, 437, 440, 445], "iv": [8, 9, 17, 19, 316], "sv": [8, 9, 17, 19, 316, 451, 452, 548], "admitt": [8, 9, 298, 422, 449, 461, 492, 493, 494, 500, 502, 517, 523, 524, 526, 527, 541, 546, 583, 588, 594, 610, 611, 612, 613, 614, 615, 621, 622, 623, 624, 630, 631, 750], "matric": [8, 9, 17, 19, 30, 42, 62, 63, 64, 111, 118, 120, 172, 205, 207, 208, 209, 210, 249, 298, 316, 415, 416, 419, 420, 496, 498, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 539, 541, 572, 575, 581, 582, 583, 588, 617, 618, 666, 669, 742, 745, 748], "rather": [8, 17, 38, 42, 108, 115, 163, 240, 257, 260, 316, 317, 391, 416, 476, 496, 536, 540, 569, 585], "dv": [8, 316, 529, 530, 531, 532], "conj": [8, 9, 316, 528, 530, 531, 532], "Then": [8, 13, 256, 262, 415, 478, 539, 617, 618], "written": [8, 21, 26, 204, 245, 246, 249, 250, 252], "cdiag": [8, 316], "invc": [8, 316], "assum": [8, 17, 42, 43, 108, 109, 110, 111, 112, 115, 117, 119, 268, 298, 391, 416, 463, 465, 467, 469, 470, 479, 481, 482, 483, 484, 492, 493, 494, 497, 540, 542, 566, 567, 570, 571, 575, 577, 586, 621, 622, 632, 644, 645, 649, 657, 658, 659, 660, 661, 663, 664, 668, 746], "net_model": [8, 258, 262, 314, 316, 321, 349, 416, 417, 418, 419, 420, 427, 463, 465, 467, 469, 485], "nm_element": [8, 17, 18, 19, 258, 314, 315, 316, 317, 318, 319, 349, 415, 416, 417, 418, 419, 421, 426, 427, 433, 436, 437, 444, 449, 450, 451, 456, 461, 485, 771], "special": [8, 60, 109, 114, 475, 569], "treatment": 8, "pq": [8, 12, 20, 259, 286, 287, 292, 390, 391, 415, 420, 427, 473, 490, 496, 500, 501, 502, 508, 509, 512, 514, 517, 535, 536, 541, 546, 567, 571, 578, 610, 611, 612, 613, 614, 615, 617, 640, 657, 663, 668, 750, 756, 760, 761, 762], "node_typ": [8, 17, 258, 415, 420, 426, 427, 485], "about": [8, 193, 195, 196, 241, 489, 495, 503, 504, 506, 510, 513, 515, 516, 518, 520], "assembl": [8, 106, 108, 111, 112, 115, 416, 487], "set_node_type_ref": [8, 415, 420, 426], "set_node_type_pv": [8, 415, 420, 426], "set_node_type_pq": [8, 415, 420, 426], "1000": [8, 20, 174, 594, 608, 745], "2000": [8, 20, 203], "nme_bus_acp": [8, 258, 485], "nme_gen_acp": [8, 258, 485], "brief": 8, "rel": [8, 14, 16, 66, 115, 156, 157, 158, 159, 160, 161, 489, 542, 594, 608], "nme_bu": [8, 258, 430, 431, 432, 485], "nme_gen": [8, 258, 440, 443, 485], "neg": [8, 107, 108, 109, 110, 111, 112, 113, 115, 158, 159, 160, 171, 172, 173, 174, 175, 178, 184, 185, 208, 209, 210, 216, 219, 220, 221, 502, 569, 743, 745], "ident": [8, 9, 17, 26, 31, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 249, 415, 487, 502, 542, 594, 657], "nme_branch": [8, 258, 422, 425, 485], "nme_load": [8, 258, 452, 455, 485], "equal": [8, 17, 26, 42, 58, 59, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 179, 181, 182, 183, 184, 185, 205, 207, 245, 246, 249, 250, 252, 256, 317, 373, 415, 416, 492, 493, 494, 594, 608, 616, 617, 623, 630, 633, 634, 639, 662, 668, 743, 744, 745], "consum": 8, "stack": [8, 17, 19, 109, 111, 113, 115, 118, 120, 207, 316, 319, 415, 420], "seri": [8, 251, 284, 298, 311, 549], "t": [8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 58, 62, 66, 78, 114, 115, 171, 173, 175, 178, 193, 203, 256, 260, 316, 416, 463, 475, 476, 478, 480, 496, 500, 502, 503, 509, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 549, 551, 566, 570, 575, 583, 650], "cscal": [8, 9, 17, 19, 300], "y": [8, 19, 108, 109, 110, 111, 112, 113, 115, 252, 298, 316, 317, 318, 415, 542, 580, 617], "i_": 8, "i_f": 8, "i_t": 8, "n_k": [8, 9, 17, 19, 316, 319], "cmat": [8, 9, 26, 31], "cccc": [8, 211], "1_": 8, "2_": 8, "ddot": 8, "cvec": [8, 9, 17, 19], "_f": 8, "1_f": 8, "2_f": 8, "vdot": 8, "_t": 8, "1_t": 8, "2_t": 8, "incid": [8, 9, 17, 19, 415, 416, 419, 420, 499], "character": 8, "style": [9, 159, 219, 594, 608], "theta": 9, "uptheta": 9, "cvecg": 9, "rmatg": 9, "cmatg": 9, "hat": 9, "diag": [9, 12, 111, 112, 204, 487, 528, 529, 530, 531, 532], "diagon": [9, 17, 19, 111, 205, 415], "conjug": 9, "transpos": [9, 26, 30, 108, 109, 110, 115, 182, 183, 184, 185, 198, 199, 200, 316, 317, 391, 416], "re": [9, 11, 13, 19, 115, 156, 157, 158, 159, 160, 161, 193, 220, 247, 253, 540, 663], "im": [9, 19], "imaginari": [9, 17, 19, 316, 317, 416, 417, 420, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 623, 624, 633, 635, 637], "wise": [9, 81, 641, 746], "expon": 9, "f_": [9, 110, 260], "gradient": [9, 26, 109, 110, 112, 115, 179, 180, 182, 183, 184, 185, 198, 199, 200, 205, 206, 260, 594, 608, 619, 621, 623, 626, 627, 630, 633, 635, 637], "w": [9, 14, 16, 43, 56, 131, 143, 150, 171, 173, 175, 178, 182, 203, 315, 316, 317, 318, 319, 327, 332, 334, 337, 339, 341, 391, 416, 487, 492, 500, 502, 509, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 548, 551, 583, 594, 608, 617, 618, 675, 725, 729, 780], "lam": [9, 12, 26, 109, 115, 117, 119, 159, 182, 183, 184, 185, 203, 303, 309, 316, 317, 318, 329, 381, 391, 416, 500, 501, 502, 508, 509, 512, 517, 524, 525, 527, 638, 657], "hessian": [9, 12, 26, 109, 110, 115, 180, 181, 182, 183, 184, 185, 206, 207, 260, 316, 317, 318, 391, 416, 594, 608, 620, 622, 624, 626, 627, 629, 631, 634, 636, 638], "dimens": [9, 17, 39, 42, 60, 62, 106, 109, 110, 111, 112, 113, 114, 115, 172, 202, 203, 268, 269, 320, 391, 415, 420, 475, 476, 516, 537, 540, 550, 564, 574, 580, 591, 668, 669, 746, 747], "j": [9, 17, 26, 62, 106, 108, 109, 110, 111, 112, 113, 114, 115, 120, 171, 172, 173, 175, 178, 179, 203, 205, 260, 300, 415, 420, 475, 487, 499, 529, 530, 531, 532, 549, 583, 585, 621, 662, 744], "natur": [9, 192, 199, 203, 519, 547, 594], "log": [9, 21, 190, 193, 194, 203, 502, 503], "approx": [9, 182, 594, 608], "71828": 9, "sqrt": [9, 174], "n_n": [9, 316, 319], "size": [9, 17, 26, 43, 77, 78, 79, 80, 108, 111, 114, 115, 190, 192, 193, 198, 199, 200, 203, 245, 246, 249, 250, 252, 256, 315, 320, 475, 476, 487, 500, 502, 503, 508, 511, 514, 519, 585, 594, 657, 668], "vvi": 9, "vri": 9, "vii": 9, "vmi": 9, "vai": 9, "magnitud": [9, 17, 18, 20, 284, 286, 287, 289, 292, 293, 296, 316, 317, 318, 373, 374, 418, 420, 466, 481, 496, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 537, 541, 546, 549, 564, 567, 571, 583, 586, 587, 594, 608, 610, 611, 612, 613, 614, 615, 617, 633, 634, 635, 636, 657, 663, 750], "vr": [9, 316, 317, 415, 416, 417, 430, 528, 619], "vi": [9, 316, 317, 416, 417, 430, 528, 619], "vm": [9, 18, 110, 112, 115, 268, 286, 316, 317, 318, 321, 373, 416, 418, 431, 481, 487, 496, 520, 528, 536, 567, 586, 617], "dvm": [9, 523, 524, 525, 526, 527, 529, 530, 531, 532], "inv": 9, "invers": 9, "frac": [9, 12, 31, 111, 112, 204, 211], "z_i": 9, "_i": [9, 111, 117, 300], "zr": [9, 17, 19, 316, 321, 415, 416], "zi": [9, 17, 19, 316, 321, 415, 416], "j_": 9, "affin": 9, "dd": [9, 205, 487, 589], "aa": [9, 108, 204, 211], "combin": [9, 115, 170, 316, 319, 420, 487, 548, 748], "ccc": [9, 19, 204], "underlin": 9, "obtain": [9, 43, 115, 316, 317, 391, 416, 420], "multipli": [9, 17, 26, 31, 58, 60, 109, 111, 114, 115, 117, 119, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 316, 317, 391, 416, 487, 489, 522, 523, 524, 525, 526, 527, 534, 566, 567, 569, 570, 571, 588, 594, 616, 617, 620, 622, 624, 631, 634, 636, 638, 743], "superscript": 9, "subscript": [9, 260, 261, 269], "carleton": 10, "coffrin": 10, "et": [10, 13, 115, 463, 617, 644, 657, 658, 659, 660, 661, 663, 664, 748], "al": [10, 13], "progress": [10, 26, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 497, 594, 608, 645, 646, 648, 649, 651, 652, 748], "www": [10, 115, 116, 121, 123, 134, 139, 144, 145, 154, 171, 172, 173, 174, 175, 178, 184, 185, 203, 210, 212, 548, 556, 558, 563, 594, 608], "overleaf": 10, "5d94e3765cb3ba000129df3c": 10, "zimmerman": [10, 26, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 782], "octob": [10, 782], "2020": [10, 782], "org": [10, 13, 21, 23, 26, 114, 115, 122, 148, 154, 182, 183, 184, 185, 188, 219, 221, 476, 492, 493, 494, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 589, 594, 608, 782], "much": [11, 269], "task_pf": [11, 258, 464, 465, 467, 469, 470, 482, 484, 485], "task_cpf": [11, 258, 465, 481, 482, 485], "usag": [11, 320, 566, 567, 568, 570, 571, 581], "pattern": 11, "occur": [11, 60], "flowchart": 11, "satisfi": [11, 26, 30, 31, 657, 663], "reactiv": [11, 12, 17, 18, 20, 43, 66, 268, 284, 289, 290, 292, 293, 295, 296, 297, 298, 300, 308, 311, 352, 383, 389, 391, 468, 489, 492, 493, 494, 496, 513, 514, 525, 528, 537, 549, 564, 566, 567, 569, 571, 578, 580, 593, 594, 608, 617, 626, 630, 631, 634, 636, 638, 643, 654, 657, 663, 668, 746], "mark": [11, 496, 649], "star": [11, 648], "sub": [11, 21, 77, 78, 79, 80, 109, 110, 113, 114, 115, 268, 269, 467, 542, 649], "accomplish": 11, "next_dm": [11, 463, 468], "next_nm": [11, 463], "next_mm": [11, 463, 464], "empti": [11, 12, 17, 26, 31, 42, 62, 64, 65, 66, 77, 78, 79, 80, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 159, 162, 188, 193, 194, 203, 219, 241, 260, 263, 264, 265, 268, 269, 315, 316, 317, 319, 321, 380, 388, 391, 402, 414, 416, 417, 418, 463, 468, 503, 574, 586, 594, 643, 650, 651, 668, 669, 745, 746], "termin": [11, 17, 26, 66, 115, 160, 175, 182, 184, 190, 195, 196, 203, 220, 502, 505, 511, 514, 521, 534, 541, 546, 594, 608, 610, 611, 612, 613, 614, 615, 616, 617, 647, 652, 654, 657, 658, 659, 660, 661, 663, 664, 750], "On": [11, 26], "trigger": [11, 191, 192, 195, 196, 505, 507, 511, 514, 519, 521, 657], "enforc": [11, 464, 468, 579, 594, 608], "constraint": [11, 17, 18, 21, 26, 31, 66, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 179, 181, 182, 183, 184, 185, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 260, 267, 285, 289, 305, 307, 316, 317, 321, 323, 324, 326, 327, 331, 333, 336, 338, 340, 344, 345, 346, 347, 348, 349, 362, 363, 364, 365, 366, 374, 381, 382, 383, 384, 385, 390, 391, 392, 407, 408, 416, 433, 474, 485, 487, 488, 534, 537, 551, 564, 577, 578, 579, 580, 594, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 662, 744, 745, 749], "print_soln": [11, 463], "print": [11, 19, 29, 36, 74, 75, 102, 105, 114, 124, 155, 164, 189, 238, 244, 245, 246, 249, 250, 251, 252, 255, 262, 264, 268, 285, 288, 289, 291, 294, 295, 297, 299, 302, 304, 307, 310, 312, 463, 466, 478, 481, 482, 483, 484, 488, 495, 497, 498, 594, 608, 609, 644, 657, 658, 659, 660, 661, 663, 664, 748, 777, 781], "save_soln": [11, 463], "save": [11, 26, 77, 78, 79, 80, 96, 97, 98, 100, 108, 114, 115, 265, 266, 416, 419, 463, 465, 467, 469, 478, 481, 482, 483, 484, 488, 496, 497, 538, 540, 574, 645, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667], "shape": [12, 473], "_0": [12, 17, 296], "lower": [12, 17, 26, 31, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 260, 284, 285, 286, 289, 292, 295, 296, 297, 305, 415, 496, 514, 521, 534, 551, 566, 567, 570, 571, 578, 594, 616, 617, 619, 620, 662, 743, 744, 745, 749], "bound": [12, 17, 19, 26, 31, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 262, 284, 285, 286, 289, 292, 295, 296, 297, 305, 317, 415, 534, 551, 594, 616, 617, 619, 620], "mathrm": [12, 17, 26, 31, 204, 211, 260, 296, 316, 416], "belong": [12, 258, 261, 353, 662, 668, 744, 746], "mme_gen_opf_ac": [12, 258, 391, 485], "mme_gen_opf_ac_ov": [12, 258, 473, 485], "If": [12, 13, 17, 26, 36, 61, 62, 63, 64, 77, 78, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 154, 162, 171, 173, 175, 178, 182, 183, 184, 185, 188, 192, 193, 238, 241, 245, 247, 249, 255, 256, 268, 315, 320, 476, 478, 487, 496, 497, 519, 529, 530, 531, 532, 537, 538, 539, 540, 551, 564, 565, 566, 569, 572, 574, 575, 577, 583, 584, 585, 586, 594, 617, 618, 641, 643, 644, 657, 663, 665, 666, 667, 668, 669, 745, 746, 748, 781], "write": [12, 107, 108, 109, 110, 111, 112, 113, 256, 488, 562, 666, 667], "h_": [12, 316, 391], "der": [12, 109, 110, 111, 112, 642], "pp": [12, 17, 26, 492, 493, 589, 639], "muv": [12, 26, 316, 391], "qq": [12, 111, 112, 115, 205, 211], "add_nln_constraint": [12, 114, 115, 487], "xx": [12, 17, 111, 113, 115, 260, 317, 381, 384, 391, 423, 487], "furthermor": [12, 43], "subset": [12, 42, 60, 76, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 260, 316, 317, 319, 391, 416, 417, 418, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607], "idx": [12, 17, 19, 39, 40, 41, 42, 59, 77, 78, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 193, 203, 260, 261, 268, 286, 292, 315, 316, 317, 318, 319, 320, 321, 350, 352, 391, 415, 416, 417, 418, 420, 426, 427, 428, 429, 430, 431, 432, 433, 437, 440, 443, 445, 448, 452, 487, 503, 550, 574, 608, 633, 634, 635, 636, 657, 669, 745], "66": [12, 20, 608], "68": [12, 18, 114, 608], "dh": [12, 26, 109, 115, 179, 182, 183, 184, 185, 205, 316, 391, 621], "oval_pq_capability_fcn": [12, 391], "p0": [12, 391], "q0": [12, 391, 473], "a2": [12, 391], "b2": [12, 391], "deal": [12, 115, 742], "ng": [12, 64, 74, 260, 261, 496, 525, 537, 547, 548, 564, 580, 586, 593, 594, 608, 643, 662, 668, 744, 746], "length": [12, 20, 42, 60, 156, 157, 158, 159, 160, 161, 172, 193, 198, 200, 298, 320, 500, 502, 512, 594], "isempti": [12, 17, 475, 476], "nargout": [12, 26, 171, 173, 175, 178, 182, 183, 184, 185, 203], "dhdp": 12, "spdiag": [12, 17], "dhdq": 12, "69": [12, 18, 608], "72": [12, 20, 608], "d2h": [12, 115, 316, 391, 622], "oval_pq_capability_hess": [12, 391], "zz": [12, 19], "spars": [12, 19, 23, 30, 31, 111, 115, 118, 120, 156, 157, 158, 159, 160, 161, 179, 180, 181, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 315, 316, 317, 391, 416, 420, 487, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 586, 617, 618], "d2h_pp": 12, "d2h_qq": 12, "now": [12, 17, 37, 104, 239, 496, 783], "add_constraint": [12, 17, 321, 349, 363, 364, 365, 366, 374, 381, 382, 383, 384, 385, 390, 391, 392, 396, 407, 408], "pqoval": 12, "pg": [12, 17, 18, 64, 74, 108, 110, 112, 113, 114, 115, 292, 415, 440, 443, 481, 482, 483, 484, 487, 490, 492, 493, 494, 496, 497, 510, 536, 568, 571, 578, 579, 580, 586, 591, 594, 617, 642, 662, 668, 744, 746, 747], "qg": [12, 18, 66, 108, 110, 115, 292, 440, 487, 490, 496, 513, 536, 571, 578, 579, 580, 586, 594, 617, 642, 643, 663, 668, 746], "data_model_el": [12, 17, 19, 269, 349, 420], "p_lb": 12, "pg_lb": [12, 292, 415], "p_ub": 12, "pg_ub": [12, 292, 415], "q_lb": 12, "qg_lb": [12, 292], "q_ub": 12, "qg_ub": [12, 292], "squar": [12, 316, 317, 391, 522, 528], "horizont": [12, 79, 80, 203, 391, 420, 475, 476, 569], "radiu": 12, "vertic": [12, 77, 78, 79, 80, 111, 115, 203, 207, 391, 415, 475, 476, 569], "hess": [12, 106, 109, 114, 115, 487], "let": [12, 17, 19, 111, 487, 528, 593, 594, 608], "know": [12, 352], "our": [12, 17, 19, 256, 497], "place": [12, 115, 488, 550, 572, 589, 669, 745], "xt_oval_cap_curv": [12, 258, 485], "task_tag": [12, 18, 314, 321, 328, 342, 471, 472, 473, 474], "otherwis": [12, 14, 16, 18, 63, 64, 106, 108, 109, 110, 111, 112, 114, 115, 193, 203, 241, 249, 250, 251, 260, 268, 415, 416, 420, 478, 480, 487, 497, 499, 503, 505, 517, 521, 534, 616, 617, 643, 644, 645, 646, 648, 649, 651, 652, 662, 666, 667, 744, 745, 746], "39": [12, 18, 608], "bind": [12, 17, 26, 594, 608, 745], "expect": [12, 17, 19, 20, 38, 66, 105, 106, 109, 115, 203, 240, 245, 247, 249, 251, 253, 257, 266, 467, 490, 497, 505, 521, 742, 743, 744, 745], "restrict": [12, 66, 473], "case39": 12, "10": [12, 13, 17, 18, 20, 26, 28, 31, 43, 156, 157, 158, 160, 161, 171, 172, 174, 177, 178, 182, 183, 184, 185, 187, 203, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 247, 249, 253, 305, 475, 489, 492, 493, 494, 496, 497, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 566, 567, 570, 571, 589, 594, 608, 668, 745, 746, 782], "______": 12, "_______": 12, "671": 12, "59": [12, 18, 19, 20, 492], "140": [12, 159], "646": 12, "300": [12, 18, 159, 219, 608], "16": [12, 19, 20, 112, 496, 566, 567, 570, 571, 608], "299": 12, "99": [12, 18, 212], "652": 12, "115": [12, 18, 608], "12": [12, 17, 18, 20, 108, 211, 245, 246, 249, 250, 252, 256, 496, 566, 567, 570, 571, 760, 761, 762], "508": [12, 18], "139": 12, "61": [12, 18, 493, 589, 608], "661": 12, "45": 12, "222": 12, "93": [12, 43, 106, 114, 415, 608], "580": [12, 608], "60": [12, 18, 19, 20, 320, 608], "645": 12, "564": 12, "8208": 12, "654": 12, "03": [12, 18, 20], "32": [12, 18, 608], "735": 12, "689": [12, 20], "81": [12, 18, 608], "886": 12, "682": 12, "74": 12, "171": 12, "94": [12, 497], "639": 12, "42": [12, 20, 215, 608], "128": 12, "46": 12, "672": 12, "253": 12, "14": [12, 18, 20, 496, 566, 567, 570, 571], "641": 12, "75": [12, 18], "147": 12, "08": [12, 43], "507": 12, "89": [12, 17, 18, 43, 608], "85": [12, 18, 20, 608], "223": 12, "649": 12, "87": [12, 18, 106, 114, 415, 494, 608], "164": 12, "86": [12, 608], "579": 12, "41": [12, 20, 515, 608], "125": [12, 18], "563": 12, "73": [12, 608], "121": [12, 608], "662": 12, "51": [12, 18, 201, 515], "8392": 12, "701": 12, "248": 12, "notic": [12, 17, 19], "display_soln": [12, 107, 108, 109, 110, 111, 112, 113, 115], "nli": [12, 109, 114, 115, 267, 467, 487, 616, 617], "nonlin": [12, 115], "ineq": [12, 117, 119], "ub": [12, 17, 18], "mu_ub": [12, 17, 305], "3e": 12, "06": [12, 18, 20, 497], "90806": 12, "07": 12, "270": [12, 18], "778": 12, "9e": 12, "28": 12, "8787": 12, "7e": 12, "117": 12, "1e": [12, 26, 66, 78, 115, 116, 123, 156, 157, 158, 159, 160, 161, 162, 171, 172, 174, 178, 182, 203, 284, 594, 608], "779": 12, "782": 12, "8e": 12, "103": 12, "48": [12, 18, 494], "459": 12, "163": 12, "4e": 12, "566": [12, 18], "547": 12, "31337": 12, "03857": 12, "lib": [12, 13, 14, 16, 17, 18, 19, 20, 256], "instal": [13, 15, 29, 38, 75, 105, 124, 155, 164, 189, 240, 244, 257, 478, 485, 609, 617, 783], "python": 13, "virtual": 13, "unix": [13, 247, 253], "maco": 13, "window": [13, 77, 78, 79, 80, 247, 253], "python3": 13, "venv": 13, "env": 13, "bin": 13, "script": [13, 251, 497, 536], "confirm": 13, "leav": [13, 586, 643], "finish": [13, 170, 246, 463], "deactiv": 13, "sphinxcontrib": 13, "matlabdomain": 13, "md": [13, 21, 58, 59, 62, 65, 77, 78, 79], "rtd": 13, "theme": 13, "pip": 13, "texliv": 13, "latex": [13, 21], "directori": [13, 14, 15, 16, 77, 78, 79, 80, 96, 97, 98, 100, 154, 256, 477, 478, 542], "latexpdf": 13, "twice": [13, 420, 668, 745], "pick": 13, "ensur": [13, 415, 502], "content": [13, 17, 60, 116, 121, 122, 123, 154, 162, 188, 247, 475, 476, 650, 657], "cross": 13, "date": [13, 29, 75, 124, 155, 164, 189, 241, 244, 609], "everyth": [13, 245, 594, 608, 783], "properli": [13, 108, 111, 112, 256], "creation": [13, 17, 561, 778], "rst": [13, 14, 15, 16], "stub": [13, 14, 15, 16], "mani": [13, 20, 108, 256, 657, 750], "pars": [13, 107, 108, 109, 111, 113, 115, 618, 649, 650, 651], "analyz": 13, "symlink": [13, 14, 15, 16], "subdirectori": 13, "generate_matpower_autodoc": 13, "hard": [13, 19, 745], "prompt": [13, 256, 478], "rebuild": [13, 262, 268, 583], "ref": [13, 14, 15, 17, 20, 259, 286, 287, 320, 415, 420, 427, 468, 490, 500, 501, 502, 514, 535, 536, 541, 546, 567, 610, 611, 612, 613, 614, 615, 637, 638, 640, 657, 750, 759, 761, 762], "generate_autodoc_stub": [13, 15], "generate_source_symlink": [13, 15], "j\u00f8rgen": 13, "cederberg": 13, "2024": [13, 20, 241, 562], "contrib": 13, "21": [13, 20, 496, 566, 570, 571, 575, 760, 761, 762], "zenodo": [13, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 782], "doi": [13, 26, 492, 493, 494, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 589, 782], "5281": [13, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 782], "7746009": 13, "dest": [14, 16], "escape_plu": 14, "success": [14, 16, 20, 36, 102, 107, 108, 109, 110, 111, 112, 113, 160, 190, 220, 238, 255, 256, 463, 465, 467, 469, 478, 492, 493, 494, 502, 534, 535, 594, 608, 616, 617, 625, 644, 654, 657, 658, 659, 660, 661, 662, 663, 664, 748, 781], "err_list": [14, 16], "stub_typ": [14, 16], "destdir": [14, 16], "prepend": [14, 16], "dir": [14, 16], "gh_base_url": [14, 16], "url": [14, 16], "mod": [14, 16], "modul": [14, 16], "pkg": [14, 16], "src_path": [14, 16], "o": [14, 16], "escap": 14, "error": [14, 16, 61, 115, 170, 262, 268, 476, 547, 548, 575, 643, 668], "fatal": [14, 16, 170], "blob": [14, 16], "class1": [14, 16], "class2": [14, 16], "class3": [14, 16], "class4": [14, 16], "func1": [14, 16], "func2": [14, 16], "func3": [14, 16], "func4": [14, 16], "install_dir": 15, "src": 16, "demonstr": [17, 18], "transform": [17, 18, 19, 20, 43, 283, 284, 311, 312, 361, 362, 363, 364, 365, 366, 367, 368, 413, 414, 421, 461, 471, 496, 497, 566, 617, 618, 645, 648, 755], "discuss": [17, 19], "exactli": [17, 192, 193, 497, 519], "p_": [17, 296], "p_1": 17, "_1": [17, 19, 296], "diagram": [17, 19], "_2": [17, 19], "_k": [17, 19], "p_k": 17, "q_k": 17, "p_2": 17, "q_1": 17, "q_2": 17, "setpoint": [17, 20, 262, 292, 293, 296, 496, 570, 571, 657], "appli": [17, 42, 43, 59, 60, 116, 121, 122, 123, 154, 156, 157, 158, 159, 160, 161, 162, 170, 181, 188, 203, 207, 247, 253, 268, 476, 479, 481, 482, 483, 484, 489, 492, 493, 494, 569, 585, 593, 594, 617, 618], "implmement": [17, 19], "legacy_dclin": [17, 18, 472], "whose": [17, 60, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 172, 190, 251, 420, 478, 495, 538, 543, 565, 575, 584, 585, 594, 633, 634, 635, 636, 650, 657, 743, 745], "role": 17, "piec": [17, 81, 268, 641, 643], "flag": [17, 26, 31, 66, 74, 77, 78, 79, 80, 107, 108, 109, 110, 111, 112, 113, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 191, 192, 193, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 262, 264, 268, 463, 502, 503, 505, 507, 516, 519, 521, 534, 541, 546, 594, 608, 610, 611, 612, 613, 614, 615, 616, 617, 654, 657, 658, 659, 660, 661, 663, 664, 668, 748, 750], "physic": [17, 19], "dme_dclin": 17, "extend": [17, 38, 240, 257, 496], "dme_dcline_opf": 17, "bus_fr": [17, 284, 296, 298, 311], "bus_to": [17, 284, 296, 298, 311], "loss0": [17, 296, 570], "loss1": [17, 296, 570], "vm_setpoint_fr": [17, 296], "vm_setpoint_to": [17, 296], "p_fr_lb": [17, 296], "p_fr_ub": [17, 296], "q_fr_lb": [17, 296], "q_fr_ub": [17, 296], "q_to_lb": [17, 296], "q_to_ub": [17, 296], "p_fr": [17, 18, 296], "q_fr": [17, 296], "p_to": [17, 296], "q_to": [17, 296], "dme_legacy_dclin": [17, 18, 258, 297, 472, 485], "fbus_on": [17, 296], "tbus_on": [17, 296], "p_fr_start": [17, 296], "p_to_start": [17, 296], "q_fr_start": [17, 296], "q_to_start": [17, 296], "th": [17, 111, 260, 415, 420, 496, 568, 585], "_start": 17, "horzcat": [17, 19, 268, 475, 476], "export_var": [17, 268, 284, 285, 286, 289, 292, 295, 296, 297, 303, 305, 306, 309], "var": [17, 60, 61, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 203, 268, 416, 417, 418, 419, 467, 487, 488, 496, 534, 548, 570, 579, 616, 617, 657], "export_vars_offline_v": [17, 268, 284, 285, 286, 289, 292, 295, 296, 297, 305, 306, 349], "info": [17, 19, 22, 23, 24, 25, 29, 39, 75, 76, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 164, 170, 183, 189, 193, 195, 196, 217, 241, 242, 243, 244, 268, 420, 497, 503, 504, 506, 510, 513, 515, 516, 518, 520, 534, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 616, 617, 645, 646, 648, 649, 651, 652, 657, 658, 659, 660, 661, 663, 664, 748], "b2i": [17, 19], "alreadi": [17, 19, 40, 41, 66, 114, 115, 537, 538, 539], "turn": [17, 19, 241, 284, 489, 496, 566], "bus_dm": 17, "isol": [17, 19, 259, 286, 287, 495, 496, 499, 539, 540, 544, 564, 567, 572], "fill": [17, 19, 39, 313, 618], "set_bus_type_pv": [17, 286], "vm_control": [17, 286, 287], "reli": [17, 19], "global": [17, 245, 246, 249, 250, 252, 259, 783], "apply_vm_setpoint": [17, 292, 293, 296], "i_fr": 17, "i_to": 17, "vm_start": [17, 286], "pp_have_section_sum": [17, 268, 284, 292, 293, 296, 298, 300, 301, 305, 308, 311], "pp_data_sum": [17, 268, 284, 292, 293, 296, 298, 300, 301, 305, 308, 311], "torf": [17, 107, 115, 241, 259, 262, 268, 269, 320, 475, 551, 573], "pp_arg": [17, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 307, 308, 311], "out_": [17, 262, 264, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 307, 308, 311], "fd": [17, 115, 172, 175, 177, 262, 268, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 305, 306, 307, 308, 311, 463, 466, 488, 495, 594, 644], "fprintf": 17, "29": [17, 241, 256], "2f": 17, "mw": [17, 18, 74, 289, 292, 295, 296, 297, 300, 305, 306, 308, 489, 496, 497, 549, 566, 567, 570, 571, 576, 594, 608, 642, 662, 668, 743, 744, 745], "mvar": [17, 18, 43, 289, 292, 295, 296, 297, 300, 305, 308, 496, 549, 566, 567, 570, 571, 594, 745], "pp_have_section_det": [17, 268, 284, 286, 287, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311], "pp_get_headers_det": [17, 268, 284, 286, 287, 289, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311], "pp_data_det": [17, 268], "header": [17, 106, 262, 264, 268, 463], "third": [17, 42, 43], "inj": [17, 18], "1234567": 17, "123456789": 17, "90": [17, 18, 608], "123456": 17, "str": [17, 114, 268, 475, 650], "pp_data_row_det": [17, 268, 284, 286, 287, 289, 290, 292, 293, 296, 298, 300, 301, 305, 306, 308, 311], "sprintf": [17, 19], "7d": 17, "9d": 17, "6d": 17, "themselv": [17, 106, 114, 115, 313, 529, 531, 617, 618], "chose": 17, "keep": [17, 20, 106, 114, 115, 313, 487], "check": [17, 38, 61, 76, 114, 170, 240, 241, 246, 254, 257, 259, 268, 269, 320, 466, 551, 573, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 643, 742, 743, 744, 745], "against": 17, "dme_legacy_dcline_opf": [17, 18, 258, 472, 485], "mu_p_fr_lb": [17, 297], "mu_p_fr_ub": [17, 297], "mu_q_fr_lb": [17, 297], "mu_q_fr_ub": [17, 297], "mu_q_to_lb": [17, 297], "mu_q_to_ub": [17, 297], "polynomi": [17, 81, 260, 261, 389, 390, 396, 496, 536, 568, 593, 626, 627, 641, 642], "breakpoint": [17, 260], "appear": [17, 106, 114, 115, 487], "cost_tabl": [17, 258, 261, 295, 297, 389, 476, 485], "have_cost": [17, 292, 295, 296, 297], "routin": [17, 37, 104, 180, 206, 239, 256, 539, 575], "whether": [17, 66, 77, 78, 79, 80, 108, 114, 115, 156, 157, 158, 159, 160, 161, 193, 202, 203, 242, 243, 247, 250, 253, 471, 472, 478, 503, 516, 537, 541, 546, 564, 610, 611, 612, 613, 614, 615, 643, 750], "build_cost_param": [17, 295, 297, 390, 392, 396], "conveni": [17, 536, 585], "cost_table_util": [17, 258, 260, 485], "ismemb": [17, 547, 548], "variablenam": [17, 475], "poli": [17, 260, 396], "poly_param": [17, 260, 261, 389], "pwl": [17, 260, 261, 389, 396, 617], "pwl_param": [17, 260, 261, 389], "els": [17, 18, 241, 256, 668], "lim": [17, 262, 264, 285, 288, 289, 291, 294, 295, 297, 299, 302, 304, 307, 310, 312, 317, 570, 594, 743, 745], "lb": [17, 18, 320], "pp_have_section_lim": [17, 285, 289, 295, 297, 305, 307], "pp_binding_rows_lim": [17, 285, 289, 295, 297, 305, 307], "pp_get_headers_lim": [17, 285, 289, 295, 297, 305, 307], "pp_data_row_lim": [17, 285, 289, 295, 297, 305, 307], "ctol": [17, 307], "ptol": [17, 307], "dme_shared_opf": [17, 258, 285, 288, 289, 291, 294, 295, 297, 299, 302, 304, 305, 306, 310, 312, 485], "mu": [17, 18, 26, 109, 115, 117, 119, 182, 183, 184, 185, 467, 522, 523, 526, 534, 616, 617, 662, 743, 744], "890": 17, "12345": 17, "78": 17, "mu_lb": [17, 305], "3f": 17, "dcline": [17, 540, 570, 647, 742], "dclinecost": 17, "dmce_legacy_dcline_mpc2": [17, 18, 258, 472, 485], "data_field": [17, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "df": [17, 26, 110, 112, 115, 180, 182, 183, 184, 185, 206, 260, 269, 350, 487, 594, 608, 617, 626, 627, 642], "default_export_data_t": [17, 269, 270, 272, 275, 276], "retriev": [17, 114, 320, 475, 476, 594, 608], "default_export_data_nrow": [17, 269], "dt": [17, 269], "idx_dclin": [17, 485, 676, 742, 751], "qmaxt": [17, 570], "major": [17, 594, 608], "directi": 17, "gcip_fcn": 17, "ob": 17, "dcline_cost_import": [17, 276], "gcep_fcn": 17, "dcline_cost_export": [17, 276], "br_statu": [17, 489, 536, 566, 570], "f_bu": [17, 522, 526, 536, 566, 570], "t_bu": [17, 536, 566, 570], "vf": [17, 496, 529, 531, 549, 566, 570], "vt": [17, 106, 113, 114, 115, 415, 487, 496, 549, 566, 570], "pmin": [17, 45, 64, 77, 113, 115, 473, 496, 497, 536, 570, 571, 573, 641, 668, 745, 746, 748], "pmax": [17, 43, 64, 77, 103, 113, 115, 473, 489, 496, 497, 502, 510, 511, 536, 570, 571, 573, 641, 657, 662, 744, 745], "qminf": [17, 570], "qmaxf": [17, 570], "qmint": [17, 570], "qf": [17, 528, 536, 566, 570], "pt": [17, 131, 536, 566, 570, 594, 617], "qt": [17, 536, 566, 570], "isfield": 17, "mu_pmin": [17, 536, 570, 571, 749], "mu_pmax": [17, 536, 570, 571, 749], "mu_qminf": [17, 570], "mu_qmaxf": [17, 570], "mu_qmint": [17, 570], "mu_qmaxt": [17, 570], "static": [17, 111, 113, 259, 260, 261, 275, 475, 502, 548], "dmce_gen_mpc2": [17, 258, 485], "gencost": [17, 20, 39, 40, 41, 60, 63, 64, 275, 487, 496, 534, 536, 537, 539, 564, 568, 575, 580, 591, 593, 616, 617, 618, 626, 642, 643, 658, 660, 661, 664, 666, 668, 742, 747, 748], "gencost2cost_t": [17, 275], "cost_table2gencost": [17, 275], "next": [17, 19, 63, 64, 114, 115, 163, 190, 192, 193, 463, 476, 502, 511, 512, 514, 519, 663, 668, 748], "nme_legacy_dclin": [17, 258, 445, 448, 485], "np": [17, 19, 415, 420, 421, 433, 436, 437, 444, 449, 450, 451, 456, 461, 548], "nz": [17, 19, 145, 415, 420, 433, 436, 437, 444, 668], "anyth": [17, 19, 245, 594, 608], "nme_legacy_dcline_ac": [17, 258, 446, 447, 485], "form_ac": [17, 19, 258, 317, 318, 319, 416, 417, 418, 485, 773, 774, 775, 776], "add_zvar": [17, 19, 415, 420, 433, 437, 440, 443, 445, 448], "ndc": [17, 742], "nk": [17, 19, 420], "add_var": [17, 19, 114, 115, 321, 332, 334, 337, 339, 341, 349, 383, 389, 396, 407, 415, 420, 487], "pdcf": [17, 445, 448], "qdcf": [17, 445], "pdct": [17, 445, 448], "inf": [17, 31, 64, 108, 111, 113, 115, 156, 157, 158, 159, 160, 161, 171, 172, 174, 178, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 249, 415, 594, 608, 745], "qdct": [17, 445], "spey": 17, "add_vvar": [17, 19, 415, 420, 428, 429, 430, 431, 432], "defer": [17, 19], "recal": [17, 19], "omit": [17, 19, 106, 114, 115, 262, 265, 268, 320, 321, 415, 420, 475, 487], "49": [17, 18, 106, 114, 415], "proper": [17, 62, 478], "becom": [17, 19, 26, 43, 261, 594], "identii": 17, "nme_legacy_dcline_acc": [17, 18, 258, 472, 485], "form_acc": [17, 19, 258, 316, 318, 417, 423, 428, 430, 434, 438, 441, 446, 453, 458, 485], "nme_legacy_dcline_acp": [17, 18, 258, 472, 485], "form_acp": [17, 19, 258, 316, 317, 418, 424, 429, 431, 435, 439, 442, 447, 449, 451, 454, 459, 461, 485], "nme_legacy_dcline_dc": [17, 18, 258, 472, 485], "form_dc": [17, 258, 316, 317, 318, 419, 425, 432, 443, 448, 455, 460, 485], "z_1": 17, "z_2": 17, "analog": 17, "incorpor": [17, 19, 43], "impli": 17, "beyond": [17, 43, 537, 564, 650, 651], "mme_legacy_dclin": [17, 258, 396, 399, 400, 485], "slightli": [17, 663], "mme_legacy_dcline_pf_ac": [17, 18, 258, 472, 485], "get_idx": [17, 114, 115], "s_fr": 17, "gs_": [17, 316, 416], "i1": [17, 106, 108, 111, 114, 115, 260, 321, 350, 389, 396, 415, 475, 487], "iN": [17, 106, 108, 111, 114, 115, 321, 350, 415, 475, 487], "s_to": 17, "imag": [17, 416, 417, 549], "mme_legacy_dcline_pf_dc": [17, 18, 258, 472, 485], "50": [17, 18, 43, 201, 320, 515, 668], "mme_legacy_dcline_opf": [17, 258, 397, 398, 485], "ccv": [17, 260, 580, 617], "just": [17, 268, 463, 476], "ydc": 17, "dimenion": 17, "add_lin_constraint": [17, 114, 115, 487], "dcline_legaci": 17, "ycondc": 17, "add_cost": [17, 321, 342, 349, 389, 390, 396, 407], "kind": [17, 268], "less": [17, 30, 249, 260, 536], "than": [17, 26, 58, 74, 108, 109, 115, 163, 249, 260, 316, 317, 391, 416, 475, 488, 496, 536, 540, 569, 575, 585, 594, 617, 618, 639, 650, 651, 669], "greater": [17, 58, 116, 123], "have_quad_cost": [17, 260, 389, 396], "add_quad_cost": [17, 114, 115, 487], "polpdcf": 17, "higher": [17, 201, 249, 260, 515], "i3": [17, 260, 389, 396], "cost_pdcf": 17, "poly_cost_fcn": [17, 260], "poly_coef": [17, 260], "add_nln_cost": [17, 114, 115, 487], "pwldc": 17, "interior_x0": [17, 328, 371, 372, 374, 375, 376, 380, 388, 389, 396, 402, 414], "x0": [17, 26, 31, 113, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 328, 371, 372, 374, 375, 376, 380, 388, 389, 396, 402, 414], "feasibl": [17, 26, 43, 121, 594, 608], "vv": [17, 114, 115, 449], "maxc": [17, 260, 261], "max_pwl_cost": [17, 260, 261], "ab": [17, 202, 516, 528, 529, 530, 531, 532, 549], "mathmat": [17, 349, 463, 465, 467, 469], "mme_legacy_dcline_opf_ac": [17, 18, 258, 472, 485], "network_model_el": [17, 349], "vm_setpoint": [17, 292, 466], "sign": [17, 195, 203, 506, 516], "swap": 17, "mme_legacy_dcline_opf_dc": [17, 18, 258, 472, 485], "were": [17, 43, 109, 115, 246, 496, 572], "side": [17, 20, 108, 111, 115, 757, 758, 759, 762], "net_model_dc": [17, 258, 485], "mme_legacy_opf_dcline_ac": 17, "math_model_opf_acc": [17, 258, 331, 334, 485], "inclus": [17, 647], "explain": [17, 528, 529, 530, 531, 532], "xt_legacy_dclin": [17, 18, 258, 485, 769], "t_case9_dclin": [17, 18, 485, 742, 751], "go": [17, 590], "gizmo": [17, 763], "entir": [18, 62, 109, 115, 316, 319, 539, 572, 746], "20": [18, 26, 43, 106, 201, 215, 320, 415, 489, 496, 497, 502, 515, 566, 570, 571, 594, 608, 668, 746], "_element_class": [18, 471, 472], "fmt": [18, 314, 471, 472, 474], "mpc2": [18, 265, 266, 314, 471, 472, 474, 498, 540], "v_cartesian": [18, 464, 466, 468, 594], "immedi": [18, 488], "succeed": [18, 20, 203, 465, 467, 469, 478, 654, 657, 658, 659, 660, 661, 663, 664], "27": [18, 20, 172], "23": [18, 111, 570, 571], "setup": [18, 20, 329, 340], "04": [18, 594, 608], "6518": 18, "hr": [18, 496, 745], "area": [18, 43, 60, 286, 489, 496, 539, 551, 567, 569, 571, 572, 575, 594, 608, 617, 618, 645, 649, 666, 668, 746, 748], "zone": [18, 43, 62, 281, 286, 306, 408, 474, 496, 536, 538, 565, 567, 662, 668, 744, 746], "319": 18, "820": 18, "900": 18, "110": [18, 43], "315": 18, "00": [18, 20, 256], "124": [18, 608], "40": [18, 159, 320, 497, 515, 594, 608], "minimum": [18, 178, 203, 496, 566, 567, 571, 594, 657], "maximum": [18, 26, 31, 43, 160, 171, 172, 173, 174, 175, 178, 182, 184, 203, 220, 249, 260, 261, 496, 498, 536, 541, 546, 566, 567, 571, 594, 608, 610, 611, 612, 613, 614, 615, 657, 662, 744, 745, 750], "066": 18, "30": [18, 43, 85, 86, 87, 88, 89, 172, 215, 320, 496, 568, 571, 594, 608, 675], "100": [18, 20, 43, 219, 489, 608, 668, 745], "deg": [18, 20, 745], "11": [18, 20, 30, 31, 43, 111, 137, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 241, 496, 566, 567, 570, 571, 608, 668], "lmp": 18, "mwh": [18, 74, 497, 574], "24": [18, 103, 117, 571, 608], "62": [18, 20, 608], "mvarh": 18, "43": 18, "mag": [18, 418], "pu": [18, 594, 745], "ang": [18, 418, 610, 611, 612, 613, 614, 615], "000": 18, "15": [18, 19, 20, 43, 112, 415, 494, 496, 566, 567, 570, 571], "954": 18, "107": 18, "035": 18, "277": 18, "047": 18, "623": 18, "094": 18, "470": 18, "967": 18, "298": 18, "078": [18, 20], "952": 18, "085": 18, "992": 18, "600": [18, 159, 219, 608], "081": 18, "160": 18, "476": 18, "427": 18, "097": 18, "205": 18, "043": 18, "112": [18, 608], "067": 18, "079": 18, "consumpt": 18, "35": [18, 20, 608], "19": [18, 20, 111, 496, 566, 570, 571, 608], "47": [18, 20], "54": [18, 43], "31": [18, 608], "18": [18, 20, 31, 111, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 256, 496, 566, 570, 571, 608], "25": [18, 43, 117, 320, 475, 571, 608, 745], "88": [18, 608], "02": [18, 20], "65": [18, 608], "37": [18, 172, 608], "38": [18, 43, 106, 114, 415, 608], "64": [18, 20, 608], "13": [18, 20, 43, 116, 159, 247, 253, 496, 566, 567, 570, 571], "70": [18, 43, 608], "01": [18, 20, 497, 594], "58": [18, 608], "131": 18, "95": [18, 20, 26, 567, 594, 608], "34": [18, 20, 43, 204, 608], "36": [18, 608], "97": [18, 20, 608], "92": [18, 608], "84": [18, 20, 608], "231": 18, "197": 18, "010": 18, "046": 18, "250": [18, 43, 219, 608], "98": [18, 20, 494], "22": [18, 26, 43, 111, 570, 571], "mu_sm_fr": 18, "sm_fr": 18, "sm_ub": 18, "sm_to": 18, "mu_sm_to": 18, "762": [18, 492], "375": 18, "760": 18, "prototyp": [18, 20, 314, 485], "wider": 19, "rang": [19, 43, 641], "fictiti": 19, "wide": [19, 60, 470, 569, 668], "verifi": [19, 256], "facil": 19, "sai": 19, "_g": 19, "proport": [19, 585], "imped": [19, 20, 298, 300, 492, 493, 494, 496, 549, 587, 589, 590, 594], "_3": 19, "_4": 19, "_5": 19, "_6": 19, "_7": 19, "_8": 19, "dme_gizmo": 19, "bus_1": 19, "bus_2": 19, "bus_3": 19, "y1r": 19, "y1i": 19, "y2r": 19, "y2i": 19, "m1r": 19, "m1i": 19, "m2r": 19, "m2i": 19, "lr": 19, "li": [19, 111], "ir": 19, "ii": [19, 60], "ni": 19, "sr": 19, "si": [19, 416], "zr1": 19, "zi1": 19, "zr2": 19, "zi2": 19, "bus1": 19, "bus2": 19, "bus3": 19, "until": [19, 475, 594, 748], "look": [19, 20, 170, 256, 575], "dme_branch": [19, 258, 285, 485], "focu": 19, "assumpt": [19, 580], "nme_gizmo": 19, "nme_gizmo_ac": 19, "17": [19, 20, 31, 43, 87, 89, 106, 111, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 496, 566, 567, 570, 571, 608, 742], "zmax": 19, "vname_r": 19, "d_gizmo": 19, "vname_i": 19, "y1": [19, 542], "1j": 19, "y2": 19, "m1": 19, "m2": 19, "ss": 19, "j1": [19, 58, 475], "j2": [19, 58], "j3": 19, "arbitrarili": 19, "obei": 19, "zr1_gizmo": 19, "nme_gizmo_acc": 19, "nme_gizmo_acp": 19, "xt_gizmo": 19, "mind": 20, "enhanc": 20, "plan": [20, 74, 548], "futur": [20, 64, 115, 478, 581, 594, 746], "don": [20, 193, 478, 503, 583], "t_run_mp_3p": [20, 485, 753], "t_case3p_a": [20, 485, 753, 756, 757, 758, 759, 761, 762], "residu": [20, 547], "375e": 20, "042e": 20, "287e": 20, "179e": 20, "961e": 20, "570e": 20, "967e": 20, "405e": 20, "05": [20, 26, 203, 489, 594], "400e": 20, "090e": 20, "908e": 20, "newton": [20, 26, 115, 165, 167, 171, 172, 173, 175, 176, 177, 178, 500, 583, 594, 608, 610, 611, 612, 613, 614, 615, 663], "converg": [20, 115, 158, 159, 171, 172, 173, 174, 175, 178, 183, 184, 185, 208, 209, 210, 216, 217, 218, 219, 221, 500, 534, 541, 546, 610, 611, 612, 613, 614, 615, 616, 617, 644, 657, 750], "ph": [20, 26], "6109": 20, "kw": [20, 293, 298, 301, 311], "4206": 20, "kvar": [20, 293, 298, 311], "5450": 20, "2442": 20, "561": 20, "1173": 20, "590": 20, "kv": [20, 43, 286, 287, 311, 496, 567], "1996": 20, "120": 20, "1637": 20, "1105": 20, "0821": 20, "119": 20, "26": [20, 117, 608], "3055": 20, "2547": 20, "123": [20, 608], "2028": 20, "114": [20, 608], "79": [20, 494], "1750": 20, "9298": 20, "126": 20, "80": [20, 43], "8327": 20, "102": 20, "1341": 20, "970": 20, "52": [20, 515, 608], "2096": 20, "2672": 20, "1894": 20, "1275": 20, "8500": 20, "1800": 20, "9000": 20, "2375": 20, "9500": 20, "229": 20, "345": 20, "152": 20, "455": 20, "1036": 20, "1364": 20, "230": 20, "144": 20, "1323": 20, "881": 20, "2043": 20, "1133": 20, "2598": 20, "1508": 20, "1337": 20, "963": 20, "2074": 20, "1319": 20, "2652": 20, "1830": 20, "790": 20, "871": 20, "780": 20, "xfrm": 20, "xfmr": [20, 648], "substat": 20, "4bu": [20, 755], "unb": [20, 755], "dss": [20, 755], "bal": [20, 755], "opendss": [20, 755], "ieee": [20, 26, 43, 492, 493, 497, 589, 639, 755], "ground": [20, 755], "wye": [20, 755], "sourceforg": [20, 755], "net": [20, 463, 755], "electricdss": [20, 755], "head": [20, 755], "tree": [20, 755], "trunk": [20, 755], "distrib": [20, 755], "ieeetestcas": [20, 755], "basemva": [20, 487, 496, 497, 522, 523, 524, 526, 527, 529, 530, 531, 532, 534, 549, 571, 575, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 616, 617, 618, 626, 640, 644, 648, 658, 659, 660, 661, 663, 664, 666, 748, 749], "freq": [20, 298], "frequenc": [20, 298], "hz": [20, 298], "basekva": 20, "busid": 20, "basekv": [20, 43, 496, 567], "vm1": [20, 287], "vm2": [20, 287], "vm3": [20, 287, 429], "va1": [20, 287], "va2": [20, 287], "va3": [20, 287, 429], "brid": 20, "lcid": 20, "len": [20, 203, 298], "5280": 20, "2500": [20, 594, 608], "xfid": 20, "6000": 20, "ldid": 20, "ldbu": 20, "pd1": [20, 301], "pd2": [20, 301], "pd3": [20, 301], "ldpf1": 20, "ldpf2": 20, "ldpf3": 20, "genid": 20, "gbu": 20, "vg1": 20, "vg2": 20, "vg3": 20, "pg1": [20, 293], "pg2": [20, 293], "pg3": [20, 293, 437], "qg1": [20, 293], "qg2": [20, 293], "qg3": [20, 293, 437], "r11": 20, "r21": 20, "r31": 20, "r22": 20, "r32": 20, "r33": 20, "x11": 20, "x21": 20, "x31": 20, "x22": 20, "x32": 20, "x33": 20, "c11": 20, "c21": 20, "c31": 20, "c22": 20, "c32": 20, "c33": 20, "457541": 20, "15594": 20, "153474": 20, "466617": 20, "157996": 20, "461462": 20, "501648": 20, "384909": 20, "04813": 20, "423624": 20, "06502": 20, "0671": 20, "86241": 20, "85323": 20, "875": 20, "09098": 20, "3254": 20, "xfrm3p": 20, "mile": [20, 298], "configur": 20, "referenc": [20, 114, 115, 298, 617, 618], "hertz": 20, "dme_bus3p": [20, 258, 288, 471, 485], "slack": [20, 26, 352, 360, 492, 493, 494, 585, 589, 590, 594, 610, 611, 612, 613, 614, 615, 657, 663], "nomin": [20, 284, 300, 308, 496, 566, 586, 587, 746], "degre": [20, 178, 284, 285, 286, 287, 297, 491, 496, 566, 567, 594], "dme_line3p": [20, 258, 299, 471, 485], "dme_xfmr3p": [20, 258, 312, 471, 485], "resist": [20, 284, 298, 311, 496, 566], "reactanc": [20, 284, 298, 311, 496, 566], "dme_load3p": [20, 258, 302, 471, 485], "demand": [20, 66, 300, 301, 308, 492, 493, 494, 496, 567, 573, 574, 587, 746], "lpf1": 20, "lpf2": 20, "lpf3": 20, "dme_gen3p": [20, 258, 294, 471, 485], "3x3": [20, 298], "capacit": 20, "nf": [20, 298], "dme_buslink": [20, 258, 291, 471, 485], "linid": 20, "bus3pid": 20, "t_case3p_b": [20, 485, 753], "t_case3p_c": [20, 485, 753], "t_case3p_d": [20, 485, 753], "t_case3p_": [20, 485, 753], "t_case3p_f": [20, 485, 753], "t_case3p_g": [20, 485, 753, 762], "t_case3p_h": [20, 485, 753], "nlp": [21, 26, 32, 33, 38, 115, 166, 179, 180, 181, 182, 183, 184, 185, 205, 206, 207, 226, 230, 239], "site": [21, 43, 62], "consult": 21, "relnot": 21, "appendix": [21, 594], "goal": [21, 106], "restructur": 21, "still": [21, 109, 115, 245, 246, 249, 250, 252, 256, 496, 745], "tn1": 21, "auction": [21, 560, 671, 672, 673, 674, 736], "tn2": [21, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "tn3": [21, 524, 525, 530], "tn4": [21, 523, 524, 525, 526, 527, 529, 530, 531, 532], "cite": 21, "donat": 21, "detect": [22, 23, 24, 25, 38, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 190, 193, 194, 195, 196, 202, 203, 240, 241, 242, 243, 256, 257, 485, 502, 503, 504, 506, 510, 513, 516, 518, 520, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 594, 652], "lu": [22, 30, 178, 594], "privat": [22, 23, 24, 25, 37, 104, 114, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 239, 242, 243, 256, 485, 487, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563], "lu_vec": 22, "pardiso": [23, 24, 25, 26, 30, 33, 594], "parallel": [23, 43], "direct": [23, 30, 170, 203, 499, 517, 668, 743], "have_feature_pardiso_legaci": [23, 25, 37, 38], "have_feature_pardiso_object": [23, 24, 37, 38], "pardiso_legaci": 24, "v5": 24, "mex": [24, 115, 154, 185, 210, 219, 594, 608], "have_feature_pardiso": [24, 25, 37, 38], "pardiso_object": 25, "v6": [25, 114, 163], "later": [25, 114, 131, 135, 137, 140, 143, 147, 150, 320, 479, 538, 545, 594, 608], "f_fcn": [26, 182, 183, 184, 185], "xmin": [26, 31, 113, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "xmax": [26, 31, 113, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "gh_fcn": [26, 182, 183, 184, 185], "hess_fcn": [26, 182, 183, 184, 185], "exitflag": [26, 31, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "minim": [26, 27, 182, 183, 184, 185, 186], "subject": [26, 28, 31, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 187, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 547, 548], "inequ": [26, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 179, 181, 182, 183, 184, 185, 205, 207, 487, 594, 608, 616, 617, 621, 745], "9th": [26, 182, 183, 184, 185], "d2f": [26, 110, 112, 115, 180, 182, 183, 184, 185, 206, 260, 350, 487, 594, 608, 617, 626, 627, 642], "infti": [26, 31, 204, 211], "dg": [26, 109, 115, 179, 182, 183, 184, 185, 205, 317, 467, 594, 608, 617, 623, 630], "lagrangian": [26, 181, 182, 183, 184, 185, 207], "lxx": [26, 181, 182, 183, 184, 185, 207], "eqnonlin": [26, 107, 108, 109, 110, 111, 112, 113, 115, 181, 182, 183, 184, 185, 207], "ineqnonlin": [26, 107, 108, 109, 110, 111, 112, 113, 115, 181, 182, 183, 184, 185, 207], "parenthes": [26, 115, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "linsolv": [26, 594], "feastol": [26, 116, 594], "toler": [26, 66, 115, 121, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 202, 203, 249, 307, 516, 541, 546, 594, 608, 610, 611, 612, 613, 614, 615, 654, 658, 659, 660, 661, 663, 664, 750], "gradtol": [26, 594], "comptol": [26, 594], "complementar": 26, "costtol": [26, 594], "max_it": [26, 154, 162, 171, 172, 173, 174, 175, 178, 182, 188, 203, 594], "150": [26, 594, 608], "step_control": [26, 115, 185, 210, 219, 594], "enabl": [26, 203, 594, 742, 743, 744, 745], "sc": [26, 115, 163, 185, 210, 219, 548, 594, 608, 714], "red_it": [26, 594], "reduct": [26, 594, 608], "cost_mult": [26, 181, 182, 183, 184, 185, 207], "improv": [26, 43, 748], "3rd": [26, 42, 115, 247, 253, 487, 489, 530, 532, 537, 538, 540, 564, 565, 743], "xi": [26, 594], "99995": [26, 594], "alpha": [26, 66, 188, 260, 593, 594], "sigma": [26, 594], "z0": [26, 267, 496, 594, 617, 618, 748], "alpha_min": [26, 594], "alpha_p": 26, "alpha_d": 26, "smaller": [26, 42, 492, 493, 494, 594, 639, 669], "rho_min": [26, 594], "rho_t": [26, 594], "rho_max": [26, 594], "mu_threshold": [26, 594], "kt": [26, 594], "forc": [26, 115, 594], "max_steps": [26, 594], "1e10": [26, 594], "norm": [26, 171, 172, 174, 178, 198, 594], "exce": [26, 594, 657], "full_hist": 26, "hist": [26, 31, 171, 172, 174, 178], "trajectori": [26, 31, 62, 171, 172, 174, 178], "altern": [26, 30, 31, 62, 115, 118, 120, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 658, 659, 660, 661, 663, 664], "algorithm": [26, 30, 115, 159, 163, 171, 172, 173, 174, 175, 178, 182, 185, 208, 209, 210, 219, 543, 545, 581, 594, 608, 617, 654, 658, 659, 660, 661, 663, 664, 748], "exit": [26, 31, 36, 102, 107, 108, 109, 110, 111, 112, 113, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 175, 178, 182, 183, 184, 185, 190, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 238, 255, 502, 781], "reach": [26, 31, 191, 192, 193, 203, 502, 503, 505, 511, 514, 519, 521, 594, 657], "fail": [26, 31, 183, 203, 217, 247, 249, 250, 253, 254, 465, 467, 469, 594, 654, 657, 658, 659, 660, 661, 663, 664], "feascond": [26, 31], "gradcond": [26, 31], "compcond": [26, 31], "costcond": [26, 31], "gamma": [26, 31], "stepsiz": [26, 31, 203, 657], "alphap": [26, 31], "alphad": [26, 31], "messag": [26, 31, 66, 115, 156, 157, 158, 159, 160, 161, 171, 172, 173, 174, 178, 193, 203, 212, 247, 249, 250, 252, 253, 463, 497, 503, 575, 594, 608, 645, 646, 648, 649, 651, 657, 667], "langrang": [26, 31, 115, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "kuhn": [26, 31, 115, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 566, 567, 570, 571, 622], "tucker": [26, 31, 115, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 566, 567, 570, 571, 622], "mu_l": [26, 31, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "mu_u": [26, 31, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "almost": [26, 31, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 178, 182, 183, 184, 185, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "fmincon": [26, 115, 130, 131, 166, 168, 179, 180, 181, 182, 183, 184, 185, 187, 205, 206, 207, 210, 545, 594, 597, 608, 719], "toolbox": [26, 31, 37, 104, 115, 130, 131, 132, 135, 141, 142, 143, 145, 146, 147, 149, 150, 156, 158, 159, 160, 161, 162, 172, 173, 174, 175, 178, 182, 183, 184, 185, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 239, 256, 594, 608, 609], "aeq": [26, 31, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "beq": [26, 31, 156, 157, 158, 159, 160, 161, 182, 183, 184, 185, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "en": [26, 182, 183, 184, 185, 208, 209, 210], "wikipedia": [26, 182, 183, 184, 185], "wiki": [26, 182, 183, 184, 185], "nonlinear_program": [26, 182, 183, 184, 185], "f2": [26, 172, 174, 182, 183, 184, 185, 496, 568], "gh2": [26, 182, 183, 184, 185], "hess2": [26, 182, 183, 184, 185], "nargin": [26, 182, 183, 184, 185, 256], "rai": 26, "wang": 26, "hi": 26, "phd": 26, "dissert": 26, "applic": [26, 116, 121, 122, 123, 154, 162, 188, 548, 559], "multi": [26, 170, 476, 594], "period": [26, 42, 58, 60, 62, 66, 74, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 103, 594, 748], "secur": [26, 43, 62, 70, 73, 81], "market": 26, "thesi": 26, "cornel": [26, 212, 556, 558, 563, 594, 608], "univers": 26, "2007": 26, "murillo": 26, "sanchez": 26, "thoma": 26, "issu": [26, 256, 476, 494], "transact": [26, 492, 493, 589, 639], "vol": [26, 492, 493, 589, 639], "aug": [26, 43], "1185": 26, "1193": 26, "1109": [26, 492, 493, 589], "tpwr": 26, "901301": 26, "unconstrain": [27, 186, 496, 566, 577, 621, 622], "banana": [27, 186], "x_1": [28, 176, 177, 187, 197, 260], "x_2": [28, 176, 177, 187, 197, 260], "x_3": [28, 187], "varargin": [29, 75, 77, 78, 79, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 155, 164, 174, 178, 189, 244, 260, 277, 280, 320, 327, 332, 334, 337, 339, 341, 350, 415, 420, 462, 475, 479, 481, 482, 483, 484, 487, 533, 540, 542, 545, 592, 594, 608, 609, 617, 653, 656, 662, 666, 748], "mpver": [29, 75, 124, 155, 164, 189, 485, 751], "previou": [30, 190, 198, 199, 200, 203, 485, 500, 502, 503, 508, 509, 512, 517, 594, 658, 659, 660, 661, 663, 664], "qa": 30, "gilbert": [30, 178, 594], "peierl": [30, 178, 594], "permut": 30, "umfpack": [30, 178, 594], "rh": [30, 118, 120, 260, 487, 580], "alwai": [30, 42, 66, 115, 190, 502, 542], "backslash": [30, 115, 178, 594], "decomposit": [30, 594], "substitut": [30, 594], "short": [30, 172, 265, 284, 315, 317, 318, 319, 496, 566], "cut": 30, "overhead": 30, "thu": [30, 42], "better": [30, 74, 594], "small": [30, 178, 594], "nout": 30, "vec": 30, "thresh": [30, 115], "lu3": [30, 178, 594], "lu3a": 30, "lu4": [30, 178, 594], "lu5": [30, 178, 594], "lu3m": 30, "lu3am": 30, "lu4m": 30, "lu5m": 30, "paren": [30, 66, 115], "arg": [30, 61, 115, 157, 178, 203, 215, 415, 475, 488, 502, 515, 522, 594], "amd": [30, 178, 594], "pivot": 30, "threshold": [30, 58, 115], "mtype": 30, "nonsymmetr": 30, "iparm": 30, "1st": [30, 42, 60, 61, 108, 111, 190, 316, 416, 489, 502, 522, 523, 524, 525, 526, 527, 617, 743], "2nd": [30, 42, 247, 253, 316, 415, 416, 487, 489, 522, 523, 524, 525, 526, 527, 537, 538, 540, 551, 564, 565, 617, 693, 743], "dparm": 30, "tr": [30, 108, 115], "miss": [31, 39, 61, 109, 110, 113, 115, 315, 316, 319, 416, 417, 418, 618], "quadprog": [31, 115, 149, 150, 156, 158, 159, 160, 161, 212, 214, 216, 217, 218, 219, 220, 221, 222, 594, 607, 608], "v8doc": [31, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222], "sa": [31, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222], "sashtml": [31, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222], "iml": [31, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222], "chap8": [31, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222], "sect12": [31, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222], "htm": [31, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222], "1003": [31, 156, 157, 158, 160, 161, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222], "quiet": [32, 33, 34, 35, 67, 68, 69, 70, 71, 72, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 670, 672, 673, 674, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780], "mplinsolv": [34, 37, 38, 115, 178, 594], "qps_mip": [35, 37, 38, 219], "exit_on_fail": [36, 102, 238, 255, 781], "unless": [36, 63, 102, 170, 238, 247, 249, 250, 252, 253, 255, 321, 415, 477, 478, 617, 657, 658, 659, 660, 661, 663, 664, 781], "t_run_test": [36, 102, 238, 245, 246, 247, 249, 250, 252, 253, 255, 256, 257, 781], "all_ok": [36, 102, 238, 251, 255, 781], "web": [37, 104, 239, 783], "asid": [37, 104, 239], "mipsver": [37, 38], "mips_example1": [37, 38], "mips_example2": [37, 38], "test_mip": [37, 38], "t_mip": [37, 38], "t_mips_pardiso": [37, 38], "t_mplinsolv": [37, 38], "t_qps_mip": [37, 38], "have_feature_lu_vec": [37, 38], "mpci": [39, 62], "fuel": [39, 547, 548], "new_mpc": [39, 40, 41], "gen_typ": 39, "insert": [39, 268, 269, 666], "bottom": [39, 79, 675], "genfuel": [39, 40, 41, 62, 485, 496, 540, 548, 751], "unknown": [39, 547, 548], "newli": [39, 40, 41, 59, 268, 463], "storag": [40, 42, 48, 60, 63, 66, 74, 77, 78, 79, 84, 99, 547, 548, 573], "xgd": [40, 41, 42, 59, 60, 62, 64], "sd": [40, 42, 62, 63, 452, 492, 493, 494, 587], "xgen": 40, "storagedata": [40, 42, 60, 62, 63], "new_xgd": [40, 41], "new_sd": 40, "storageunitdata": 40, "xgendata": [40, 41, 42, 54, 55, 56, 57, 60, 62, 63, 64], "mat": [40, 41, 59, 61, 62, 63, 64, 496, 575, 657, 658, 659, 660, 661, 663, 664, 666, 667], "xgd_tabl": [40, 41, 64], "filenam": [40, 41, 665, 666, 667], "loadstoragedata": [40, 62, 104, 105], "sd_tabl": [40, 63], "ess": [40, 547], "loadxgendata": [40, 41, 59, 62, 104, 105], "wind": [41, 50, 51, 52, 53, 59, 62, 103, 547, 548, 648], "windunitdata": 41, "profil": [42, 47, 51, 52, 59, 60, 62, 103], "argin": 42, "dim": [42, 60, 62, 320, 475, 537, 538, 540, 550, 564, 565, 669], "chgtab": [42, 489, 667], "chgtabsi": 42, "xgdi": [42, 62], "sdi": 42, "ctset": 42, "dimension": [42, 59, 62, 63, 64, 106, 109, 114, 316, 317, 391, 415, 416, 537, 564], "chgtype": [42, 60], "nt": [42, 49, 60, 62, 74, 103], "nj_max": [42, 60, 74], "idx_profil": [42, 59, 62, 103, 104, 105], "chgtabi": 42, "storagei": [42, 62], "ctsetsi": 42, "contingencydata": [42, 60], "nor": 42, "scenario": [42, 60, 62, 74, 103], "conting": [42, 43, 46, 60, 62, 66, 74, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93], "expand": [42, 62, 108, 111], "singleton": [42, 60], "ignor": [42, 60, 115, 170, 215, 247, 362, 539, 572, 594, 608, 645, 745], "mpcdata": [42, 60], "mandatori": 42, "oppos": [42, 66, 241, 260, 391, 475, 476, 496, 583], "nj": [42, 103], "unspecifi": [42, 547, 745], "probabl": [42, 49, 58, 62, 489, 569, 583], "correctli": 42, "inconsist": 42, "resp": 42, "ie": [42, 152, 594], "dedic": 42, "binari": [42, 113, 115, 156, 157, 158, 159, 160, 161, 415, 548], "span": 42, "cghtype": 42, "118": 43, "caseformat": [43, 44, 45, 81, 82, 83, 84, 485, 497, 536, 617, 654, 657, 658, 659, 660, 661, 663, 664, 671, 675, 676, 677, 678, 679, 680, 681, 751, 763], "ieee118cdf": 43, "txt": [43, 247, 253, 496, 594, 608, 649, 651], "sep": 43, "2004": 43, "cdf2matp": 43, "rev": [43, 645, 649, 665], "warn": [43, 66, 115, 156, 157, 158, 159, 160, 161, 497, 645, 646, 648, 649, 651, 667], "cdf": [43, 497], "lab": [43, 496], "ec": [43, 496], "uw": [43, 496], "edu": [43, 152, 212, 496, 556, 558, 563, 594, 608], "pstca": [43, 496], "psap": 43, "mar": [43, 562], "2006": 43, "archiv": 43, "1961": 43, "2010": [43, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 782], "cm": 43, "cz": 43, "group": [43, 59, 162, 495, 499, 540, 544], "thermal": 43, "cabl": 43, "safe": 43, "config": 43, "345kv": 43, "circuit": [43, 496], "161": 43, "138kv": 43, "split": [43, 148, 557, 643], "ramp_agc": [43, 536, 571], "ramp_10": [43, 536, 571], "ramp_30": [43, 536, 571], "c118": 43, "2012": 43, "consider": 43, "compromis": 43, "procedur": [43, 594], "synchron": [43, 547, 548], "capacitor": 43, "decreas": 43, "104": 43, "hydro": [43, 547], "close": [43, 497], "geograph": 43, "locat": [43, 108, 109, 110, 111, 112, 202, 203, 256, 477, 478, 516, 540, 542, 657], "retir": 43, "yield": [43, 497, 588], "minu": [43, 586], "chosen": [43, 60], "impact": 43, "deviat": [43, 657, 663], "criterion": [43, 203, 594], "wors": 43, "worst": 43, "upgrad": 43, "76": 43, "caus": [43, 203, 241, 657], "infeas": [43, 157, 160, 212, 213, 215, 220, 497, 657], "exceed": [43, 213, 745], "appar": [43, 284, 316, 528, 594, 608, 621], "enough": [43, 212, 551], "77": 43, "addition": [43, 657, 658, 659, 660, 661, 663, 664], "330": 43, "defici": 43, "difficult": 43, "resort": 43, "wherea": 43, "stochast": [45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 66, 70, 73, 98], "commit": [45, 46, 47, 48, 51, 52, 53, 57, 60, 66, 72, 73, 74, 79, 80, 97, 98, 100], "ex_case3a": [45, 104, 105], "startup": [45, 292, 478, 496, 536, 568], "shutdown": [45, 496, 536, 568], "transit": [49, 58, 62, 78], "definit": [49, 268, 559], "determinist": [52, 62, 67, 68, 69, 71, 72, 95, 594, 608], "multiperiod": [55, 66, 71, 95], "ramp": [55, 58, 74, 77, 99, 305, 496, 571], "md0": 58, "mask": [58, 584], "taken": [58, 95, 115, 165, 166, 168, 169, 203, 492, 493, 494, 496, 531, 532, 564, 565, 566, 577, 585, 639, 651, 657, 742], "transmat": [58, 62], "ve": 58, "profilesi": [59, 62], "profiles0": 59, "mycas": [59, 549], "myxgendata": 59, "iwind": 59, "addwind": [59, 104, 105], "mywindunit": 59, "mywindprofil": 59, "loadmd": [59, 60, 66, 104, 105], "mytransmat": 59, "apply_profil": [59, 62, 104, 105], "pr_rep": 60, "pr_rel": 60, "pr_add": 60, "pr_tcont": 60, "pr_type": 60, "pr_tmpcd": 60, "pr_txgd": 60, "pr_tctd": 60, "pr_tstgd": 60, "pr_chgtype": 60, "question": [60, 241, 745], "offer": [60, 64], "ct_tbu": [60, 536, 569], "ct_tgen": [60, 489, 536, 569], "ct_tbrch": [60, 489, 536, 569], "ct_tareabu": [60, 536, 569], "ct_tareagen": [60, 536, 569], "ct_tareabrch": [60, 536, 569], "ct_tload": [60, 536, 569], "ct_tareaload": [60, 489, 536, 569], "ct_tgencost": [60, 536, 569], "ct_tareagencost": [60, 536, 569], "commitsch": [60, 64], "initialpg": [60, 64], "rampwearcostcoeff": [60, 64], "positiveactivereservepric": [60, 64], "positiveactivereservequant": [60, 64], "negativeactivereservepric": [60, 64], "negativeactivereservequant": [60, 64], "positiveactivedeltapric": [60, 64], "negativeactivedeltapric": [60, 64], "positiveloadfollowreservepric": [60, 64], "positiveloadfollowreservequant": [60, 64], "negativeloadfollowreservepric": [60, 64], "negativeloadfollowreservequant": [60, 64], "minstoragelevel": [60, 63], "maxstoragelevel": [60, 63], "outeff": [60, 63], "ineff": [60, 63], "lossfactor": [60, 63], "rho": [60, 63], "usual": [60, 534, 594, 608, 616, 617], "idx_ct": [60, 485, 489, 536, 751], "ct_col": [60, 536, 569], "old": [60, 116, 121, 123, 154, 159, 162, 219, 539, 569, 572, 581, 594, 608], "vale": 60, "pre": [60, 114, 260, 267, 465, 467, 469, 470], "iii": 60, "interpret": [60, 313, 650, 651], "whenev": 60, "expans": 60, "within": [60, 106, 108, 111, 114, 115, 260, 261, 415, 473, 476, 487, 505, 521, 580], "varfil": 61, "vartyp": 61, "varnam": 61, "prioriti": [61, 190, 201, 502, 515, 594], "throw": [61, 115], "regardless": [61, 163, 490], "transmati": 62, "contabi": 62, "trajdatai": 62, "contab": 62, "trajdata": 62, "n_t": [62, 74], "n_j": [62, 74], "horizon": [62, 66, 74], "older": [62, 475], "centroid": 62, "n_w": 62, "colnam": [63, 64], "correpsond": 63, "md_init": [63, 104, 105], "unitidx": 63, "expectedterminalstorageaim": 63, "expectedterminalstoragemin": 63, "expectedterminalstoragemax": 63, "initialstorag": 63, "initialstoragelowerbound": 63, "initialstorageupperbound": 63, "initialstoragecost": 63, "terminalstoragepric": 63, "terminalchargingprice0": 63, "terminaldischargingprice0": 63, "terminalchargingpricek": 63, "terminaldischargingpricek": 63, "terminalpg": 64, "commitkei": [64, 66], "initialst": 64, "minup": 64, "mindown": 64, "potenti": [64, 463, 502, 657], "fueltyp": 64, "gen_statu": [64, 489, 536, 571], "mdi": 66, "mdo": [66, 74], "func": [66, 170, 554], "cplex": [66, 115, 121, 128, 156, 159, 169, 214, 219, 594, 596, 608, 708], "gurobi": [66, 115, 116, 123, 124, 134, 158, 159, 169, 208, 209, 210, 216, 219, 240, 594, 599, 608, 711], "build_model": 66, "miqp": [66, 115, 144, 156, 158, 159, 160, 169, 223, 228, 239, 485, 701], "coordin": [66, 203, 260, 463, 496, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 540, 568, 594, 610, 611, 613, 614, 619, 620, 782], "solve_model": 66, "resolve_new_cost": 66, "unchang": [66, 539], "dc_model": 66, "fixed_r": 66, "contstraint": 66, "never": 66, "q_coordin": 66, "security_constraint": 66, "terminal_target": 66, "cyclic": 66, "simultan": [66, 109, 115, 420, 594, 608], "uc": [66, 69, 79, 80, 86], "down": [66, 660, 664, 748], "roll": [66, 190, 193, 502], "happen": 66, "alg": [66, 115, 159, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 187, 203, 208, 209, 210, 219, 347, 581, 594, 617], "miqps_mast": [66, 115, 128, 133, 134, 135, 144, 156, 157, 158, 160, 161, 169, 223, 239, 240, 592], "qps_master": [66, 115, 125, 127, 128, 133, 134, 136, 137, 142, 143, 144, 145, 148, 149, 150, 169, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 237, 239, 240, 653], "skip_pric": [66, 115, 156, 157, 158, 159, 160, 161], "skip": [66, 115, 156, 157, 158, 159, 160, 161, 170, 252, 256], "price_stage_warn_tol": [66, 115, 156, 157, 158, 159, 160, 161], "mi": [66, 115, 156, 157, 158, 159, 160, 161], "econom": [67, 552], "consid": [74, 249, 420, 547, 548], "noth": [74, 262, 268, 314, 321, 463, 594, 608], "though": [74, 473], "incomplet": 74, "nb": [74, 109, 113, 115, 492, 493, 494, 500, 502, 517, 522, 524, 525, 526, 527, 548, 577, 585, 587, 589, 590, 594, 608, 616, 657, 668, 746], "n_b": 74, "n_g": 74, "nl": [74, 491, 492, 493, 494, 522, 523, 526, 529, 531, 549, 589, 590, 616], "n_l": 74, "nc_max": 74, "n_c": 74, "rup": 74, "upward": 74, "rdn": 74, "downward": 74, "lamp": 74, "muf": 74, "selector": [76, 464, 466, 468, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607], "default_opt": [76, 116, 121, 122, 123, 154, 162, 188, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607], "valid_opt": [76, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607], "nested_struct_copi": [76, 224, 239, 240, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607], "plot": [77, 78, 79, 80, 96, 97, 98, 100, 105, 190, 203, 502, 594], "option1_nam": [77, 78, 79], "option1_valu": [77, 78, 79], "parenthesi": [77, 78, 79, 80], "saveit": [77, 78, 79, 80], "saveal": [77, 78, 79], "savepath": [77, 78, 79, 80, 478], "savenam": [77, 78, 79, 80], "placehold": [77, 78, 79, 80, 109, 115, 203], "size_factor": [77, 78, 79, 80], "font": [77, 78, 79, 80], "marker": [77, 78, 79, 80], "show_pc": 77, "pc": 77, "show_variable_pmax": 77, "show_limit": 77, "show_conting": 77, "show_reserv": 77, "show_grid": [77, 78], "divid": [77, 78], "staircas": 78, "evenli": [78, 103, 641], "align": 78, "smooth": [78, 594, 608], "displac": 78, "sort_tol": 78, "round": 78, "nearest": 78, "sort": 78, "show_expected_initi": 78, "show_expected_fin": 78, "show_adjusted_dispatch": 78, "show_dispatch": 78, "md2": 79, "titl": [79, 80, 203, 268], "subtitl": [79, 80], "legend": [79, 80, 203], "uc1": [79, 80], "uc2": [79, 80], "xlabel": [79, 80, 203], "axi": [79, 80, 203, 668], "ylabel": [79, 80, 203], "rowlabel": [79, 80], "pff": 79, "optin": 80, "red": [80, 320], "status": [80, 262], "grai": 80, "case30": [81, 658, 659, 660, 661, 663, 664, 675], "case30v19": 81, "segment": [81, 496, 568], "tlmp": [83, 84, 99], "cong": [83, 84], "chen": [83, 84], "most_ex5_mpopf": [95, 104, 105], "create_plot": [96, 97, 98, 100], "create_pdf": [96, 97, 98, 100], "savedir": [96, 97, 98, 100], "choic": [96, 97, 98, 100, 203, 256, 585, 594], "sp_plot": 96, "spuc_plot": 97, "suc_plot": 98, "deteminist": 100, "uc_plot": 100, "dynam": [101, 748], "space": [103, 641], "getprofil": [103, 104, 105], "most_summari": [104, 105], "plot_gen": [104, 105], "plot_storag": [104, 105], "plot_uc": [104, 105], "plot_uc_data": [104, 105], "mostver": [104, 105], "addgen2mpc": [104, 105], "addstorag": [104, 105], "filter_ramp_transit": [104, 105], "uniformwindprofil": [104, 105], "most_ex1_": [104, 105], "most_ex2_dcopf": [104, 105], "most_ex3_dcopf_w_uc": [104, 105], "most_ex4_dcopf_ss": [104, 105], "most_ex6_uc": [104, 105], "most_ex7_suc": [104, 105], "ex_case3b": [104, 105], "ex_contab": [104, 105], "ex_load_profil": [104, 105], "ex_storag": [104, 105], "ex_transmat": [104, 105], "ex_wind": [104, 105], "ex_wind_profil": [104, 105], "ex_wind_profile_d": [104, 105], "ex_wind_uc": [104, 105], "ex_xgd": [104, 105], "ex_xgd_ramp": [104, 105], "ex_xgd_r": [104, 105], "ex_xgd_uc": [104, 105], "test_most": [104, 105], "t_most_3b_1_1_0": [104, 105], "t_most_3b_1_1_2": [104, 105], "t_most_3b_3_1_0": [104, 105], "t_most_3b_3_1_2": [104, 105], "t_most_30b_1_1_0": [104, 105], "t_most_30b_1_1_17": [104, 105], "t_most_30b_3_1_0": [104, 105], "t_most_30b_3_1_17": [104, 105], "t_most_fixed_r": [104, 105], "t_most_30b_1_1_0_uc": [104, 105], "t_most_sp": [104, 105], "t_most_spuc": [104, 105], "t_most_mpopf": [104, 105], "t_most_uc": [104, 105], "t_most_suc": [104, 105], "t_most_tlmp": [104, 105], "t_most_w_d": [104, 105], "c118swf": [104, 105], "t_case30_most": [104, 105], "t_case3_most": [104, 105], "t_case_tlmp": [104, 105], "t_case_tlmp_storag": [104, 105], "loadgenericdata": [104, 105], "mpoption_info_most": [104, 105], "sm": [106, 107, 462], "block": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 172, 205, 275, 415, 487, 537, 564, 617], "entiti": [106, 107], "shallow": [106, 114, 115], "describe_idx": [106, 114, 115], "get_n": [106, 114], "init_indexed_nam": [106, 108, 109, 110, 111, 112, 113, 114, 115, 487], "set_type_idx_map": [106, 114, 415], "foo": [106, 114, 115, 170, 256], "bar": [106, 114, 115, 256], "suppos": [106, 114], "charg": [106, 496, 548, 549, 566], "fleet": 106, "vehicl": 106, "week": 106, "daili": 106, "discharg": 106, "drive": 106, "batteri": [106, 548], "dai": 106, "battery_st": 106, "new_sm": 106, "idx_list": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 350, 415, 487], "sm_var": 106, "v0": [106, 113, 114, 115, 415, 487, 541, 546, 610, 611, 612, 613, 614, 615, 750], "vl": [106, 108, 113, 114, 115, 415, 487, 617], "vu": [106, 113, 114, 115, 415, 487], "sm_lin": 106, "varset": [106, 109, 110, 114, 115, 350, 487], "sm_nle": 106, "computed_bi": [106, 114, 487], "sm_nli": 106, "sm_qdc": 106, "cp": [106, 114, 350, 487, 548, 627], "sm_nlc": 106, "tell": 106, "361": [106, 114], "semicolon": [106, 114, 115, 262, 265, 268, 320, 321, 415, 420, 475, 487], "retun": [106, 262, 265, 268, 320, 321, 415, 420, 475], "dim_list": [106, 114, 115], "group_by_nam": [106, 114, 415], "boolean": [106, 107, 108, 109, 111, 113, 241, 245, 247, 249, 250, 251, 253, 259, 260, 262, 268, 269, 415, 420, 478], "consolid": [106, 114, 415], "lin": [106, 108, 114, 115, 467, 487, 534, 616, 617], "set_manag": [107, 108, 109, 110, 111, 112, 113, 114, 115, 239, 240, 462], "set_param": [107, 108, 109, 110, 111, 112, 113, 115], "has_parsed_soln": [107, 115], "fid": [107, 108, 109, 110, 111, 112, 113, 115, 650], "sm_variabl": [107, 108, 109, 110, 111, 112, 115, 239, 240], "among": [107, 108, 109, 110, 111, 112, 113, 256], "eflag": [107, 108, 109, 110, 111, 112, 113, 115], "failur": [107, 108, 109, 110, 111, 112, 113, 115, 159, 171, 172, 173, 174, 175, 178, 184, 185, 208, 209, 210, 219, 463], "fileid": [107, 108, 109, 110, 111, 112, 113], "parse_soln": [107, 108, 109, 111, 113, 115], "stash": [107, 108, 109, 111, 113, 115], "set_manager_opt_model": [108, 109, 110, 111, 112, 113, 239, 240, 462], "cach": [108, 111, 112, 113, 115, 241, 462, 466, 468, 487], "eval": [108, 109, 110, 111, 112, 115, 183, 217], "get_soln": [108, 109, 110, 111, 112, 113, 115], "fetch": [108, 109, 110, 111, 112, 113, 115], "memori": [108, 115, 212, 594, 608], "avl": [108, 115, 579], "lvl": [108, 115, 579], "uvl": [108, 115, 579], "subsequ": [108, 111, 112, 113, 115, 190, 241, 487, 511, 514, 539], "pmi": [108, 109, 111, 115, 616, 617], "ax_u": [108, 115], "l_ax": [108, 115], "n_x": [108, 109, 110, 111, 112], "mu_l_pmis_5_3": 108, "effici": [108, 109, 111, 113, 115, 492, 536, 580], "nln": [109, 616, 617], "nle": [109, 114, 115, 267, 467, 487, 616, 617], "eval_hess": [109, 115], "account": [109, 110], "g_": [109, 308, 317], "implment": [109, 110], "nlps_master": [109, 115, 130, 131, 136, 137, 139, 166, 182, 183, 184, 186, 187, 210, 226, 239, 240], "friend": [109, 115, 165, 166, 167, 168, 169], "d2g": [109, 115, 317, 416, 624, 631], "likewis": [109, 115, 487], "qmi": [109, 115, 616, 617], "iseq": [109, 115], "dg_pmis_5_3": 109, "nlc": [110, 114, 115, 487], "fcn1": [110, 115], "my_cost_function1": [110, 115], "other_arg": [110, 115], "fcn2": [110, 115], "my_cost_function2": [110, 115], "mycost1": [110, 115], "mycost2": [110, 115], "df_pg_2_4": [110, 112], "qcn": [111, 115], "qq_i": [111, 204], "b_i": [111, 117, 204], "ui": 111, "n_q": [111, 120, 204], "qq_1": [111, 204], "dot": [111, 260, 475, 476], "qq_": 111, "denot": [111, 256, 285, 289, 295, 297, 305, 306, 593], "repeat": [111, 205], "mathcal": 111, "a_": 111, "xblk": [111, 205], "qblk": 111, "blkprod2vertcat": 111, "my_quad": 111, "q1": [111, 112, 115], "b1": 111, "l1": 111, "u1": 111, "my_var1": 111, "my_var2": 111, "my_set": 111, "isblk": 111, "g_u": [111, 115], "l_g": [111, 115], "g_i": [111, 117], "mu_lq": [111, 208, 209, 210], "mu_uq": [111, 208, 209, 210], "mu_lq_pmis_5_3": 111, "blk1": 111, "blk2": 111, "m_1": 111, "m_2": 111, "blkdiag": 111, "repmat": 111, "mxn": 111, "nxn": 111, "qdc": [112, 114, 115, 487], "conform": [112, 115, 580], "quad_cost1": [112, 115], "c1": [112, 115, 496, 497, 568], "lin_cost2": [112, 115], "c2": [112, 115, 497], "k2": [112, 115], "varsets_idx": [113, 115], "varsets_len": [113, 115], "varsets_x": [113, 115], "varsets_cell2struct": [113, 115], "accept": [113, 115, 313], "vmin": [113, 115, 497, 520, 536, 567, 594, 745], "vmax": [113, 115, 497, 520, 536, 567, 594, 745], "nx": [113, 115, 156, 157, 158, 159, 160, 161, 190, 191, 192, 203, 325, 487, 502, 505, 507, 511, 514, 519, 521, 686, 687], "pg0": [113, 115, 415], "zij0": [113, 115, 415], "zijmin": [113, 115], "zijmax": [113, 115], "ztype": [113, 115, 415], "yl": 113, "yu": 113, "va0": [113, 535], "vau": 113, "vat": 113, "mupmin": [113, 115], "mupmax": [113, 115], "murmin_2_3": 113, "nv": [113, 115, 415], "return_vector": 113, "presenc": 113, "def_set_typ": [114, 115, 332, 334, 337, 339, 341, 415, 416, 417, 418, 419, 487], "set_typ": [114, 115, 415, 487], "userdata": [114, 115, 262], "add_named_set": [114, 332, 334, 337, 339, 341, 415, 487], "declar": 114, "init_set_typ": [114, 332, 334, 337, 339, 341, 415, 487], "ideal": [114, 261, 488], "due": [114, 115], "bug": [114, 212, 476], "alter": 114, "savannah": [114, 476], "52614": 114, "workaround": 114, "sure": 114, "add_": [114, 115], "valid_named_set_typ": 114, "public": [114, 487], "display_set": 114, "screen": [114, 497, 594, 608], "get_userdata": [114, 115], "retreiv": [114, 115, 487], "getn": [114, 115], "params_": 114, "a_struct": [114, 115], "an_obj": 114, "stype": 114, "sname": 114, "deprec": [114, 115, 119, 496, 579, 581, 592, 594, 616, 653, 701, 735, 746], "field1": 114, "field2": 114, "var_ord": 114, "unpack": 114, "pmismatch": [114, 115], "idx1": [114, 115, 420], "idx2": [114, 115, 420], "set_type1": [114, 115], "set_type2": [114, 115], "mu_l_foo": [114, 115], "mu_u_foo": [114, 115], "nbar": [114, 115], "prefer": [114, 115, 536], "haven": [114, 115], "om": [115, 179, 180, 181, 350, 467, 487, 488, 534, 616, 617, 621, 622, 623, 624, 625, 630, 631, 632, 656], "intial": 115, "params_var": [115, 415], "params_lin_constraint": 115, "params_nln_constraint": 115, "eval_nln_constraint": 115, "eval_nln_constraint_hess": 115, "params_nln_cost": 115, "params_quad_cost": 115, "eval_nln_cost": 115, "eval_quad_cost": 115, "problem_typ": 115, "is_solv": 115, "indentifi": 115, "ghne": 115, "ghni": 115, "ghl": 115, "prob_typ": 115, "jac": [115, 171, 172, 173, 175, 178, 203, 617, 748], "leq": [115, 227], "nleq": [115, 165, 225, 229, 239], "prob": [115, 178], "lagrang": [115, 181, 207, 567, 620, 624, 631, 634, 636, 638], "an_om": 115, "sm_nln_cost": [115, 239, 240], "sm_quad_cost": [115, 239, 240], "4th": [115, 415, 487, 489, 523, 525, 527, 537, 538, 564, 565], "is_mixed_integ": 115, "sm_nln_constraint": [115, 239, 240], "sm_lin_constraint": [115, 239, 240], "IN": [115, 487], "5th": [115, 489, 524, 526, 529, 531, 564], "6th": [115, 489], "pgcost": 115, "lin_con_1": 115, "nle_con_b": 115, "eval_lin_constraint": 115, "dg_b_2_3": 115, "unbound": [115, 157, 213, 215, 496, 566, 577, 745], "nleqs_mast": [115, 132, 165, 171, 172, 173, 174, 176, 177, 178, 203, 225, 239, 240], "mosek": [115, 144, 159, 160, 162, 163, 169, 219, 220, 594, 605, 608, 715], "linprog": [115, 142, 143, 159, 161, 215, 219, 222, 594, 603, 608], "glpk": [115, 122, 133, 157, 159, 169, 215, 219, 594, 598, 710], "bpmpd": [115, 125, 169, 212, 219, 594, 608], "milp": [115, 133, 135, 144, 156, 157, 158, 159, 160, 169, 223, 240, 485], "tbx": [115, 159, 219, 545, 717], "intlingprog": 115, "minlp": [115, 166], "art": [115, 116, 139, 140, 141, 155, 166, 168, 184, 185, 209, 210, 218, 594, 602, 608, 721], "knitro": [115, 116, 139, 140, 141, 155, 166, 168, 184, 185, 187, 209, 210, 218, 219, 594, 602, 608, 721], "bpmpd_mex": [115, 125, 212, 219, 594, 608, 706], "clp": [115, 127, 145, 213, 219, 594, 595, 707], "fast": [115, 172, 175, 347, 541, 581, 594, 608, 750], "newon": 115, "fsolv": [115, 132, 165, 167, 172, 173, 174, 175, 178], "gauss": [115, 171, 174, 175, 546, 594, 608, 750], "seidel": [115, 171, 174, 175, 546, 594, 608], "ipopt": [115, 136, 137, 154, 166, 168, 183, 185, 187, 210, 217, 219, 594, 601, 608, 720], "coin": [115, 127, 136, 145, 154, 183, 185, 210, 213, 217, 219, 594, 608], "pure": [115, 185, 210, 219, 594, 608], "mips_opt": [115, 185, 210, 219], "variant": [115, 185, 210, 219, 608], "osqp": [115, 148, 188, 189, 219, 221, 240, 594, 606, 716], "ot": [115, 159, 169, 219, 548, 594], "intlinprog": [115, 135, 159, 161, 600], "bp_opt": [115, 212, 219], "bp": [115, 125, 212, 219, 541, 581], "clp_opt": [115, 213, 219], "cplex_opt": [115, 156, 159, 214, 219, 239, 240, 594, 608], "fd_opt": [115, 172, 175], "nleqs_fd_newton": [115, 175, 239, 240], "fmincon_opt": [115, 182, 185], "fsolve_opt": [115, 173, 175], "glpk_opt": [115, 157, 159, 215, 219], "grb_opt": [115, 123, 158, 159, 208, 210, 216, 219, 608], "gs_opt": [115, 174, 175], "nleqs_gauss_seidel": [115, 171, 175, 239, 240], "intlinprog_opt": [115, 159, 161], "ipopt_opt": [115, 183, 185, 210, 217, 219, 239, 240, 594, 608], "knitro_opt": [115, 116, 184, 185, 209, 210, 218, 219, 594, 608], "leq_opt": 115, "absolut": [115, 489, 542], "linprog_opt": [115, 159, 161, 219, 222], "mosek_opt": [115, 159, 160, 219, 220, 239, 240, 594, 608], "newton_opt": [115, 175, 178], "nleqs_newton": [115, 171, 175, 239, 240], "osqp_opt": [115, 219, 221, 239, 240, 594], "quadprog_opt": [115, 219, 222], "relax_integ": 115, "relax": [115, 559, 594, 745], "elaps": [115, 256, 463, 617, 644, 657, 658, 659, 660, 661, 663, 664], "sec": [115, 262, 496, 571], "pnes_mast": [115, 167, 190, 195, 196, 197, 201, 202, 235, 239, 240], "mp_linsolv": 115, "constrainst": 115, "recheck": 115, "pne": [115, 167, 190, 198, 199, 200, 201, 202, 231, 235, 239], "dx": 115, "nne": 115, "nni": 115, "nnc": 115, "st": [115, 492, 493, 494, 504, 522, 531, 548, 616, 617], "fname": [116, 121, 122, 123, 154, 162, 188, 265, 266, 463, 542, 574, 594, 644, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667], "normal": [116, 121, 122, 123, 154, 162, 188, 190, 198, 199, 200, 261, 500, 502, 508, 509, 512, 517, 621, 657, 662, 743, 745], "modified_opt": [116, 121, 122, 123, 154, 162, 188], "violat": [116, 121, 123, 154, 162, 184, 188, 307, 504, 505, 510, 511, 513, 514, 520, 521, 594, 608, 663, 745], "feasibilitytol": [116, 123], "displayinterv": [116, 123], "outputflag": [116, 123], "logtoconsol": [116, 123], "tol_x": [116, 182, 184, 594], "xtol": [116, 594], "tol_f": [116, 182, 184, 594], "ftol": 116, "maxit": [116, 184, 594], "opt_fnam": [116, 121, 122, 123, 154, 162, 188, 594], "knitro_user_options_": 116, "Their": [116, 121, 122, 123, 154, 162, 188, 589], "preced": [116, 121, 122, 123, 154, 162, 165, 166, 167, 168, 169, 188], "knitro_user_options_3": 116, "3000": [116, 123], "app": 116, "ieq": [117, 118, 119, 120], "igt": [117, 118, 119, 120], "ilt": [117, 118, 119, 120], "eq": [117, 119], "convert_lin_constraint": [117, 119, 239, 240], "convert_quad_constraint": [117, 239, 240], "g_e": 117, "_e": 117, "b_e": 117, "ae": [118, 119, 120], "ai": [118, 119, 120, 580], "bi": [118, 119, 120, 205], "convert_constraint_multipli": [118, 119, 120, 239, 240], "qe": 120, "Be": [120, 205], "qi": 120, "di": [120, 205, 530, 532], "nq": [120, 208, 209, 210], "nqe": [120, 205], "nqi": [120, 205], "symmetr": [120, 298, 617, 618], "cplexoptimset": 121, "simplex": [121, 143, 163, 594, 608], "barrier": [121, 594, 608], "conflict": 121, "sift": [121, 594, 608], "tune": 121, "lpmethod": [121, 594], "qpmethod": [121, 594], "cplex_user_options_": 121, "cplex_user_options_3": 121, "thread": [121, 123, 594, 608], "refactor": 121, "timelimit": [121, 123, 594, 608], "10000": 121, "ibm": [121, 128, 594], "knowledgecent": 121, "sssa5p": 121, "cplexlp": [121, 128, 156, 214], "cplexqp": [121, 128, 156, 214], "msglev": 122, "glpk_user_options_3": 122, "lpsolver": 122, "gurobi_user_options_": 123, "gurobi_user_options_3": 123, "optimalitytol": 123, "barconvtol": 123, "iterationlimit": 123, "bariterlimit": 123, "200": [123, 219, 594, 608], "crossov": 123, "presolv": 123, "bpopt": 125, "catch": 126, "me": 126, "catchm": 126, "try": 126, "OR": [127, 136, 145, 213], "ilog": 128, "evalc": 129, "ver": [131, 143], "int": [131, 539], "mtd": 131, "fmincon_ipm": 131, "kit": [133, 157, 215], "r2014a": 135, "ipopt_auxdata": 137, "isequaln": 138, "knitromatlab": [139, 140, 184], "knitro_nlp": [140, 184, 210], "have_feature_knitro": [140, 141, 239, 240], "ktrlink": 141, "prior": [141, 190, 502], "have_feature_linprog_d": [142, 239, 240], "availblti": 143, "linprog_d": 143, "r2014b": 143, "have_feature_linprog": [143, 239, 240], "mosekopt": [144, 160, 162, 220], "opti_clp": 145, "opti": 145, "inverseproblem": 145, "have_feature_clp": [145, 239, 240], "optimopt": [147, 173, 182, 594], "have_feature_optim": [147, 239, 240], "have_feature_quadprog_l": [149, 239, 240], "larg": [150, 169, 182, 492, 540, 594], "quadprog_l": 150, "convex": [150, 208, 209], "have_feature_quadprog": [150, 239, 240], "sdpt3": 151, "sdp": [151, 152, 594], "sqlp": 151, "sedumi": [152, 594], "lehigh": [152, 594], "yalmip": [153, 594], "platform": 153, "io": [153, 183, 217, 594], "constr_viol_tol": 154, "print_level": 154, "ipopt_user_options_": 154, "ipopt_user_options_3": 154, "nlp_scaling_method": 154, "none": [154, 193, 203, 241, 259, 503, 536, 567, 745], "500": [154, 159, 219, 594, 608], "derivative_test": 154, "knitro_solv": 155, "vtype": [156, 157, 158, 159, 160, 161, 315, 415], "semi": [156, 158, 159, 559], "cplexmiqp": 156, "cplexmilp": 156, "glkp": 157, "dummi": [157, 215], "NOT": [157, 213, 215, 542, 594, 608], "errnum": [157, 215], "700": [159, 219, 608], "tour": 159, "node009": 159, "195": 159, "273": 159, "1365": 159, "msk_dpar_intpnt_tol_pfea": 162, "lp_alg": [162, 594], "msk_ipar_optim": [162, 594, 608], "msk_ipar_intpnt_max_iter": [162, 594, 608], "gap_tol": [162, 594], "msk_dpar_intpnt_tol_rel_gap": [162, 594, 608], "max_tim": [162, 594], "msk_dpar_optimizer_max_tim": [162, 594, 608], "num_thread": [162, 594], "msk_ipar_intpnt_num_thread": [162, 594, 608], "mosek_user_options_": 162, "mosek_user_options_3": 162, "msk_dpar_intpnt_tol_dfea": 162, "msk_ipar_sim_max_iter": 162, "5000000": 162, "manaul": 162, "symbol": [162, 163], "mosek_symbcon": [162, 239, 240, 594], "stuct": 163, "safer": 163, "mosek_lp_alg": [163, 608], "v7": 163, "msk_optimizer_dual_simplex": 163, "nleqopt": 165, "nlpopt": 166, "pneopt": 167, "qcqps_master": [168, 204, 205, 206, 207, 208, 209, 236, 239, 240], "qcqpopt": 168, "qcqp": [168, 204, 206, 207, 208, 209, 210, 232, 236, 239], "mpopt2qpopt": [168, 239, 240], "qpopt": 169, "nest": [170, 475, 476, 538, 540, 565], "destin": 170, "recurs": 170, "manner": 170, "valid_field": 170, "invalid": 170, "copy_mod": 170, "pointer": 170, "heirarchi": 170, "home": 170, "t_nested_struct_copi": [170, 239, 240], "sp": [171, 594], "default_max_it": 171, "need_jac": 171, "update_fcn": 171, "partial": [171, 173, 175, 178, 203, 316, 509, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 549, 586, 695], "tol": [171, 172, 173, 174, 175, 178, 182, 184, 202, 492, 493, 494, 516, 594, 608], "normf": [171, 172, 174, 178], "normdx": 171, "chilimath": [171, 173, 175, 178, 203], "lesson": [171, 173, 175, 178, 203], "advanc": [171, 173, 175, 178, 203], "algebra": [171, 173, 175, 178, 203], "f1": [171, 173, 175, 178, 496, 568], "newton_update_fcn": 171, "jac_approx_fcn": 172, "jj": 172, "approxim": [172, 178, 512, 594], "christi": [172, 174], "patton": [172, 174], "luk": [172, 174], "youtub": [172, 174], "watch": [172, 174], "pjg4yhtgerg": [172, 174], "57": [172, 174, 177], "jac_approx_fcn2": 172, "optimset": [173, 182, 594], "nleqs_cor": [174, 175, 178, 239, 240], "x_update_fcn": 174, "x_update_fcn2": 174, "core_sp": 175, "nleqs_fsolv": [175, 239, 240], "lin_solv": [178, 594], "larger": [178, 594, 669], "decomp": 178, "substitutn": 178, "reorder": [178, 488, 537, 538, 564, 565, 594], "suitabl": [179, 180, 181, 182, 205, 206, 207, 594, 647, 667], "tini": [179, 181], "sparsiti": [179, 181], "nlp_costfcn": [179, 181, 239, 240], "nlp_hessfcn": [179, 180, 239, 240], "nlp_consfcn": [180, 181, 239, 240], "bfg": [182, 594, 608], "lbfg": [182, 594, 608], "exact": [182, 594, 608], "finit": [182, 594, 608], "sqp": [182, 594], "ipreturncodes__inc_8h_sourc": [183, 217], "cpu": [183, 217], "aret": 184, "3_referencemanu": 184, "knitromatlabrefer": 184, "funccount": 184, "constrviol": 184, "firstorderopt": 184, "measur": 184, "nlps_fmincon": [185, 239, 240], "nlps_ipopt": [185, 239, 240], "nlps_knitro": [185, 239, 240], "eps_prim_inf": 188, "osqp_user_options_3": 188, "polish": 188, "5000": [188, 574], "solver_set": [188, 221], "cx": [190, 191, 192, 195, 196, 325, 502, 504, 505, 506, 507, 510, 511, 513, 514, 518, 519, 520, 521, 686, 687], "px": [190, 191, 192, 325, 502, 505, 507, 511, 514, 519, 521, 686, 687], "regist": [190, 193, 201, 202, 502, 503, 515, 516, 539], "pne_register_callback": [190, 203, 239, 240], "cb": [190, 203, 502], "recent": [190, 502], "x_hat": [190, 203], "predictor": [190, 203, 464, 502, 512, 517, 657], "corrector": [190, 203, 464, 500, 502, 657], "tangent": [190, 195, 198, 199, 200, 203, 500, 502, 506, 508, 509, 512, 517, 657], "default_step": [190, 203, 502], "default_parm": [190, 203, 502], "this_step": [190, 502], "this_parm": [190, 502], "parm": [190, 203, 502], "event": [190, 191, 192, 193, 194, 195, 196, 202, 203, 325, 502, 503, 504, 505, 506, 507, 510, 511, 513, 514, 516, 518, 519, 520, 521, 657], "pne_detect_ev": [190, 194, 239, 240], "care": [190, 502], "efv": [190, 195, 196], "propos": [190, 193, 502], "done_msg": [190, 191, 192, 203, 657], "reason": [190, 260, 502], "warmstart": [190, 203, 464], "warm": [190, 203, 327, 464], "rollback": [190, 193, 202, 502, 503, 505, 507, 511, 514, 516, 519, 521, 657, 686, 687], "retri": [190, 502], "request": [190, 193, 202, 466, 468, 502, 503, 511, 514, 516], "msg": [190, 191, 192, 193, 203, 247, 249, 250, 252, 253, 502, 503, 505, 507, 511, 514, 519, 521, 644, 657], "negat": [190, 502], "my_cback": [190, 201, 203], "nose": [191, 195, 203, 502, 506, 507, 594, 657], "pne_event_nos": [191, 196, 202, 239, 240], "rais": [191, 192, 505, 507, 519, 521], "pne_callback_default": [191, 192, 201, 203, 239, 240], "target_lam": [192, 193, 503, 519], "pne_event_target_lam": [192, 195, 202, 239, 240], "predict": [192, 200, 203, 500, 508, 509, 512, 517, 519, 657], "overshoot": [192, 519], "adjust": [192, 303, 309, 466, 519], "reg_ev": [193, 202], "nefv": 193, "cefv": 193, "critical_ev": [193, 503], "eidx": [193, 503], "interv": [193, 194, 503], "critic": [193, 203, 503, 583, 657], "step_scal": [193, 503], "linearli": [193, 503, 617, 618], "interpol": [193, 262, 464, 503], "estim": [193, 503, 594], "qlim": [193, 503, 514], "event_log": 194, "ev": 194, "search": [194, 575], "detec": 194, "pne_mast": 195, "stop_at": [195, 196, 203, 594, 657], "pne_register_ev": [195, 196, 203, 239, 240], "xp": [198, 199, 200, 203], "zp": [198, 199, 200, 203], "arc": [198, 200, 203, 594], "dp": [198, 199, 200], "distanc": 198, "paramer": [198, 199, 200], "pne_pfcn_natur": [198, 200, 239, 240], "pne_pfcn_pseudo_arc_len": [198, 199, 239, 240], "pne_pfcn_arc_len": [199, 200, 239, 240], "pseudo": [200, 203, 594], "lie": [200, 473], "hyperplan": 200, "orthogon": 200, "correct": [200, 203, 468, 493, 589, 594, 639, 657], "reg_cb": 201, "pne_callback_nos": [201, 239, 240], "pne_callback_target_lam": [201, 239, 240], "my_ev": [202, 203], "default_event_tol": [202, 203], "nleqs_opt": 203, "solve_bas": 203, "stop": [203, 594], "lam_stop": [203, 594], "adapt_step": [203, 594, 657], "toggl": [203, 241, 594], "adapt": [203, 594, 657], "disabl": [203, 594, 742, 743, 744, 745, 783], "adapt_step_damp": [203, 594], "damp": [203, 594, 608], "adapt_step_tol": [203, 594], "adapt_step_w": 203, "step_min": [203, 594], "step_max": [203, 594], "target_lam_tol": [203, 594], "nose_tol": [203, 594], "output_fcn": 203, "increment": [203, 249, 250, 252, 594], "paus": [203, 594], "yfcn": 203, "idx_default": 203, "xname": 203, "yname": 203, "xfcn": 203, "title2": 203, "ne": [203, 262], "lam_hat": [203, 500, 502, 512, 657], "max_lam": [203, 657], "cont_step": 203, "counter": [203, 245, 246, 463], "opposit": [203, 743], "dir_from_jac_eig": 203, "smallest": 203, "eigenvalu": 203, "pnes_callback_default": 203, "f1p": 203, "hh": 204, "lq": [204, 208, 209, 210], "uq": [204, 208, 209, 210], "lqi": 204, "uqi": 204, "qq_2": 204, "blkqe": 205, "blkqi": 205, "inequalii": 205, "equalii": 205, "qcqp_nlp_costfcn": [205, 207, 239, 240], "qcqp_nlp_hessfcn": [205, 206, 239, 240], "qcqp_nlp_consfcn": [206, 207, 239, 240], "qqi": 207, "qqe": 207, "qcp": [208, 209, 210], "gurobi_opt": [208, 239, 240, 594, 608], "artelys_knitro_opt": [209, 239, 240], "qcqp_knitro": 209, "qcqps_mip": 210, "suboptim": 212, "explan": [213, 617, 618], "gkpk": 215, "knitro_qp": 218, "knitro_lp": 218, "400": [219, 594, 608], "sm_quad_constraint": [239, 240], "convert_lin_constraint_multipli": [239, 240], "glpk_option": [239, 240], "mpopt2nleqopt": [239, 240], "mpopt2nlpopt": [239, 240], "mpopt2pneopt": [239, 240], "mpopt2qcqpopt": [239, 240], "gurobiv": [239, 240], "knitrov": [239, 240], "mpomver": [239, 240], "osqpver": [239, 240], "miqps_cplex": [239, 240], "miqps_glpk": [239, 240], "miqps_gurobi": [239, 240], "miqps_mosek": [239, 240], "miqps_ot": [239, 240], "pne_detected_ev": [239, 240], "qps_bpmpd": [239, 240], "qps_clp": [239, 240], "qps_cplex": [239, 240], "qps_glpk": [239, 240], "qps_gurobi": [239, 240], "qps_ipopt": [239, 240], "qps_knitro": [239, 240], "qps_mosek": [239, 240], "qps_osqp": [239, 240], "qps_ot": [239, 240], "qcqps_gurobi": [239, 240], "qcqps_knitro": [239, 240], "nleqs_master_ex1": [239, 240], "nleqs_master_ex2": [239, 240], "nlps_master_ex1": [239, 240], "nlps_master_ex2": [239, 240], "pne_ex1": [239, 240], "qcqp_ex1": [239, 240], "qp_ex1": [239, 240], "test_mp_opt_model": [239, 240], "t_miqps_mast": [239, 240], "t_nleqs_mast": [239, 240], "t_nlps_master": [239, 240], "t_om_solve_leq": [239, 240], "t_om_solve_miqp": [239, 240], "t_om_solve_nleq": [239, 240], "t_om_solve_nlp": [239, 240], "t_om_solve_pn": [239, 240], "t_om_solve_qcqp": [239, 240], "t_om_solve_qp": [239, 240], "t_opt_model": [239, 240], "t_pnes_mast": [239, 240], "t_qcqps_master": [239, 240], "t_qps_master": [239, 240], "have_feature_bpmpd": [239, 240], "have_feature_catchm": [239, 240], "have_feature_cplex": [239, 240], "have_feature_evalc": [239, 240], "have_feature_fmincon_ipm": [239, 240], "have_feature_fmincon": [239, 240], "have_feature_fsolv": [239, 240], "have_feature_glpk": [239, 240], "have_feature_gurobi": [239, 240], "have_feature_intlinprog": [239, 240], "have_feature_ipopt_auxdata": [239, 240], "have_feature_ipopt": [239, 240], "have_feature_isequaln": [239, 240], "have_feature_knitromatlab": [239, 240], "have_feature_ktrlink": [239, 240], "have_feature_mosek": [239, 240], "have_feature_opti_clp": [239, 240], "have_feature_optimopt": [239, 240], "have_feature_osqp": [239, 240], "have_feature_sdpt3": [239, 240], "have_feature_sedumi": [239, 240], "have_feature_yalmip": [239, 240], "rtype": 241, "ver_str": 241, "vstr": 241, "ver_num": 241, "vnum": 241, "rdate": 241, "all_info": 241, "clear_cach": 241, "availabl": 241, "clear": 241, "011004": 241, "feb": 241, "av": 241, "have_feature_": 241, "disp": [241, 320], "have_feature_matlab": [241, 256, 257], "have_feature_octav": [241, 256, 257], "num_of_test": 245, "t_ok": [245, 246, 247, 249, 252, 253, 254, 256, 257], "t_i": [245, 246, 247, 250, 252, 253, 254, 256, 257], "t_file_match": [245, 246, 249, 250, 252, 253, 254, 256, 257], "t_str_match": [245, 246, 247, 249, 250, 252, 254, 256, 257], "t_skip": [245, 246, 247, 249, 250, 253, 256, 257], "t_end": [245, 247, 249, 250, 251, 252, 253, 256, 257], "pi": [245, 246, 249, 250, 252, 256, 549], "statist": 246, "t_begin": [246, 247, 249, 250, 251, 252, 253, 256, 257], "got_fnam": 247, "exp_fnam": 247, "rep": [247, 253], "del_got_fnam": 247, "ok": [247, 249, 250, 253, 256], "compar": [247, 253, 498, 567, 568, 651], "regexprep": [247, 253], "strrep": [247, 253], "eol": [247, 253], "test_generated_output": [247, 253], "expected_output": [247, 253], "mytest": [247, 253], "got": [249, 253], "prec": 249, "nan": [249, 584, 650, 651], "cond": 250, "expr": 250, "test_nam": 251, "t_loadcas": [251, 485, 751], "t_jacobian": [251, 485, 751], "t_hessian": [251, 485, 751], "strcmp": 253, "fileread": [253, 645, 652], "familiar": 256, "clone": 256, "repositori": 256, "mptestxxx": 256, "xxx": 256, "kept": [256, 502], "test_mptest": [256, 257], "resembl": 256, "t_test_fcn": [256, 257], "t_have_featur": [256, 257], "mptest_ex1": 256, "test_everything_ex1": 256, "09": 256, "mptestver": [256, 257], "guidelin": 256, "report": [256, 548, 594, 608], "claus": 256, "bsd": 256, "agenc": 256, "task_pf_legaci": [258, 485], "task_cpf_legaci": [258, 485], "task_opf_legaci": [258, 267, 485], "task_shared_legaci": [258, 465, 467, 469, 485], "dme_branch_opf": [258, 485], "dme_bus_opf": [258, 485], "dme_gen_opf": [258, 485], "dme_load_cpf": [258, 485], "dme_load_opf": [258, 485], "dme_shunt_cpf": [258, 485], "dme_shunt": [258, 309, 310, 485], "dme_shunt_opf": [258, 485], "dm_converter_mpc2_legaci": [258, 467, 485], "dmce_branch_mpc2": [258, 485], "dmce_bus_mpc2": [258, 485], "dmce_load_mpc2": [258, 470, 485], "dmce_shunt_mpc2": [258, 485], "net_model_ac": [258, 417, 418, 485], "net_model_acc": [258, 485], "nme_branch_ac": [258, 423, 424, 485], "nme_branch_acc": [258, 485], "nme_branch_acp": [258, 485], "nme_branch_dc": [258, 485], "nme_bus_acc": [258, 485], "nme_bus_dc": [258, 485], "nme_gen_ac": [258, 441, 442, 485], "nme_gen_acc": [258, 485], "nme_gen_dc": [258, 485], "nme_load_ac": [258, 453, 454, 485], "nme_load_acc": [258, 485], "nme_load_acp": [258, 485], "nme_load_dc": [258, 485], "nme_shunt": [258, 457, 460, 485], "nme_shunt_ac": [258, 458, 459, 485], "nme_shunt_acc": [258, 485], "nme_shunt_acp": [258, 485], "nme_shunt_dc": [258, 485], "math_model_pf": [258, 343, 348, 485], "math_model_pf_ac": [258, 344, 345, 346, 347, 485], "math_model_pf_acci": [258, 485], "math_model_pf_acc": [258, 485], "math_model_pf_acpi": [258, 485], "math_model_pf_acp": [258, 485], "math_model_pf_dc": [258, 485], "math_model_cpf_acc": [258, 323, 485], "math_model_cpf_acci": [258, 485], "math_model_cpf_acp": [258, 326, 485], "math_model_cpf_acpi": [258, 485], "math_model_opf": [258, 321, 329, 340, 485], "math_model_opf_ac": [258, 330, 335, 485], "math_model_opf_acci": [258, 332, 485], "math_model_opf_acci_legaci": [258, 485], "math_model_opf_accs_legaci": [258, 485], "math_model_opf_acpi": [258, 337, 485], "math_model_opf_acpi_legaci": [258, 485], "math_model_opf_acps_legaci": [258, 485], "math_model_opf_dc": [258, 341, 485], "math_model_opf_dc_legaci": [258, 485], "mm_shared_pfcpf": [258, 321, 352, 360, 485], "mm_shared_pfcpf_ac": [258, 354, 357, 485], "mm_shared_pfcpf_ac_i": [258, 355, 358, 485], "mm_shared_pfcpf_acc": [258, 324, 345, 355, 485], "mm_shared_pfcpf_acci": [258, 323, 344, 485], "mm_shared_pfcpf_acp": [258, 327, 347, 358, 485], "mm_shared_pfcpf_acpi": [258, 326, 346, 485], "mm_shared_pfcpf_dc": [258, 348, 485], "mm_shared_opf_legaci": [258, 332, 334, 337, 339, 341, 467, 485], "mme_branch_pf_ac": [258, 485], "mme_branch_pf_dc": [258, 485], "mme_branch_opf": [258, 363, 366, 485], "mme_branch_opf_ac": [258, 364, 365, 485], "mme_branch_opf_acc": [258, 485], "mme_branch_opf_acp": [258, 485], "mme_branch_opf_dc": [258, 485], "mme_bu": [258, 373, 376, 377, 378, 485], "mme_bus_pf_ac": [258, 485], "mme_bus_pf_dc": [258, 485], "mme_bus_opf_ac": [258, 374, 375, 485], "mme_bus_opf_acc": [258, 485], "mme_bus_opf_acp": [258, 485], "mme_bus_opf_dc": [258, 485], "mme_gen_pf_ac": [258, 485], "mme_gen_pf_dc": [258, 485], "mme_gen_opf": [258, 390, 392, 485], "mme_gen_opf_dc": [258, 485], "mme_load": [258, 405, 406, 485], "mme_load_pf_ac": [258, 404, 485], "mme_load_pf_dc": [258, 485], "mme_load_cpf": [258, 485], "mme_shunt": [258, 411, 412, 485], "mme_shunt_pf_ac": [258, 410, 485], "mme_shunt_pf_dc": [258, 485], "mme_shunt_cpf": [258, 485], "mp_table_subclass": [258, 260, 261, 485, 754], "mapped_arrai": [258, 313, 485, 767], "sm_legacy_cost": [258, 485], "dmce_reserve_gen_mpc2": [258, 474, 485], "dmce_reserve_zone_mpc2": [258, 474, 485], "dme_reserve_gen": [258, 474, 485], "dme_reserve_zon": [258, 474, 485], "mme_reserve_gen": [258, 474, 485], "mme_reserve_zon": [258, 474, 485], "dmce_bus3p_mpc2": [258, 471, 485], "dmce_gen3p_mpc2": [258, 471, 485], "dmce_load3p_mpc2": [258, 471, 485], "dmce_line3p_mpc2": [258, 471, 485], "dmce_xfmr3p_mpc2": [258, 471, 485], "dmce_buslink_mpc2": [258, 471, 485], "dme_bus3p_opf": [258, 471, 485], "dme_gen3p_opf": [258, 471, 485], "dme_load3p_opf": [258, 471, 485], "dme_line3p_opf": [258, 471, 485], "dme_xfmr3p_opf": [258, 471, 485], "dme_buslink_opf": [258, 471, 485], "nme_bus3p": [258, 428, 429, 485], "nme_bus3p_acc": [258, 471, 485], "nme_bus3p_acp": [258, 471, 485], "nme_gen3p": [258, 438, 439, 485], "nme_gen3p_acc": [258, 471, 485], "nme_gen3p_acp": [258, 471, 485], "nme_load3p": [258, 471, 485], "nme_line3p": [258, 471, 485], "nme_xfmr3p": [258, 471, 485], "nme_buslink": [258, 434, 435, 485], "nme_buslink_acc": [258, 471, 485], "nme_buslink_acp": [258, 471, 485], "mme_bus3p": [258, 371, 372, 471, 485], "mme_gen3p": [258, 388, 471, 485], "mme_line3p": [258, 402, 471, 485], "mme_xfmr3p": [258, 414, 471, 485], "mme_buslink": [258, 380, 383, 485], "mme_buslink_pf_ac": [258, 384, 385, 485], "mme_buslink_pf_acc": [258, 471, 485], "mme_buslink_pf_acp": [258, 471, 485], "mme_bus3p_opf_acc": [258, 471, 485], "mme_bus3p_opf_acp": [258, 471, 485], "mme_gen3p_opf": [258, 471, 485], "mme_line3p_opf": [258, 471, 485], "mme_xfmr3p_opf": [258, 471, 485], "mme_buslink_opf": [258, 381, 382, 485], "mme_buslink_opf_acc": [258, 471, 485], "mme_buslink_opf_acp": [258, 471, 485], "enumer": 259, "is_valid": 259, "seal": [259, 476], "poly_n": 260, "pwl_n": 260, "pwl_qty": 260, "pwl_cost": 260, "var_nam": [260, 269, 475, 476], "subsref": [260, 261, 269, 320, 475, 476], "subsasgn": [260, 261, 320, 475, 476], "deleg": [260, 316, 476], "readabl": [260, 315, 317, 318, 319, 415], "c_0": 260, "c_1": 260, "c_n": 260, "c_j": 260, "f_1": 260, "f_2": 260, "x_n": 260, "f_n": 260, "quantii": 260, "x_j": 260, "piecwis": 260, "f_j": 260, "pu_bas": [260, 261], "polynmi": 260, "i0": [260, 320, 389, 396], "i2": [260, 389, 396, 539, 572], "x_scale": 260, "ccm": 260, "sum_": 260, "f_i": 260, "x_i": 260, "eval_poly_fcn": 260, "diff_poly_fcn": 260, "cumbersom": 261, "pp_flag": [262, 264], "pp_section_label": 262, "pp_section_list": [262, 264], "pp_have_sect": [262, 268], "pp_section": 262, "pp_get_head": [262, 268], "pp_get_headers_cnt": 262, "pp_get_headers_ext": 262, "pp_data": [262, 268], "set_bus_v_lims_via_vg": 262, "bus3p": [262, 290, 471], "new_dm": [262, 268], "elm": 262, "s0": 262, "s1": 262, "suppress": [262, 594], "blank_lin": 262, "blank": 262, "pp_get_headers_oth": [262, 264, 307], "use_vg": [262, 594], "fraction": [262, 594], "shunt": [263, 282, 284, 298, 308, 309, 310, 409, 410, 411, 412, 456, 457, 458, 459, 460, 492, 493, 494, 496, 549, 567, 645, 649], "format_tag": [265, 266], "export": [265, 266, 268, 269, 303, 309, 349, 465, 467, 469, 665], "init_export": [265, 266], "new_dmc": 265, "prepar": [265, 268, 362], "fname_out": 265, "classic": 266, "legacy_user_mod_input": 267, "legacy_user_nln_constraint": 267, "fparm": [267, 487, 496, 617, 618, 748], "h1": 267, "cw": [267, 487, 496, 617, 618, 748], "zl": [267, 496, 617, 618, 748], "zu": [267, 496, 617, 618, 748], "user_constraint": 267, "undefin": 268, "table_exist": 268, "dm_converter_el": 268, "pp_row": 268, "pp_get_foot": 268, "footer": 268, "pp_have_section_cnt": 268, "pp_data_cnt": [268, 284, 286], "pp_have_section_ext": [268, 286], "pp_data_ext": [268, 286, 289], "pp_get_title_det": 268, "pp_get_footers_det": [268, 284, 292, 300, 305, 308], "nc": [268, 269], "sole": 268, "subclass_var1": 268, "subclass_var2": 268, "pp_have_section_oth": [268, 307], "pp_data_oth": [268, 307], "newlin": 268, "data_sub": [269, 280, 281], "get_import_s": [269, 279, 280, 282], "get_export_s": [269, 279, 280, 282], "get_input_table_valu": 269, "import_col": 269, "export_col": 269, "bus_status_import": [271, 272], "bus_name_import": 272, "bus_name_export": 272, "buslink": [273, 290, 291, 379, 380, 381, 382, 383, 384, 385, 433, 434, 435, 471], "pwl1": 275, "start_cost_import": 275, "start_cost_export": 275, "gen_cost_import": 275, "p_or_q": 275, "gen_cost_export": 275, "gencost0": 275, "create_line_construction_t": [277, 298], "lc": [277, 298], "scale_factor_fcn": 279, "zip_sf": 279, "sys_wide_zip_load": [279, 470, 594], "import_cost": 280, "import_qti": 280, "import_ramp": 280, "import_req": 281, "import_zon": 281, "g_fr": 284, "conduct": [284, 308, 496, 567], "b_fr": 284, "g_to": 284, "b_to": 284, "sm_ub_a": 284, "long": [284, 496, 566], "rate": [284, 305, 496, 540, 566, 571], "sm_ub_b": 284, "sm_ub_c": 284, "emerg": [284, 496, 566], "cm_ub_a": 284, "cm_ub_b": 284, "cm_ub_c": 284, "vad_lb": 284, "vad_ub": 284, "tm": 284, "ratio": [284, 496, 566, 594, 608, 668], "ta": 284, "shift": [284, 496, 536, 566, 569, 582, 593, 745], "pl_fr": 284, "ql_fr": 284, "pl_to": 284, "ql_to": 284, "psh_fr": 284, "qsh_fr": 284, "psh_to": 284, "qsh_to": 284, "xformer": 284, "radian": [284, 286, 287, 535, 583], "rate_a": [284, 536, 566, 745], "loss_tol": 284, "mu_flow_fr_ub": 285, "mu_flow_to_ub": 285, "mu_vad_lb": 285, "mu_vad_ub": 285, "usd": [285, 289, 292, 295, 297, 305, 306], "pp_get_title_lim": [285, 307], "base_kv": [286, 287, 311, 536, 567], "vm_lb": 286, "vm_ub": 286, "va_start": 286, "set_bus_type_ref": 286, "set_bus_type_pq": 286, "vm1_start": 287, "vm2_start": 287, "vm3_start": 287, "va1_start": 287, "va2_start": 287, "va3_start": 287, "lam_p": [289, 482, 483, 536, 567], "lam_q": [289, 536, 567], "mu_vm_lb": 289, "mu_vm_ub": 289, "pg1_start": [290, 293], "pg2_start": [290, 293], "pg3_start": [290, 293], "qg1_start": [290, 293], "qg2_start": [290, 293], "qg3_start": [290, 293], "startup_cost_cold": 292, "cold": 292, "pc1": [292, 496, 536, 551, 571, 578], "pc2": [292, 496, 536, 551, 571, 578], "qc1_lb": 292, "qc1_ub": 292, "qc2_lb": 292, "qc2_ub": 292, "bus_on": [292, 293], "pg_start": 292, "qg_start": 292, "violated_q_lim": 292, "isload": [292, 485, 576, 668, 745, 746, 751], "vm1_setpoint": 293, "vm2_setpoint": 293, "vm3_setpoint": 293, "cost_pg": [295, 297], "cost_qg": 295, "mu_pg_lb": 295, "mu_pg_ub": [295, 305], "mu_qg_lb": 295, "mu_qg_ub": 295, "max_pwl_gencost": 295, "fr": 296, "pl1_fr": [298, 311], "ql1_fr": [298, 311], "pl2_fr": [298, 311], "ql2_fr": [298, 311], "pl3_fr": [298, 311], "ql3_fr": [298, 311], "pl1_to": [298, 311], "ql1_to": [298, 311], "pl2_to": [298, 311], "ql2_to": [298, 311], "pl3_to": [298, 311], "ql3_to": [298, 311], "lc_tab": 298, "ohm": 298, "lc_y_idx": 298, "yc": 298, "lc_table_var_nam": 298, "vec2symmat": 298, "symmat2vec": 298, "pd": [300, 496, 536, 567, 668, 746], "p_p": 300, "qd": [300, 496, 536, 567, 668, 746], "q_p": 300, "pd_i": 300, "p_i": 300, "qd_i": 300, "q_i": 300, "pd_z": 300, "p_z": 300, "qd_z": 300, "q_z": 300, "_p": 300, "_z": 300, "pf1": 301, "pf2": 301, "pf3": 301, "dmb": [303, 309], "dmt": [303, 309], "qty": [305, 608, 662, 744], "ramp10": 305, "minut": [305, 496, 571], "alloc": [305, 352, 360, 594, 608], "r_lb": 305, "r_ub": 305, "total_cost": 305, "prc": [305, 306, 662, 744], "req": [306, 662, 744], "pp_set_tols_lim": 307, "pp_rows_oth": 307, "pp_get_footers_oth": 307, "pp_rows_lim": 307, "pp_get_footers_lim": 307, "pp_data_lim": 307, "b_": 308, "absorb": 308, "class_list": 313, "aspect": [314, 474], "xt": 314, "form_nam": [315, 317, 318, 319, 321, 323, 324, 326, 327, 331, 333, 336, 338, 340, 344, 345, 346, 347, 348], "form_tag": [315, 317, 318, 319, 321, 323, 324, 326, 327, 331, 333, 336, 338, 340, 344, 345, 346, 347, 348], "model_param": [315, 316, 319], "model_vvar": [315, 317, 318, 319], "model_zvar": [315, 316, 319], "get_param": 315, "find_form_class": 315, "acc": [315, 317], "acp": [315, 318, 321], "properi": 315, "p1": [315, 496, 568], "p2": [315, 496, 568], "pn": [315, 496, 568], "pa": 315, "namea": 315, "pb": 315, "nameb": 315, "canon": 315, "form_class": 315, "netork": 315, "longest": 315, "params_ncol": [316, 319], "inln_hess": 316, "snln_hess": 316, "port_inj_curr": [316, 317, 318, 416, 773, 774], "port_inj_pow": [316, 317, 318, 319, 416, 775, 776], "port_inj_current_hess": [316, 317, 318, 416], "port_inj_power_hess": [316, 317, 318, 416], "port_inj_current_jac": [316, 317, 318], "port_inj_current_hess_v": [316, 317, 318], "port_inj_current_hess_vz": [316, 317, 318], "port_inj_power_jac": [316, 317, 318], "port_inj_power_hess_v": [316, 317, 318], "port_inj_power_hess_vz": [316, 317, 318], "port_apparent_power_lim_fcn": 316, "port_active_power_lim_fcn": 316, "port_active_power2_lim_fcn": 316, "port_current_lim_fcn": 316, "port_apparent_power_lim_hess": 316, "port_active_power_lim_hess": 316, "port_active_power2_lim_hess": 316, "port_current_lim_hess": 316, "aux_data_va_vm": [316, 317, 318], "param_ncol": [316, 319], "x_": [316, 317, 318, 416, 420, 452], "sysx": [316, 317, 318, 319, 416, 420, 452], "iv1": 316, "iv2": 316, "izr": 316, "izi": 316, "gi_": 316, "formula": [316, 549], "sv1": 316, "sv2": 316, "szr": 316, "szi": 316, "mulipli": [316, 317, 391, 416], "v_": [316, 317, 318, 352, 420], "invdiagv": [316, 317, 318], "diagslincj": [316, 317, 318], "z_": [316, 317, 318, 352, 420], "diaginv": [316, 317, 318], "dlamj": [316, 317, 318], "diagv": [316, 317, 318], "diagvi": [316, 317, 318], "diagilincj": [316, 317, 318], "hmax": 316, "repesent": [317, 318], "va_fcn": [317, 381], "va_hess": [317, 381], "vm2_fcn": [317, 381], "vm2_hess": [317, 381], "iu": 317, "iw": 317, "iuu": 317, "iuw": 317, "iww": 317, "iuzr": 317, "iuzi": 317, "iwzr": 317, "iwzi": 317, "su": 317, "sw": 317, "suu": 317, "suw": 317, "sww": 317, "suzr": 317, "suzi": 317, "swzr": 317, "swzi": 317, "connvert": 317, "va_lb": 317, "va_ub": 317, "vm2_lb": 317, "vm2_ub": 317, "iva": 318, "ivm": 318, "ivava": 318, "ivavm": 318, "ivmvm": 318, "ivazr": 318, "ivazi": 318, "ivmzr": 318, "ivmzi": 318, "sva": 318, "svm": 318, "svava": 318, "svavm": 318, "svmvm": 318, "svazr": 318, "svazi": 318, "svmzr": 318, "svmzi": 318, "ma": 320, "width": 320, "height": 320, "depth": 320, "treat": [320, 490, 492, 493, 494], "add_el": 320, "color": 320, "weight": [320, 585, 594], "delete_el": 320, "has_nam": 320, "add_nam": 320, "name2idx": 320, "new_obj": 320, "num_el": 320, "overwrit": 320, "corrspond": 320, "aux_data": 321, "task_nam": [321, 328, 342], "add_aux_data": 321, "build_base_aux_data": 321, "add_system_var": [321, 328, 342], "add_system_constraint": [321, 332, 334, 337, 339, 341], "add_node_balance_constraint": [321, 323, 324, 326, 327, 331, 333, 336, 338, 340, 344, 345, 346, 347, 348], "add_system_cost": [321, 332, 334, 337, 339, 341], "update_nm_var": 321, "build_aux_data": [321, 328, 351, 355, 358, 359, 360], "mmx": [321, 330, 335, 340, 354, 357, 360], "nm_var": 321, "var_map": 321, "nm_var_typ": 321, "nm_i1": 321, "nm_in": 321, "nm_idx": 321, "mm_i1": 321, "mm_in": 321, "mm_idx": 321, "convert_x_m2n": [321, 330, 335, 340, 354, 357, 360], "math_model_cpf": [322, 325], "event_vlim": 325, "callback_vlim": 325, "expand_z_warmstart": 327, "solve_opts_warmstart": 327, "interior_va": [328, 330], "nodal_current_balance_fcn": 329, "nodal_power_balance_fcn": 329, "nodal_current_balance_hess": 329, "nodal_power_balance_hess": 329, "node_power_balance_pric": [331, 333, 336, 338], "formluat": [332, 334, 337, 339, 341], "legacy_user_var_nam": [332, 334, 337, 339, 341], "gs_x_updat": 347, "zg_x_updat": 347, "fd_jac_approx": 347, "fdpf_b_matrix_model": 347, "accordingli": [349, 511, 514], "mod_set_types_legaci": 350, "init_set_types_legaci": 350, "get_mpc": [350, 487, 656], "build_legaci": 350, "add_legacy_user_var": 350, "add_legacy_user_cost": 350, "add_legacy_user_constraint": 350, "add_legacy_user_constraints_ac": 350, "add_legacy_cost": [350, 462, 487], "eval_legacy_cost": [350, 487], "params_legacy_cost": [350, 487], "add_system_varset_pf": 352, "vvar": 352, "typ": 352, "update_z": [352, 360], "sinj": 352, "formuat": [353, 354, 355, 356, 357, 358, 359], "build_aux_data_i": 353, "only_v": [354, 357, 360], "pf_convert": [354, 357, 360], "add_system_vars_pf": [355, 356, 358, 359, 360], "node_balance_equ": [355, 356, 358, 359], "fdpf": [359, 485, 581, 751], "ang_diff_param": 362, "ang_diff_pric": [362, 364], "interior_vm": 373, "avg": 373, "clip": 373, "voltage_constraint": [383, 433], "pf_va_fcn": 384, "pf_vm_fcn": 384, "poly_p": 389, "poly_q": 389, "actv": [389, 396], "bulid": [390, 392], "pq_capability_constraint": 390, "makeapq": [390, 485, 749, 751], "has_pq_cap": 390, "upper_low": 390, "haspqcap": [390, 485, 692, 751], "disp_load_constant_pf_constraint": 390, "makeavl": [390, 485, 751], "oval": [391, 473], "cap": [391, 578], "rectangular": 391, "radii": 391, "the_np": 415, "the_nz": 415, "add_nod": [415, 420], "add_stat": [415, 420], "stack_matrix_param": 415, "stack_vector_param": 415, "add_port": 415, "set_type_label": 415, "get_node_idx": 415, "get_port_idx": 415, "get_state_idx": 415, "ensure_ref_nod": 415, "vnotz": 415, "unus": [415, 496], "vr0": 415, "vrmin": 415, "vrmax": 415, "zij_lb": 415, "zij_ub": 415, "nidx": [415, 420], "pidx": 415, "sidx": [415, 651], "skip_ensure_ref": 415, "ntv": [415, 420, 427], "by_elm": 415, "implicitli": 416, "port_inj_nln": 416, "port_inj_nln_hess": 416, "nodal_complex_current_bal": 416, "nodal_complex_power_bal": 416, "nodal_complex_current_balance_hess": 416, "nodal_complex_power_balance_hess": 416, "get_va": 416, "gv1": 416, "gv2": 416, "gzr": 416, "gzi": 416, "snln_": 416, "inln_": 416, "kcl": 416, "initial_voltage_angl": [417, 418], "math_model_el": 420, "get_nv_": 420, "x2vz": 420, "node_indic": 420, "incidence_matrix": 420, "nv_": 420, "vi_": 420, "cd": 420, "ang_diff_fcn": 423, "aang": [423, 577, 619, 620], "lang": [423, 577, 619, 620], "uang": [423, 577, 619, 620], "ang_diff_hess": 423, "vr3": 428, "vi3": 428, "plink": 433, "qlink": 433, "vec2symmat_stack": 449, "port_inj_current_nln": 452, "port_inj_power_nln": 452, "opf_model": [462, 467, 485, 617, 724, 751], "interact": [463, 478, 536], "mm_opt": 463, "i_dm": 463, "i_nm": 463, "i_mm": 463, "didn": 463, "load_dm": [463, 477, 485], "run_pr": [463, 464, 465, 466, 467, 468, 469, 470], "run_post": [463, 465, 467, 469], "print_soln_head": [463, 466], "dm_converter_cr": 463, "data_model_cr": 463, "data_model_build": [463, 464], "data_model_build_pr": 463, "data_model_build_post": [463, 466, 467], "network_model_cr": 463, "network_model_build": [463, 464], "network_model_build_pr": 463, "network_model_build_post": [463, 468], "network_model_upd": [463, 464], "math_model_cr": 463, "math_model_build": 463, "math_model_opt": [463, 464], "propag": 463, "mpoopt": 463, "handel": 463, "dm_converter_build": 463, "restart": 464, "superclass": [464, 466, 467, 468], "clam": 464, "plam": 464, "cv": 464, "current_bal": [464, 466, 468, 594], "legacy_post_run": [465, 467, 469], "post": [465, 467, 469], "run_pre_legaci": [465, 467, 469, 470], "printout": 466, "variat": 467, "opf_execut": [467, 485, 632, 751], "dcopf_solv": [467, 485, 751], "nlpopf_solv": [467, 485, 751], "ref0": 468, "va_ref0": 468, "fixed_q_idx": 468, "fixed_q_qti": 468, "enforce_q_lim": [468, 594, 608, 657, 663], "move": 470, "optimi": [471, 472], "gen3p": 471, "load3p": 471, "line3p": 471, "xfmr3p": 471, "half": [473, 551], "region": [473, 563, 594, 608], "qmin": [473, 496, 513, 536, 571, 668, 745, 746], "qmax": [473, 496, 513, 536, 571, 668, 745, 746], "gen_opf_ac": 473, "gen_opf_ac_ov": 473, "reserve_gen": 474, "reserve_zon": 474, "var1": [475, 480], "var2": [475, 480], "name1": [475, 594, 608], "name2": [475, 594, 608], "rownam": 475, "dimensionnam": 475, "focus": 475, "join": 475, "istabl": [475, 476], "concaten": [475, 476], "vertcat": [475, 476], "unfortun": 475, "realli": 475, "last_var": 475, "last_row": 475, "sub_t": 475, "jn": 475, "var_": 475, "t1": [475, 476], "t2": [475, 476], "extract_named_arg": 475, "row_nam": 475, "dim_nam": 475, "act": 476, "isn": 476, "cannot": [476, 548], "fine": 476, "php": 476, "65037": 476, "emul": 476, "get_tabl": 476, "set_tabl": 476, "install_matpow": [477, 485], "save_it": 478, "rm_oldpath": 478, "assist": 478, "session": [478, 783], "addpath": 478, "silent": 478, "mode": [478, 657, 783], "my": 478, "temporarili": 478, "matpower8": 478, "uninstal": 478, "nativ": [480, 594], "tablici": [480, 562], "table_class": 480, "print_fnam": [481, 482, 483, 484], "soln_fnam": [481, 482, 483, 484], "case9target": [481, 657], "miscellan": 485, "test_matpow": [485, 753], "t_mp_mapped_arrai": [485, 753], "t_mp_tabl": [485, 753], "t_mp_data_model": [485, 753], "t_dmc_element": [485, 753], "t_mp_dm_converter_mpc2": [485, 753], "t_nm_element": [485, 753], "t_port_inj_current_acc": [485, 753], "t_port_inj_current_acp": [485, 753], "t_port_inj_power_acc": [485, 753], "t_port_inj_power_acp": [485, 753], "t_node_test": [485, 753], "t_run_mp": [485, 753], "t_run_opf_default": [485, 753], "t_pretty_print": [485, 753], "t_mpxt_legacy_dclin": [485, 753], "t_mpxt_reserv": [485, 753], "mp_foo_tabl": [485, 753], "t_case9_gizmo": [485, 753], "runpf": [485, 535, 541, 546, 549, 594, 610, 611, 612, 613, 614, 615, 657, 659, 742, 750, 751], "runcpf": [485, 500, 502, 515, 516, 594, 751], "runopf": [485, 594, 617, 644, 658, 662, 664, 742, 751, 783], "runuopf": [485, 660, 661, 748, 751], "rundcpf": [485, 535, 663, 751], "rundcopf": [485, 533, 660, 661, 751], "runduopf": [485, 658, 664, 751], "runopf_w_r": [485, 488, 655, 656, 737, 744, 751], "cdf2mpc": [485, 751], "printpf": [485, 488, 733, 751], "psse2mpc": [485, 649, 651, 652, 734, 751], "save2pss": [485, 681, 751], "savecas": [485, 488, 496, 547, 548, 751], "savechgtab": [485, 751], "e2i_data": [485, 538, 539, 564, 689, 751], "e2i_field": [485, 537, 539, 565, 689, 751], "i2e_data": [485, 537, 565, 572, 689, 751], "i2e_field": [485, 538, 564, 572, 689, 751], "get_reord": [485, 669, 689, 751], "set_reord": [485, 550, 689, 751], "calc_v_i_sum": [485, 751], "calc_v_pq_sum": [485, 590, 751], "calc_v_y_sum": [485, 751], "dcpf": [485, 582, 751], "gausspf": [485, 751], "make_vcorr": [485, 751], "make_zpv": [485, 751], "newtonpf": [485, 611, 612, 613, 614, 615, 751], "newtonpf_i_cart": [485, 610, 613, 614, 615, 751], "newtonpf_i_hybrid": [485, 751], "newtonpf_i_polar": [485, 610, 611, 612, 614, 615, 751], "newtonpf_s_cart": [485, 610, 611, 612, 613, 751], "newtonpf_s_hybrid": [485, 751], "order_radi": [485, 751], "pfsoln": [485, 751], "radial_pf": [485, 492, 493, 494, 589, 639, 751], "zgausspf": [485, 751], "cpf_corrector": [485, 508, 509, 751], "cpf_current_mpc": [485, 751], "cpf_default_callback": [485, 505, 507, 511, 514, 515, 519, 521, 594, 751], "cpf_detect_ev": [485, 502, 751], "cpf_flim_ev": [485, 505, 751], "cpf_flim_event_cb": [485, 515, 751], "cpf_nose_ev": [485, 507, 751], "cpf_nose_event_cb": [485, 505, 515, 751], "cpf_p": [485, 751], "cpf_p_jac": [485, 751], "cpf_plim_ev": [485, 511, 751], "cpf_plim_event_cb": [485, 515, 751], "cpf_predictor": [485, 508, 509, 751], "cpf_qlim_ev": [485, 514, 751], "cpf_qlim_event_cb": [485, 515, 751], "cpf_register_callback": [485, 502, 751], "cpf_register_ev": [485, 751], "cpf_tangent": [485, 751], "cpf_target_lam_ev": [485, 519, 751], "cpf_target_lam_event_cb": [485, 515, 751], "cpf_vlim_ev": [485, 521, 751], "cpf_vlim_event_cb": [485, 515, 751], "dcopf": [485, 617, 751], "fmincopf": [485, 751], "uopf": [485, 617, 751], "makeaang": [485, 619, 620, 751], "makeai": [485, 751], "margcost": [485, 700, 751], "opf_arg": [485, 751], "opf_setup": [485, 625, 751], "opf_branch_ang_fcn": [485, 620, 751], "opf_branch_ang_hess": [485, 619, 751], "opf_branch_flow_fcn": [485, 622, 751], "opf_branch_flow_hess": [485, 621, 751], "opf_current_balance_fcn": [485, 624, 751], "opf_current_balance_hess": [485, 751], "opf_gen_cost_fcn": [485, 751], "opf_legacy_user_cost_fcn": [485, 751], "opf_power_balance_fcn": [485, 631, 751], "opf_power_balance_hess": [485, 623, 630, 751], "opf_veq_fcn": [485, 634, 751], "opf_veq_hess": [485, 633, 751], "opf_vlim_fcn": [485, 636, 751], "opf_vlim_hess": [485, 635, 751], "opf_vref_fcn": [485, 638, 751], "opf_vref_hess": [485, 637, 751], "totcost": [485, 740, 751], "update_mupq": [485, 751], "add_userfcn": [485, 496, 655, 656, 742, 743, 744, 745, 751], "remove_userfcn": [485, 488, 656, 742, 743, 744, 745, 751], "run_userfcn": [485, 488, 655, 742, 743, 744, 745, 751], "toggle_dclin": [485, 488, 570, 676, 688, 751], "toggle_iflim": [485, 488, 655, 656, 751], "toggle_softlim": [485, 488, 491, 751], "dibr_dv": [485, 522, 528, 751], "dsbr_dv": [485, 522, 528, 751], "dabr_dv": [485, 522, 751], "dimis_dv": [485, 751], "dsbus_dv": [485, 751], "d2ibr_dv2": [485, 751], "d2sbr_dv2": [485, 522, 751], "d2abr_dv2": [485, 751], "d2imis_dv2": [485, 751], "d2imis_dvdsg": [485, 751], "d2sbus_dv2": [485, 751], "miqps_matpow": [485, 701, 751], "qps_matpow": [485, 735, 751], "makeb": [485, 751], "makebdc": [485, 751], "makejac": [485, 588, 751], "makelodf": [485, 585, 698, 751], "makeptdf": [485, 584, 699, 751], "makesbu": [485, 524, 530, 588, 751], "makesdzip": [485, 751], "makeybu": [485, 522, 523, 524, 526, 527, 529, 530, 531, 532, 583, 586, 751], "apply_chang": [485, 536, 569, 667, 670, 684, 751], "bustyp": [485, 751], "calc_branch_angl": [485, 751], "case_info": [485, 540, 694, 751], "compare_cas": [485, 751], "define_const": [485, 566, 567, 568, 571, 751], "extract_island": [485, 544, 694, 751], "feval_w_path": [485, 690, 751], "find_bridg": [485, 584, 751], "find_island": [485, 495, 540, 694, 751], "gentyp": [485, 496, 540, 547, 751], "get_loss": [485, 691, 751], "idx_brch": [485, 496, 536, 751], "idx_bu": [485, 489, 496, 536, 751], "idx_cost": [485, 489, 496, 536, 751], "idx_gen": [485, 489, 496, 536, 751], "load2disp": [485, 696, 751], "loadsh": [485, 751], "modcost": [485, 569, 668, 702, 751], "poly2pwl": [485, 751], "polycost": [485, 641, 751], "pqcost": [485, 751], "scale_load": [485, 738, 746, 751], "total_load": [485, 668, 739, 751], "have_feature_e4st": [485, 751], "have_feature_minopf": [485, 751], "have_feature_most": [485, 751], "have_feature_mp_cor": [485, 751], "have_feature_pdipmopf": [485, 751], "have_feature_regexp_split": [485, 751], "have_feature_scpdipmopf": [485, 751], "have_feature_sdp_pf": [485, 751], "have_feature_smartmarket": [485, 751], "have_feature_syngrid": [485, 751], "have_feature_t": [485, 751], "have_feature_tralmopf": [485, 751], "connected_compon": [485, 540, 544, 694, 751], "mpoption_info_clp": [485, 751], "mpoption_info_cplex": [485, 751], "mpoption_info_fmincon": [485, 751], "mpoption_info_glpk": [485, 751], "mpoption_info_gurobi": [485, 751], "mpoption_info_intlinprog": [485, 751], "mpoption_info_ipopt": [485, 751], "mpoption_info_knitro": [485, 751], "mpoption_info_linprog": [485, 751], "mpoption_info_mip": [485, 751], "mpoption_info_mosek": [485, 751], "mpoption_info_osqp": [485, 751], "mpoption_info_quadprog": [485, 751], "mpoption_old": [485, 751], "psse_convert": [485, 647, 648, 751], "psse_convert_hvdc": [485, 751], "psse_convert_xfmr": [485, 751], "psse_pars": [485, 651, 751], "psse_parse_lin": [485, 649, 751], "psse_parse_sect": [485, 649, 751], "psse_read": [485, 646, 647, 648, 649, 651, 751], "t_apply_chang": [485, 751], "t_auction_minopf": [485, 751], "t_auction_mip": [485, 751], "t_auction_tspopf_pdipm": [485, 751], "t_chgtab": [485, 751], "t_cpf": [485, 751], "t_dcline": [485, 751], "t_ext2int2ext": [485, 751], "t_feval_w_path": [485, 751], "t_get_loss": [485, 751], "t_haspqcap": [485, 751], "t_island": [485, 751], "t_load2disp": [485, 751], "t_makelodf": [485, 751], "t_makeptdf": [485, 751], "t_margcost": [485, 751], "t_miqps_matpow": [485, 751], "t_modcost": [485, 751], "t_mpoption": [485, 751], "t_mpoption_ov": [485, 751], "t_off2cas": [485, 751], "t_opf_dc_bpmpd": [485, 751], "t_opf_dc_clp": [485, 751], "t_opf_dc_cplex": [485, 751], "t_opf_dc_default": [485, 751], "t_opf_dc_glpk": [485, 751], "t_opf_dc_gurobi": [485, 751], "t_opf_dc_ipopt": [485, 751], "t_opf_dc_mip": [485, 751], "t_opf_dc_mips_sc": [485, 751], "t_opf_dc_mosek": [485, 751], "t_opf_dc_osqp": [485, 751], "t_opf_dc_ot": [485, 751], "t_opf_default": [485, 751], "t_opf_fmincon": [485, 751], "t_opf_ipopt": [485, 751], "t_opf_knitro": [485, 751], "t_opf_minopf": [485, 751], "t_opf_mip": [485, 751], "t_opf_model": [485, 751], "t_opf_softlim": [485, 745, 751], "t_opf_tspopf_pdipm": [485, 751], "t_opf_tspopf_scpdipm": [485, 751], "t_opf_tspopf_tralm": [485, 751], "t_opf_userfcn": [485, 751], "t_pf_ac": [485, 751], "t_pf_dc": [485, 751], "t_pf_radial": [485, 751], "t_printpf": [485, 751], "t_psse": [485, 751], "t_qps_matpow": [485, 751], "t_runmarket": [485, 751], "t_runopf_w_r": [485, 751], "t_scale_load": [485, 751], "t_total_load": [485, 751], "t_totcost": [485, 751], "t_vdep_load": [485, 751], "opf_nle_fcn1": [485, 751], "opf_nle_hess1": [485, 751], "t_auction_cas": [485, 751], "t_case30_userfcn": [485, 662, 743, 744, 751], "t_case9_opf": [485, 751], "t_case9_opfv2": [485, 676, 751], "t_case9_pf": [485, 751], "t_case9_pfv2": [485, 751], "t_case9_save2pss": [485, 751], "t_case_ext": [485, 751], "t_case_int": [485, 751], "t_cpf_cb1": [485, 751], "t_cpf_cb2": [485, 751], "rr": 487, "set_mpc": 487, "f_u": 487, "nw": 487, "ddl": 487, "ddq": 487, "dl": [487, 547, 548], "dq": 487, "buld_cost_param": 487, "get_cost_param": [487, 627], "cp1": 487, "n1": 487, "cw1": 487, "cp2": 487, "n2": 487, "cw2": 487, "usr1": 487, "usr2": 487, "allow_multipl": 488, "userfcn": [488, 617, 618, 655, 656, 725, 729, 742, 743, 744, 745, 748], "freshli": 488, "presum": 488, "userfcn_reserves_ext2int": 488, "userfcn_reserves_formul": 488, "userfcn_reserves_int2ext": 488, "descriptor": [488, 644], "userfcn_reserves_printpf": 488, "prefix": 488, "mpc_modifi": 489, "mpc_origin": 489, "best": 489, "idx_branch": 489, "7th": 489, "ct_rep": [489, 536, 569], "ct_load_all_p": [489, 536, 569], "ct_rel": [489, 536, 569], "delta": 491, "TO": 491, "af": [491, 528], "vslack": [492, 493, 494], "zb": [492, 493, 494, 589, 590], "ybf": [492, 493, 494], "ybt": [492, 493, 494], "yd": [492, 493, 494, 590], "vg": [492, 493, 494, 496, 536, 571, 594], "summat": [492, 493, 494, 594], "qpv": [492, 493, 494], "sslack": [492, 493, 494], "iter_max": [492, 493, 494], "indici": [492, 493, 494, 590, 639], "principl": [492, 493, 494, 639], "send": [492, 493, 494, 639], "receiv": [492, 493, 494, 639], "addmitt": [492, 493, 494], "shirmohammadi": 492, "hong": 492, "semlyen": 492, "luo": 492, "compens": [492, 548], "weakli": [492, 494], "mesh": [492, 494], "753": 492, "1988": 492, "192932": 492, "1309": 492, "1316": 492, "nov": 492, "1990": 492, "99382": 492, "vcpf": 493, "rajic": [493, 589, 639], "ackovski": [493, 589, 639], "taleski": [493, 494, 589, 639], "1056": [493, 589, 639], "1062": [493, 589, 639], "apr": [493, 589, 639], "1994": [493, 589, 639], "296308": [493, 589], "dragoslav": 494, "raji\u010di\u0107": 494, "rubin": 494, "novel": 494, "radial": [494, 594], "analysi": 494, "volum": 494, "decemb": 494, "1998": 494, "1016": 494, "s0378": 494, "7796": 494, "00067": 494, "island": [495, 540, 543, 544, 584], "fopen": [495, 644], "pti": 496, "item": 496, "idx_area": 496, "regard": 496, "bus_nam": [496, 540, 648], "maxvm": [496, 567], "minvm": [496, 567], "machin": [496, 571], "remot": 496, "mbase": [496, 536, 571], "qc1min": [496, 536, 551, 571, 578], "qc1max": [496, 536, 551, 571, 578], "qc2min": [496, 536, 551, 571, 578], "qc2max": [496, 536, 551, 571, 578], "agc": [496, 571], "timescal": [496, 571], "apf": [496, 536, 571], "particip": [496, 571], "ratea": [496, 566, 657], "unlimit": 496, "rateb": [496, 566], "ratec": [496, 566], "tap": [496, 497, 536, 566], "delai": 496, "gf": [496, 547], "bf": [496, 582], "gt": [496, 548], "bt": [496, 548], "angmin": [496, 536, 566, 577, 745], "360": [496, 566, 577], "angmax": [496, 536, 566, 577, 745], "dollar": [496, 568], "fn": [496, 568], "break": [496, 543, 568, 589], "cn": [496, 568], "c0": [496, 497, 568], "highest": [496, 568], "longer": 496, "price_ref_bu": 496, "cdf_file_nam": 497, "mpc_name": [497, 645], "comment": [497, 645, 649, 650, 651, 652, 666, 667], "ieee300": 497, "mpc1": [498, 540], "unvisit": 499, "graph": 499, "ybu": [500, 501, 502, 517, 522, 523, 524, 526, 527, 529, 530, 531, 532, 541, 546, 583, 588, 610, 611, 612, 613, 614, 615, 623, 624, 630, 631, 640, 750], "sbusb": [500, 502, 517], "v_hat": [500, 502, 512, 657], "sbust": [500, 502, 517], "vprv": [500, 508, 509, 517], "lamprv": [500, 508, 509, 517], "lprv": 500, "scheme": [500, 657], "mpct": 501, "yf": [501, 502, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 583, 588, 621, 622, 640], "yt": [501, 502, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 583, 588, 621, 622, 640], "mpc_base": [501, 502], "mpc_target": [501, 502], "evnt": [502, 505, 507, 511, 514, 519, 521, 686, 687], "cb_data": [502, 504, 505, 506, 507, 510, 511, 513, 514, 518, 519, 520, 521, 686, 687], "cb_arg": [502, 505, 507, 511, 514, 515, 519, 521, 686, 687], "paramter": 502, "cb_state": 502, "ef": [502, 504, 506, 510, 513, 518, 520], "idx_pmax": 502, "underli": [502, 783], "job": 502, "user_callback": [502, 515, 594], "cpf_event": [503, 516], "cef": 503, "pef": 503, "sratea": 504, "flim": 505, "dp_dv": 509, "dp_dlam": 509, "plim": 511, "encount": [511, 514], "transfer": [511, 514, 585, 657], "choos": [511, 514, 594, 608], "remain": [514, 541, 546, 610, 611, 612, 613, 614, 615, 657, 663, 745, 750], "cpf_callback": 515, "53": 515, "zprv": 517, "postiv": 517, "vlim": [521, 635], "d2f_dv2": 522, "df_dv1": 522, "df_dv2": 522, "h11": 522, "h12": 522, "h21": 522, "h22": 522, "cf": [522, 526, 529, 531], "dsf_dv1": 522, "dsf_dv2": 522, "dst_dv1": 522, "dst_dv2": 522, "dv1": [522, 528], "daf_dv1": [522, 528], "dv2": [522, 528], "daf_dv2": [522, 528], "februari": [522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 782], "3237866": [522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 782], "ybr": [523, 526], "vcart": [523, 524, 525, 526, 527, 529, 530, 531, 532], "haa": [523, 526], "hav": [523, 526], "hva": [523, 526], "hvv": [523, 526], "hrr": [523, 526], "hri": [523, 526], "hir": [523, 526], "hii": [523, 526], "dva": [523, 524, 525, 526, 527, 529, 530, 531, 532], "dibr_dva": 523, "dibr_dvm": 523, "dvr": [523, 524, 525, 526, 527, 529, 530, 531, 532], "dibr_dvr": 523, "dvi": [523, 524, 525, 526, 527, 529, 530, 531, 532], "dibr_dvi": 523, "sereet": [523, 524, 525, 526, 527, 529, 530, 531, 532, 782], "april": [523, 524, 525, 526, 527, 529, 530, 531, 532, 782], "2018": [523, 524, 525, 526, 527, 529, 530, 531, 532, 782], "3237909": [523, 524, 525, 526, 527, 529, 530, 531, 532, 782], "sbu": [524, 530, 541, 546, 586, 610, 611, 612, 613, 614, 615, 750], "gaa": [524, 527], "gav": [524, 527], "gva": [524, 527], "gvv": [524, 527], "grr": [524, 525, 527], "gir": [524, 525, 527], "gii": [524, 525, 527], "dimis_dva": [524, 530], "dimis_dvm": [524, 530], "gri": [524, 525, 527], "dimis_dvr": [524, 530], "dimis_dvi": [524, 530], "addendum": [524, 525, 530, 782], "3237900": [524, 525, 530, 782], "cg": 525, "sg": [525, 586], "gsv": 525, "gen_bu": [525, 536, 571], "gpa": 525, "gpv": 525, "gqa": 525, "gqv": 525, "dimis_dpg": 525, "dimis_dqg": 525, "gpr": 525, "gpi": 525, "gqr": 525, "gqi": 525, "cbr": 526, "brch": 526, "dsbr_dva": 526, "dsbr_dvm": 526, "dsbr_dvr": 526, "dsbr_dvi": 526, "dsbus_dva": [527, 532], "dsbus_dvm": [527, 532, 586], "dsbus_dvr": [527, 532], "dsbus_dvi": [527, 532], "dff_dv1": 528, "dff_dv2": 528, "dft_dv1": 528, "dft_dv2": 528, "ff": 528, "ft": 528, "dat_dv1": 528, "dat_dv2": 528, "sensit": [528, 536, 583], "daf": 528, "dpf": 528, "dqf": 528, "v1": 528, "il": [528, 621, 622], "dif_dva": 529, "dif_dvm": 529, "dit_dva": 529, "dit_dvm": 529, "IF": 529, "IT": [529, 548], "dif_dvr": 529, "dif_dvi": 529, "dit_dvr": 529, "dit_dvi": 529, "dvf": [529, 531], "dif": [529, 531], "imi": 530, "ibu": [530, 532], "idg": 530, "dimi": 530, "dsf_dva": 531, "dsf_dvm": 531, "dst_dva": 531, "dst_dvm": 531, "dsf_dvr": 531, "dsf_dvi": 531, "dst_dvr": 531, "dst_dvi": 531, "dsf": 531, "mino": [534, 553, 594, 608, 616, 617, 722], "xr": [534, 616, 617, 748], "pimul": [534, 616, 617, 748], "pbu": 535, "swing": [535, 541, 546, 610, 611, 612, 613, 614, 615, 750], "bus_i": [536, 567], "bus_typ": [536, 567], "bus_area": [536, 567, 668, 746], "mu_vmax": [536, 567, 745], "mu_vmin": [536, 567], "br_r": [536, 566], "br_x": [536, 566], "br_b": [536, 566], "rate_b": [536, 566], "rate_c": [536, 566], "mu_sf": [536, 566, 745], "mu_st": [536, 566, 745], "mu_angmin": [536, 566], "mu_angmax": [536, 566], "mu_qmax": [536, 571, 749], "mu_qmin": [536, 571, 749], "ramp_q": [536, 571], "pw_linear": [536, 568], "ncost": [536, 568], "ct_label": [536, 569], "ct_prob": [536, 569], "ct_tabl": [536, 569], "ct_row": [536, 569], "ct_chgtype": [536, 569], "ct_add": [536, 569], "ct_newval": [536, 569], "ct_load_all_pq": [536, 569], "ct_load_fix_pq": [536, 569], "ct_load_dis_pq": [536, 569], "ct_load_fix_p": [536, 569], "ct_load_dis_p": [536, 569], "ct_modcost_f": [536, 569], "ct_modcost_x": [536, 569], "frequent": 536, "high": [536, 548, 725, 729], "concern": 536, "accord": [537, 564, 650, 668, 745], "disturb": [537, 564], "a_int": [537, 564], "a_ext": [537, 564], "gencost_int": [537, 564], "gencost_ext": [537, 564], "revers": [539, 548], "external_bus_numb": [539, 572], "internal_bus_numb": [539, 572], "matow": [539, 572], "e2i": 539, "mpc_arrai": 540, "mpc_k": 540, "travers": 540, "elimin": [540, 657], "mpc_list": 540, "traver": 540, "mpc3": 540, "bus_label": 540, "gen_nam": 540, "emiss": 540, "genloc": 540, "bpp": [541, 581, 750], "prime": [541, 548, 581, 750], "guess": [541, 546, 610, 611, 612, 613, 614, 615, 750], "fpath": 542, "x1": 542, "xn": 542, "yn": 542, "feval": 542, "caller": 542, "testfunct": 542, "mytestfcn": 542, "x2": 542, "bridg": [543, 584], "nonbridg": 543, "filter": [543, 580], "tarjan": 543, "520": [545, 608], "unord": [547, 548], "biomass": 547, "coal": [547, 548], "dfo": 547, "distil": 547, "oil": 547, "diesel": [547, 548], "fo1": 547, "fo2": 547, "fo4": 547, "geotherm": [547, 548], "hydrop": 547, "pump": [547, 548, 573], "jetfuel": 547, "jet": [547, 548], "lng": 547, "liquefi": 547, "ga": [547, 548], "nuclear": [547, 548], "refus": 547, "municip": 547, "solid": [547, 548], "wast": 547, "rfo": 547, "fo5": 547, "fo6": 547, "solar": [547, 548], "syncgen": 547, "condensor": 547, "wasteheat": 547, "heat": 547, "wood": 547, "eia": 548, "860": 548, "instruct": [548, 617, 618], "mover": 548, "gov": 548, "survei": 548, "eia_860": 548, "ba": 548, "ce": 548, "compress": 548, "air": 548, "concentr": 548, "fw": 548, "flywheel": 548, "hydraul": 548, "turbin": 548, "steam": 548, "combust": 548, "ic": [548, 594], "piston": 548, "reciproc": 548, "ca": 548, "ct": 548, "integr": 548, "gasif": 548, "shaft": 548, "plant": 548, "hydrokinet": 548, "axial": 548, "hb": 548, "wave": 548, "buoi": 548, "hk": 548, "hy": 548, "hydroelectr": 548, "water": 548, "pipelin": 548, "photovolta": 548, "wt": 548, "onshor": 548, "offshor": 548, "fc": 548, "powerworld": 548, "un": 548, "je": 548, "boil": 548, "reactor": 548, "graphit": 548, "nh": 548, "temperatur": 548, "pressur": 548, "turbo": 548, "condens": 548, "ti": 548, "motor": 548, "w1": 548, "w2": 548, "w3": 548, "w4": 548, "chg": 549, "fchg": 549, "tchg": 549, "dloss_dv": 549, "dchg_dvm": 549, "tau": 549, "bc": 549, "total_system_real_loss": 549, "total_system_reac_loss": 549, "hilo": 551, "slope": [551, 749], "intersect": 551, "plane": 551, "box": 551, "smart": 551, "redund": 551, "e4st": 552, "environment": 552, "minopf": [553, 594, 608, 672], "mp_core": [555, 783], "pdipmopf": [556, 674], "tspopf": [556, 558, 563, 594, 608, 617], "regexp": 557, "regexp_split": 557, "scpdipmopf": 558, "sdp_pf": [559, 594], "mx": [559, 561], "smartmarket": 560, "runmarket": 560, "syngrid": 561, "r2013b": 562, "apjank": 562, "tralmopf": 563, "trust": [563, 594, 608], "augment": [563, 594, 608], "langrangian": [563, 594, 608], "oldval": [564, 565], "a_orig": 564, "gencost_orig": 564, "ploss": 566, "mismatch": [567, 594, 608, 617], "restor": 572, "revert": 572, "AND": [573, 745], "revis": [573, 645, 649], "sensibl": 573, "elast": 573, "mpc0": 574, "voll": 574, "lost": 574, "casefil": 575, "doesn": 575, "abort": 575, "fewer": 575, "ild": 576, "curtail": 576, "shed": 576, "nld": 576, "total_load_sh": 576, "iang": 577, "apqh": 578, "ubpqh": 578, "apql": 578, "ubpql": 578, "trapezoid": 578, "constain": 578, "ipqh": 578, "ipql": 578, "ivl": 579, "pgba": 580, "qgba": 580, "yba": 580, "BY": 580, "basin": [580, 617], "fdxb": [581, 594], "fdbx": [581, 594], "pf_alg": [581, 608], "bbu": 582, "pbusinj": 582, "pfinj": 582, "fulljac": 583, "ptdf": [584, 585], "mask_bridg": 584, "outag": 584, "lodf": 584, "nbr": [584, 585], "bus_idx": 585, "txfr": 585, "rand": 585, "v_corr": 589, "seen": 589, "zpv": 590, "mutual": 590, "joint": 590, "forward": [590, 654], "sweep": [590, 654], "margin": [591, 668, 745], "marginalcost": 591, "modtyp": [593, 668], "newgencost": 593, "f_alpha": 593, "scale_f": [593, 668], "scale_x": [593, 668], "shift_f": 593, "shift_x": 593, "value1": [594, 608], "value2": [594, 608], "embed": 594, "opt0": 594, "opt_vector": 594, "uppercas": 594, "permit": 594, "sh": 594, "ip": 594, "ih": 594, "xb": [594, 608], "bx": [594, 608], "zg": 594, "implicit": [594, 750], "pqsum": 594, "isum": 594, "ysum": 594, "vcorr": 594, "expens": [594, 608, 660, 664], "enforce_p_lim": [594, 657], "enforce_v_lim": [594, 657], "enforce_flow_lim": [594, 657], "p_lims_tol": 594, "q_lims_tol": 594, "v_lims_tol": 594, "flow_lims_tol": 594, "pdipm": [594, 608, 617, 726], "sdpopf": 594, "semidefinit": 594, "tralm": [594, 608, 728], "op": 594, "analyt": 594, "5e": [594, 608], "setpt": 594, "averag": 594, "flow_lim": [594, 621], "ignore_angle_lim": 594, "diff": 594, "softlim": [594, 725, 745], "soft": [594, 725, 745], "strategi": 594, "decid": [594, 608], "return_raw_d": [594, 608], "littl": [594, 608], "sys_sum": 594, "area_sum": 594, "out_line_lim": [594, 608], "out_pg_lim": [594, 608], "out_qg_lim": [594, 608], "pwr": 594, "suppress_detail": 594, "complementari": [594, 608], "cntrl": 594, "concurr": [594, 608], "auto": [594, 608], "knitro_user_options_n": [594, 608], "rowtol": 594, "majdamp": 594, "mindamp": 594, "minor": [594, 608], "penalti": [594, 608], "major_it": 594, "minor_it": 594, "fort": [594, 608], "1200": [594, 608], "supbasic_lim": 594, "superbas": [594, 608], "mult_pric": 594, "gap": [594, 608], "smooth_ratio": 594, "primaltol": 594, "dualtol": 594, "use_legacy_cor": [594, 783], "bypass": [594, 783], "pw": 594, "qw": 594, "pf_tol": 608, "opf_alg": 608, "565": 608, "pf_max_it": 608, "pf_max_it_fd": 608, "pf_max_it_g": 608, "pf_dc": 608, "540": 608, "560": 608, "545": 608, "550": 608, "opf_viol": 608, "constr_tol_x": 608, "constr_tol_f": 608, "constr_max_it": 608, "opf_flow_lim": 608, "opf_ignore_ang_lim": 608, "opf_alg_dc": 608, "out_al": 608, "33": [608, 665], "out_sys_sum": 608, "out_area_sum": 608, "out_bu": 608, "out_branch": 608, "out_gen": 608, "out_all_lim": 608, "out_v_lim": 608, "44": 608, "out_forc": 608, "55": 608, "fmc_alg": 608, "mns_feastol": 608, "mns_rowtol": 608, "63": 608, "mns_xtol": 608, "mns_majdamp": 608, "mns_mindamp": 608, "mns_penalty_parm": 608, "67": 608, "mns_major_it": 608, "mns_minor_it": 608, "mns_max_it": 608, "mns_verbos": 608, "71": 608, "mns_core": 608, "mns_supbasic_lim": 608, "mns_mult_pric": 608, "pdipm_feastol": 608, "82": 608, "pdipm_gradtol": 608, "83": 608, "pdipm_comptol": 608, "pdipm_costtol": 608, "pdipm_max_it": 608, "scpdipm_red_it": 608, "tralm_feastol": 608, "tralm_primetol": 608, "tralm_dualtol": 608, "tralm_costtol": 608, "91": 608, "tralm_major_it": 608, "tralm_minor_it": 608, "smoothing_ratio": 608, "cplex_lpmethod": 608, "96": 608, "cplex_qpmethod": 608, "111": 608, "mosek_max_it": 608, "113": 608, "mosek_gap_tol": 608, "mosek_max_tim": 608, "mosek_num_thread": 608, "116": 608, "grb_method": 608, "122": 608, "grb_timelimit": 608, "grb_thread": 608, "raphson": [610, 611, 612, 613, 614, 615], "latter": [617, 748], "encod": [617, 618], "fun": 617, "mistmatch": 617, "pqh": 617, "pql": 617, "ycon": 617, "au": 618, "lbu": 618, "ubu": 618, "vadif": 619, "dvadif": 619, "d2vadif": 620, "ig": 626, "veq": 633, "dveq": 633, "d2veq": 634, "dvlim": 635, "d2vlim": 636, "vref": 637, "dvref": 637, "d2vref": 638, "bus0": 640, "gen0": 640, "branch0": 640, "npt": 641, "pwlcost": 641, "too": [642, 657], "effeci": 642, "polyv": 642, "polyd": 642, "pcost": 643, "qcost": 643, "ON": 643, "stdout": 644, "fclose": 644, "rawfile_nam": [645, 652], "identif": 645, "hvdc": [645, 647], "accumul": [646, 648, 649, 651], "twodc": [647, 649], "trans2": [648, 649], "trans3": [648, 649], "OF": [649, 651, 652], "swshunt": 649, "templat": [650, 651], "float": [650, 651], "sscanf": [650, 651], "quot": [650, 651], "strip": [650, 651], "rv": 656, "basecasedata": 657, "targetcasedata": 657, "solvedcas": [657, 658, 659, 660, 661, 662, 663, 664], "nstep": 657, "nevent": 657, "fal": 657, "induc": 657, "bifurc": 657, "target_lam_v": 657, "did": 657, "event_nam": 657, "casedata": [658, 659, 660, 661, 662, 663, 664], "decommit": [660, 664, 748], "heurist": [660, 664], "shut": [660, 664, 748], "nrz": [662, 744], "ngr": [662, 744], "rmin": [662, 744], "rmax": [662, 744], "rawver": 665, "overwritten": [665, 666], "casestruct": 666, "pssecon2chgtab": 667, "extent": 667, "dmd": 668, "load_zon": [668, 746], "ONES": 668, "benefit": 668, "untouch": 669, "pad": 669, "iflim": [675, 729], "off2cas": 705, "scpdipm": 727, "runmkt": 736, "smartmkt": 736, "on_off": [742, 743, 744, 745], "t_f": [742, 743, 744, 745], "caution": 742, "results1": 742, "results2": 742, "nif": 743, "busnum": 745, "base_cost": 745, "hl_mod": 745, "hl": 745, "hl_val": 745, "overload": 745, "ovl_cost": 745, "reativ": 746, "realiz": 746, "totalcost": 747, "sequenc": 748, "candid": 748, "gain": 748, "mu_pqh": 749, "mu_pql": 749, "seriou": 750, "out_ac": 771, "multip": 772, "wrt": [773, 774, 775, 776], "uniform": 782, "3237850": 782, "tech": 782, "4110676": 782, "decrib": 783, "Or": 783, "mainli": 783}, "objects": {"": [[488, 0, 1, "", "add_userfcn"], [489, 0, 1, "", "apply_changes"], [42, 0, 1, "", "apply_profile"], [116, 0, 1, "", "artelys_knitro_options"], [491, 0, 1, "", "calc_branch_angle"], [492, 0, 1, "", "calc_v_i_sum"], [493, 0, 1, "", "calc_v_pq_sum"], [494, 0, 1, "", "calc_v_y_sum"], [495, 0, 1, "", "case_info"], [498, 0, 1, "", "compare_case"], [499, 0, 1, "", "connected_components"], [117, 0, 1, "", "convert_constraint_multipliers"], [118, 0, 1, "", "convert_lin_constraint"], [119, 0, 1, "", "convert_lin_constraint_multipliers"], [120, 0, 1, "", "convert_quad_constraint"], [500, 0, 1, "", "cpf_corrector"], [501, 0, 1, "", "cpf_current_mpc"], [502, 0, 1, "", "cpf_default_callback"], [503, 0, 1, "", "cpf_detect_events"], [504, 0, 1, "", "cpf_flim_event"], [505, 0, 1, "", "cpf_flim_event_cb"], [506, 0, 1, "", "cpf_nose_event"], [507, 0, 1, "", "cpf_nose_event_cb"], [508, 0, 1, "", "cpf_p"], [509, 0, 1, "", "cpf_p_jac"], [510, 0, 1, "", "cpf_plim_event"], [511, 0, 1, "", "cpf_plim_event_cb"], [512, 0, 1, "", "cpf_predictor"], [513, 0, 1, "", "cpf_qlim_event"], [514, 0, 1, "", "cpf_qlim_event_cb"], [515, 0, 1, "", "cpf_register_callback"], [516, 0, 1, "", "cpf_register_event"], [517, 0, 1, "", "cpf_tangent"], [518, 0, 1, "", "cpf_target_lam_event"], [519, 0, 1, "", "cpf_target_lam_event_cb"], [520, 0, 1, "", "cpf_vlim_event"], [521, 0, 1, "", "cpf_vlim_event_cb"], [121, 0, 1, "", "cplex_options"], [522, 0, 1, "", "d2Abr_dV2"], [523, 0, 1, "", "d2Ibr_dV2"], [524, 0, 1, "", "d2Imis_dV2"], [525, 0, 1, "", "d2Imis_dVdSg"], [526, 0, 1, "", "d2Sbr_dV2"], [527, 0, 1, "", "d2Sbus_dV2"], [528, 0, 1, "", "dAbr_dV"], [529, 0, 1, "", "dIbr_dV"], [530, 0, 1, "", "dImis_dV"], [531, 0, 1, "", "dSbr_dV"], [532, 0, 1, "", "dSbus_dV"], [534, 0, 1, "", "dcopf_solver"], [536, 1, 1, "", "define_constants"], [537, 0, 1, "", "e2i_data"], [538, 0, 1, "", "e2i_field"], [44, 0, 1, "", "ex_case3a"], [45, 0, 1, "", "ex_case3b"], [46, 0, 1, "", "ex_contab"], [47, 0, 1, "", "ex_load_profile"], [48, 0, 1, "", "ex_storage"], [49, 0, 1, "", "ex_transmat"], [50, 0, 1, "", "ex_wind"], [51, 0, 1, "", "ex_wind_profile"], [52, 0, 1, "", "ex_wind_profile_d"], [53, 0, 1, "", "ex_wind_uc"], [54, 0, 1, "", "ex_xgd"], [55, 0, 1, "", "ex_xgd_ramp"], [56, 0, 1, "", "ex_xgd_res"], [57, 0, 1, "", "ex_xgd_uc"], [540, 0, 1, "", "extract_islands"], [542, 0, 1, "", "feval_w_path"], [58, 0, 1, "", "filter_ramp_transitions"], [543, 0, 1, "", "find_bridges"], [544, 0, 1, "", "find_islands"], [14, 0, 1, "", "generate_autodoc_stubs"], [15, 0, 1, "", "generate_matpower_autodoc"], [16, 0, 1, "", "generate_source_symlinks"], [549, 0, 1, "", "get_losses"], [550, 0, 1, "", "get_reorder"], [122, 0, 1, "", "glpk_options"], [123, 0, 1, "", "gurobi_options"], [551, 0, 1, "", "hasPQcap"], [241, 0, 1, "", "have_feature"], [125, 0, 1, "", "have_feature_bpmpd"], [126, 0, 1, "", "have_feature_catchme"], [127, 0, 1, "", "have_feature_clp"], [128, 0, 1, "", "have_feature_cplex"], [552, 0, 1, "", "have_feature_e4st"], [129, 0, 1, "", "have_feature_evalc"], [130, 0, 1, "", "have_feature_fmincon"], [131, 0, 1, "", "have_feature_fmincon_ipm"], [132, 0, 1, "", "have_feature_fsolve"], [133, 0, 1, "", "have_feature_glpk"], [134, 0, 1, "", "have_feature_gurobi"], [135, 0, 1, "", "have_feature_intlinprog"], [136, 0, 1, "", "have_feature_ipopt"], [137, 0, 1, "", "have_feature_ipopt_auxdata"], [138, 0, 1, "", "have_feature_isequaln"], [139, 0, 1, "", "have_feature_knitro"], [140, 0, 1, "", "have_feature_knitromatlab"], [141, 0, 1, "", "have_feature_ktrlink"], [142, 0, 1, "", "have_feature_linprog"], [143, 0, 1, "", "have_feature_linprog_ds"], [22, 0, 1, "", "have_feature_lu_vec"], [242, 0, 1, "", "have_feature_matlab"], [553, 0, 1, "", "have_feature_minopf"], [144, 0, 1, "", "have_feature_mosek"], [554, 0, 1, "", "have_feature_most"], [555, 0, 1, "", "have_feature_mp_core"], [243, 0, 1, "", "have_feature_octave"], [145, 0, 1, "", "have_feature_opti_clp"], [146, 0, 1, "", "have_feature_optim"], [147, 0, 1, "", "have_feature_optimoptions"], [148, 0, 1, "", "have_feature_osqp"], [23, 0, 1, "", "have_feature_pardiso"], [24, 0, 1, "", "have_feature_pardiso_legacy"], [25, 0, 1, "", "have_feature_pardiso_object"], [556, 0, 1, "", "have_feature_pdipmopf"], [149, 0, 1, "", "have_feature_quadprog"], [150, 0, 1, "", "have_feature_quadprog_ls"], [557, 0, 1, "", "have_feature_regexp_split"], [558, 0, 1, "", "have_feature_scpdipmopf"], [559, 0, 1, "", "have_feature_sdp_pf"], [151, 0, 1, "", "have_feature_sdpt3"], [152, 0, 1, "", "have_feature_sedumi"], [560, 0, 1, "", "have_feature_smartmarket"], [561, 0, 1, "", "have_feature_syngrid"], [562, 0, 1, "", "have_feature_table"], [563, 0, 1, "", "have_feature_tralmopf"], [153, 0, 1, "", "have_feature_yalmip"], [564, 0, 1, "", "i2e_data"], [565, 0, 1, "", "i2e_field"], [566, 0, 1, "", "idx_brch"], [567, 0, 1, "", "idx_bus"], [568, 0, 1, "", "idx_cost"], [569, 0, 1, "", "idx_ct"], [570, 0, 1, "", "idx_dcline"], [571, 0, 1, "", "idx_gen"], [60, 0, 1, "", "idx_profile"], [478, 0, 1, "", "install_matpower"], [154, 0, 1, "", "ipopt_options"], [577, 0, 1, "", "makeAang"], [578, 0, 1, "", "makeApq"], [579, 0, 1, "", "makeAvl"], [580, 0, 1, "", "makeAy"], [581, 0, 1, "", "makeB"], [582, 0, 1, "", "makeBdc"], [583, 0, 1, "", "makeJac"], [584, 0, 1, "", "makeLODF"], [585, 0, 1, "", "makePTDF"], [586, 0, 1, "", "makeSbus"], [587, 0, 1, "", "makeSdzip"], [588, 0, 1, "", "makeYbus"], [589, 0, 1, "", "make_vcorr"], [590, 0, 1, "", "make_zpv"], [65, 0, 1, "", "md_init"], [27, 0, 1, "", "mips_example1"], [28, 0, 1, "", "mips_example2"], [156, 0, 1, "", "miqps_cplex"], [157, 0, 1, "", "miqps_glpk"], [158, 0, 1, "", "miqps_gurobi"], [159, 0, 1, "", "miqps_master"], [592, 0, 1, "", "miqps_matpower"], [160, 0, 1, "", "miqps_mosek"], [161, 0, 1, "", "miqps_ot"], [162, 0, 1, "", "mosek_options"], [163, 0, 1, "", "mosek_symbcon"], [67, 0, 1, "", "most_ex1_ed"], [68, 0, 1, "", "most_ex2_dcopf"], [69, 0, 1, "", "most_ex3_dcopf_w_uc"], [70, 0, 1, "", "most_ex4_dcopf_ss"], [71, 0, 1, "", "most_ex5_mpopf"], [72, 0, 1, "", "most_ex6_uc"], [73, 0, 1, "", "most_ex7_suc"], [74, 0, 1, "", "most_summary"], [754, 2, 1, "", "mp_foo_table"], [114, 2, 1, "", "mp_idx_manager"], [475, 2, 1, "", "mp_table"], [480, 0, 1, "", "mp_table_class"], [476, 2, 1, "", "mp_table_subclass"], [595, 0, 1, "", "mpoption_info_clp"], [596, 0, 1, "", "mpoption_info_cplex"], [597, 0, 1, "", "mpoption_info_fmincon"], [598, 0, 1, "", "mpoption_info_glpk"], [599, 0, 1, "", "mpoption_info_gurobi"], [600, 0, 1, "", "mpoption_info_intlinprog"], [601, 0, 1, "", "mpoption_info_ipopt"], [602, 0, 1, "", "mpoption_info_knitro"], [603, 0, 1, "", "mpoption_info_linprog"], [604, 0, 1, "", "mpoption_info_mips"], [605, 0, 1, "", "mpoption_info_mosek"], [76, 0, 1, "", "mpoption_info_most"], [606, 0, 1, "", "mpoption_info_osqp"], [607, 0, 1, "", "mpoption_info_quadprog"], [608, 0, 1, "", "mpoption_old"], [170, 0, 1, "", "nested_struct_copy"], [611, 0, 1, "", "newtonpf_I_cart"], [612, 0, 1, "", "newtonpf_I_hybrid"], [613, 0, 1, "", "newtonpf_I_polar"], [614, 0, 1, "", "newtonpf_S_cart"], [615, 0, 1, "", "newtonpf_S_hybrid"], [171, 0, 1, "", "nleqs_core"], [172, 0, 1, "", "nleqs_fd_newton"], [173, 0, 1, "", "nleqs_fsolve"], [174, 0, 1, "", "nleqs_gauss_seidel"], [175, 0, 1, "", "nleqs_master"], [176, 0, 1, "", "nleqs_master_ex1"], [177, 0, 1, "", "nleqs_master_ex2"], [178, 0, 1, "", "nleqs_newton"], [179, 0, 1, "", "nlp_consfcn"], [180, 0, 1, "", "nlp_costfcn"], [181, 0, 1, "", "nlp_hessfcn"], [616, 0, 1, "", "nlpopf_solver"], [182, 0, 1, "", "nlps_fmincon"], [183, 0, 1, "", "nlps_ipopt"], [184, 0, 1, "", "nlps_knitro"], [185, 0, 1, "", "nlps_master"], [186, 0, 1, "", "nlps_master_ex1"], [187, 0, 1, "", "nlps_master_ex2"], [618, 0, 1, "", "opf_args"], [619, 0, 1, "", "opf_branch_ang_fcn"], [620, 0, 1, "", "opf_branch_ang_hess"], [621, 0, 1, "", "opf_branch_flow_fcn"], [622, 0, 1, "", "opf_branch_flow_hess"], [623, 0, 1, "", "opf_current_balance_fcn"], [624, 0, 1, "", "opf_current_balance_hess"], [625, 0, 1, "", "opf_execute"], [626, 0, 1, "", "opf_gen_cost_fcn"], [627, 0, 1, "", "opf_legacy_user_cost_fcn"], [487, 2, 1, "", "opf_model"], [628, 0, 1, "", "opf_nle_fcn1"], [629, 0, 1, "", "opf_nle_hess1"], [630, 0, 1, "", "opf_power_balance_fcn"], [631, 0, 1, "", "opf_power_balance_hess"], [632, 0, 1, "", "opf_setup"], [633, 0, 1, "", "opf_veq_fcn"], [634, 0, 1, "", "opf_veq_hess"], [635, 0, 1, "", "opf_vlim_fcn"], [636, 0, 1, "", "opf_vlim_hess"], [637, 0, 1, "", "opf_vref_fcn"], [638, 0, 1, "", "opf_vref_hess"], [115, 2, 1, "", "opt_model"], [639, 0, 1, "", "order_radial"], [188, 0, 1, "", "osqp_options"], [77, 0, 1, "", "plot_gen"], [78, 0, 1, "", "plot_storage"], [79, 0, 1, "", "plot_uc"], [80, 0, 1, "", "plot_uc_data"], [190, 0, 1, "", "pne_callback_default"], [191, 0, 1, "", "pne_callback_nose"], [192, 0, 1, "", "pne_callback_target_lam"], [193, 0, 1, "", "pne_detect_events"], [194, 0, 1, "", "pne_detected_event"], [195, 0, 1, "", "pne_event_nose"], [196, 0, 1, "", "pne_event_target_lam"], [197, 0, 1, "", "pne_ex1"], [198, 0, 1, "", "pne_pfcn_arc_len"], [199, 0, 1, "", "pne_pfcn_natural"], [200, 0, 1, "", "pne_pfcn_pseudo_arc_len"], [201, 0, 1, "", "pne_register_callbacks"], [202, 0, 1, "", "pne_register_events"], [203, 0, 1, "", "pnes_master"], [646, 0, 1, "", "psse_convert"], [647, 0, 1, "", "psse_convert_hvdc"], [648, 0, 1, "", "psse_convert_xfmr"], [649, 0, 1, "", "psse_parse"], [650, 0, 1, "", "psse_parse_line"], [651, 0, 1, "", "psse_parse_section"], [652, 0, 1, "", "psse_read"], [204, 0, 1, "", "qcqp_ex1"], [205, 0, 1, "", "qcqp_nlp_consfcn"], [206, 0, 1, "", "qcqp_nlp_costfcn"], [207, 0, 1, "", "qcqp_nlp_hessfcn"], [208, 0, 1, "", "qcqps_gurobi"], [209, 0, 1, "", "qcqps_knitro"], [210, 0, 1, "", "qcqps_master"], [211, 0, 1, "", "qp_ex1"], [212, 0, 1, "", "qps_bpmpd"], [213, 0, 1, "", "qps_clp"], [214, 0, 1, "", "qps_cplex"], [215, 0, 1, "", "qps_glpk"], [216, 0, 1, "", "qps_gurobi"], [217, 0, 1, "", "qps_ipopt"], [218, 0, 1, "", "qps_knitro"], [219, 0, 1, "", "qps_master"], [653, 0, 1, "", "qps_matpower"], [31, 0, 1, "", "qps_mips"], [220, 0, 1, "", "qps_mosek"], [221, 0, 1, "", "qps_osqp"], [222, 0, 1, "", "qps_ot"], [654, 0, 1, "", "radial_pf"], [655, 0, 1, "", "remove_userfcn"], [481, 0, 1, "", "run_cpf"], [482, 0, 1, "", "run_mp"], [483, 0, 1, "", "run_opf"], [484, 0, 1, "", "run_pf"], [656, 0, 1, "", "run_userfcn"], [662, 0, 1, "", "runopf_w_res"], [668, 0, 1, "", "scale_load"], [669, 0, 1, "", "set_reorder"], [670, 0, 1, "", "t_apply_changes"], [671, 0, 1, "", "t_auction_case"], [672, 0, 1, "", "t_auction_minopf"], [673, 0, 1, "", "t_auction_mips"], [674, 0, 1, "", "t_auction_tspopf_pdipm"], [245, 0, 1, "", "t_begin"], [81, 0, 1, "", "t_case30_most"], [675, 0, 1, "", "t_case30_userfcns"], [82, 0, 1, "", "t_case3_most"], [755, 0, 1, "", "t_case3p_a"], [756, 0, 1, "", "t_case3p_b"], [757, 0, 1, "", "t_case3p_c"], [758, 0, 1, "", "t_case3p_d"], [759, 0, 1, "", "t_case3p_e"], [760, 0, 1, "", "t_case3p_f"], [761, 0, 1, "", "t_case3p_g"], [762, 0, 1, "", "t_case3p_h"], [676, 0, 1, "", "t_case9_dcline"], [763, 0, 1, "", "t_case9_gizmo"], [677, 0, 1, "", "t_case9_opf"], [678, 0, 1, "", "t_case9_opfv2"], [679, 0, 1, "", "t_case9_pf"], [680, 0, 1, "", "t_case9_pfv2"], [681, 0, 1, "", "t_case9_save2psse"], [682, 0, 1, "", "t_case_ext"], [683, 0, 1, "", "t_case_int"], [83, 0, 1, "", "t_case_tlmp"], [84, 0, 1, "", "t_case_tlmp_storage"], [684, 0, 1, "", "t_chgtab"], [685, 0, 1, "", "t_cpf"], [686, 0, 1, "", "t_cpf_cb1"], [687, 0, 1, "", "t_cpf_cb2"], [688, 0, 1, "", "t_dcline"], [764, 0, 1, "", "t_dmc_element"], [246, 0, 1, "", "t_end"], [689, 0, 1, "", "t_ext2int2ext"], [690, 0, 1, "", "t_feval_w_path"], [247, 0, 1, "", "t_file_match"], [691, 0, 1, "", "t_get_losses"], [692, 0, 1, "", "t_hasPQcap"], [248, 0, 1, "", "t_have_feature"], [693, 0, 1, "", "t_hessian"], [249, 0, 1, "", "t_is"], [694, 0, 1, "", "t_islands"], [695, 0, 1, "", "t_jacobian"], [696, 0, 1, "", "t_load2disp"], [697, 0, 1, "", "t_loadcase"], [698, 0, 1, "", "t_makeLODF"], [699, 0, 1, "", "t_makePTDF"], [700, 0, 1, "", "t_margcost"], [32, 0, 1, "", "t_mips"], [33, 0, 1, "", "t_mips_pardiso"], [223, 0, 1, "", "t_miqps_master"], [701, 0, 1, "", "t_miqps_matpower"], [702, 0, 1, "", "t_modcost"], [85, 0, 1, "", "t_most_30b_1_1_0"], [86, 0, 1, "", "t_most_30b_1_1_0_uc"], [87, 0, 1, "", "t_most_30b_1_1_17"], [88, 0, 1, "", "t_most_30b_3_1_0"], [89, 0, 1, "", "t_most_30b_3_1_17"], [90, 0, 1, "", "t_most_3b_1_1_0"], [91, 0, 1, "", "t_most_3b_1_1_2"], [92, 0, 1, "", "t_most_3b_3_1_0"], [93, 0, 1, "", "t_most_3b_3_1_2"], [94, 0, 1, "", "t_most_fixed_res"], [95, 0, 1, "", "t_most_mpopf"], [96, 0, 1, "", "t_most_sp"], [97, 0, 1, "", "t_most_spuc"], [98, 0, 1, "", "t_most_suc"], [99, 0, 1, "", "t_most_tlmp"], [100, 0, 1, "", "t_most_uc"], [101, 0, 1, "", "t_most_w_ds"], [765, 0, 1, "", "t_mp_data_model"], [766, 0, 1, "", "t_mp_dm_converter_mpc2"], [767, 0, 1, "", "t_mp_mapped_array"], [768, 0, 1, "", "t_mp_table"], [34, 0, 1, "", "t_mplinsolve"], [703, 0, 1, "", "t_mpoption"], [704, 0, 1, "", "t_mpoption_ov"], [769, 0, 1, "", "t_mpxt_legacy_dcline"], [770, 0, 1, "", "t_mpxt_reserves"], [224, 0, 1, "", "t_nested_struct_copy"], [225, 0, 1, "", "t_nleqs_master"], [226, 0, 1, "", "t_nlps_master"], [771, 0, 1, "", "t_nm_element"], [772, 0, 1, "", "t_node_test"], [705, 0, 1, "", "t_off2case"], [250, 0, 1, "", "t_ok"], [227, 0, 1, "", "t_om_solve_leqs"], [228, 0, 1, "", "t_om_solve_miqps"], [229, 0, 1, "", "t_om_solve_nleqs"], [230, 0, 1, "", "t_om_solve_nlps"], [231, 0, 1, "", "t_om_solve_pne"], [232, 0, 1, "", "t_om_solve_qcqps"], [233, 0, 1, "", "t_om_solve_qps"], [706, 0, 1, "", "t_opf_dc_bpmpd"], [707, 0, 1, "", "t_opf_dc_clp"], [708, 0, 1, "", "t_opf_dc_cplex"], [709, 0, 1, "", "t_opf_dc_default"], [710, 0, 1, "", "t_opf_dc_glpk"], [711, 0, 1, "", "t_opf_dc_gurobi"], [712, 0, 1, "", "t_opf_dc_ipopt"], [713, 0, 1, "", "t_opf_dc_mips"], [714, 0, 1, "", "t_opf_dc_mips_sc"], [715, 0, 1, "", "t_opf_dc_mosek"], [716, 0, 1, "", "t_opf_dc_osqp"], [717, 0, 1, "", "t_opf_dc_ot"], [718, 0, 1, "", "t_opf_default"], [719, 0, 1, "", "t_opf_fmincon"], [720, 0, 1, "", "t_opf_ipopt"], [721, 0, 1, "", "t_opf_knitro"], [722, 0, 1, "", "t_opf_minopf"], [723, 0, 1, "", "t_opf_mips"], [724, 0, 1, "", "t_opf_model"], [725, 0, 1, "", "t_opf_softlims"], [726, 0, 1, "", "t_opf_tspopf_pdipm"], [727, 0, 1, "", "t_opf_tspopf_scpdipm"], [728, 0, 1, "", "t_opf_tspopf_tralm"], [729, 0, 1, "", "t_opf_userfcns"], [234, 0, 1, "", "t_opt_model"], [730, 0, 1, "", "t_pf_ac"], [731, 0, 1, "", "t_pf_dc"], [732, 0, 1, "", "t_pf_radial"], [235, 0, 1, "", "t_pnes_master"], [773, 0, 1, "", "t_port_inj_current_acc"], [774, 0, 1, "", "t_port_inj_current_acp"], [775, 0, 1, "", "t_port_inj_power_acc"], [776, 0, 1, "", "t_port_inj_power_acp"], [777, 0, 1, "", "t_pretty_print"], [733, 0, 1, "", "t_printpf"], [734, 0, 1, "", "t_psse"], [236, 0, 1, "", "t_qcqps_master"], [237, 0, 1, "", "t_qps_master"], [735, 0, 1, "", "t_qps_matpower"], [35, 0, 1, "", "t_qps_mips"], [778, 0, 1, "", "t_run_mp"], [779, 0, 1, "", "t_run_mp_3p"], [780, 0, 1, "", "t_run_opf_default"], [251, 0, 1, "", "t_run_tests"], [736, 0, 1, "", "t_runmarket"], [737, 0, 1, "", "t_runopf_w_res"], [738, 0, 1, "", "t_scale_load"], [252, 0, 1, "", "t_skip"], [253, 0, 1, "", "t_str_match"], [254, 0, 1, "", "t_test_fcns"], [739, 0, 1, "", "t_total_load"], [740, 0, 1, "", "t_totcost"], [741, 0, 1, "", "t_vdep_load"], [781, 0, 1, "", "test_matpower"], [36, 0, 1, "", "test_mips"], [102, 0, 1, "", "test_most"], [238, 0, 1, "", "test_mp_opt_model"], [255, 0, 1, "", "test_mptest"], [742, 0, 1, "", "toggle_dcline"], [743, 0, 1, "", "toggle_iflims"], [744, 0, 1, "", "toggle_reserves"], [745, 0, 1, "", "toggle_softlims"], [746, 0, 1, "", "total_load"], [749, 0, 1, "", "update_mupq"]], "mips": [[26, 0, 1, "", "mips"]], "most": [[66, 0, 1, "", "most"]], "mp": [[259, 2, 1, "", "NODE_TYPE"], [260, 2, 1, "", "cost_table"], [261, 2, 1, "", "cost_table_utils"], [262, 2, 1, "", "data_model"], [263, 2, 1, "", "data_model_cpf"], [264, 2, 1, "", "data_model_opf"], [265, 2, 1, "", "dm_converter"], [266, 2, 1, "", "dm_converter_mpc2"], [267, 2, 1, "", "dm_converter_mpc2_legacy"], [268, 2, 1, "", "dm_element"], [269, 2, 1, "", "dmc_element"], [270, 2, 1, "", "dmce_branch_mpc2"], [271, 2, 1, "", "dmce_bus3p_mpc2"], [272, 2, 1, "", "dmce_bus_mpc2"], [273, 2, 1, "", "dmce_buslink_mpc2"], [274, 2, 1, "", "dmce_gen3p_mpc2"], [275, 2, 1, "", "dmce_gen_mpc2"], [276, 2, 1, "", "dmce_legacy_dcline_mpc2"], [277, 2, 1, "", "dmce_line3p_mpc2"], [278, 2, 1, "", "dmce_load3p_mpc2"], [279, 2, 1, "", "dmce_load_mpc2"], [280, 2, 1, "", "dmce_reserve_gen_mpc2"], [281, 2, 1, "", "dmce_reserve_zone_mpc2"], [282, 2, 1, "", "dmce_shunt_mpc2"], [283, 2, 1, "", "dmce_xfmr3p_mpc2"], [284, 2, 1, "", "dme_branch"], [285, 2, 1, "", "dme_branch_opf"], [286, 2, 1, "", "dme_bus"], [287, 2, 1, "", "dme_bus3p"], [288, 2, 1, "", "dme_bus3p_opf"], [289, 2, 1, "", "dme_bus_opf"], [290, 2, 1, "", "dme_buslink"], [291, 2, 1, "", "dme_buslink_opf"], [292, 2, 1, "", "dme_gen"], [293, 2, 1, "", "dme_gen3p"], [294, 2, 1, "", "dme_gen3p_opf"], [295, 2, 1, "", "dme_gen_opf"], [296, 2, 1, "", "dme_legacy_dcline"], [297, 2, 1, "", "dme_legacy_dcline_opf"], [298, 2, 1, "", "dme_line3p"], [299, 2, 1, "", "dme_line3p_opf"], [300, 2, 1, "", "dme_load"], [301, 2, 1, "", "dme_load3p"], [302, 2, 1, "", "dme_load3p_opf"], [303, 2, 1, "", "dme_load_cpf"], [304, 2, 1, "", "dme_load_opf"], [305, 2, 1, "", "dme_reserve_gen"], [306, 2, 1, "", "dme_reserve_zone"], [307, 2, 1, "", "dme_shared_opf"], [308, 2, 1, "", "dme_shunt"], [309, 2, 1, "", "dme_shunt_cpf"], [310, 2, 1, "", "dme_shunt_opf"], [311, 2, 1, "", "dme_xfmr3p"], [312, 2, 1, "", "dme_xfmr3p_opf"], [313, 2, 1, "", "element_container"], [314, 2, 1, "", "extension"], [315, 2, 1, "", "form"], [316, 2, 1, "", "form_ac"], [317, 2, 1, "", "form_acc"], [318, 2, 1, "", "form_acp"], [319, 2, 1, "", "form_dc"], [479, 0, 1, "", "load_dm"], [320, 2, 1, "", "mapped_array"], [321, 2, 1, "", "math_model"], [322, 2, 1, "", "math_model_cpf_acc"], [323, 2, 1, "", "math_model_cpf_acci"], [324, 2, 1, "", "math_model_cpf_accs"], [325, 2, 1, "", "math_model_cpf_acp"], [326, 2, 1, "", "math_model_cpf_acpi"], [327, 2, 1, "", "math_model_cpf_acps"], [328, 2, 1, "", "math_model_opf"], [329, 2, 1, "", "math_model_opf_ac"], [330, 2, 1, "", "math_model_opf_acc"], [331, 2, 1, "", "math_model_opf_acci"], [332, 2, 1, "", "math_model_opf_acci_legacy"], [333, 2, 1, "", "math_model_opf_accs"], [334, 2, 1, "", "math_model_opf_accs_legacy"], [335, 2, 1, "", "math_model_opf_acp"], [336, 2, 1, "", "math_model_opf_acpi"], [337, 2, 1, "", "math_model_opf_acpi_legacy"], [338, 2, 1, "", "math_model_opf_acps"], [339, 2, 1, "", "math_model_opf_acps_legacy"], [340, 2, 1, "", "math_model_opf_dc"], [341, 2, 1, "", "math_model_opf_dc_legacy"], [342, 2, 1, "", "math_model_pf"], [343, 2, 1, "", "math_model_pf_ac"], [344, 2, 1, "", "math_model_pf_acci"], [345, 2, 1, "", "math_model_pf_accs"], [346, 2, 1, "", "math_model_pf_acpi"], [347, 2, 1, "", "math_model_pf_acps"], [348, 2, 1, "", "math_model_pf_dc"], [349, 2, 1, "", "mm_element"], [350, 2, 1, "", "mm_shared_opf_legacy"], [351, 2, 1, "", "mm_shared_pfcpf"], [352, 2, 1, "", "mm_shared_pfcpf_ac"], [353, 2, 1, "", "mm_shared_pfcpf_ac_i"], [354, 2, 1, "", "mm_shared_pfcpf_acc"], [355, 2, 1, "", "mm_shared_pfcpf_acci"], [356, 2, 1, "", "mm_shared_pfcpf_accs"], [357, 2, 1, "", "mm_shared_pfcpf_acp"], [358, 2, 1, "", "mm_shared_pfcpf_acpi"], [359, 2, 1, "", "mm_shared_pfcpf_acps"], [360, 2, 1, "", "mm_shared_pfcpf_dc"], [361, 2, 1, "", "mme_branch"], [362, 2, 1, "", "mme_branch_opf"], [363, 2, 1, "", "mme_branch_opf_ac"], [364, 2, 1, "", "mme_branch_opf_acc"], [365, 2, 1, "", "mme_branch_opf_acp"], [366, 2, 1, "", "mme_branch_opf_dc"], [367, 2, 1, "", "mme_branch_pf_ac"], [368, 2, 1, "", "mme_branch_pf_dc"], [369, 2, 1, "", "mme_bus"], [370, 2, 1, "", "mme_bus3p"], [371, 2, 1, "", "mme_bus3p_opf_acc"], [372, 2, 1, "", "mme_bus3p_opf_acp"], [373, 2, 1, "", "mme_bus_opf_ac"], [374, 2, 1, "", "mme_bus_opf_acc"], [375, 2, 1, "", "mme_bus_opf_acp"], [376, 2, 1, "", "mme_bus_opf_dc"], [377, 2, 1, "", "mme_bus_pf_ac"], [378, 2, 1, "", "mme_bus_pf_dc"], [379, 2, 1, "", "mme_buslink"], [380, 2, 1, "", "mme_buslink_opf"], [381, 2, 1, "", "mme_buslink_opf_acc"], [382, 2, 1, "", "mme_buslink_opf_acp"], [383, 2, 1, "", "mme_buslink_pf_ac"], [384, 2, 1, "", "mme_buslink_pf_acc"], [385, 2, 1, "", "mme_buslink_pf_acp"], [386, 2, 1, "", "mme_gen"], [387, 2, 1, "", "mme_gen3p"], [388, 2, 1, "", "mme_gen3p_opf"], [389, 2, 1, "", "mme_gen_opf"], [390, 2, 1, "", "mme_gen_opf_ac"], [391, 2, 1, "", "mme_gen_opf_ac_oval"], [392, 2, 1, "", "mme_gen_opf_dc"], [393, 2, 1, "", "mme_gen_pf_ac"], [394, 2, 1, "", "mme_gen_pf_dc"], [395, 2, 1, "", "mme_legacy_dcline"], [396, 2, 1, "", "mme_legacy_dcline_opf"], [397, 2, 1, "", "mme_legacy_dcline_opf_ac"], [398, 2, 1, "", "mme_legacy_dcline_opf_dc"], [399, 2, 1, "", "mme_legacy_dcline_pf_ac"], [400, 2, 1, "", "mme_legacy_dcline_pf_dc"], [401, 2, 1, "", "mme_line3p"], [402, 2, 1, "", "mme_line3p_opf"], [403, 2, 1, "", "mme_load"], [404, 2, 1, "", "mme_load_cpf"], [405, 2, 1, "", "mme_load_pf_ac"], [406, 2, 1, "", "mme_load_pf_dc"], [407, 2, 1, "", "mme_reserve_gen"], [408, 2, 1, "", "mme_reserve_zone"], [409, 2, 1, "", "mme_shunt"], [410, 2, 1, "", "mme_shunt_cpf"], [411, 2, 1, "", "mme_shunt_pf_ac"], [412, 2, 1, "", "mme_shunt_pf_dc"], [413, 2, 1, "", "mme_xfmr3p"], [414, 2, 1, "", "mme_xfmr3p_opf"], [415, 2, 1, "", "net_model"], [416, 2, 1, "", "net_model_ac"], [417, 2, 1, "", "net_model_acc"], [418, 2, 1, "", "net_model_acp"], [419, 2, 1, "", "net_model_dc"], [420, 2, 1, "", "nm_element"], [421, 2, 1, "", "nme_branch"], [422, 2, 1, "", "nme_branch_ac"], [423, 2, 1, "", "nme_branch_acc"], [424, 2, 1, "", "nme_branch_acp"], [425, 2, 1, "", "nme_branch_dc"], [426, 2, 1, "", "nme_bus"], [427, 2, 1, "", "nme_bus3p"], [428, 2, 1, "", "nme_bus3p_acc"], [429, 2, 1, "", "nme_bus3p_acp"], [430, 2, 1, "", "nme_bus_acc"], [431, 2, 1, "", "nme_bus_acp"], [432, 2, 1, "", "nme_bus_dc"], [433, 2, 1, "", "nme_buslink"], [434, 2, 1, "", "nme_buslink_acc"], [435, 2, 1, "", "nme_buslink_acp"], [436, 2, 1, "", "nme_gen"], [437, 2, 1, "", "nme_gen3p"], [438, 2, 1, "", "nme_gen3p_acc"], [439, 2, 1, "", "nme_gen3p_acp"], [440, 2, 1, "", "nme_gen_ac"], [441, 2, 1, "", "nme_gen_acc"], [442, 2, 1, "", "nme_gen_acp"], [443, 2, 1, "", "nme_gen_dc"], [444, 2, 1, "", "nme_legacy_dcline"], [445, 2, 1, "", "nme_legacy_dcline_ac"], [446, 2, 1, "", "nme_legacy_dcline_acc"], [447, 2, 1, "", "nme_legacy_dcline_acp"], [448, 2, 1, "", "nme_legacy_dcline_dc"], [449, 2, 1, "", "nme_line3p"], [450, 2, 1, "", "nme_load"], [451, 2, 1, "", "nme_load3p"], [452, 2, 1, "", "nme_load_ac"], [453, 2, 1, "", "nme_load_acc"], [454, 2, 1, "", "nme_load_acp"], [455, 2, 1, "", "nme_load_dc"], [456, 2, 1, "", "nme_shunt"], [457, 2, 1, "", "nme_shunt_ac"], [458, 2, 1, "", "nme_shunt_acc"], [459, 2, 1, "", "nme_shunt_acp"], [460, 2, 1, "", "nme_shunt_dc"], [461, 2, 1, "", "nme_xfmr3p"], [106, 2, 1, "", "set_manager"], [107, 2, 1, "", "set_manager_opt_model"], [462, 2, 1, "", "sm_legacy_cost"], [108, 2, 1, "", "sm_lin_constraint"], [109, 2, 1, "", "sm_nln_constraint"], [110, 2, 1, "", "sm_nln_cost"], [111, 2, 1, "", "sm_quad_constraint"], [112, 2, 1, "", "sm_quad_cost"], [113, 2, 1, "", "sm_variable"], [463, 2, 1, "", "task"], [464, 2, 1, "", "task_cpf"], [465, 2, 1, "", "task_cpf_legacy"], [466, 2, 1, "", "task_opf"], [467, 2, 1, "", "task_opf_legacy"], [468, 2, 1, "", "task_pf"], [469, 2, 1, "", "task_pf_legacy"], [470, 2, 1, "", "task_shared_legacy"], [471, 2, 1, "", "xt_3p"], [472, 2, 1, "", "xt_legacy_dcline"], [473, 2, 1, "", "xt_oval_cap_curve"], [474, 2, 1, "", "xt_reserves"]], "mp.NODE_TYPE": [[259, 3, 1, "", "NONE"], [259, 3, 1, "", "PQ"], [259, 3, 1, "", "PV"], [259, 3, 1, "", "REF"], [259, 4, 1, "", "is_valid"]], "mp.cost_table": [[260, 5, 1, "", "cost_table"], [260, 4, 1, "", "diff_poly_fcn"], [260, 4, 1, "", "eval_poly_fcn"], [260, 5, 1, "", "max_pwl_cost"], [260, 4, 1, "", "poly_cost_fcn"], [260, 5, 1, "", "poly_params"], [260, 5, 1, "", "pwl_params"]], "mp.cost_table_utils": [[261, 4, 1, "", "max_pwl_cost"], [261, 4, 1, "", "poly_params"], [261, 4, 1, "", "pwl_params"]], "mp.data_model": [[262, 3, 1, "", "base_kva"], [262, 3, 1, "", "base_mva"], [262, 5, 1, "", "build"], [262, 5, 1, "", "build_params"], [262, 5, 1, "", "copy"], [262, 5, 1, "", "count"], [262, 5, 1, "", "data_model"], [262, 5, 1, "", "display"], [262, 5, 1, "", "initialize"], [262, 5, 1, "", "online"], [262, 5, 1, "", "pp_data"], [262, 5, 1, "", "pp_flags"], [262, 5, 1, "", "pp_get_headers"], [262, 5, 1, "", "pp_get_headers_cnt"], [262, 5, 1, "", "pp_get_headers_ext"], [262, 5, 1, "", "pp_get_headers_other"], [262, 5, 1, "", "pp_have_section"], [262, 5, 1, "", "pp_section"], [262, 5, 1, "", "pp_section_label"], [262, 5, 1, "", "pp_section_list"], [262, 5, 1, "", "pretty_print"], [262, 5, 1, "", "rebuild"], [262, 5, 1, "", "set_bus_v_lims_via_vg"], [262, 3, 1, "", "source"], [262, 5, 1, "", "update_status"], [262, 3, 1, "", "userdata"]], "mp.data_model_cpf": [[263, 5, 1, "", "data_model_cpf"]], "mp.data_model_opf": [[264, 5, 1, "", "data_model_opf"], [264, 5, 1, "", "pp_flags"], [264, 5, 1, "", "pp_get_headers_other"], [264, 5, 1, "", "pp_section_list"]], "mp.dm_converter": [[265, 5, 1, "", "build"], [265, 5, 1, "", "copy"], [265, 5, 1, "", "display"], [265, 5, 1, "", "export"], [265, 5, 1, "", "format_tag"], [265, 5, 1, "", "import"], [265, 5, 1, "", "init_export"], [265, 5, 1, "", "save"]], "mp.dm_converter_mpc2": [[266, 5, 1, "", "dm_converter_mpc2"], [266, 5, 1, "", "format_tag"], [266, 5, 1, "", "import"], [266, 5, 1, "", "init_export"], [266, 5, 1, "", "save"]], "mp.dm_converter_mpc2_legacy": [[267, 5, 1, "", "legacy_user_mod_inputs"], [267, 5, 1, "", "legacy_user_nln_constraints"]], "mp.dm_element": [[268, 5, 1, "", "ID"], [268, 3, 1, "", "ID2i"], [268, 5, 1, "", "build_params"], [268, 5, 1, "", "copy"], [268, 5, 1, "", "count"], [268, 5, 1, "", "cxn_idx_prop"], [268, 5, 1, "", "cxn_type"], [268, 5, 1, "", "cxn_type_prop"], [268, 5, 1, "", "display"], [268, 5, 1, "", "dm_converter_element"], [268, 5, 1, "", "export_vars"], [268, 5, 1, "", "export_vars_offline_val"], [268, 3, 1, "", "i2on"], [268, 5, 1, "", "init_status"], [268, 5, 1, "", "initialize"], [268, 5, 1, "", "label"], [268, 5, 1, "", "labels"], [268, 5, 1, "", "main_table_var_names"], [268, 3, 1, "", "n"], [268, 5, 1, "", "name"], [268, 3, 1, "", "nr"], [268, 3, 1, "", "off"], [268, 3, 1, "", "on"], [268, 5, 1, "", "pp_data"], [268, 5, 1, "", "pp_data_cnt"], [268, 5, 1, "", "pp_data_det"], [268, 5, 1, "", "pp_data_ext"], [268, 5, 1, "", "pp_data_row_det"], [268, 5, 1, "", "pp_data_sum"], [268, 5, 1, "", "pp_get_footers"], [268, 5, 1, "", "pp_get_footers_det"], [268, 5, 1, "", "pp_get_headers"], [268, 5, 1, "", "pp_get_headers_det"], [268, 5, 1, "", "pp_get_title_det"], [268, 5, 1, "", "pp_have_section"], [268, 5, 1, "", "pp_have_section_cnt"], [268, 5, 1, "", "pp_have_section_det"], [268, 5, 1, "", "pp_have_section_ext"], [268, 5, 1, "", "pp_have_section_sum"], [268, 5, 1, "", "pp_rows"], [268, 5, 1, "", "pretty_print"], [268, 5, 1, "", "rebuild"], [268, 3, 1, "", "tab"], [268, 5, 1, "", "table_exists"], [268, 5, 1, "", "update_status"]], "mp.dmc_element": [[269, 5, 1, "", "data_exists"], [269, 5, 1, "", "data_field"], [269, 5, 1, "", "data_model_element"], [269, 5, 1, "", "data_subs"], [269, 5, 1, "", "default_export_data_nrows"], [269, 5, 1, "", "default_export_data_table"], [269, 5, 1, "", "export"], [269, 5, 1, "", "export_col"], [269, 5, 1, "", "export_table_values"], [269, 5, 1, "", "get_export_size"], [269, 5, 1, "", "get_export_spec"], [269, 5, 1, "", "get_import_size"], [269, 5, 1, "", "get_import_spec"], [269, 5, 1, "", "get_input_table_values"], [269, 5, 1, "", "import"], [269, 5, 1, "", "import_col"], [269, 5, 1, "", "import_table_values"], [269, 5, 1, "", "init_export_data"], [269, 5, 1, "", "name"], [269, 5, 1, "", "table_var_map"]], "mp.dmce_branch_mpc2": [[270, 5, 1, "", "data_field"], [270, 5, 1, "", "default_export_data_table"], [270, 5, 1, "", "name"], [270, 5, 1, "", "table_var_map"]], "mp.dmce_bus3p_mpc2": [[271, 5, 1, "", "bus_status_import"], [271, 5, 1, "", "data_field"], [271, 5, 1, "", "name"], [271, 5, 1, "", "table_var_map"]], "mp.dmce_bus_mpc2": [[272, 5, 1, "", "bus_name_export"], [272, 5, 1, "", "bus_name_import"], [272, 5, 1, "", "bus_status_import"], [272, 5, 1, "", "data_field"], [272, 5, 1, "", "default_export_data_table"], [272, 5, 1, "", "init_export_data"], [272, 5, 1, "", "name"], [272, 5, 1, "", "table_var_map"]], "mp.dmce_buslink_mpc2": [[273, 5, 1, "", "data_field"], [273, 5, 1, "", "name"], [273, 5, 1, "", "table_var_map"]], "mp.dmce_gen3p_mpc2": [[274, 5, 1, "", "data_field"], [274, 5, 1, "", "name"], [274, 5, 1, "", "table_var_map"]], "mp.dmce_gen_mpc2": [[275, 4, 1, "", "cost_table2gencost"], [275, 5, 1, "", "data_field"], [275, 5, 1, "", "default_export_data_table"], [275, 5, 1, "", "gen_cost_export"], [275, 5, 1, "", "gen_cost_import"], [275, 4, 1, "", "gencost2cost_table"], [275, 5, 1, "", "name"], [275, 3, 1, "", "pwl1"], [275, 5, 1, "", "start_cost_export"], [275, 5, 1, "", "start_cost_import"], [275, 5, 1, "", "table_var_map"]], "mp.dmce_legacy_dcline_mpc2": [[276, 5, 1, "", "data_field"], [276, 5, 1, "", "dcline_cost_export"], [276, 5, 1, "", "dcline_cost_import"], [276, 5, 1, "", "default_export_data_table"], [276, 5, 1, "", "name"], [276, 5, 1, "", "table_var_map"]], "mp.dmce_line3p_mpc2": [[277, 5, 1, "", "create_line_construction_table"], [277, 5, 1, "", "data_field"], [277, 5, 1, "", "import"], [277, 5, 1, "", "name"], [277, 5, 1, "", "table_var_map"]], "mp.dmce_load3p_mpc2": [[278, 3, 1, "", "bus"], [278, 5, 1, "", "data_field"], [278, 5, 1, "", "name"], [278, 5, 1, "", "table_var_map"]], "mp.dmce_load_mpc2": [[279, 3, 1, "", "bus"], [279, 5, 1, "", "data_field"], [279, 5, 1, "", "get_export_size"], [279, 5, 1, "", "get_import_size"], [279, 5, 1, "", "name"], [279, 5, 1, "", "scale_factor_fcn"], [279, 5, 1, "", "sys_wide_zip_loads"], [279, 5, 1, "", "table_var_map"]], "mp.dmce_reserve_gen_mpc2": [[280, 5, 1, "", "data_field"], [280, 5, 1, "", "data_subs"], [280, 5, 1, "", "get_export_size"], [280, 5, 1, "", "get_import_size"], [280, 5, 1, "", "import"], [280, 5, 1, "", "import_cost"], [280, 5, 1, "", "import_qty"], [280, 5, 1, "", "import_ramp"], [280, 5, 1, "", "name"], [280, 5, 1, "", "table_var_map"]], "mp.dmce_reserve_zone_mpc2": [[281, 5, 1, "", "data_field"], [281, 5, 1, "", "data_subs"], [281, 5, 1, "", "import_req"], [281, 5, 1, "", "import_zones"], [281, 5, 1, "", "name"], [281, 5, 1, "", "table_var_map"]], "mp.dmce_shunt_mpc2": [[282, 3, 1, "", "bus"], [282, 5, 1, "", "data_field"], [282, 5, 1, "", "get_export_size"], [282, 5, 1, "", "get_import_size"], [282, 5, 1, "", "name"], [282, 5, 1, "", "table_var_map"]], "mp.dmce_xfmr3p_mpc2": [[283, 5, 1, "", "data_field"], [283, 5, 1, "", "name"], [283, 5, 1, "", "table_var_map"]], "mp.dme_branch": [[284, 3, 1, "", "b_fr"], [284, 3, 1, "", "b_to"], [284, 5, 1, "", "build_params"], [284, 5, 1, "", "cxn_idx_prop"], [284, 5, 1, "", "cxn_type"], [284, 5, 1, "", "export_vars"], [284, 5, 1, "", "export_vars_offline_val"], [284, 3, 1, "", "fbus"], [284, 3, 1, "", "g_fr"], [284, 3, 1, "", "g_to"], [284, 5, 1, "", "initialize"], [284, 5, 1, "", "label"], [284, 5, 1, "", "labels"], [284, 3, 1, "", "loss_tol"], [284, 5, 1, "", "main_table_var_names"], [284, 5, 1, "", "name"], [284, 5, 1, "", "pp_data_cnt"], [284, 5, 1, "", "pp_data_row_det"], [284, 5, 1, "", "pp_data_sum"], [284, 5, 1, "", "pp_get_footers_det"], [284, 5, 1, "", "pp_get_headers_det"], [284, 5, 1, "", "pp_have_section_det"], [284, 5, 1, "", "pp_have_section_sum"], [284, 3, 1, "", "r"], [284, 3, 1, "", "rate_a"], [284, 3, 1, "", "ta"], [284, 3, 1, "", "tbus"], [284, 3, 1, "", "tm"], [284, 5, 1, "", "update_status"], [284, 3, 1, "", "x"]], "mp.dme_branch_opf": [[285, 5, 1, "", "export_vars"], [285, 5, 1, "", "export_vars_offline_val"], [285, 5, 1, "", "main_table_var_names"], [285, 5, 1, "", "pp_binding_rows_lim"], [285, 5, 1, "", "pp_data_row_lim"], [285, 5, 1, "", "pp_get_headers_lim"], [285, 5, 1, "", "pp_get_title_lim"], [285, 5, 1, "", "pp_have_section_lim"], [285, 5, 1, "", "pretty_print"]], "mp.dme_bus": [[286, 5, 1, "", "build_params"], [286, 5, 1, "", "export_vars"], [286, 5, 1, "", "export_vars_offline_val"], [286, 5, 1, "", "init_status"], [286, 5, 1, "", "label"], [286, 5, 1, "", "labels"], [286, 5, 1, "", "main_table_var_names"], [286, 5, 1, "", "name"], [286, 5, 1, "", "pp_data_cnt"], [286, 5, 1, "", "pp_data_ext"], [286, 5, 1, "", "pp_data_row_det"], [286, 5, 1, "", "pp_get_headers_det"], [286, 5, 1, "", "pp_have_section_det"], [286, 5, 1, "", "pp_have_section_ext"], [286, 5, 1, "", "set_bus_type_pq"], [286, 5, 1, "", "set_bus_type_pv"], [286, 5, 1, "", "set_bus_type_ref"], [286, 3, 1, "", "type"], [286, 5, 1, "", "update_status"], [286, 3, 1, "", "va_start"], [286, 3, 1, "", "vm_control"], [286, 3, 1, "", "vm_lb"], [286, 3, 1, "", "vm_start"], [286, 3, 1, "", "vm_ub"]], "mp.dme_bus3p": [[287, 5, 1, "", "build_params"], [287, 5, 1, "", "init_status"], [287, 5, 1, "", "label"], [287, 5, 1, "", "labels"], [287, 5, 1, "", "main_table_var_names"], [287, 5, 1, "", "name"], [287, 5, 1, "", "pp_data_row_det"], [287, 5, 1, "", "pp_get_headers_det"], [287, 5, 1, "", "pp_have_section_det"], [287, 3, 1, "", "type"], [287, 5, 1, "", "update_status"], [287, 3, 1, "", "va1_start"], [287, 3, 1, "", "va2_start"], [287, 3, 1, "", "va3_start"], [287, 3, 1, "", "vm1_start"], [287, 3, 1, "", "vm2_start"], [287, 3, 1, "", "vm3_start"], [287, 3, 1, "", "vm_control"]], "mp.dme_bus_opf": [[289, 5, 1, "", "export_vars"], [289, 5, 1, "", "export_vars_offline_val"], [289, 5, 1, "", "main_table_var_names"], [289, 5, 1, "", "pp_binding_rows_lim"], [289, 5, 1, "", "pp_data_ext"], [289, 5, 1, "", "pp_data_row_det"], [289, 5, 1, "", "pp_data_row_lim"], [289, 5, 1, "", "pp_get_headers_det"], [289, 5, 1, "", "pp_get_headers_lim"], [289, 5, 1, "", "pp_have_section_lim"]], "mp.dme_buslink": [[290, 5, 1, "", "build_params"], [290, 3, 1, "", "bus"], [290, 3, 1, "", "bus3p"], [290, 5, 1, "", "cxn_idx_prop"], [290, 5, 1, "", "cxn_type"], [290, 5, 1, "", "initialize"], [290, 5, 1, "", "label"], [290, 5, 1, "", "labels"], [290, 5, 1, "", "main_table_var_names"], [290, 5, 1, "", "name"], [290, 3, 1, "", "pg1_start"], [290, 3, 1, "", "pg2_start"], [290, 3, 1, "", "pg3_start"], [290, 5, 1, "", "pp_data_row_det"], [290, 5, 1, "", "pp_get_headers_det"], [290, 5, 1, "", "pp_have_section_det"], [290, 3, 1, "", "qg1_start"], [290, 3, 1, "", "qg2_start"], [290, 3, 1, "", "qg3_start"], [290, 5, 1, "", "update_status"]], "mp.dme_gen": [[292, 5, 1, "", "apply_vm_setpoint"], [292, 5, 1, "", "build_params"], [292, 3, 1, "", "bus"], [292, 3, 1, "", "bus_on"], [292, 5, 1, "", "cxn_idx_prop"], [292, 5, 1, "", "cxn_type"], [292, 5, 1, "", "export_vars"], [292, 5, 1, "", "export_vars_offline_val"], [292, 5, 1, "", "have_cost"], [292, 5, 1, "", "initialize"], [292, 5, 1, "", "isload"], [292, 5, 1, "", "label"], [292, 5, 1, "", "labels"], [292, 5, 1, "", "main_table_var_names"], [292, 5, 1, "", "name"], [292, 3, 1, "", "pg_lb"], [292, 3, 1, "", "pg_start"], [292, 3, 1, "", "pg_ub"], [292, 5, 1, "", "pp_data_row_det"], [292, 5, 1, "", "pp_data_sum"], [292, 5, 1, "", "pp_get_footers_det"], [292, 5, 1, "", "pp_get_headers_det"], [292, 5, 1, "", "pp_have_section_det"], [292, 5, 1, "", "pp_have_section_sum"], [292, 3, 1, "", "qg_lb"], [292, 3, 1, "", "qg_start"], [292, 3, 1, "", "qg_ub"], [292, 5, 1, "", "update_status"], [292, 5, 1, "", "violated_q_lims"], [292, 3, 1, "", "vm_setpoint"]], "mp.dme_gen3p": [[293, 5, 1, "", "apply_vm_setpoint"], [293, 5, 1, "", "build_params"], [293, 3, 1, "", "bus"], [293, 3, 1, "", "bus_on"], [293, 5, 1, "", "cxn_idx_prop"], [293, 5, 1, "", "cxn_type"], [293, 5, 1, "", "initialize"], [293, 5, 1, "", "label"], [293, 5, 1, "", "labels"], [293, 5, 1, "", "main_table_var_names"], [293, 5, 1, "", "name"], [293, 3, 1, "", "pg1_start"], [293, 3, 1, "", "pg2_start"], [293, 3, 1, "", "pg3_start"], [293, 5, 1, "", "pp_data_row_det"], [293, 5, 1, "", "pp_data_sum"], [293, 5, 1, "", "pp_get_headers_det"], [293, 5, 1, "", "pp_have_section_det"], [293, 5, 1, "", "pp_have_section_sum"], [293, 3, 1, "", "qg1_start"], [293, 3, 1, "", "qg2_start"], [293, 3, 1, "", "qg3_start"], [293, 5, 1, "", "update_status"], [293, 3, 1, "", "vm1_setpoint"], [293, 3, 1, "", "vm2_setpoint"], [293, 3, 1, "", "vm3_setpoint"]], "mp.dme_gen_opf": [[295, 5, 1, "", "build_cost_params"], [295, 5, 1, "", "export_vars"], [295, 5, 1, "", "export_vars_offline_val"], [295, 5, 1, "", "have_cost"], [295, 5, 1, "", "main_table_var_names"], [295, 5, 1, "", "max_pwl_gencost"], [295, 5, 1, "", "pp_binding_rows_lim"], [295, 5, 1, "", "pp_data_row_lim"], [295, 5, 1, "", "pp_get_headers_lim"], [295, 5, 1, "", "pp_have_section_lim"], [295, 5, 1, "", "pretty_print"]], "mp.dme_legacy_dcline": [[296, 5, 1, "", "apply_vm_setpoints"], [296, 5, 1, "", "build_params"], [296, 5, 1, "", "cxn_idx_prop"], [296, 5, 1, "", "cxn_type"], [296, 5, 1, "", "export_vars"], [296, 5, 1, "", "export_vars_offline_val"], [296, 3, 1, "", "fbus"], [296, 3, 1, "", "fbus_on"], [296, 5, 1, "", "have_cost"], [296, 5, 1, "", "initialize"], [296, 5, 1, "", "label"], [296, 5, 1, "", "labels"], [296, 3, 1, "", "loss0"], [296, 3, 1, "", "loss1"], [296, 5, 1, "", "main_table_var_names"], [296, 5, 1, "", "name"], [296, 3, 1, "", "p_fr_lb"], [296, 3, 1, "", "p_fr_start"], [296, 3, 1, "", "p_fr_ub"], [296, 3, 1, "", "p_to_start"], [296, 5, 1, "", "pp_data_row_det"], [296, 5, 1, "", "pp_data_sum"], [296, 5, 1, "", "pp_get_headers_det"], [296, 5, 1, "", "pp_have_section_det"], [296, 5, 1, "", "pp_have_section_sum"], [296, 3, 1, "", "q_fr_lb"], [296, 3, 1, "", "q_fr_start"], [296, 3, 1, "", "q_fr_ub"], [296, 3, 1, "", "q_to_lb"], [296, 3, 1, "", "q_to_start"], [296, 3, 1, "", "q_to_ub"], [296, 3, 1, "", "tbus"], [296, 3, 1, "", "tbus_on"], [296, 5, 1, "", "update_status"], [296, 3, 1, "", "vm_setpoint_fr"], [296, 3, 1, "", "vm_setpoint_to"]], "mp.dme_legacy_dcline_opf": [[297, 5, 1, "", "build_cost_params"], [297, 5, 1, "", "export_vars"], [297, 5, 1, "", "export_vars_offline_val"], [297, 5, 1, "", "have_cost"], [297, 5, 1, "", "main_table_var_names"], [297, 5, 1, "", "pp_binding_rows_lim"], [297, 5, 1, "", "pp_data_row_lim"], [297, 5, 1, "", "pp_get_headers_lim"], [297, 5, 1, "", "pp_have_section_lim"], [297, 5, 1, "", "pretty_print"]], "mp.dme_line3p": [[298, 5, 1, "", "build_params"], [298, 5, 1, "", "create_line_construction_table"], [298, 5, 1, "", "cxn_idx_prop"], [298, 5, 1, "", "cxn_type"], [298, 3, 1, "", "fbus"], [298, 3, 1, "", "freq"], [298, 5, 1, "", "initialize"], [298, 5, 1, "", "label"], [298, 5, 1, "", "labels"], [298, 3, 1, "", "lc"], [298, 3, 1, "", "lc_tab"], [298, 5, 1, "", "lc_table_var_names"], [298, 3, 1, "", "lc_y_idx"], [298, 3, 1, "", "len"], [298, 5, 1, "", "main_table_var_names"], [298, 5, 1, "", "name"], [298, 5, 1, "", "pp_data_row_det"], [298, 5, 1, "", "pp_data_sum"], [298, 5, 1, "", "pp_get_headers_det"], [298, 5, 1, "", "pp_have_section_det"], [298, 5, 1, "", "pp_have_section_sum"], [298, 5, 1, "", "pretty_print"], [298, 5, 1, "", "symmat2vec"], [298, 3, 1, "", "tbus"], [298, 5, 1, "", "update_status"], [298, 5, 1, "", "vec2symmat"], [298, 3, 1, "", "yc"], [298, 3, 1, "", "ys"]], "mp.dme_load": [[300, 5, 1, "", "build_params"], [300, 3, 1, "", "bus"], [300, 5, 1, "", "cxn_idx_prop"], [300, 5, 1, "", "cxn_type"], [300, 5, 1, "", "initialize"], [300, 5, 1, "", "label"], [300, 5, 1, "", "labels"], [300, 5, 1, "", "main_table_var_names"], [300, 5, 1, "", "name"], [300, 3, 1, "", "pd"], [300, 3, 1, "", "pd_i"], [300, 3, 1, "", "pd_z"], [300, 5, 1, "", "pp_data_row_det"], [300, 5, 1, "", "pp_data_sum"], [300, 5, 1, "", "pp_get_footers_det"], [300, 5, 1, "", "pp_get_headers_det"], [300, 5, 1, "", "pp_have_section_det"], [300, 5, 1, "", "pp_have_section_sum"], [300, 3, 1, "", "qd"], [300, 3, 1, "", "qd_i"], [300, 3, 1, "", "qd_z"], [300, 5, 1, "", "update_status"]], "mp.dme_load3p": [[301, 5, 1, "", "build_params"], [301, 3, 1, "", "bus"], [301, 5, 1, "", "cxn_idx_prop"], [301, 5, 1, "", "cxn_type"], [301, 5, 1, "", "initialize"], [301, 5, 1, "", "label"], [301, 5, 1, "", "labels"], [301, 5, 1, "", "main_table_var_names"], [301, 5, 1, "", "name"], [301, 3, 1, "", "pd1"], [301, 3, 1, "", "pd2"], [301, 3, 1, "", "pd3"], [301, 3, 1, "", "pf1"], [301, 3, 1, "", "pf2"], [301, 3, 1, "", "pf3"], [301, 5, 1, "", "pp_data_row_det"], [301, 5, 1, "", "pp_data_sum"], [301, 5, 1, "", "pp_get_headers_det"], [301, 5, 1, "", "pp_have_section_det"], [301, 5, 1, "", "pp_have_section_sum"], [301, 5, 1, "", "update_status"]], "mp.dme_load_cpf": [[303, 5, 1, "", "export_vars"], [303, 5, 1, "", "parameterized"]], "mp.dme_reserve_gen": [[305, 5, 1, "", "build_params"], [305, 5, 1, "", "export_vars"], [305, 5, 1, "", "export_vars_offline_val"], [305, 3, 1, "", "gen"], [305, 5, 1, "", "label"], [305, 5, 1, "", "labels"], [305, 5, 1, "", "main_table_var_names"], [305, 5, 1, "", "name"], [305, 5, 1, "", "pp_binding_rows_lim"], [305, 5, 1, "", "pp_data_row_det"], [305, 5, 1, "", "pp_data_row_lim"], [305, 5, 1, "", "pp_data_sum"], [305, 5, 1, "", "pp_get_footers_det"], [305, 5, 1, "", "pp_get_headers_det"], [305, 5, 1, "", "pp_get_headers_lim"], [305, 5, 1, "", "pp_have_section_det"], [305, 5, 1, "", "pp_have_section_lim"], [305, 5, 1, "", "pp_have_section_sum"], [305, 3, 1, "", "r_ub"], [305, 5, 1, "", "update_status"]], "mp.dme_reserve_zone": [[306, 5, 1, "", "build_params"], [306, 5, 1, "", "export_vars"], [306, 5, 1, "", "export_vars_offline_val"], [306, 5, 1, "", "label"], [306, 5, 1, "", "labels"], [306, 5, 1, "", "main_table_var_names"], [306, 5, 1, "", "name"], [306, 5, 1, "", "pp_data_row_det"], [306, 5, 1, "", "pp_get_headers_det"], [306, 5, 1, "", "pp_have_section_det"], [306, 3, 1, "", "req"], [306, 5, 1, "", "update_status"], [306, 3, 1, "", "zones"]], "mp.dme_shared_opf": [[307, 3, 1, "", "ctol"], [307, 5, 1, "", "pp_binding_rows_lim"], [307, 5, 1, "", "pp_data_lim"], [307, 5, 1, "", "pp_data_other"], [307, 5, 1, "", "pp_data_row_lim"], [307, 5, 1, "", "pp_get_footers_lim"], [307, 5, 1, "", "pp_get_footers_other"], [307, 5, 1, "", "pp_get_headers_lim"], [307, 5, 1, "", "pp_get_headers_other"], [307, 5, 1, "", "pp_get_title_lim"], [307, 5, 1, "", "pp_have_section_lim"], [307, 5, 1, "", "pp_have_section_other"], [307, 5, 1, "", "pp_rows_lim"], [307, 5, 1, "", "pp_rows_other"], [307, 5, 1, "", "pp_set_tols_lim"], [307, 3, 1, "", "ptol"]], "mp.dme_shunt": [[308, 3, 1, "", "bs"], [308, 5, 1, "", "build_params"], [308, 3, 1, "", "bus"], [308, 5, 1, "", "cxn_idx_prop"], [308, 5, 1, "", "cxn_type"], [308, 3, 1, "", "gs"], [308, 5, 1, "", "initialize"], [308, 5, 1, "", "label"], [308, 5, 1, "", "labels"], [308, 5, 1, "", "main_table_var_names"], [308, 5, 1, "", "name"], [308, 5, 1, "", "pp_data_row_det"], [308, 5, 1, "", "pp_data_sum"], [308, 5, 1, "", "pp_get_footers_det"], [308, 5, 1, "", "pp_get_headers_det"], [308, 5, 1, "", "pp_have_section_det"], [308, 5, 1, "", "pp_have_section_sum"], [308, 5, 1, "", "update_status"]], "mp.dme_shunt_cpf": [[309, 5, 1, "", "export_vars"], [309, 5, 1, "", "parameterized"]], "mp.dme_xfmr3p": [[311, 5, 1, "", "build_params"], [311, 5, 1, "", "cxn_idx_prop"], [311, 5, 1, "", "cxn_type"], [311, 3, 1, "", "fbus"], [311, 5, 1, "", "initialize"], [311, 5, 1, "", "label"], [311, 5, 1, "", "labels"], [311, 5, 1, "", "main_table_var_names"], [311, 5, 1, "", "name"], [311, 5, 1, "", "pp_data_row_det"], [311, 5, 1, "", "pp_data_sum"], [311, 5, 1, "", "pp_get_headers_det"], [311, 5, 1, "", "pp_have_section_det"], [311, 5, 1, "", "pp_have_section_sum"], [311, 5, 1, "", "pretty_print"], [311, 3, 1, "", "r"], [311, 3, 1, "", "tbus"], [311, 5, 1, "", "update_status"], [311, 3, 1, "", "x"]], "mp.element_container": [[313, 3, 1, "", "element_classes"], [313, 3, 1, "", "elements"], [313, 5, 1, "", "modify_element_classes"]], "mp.extension": [[314, 5, 1, "", "data_model_class"], [314, 5, 1, "", "dm_converter_class"], [314, 5, 1, "", "dm_element_classes"], [314, 5, 1, "", "dmc_element_classes"], [314, 5, 1, "", "math_model_class"], [314, 5, 1, "", "mm_element_classes"], [314, 5, 1, "", "network_model_class"], [314, 5, 1, "", "nm_element_classes"], [314, 5, 1, "", "task_class"]], "mp.form": [[315, 5, 1, "", "find_form_class"], [315, 5, 1, "", "form_name"], [315, 5, 1, "", "form_tag"], [315, 5, 1, "", "get_params"], [315, 5, 1, "", "model_params"], [315, 5, 1, "", "model_vvars"], [315, 5, 1, "", "model_zvars"]], "mp.form_ac": [[316, 3, 1, "", "L"], [316, 3, 1, "", "M"], [316, 3, 1, "", "N"], [316, 3, 1, "", "Y"], [316, 5, 1, "", "aux_data_va_vm"], [316, 3, 1, "", "i"], [316, 3, 1, "", "inln"], [316, 3, 1, "", "inln_hess"], [316, 5, 1, "", "model_params"], [316, 5, 1, "", "model_zvars"], [316, 3, 1, "", "param_ncols"], [316, 5, 1, "", "port_active_power2_lim_fcn"], [316, 5, 1, "", "port_active_power2_lim_hess"], [316, 5, 1, "", "port_active_power_lim_fcn"], [316, 5, 1, "", "port_active_power_lim_hess"], [316, 5, 1, "", "port_apparent_power_lim_fcn"], [316, 5, 1, "", "port_apparent_power_lim_hess"], [316, 5, 1, "", "port_current_lim_fcn"], [316, 5, 1, "", "port_current_lim_hess"], [316, 5, 1, "", "port_inj_current"], [316, 5, 1, "", "port_inj_current_hess"], [316, 5, 1, "", "port_inj_current_hess_v"], [316, 5, 1, "", "port_inj_current_hess_vz"], [316, 5, 1, "", "port_inj_current_jac"], [316, 5, 1, "", "port_inj_power"], [316, 5, 1, "", "port_inj_power_hess"], [316, 5, 1, "", "port_inj_power_hess_v"], [316, 5, 1, "", "port_inj_power_hess_vz"], [316, 5, 1, "", "port_inj_power_jac"], [316, 3, 1, "", "s"], [316, 3, 1, "", "snln"], [316, 3, 1, "", "snln_hess"]], "mp.form_acc": [[317, 5, 1, "", "aux_data_va_vm"], [317, 5, 1, "", "form_name"], [317, 5, 1, "", "form_tag"], [317, 5, 1, "", "model_vvars"], [317, 5, 1, "", "port_inj_current_hess_v"], [317, 5, 1, "", "port_inj_current_hess_vz"], [317, 5, 1, "", "port_inj_current_jac"], [317, 5, 1, "", "port_inj_power_hess_v"], [317, 5, 1, "", "port_inj_power_hess_vz"], [317, 5, 1, "", "port_inj_power_jac"], [317, 5, 1, "", "va_fcn"], [317, 5, 1, "", "va_hess"], [317, 5, 1, "", "vm2_fcn"], [317, 5, 1, "", "vm2_hess"]], "mp.form_acp": [[318, 5, 1, "", "aux_data_va_vm"], [318, 5, 1, "", "form_name"], [318, 5, 1, "", "form_tag"], [318, 5, 1, "", "model_vvars"], [318, 5, 1, "", "port_inj_current_hess_v"], [318, 5, 1, "", "port_inj_current_hess_vz"], [318, 5, 1, "", "port_inj_current_jac"], [318, 5, 1, "", "port_inj_power_hess_v"], [318, 5, 1, "", "port_inj_power_hess_vz"], [318, 5, 1, "", "port_inj_power_jac"]], "mp.form_dc": [[319, 3, 1, "", "B"], [319, 3, 1, "", "K"], [319, 5, 1, "", "form_name"], [319, 5, 1, "", "form_tag"], [319, 5, 1, "", "model_params"], [319, 5, 1, "", "model_vvars"], [319, 5, 1, "", "model_zvars"], [319, 3, 1, "", "p"], [319, 3, 1, "", "param_ncols"], [319, 5, 1, "", "port_inj_power"]], "mp.mapped_array": [[320, 5, 1, "", "add_elements"], [320, 5, 1, "", "add_names"], [320, 5, 1, "", "copy"], [320, 5, 1, "", "delete_elements"], [320, 5, 1, "", "display"], [320, 5, 1, "", "has_name"], [320, 5, 1, "", "length"], [320, 5, 1, "", "mapped_array"], [320, 5, 1, "", "name2idx"], [320, 5, 1, "", "size"], [320, 5, 1, "", "subsasgn"], [320, 5, 1, "", "subsref"]], "mp.math_model": [[321, 5, 1, "", "add_aux_data"], [321, 5, 1, "", "add_constraints"], [321, 5, 1, "", "add_costs"], [321, 5, 1, "", "add_node_balance_constraints"], [321, 5, 1, "", "add_system_constraints"], [321, 5, 1, "", "add_system_costs"], [321, 5, 1, "", "add_system_vars"], [321, 5, 1, "", "add_vars"], [321, 3, 1, "", "aux_data"], [321, 5, 1, "", "build"], [321, 5, 1, "", "build_base_aux_data"], [321, 5, 1, "", "data_model_update"], [321, 5, 1, "", "display"], [321, 5, 1, "", "form_name"], [321, 5, 1, "", "form_tag"], [321, 5, 1, "", "network_model_x_soln"], [321, 5, 1, "", "solve_opts"], [321, 5, 1, "", "task_name"], [321, 5, 1, "", "task_tag"], [321, 5, 1, "", "update_nm_vars"]], "mp.math_model_cpf_acc": [[322, 5, 1, "", "math_model_cpf_acc"]], "mp.math_model_cpf_acci": [[323, 5, 1, "", "add_node_balance_constraints"], [323, 5, 1, "", "form_name"], [323, 5, 1, "", "form_tag"]], "mp.math_model_cpf_accs": [[324, 5, 1, "", "add_node_balance_constraints"], [324, 5, 1, "", "form_name"], [324, 5, 1, "", "form_tag"]], "mp.math_model_cpf_acp": [[325, 5, 1, "", "callback_vlim"], [325, 5, 1, "", "event_vlim"], [325, 5, 1, "", "math_model_cpf_acp"]], "mp.math_model_cpf_acpi": [[326, 5, 1, "", "add_node_balance_constraints"], [326, 5, 1, "", "form_name"], [326, 5, 1, "", "form_tag"]], "mp.math_model_cpf_acps": [[327, 5, 1, "", "add_node_balance_constraints"], [327, 5, 1, "", "expand_z_warmstart"], [327, 5, 1, "", "form_name"], [327, 5, 1, "", "form_tag"], [327, 5, 1, "", "solve_opts_warmstart"]], "mp.math_model_opf": [[328, 5, 1, "", "add_system_vars"], [328, 5, 1, "", "build_aux_data"], [328, 5, 1, "", "interior_va"], [328, 5, 1, "", "interior_x0"], [328, 5, 1, "", "task_name"], [328, 5, 1, "", "task_tag"]], "mp.math_model_opf_ac": [[329, 5, 1, "", "nodal_current_balance_fcn"], [329, 5, 1, "", "nodal_current_balance_hess"], [329, 5, 1, "", "nodal_power_balance_fcn"], [329, 5, 1, "", "nodal_power_balance_hess"], [329, 5, 1, "", "solve_opts"]], "mp.math_model_opf_acc": [[330, 5, 1, "", "convert_x_m2n"], [330, 5, 1, "", "interior_va"], [330, 5, 1, "", "math_model_opf_acc"]], "mp.math_model_opf_acci": [[331, 5, 1, "", "add_node_balance_constraints"], [331, 5, 1, "", "form_name"], [331, 5, 1, "", "form_tag"], [331, 5, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acci_legacy": [[332, 5, 1, "", "add_named_set"], [332, 5, 1, "", "add_system_constraints"], [332, 5, 1, "", "add_system_costs"], [332, 5, 1, "", "add_vars"], [332, 5, 1, "", "build"], [332, 5, 1, "", "def_set_types"], [332, 5, 1, "", "init_set_types"], [332, 5, 1, "", "legacy_user_var_names"], [332, 5, 1, "", "math_model_opf_acci_legacy"]], "mp.math_model_opf_accs": [[333, 5, 1, "", "add_node_balance_constraints"], [333, 5, 1, "", "form_name"], [333, 5, 1, "", "form_tag"], [333, 5, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_accs_legacy": [[334, 5, 1, "", "add_named_set"], [334, 5, 1, "", "add_system_constraints"], [334, 5, 1, "", "add_system_costs"], [334, 5, 1, "", "add_vars"], [334, 5, 1, "", "build"], [334, 5, 1, "", "def_set_types"], [334, 5, 1, "", "init_set_types"], [334, 5, 1, "", "legacy_user_var_names"], [334, 5, 1, "", "math_model_opf_accs_legacy"]], "mp.math_model_opf_acp": [[335, 5, 1, "", "convert_x_m2n"], [335, 5, 1, "", "math_model_opf_acp"]], "mp.math_model_opf_acpi": [[336, 5, 1, "", "add_node_balance_constraints"], [336, 5, 1, "", "form_name"], [336, 5, 1, "", "form_tag"], [336, 5, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acpi_legacy": [[337, 5, 1, "", "add_named_set"], [337, 5, 1, "", "add_system_constraints"], [337, 5, 1, "", "add_system_costs"], [337, 5, 1, "", "add_vars"], [337, 5, 1, "", "build"], [337, 5, 1, "", "def_set_types"], [337, 5, 1, "", "init_set_types"], [337, 5, 1, "", "legacy_user_var_names"], [337, 5, 1, "", "math_model_opf_acpi_legacy"]], "mp.math_model_opf_acps": [[338, 5, 1, "", "add_node_balance_constraints"], [338, 5, 1, "", "form_name"], [338, 5, 1, "", "form_tag"], [338, 5, 1, "", "node_power_balance_prices"]], "mp.math_model_opf_acps_legacy": [[339, 5, 1, "", "add_named_set"], [339, 5, 1, "", "add_system_constraints"], [339, 5, 1, "", "add_system_costs"], [339, 5, 1, "", "add_vars"], [339, 5, 1, "", "build"], [339, 5, 1, "", "def_set_types"], [339, 5, 1, "", "init_set_types"], [339, 5, 1, "", "legacy_user_var_names"], [339, 5, 1, "", "math_model_opf_acps_legacy"]], "mp.math_model_opf_dc": [[340, 5, 1, "", "add_node_balance_constraints"], [340, 5, 1, "", "convert_x_m2n"], [340, 5, 1, "", "form_name"], [340, 5, 1, "", "form_tag"], [340, 5, 1, "", "math_model_opf_dc"], [340, 5, 1, "", "solve_opts"]], "mp.math_model_opf_dc_legacy": [[341, 5, 1, "", "add_named_set"], [341, 5, 1, "", "add_system_constraints"], [341, 5, 1, "", "add_system_costs"], [341, 5, 1, "", "add_vars"], [341, 5, 1, "", "build"], [341, 5, 1, "", "def_set_types"], [341, 5, 1, "", "init_set_types"], [341, 5, 1, "", "legacy_user_var_names"], [341, 5, 1, "", "math_model_opf_dc_legacy"]], "mp.math_model_pf": [[342, 5, 1, "", "add_costs"], [342, 5, 1, "", "add_system_vars"], [342, 5, 1, "", "solve_opts"], [342, 5, 1, "", "task_name"], [342, 5, 1, "", "task_tag"]], "mp.math_model_pf_ac": [[343, 5, 1, "", "math_model_pf_ac"]], "mp.math_model_pf_acci": [[344, 5, 1, "", "add_node_balance_constraints"], [344, 5, 1, "", "form_name"], [344, 5, 1, "", "form_tag"]], "mp.math_model_pf_accs": [[345, 5, 1, "", "add_node_balance_constraints"], [345, 5, 1, "", "form_name"], [345, 5, 1, "", "form_tag"]], "mp.math_model_pf_acpi": [[346, 5, 1, "", "add_node_balance_constraints"], [346, 5, 1, "", "form_name"], [346, 5, 1, "", "form_tag"]], "mp.math_model_pf_acps": [[347, 5, 1, "", "add_node_balance_constraints"], [347, 5, 1, "", "fd_jac_approx"], [347, 5, 1, "", "fdpf_B_matrix_models"], [347, 5, 1, "", "form_name"], [347, 5, 1, "", "form_tag"], [347, 5, 1, "", "gs_x_update"], [347, 5, 1, "", "zg_x_update"]], "mp.math_model_pf_dc": [[348, 5, 1, "", "add_node_balance_constraints"], [348, 5, 1, "", "form_name"], [348, 5, 1, "", "form_tag"], [348, 5, 1, "", "math_model_pf_dc"], [348, 5, 1, "", "solve_opts"]], "mp.mm_element": [[349, 5, 1, "", "add_constraints"], [349, 5, 1, "", "add_costs"], [349, 5, 1, "", "add_vars"], [349, 5, 1, "", "data_model_element"], [349, 5, 1, "", "data_model_update"], [349, 5, 1, "", "data_model_update_off"], [349, 5, 1, "", "data_model_update_on"], [349, 5, 1, "", "name"], [349, 5, 1, "", "network_model_element"]], "mp.mm_shared_opf_legacy": [[350, 5, 1, "", "add_legacy_cost"], [350, 5, 1, "", "add_legacy_user_constraints"], [350, 5, 1, "", "add_legacy_user_constraints_ac"], [350, 5, 1, "", "add_legacy_user_costs"], [350, 5, 1, "", "add_legacy_user_vars"], [350, 5, 1, "", "build_legacy"], [350, 5, 1, "", "eval_legacy_cost"], [350, 5, 1, "", "get_mpc"], [350, 5, 1, "", "init_set_types_legacy"], [350, 5, 1, "", "mod_set_types_legacy"], [350, 5, 1, "", "params_legacy_cost"]], "mp.mm_shared_pfcpf": [[351, 5, 1, "", "build_aux_data"]], "mp.mm_shared_pfcpf_ac": [[352, 5, 1, "", "add_system_varset_pf"], [352, 5, 1, "", "update_z"]], "mp.mm_shared_pfcpf_ac_i": [[353, 5, 1, "", "build_aux_data_i"]], "mp.mm_shared_pfcpf_acc": [[354, 5, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acci": [[355, 5, 1, "", "add_system_vars_pf"], [355, 5, 1, "", "build_aux_data"], [355, 5, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_accs": [[356, 5, 1, "", "add_system_vars_pf"], [356, 5, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acp": [[357, 5, 1, "", "convert_x_m2n"]], "mp.mm_shared_pfcpf_acpi": [[358, 5, 1, "", "add_system_vars_pf"], [358, 5, 1, "", "build_aux_data"], [358, 5, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_acps": [[359, 5, 1, "", "add_system_vars_pf"], [359, 5, 1, "", "build_aux_data"], [359, 5, 1, "", "node_balance_equations"]], "mp.mm_shared_pfcpf_dc": [[360, 5, 1, "", "add_system_vars_pf"], [360, 5, 1, "", "build_aux_data"], [360, 5, 1, "", "convert_x_m2n"], [360, 5, 1, "", "update_z"]], "mp.mme_branch": [[361, 5, 1, "", "name"]], "mp.mme_branch_opf": [[362, 5, 1, "", "ang_diff_params"], [362, 5, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_ac": [[363, 5, 1, "", "add_constraints"], [363, 5, 1, "", "data_model_update_on"]], "mp.mme_branch_opf_acc": [[364, 5, 1, "", "add_constraints"], [364, 5, 1, "", "ang_diff_prices"]], "mp.mme_branch_opf_acp": [[365, 5, 1, "", "add_constraints"]], "mp.mme_branch_opf_dc": [[366, 5, 1, "", "add_constraints"], [366, 5, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_ac": [[367, 5, 1, "", "data_model_update_on"]], "mp.mme_branch_pf_dc": [[368, 5, 1, "", "data_model_update_on"]], "mp.mme_bus": [[369, 5, 1, "", "name"]], "mp.mme_bus3p": [[370, 5, 1, "", "data_model_update_on"], [370, 5, 1, "", "name"]], "mp.mme_bus3p_opf_acc": [[371, 5, 1, "", "interior_x0"]], "mp.mme_bus3p_opf_acp": [[372, 5, 1, "", "interior_x0"]], "mp.mme_bus_opf_ac": [[373, 5, 1, "", "interior_vm"]], "mp.mme_bus_opf_acc": [[374, 5, 1, "", "add_constraints"], [374, 5, 1, "", "data_model_update_on"], [374, 5, 1, "", "interior_x0"]], "mp.mme_bus_opf_acp": [[375, 5, 1, "", "data_model_update_on"], [375, 5, 1, "", "interior_x0"]], "mp.mme_bus_opf_dc": [[376, 5, 1, "", "data_model_update_on"], [376, 5, 1, "", "interior_x0"]], "mp.mme_bus_pf_ac": [[377, 5, 1, "", "data_model_update_on"]], "mp.mme_bus_pf_dc": [[378, 5, 1, "", "data_model_update_on"]], "mp.mme_buslink": [[379, 5, 1, "", "name"]], "mp.mme_buslink_opf": [[380, 5, 1, "", "interior_x0"]], "mp.mme_buslink_opf_acc": [[381, 5, 1, "", "add_constraints"], [381, 5, 1, "", "va_fcn"], [381, 5, 1, "", "va_hess"], [381, 5, 1, "", "vm2_fcn"], [381, 5, 1, "", "vm2_hess"]], "mp.mme_buslink_opf_acp": [[382, 5, 1, "", "add_constraints"]], "mp.mme_buslink_pf_ac": [[383, 5, 1, "", "add_constraints"], [383, 5, 1, "", "add_vars"], [383, 5, 1, "", "voltage_constraints"]], "mp.mme_buslink_pf_acc": [[384, 5, 1, "", "add_constraints"], [384, 5, 1, "", "pf_va_fcn"], [384, 5, 1, "", "pf_vm_fcn"]], "mp.mme_buslink_pf_acp": [[385, 5, 1, "", "add_constraints"]], "mp.mme_gen": [[386, 5, 1, "", "name"]], "mp.mme_gen3p": [[387, 5, 1, "", "data_model_update_on"], [387, 5, 1, "", "name"]], "mp.mme_gen3p_opf": [[388, 5, 1, "", "interior_x0"]], "mp.mme_gen_opf": [[389, 5, 1, "", "add_costs"], [389, 5, 1, "", "add_vars"], [389, 3, 1, "", "cost"], [389, 5, 1, "", "interior_x0"]], "mp.mme_gen_opf_ac": [[390, 5, 1, "", "add_constraints"], [390, 5, 1, "", "add_costs"], [390, 5, 1, "", "build_cost_params"], [390, 5, 1, "", "data_model_update_on"], [390, 5, 1, "", "disp_load_constant_pf_constraint"], [390, 5, 1, "", "has_pq_cap"], [390, 5, 1, "", "pq_capability_constraint"]], "mp.mme_gen_opf_ac_oval": [[391, 5, 1, "", "add_constraints"], [391, 5, 1, "", "oval_pq_capability_fcn"], [391, 5, 1, "", "oval_pq_capability_hess"]], "mp.mme_gen_opf_dc": [[392, 5, 1, "", "add_constraints"], [392, 5, 1, "", "build_cost_params"], [392, 5, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_ac": [[393, 5, 1, "", "data_model_update_on"]], "mp.mme_gen_pf_dc": [[394, 5, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline": [[395, 5, 1, "", "name"]], "mp.mme_legacy_dcline_opf": [[396, 5, 1, "", "add_constraints"], [396, 5, 1, "", "add_costs"], [396, 5, 1, "", "add_vars"], [396, 5, 1, "", "build_cost_params"], [396, 3, 1, "", "cost"], [396, 5, 1, "", "interior_x0"]], "mp.mme_legacy_dcline_opf_ac": [[397, 5, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_opf_dc": [[398, 5, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_ac": [[399, 5, 1, "", "data_model_update_on"]], "mp.mme_legacy_dcline_pf_dc": [[400, 5, 1, "", "data_model_update_on"]], "mp.mme_line3p": [[401, 5, 1, "", "data_model_update_on"], [401, 5, 1, "", "name"]], "mp.mme_line3p_opf": [[402, 5, 1, "", "interior_x0"]], "mp.mme_load": [[403, 5, 1, "", "name"]], "mp.mme_load_cpf": [[404, 5, 1, "", "data_model_update_on"]], "mp.mme_load_pf_ac": [[405, 5, 1, "", "data_model_update_on"]], "mp.mme_load_pf_dc": [[406, 5, 1, "", "data_model_update_on"]], "mp.mme_reserve_gen": [[407, 5, 1, "", "add_constraints"], [407, 5, 1, "", "add_costs"], [407, 5, 1, "", "add_vars"], [407, 5, 1, "", "data_model_update_on"], [407, 5, 1, "", "name"]], "mp.mme_reserve_zone": [[408, 5, 1, "", "add_constraints"], [408, 5, 1, "", "data_model_update_on"], [408, 5, 1, "", "name"]], "mp.mme_shunt": [[409, 5, 1, "", "name"]], "mp.mme_shunt_cpf": [[410, 5, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_ac": [[411, 5, 1, "", "data_model_update_on"]], "mp.mme_shunt_pf_dc": [[412, 5, 1, "", "data_model_update_on"]], "mp.mme_xfmr3p": [[413, 5, 1, "", "data_model_update_on"], [413, 5, 1, "", "name"]], "mp.mme_xfmr3p_opf": [[414, 5, 1, "", "interior_x0"]], "mp.net_model": [[415, 5, 1, "", "add_node"], [415, 5, 1, "", "add_nodes"], [415, 5, 1, "", "add_port"], [415, 5, 1, "", "add_state"], [415, 5, 1, "", "add_states"], [415, 5, 1, "", "add_var"], [415, 5, 1, "", "add_vvars"], [415, 5, 1, "", "add_zvars"], [415, 5, 1, "", "build"], [415, 5, 1, "", "build_params"], [415, 5, 1, "", "def_set_types"], [415, 5, 1, "", "display"], [415, 5, 1, "", "ensure_ref_node"], [415, 5, 1, "", "get_node_idx"], [415, 5, 1, "", "get_port_idx"], [415, 5, 1, "", "get_state_idx"], [415, 5, 1, "", "init_set_types"], [415, 5, 1, "", "name"], [415, 3, 1, "", "node"], [415, 5, 1, "", "node_types"], [415, 5, 1, "", "np"], [415, 3, 1, "", "nv"], [415, 5, 1, "", "nz"], [415, 5, 1, "", "params_var"], [415, 3, 1, "", "port"], [415, 5, 1, "", "set_node_type_pq"], [415, 5, 1, "", "set_node_type_pv"], [415, 5, 1, "", "set_node_type_ref"], [415, 5, 1, "", "set_type_idx_map"], [415, 5, 1, "", "set_type_label"], [415, 5, 1, "", "stack_matrix_params"], [415, 5, 1, "", "stack_vector_params"], [415, 3, 1, "", "state"], [415, 3, 1, "", "the_np"], [415, 3, 1, "", "the_nz"]], "mp.net_model_ac": [[416, 5, 1, "", "build_params"], [416, 5, 1, "", "def_set_types"], [416, 5, 1, "", "get_va"], [416, 5, 1, "", "nodal_complex_current_balance"], [416, 5, 1, "", "nodal_complex_current_balance_hess"], [416, 5, 1, "", "nodal_complex_power_balance"], [416, 5, 1, "", "nodal_complex_power_balance_hess"], [416, 5, 1, "", "port_inj_nln"], [416, 5, 1, "", "port_inj_nln_hess"], [416, 5, 1, "", "port_inj_soln"]], "mp.net_model_acc": [[417, 5, 1, "", "def_set_types"], [417, 5, 1, "", "initial_voltage_angle"], [417, 5, 1, "", "net_model_acc"]], "mp.net_model_acp": [[418, 5, 1, "", "def_set_types"], [418, 5, 1, "", "initial_voltage_angle"], [418, 5, 1, "", "net_model_acp"]], "mp.net_model_dc": [[419, 5, 1, "", "build_params"], [419, 5, 1, "", "def_set_types"], [419, 5, 1, "", "net_model_dc"], [419, 5, 1, "", "port_inj_soln"], [419, 3, 1, "", "va"], [419, 3, 1, "", "z"]], "mp.nm_element": [[420, 3, 1, "", "C"], [420, 3, 1, "", "D"], [420, 5, 1, "", "add_nodes"], [420, 5, 1, "", "add_states"], [420, 5, 1, "", "add_vvars"], [420, 5, 1, "", "add_zvars"], [420, 5, 1, "", "build_params"], [420, 5, 1, "", "count"], [420, 5, 1, "", "data_model_element"], [420, 5, 1, "", "display"], [420, 5, 1, "", "get_nv_"], [420, 5, 1, "", "incidence_matrix"], [420, 5, 1, "", "math_model_element"], [420, 5, 1, "", "name"], [420, 3, 1, "", "nk"], [420, 5, 1, "", "nn"], [420, 5, 1, "", "node_indices"], [420, 5, 1, "", "node_types"], [420, 5, 1, "", "np"], [420, 5, 1, "", "nz"], [420, 5, 1, "", "set_node_type_pq"], [420, 5, 1, "", "set_node_type_pv"], [420, 5, 1, "", "set_node_type_ref"], [420, 3, 1, "", "soln"], [420, 5, 1, "", "x2vz"]], "mp.nme_branch": [[421, 5, 1, "", "name"], [421, 5, 1, "", "np"]], "mp.nme_branch_ac": [[422, 5, 1, "", "build_params"]], "mp.nme_branch_acc": [[423, 5, 1, "", "ang_diff_fcn"], [423, 5, 1, "", "ang_diff_hess"]], "mp.nme_branch_dc": [[425, 5, 1, "", "build_params"]], "mp.nme_bus": [[426, 5, 1, "", "name"], [426, 5, 1, "", "nn"], [426, 5, 1, "", "node_types"], [426, 5, 1, "", "set_node_type_pq"], [426, 5, 1, "", "set_node_type_pv"], [426, 5, 1, "", "set_node_type_ref"]], "mp.nme_bus3p": [[427, 5, 1, "", "name"], [427, 5, 1, "", "nn"], [427, 5, 1, "", "node_types"]], "mp.nme_bus3p_acc": [[428, 5, 1, "", "add_vvars"]], "mp.nme_bus3p_acp": [[429, 5, 1, "", "add_vvars"]], "mp.nme_bus_acc": [[430, 5, 1, "", "add_vvars"]], "mp.nme_bus_acp": [[431, 5, 1, "", "add_vvars"]], "mp.nme_bus_dc": [[432, 5, 1, "", "add_vvars"]], "mp.nme_buslink": [[433, 5, 1, "", "add_zvars"], [433, 5, 1, "", "build_params"], [433, 5, 1, "", "name"], [433, 5, 1, "", "np"], [433, 5, 1, "", "nz"], [433, 5, 1, "", "voltage_constraints"]], "mp.nme_gen": [[436, 5, 1, "", "name"], [436, 5, 1, "", "np"], [436, 5, 1, "", "nz"]], "mp.nme_gen3p": [[437, 5, 1, "", "add_zvars"], [437, 5, 1, "", "build_params"], [437, 5, 1, "", "name"], [437, 5, 1, "", "np"], [437, 5, 1, "", "nz"]], "mp.nme_gen_ac": [[440, 5, 1, "", "add_zvars"], [440, 5, 1, "", "build_params"]], "mp.nme_gen_dc": [[443, 5, 1, "", "add_zvars"], [443, 5, 1, "", "build_params"]], "mp.nme_legacy_dcline": [[444, 5, 1, "", "name"], [444, 5, 1, "", "np"], [444, 5, 1, "", "nz"]], "mp.nme_legacy_dcline_ac": [[445, 5, 1, "", "add_zvars"], [445, 5, 1, "", "build_params"]], "mp.nme_legacy_dcline_dc": [[448, 5, 1, "", "add_zvars"], [448, 5, 1, "", "build_params"]], "mp.nme_line3p": [[449, 5, 1, "", "build_params"], [449, 5, 1, "", "name"], [449, 5, 1, "", "np"], [449, 5, 1, "", "vec2symmat_stacked"]], "mp.nme_load": [[450, 5, 1, "", "name"], [450, 5, 1, "", "np"]], "mp.nme_load3p": [[451, 5, 1, "", "build_params"], [451, 5, 1, "", "name"], [451, 5, 1, "", "np"]], "mp.nme_load_ac": [[452, 5, 1, "", "build_params"], [452, 5, 1, "", "port_inj_current_nln"], [452, 5, 1, "", "port_inj_power_nln"]], "mp.nme_load_dc": [[455, 5, 1, "", "build_params"]], "mp.nme_shunt": [[456, 5, 1, "", "name"], [456, 5, 1, "", "np"]], "mp.nme_shunt_ac": [[457, 5, 1, "", "build_params"]], "mp.nme_shunt_dc": [[460, 5, 1, "", "build_params"]], "mp.nme_xfmr3p": [[461, 5, 1, "", "build_params"], [461, 5, 1, "", "name"], [461, 5, 1, "", "np"]], "mp.set_manager": [[106, 3, 1, "", "N"], [106, 3, 1, "", "NS"], [106, 5, 1, "", "add"], [106, 5, 1, "", "copy"], [106, 3, 1, "", "data"], [106, 5, 1, "", "describe_idx"], [106, 5, 1, "", "display"], [106, 5, 1, "", "get_N"], [106, 3, 1, "", "idx"], [106, 5, 1, "", "init_indexed_name"], [106, 3, 1, "", "label"], [106, 3, 1, "", "order"], [106, 5, 1, "", "set_manager"], [106, 5, 1, "", "set_type_idx_map"]], "mp.set_manager_opt_model": [[107, 5, 1, "", "display_soln"], [107, 5, 1, "", "has_parsed_soln"], [107, 5, 1, "", "params"], [107, 5, 1, "", "parse_soln"], [107, 5, 1, "", "set_manager_opt_model"], [107, 5, 1, "", "set_params"], [107, 3, 1, "", "soln"]], "mp.sm_legacy_cost": [[462, 3, 1, "", "cache"], [462, 5, 1, "", "sm_legacy_cost"]], "mp.sm_lin_constraint": [[108, 5, 1, "", "add"], [108, 3, 1, "", "cache"], [108, 5, 1, "", "display_soln"], [108, 5, 1, "", "eval"], [108, 5, 1, "", "get_soln"], [108, 5, 1, "", "params"], [108, 5, 1, "", "parse_soln"], [108, 5, 1, "", "set_params"], [108, 5, 1, "", "sm_lin_constraint"]], "mp.sm_nln_constraint": [[109, 5, 1, "", "add"], [109, 5, 1, "", "display_soln"], [109, 5, 1, "", "eval"], [109, 5, 1, "", "eval_hess"], [109, 5, 1, "", "get_soln"], [109, 5, 1, "", "params"], [109, 5, 1, "", "parse_soln"], [109, 5, 1, "", "set_params"], [109, 5, 1, "", "sm_nln_constraint"]], "mp.sm_nln_cost": [[110, 5, 1, "", "add"], [110, 5, 1, "", "display_soln"], [110, 5, 1, "", "eval"], [110, 5, 1, "", "get_soln"], [110, 5, 1, "", "params"], [110, 5, 1, "", "set_params"], [110, 5, 1, "", "sm_nln_cost"]], "mp.sm_quad_constraint": [[111, 5, 1, "", "add"], [111, 4, 1, "", "blkprod2vertcat"], [111, 3, 1, "", "cache"], [111, 5, 1, "", "display_soln"], [111, 5, 1, "", "eval"], [111, 5, 1, "", "get_soln"], [111, 5, 1, "", "params"], [111, 5, 1, "", "parse_soln"], [111, 5, 1, "", "set_params"], [111, 5, 1, "", "sm_quad_constraint"]], "mp.sm_quad_cost": [[112, 5, 1, "", "add"], [112, 3, 1, "", "cache"], [112, 5, 1, "", "display_soln"], [112, 5, 1, "", "eval"], [112, 5, 1, "", "get_soln"], [112, 5, 1, "", "params"], [112, 5, 1, "", "set_params"], [112, 5, 1, "", "sm_quad_cost"]], "mp.sm_variable": [[113, 5, 1, "", "add"], [113, 3, 1, "", "cache"], [113, 5, 1, "", "display_soln"], [113, 5, 1, "", "get_soln"], [113, 5, 1, "", "params"], [113, 5, 1, "", "parse_soln"], [113, 5, 1, "", "set_params"], [113, 5, 1, "", "sm_variable"], [113, 4, 1, "", "varsets_cell2struct"], [113, 5, 1, "", "varsets_idx"], [113, 5, 1, "", "varsets_len"], [113, 5, 1, "", "varsets_x"]], "mp.task": [[463, 5, 1, "", "data_model_build"], [463, 5, 1, "", "data_model_build_post"], [463, 5, 1, "", "data_model_build_pre"], [463, 5, 1, "", "data_model_class"], [463, 5, 1, "", "data_model_class_default"], [463, 5, 1, "", "data_model_create"], [463, 3, 1, "", "dm"], [463, 5, 1, "", "dm_converter_build"], [463, 5, 1, "", "dm_converter_class"], [463, 5, 1, "", "dm_converter_class_mpc2_default"], [463, 5, 1, "", "dm_converter_create"], [463, 3, 1, "", "dmc"], [463, 3, 1, "", "et"], [463, 3, 1, "", "i_dm"], [463, 3, 1, "", "i_mm"], [463, 3, 1, "", "i_nm"], [463, 5, 1, "", "load_dm"], [463, 5, 1, "", "math_model_build"], [463, 5, 1, "", "math_model_class"], [463, 5, 1, "", "math_model_class_default"], [463, 5, 1, "", "math_model_create"], [463, 5, 1, "", "math_model_opt"], [463, 3, 1, "", "message"], [463, 3, 1, "", "mm"], [463, 3, 1, "", "mm_opt"], [463, 3, 1, "", "name"], [463, 5, 1, "", "network_model_build"], [463, 5, 1, "", "network_model_build_post"], [463, 5, 1, "", "network_model_build_pre"], [463, 5, 1, "", "network_model_class"], [463, 5, 1, "", "network_model_class_default"], [463, 5, 1, "", "network_model_create"], [463, 5, 1, "", "network_model_update"], [463, 5, 1, "", "network_model_x_soln"], [463, 5, 1, "", "next_dm"], [463, 5, 1, "", "next_mm"], [463, 5, 1, "", "next_nm"], [463, 3, 1, "", "nm"], [463, 5, 1, "", "print_soln"], [463, 5, 1, "", "print_soln_header"], [463, 5, 1, "", "run"], [463, 5, 1, "", "run_post"], [463, 5, 1, "", "run_pre"], [463, 5, 1, "", "save_soln"], [463, 3, 1, "", "success"], [463, 3, 1, "", "tag"]], "mp.task_cpf": [[464, 5, 1, "", "data_model_build"], [464, 5, 1, "", "data_model_class_default"], [464, 5, 1, "", "dm_converter_class"], [464, 5, 1, "", "math_model_class_default"], [464, 5, 1, "", "math_model_opt"], [464, 5, 1, "", "network_model_build"], [464, 5, 1, "", "network_model_update"], [464, 5, 1, "", "network_model_x_soln"], [464, 5, 1, "", "next_mm"], [464, 5, 1, "", "run_pre"], [464, 5, 1, "", "task_cpf"], [464, 3, 1, "", "warmstart"]], "mp.task_cpf_legacy": [[465, 5, 1, "", "legacy_post_run"], [465, 5, 1, "", "run_post"], [465, 5, 1, "", "run_pre"]], "mp.task_opf": [[466, 5, 1, "", "data_model_build_post"], [466, 5, 1, "", "data_model_class_default"], [466, 3, 1, "", "dc"], [466, 5, 1, "", "math_model_class_default"], [466, 5, 1, "", "network_model_class_default"], [466, 5, 1, "", "print_soln_header"], [466, 5, 1, "", "run_pre"]], "mp.task_opf_legacy": [[467, 5, 1, "", "data_model_build_post"], [467, 5, 1, "", "dm_converter_class_mpc2_default"], [467, 5, 1, "", "legacy_post_run"], [467, 5, 1, "", "math_model_class_default"], [467, 5, 1, "", "run_post"], [467, 5, 1, "", "run_pre"]], "mp.task_pf": [[468, 3, 1, "", "dc"], [468, 5, 1, "", "enforce_q_lims"], [468, 3, 1, "", "fixed_q_idx"], [468, 3, 1, "", "fixed_q_qty"], [468, 3, 1, "", "iterations"], [468, 5, 1, "", "math_model_class_default"], [468, 3, 1, "", "name"], [468, 5, 1, "", "network_model_build_post"], [468, 5, 1, "", "network_model_class_default"], [468, 5, 1, "", "network_model_x_soln"], [468, 5, 1, "", "next_dm"], [468, 3, 1, "", "ref"], [468, 3, 1, "", "ref0"], [468, 5, 1, "", "run_pre"], [468, 3, 1, "", "tag"], [468, 3, 1, "", "va_ref0"]], "mp.task_pf_legacy": [[469, 5, 1, "", "legacy_post_run"], [469, 5, 1, "", "run_post"], [469, 5, 1, "", "run_pre"]], "mp.task_shared_legacy": [[470, 5, 1, "", "run_pre_legacy"]], "mp.xt_3p": [[471, 5, 1, "", "dm_element_classes"], [471, 5, 1, "", "dmc_element_classes"], [471, 5, 1, "", "mm_element_classes"], [471, 5, 1, "", "nm_element_classes"]], "mp.xt_legacy_dcline": [[472, 5, 1, "", "dm_element_classes"], [472, 5, 1, "", "dmc_element_classes"], [472, 5, 1, "", "mm_element_classes"], [472, 5, 1, "", "nm_element_classes"]], "mp.xt_oval_cap_curve": [[473, 5, 1, "", "mm_element_classes"]], "mp.xt_reserves": [[474, 5, 1, "", "dm_element_classes"], [474, 5, 1, "", "dmc_element_classes"], [474, 5, 1, "", "mm_element_classes"]], "mp_idx_manager": [[114, 5, 1, "", "add_named_set"], [114, 5, 1, "", "copy"], [114, 5, 1, "", "describe_idx"], [114, 5, 1, "", "display_set"], [114, 5, 1, "", "get"], [114, 5, 1, "", "getN"], [114, 5, 1, "", "get_idx"], [114, 5, 1, "", "get_userdata"], [114, 5, 1, "", "init_indexed_name"], [114, 5, 1, "", "init_set_types"], [114, 5, 1, "", "mp_idx_manager"], [114, 5, 1, "", "set_type_idx_map"], [114, 5, 1, "", "valid_named_set_type"]], "mp_table": [[475, 5, 1, "", "display"], [475, 5, 1, "", "end"], [475, 4, 1, "", "extract_named_args"], [475, 5, 1, "", "horzcat"], [475, 5, 1, "", "isempty"], [475, 5, 1, "", "istable"], [475, 5, 1, "", "mp_table"], [475, 5, 1, "", "size"], [475, 5, 1, "", "subsasgn"], [475, 5, 1, "", "subsref"], [475, 5, 1, "", "vertcat"]], "mp_table_subclass": [[476, 5, 1, "", "get_table"], [476, 5, 1, "", "set_table"]], "opf_model": [[487, 5, 1, "", "add_legacy_cost"], [487, 5, 1, "", "add_named_set"], [487, 3, 1, "", "cost"], [487, 5, 1, "", "def_set_types"], [487, 5, 1, "", "display"], [487, 5, 1, "", "eval_legacy_cost"], [487, 5, 1, "", "get_mpc"], [487, 5, 1, "", "init_set_types"], [487, 3, 1, "", "mpc"], [487, 5, 1, "", "opf_model"], [487, 5, 1, "", "params_legacy_cost"], [487, 5, 1, "", "set_mpc"]], "opt_model": [[115, 5, 1, "", "add_lin_constraint"], [115, 5, 1, "", "add_nln_constraint"], [115, 5, 1, "", "add_nln_cost"], [115, 5, 1, "", "add_quad_cost"], [115, 5, 1, "", "add_var"], [115, 5, 1, "", "copy"], [115, 5, 1, "", "def_set_types"], [115, 5, 1, "", "display"], [115, 5, 1, "", "display_soln"], [115, 5, 1, "", "eval_lin_constraint"], [115, 5, 1, "", "eval_nln_constraint"], [115, 5, 1, "", "eval_nln_constraint_hess"], [115, 5, 1, "", "eval_nln_cost"], [115, 5, 1, "", "eval_quad_cost"], [115, 5, 1, "", "get_idx"], [115, 5, 1, "", "get_soln"], [115, 5, 1, "", "has_parsed_soln"], [115, 5, 1, "", "init_indexed_name"], [115, 5, 1, "", "is_mixed_integer"], [115, 5, 1, "", "is_solved"], [115, 3, 1, "", "lin"], [115, 3, 1, "", "nlc"], [115, 3, 1, "", "nle"], [115, 3, 1, "", "nli"], [115, 5, 1, "", "opt_model"], [115, 5, 1, "", "params_lin_constraint"], [115, 5, 1, "", "params_nln_constraint"], [115, 5, 1, "", "params_nln_cost"], [115, 5, 1, "", "params_quad_cost"], [115, 5, 1, "", "params_var"], [115, 5, 1, "", "parse_soln"], [115, 3, 1, "", "prob_type"], [115, 5, 1, "", "problem_type"], [115, 3, 1, "", "qcn"], [115, 3, 1, "", "qdc"], [115, 5, 1, "", "set_params"], [115, 3, 1, "", "soln"], [115, 5, 1, "", "solve"], [115, 3, 1, "", "var"], [115, 5, 1, "", "varsets_cell2struct"], [115, 5, 1, "", "varsets_idx"], [115, 5, 1, "", "varsets_len"], [115, 5, 1, "", "varsets_x"]]}, "objtypes": {"0": "mat:function", "1": "mat:script", "2": "mat:class", "3": "mat:attribute", "4": "mat:staticmethod", "5": "mat:method"}, "objnames": {"0": ["mat", "function", "MATLAB function"], "1": ["mat", "script", "MATLAB script"], "2": ["mat", "class", "MATLAB class"], "3": ["mat", "attribute", "MATLAB attribute"], "4": ["mat", "staticmethod", "MATLAB static method"], "5": ["mat", "method", "MATLAB method"]}, "titleterms": {"acknowledg": [0, 256], "architectur": 1, "overview": [1, 21], "m": [1, 2, 5, 6, 12, 21, 258, 477, 485, 751, 753, 782, 783], "span": [1, 2, 5, 6, 12, 21, 258, 477, 485, 751, 753, 782, 783], "style": [1, 2, 5, 6, 12, 21, 258, 477, 485, 751, 753, 782, 783], "font": [1, 2, 5, 6, 12, 21, 258, 477, 485, 751, 753, 782, 783], "size": [1, 2, 5, 6, 12, 21, 258, 477, 485, 751, 753, 782, 783], "smaller": [1, 2, 5, 6, 12, 21, 258, 477, 485, 751, 753, 782, 783], "atpow": [1, 2, 5, 6, 12, 21, 258, 477, 485, 751, 753, 782, 783], "matpow": [1, 2, 5, 6, 12, 21, 258, 477, 485, 751, 753, 782, 783], "object": [1, 3, 4, 7, 8, 11], "instanc": 1, "class": [1, 2, 7, 240, 258, 751], "hierarchi": 1, "two": 1, "framework": [1, 783], "custom": [1, 2, 17], "default": 2, "determin": 2, "task": [2, 11, 17, 258, 463], "model": [2, 3, 4, 7, 8, 11, 17, 19, 239, 240, 258], "data": [2, 3, 4, 7, 17, 19, 20, 258, 751, 753], "convert": [2, 4, 11, 17, 19, 258], "specif": [2, 4], "method": [2, 3, 11], "element": [2, 3, 4, 7, 8, 17, 19, 258, 782], "modifi": 2, "via": [2, 12], "option": [2, 12, 240], "extens": [2, 12, 18, 19, 258, 314], "build": [3, 4, 7, 8, 11, 13, 17, 751], "system": 3, "level": [3, 477, 751], "paramet": [3, 8, 19], "print": [3, 17], "tabl": [3, 17], "properti": 3, "connect": [3, 17], "import": [4, 17], "export": [4, 17], "variabl": [4, 7, 17], "map": [4, 17], "valu": [4, 17], "develop": [5, 6], "": [5, 37, 104, 239, 256, 783], "manual": [5, 13, 21, 37, 104, 239, 256, 485, 783], "introduct": [6, 486], "environ": 6, "github": 6, "repositori": 6, "convent": 6, "mathemat": [7, 17, 19, 258], "solv": 7, "math": 7, "updat": [7, 13, 17], "network": [7, 8, 17, 19, 258], "ad": 7, "constraint": [7, 12, 258], "cost": 7, "share": 7, "formul": [8, 17, 19], "dc": [8, 17, 258], "ac": [8, 17, 19], "complex": 8, "power": [8, 17, 20, 751], "inject": 8, "current": [8, 782], "node": 8, "type": [8, 17, 19], "exampl": [8, 12, 20, 38, 105, 240, 258], "bu": 8, "gener": 8, "branch": 8, "load": 8, "aggreg": 8, "notat": 9, "refer": [10, 13, 37, 38, 104, 105, 239, 240, 257, 485], "run": [11, 20], "iter": 11, "execut": 11, "other": [11, 21, 38, 105, 257, 477, 751], "how": [12, 13, 17, 18, 20, 21], "add": 12, "an": [12, 18], "opf": [12, 17, 258, 617, 751, 782], "function": [12, 13, 17, 38, 105, 240, 257, 477, 751], "deriv": [12, 751, 782], "implement": [12, 240], "us": [12, 17, 18], "new": [12, 17, 783], "origin": 12, "box": 12, "capabl": 12, "curv": 12, "oval": 12, "see": [12, 17, 18], "also": [12, 17, 18], "document": [13, 21, 256], "util": [13, 240, 751], "generate_autodoc_stub": 14, "generate_matpower_autodoc": 15, "generate_source_symlink": 16, "creat": [17, 18], "transmiss": 17, "line": [17, 258], "name": 17, "main": [17, 38, 105], "output": [17, 751], "stage": 17, "pretti": 17, "subclass": 17, "field": 17, "sourc": 17, "all": [17, 19, 21], "cartesian": [17, 19, 782], "v": [17, 19], "polar": [17, 19], "flow": [17, 20, 751, 782], "optim": 17, "A": 19, "test": [19, 38, 105, 240, 256, 257, 751, 753], "gizmo": 19, "3": 19, "port": 19, "compon": 19, "three": [20, 258], "phase": [20, 258], "format": 20, "bus3p": 20, "line3p": 20, "xfmr3p": 20, "load3p": 20, "gen3p": 20, "lc": 20, "buslink": 20, "case": 20, "home": 21, "get": 21, "start": 21, "more": 21, "legaci": [21, 258, 751, 783], "pdf": 21, "To": 21, "guid": 21, "tech": 21, "note": [21, 782], "public": 21, "link": 21, "have_feature_lu_vec": 22, "have_feature_pardiso": 23, "have_feature_pardiso_legaci": 24, "have_feature_pardiso_object": 25, "mip": [26, 37, 38], "mips_example1": 27, "mips_example2": 28, "mipsver": 29, "mplinsolv": 30, "qps_mip": 31, "t_mip": 32, "t_mips_pardiso": 33, "t_mplinsolv": 34, "t_qps_mip": 35, "test_mip": 36, "user": [37, 104, 239, 256, 258, 751, 783], "privat": [38, 105, 240, 257, 751], "addgen2mpc": 39, "addstorag": 40, "addwind": 41, "apply_profil": 42, "c118swf": 43, "ex_case3a": 44, "ex_case3b": 45, "ex_contab": 46, "ex_load_profil": 47, "ex_storag": 48, "ex_transmat": 49, "ex_wind": 50, "ex_wind_profil": 51, "ex_wind_profile_d": 52, "ex_wind_uc": 53, "ex_xgd": 54, "ex_xgd_ramp": 55, "ex_xgd_r": 56, "ex_xgd_uc": 57, "filter_ramp_transit": 58, "getprofil": 59, "idx_profil": 60, "loadgenericdata": 61, "loadmd": 62, "loadstoragedata": 63, "loadxgendata": 64, "md_init": 65, "most": [66, 104, 105], "most_ex1_": 67, "most_ex2_dcopf": 68, "most_ex3_dcopf_w_uc": 69, "most_ex4_dcopf_ss": 70, "most_ex5_mpopf": 71, "most_ex6_uc": 72, "most_ex7_suc": 73, "most_summari": 74, "mostver": 75, "mpoption_info_most": 76, "plot_gen": 77, "plot_storag": 78, "plot_uc": 79, "plot_uc_data": 80, "t_case30_most": 81, "t_case3_most": 82, "t_case_tlmp": 83, "t_case_tlmp_storag": 84, "t_most_30b_1_1_0": 85, "t_most_30b_1_1_0_uc": 86, "t_most_30b_1_1_17": 87, "t_most_30b_3_1_0": 88, "t_most_30b_3_1_17": 89, "t_most_3b_1_1_0": 90, "t_most_3b_1_1_2": 91, "t_most_3b_3_1_0": 92, "t_most_3b_3_1_2": 93, "t_most_fixed_r": 94, "t_most_mpopf": 95, "t_most_sp": 96, "t_most_spuc": 97, "t_most_suc": 98, "t_most_tlmp": 99, "t_most_uc": 100, "t_most_w_d": 101, "test_most": 102, "uniformwindprofil": 103, "mp": [106, 107, 108, 109, 110, 111, 112, 113, 239, 240, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 782], "set_manag": 106, "set_manager_opt_model": 107, "sm_lin_constraint": 108, "sm_nln_constraint": 109, "sm_nln_cost": 110, "sm_quad_constraint": 111, "sm_quad_cost": 112, "sm_variabl": 113, "mp_idx_manag": 114, "opt_model": 115, "artelys_knitro_opt": 116, "convert_constraint_multipli": 117, "convert_lin_constraint": 118, "convert_lin_constraint_multipli": 119, "convert_quad_constraint": 120, "cplex_opt": 121, "glpk_option": 122, "gurobi_opt": 123, "gurobiv": 124, "have_feature_bpmpd": 125, "have_feature_catchm": 126, "have_feature_clp": 127, "have_feature_cplex": 128, "have_feature_evalc": 129, "have_feature_fmincon": 130, "have_feature_fmincon_ipm": 131, "have_feature_fsolv": 132, "have_feature_glpk": 133, "have_feature_gurobi": 134, "have_feature_intlinprog": 135, "have_feature_ipopt": 136, "have_feature_ipopt_auxdata": 137, "have_feature_isequaln": 138, "have_feature_knitro": 139, "have_feature_knitromatlab": 140, "have_feature_ktrlink": 141, "have_feature_linprog": 142, "have_feature_linprog_d": 143, "have_feature_mosek": 144, "have_feature_opti_clp": 145, "have_feature_optim": 146, "have_feature_optimopt": 147, "have_feature_osqp": 148, "have_feature_quadprog": 149, "have_feature_quadprog_l": 150, "have_feature_sdpt3": 151, "have_feature_sedumi": 152, "have_feature_yalmip": 153, "ipopt_opt": 154, "knitrov": 155, "miqps_cplex": 156, "miqps_glpk": 157, "miqps_gurobi": 158, "miqps_mast": 159, "miqps_mosek": 160, "miqps_ot": 161, "mosek_opt": 162, "mosek_symbcon": 163, "mpomver": 164, "mpopt2nleqopt": 165, "mpopt2nlpopt": 166, "mpopt2pneopt": 167, "mpopt2qcqpopt": 168, "mpopt2qpopt": 169, "nested_struct_copi": 170, "nleqs_cor": 171, "nleqs_fd_newton": 172, "nleqs_fsolv": 173, "nleqs_gauss_seidel": 174, "nleqs_mast": 175, "nleqs_master_ex1": 176, "nleqs_master_ex2": 177, "nleqs_newton": 178, "nlp_consfcn": 179, "nlp_costfcn": 180, "nlp_hessfcn": 181, "nlps_fmincon": 182, "nlps_ipopt": 183, "nlps_knitro": 184, "nlps_master": 185, "nlps_master_ex1": 186, "nlps_master_ex2": 187, "osqp_opt": 188, "osqpver": 189, "pne_callback_default": 190, "pne_callback_nos": 191, "pne_callback_target_lam": 192, "pne_detect_ev": 193, "pne_detected_ev": 194, "pne_event_nos": 195, "pne_event_target_lam": 196, "pne_ex1": 197, "pne_pfcn_arc_len": 198, "pne_pfcn_natur": 199, "pne_pfcn_pseudo_arc_len": 200, "pne_register_callback": 201, "pne_register_ev": 202, "pnes_mast": 203, "qcqp_ex1": 204, "qcqp_nlp_consfcn": 205, "qcqp_nlp_costfcn": 206, "qcqp_nlp_hessfcn": 207, "qcqps_gurobi": 208, "qcqps_knitro": 209, "qcqps_master": 210, "qp_ex1": 211, "qps_bpmpd": 212, "qps_clp": 213, "qps_cplex": 214, "qps_glpk": 215, "qps_gurobi": 216, "qps_ipopt": 217, "qps_knitro": 218, "qps_master": 219, "qps_mosek": 220, "qps_osqp": 221, "qps_ot": 222, "t_miqps_mast": 223, "t_nested_struct_copi": 224, "t_nleqs_mast": 225, "t_nlps_master": 226, "t_om_solve_leq": 227, "t_om_solve_miqp": 228, "t_om_solve_nleq": 229, "t_om_solve_nlp": 230, "t_om_solve_pn": 231, "t_om_solve_qcqp": 232, "t_om_solve_qp": 233, "t_opt_model": 234, "t_pnes_mast": 235, "t_qcqps_master": 236, "t_qps_master": 237, "test_mp_opt_model": 238, "opt": [239, 240], "mpom": [239, 240], "master": 240, "handl": 240, "version": [240, 752], "inform": 240, "solver": [240, 751], "interfac": 240, "miqp": [240, 751], "nleq": 240, "nlp": 240, "pne": 240, "lp": [240, 751], "qp": [240, 751], "qcqp": 240, "have_featur": 241, "have_feature_matlab": 242, "have_feature_octav": 243, "mptestver": 244, "t_begin": 245, "t_end": 246, "t_file_match": 247, "t_have_featur": 248, "t_i": 249, "t_ok": 250, "t_run_test": 251, "t_skip": 252, "t_str_match": 253, "t_test_fcn": 254, "test_mptest": 255, "instal": [256, 477], "usag": 256, "contribut": 256, "licens": 256, "core": 258, "contain": 258, "mixin": 258, "miscellan": 258, "base": 258, "fix": 258, "zonal": 258, "reserv": 258, "prototyp": 258, "node_typ": 259, "cost_tabl": 260, "cost_table_util": 261, "data_model": 262, "data_model_cpf": 263, "data_model_opf": 264, "dm_convert": 265, "dm_converter_mpc2": 266, "dm_converter_mpc2_legaci": 267, "dm_element": 268, "dmc_element": 269, "dmce_branch_mpc2": 270, "dmce_bus3p_mpc2": 271, "dmce_bus_mpc2": 272, "dmce_buslink_mpc2": 273, "dmce_gen3p_mpc2": 274, "dmce_gen_mpc2": 275, "dmce_legacy_dcline_mpc2": 276, "dmce_line3p_mpc2": 277, "dmce_load3p_mpc2": 278, "dmce_load_mpc2": 279, "dmce_reserve_gen_mpc2": 280, "dmce_reserve_zone_mpc2": 281, "dmce_shunt_mpc2": 282, "dmce_xfmr3p_mpc2": 283, "dme_branch": 284, "dme_branch_opf": 285, "dme_bu": 286, "dme_bus3p": 287, "dme_bus3p_opf": 288, "dme_bus_opf": 289, "dme_buslink": 290, "dme_buslink_opf": 291, "dme_gen": 292, "dme_gen3p": 293, "dme_gen3p_opf": 294, "dme_gen_opf": 295, "dme_legacy_dclin": 296, "dme_legacy_dcline_opf": 297, "dme_line3p": 298, "dme_line3p_opf": 299, "dme_load": 300, "dme_load3p": 301, "dme_load3p_opf": 302, "dme_load_cpf": 303, "dme_load_opf": 304, "dme_reserve_gen": 305, "dme_reserve_zon": 306, "dme_shared_opf": 307, "dme_shunt": 308, "dme_shunt_cpf": 309, "dme_shunt_opf": 310, "dme_xfmr3p": 311, "dme_xfmr3p_opf": 312, "element_contain": 313, "form": 315, "form_ac": 316, "form_acc": 317, "form_acp": 318, "form_dc": 319, "mapped_arrai": 320, "math_model": 321, "math_model_cpf_acc": [322, 324], "math_model_cpf_acci": 323, "math_model_cpf_acp": [325, 327], "math_model_cpf_acpi": 326, "math_model_opf": 328, "math_model_opf_ac": 329, "math_model_opf_acc": [330, 333], "math_model_opf_acci": 331, "math_model_opf_acci_legaci": 332, "math_model_opf_accs_legaci": 334, "math_model_opf_acp": [335, 338], "math_model_opf_acpi": 336, "math_model_opf_acpi_legaci": 337, "math_model_opf_acps_legaci": 339, "math_model_opf_dc": 340, "math_model_opf_dc_legaci": 341, "math_model_pf": 342, "math_model_pf_ac": 343, "math_model_pf_acci": 344, "math_model_pf_acc": 345, "math_model_pf_acpi": 346, "math_model_pf_acp": 347, "math_model_pf_dc": 348, "mm_element": 349, "mm_shared_opf_legaci": 350, "mm_shared_pfcpf": 351, "mm_shared_pfcpf_ac": 352, "mm_shared_pfcpf_ac_i": 353, "mm_shared_pfcpf_acc": [354, 356], "mm_shared_pfcpf_acci": 355, "mm_shared_pfcpf_acp": [357, 359], "mm_shared_pfcpf_acpi": 358, "mm_shared_pfcpf_dc": 360, "mme_branch": 361, "mme_branch_opf": 362, "mme_branch_opf_ac": 363, "mme_branch_opf_acc": 364, "mme_branch_opf_acp": 365, "mme_branch_opf_dc": 366, "mme_branch_pf_ac": 367, "mme_branch_pf_dc": 368, "mme_bu": 369, "mme_bus3p": 370, "mme_bus3p_opf_acc": 371, "mme_bus3p_opf_acp": 372, "mme_bus_opf_ac": 373, "mme_bus_opf_acc": 374, "mme_bus_opf_acp": 375, "mme_bus_opf_dc": 376, "mme_bus_pf_ac": 377, "mme_bus_pf_dc": 378, "mme_buslink": 379, "mme_buslink_opf": 380, "mme_buslink_opf_acc": 381, "mme_buslink_opf_acp": 382, "mme_buslink_pf_ac": 383, "mme_buslink_pf_acc": 384, "mme_buslink_pf_acp": 385, "mme_gen": 386, "mme_gen3p": 387, "mme_gen3p_opf": 388, "mme_gen_opf": 389, "mme_gen_opf_ac": 390, "mme_gen_opf_ac_ov": 391, "mme_gen_opf_dc": 392, "mme_gen_pf_ac": 393, "mme_gen_pf_dc": 394, "mme_legacy_dclin": 395, "mme_legacy_dcline_opf": 396, "mme_legacy_dcline_opf_ac": 397, "mme_legacy_dcline_opf_dc": 398, "mme_legacy_dcline_pf_ac": 399, "mme_legacy_dcline_pf_dc": 400, "mme_line3p": 401, "mme_line3p_opf": 402, "mme_load": 403, "mme_load_cpf": 404, "mme_load_pf_ac": 405, "mme_load_pf_dc": 406, "mme_reserve_gen": 407, "mme_reserve_zon": 408, "mme_shunt": 409, "mme_shunt_cpf": 410, "mme_shunt_pf_ac": 411, "mme_shunt_pf_dc": 412, "mme_xfmr3p": 413, "mme_xfmr3p_opf": 414, "net_model": 415, "net_model_ac": 416, "net_model_acc": 417, "net_model_acp": 418, "net_model_dc": 419, "nm_element": 420, "nme_branch": 421, "nme_branch_ac": 422, "nme_branch_acc": 423, "nme_branch_acp": 424, "nme_branch_dc": 425, "nme_bu": 426, "nme_bus3p": 427, "nme_bus3p_acc": 428, "nme_bus3p_acp": 429, "nme_bus_acc": 430, "nme_bus_acp": 431, "nme_bus_dc": 432, "nme_buslink": 433, "nme_buslink_acc": 434, "nme_buslink_acp": 435, "nme_gen": 436, "nme_gen3p": 437, "nme_gen3p_acc": 438, "nme_gen3p_acp": 439, "nme_gen_ac": 440, "nme_gen_acc": 441, "nme_gen_acp": 442, "nme_gen_dc": 443, "nme_legacy_dclin": 444, "nme_legacy_dcline_ac": 445, "nme_legacy_dcline_acc": 446, "nme_legacy_dcline_acp": 447, "nme_legacy_dcline_dc": 448, "nme_line3p": 449, "nme_load": 450, "nme_load3p": 451, "nme_load_ac": 452, "nme_load_acc": 453, "nme_load_acp": 454, "nme_load_dc": 455, "nme_shunt": 456, "nme_shunt_ac": 457, "nme_shunt_acc": 458, "nme_shunt_acp": 459, "nme_shunt_dc": 460, "nme_xfmr3p": 461, "sm_legacy_cost": 462, "task_cpf": 464, "task_cpf_legaci": 465, "task_opf": 466, "task_opf_legaci": 467, "task_pf": 468, "task_pf_legaci": 469, "task_shared_legaci": 470, "xt_3p": 471, "xt_legacy_dclin": 472, "xt_oval_cap_curv": 473, "xt_reserv": 474, "mp_tabl": 475, "mp_table_subclass": 476, "limit": 476, "top": [477, 751], "simul": [477, 751], "install_matpow": 478, "load_dm": 479, "mp_table_class": 480, "run_cpf": 481, "run_mp": 482, "run_opf": 483, "run_pf": 484, "opf_model": 487, "add_userfcn": 488, "apply_chang": 489, "bustyp": 490, "calc_branch_angl": 491, "calc_v_i_sum": 492, "calc_v_pq_sum": 493, "calc_v_y_sum": 494, "case_info": 495, "caseformat": 496, "cdf2mpc": 497, "compare_cas": 498, "connected_compon": 499, "cpf_corrector": 500, "cpf_current_mpc": 501, "cpf_default_callback": 502, "cpf_detect_ev": 503, "cpf_flim_ev": 504, "cpf_flim_event_cb": 505, "cpf_nose_ev": 506, "cpf_nose_event_cb": 507, "cpf_p": 508, "cpf_p_jac": 509, "cpf_plim_ev": 510, "cpf_plim_event_cb": 511, "cpf_predictor": 512, "cpf_qlim_ev": 513, "cpf_qlim_event_cb": 514, "cpf_register_callback": 515, "cpf_register_ev": 516, "cpf_tangent": 517, "cpf_target_lam_ev": 518, "cpf_target_lam_event_cb": 519, "cpf_vlim_ev": 520, "cpf_vlim_event_cb": 521, "d2abr_dv2": 522, "d2ibr_dv2": 523, "d2imis_dv2": 524, "d2imis_dvdsg": 525, "d2sbr_dv2": 526, "d2sbus_dv2": 527, "dabr_dv": 528, "dibr_dv": 529, "dimis_dv": 530, "dsbr_dv": 531, "dsbus_dv": 532, "dcopf": 533, "dcopf_solv": 534, "dcpf": 535, "define_const": 536, "e2i_data": 537, "e2i_field": 538, "ext2int": 539, "extract_island": 540, "fdpf": 541, "feval_w_path": 542, "find_bridg": 543, "find_island": 544, "fmincopf": 545, "gausspf": 546, "genfuel": 547, "gentyp": 548, "get_loss": 549, "get_reord": 550, "haspqcap": 551, "have_feature_e4st": 552, "have_feature_minopf": 553, "have_feature_most": 554, "have_feature_mp_cor": 555, "have_feature_pdipmopf": 556, "have_feature_regexp_split": 557, "have_feature_scpdipmopf": 558, "have_feature_sdp_pf": 559, "have_feature_smartmarket": 560, "have_feature_syngrid": 561, "have_feature_t": 562, "have_feature_tralmopf": 563, "i2e_data": 564, "i2e_field": 565, "idx_brch": 566, "idx_bu": 567, "idx_cost": 568, "idx_ct": 569, "idx_dclin": 570, "idx_gen": 571, "int2ext": 572, "isload": 573, "load2disp": 574, "loadcas": 575, "loadsh": 576, "makeaang": 577, "makeapq": 578, "makeavl": 579, "makeai": 580, "makeb": 581, "makebdc": 582, "makejac": 583, "makelodf": 584, "makeptdf": 585, "makesbu": 586, "makesdzip": 587, "makeybu": 588, "make_vcorr": 589, "make_zpv": 590, "margcost": 591, "miqps_matpow": 592, "modcost": 593, "mpoption": 594, "mpoption_info_clp": 595, "mpoption_info_cplex": 596, "mpoption_info_fmincon": 597, "mpoption_info_glpk": 598, "mpoption_info_gurobi": 599, "mpoption_info_intlinprog": 600, "mpoption_info_ipopt": 601, "mpoption_info_knitro": 602, "mpoption_info_linprog": 603, "mpoption_info_mip": 604, "mpoption_info_mosek": 605, "mpoption_info_osqp": 606, "mpoption_info_quadprog": 607, "mpoption_old": 608, "mpver": 609, "newtonpf": 610, "newtonpf_i_cart": 611, "newtonpf_i_hybrid": 612, "newtonpf_i_polar": 613, "newtonpf_s_cart": 614, "newtonpf_s_hybrid": 615, "nlpopf_solv": 616, "opf_arg": 618, "opf_branch_ang_fcn": 619, "opf_branch_ang_hess": 620, "opf_branch_flow_fcn": 621, "opf_branch_flow_hess": 622, "opf_current_balance_fcn": 623, "opf_current_balance_hess": 624, "opf_execut": 625, "opf_gen_cost_fcn": 626, "opf_legacy_user_cost_fcn": 627, "opf_nle_fcn1": 628, "opf_nle_hess1": 629, "opf_power_balance_fcn": 630, "opf_power_balance_hess": 631, "opf_setup": 632, "opf_veq_fcn": 633, "opf_veq_hess": 634, "opf_vlim_fcn": 635, "opf_vlim_hess": 636, "opf_vref_fcn": 637, "opf_vref_hess": 638, "order_radi": 639, "pfsoln": 640, "poly2pwl": 641, "polycost": 642, "pqcost": 643, "printpf": 644, "psse2mpc": 645, "psse_convert": 646, "psse_convert_hvdc": 647, "psse_convert_xfmr": 648, "psse_pars": 649, "psse_parse_lin": 650, "psse_parse_sect": 651, "psse_read": 652, "qps_matpow": 653, "radial_pf": 654, "remove_userfcn": 655, "run_userfcn": 656, "runcpf": 657, "rundcopf": 658, "rundcpf": 659, "runduopf": 660, "runopf": 661, "runopf_w_r": 662, "runpf": 663, "runuopf": 664, "save2pss": 665, "savecas": 666, "savechgtab": 667, "scale_load": 668, "set_reord": 669, "t_apply_chang": 670, "t_auction_cas": 671, "t_auction_minopf": 672, "t_auction_mip": 673, "t_auction_tspopf_pdipm": 674, "t_case30_userfcn": 675, "t_case9_dclin": 676, "t_case9_opf": 677, "t_case9_opfv2": 678, "t_case9_pf": 679, "t_case9_pfv2": 680, "t_case9_save2pss": 681, "t_case_ext": 682, "t_case_int": 683, "t_chgtab": 684, "t_cpf": 685, "t_cpf_cb1": 686, "t_cpf_cb2": 687, "t_dcline": 688, "t_ext2int2ext": 689, "t_feval_w_path": 690, "t_get_loss": 691, "t_haspqcap": 692, "t_hessian": 693, "t_island": 694, "t_jacobian": 695, "t_load2disp": 696, "t_loadcas": 697, "t_makelodf": 698, "t_makeptdf": 699, "t_margcost": 700, "t_miqps_matpow": 701, "t_modcost": 702, "t_mpoption": 703, "t_mpoption_ov": 704, "t_off2cas": 705, "t_opf_dc_bpmpd": 706, "t_opf_dc_clp": 707, "t_opf_dc_cplex": 708, "t_opf_dc_default": 709, "t_opf_dc_glpk": 710, "t_opf_dc_gurobi": 711, "t_opf_dc_ipopt": 712, "t_opf_dc_mip": 713, "t_opf_dc_mips_sc": 714, "t_opf_dc_mosek": 715, "t_opf_dc_osqp": 716, "t_opf_dc_ot": 717, "t_opf_default": 718, "t_opf_fmincon": 719, "t_opf_ipopt": 720, "t_opf_knitro": 721, "t_opf_minopf": 722, "t_opf_mip": 723, "t_opf_model": 724, "t_opf_softlim": 725, "t_opf_tspopf_pdipm": 726, "t_opf_tspopf_scpdipm": 727, "t_opf_tspopf_tralm": 728, "t_opf_userfcn": 729, "t_pf_ac": 730, "t_pf_dc": 731, "t_pf_radial": 732, "t_printpf": 733, "t_psse": 734, "t_qps_matpow": 735, "t_runmarket": 736, "t_runopf_w_r": 737, "t_scale_load": 738, "t_total_load": 739, "t_totcost": 740, "t_vdep_load": 741, "toggle_dclin": 742, "toggle_iflim": 743, "toggle_reserv": 744, "toggle_softlim": 745, "total_load": 746, "totcost": 747, "uopf": 748, "update_mupq": 749, "zgausspf": 750, "input": 751, "convers": 751, "continu": 751, "wrapper": 751, "callback": 751, "milp": 751, "matrix": 751, "featur": 751, "detect": 751, "previou": 752, "mp_foo_tabl": 754, "t_case3p_a": 755, "t_case3p_b": 756, "t_case3p_c": 757, "t_case3p_d": 758, "t_case3p_": 759, "t_case3p_f": 760, "t_case3p_g": 761, "t_case3p_h": 762, "t_case9_gizmo": 763, "t_dmc_element": 764, "t_mp_data_model": 765, "t_mp_dm_converter_mpc2": 766, "t_mp_mapped_arrai": 767, "t_mp_tabl": 768, "t_mpxt_legacy_dclin": 769, "t_mpxt_reserv": 770, "t_nm_element": 771, "t_node_test": 772, "t_port_inj_current_acc": 773, "t_port_inj_current_acp": 774, "t_port_inj_power_acc": 775, "t_port_inj_power_acp": 776, "t_pretty_print": 777, "t_run_mp": 778, "t_run_mp_3p": 779, "t_run_opf_default": 780, "test_matpow": 781, "technic": 782, "tn1": 782, "auction": 782, "tn2": 782, "tn3": 782, "tn4": 782, "tn5": 782, "flexibl": 783}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Acknowledgments": [[0, "acknowledgments"], [256, "acknowledgments"]], "Architecture Overview": [[1, "architecture-overview"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Object Instances": [[1, "matpower-object-instances"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Class Hierarchies": [[1, "matpower-class-hierarchies"]], "Two M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Frameworks": [[1, "two-matpower-frameworks"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Customization": [[1, "matpower-customization"]], "Customizing M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{}": [[2, "customizing-matpower"]], "Default Class Determination": [[2, "default-class-determination"]], "Task Class": [[2, "task-class"]], "Model and Data Converter Classes": [[2, "model-and-data-converter-classes"]], "Class Specification Methods of a Task": [[2, "id7"]], "Element Classes": [[2, "element-classes"]], "Element Class Modifiers": [[2, "id8"]], "Customization via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Options": [[2, "customization-via-matpower-options"]], "Class Customization Options": [[2, "id9"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extensions": [[2, "matpower-extensions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Methods": [[2, "id10"]], "Data Model Object": [[3, "data-model-object"]], "Data Models": [[3, "data-models"]], "Building a Data Model": [[3, "building-a-data-model"]], "System Level Parameters": [[3, "system-level-parameters"]], "Printing a Data Model": [[3, "printing-a-data-model"]], "Data Model Elements": [[3, "data-model-elements"]], "Data Tables": [[3, "data-tables"]], "Properties": [[3, "properties"]], "Data Model Element Properties": [[3, "id6"]], "Methods": [[3, "methods"]], "Connections": [[3, "connections"]], "Data Model Converter Object": [[4, "data-model-converter-object"]], "Data Model Converters": [[4, "data-model-converters"]], "Building a Data Model Converter": [[4, "building-a-data-model-converter"]], "Importing Data": [[4, "importing-data"]], "Exporting Data": [[4, "exporting-data"]], "Data Model Converter Elements": [[4, "data-model-converter-elements"]], "Data Import Specifications": [[4, "data-import-specifications"]], "Variable Map Values": [[4, "id5"]], "Data Export Specifications": [[4, "data-export-specifications"]], "Introduction": [[6, "introduction"], [486, "introduction"]], "Development Environment": [[6, "development-environment"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} GitHub Repositories": [[6, "id1"]], "Conventions": [[6, "conventions"]], "Mathematical Model Object": [[7, "mathematical-model-object"]], "Mathematical Models": [[7, "mathematical-models"]], "Building a Mathematical Model": [[7, "building-a-mathematical-model"]], "Solving a Math Model": [[7, "solving-a-math-model"]], "Updating Network and Data Models": [[7, "updating-network-and-data-models"]], "Mathematical Model Elements": [[7, "mathematical-model-elements"]], "Adding Variables, Constraints, and Costs": [[7, "adding-variables-constraints-and-costs"]], "Updating Data Model Elements": [[7, "updating-data-model-elements"]], "Shared Classes": [[7, "shared-classes"]], "Network Model Object": [[8, "network-model-object"]], "Network Model Formulations": [[8, "network-model-formulations"]], "DC Formulation": [[8, "dc-formulation"], [17, "dc-formulation"]], "AC Formulations": [[8, "ac-formulations"], [17, "ac-formulations"], [19, "ac-formulations"]], "Complex Power Injections": [[8, "complex-power-injections"]], "Complex Current Injections": [[8, "complex-current-injections"]], "Network Models": [[8, "network-models"]], "Building a Network Model": [[8, "building-a-network-model"]], "Node Types": [[8, "node-types"]], "Network Model Elements": [[8, "network-model-elements"]], "Example Elements": [[8, "example-elements"]], "Bus": [[8, "bus"]], "Generator": [[8, "generator"]], "Branch": [[8, "branch"]], "Load": [[8, "load"]], "Building Element Parameters": [[8, "building-element-parameters"]], "Aggregation": [[8, "aggregation"]], "Notation": [[9, "notation"]], "References": [[10, "references"]], "Task Object": [[11, "task-object"]], "Running a Task": [[11, "running-a-task"]], "Building Model and Converter Objects": [[11, "building-model-and-converter-objects"]], "Iterative Execution": [[11, "iterative-execution"]], "Other Methods": [[11, "other-methods"]], "How to Add an OPF Constraint": [[12, "how-to-add-an-opf-constraint"]], "Function and Derivatives": [[12, "function-and-derivatives"]], "Implementation": [[12, "implementation"]], "Using the New Constraint": [[12, "using-the-new-constraint"]], "Example": [[12, "example"]], "Original \u201cbox\u201d capability curves": [[12, "original-box-capability-curves"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} options": [[12, "oval-capability-curves-via-matpower-options"]], "\u201cOval\u201d capability curves via M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} extension": [[12, "oval-capability-curves-via-matpower-extension"]], "See Also": [[12, "see-also"], [17, "see-also"], [18, "see-also"]], "How to Build the Documentation": [[13, "how-to-build-the-documentation"]], "Updating the Reference Manual": [[13, "updating-the-reference-manual"]], "Reference Manual Utility Functions": [[13, "reference-manual-utility-functions"]], "How to Create a New Element Type": [[17, "how-to-create-a-new-element-type"]], "DC Transmission Line": [[17, "dc-transmission-line"]], "Data Model Element": [[17, "data-model-element"], [19, "data-model-element"]], "DC Line Data Model": [[17, "id2"]], "Naming": [[17, "naming"]], "Connectivity": [[17, "connectivity"]], "Main Data Table": [[17, "main-data-table"]], "Output Values": [[17, "output-values"]], "Building the Element in Stages": [[17, "building-the-element-in-stages"]], "Pretty Printing": [[17, "pretty-printing"]], "OPF Subclass": [[17, "opf-subclass"]], "Data Model Converter Element": [[17, "data-model-converter-element"], [19, "data-model-converter-element"]], "Main Field in Data Source": [[17, "main-field-in-data-source"]], "Table Variable Map": [[17, "table-variable-map"]], "Custom Import/Export Functions": [[17, "custom-import-export-functions"]], "Network Model Element": [[17, "network-model-element"], [19, "network-model-element"]], "All Formulations": [[17, "all-formulations"], [19, "all-formulations"]], "AC Cartesian vs Polar Formulations": [[17, "ac-cartesian-vs-polar-formulations"], [19, "ac-cartesian-vs-polar-formulations"]], "Mathematical Model Element": [[17, "mathematical-model-element"], [19, "mathematical-model-element"]], "All Tasks and Formulations": [[17, "all-tasks-and-formulations"]], "Power Flow": [[17, "power-flow"]], "Optimal Power Flow": [[17, "optimal-power-flow"]], "Data Model Update": [[17, "data-model-update"]], "AC Optimal Power Flow": [[17, "ac-optimal-power-flow"]], "DC Optimal Power Flow": [[17, "dc-optimal-power-flow"]], "Using the New Element": [[17, "using-the-new-element"]], "How to Create an Extension": [[18, "how-to-create-an-extension"]], "Using the Extension": [[18, "using-the-extension"]], "A Test Gizmo Element Type": [[19, "a-test-gizmo-element-type"]], "3-Port Gizmo": [[19, "port-gizmo"]], "Gizmo Components/Parameters": [[19, "id2"]], "Gizmo Data Model": [[19, "id3"]], "Gizmo Extension": [[19, "gizmo-extension"]], "How to Run a Three-Phase Power Flow": [[20, "how-to-run-a-three-phase-power-flow"]], "Data Format": [[20, "data-format"]], "bus3p": [[20, "bus3p"]], "line3p": [[20, "line3p"]], "xfmr3p": [[20, "xfmr3p"]], "load3p": [[20, "load3p"]], "gen3p": [[20, "gen3p"]], "lc": [[20, "lc"]], "buslink": [[20, "buslink"]], "Example Cases": [[20, "example-cases"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Documentation": [[21, "matpower-documentation"]], "Home": [[21, null]], "Get Started": [[21, null]], "Overview": [[21, "overview"]], "Manuals": [[21, null]], "More Manuals": [[21, "more-manuals"]], "All Legacy PDF Manuals": [[21, "all-legacy-pdf-manuals"]], "How To Guides": [[21, null]], "Tech Notes": [[21, null]], "Publications": [[21, "publications"]], "Other Links": [[21, null]], "MIPS User\u2019s Manual": [[37, "mips-user-s-manual"]], "Reference": [[37, "reference"], [38, "reference"], [104, "reference"], [105, "reference"], [239, "reference"], [240, "reference"], [257, "reference"]], "Main MIPS Functions": [[38, "main-mips-functions"]], "Other Function": [[38, "other-function"]], "MIPS Examples": [[38, "mips-examples"]], "MIPS Tests": [[38, "mips-tests"]], "Private Functions": [[38, "private-functions"], [105, "private-functions"], [240, "private-functions"], [257, "private-functions"]], "MOST User\u2019s Manual": [[104, "most-user-s-manual"]], "Main MOST Functions": [[105, "main-most-functions"]], "Other Functions": [[105, "other-functions"], [257, "other-functions"], [477, "other-functions"], [751, "other-functions"]], "MOST Examples": [[105, "most-examples"]], "MOST Tests": [[105, "most-tests"]], "MP-Opt-Model\\mpom{} User\u2019s Manual": [[239, "mpom-user-s-manual"]], "MP-Opt-Model\\mpom{} Classes": [[240, "mpom-classes"]], "MP-Opt-Model\\mpom{} Functions": [[240, "mpom-functions"]], "Master Functions": [[240, "master-functions"]], "Utility Functions": [[240, "utility-functions"], [751, "utility-functions"]], "Options Handling Functions": [[240, "options-handling-functions"]], "Version Information Functions": [[240, "version-information-functions"]], "Solver Interfaces & Implementations": [[240, "solver-interfaces-implementations"]], "MIQP Solver": [[240, "miqp-solver"]], "NLEQ Solver": [[240, "nleq-solver"]], "NLP Solver": [[240, "nlp-solver"]], "PNE Solver": [[240, "pne-solver"]], "LP/QP Solver": [[240, "lp-qp-solver"]], "QCQP Solver": [[240, "qcqp-solver"]], "MP-Opt-Model\\mpom{} Examples": [[240, "mpom-examples"]], "MP-Opt-Model\\mpom{} Tests": [[240, "mpom-tests"]], "MP-Test User\u2019s Manual": [[256, "mp-test-user-s-manual"]], "Installation": [[256, "installation"]], "Usage": [[256, "usage"]], "Documentation": [[256, "documentation"]], "Contributing": [[256, "contributing"]], "License": [[256, "license"]], "Testing Functions": [[257, "testing-functions"]], "Tests of MP-Test": [[257, "tests-of-mp-test"]], "Classes": [[258, "classes"]], "Task Classes": [[258, "task-classes"]], "Core Task Classes": [[258, "core-task-classes"]], "Legacy Task Classes": [[258, "legacy-task-classes"]], "Data Model Classes": [[258, "data-model-classes"]], "Containers": [[258, "containers"], [258, "id1"], [258, "id3"], [258, "id5"]], "Elements": [[258, "elements"], [258, "id2"], [258, "id4"], [258, "id6"]], "Element Mixins": [[258, "element-mixins"]], "Data Model Converter Classes": [[258, "data-model-converter-classes"]], "Network Model Classes": [[258, "network-model-classes"]], "Mathematical Model Classes": [[258, "mathematical-model-classes"]], "Container Mixins": [[258, "container-mixins"]], "Miscellaneous Classes": [[258, "miscellaneous-classes"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Extension Classes": [[258, "matpower-extension-classes"]], "Base": [[258, "base"]], "OPF Fixed Zonal Reserves Extension": [[258, "opf-fixed-zonal-reserves-extension"]], "Three-Phase Prototype Extension": [[258, "three-phase-prototype-extension"]], "Legacy DC Line Extension": [[258, "legacy-dc-line-extension"]], "Example User Constraint Extension": [[258, "example-user-constraint-extension"]], "Functions": [[477, "functions"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Installer": [[477, "matpower-installer"]], "Top-Level Simulation Functions": [[477, "top-level-simulation-functions"], [751, "top-level-simulation-functions"]], "Legacy": [[751, "legacy"]], "Legacy Class": [[751, "legacy-class"]], "Legacy Functions": [[751, "legacy-functions"]], "Input/Output Functions": [[751, "input-output-functions"]], "Data Conversion Functions": [[751, "data-conversion-functions"]], "Power Flow Functions": [[751, "power-flow-functions"]], "Continuation Power Flow Functions": [[751, "continuation-power-flow-functions"]], "OPF and Wrapper Functions": [[751, "opf-and-wrapper-functions"]], "Other OPF Functions": [[751, "other-opf-functions"]], "OPF User Callback Functions": [[751, "opf-user-callback-functions"]], "Power Flow Derivative Functions": [[751, "power-flow-derivative-functions"]], "LP, QP, MILP & MIQP Solver Functions": [[751, "lp-qp-milp-miqp-solver-functions"]], "Matrix Building Functions": [[751, "matrix-building-functions"]], "Private Feature Detection Functions": [[751, "private-feature-detection-functions"]], "Legacy Tests": [[751, "legacy-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[751, "legacy-matpower-tests"]], "Legacy M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[751, "legacy-matpower-test-data"]], "Previous Versions": [[752, "previous-versions"]], "Tests": [[753, "tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Tests": [[753, "matpower-tests"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Test Data": [[753, "matpower-test-data"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Technical Notes": [[782, "matpower-technical-notes"]], "[TN1] Auctions and OPFs": [[782, "tn1-auctions-and-opfs"]], "[TN2] Flows/Derivatives": [[782, "tn2-flows-derivatives"]], "[TN3] Flows/Derivatives, Current": [[782, "tn3-flows-derivatives-current"]], "[TN4] Flows/Derivatives, Cartesian": [[782, "tn4-flows-derivatives-cartesian"]], "[TN5] MP-Element": [[782, "tn5-mp-element"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} User\u2019s Manual": [[783, "matpower-user-s-manual"]], "Legacy Framework": [[783, "legacy-framework"]], "New Flexible Framework": [[783, "new-flexible-framework"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Developer\u2019s Manual": [[5, "matpower-developer-s-manual"]], "generate_autodoc_stubs": [[14, "generate-autodoc-stubs"]], "generate_matpower_autodoc": [[15, "generate-matpower-autodoc"]], "generate_source_symlinks": [[16, "generate-source-symlinks"]], "have_feature_lu_vec": [[22, "have-feature-lu-vec"]], "have_feature_pardiso": [[23, "have-feature-pardiso"]], "have_feature_pardiso_legacy": [[24, "have-feature-pardiso-legacy"]], "have_feature_pardiso_object": [[25, "have-feature-pardiso-object"]], "mips": [[26, "mips"]], "mips_example1": [[27, "mips-example1"]], "mips_example2": [[28, "mips-example2"]], "mipsver": [[29, "mipsver"]], "mplinsolve": [[30, "mplinsolve"]], "qps_mips": [[31, "qps-mips"]], "t_mips": [[32, "t-mips"]], "t_mips_pardiso": [[33, "t-mips-pardiso"]], "t_mplinsolve": [[34, "t-mplinsolve"]], "t_qps_mips": [[35, "t-qps-mips"]], "test_mips": [[36, "test-mips"]], "addgen2mpc": [[39, "addgen2mpc"]], "addstorage": [[40, "addstorage"]], "addwind": [[41, "addwind"]], "apply_profile": [[42, "apply-profile"]], "c118swf": [[43, "c118swf"]], "ex_case3a": [[44, "ex-case3a"]], "ex_case3b": [[45, "ex-case3b"]], "ex_contab": [[46, "ex-contab"]], "ex_load_profile": [[47, "ex-load-profile"]], "ex_storage": [[48, "ex-storage"]], "ex_transmat": [[49, "ex-transmat"]], "ex_wind": [[50, "ex-wind"]], "ex_wind_profile": [[51, "ex-wind-profile"]], "ex_wind_profile_d": [[52, "ex-wind-profile-d"]], "ex_wind_uc": [[53, "ex-wind-uc"]], "ex_xgd": [[54, "ex-xgd"]], "ex_xgd_ramp": [[55, "ex-xgd-ramp"]], "ex_xgd_res": [[56, "ex-xgd-res"]], "ex_xgd_uc": [[57, "ex-xgd-uc"]], "filter_ramp_transitions": [[58, "filter-ramp-transitions"]], "getprofiles": [[59, "getprofiles"]], "idx_profile": [[60, "idx-profile"]], "loadgenericdata": [[61, "loadgenericdata"]], "loadmd": [[62, "loadmd"]], "loadstoragedata": [[63, "loadstoragedata"]], "loadxgendata": [[64, "loadxgendata"]], "md_init": [[65, "md-init"]], "most": [[66, "most"]], "most_ex1_ed": [[67, "most-ex1-ed"]], "most_ex2_dcopf": [[68, "most-ex2-dcopf"]], "most_ex3_dcopf_w_uc": [[69, "most-ex3-dcopf-w-uc"]], "most_ex4_dcopf_ss": [[70, "most-ex4-dcopf-ss"]], "most_ex5_mpopf": [[71, "most-ex5-mpopf"]], "most_ex6_uc": [[72, "most-ex6-uc"]], "most_ex7_suc": [[73, "most-ex7-suc"]], "most_summary": [[74, "most-summary"]], "mostver": [[75, "mostver"]], "mpoption_info_most": [[76, "mpoption-info-most"]], "plot_gen": [[77, "plot-gen"]], "plot_storage": [[78, "plot-storage"]], "plot_uc": [[79, "plot-uc"]], "plot_uc_data": [[80, "plot-uc-data"]], "t_case30_most": [[81, "t-case30-most"]], "t_case3_most": [[82, "t-case3-most"]], "t_case_tlmp": [[83, "t-case-tlmp"]], "t_case_tlmp_storage": [[84, "t-case-tlmp-storage"]], "t_most_30b_1_1_0": [[85, "t-most-30b-1-1-0"]], "t_most_30b_1_1_0_uc": [[86, "t-most-30b-1-1-0-uc"]], "t_most_30b_1_1_17": [[87, "t-most-30b-1-1-17"]], "t_most_30b_3_1_0": [[88, "t-most-30b-3-1-0"]], "t_most_30b_3_1_17": [[89, "t-most-30b-3-1-17"]], "t_most_3b_1_1_0": [[90, "t-most-3b-1-1-0"]], "t_most_3b_1_1_2": [[91, "t-most-3b-1-1-2"]], "t_most_3b_3_1_0": [[92, "t-most-3b-3-1-0"]], "t_most_3b_3_1_2": [[93, "t-most-3b-3-1-2"]], "t_most_fixed_res": [[94, "t-most-fixed-res"]], "t_most_mpopf": [[95, "t-most-mpopf"]], "t_most_sp": [[96, "t-most-sp"]], "t_most_spuc": [[97, "t-most-spuc"]], "t_most_suc": [[98, "t-most-suc"]], "t_most_tlmp": [[99, "t-most-tlmp"]], "t_most_uc": [[100, "t-most-uc"]], "t_most_w_ds": [[101, "t-most-w-ds"]], "test_most": [[102, "test-most"]], "uniformwindprofile": [[103, "uniformwindprofile"]], "mp.set_manager": [[106, "mp-set-manager"]], "mp.set_manager_opt_model": [[107, "mp-set-manager-opt-model"]], "mp.sm_lin_constraint": [[108, "mp-sm-lin-constraint"]], "mp.sm_nln_constraint": [[109, "mp-sm-nln-constraint"]], "mp.sm_nln_cost": [[110, "mp-sm-nln-cost"]], "mp.sm_quad_constraint": [[111, "mp-sm-quad-constraint"]], "mp.sm_quad_cost": [[112, "mp-sm-quad-cost"]], "mp.sm_variable": [[113, "mp-sm-variable"]], "mp_idx_manager": [[114, "mp-idx-manager"]], "opt_model": [[115, "opt-model"]], "artelys_knitro_options": [[116, "artelys-knitro-options"]], "convert_constraint_multipliers": [[117, "convert-constraint-multipliers"]], "convert_lin_constraint": [[118, "convert-lin-constraint"]], "convert_lin_constraint_multipliers": [[119, "convert-lin-constraint-multipliers"]], "convert_quad_constraint": [[120, "convert-quad-constraint"]], "cplex_options": [[121, "cplex-options"]], "glpk_options": [[122, "glpk-options"]], "gurobi_options": [[123, "gurobi-options"]], "gurobiver": [[124, "gurobiver"]], "have_feature_bpmpd": [[125, "have-feature-bpmpd"]], "have_feature_catchme": [[126, "have-feature-catchme"]], "have_feature_clp": [[127, "have-feature-clp"]], "have_feature_cplex": [[128, "have-feature-cplex"]], "have_feature_evalc": [[129, "have-feature-evalc"]], "have_feature_fmincon": [[130, "have-feature-fmincon"]], "have_feature_fmincon_ipm": [[131, "have-feature-fmincon-ipm"]], "have_feature_fsolve": [[132, "have-feature-fsolve"]], "have_feature_glpk": [[133, "have-feature-glpk"]], "have_feature_gurobi": [[134, "have-feature-gurobi"]], "have_feature_intlinprog": [[135, "have-feature-intlinprog"]], "have_feature_ipopt": [[136, "have-feature-ipopt"]], "have_feature_ipopt_auxdata": [[137, "have-feature-ipopt-auxdata"]], "have_feature_isequaln": [[138, "have-feature-isequaln"]], "have_feature_knitro": [[139, "have-feature-knitro"]], "have_feature_knitromatlab": [[140, "have-feature-knitromatlab"]], "have_feature_ktrlink": [[141, "have-feature-ktrlink"]], "have_feature_linprog": [[142, "have-feature-linprog"]], "have_feature_linprog_ds": [[143, "have-feature-linprog-ds"]], "have_feature_mosek": [[144, "have-feature-mosek"]], "have_feature_opti_clp": [[145, "have-feature-opti-clp"]], "have_feature_optim": [[146, "have-feature-optim"]], "have_feature_optimoptions": [[147, "have-feature-optimoptions"]], "have_feature_osqp": [[148, "have-feature-osqp"]], "have_feature_quadprog": [[149, "have-feature-quadprog"]], "have_feature_quadprog_ls": [[150, "have-feature-quadprog-ls"]], "have_feature_sdpt3": [[151, "have-feature-sdpt3"]], "have_feature_sedumi": [[152, "have-feature-sedumi"]], "have_feature_yalmip": [[153, "have-feature-yalmip"]], "ipopt_options": [[154, "ipopt-options"]], "knitrover": [[155, "knitrover"]], "miqps_cplex": [[156, "miqps-cplex"]], "miqps_glpk": [[157, "miqps-glpk"]], "miqps_gurobi": [[158, "miqps-gurobi"]], "miqps_master": [[159, "miqps-master"]], "miqps_mosek": [[160, "miqps-mosek"]], "miqps_ot": [[161, "miqps-ot"]], "mosek_options": [[162, "mosek-options"]], "mosek_symbcon": [[163, "mosek-symbcon"]], "mpomver": [[164, "mpomver"]], "mpopt2nleqopt": [[165, "mpopt2nleqopt"]], "mpopt2nlpopt": [[166, "mpopt2nlpopt"]], "mpopt2pneopt": [[167, "mpopt2pneopt"]], "mpopt2qcqpopt": [[168, "mpopt2qcqpopt"]], "mpopt2qpopt": [[169, "mpopt2qpopt"]], "nested_struct_copy": [[170, "nested-struct-copy"]], "nleqs_core": [[171, "nleqs-core"]], "nleqs_fd_newton": [[172, "nleqs-fd-newton"]], "nleqs_fsolve": [[173, "nleqs-fsolve"]], "nleqs_gauss_seidel": [[174, "nleqs-gauss-seidel"]], "nleqs_master": [[175, "nleqs-master"]], "nleqs_master_ex1": [[176, "nleqs-master-ex1"]], "nleqs_master_ex2": [[177, "nleqs-master-ex2"]], "nleqs_newton": [[178, "nleqs-newton"]], "nlp_consfcn": [[179, "nlp-consfcn"]], "nlp_costfcn": [[180, "nlp-costfcn"]], "nlp_hessfcn": [[181, "nlp-hessfcn"]], "nlps_fmincon": [[182, "nlps-fmincon"]], "nlps_ipopt": [[183, "nlps-ipopt"]], "nlps_knitro": [[184, "nlps-knitro"]], "nlps_master": [[185, "nlps-master"]], "nlps_master_ex1": [[186, "nlps-master-ex1"]], "nlps_master_ex2": [[187, "nlps-master-ex2"]], "osqp_options": [[188, "osqp-options"]], "osqpver": [[189, "osqpver"]], "pne_callback_default": [[190, "pne-callback-default"]], "pne_callback_nose": [[191, "pne-callback-nose"]], "pne_callback_target_lam": [[192, "pne-callback-target-lam"]], "pne_detect_events": [[193, "pne-detect-events"]], "pne_detected_event": [[194, "pne-detected-event"]], "pne_event_nose": [[195, "pne-event-nose"]], "pne_event_target_lam": [[196, "pne-event-target-lam"]], "pne_ex1": [[197, "pne-ex1"]], "pne_pfcn_arc_len": [[198, "pne-pfcn-arc-len"]], "pne_pfcn_natural": [[199, "pne-pfcn-natural"]], "pne_pfcn_pseudo_arc_len": [[200, "pne-pfcn-pseudo-arc-len"]], "pne_register_callbacks": [[201, "pne-register-callbacks"]], "pne_register_events": [[202, "pne-register-events"]], "pnes_master": [[203, "pnes-master"]], "qcqp_ex1": [[204, "qcqp-ex1"]], "qcqp_nlp_consfcn": [[205, "qcqp-nlp-consfcn"]], "qcqp_nlp_costfcn": [[206, "qcqp-nlp-costfcn"]], "qcqp_nlp_hessfcn": [[207, "qcqp-nlp-hessfcn"]], "qcqps_gurobi": [[208, "qcqps-gurobi"]], "qcqps_knitro": [[209, "qcqps-knitro"]], "qcqps_master": [[210, "qcqps-master"]], "qp_ex1": [[211, "qp-ex1"]], "qps_bpmpd": [[212, "qps-bpmpd"]], "qps_clp": [[213, "qps-clp"]], "qps_cplex": [[214, "qps-cplex"]], "qps_glpk": [[215, "qps-glpk"]], "qps_gurobi": [[216, "qps-gurobi"]], "qps_ipopt": [[217, "qps-ipopt"]], "qps_knitro": [[218, "qps-knitro"]], "qps_master": [[219, "qps-master"]], "qps_mosek": [[220, "qps-mosek"]], "qps_osqp": [[221, "qps-osqp"]], "qps_ot": [[222, "qps-ot"]], "t_miqps_master": [[223, "t-miqps-master"]], "t_nested_struct_copy": [[224, "t-nested-struct-copy"]], "t_nleqs_master": [[225, "t-nleqs-master"]], "t_nlps_master": [[226, "t-nlps-master"]], "t_om_solve_leqs": [[227, "t-om-solve-leqs"]], "t_om_solve_miqps": [[228, "t-om-solve-miqps"]], "t_om_solve_nleqs": [[229, "t-om-solve-nleqs"]], "t_om_solve_nlps": [[230, "t-om-solve-nlps"]], "t_om_solve_pne": [[231, "t-om-solve-pne"]], "t_om_solve_qcqps": [[232, "t-om-solve-qcqps"]], "t_om_solve_qps": [[233, "t-om-solve-qps"]], "t_opt_model": [[234, "t-opt-model"]], "t_pnes_master": [[235, "t-pnes-master"]], "t_qcqps_master": [[236, "t-qcqps-master"]], "t_qps_master": [[237, "t-qps-master"]], "test_mp_opt_model": [[238, "test-mp-opt-model"]], "have_feature": [[241, "have-feature"]], "have_feature_matlab": [[242, "have-feature-matlab"]], "have_feature_octave": [[243, "have-feature-octave"]], "mptestver": [[244, "mptestver"]], "t_begin": [[245, "t-begin"]], "t_end": [[246, "t-end"]], "t_file_match": [[247, "t-file-match"]], "t_have_feature": [[248, "t-have-feature"]], "t_is": [[249, "t-is"]], "t_ok": [[250, "t-ok"]], "t_run_tests": [[251, "t-run-tests"]], "t_skip": [[252, "t-skip"]], "t_str_match": [[253, "t-str-match"]], "t_test_fcns": [[254, "t-test-fcns"]], "test_mptest": [[255, "test-mptest"]], "mp.NODE_TYPE": [[259, "mp-node-type"]], "mp.cost_table": [[260, "mp-cost-table"]], "mp.cost_table_utils": [[261, "mp-cost-table-utils"]], "mp.data_model": [[262, "mp-data-model"]], "mp.data_model_cpf": [[263, "mp-data-model-cpf"]], "mp.data_model_opf": [[264, "mp-data-model-opf"]], "mp.dm_converter": [[265, "mp-dm-converter"]], "mp.dm_converter_mpc2": [[266, "mp-dm-converter-mpc2"]], "mp.dm_converter_mpc2_legacy": [[267, "mp-dm-converter-mpc2-legacy"]], "mp.dm_element": [[268, "mp-dm-element"]], "mp.dmc_element": [[269, "mp-dmc-element"]], "mp.dmce_branch_mpc2": [[270, "mp-dmce-branch-mpc2"]], "mp.dmce_bus3p_mpc2": [[271, "mp-dmce-bus3p-mpc2"]], "mp.dmce_bus_mpc2": [[272, "mp-dmce-bus-mpc2"]], "mp.dmce_buslink_mpc2": [[273, "mp-dmce-buslink-mpc2"]], "mp.dmce_gen3p_mpc2": [[274, "mp-dmce-gen3p-mpc2"]], "mp.dmce_gen_mpc2": [[275, "mp-dmce-gen-mpc2"]], "mp.dmce_legacy_dcline_mpc2": [[276, "mp-dmce-legacy-dcline-mpc2"]], "mp.dmce_line3p_mpc2": [[277, "mp-dmce-line3p-mpc2"]], "mp.dmce_load3p_mpc2": [[278, "mp-dmce-load3p-mpc2"]], "mp.dmce_load_mpc2": [[279, "mp-dmce-load-mpc2"]], "mp.dmce_reserve_gen_mpc2": [[280, "mp-dmce-reserve-gen-mpc2"]], "mp.dmce_reserve_zone_mpc2": [[281, "mp-dmce-reserve-zone-mpc2"]], "mp.dmce_shunt_mpc2": [[282, "mp-dmce-shunt-mpc2"]], "mp.dmce_xfmr3p_mpc2": [[283, "mp-dmce-xfmr3p-mpc2"]], "mp.dme_branch": [[284, "mp-dme-branch"]], "mp.dme_branch_opf": [[285, "mp-dme-branch-opf"]], "mp.dme_bus": [[286, "mp-dme-bus"]], "mp.dme_bus3p": [[287, "mp-dme-bus3p"]], "mp.dme_bus3p_opf": [[288, "mp-dme-bus3p-opf"]], "mp.dme_bus_opf": [[289, "mp-dme-bus-opf"]], "mp.dme_buslink": [[290, "mp-dme-buslink"]], "mp.dme_buslink_opf": [[291, "mp-dme-buslink-opf"]], "mp.dme_gen": [[292, "mp-dme-gen"]], "mp.dme_gen3p": [[293, "mp-dme-gen3p"]], "mp.dme_gen3p_opf": [[294, "mp-dme-gen3p-opf"]], "mp.dme_gen_opf": [[295, "mp-dme-gen-opf"]], "mp.dme_legacy_dcline": [[296, "mp-dme-legacy-dcline"]], "mp.dme_legacy_dcline_opf": [[297, "mp-dme-legacy-dcline-opf"]], "mp.dme_line3p": [[298, "mp-dme-line3p"]], "mp.dme_line3p_opf": [[299, "mp-dme-line3p-opf"]], "mp.dme_load": [[300, "mp-dme-load"]], "mp.dme_load3p": [[301, "mp-dme-load3p"]], "mp.dme_load3p_opf": [[302, "mp-dme-load3p-opf"]], "mp.dme_load_cpf": [[303, "mp-dme-load-cpf"]], "mp.dme_load_opf": [[304, "mp-dme-load-opf"]], "mp.dme_reserve_gen": [[305, "mp-dme-reserve-gen"]], "mp.dme_reserve_zone": [[306, "mp-dme-reserve-zone"]], "mp.dme_shared_opf": [[307, "mp-dme-shared-opf"]], "mp.dme_shunt": [[308, "mp-dme-shunt"]], "mp.dme_shunt_cpf": [[309, "mp-dme-shunt-cpf"]], "mp.dme_shunt_opf": [[310, "mp-dme-shunt-opf"]], "mp.dme_xfmr3p": [[311, "mp-dme-xfmr3p"]], "mp.dme_xfmr3p_opf": [[312, "mp-dme-xfmr3p-opf"]], "mp.element_container": [[313, "mp-element-container"]], "mp.extension": [[314, "mp-extension"]], "mp.form": [[315, "mp-form"]], "mp.form_ac": [[316, "mp-form-ac"]], "mp.form_acc": [[317, "mp-form-acc"]], "mp.form_acp": [[318, "mp-form-acp"]], "mp.form_dc": [[319, "mp-form-dc"]], "mp.mapped_array": [[320, "mp-mapped-array"]], "mp.math_model": [[321, "mp-math-model"]], "mp.math_model_cpf_acc": [[322, "mp-math-model-cpf-acc"]], "mp.math_model_cpf_acci": [[323, "mp-math-model-cpf-acci"]], "mp.math_model_cpf_accs": [[324, "mp-math-model-cpf-accs"]], "mp.math_model_cpf_acp": [[325, "mp-math-model-cpf-acp"]], "mp.math_model_cpf_acpi": [[326, "mp-math-model-cpf-acpi"]], "mp.math_model_cpf_acps": [[327, "mp-math-model-cpf-acps"]], "mp.math_model_opf": [[328, "mp-math-model-opf"]], "mp.math_model_opf_ac": [[329, "mp-math-model-opf-ac"]], "mp.math_model_opf_acc": [[330, "mp-math-model-opf-acc"]], "mp.math_model_opf_acci": [[331, "mp-math-model-opf-acci"]], "mp.math_model_opf_acci_legacy": [[332, "mp-math-model-opf-acci-legacy"]], "mp.math_model_opf_accs": [[333, "mp-math-model-opf-accs"]], "mp.math_model_opf_accs_legacy": [[334, "mp-math-model-opf-accs-legacy"]], "mp.math_model_opf_acp": [[335, "mp-math-model-opf-acp"]], "mp.math_model_opf_acpi": [[336, "mp-math-model-opf-acpi"]], "mp.math_model_opf_acpi_legacy": [[337, "mp-math-model-opf-acpi-legacy"]], "mp.math_model_opf_acps": [[338, "mp-math-model-opf-acps"]], "mp.math_model_opf_acps_legacy": [[339, "mp-math-model-opf-acps-legacy"]], "mp.math_model_opf_dc": [[340, "mp-math-model-opf-dc"]], "mp.math_model_opf_dc_legacy": [[341, "mp-math-model-opf-dc-legacy"]], "mp.math_model_pf": [[342, "mp-math-model-pf"]], "mp.math_model_pf_ac": [[343, "mp-math-model-pf-ac"]], "mp.math_model_pf_acci": [[344, "mp-math-model-pf-acci"]], "mp.math_model_pf_accs": [[345, "mp-math-model-pf-accs"]], "mp.math_model_pf_acpi": [[346, "mp-math-model-pf-acpi"]], "mp.math_model_pf_acps": [[347, "mp-math-model-pf-acps"]], "mp.math_model_pf_dc": [[348, "mp-math-model-pf-dc"]], "mp.mm_element": [[349, "mp-mm-element"]], "mp.mm_shared_opf_legacy": [[350, "mp-mm-shared-opf-legacy"]], "mp.mm_shared_pfcpf": [[351, "mp-mm-shared-pfcpf"]], "mp.mm_shared_pfcpf_ac": [[352, "mp-mm-shared-pfcpf-ac"]], "mp.mm_shared_pfcpf_ac_i": [[353, "mp-mm-shared-pfcpf-ac-i"]], "mp.mm_shared_pfcpf_acc": [[354, "mp-mm-shared-pfcpf-acc"]], "mp.mm_shared_pfcpf_acci": [[355, "mp-mm-shared-pfcpf-acci"]], "mp.mm_shared_pfcpf_accs": [[356, "mp-mm-shared-pfcpf-accs"]], "mp.mm_shared_pfcpf_acp": [[357, "mp-mm-shared-pfcpf-acp"]], "mp.mm_shared_pfcpf_acpi": [[358, "mp-mm-shared-pfcpf-acpi"]], "mp.mm_shared_pfcpf_acps": [[359, "mp-mm-shared-pfcpf-acps"]], "mp.mm_shared_pfcpf_dc": [[360, "mp-mm-shared-pfcpf-dc"]], "mp.mme_branch": [[361, "mp-mme-branch"]], "mp.mme_branch_opf": [[362, "mp-mme-branch-opf"]], "mp.mme_branch_opf_ac": [[363, "mp-mme-branch-opf-ac"]], "mp.mme_branch_opf_acc": [[364, "mp-mme-branch-opf-acc"]], "mp.mme_branch_opf_acp": [[365, "mp-mme-branch-opf-acp"]], "mp.mme_branch_opf_dc": [[366, "mp-mme-branch-opf-dc"]], "mp.mme_branch_pf_ac": [[367, "mp-mme-branch-pf-ac"]], "mp.mme_branch_pf_dc": [[368, "mp-mme-branch-pf-dc"]], "mp.mme_bus": [[369, "mp-mme-bus"]], "mp.mme_bus3p": [[370, "mp-mme-bus3p"]], "mp.mme_bus3p_opf_acc": [[371, "mp-mme-bus3p-opf-acc"]], "mp.mme_bus3p_opf_acp": [[372, "mp-mme-bus3p-opf-acp"]], "mp.mme_bus_opf_ac": [[373, "mp-mme-bus-opf-ac"]], "mp.mme_bus_opf_acc": [[374, "mp-mme-bus-opf-acc"]], "mp.mme_bus_opf_acp": [[375, "mp-mme-bus-opf-acp"]], "mp.mme_bus_opf_dc": [[376, "mp-mme-bus-opf-dc"]], "mp.mme_bus_pf_ac": [[377, "mp-mme-bus-pf-ac"]], "mp.mme_bus_pf_dc": [[378, "mp-mme-bus-pf-dc"]], "mp.mme_buslink": [[379, "mp-mme-buslink"]], "mp.mme_buslink_opf": [[380, "mp-mme-buslink-opf"]], "mp.mme_buslink_opf_acc": [[381, "mp-mme-buslink-opf-acc"]], "mp.mme_buslink_opf_acp": [[382, "mp-mme-buslink-opf-acp"]], "mp.mme_buslink_pf_ac": [[383, "mp-mme-buslink-pf-ac"]], "mp.mme_buslink_pf_acc": [[384, "mp-mme-buslink-pf-acc"]], "mp.mme_buslink_pf_acp": [[385, "mp-mme-buslink-pf-acp"]], "mp.mme_gen": [[386, "mp-mme-gen"]], "mp.mme_gen3p": [[387, "mp-mme-gen3p"]], "mp.mme_gen3p_opf": [[388, "mp-mme-gen3p-opf"]], "mp.mme_gen_opf": [[389, "mp-mme-gen-opf"]], "mp.mme_gen_opf_ac": [[390, "mp-mme-gen-opf-ac"]], "mp.mme_gen_opf_ac_oval": [[391, "mp-mme-gen-opf-ac-oval"]], "mp.mme_gen_opf_dc": [[392, "mp-mme-gen-opf-dc"]], "mp.mme_gen_pf_ac": [[393, "mp-mme-gen-pf-ac"]], "mp.mme_gen_pf_dc": [[394, "mp-mme-gen-pf-dc"]], "mp.mme_legacy_dcline": [[395, "mp-mme-legacy-dcline"]], "mp.mme_legacy_dcline_opf": [[396, "mp-mme-legacy-dcline-opf"]], "mp.mme_legacy_dcline_opf_ac": [[397, "mp-mme-legacy-dcline-opf-ac"]], "mp.mme_legacy_dcline_opf_dc": [[398, "mp-mme-legacy-dcline-opf-dc"]], "mp.mme_legacy_dcline_pf_ac": [[399, "mp-mme-legacy-dcline-pf-ac"]], "mp.mme_legacy_dcline_pf_dc": [[400, "mp-mme-legacy-dcline-pf-dc"]], "mp.mme_line3p": [[401, "mp-mme-line3p"]], "mp.mme_line3p_opf": [[402, "mp-mme-line3p-opf"]], "mp.mme_load": [[403, "mp-mme-load"]], "mp.mme_load_cpf": [[404, "mp-mme-load-cpf"]], "mp.mme_load_pf_ac": [[405, "mp-mme-load-pf-ac"]], "mp.mme_load_pf_dc": [[406, "mp-mme-load-pf-dc"]], "mp.mme_reserve_gen": [[407, "mp-mme-reserve-gen"]], "mp.mme_reserve_zone": [[408, "mp-mme-reserve-zone"]], "mp.mme_shunt": [[409, "mp-mme-shunt"]], "mp.mme_shunt_cpf": [[410, "mp-mme-shunt-cpf"]], "mp.mme_shunt_pf_ac": [[411, "mp-mme-shunt-pf-ac"]], "mp.mme_shunt_pf_dc": [[412, "mp-mme-shunt-pf-dc"]], "mp.mme_xfmr3p": [[413, "mp-mme-xfmr3p"]], "mp.mme_xfmr3p_opf": [[414, "mp-mme-xfmr3p-opf"]], "mp.net_model": [[415, "mp-net-model"]], "mp.net_model_ac": [[416, "mp-net-model-ac"]], "mp.net_model_acc": [[417, "mp-net-model-acc"]], "mp.net_model_acp": [[418, "mp-net-model-acp"]], "mp.net_model_dc": [[419, "mp-net-model-dc"]], "mp.nm_element": [[420, "mp-nm-element"]], "mp.nme_branch": [[421, "mp-nme-branch"]], "mp.nme_branch_ac": [[422, "mp-nme-branch-ac"]], "mp.nme_branch_acc": [[423, "mp-nme-branch-acc"]], "mp.nme_branch_acp": [[424, "mp-nme-branch-acp"]], "mp.nme_branch_dc": [[425, "mp-nme-branch-dc"]], "mp.nme_bus": [[426, "mp-nme-bus"]], "mp.nme_bus3p": [[427, "mp-nme-bus3p"]], "mp.nme_bus3p_acc": [[428, "mp-nme-bus3p-acc"]], "mp.nme_bus3p_acp": [[429, "mp-nme-bus3p-acp"]], "mp.nme_bus_acc": [[430, "mp-nme-bus-acc"]], "mp.nme_bus_acp": [[431, "mp-nme-bus-acp"]], "mp.nme_bus_dc": [[432, "mp-nme-bus-dc"]], "mp.nme_buslink": [[433, "mp-nme-buslink"]], "mp.nme_buslink_acc": [[434, "mp-nme-buslink-acc"]], "mp.nme_buslink_acp": [[435, "mp-nme-buslink-acp"]], "mp.nme_gen": [[436, "mp-nme-gen"]], "mp.nme_gen3p": [[437, "mp-nme-gen3p"]], "mp.nme_gen3p_acc": [[438, "mp-nme-gen3p-acc"]], "mp.nme_gen3p_acp": [[439, "mp-nme-gen3p-acp"]], "mp.nme_gen_ac": [[440, "mp-nme-gen-ac"]], "mp.nme_gen_acc": [[441, "mp-nme-gen-acc"]], "mp.nme_gen_acp": [[442, "mp-nme-gen-acp"]], "mp.nme_gen_dc": [[443, "mp-nme-gen-dc"]], "mp.nme_legacy_dcline": [[444, "mp-nme-legacy-dcline"]], "mp.nme_legacy_dcline_ac": [[445, "mp-nme-legacy-dcline-ac"]], "mp.nme_legacy_dcline_acc": [[446, "mp-nme-legacy-dcline-acc"]], "mp.nme_legacy_dcline_acp": [[447, "mp-nme-legacy-dcline-acp"]], "mp.nme_legacy_dcline_dc": [[448, "mp-nme-legacy-dcline-dc"]], "mp.nme_line3p": [[449, "mp-nme-line3p"]], "mp.nme_load": [[450, "mp-nme-load"]], "mp.nme_load3p": [[451, "mp-nme-load3p"]], "mp.nme_load_ac": [[452, "mp-nme-load-ac"]], "mp.nme_load_acc": [[453, "mp-nme-load-acc"]], "mp.nme_load_acp": [[454, "mp-nme-load-acp"]], "mp.nme_load_dc": [[455, "mp-nme-load-dc"]], "mp.nme_shunt": [[456, "mp-nme-shunt"]], "mp.nme_shunt_ac": [[457, "mp-nme-shunt-ac"]], "mp.nme_shunt_acc": [[458, "mp-nme-shunt-acc"]], "mp.nme_shunt_acp": [[459, "mp-nme-shunt-acp"]], "mp.nme_shunt_dc": [[460, "mp-nme-shunt-dc"]], "mp.nme_xfmr3p": [[461, "mp-nme-xfmr3p"]], "mp.sm_legacy_cost": [[462, "mp-sm-legacy-cost"]], "mp.task": [[463, "mp-task"]], "mp.task_cpf": [[464, "mp-task-cpf"]], "mp.task_cpf_legacy": [[465, "mp-task-cpf-legacy"]], "mp.task_opf": [[466, "mp-task-opf"]], "mp.task_opf_legacy": [[467, "mp-task-opf-legacy"]], "mp.task_pf": [[468, "mp-task-pf"]], "mp.task_pf_legacy": [[469, "mp-task-pf-legacy"]], "mp.task_shared_legacy": [[470, "mp-task-shared-legacy"]], "mp.xt_3p": [[471, "mp-xt-3p"]], "mp.xt_legacy_dcline": [[472, "mp-xt-legacy-dcline"]], "mp.xt_oval_cap_curve": [[473, "mp-xt-oval-cap-curve"]], "mp.xt_reserves": [[474, "mp-xt-reserves"]], "mp_table": [[475, "mp-table"]], "mp_table_subclass": [[476, "mp-table-subclass"]], "Limitations": [[476, null]], "install_matpower": [[478, "install-matpower"]], "mp.load_dm": [[479, "mp-load-dm"]], "mp_table_class": [[480, "mp-table-class"]], "run_cpf": [[481, "run-cpf"]], "run_mp": [[482, "run-mp"]], "run_opf": [[483, "run-opf"]], "run_pf": [[484, "run-pf"]], "M<span style=\"font-size:smaller\">ATPOWER</span>\\matpower{} Reference Manual": [[485, "matpower-reference-manual"]], "opf_model": [[487, "opf-model"]], "add_userfcn": [[488, "add-userfcn"]], "apply_changes": [[489, "apply-changes"]], "bustypes": [[490, "bustypes"]], "calc_branch_angle": [[491, "calc-branch-angle"]], "calc_v_i_sum": [[492, "calc-v-i-sum"]], "calc_v_pq_sum": [[493, "calc-v-pq-sum"]], "calc_v_y_sum": [[494, "calc-v-y-sum"]], "case_info": [[495, "case-info"]], "caseformat": [[496, "caseformat"]], "cdf2mpc": [[497, "cdf2mpc"]], "compare_case": [[498, "compare-case"]], "connected_components": [[499, "connected-components"]], "cpf_corrector": [[500, "cpf-corrector"]], "cpf_current_mpc": [[501, "cpf-current-mpc"]], "cpf_default_callback": [[502, "cpf-default-callback"]], "cpf_detect_events": [[503, "cpf-detect-events"]], "cpf_flim_event": [[504, "cpf-flim-event"]], "cpf_flim_event_cb": [[505, "cpf-flim-event-cb"]], "cpf_nose_event": [[506, "cpf-nose-event"]], "cpf_nose_event_cb": [[507, "cpf-nose-event-cb"]], "cpf_p": [[508, "cpf-p"]], "cpf_p_jac": [[509, "cpf-p-jac"]], "cpf_plim_event": [[510, "cpf-plim-event"]], "cpf_plim_event_cb": [[511, "cpf-plim-event-cb"]], "cpf_predictor": [[512, "cpf-predictor"]], "cpf_qlim_event": [[513, "cpf-qlim-event"]], "cpf_qlim_event_cb": [[514, "cpf-qlim-event-cb"]], "cpf_register_callback": [[515, "cpf-register-callback"]], "cpf_register_event": [[516, "cpf-register-event"]], "cpf_tangent": [[517, "cpf-tangent"]], "cpf_target_lam_event": [[518, "cpf-target-lam-event"]], "cpf_target_lam_event_cb": [[519, "cpf-target-lam-event-cb"]], "cpf_vlim_event": [[520, "cpf-vlim-event"]], "cpf_vlim_event_cb": [[521, "cpf-vlim-event-cb"]], "d2Abr_dV2": [[522, "d2abr-dv2"]], "d2Ibr_dV2": [[523, "d2ibr-dv2"]], "d2Imis_dV2": [[524, "d2imis-dv2"]], "d2Imis_dVdSg": [[525, "d2imis-dvdsg"]], "d2Sbr_dV2": [[526, "d2sbr-dv2"]], "d2Sbus_dV2": [[527, "d2sbus-dv2"]], "dAbr_dV": [[528, "dabr-dv"]], "dIbr_dV": [[529, "dibr-dv"]], "dImis_dV": [[530, "dimis-dv"]], "dSbr_dV": [[531, "dsbr-dv"]], "dSbus_dV": [[532, "dsbus-dv"]], "dcopf": [[533, "dcopf"]], "dcopf_solver": [[534, "dcopf-solver"]], "dcpf": [[535, "dcpf"]], "define_constants": [[536, "define-constants"]], "e2i_data": [[537, "e2i-data"]], "e2i_field": [[538, "e2i-field"]], "ext2int": [[539, "ext2int"]], "extract_islands": [[540, "extract-islands"]], "fdpf": [[541, "fdpf"]], "feval_w_path": [[542, "feval-w-path"]], "find_bridges": [[543, "find-bridges"]], "find_islands": [[544, "find-islands"]], "fmincopf": [[545, "fmincopf"]], "gausspf": [[546, "gausspf"]], "genfuels": [[547, "genfuels"]], "gentypes": [[548, "gentypes"]], "get_losses": [[549, "get-losses"]], "get_reorder": [[550, "get-reorder"]], "hasPQcap": [[551, "haspqcap"]], "have_feature_e4st": [[552, "have-feature-e4st"]], "have_feature_minopf": [[553, "have-feature-minopf"]], "have_feature_most": [[554, "have-feature-most"]], "have_feature_mp_core": [[555, "have-feature-mp-core"]], "have_feature_pdipmopf": [[556, "have-feature-pdipmopf"]], "have_feature_regexp_split": [[557, "have-feature-regexp-split"]], "have_feature_scpdipmopf": [[558, "have-feature-scpdipmopf"]], "have_feature_sdp_pf": [[559, "have-feature-sdp-pf"]], "have_feature_smartmarket": [[560, "have-feature-smartmarket"]], "have_feature_syngrid": [[561, "have-feature-syngrid"]], "have_feature_table": [[562, "have-feature-table"]], "have_feature_tralmopf": [[563, "have-feature-tralmopf"]], "i2e_data": [[564, "i2e-data"]], "i2e_field": [[565, "i2e-field"]], "idx_brch": [[566, "idx-brch"]], "idx_bus": [[567, "idx-bus"]], "idx_cost": [[568, "idx-cost"]], "idx_ct": [[569, "idx-ct"]], "idx_dcline": [[570, "idx-dcline"]], "idx_gen": [[571, "idx-gen"]], "int2ext": [[572, "int2ext"]], "isload": [[573, "isload"]], "load2disp": [[574, "load2disp"]], "loadcase": [[575, "loadcase"]], "loadshed": [[576, "loadshed"]], "makeAang": [[577, "makeaang"]], "makeApq": [[578, "makeapq"]], "makeAvl": [[579, "makeavl"]], "makeAy": [[580, "makeay"]], "makeB": [[581, "makeb"]], "makeBdc": [[582, "makebdc"]], "makeJac": [[583, "makejac"]], "makeLODF": [[584, "makelodf"]], "makePTDF": [[585, "makeptdf"]], "makeSbus": [[586, "makesbus"]], "makeSdzip": [[587, "makesdzip"]], "makeYbus": [[588, "makeybus"]], "make_vcorr": [[589, "make-vcorr"]], "make_zpv": [[590, "make-zpv"]], "margcost": [[591, "margcost"]], "miqps_matpower": [[592, "miqps-matpower"]], "modcost": [[593, "modcost"]], "mpoption": [[594, "mpoption"]], "mpoption_info_clp": [[595, "mpoption-info-clp"]], "mpoption_info_cplex": [[596, "mpoption-info-cplex"]], "mpoption_info_fmincon": [[597, "mpoption-info-fmincon"]], "mpoption_info_glpk": [[598, "mpoption-info-glpk"]], "mpoption_info_gurobi": [[599, "mpoption-info-gurobi"]], "mpoption_info_intlinprog": [[600, "mpoption-info-intlinprog"]], "mpoption_info_ipopt": [[601, "mpoption-info-ipopt"]], "mpoption_info_knitro": [[602, "mpoption-info-knitro"]], "mpoption_info_linprog": [[603, "mpoption-info-linprog"]], "mpoption_info_mips": [[604, "mpoption-info-mips"]], "mpoption_info_mosek": [[605, "mpoption-info-mosek"]], "mpoption_info_osqp": [[606, "mpoption-info-osqp"]], "mpoption_info_quadprog": [[607, "mpoption-info-quadprog"]], "mpoption_old": [[608, "mpoption-old"]], "mpver": [[609, "mpver"]], "newtonpf": [[610, "newtonpf"]], "newtonpf_I_cart": [[611, "newtonpf-i-cart"]], "newtonpf_I_hybrid": [[612, "newtonpf-i-hybrid"]], "newtonpf_I_polar": [[613, "newtonpf-i-polar"]], "newtonpf_S_cart": [[614, "newtonpf-s-cart"]], "newtonpf_S_hybrid": [[615, "newtonpf-s-hybrid"]], "nlpopf_solver": [[616, "nlpopf-solver"]], "opf": [[617, "opf"]], "opf_args": [[618, "opf-args"]], "opf_branch_ang_fcn": [[619, "opf-branch-ang-fcn"]], "opf_branch_ang_hess": [[620, "opf-branch-ang-hess"]], "opf_branch_flow_fcn": [[621, "opf-branch-flow-fcn"]], "opf_branch_flow_hess": [[622, "opf-branch-flow-hess"]], "opf_current_balance_fcn": [[623, "opf-current-balance-fcn"]], "opf_current_balance_hess": [[624, "opf-current-balance-hess"]], "opf_execute": [[625, "opf-execute"]], "opf_gen_cost_fcn": [[626, "opf-gen-cost-fcn"]], "opf_legacy_user_cost_fcn": [[627, "opf-legacy-user-cost-fcn"]], "opf_nle_fcn1": [[628, "opf-nle-fcn1"]], "opf_nle_hess1": [[629, "opf-nle-hess1"]], "opf_power_balance_fcn": [[630, "opf-power-balance-fcn"]], "opf_power_balance_hess": [[631, "opf-power-balance-hess"]], "opf_setup": [[632, "opf-setup"]], "opf_veq_fcn": [[633, "opf-veq-fcn"]], "opf_veq_hess": [[634, "opf-veq-hess"]], "opf_vlim_fcn": [[635, "opf-vlim-fcn"]], "opf_vlim_hess": [[636, "opf-vlim-hess"]], "opf_vref_fcn": [[637, "opf-vref-fcn"]], "opf_vref_hess": [[638, "opf-vref-hess"]], "order_radial": [[639, "order-radial"]], "pfsoln": [[640, "pfsoln"]], "poly2pwl": [[641, "poly2pwl"]], "polycost": [[642, "polycost"]], "pqcost": [[643, "pqcost"]], "printpf": [[644, "printpf"]], "psse2mpc": [[645, "psse2mpc"]], "psse_convert": [[646, "psse-convert"]], "psse_convert_hvdc": [[647, "psse-convert-hvdc"]], "psse_convert_xfmr": [[648, "psse-convert-xfmr"]], "psse_parse": [[649, "psse-parse"]], "psse_parse_line": [[650, "psse-parse-line"]], "psse_parse_section": [[651, "psse-parse-section"]], "psse_read": [[652, "psse-read"]], "qps_matpower": [[653, "qps-matpower"]], "radial_pf": [[654, "radial-pf"]], "remove_userfcn": [[655, "remove-userfcn"]], "run_userfcn": [[656, "run-userfcn"]], "runcpf": [[657, "runcpf"]], "rundcopf": [[658, "rundcopf"]], "rundcpf": [[659, "rundcpf"]], "runduopf": [[660, "runduopf"]], "runopf": [[661, "runopf"]], "runopf_w_res": [[662, "runopf-w-res"]], "runpf": [[663, "runpf"]], "runuopf": [[664, "runuopf"]], "save2psse": [[665, "save2psse"]], "savecase": [[666, "savecase"]], "savechgtab": [[667, "savechgtab"]], "scale_load": [[668, "scale-load"]], "set_reorder": [[669, "set-reorder"]], "t_apply_changes": [[670, "t-apply-changes"]], "t_auction_case": [[671, "t-auction-case"]], "t_auction_minopf": [[672, "t-auction-minopf"]], "t_auction_mips": [[673, "t-auction-mips"]], "t_auction_tspopf_pdipm": [[674, "t-auction-tspopf-pdipm"]], "t_case30_userfcns": [[675, "t-case30-userfcns"]], "t_case9_dcline": [[676, "t-case9-dcline"]], "t_case9_opf": [[677, "t-case9-opf"]], "t_case9_opfv2": [[678, "t-case9-opfv2"]], "t_case9_pf": [[679, "t-case9-pf"]], "t_case9_pfv2": [[680, "t-case9-pfv2"]], "t_case9_save2psse": [[681, "t-case9-save2psse"]], "t_case_ext": [[682, "t-case-ext"]], "t_case_int": [[683, "t-case-int"]], "t_chgtab": [[684, "t-chgtab"]], "t_cpf": [[685, "t-cpf"]], "t_cpf_cb1": [[686, "t-cpf-cb1"]], "t_cpf_cb2": [[687, "t-cpf-cb2"]], "t_dcline": [[688, "t-dcline"]], "t_ext2int2ext": [[689, "t-ext2int2ext"]], "t_feval_w_path": [[690, "t-feval-w-path"]], "t_get_losses": [[691, "t-get-losses"]], "t_hasPQcap": [[692, "t-haspqcap"]], "t_hessian": [[693, "t-hessian"]], "t_islands": [[694, "t-islands"]], "t_jacobian": [[695, "t-jacobian"]], "t_load2disp": [[696, "t-load2disp"]], "t_loadcase": [[697, "t-loadcase"]], "t_makeLODF": [[698, "t-makelodf"]], "t_makePTDF": [[699, "t-makeptdf"]], "t_margcost": [[700, "t-margcost"]], "t_miqps_matpower": [[701, "t-miqps-matpower"]], "t_modcost": [[702, "t-modcost"]], "t_mpoption": [[703, "t-mpoption"]], "t_mpoption_ov": [[704, "t-mpoption-ov"]], "t_off2case": [[705, "t-off2case"]], "t_opf_dc_bpmpd": [[706, "t-opf-dc-bpmpd"]], "t_opf_dc_clp": [[707, "t-opf-dc-clp"]], "t_opf_dc_cplex": [[708, "t-opf-dc-cplex"]], "t_opf_dc_default": [[709, "t-opf-dc-default"]], "t_opf_dc_glpk": [[710, "t-opf-dc-glpk"]], "t_opf_dc_gurobi": [[711, "t-opf-dc-gurobi"]], "t_opf_dc_ipopt": [[712, "t-opf-dc-ipopt"]], "t_opf_dc_mips": [[713, "t-opf-dc-mips"]], "t_opf_dc_mips_sc": [[714, "t-opf-dc-mips-sc"]], "t_opf_dc_mosek": [[715, "t-opf-dc-mosek"]], "t_opf_dc_osqp": [[716, "t-opf-dc-osqp"]], "t_opf_dc_ot": [[717, "t-opf-dc-ot"]], "t_opf_default": [[718, "t-opf-default"]], "t_opf_fmincon": [[719, "t-opf-fmincon"]], "t_opf_ipopt": [[720, "t-opf-ipopt"]], "t_opf_knitro": [[721, "t-opf-knitro"]], "t_opf_minopf": [[722, "t-opf-minopf"]], "t_opf_mips": [[723, "t-opf-mips"]], "t_opf_model": [[724, "t-opf-model"]], "t_opf_softlims": [[725, "t-opf-softlims"]], "t_opf_tspopf_pdipm": [[726, "t-opf-tspopf-pdipm"]], "t_opf_tspopf_scpdipm": [[727, "t-opf-tspopf-scpdipm"]], "t_opf_tspopf_tralm": [[728, "t-opf-tspopf-tralm"]], "t_opf_userfcns": [[729, "t-opf-userfcns"]], "t_pf_ac": [[730, "t-pf-ac"]], "t_pf_dc": [[731, "t-pf-dc"]], "t_pf_radial": [[732, "t-pf-radial"]], "t_printpf": [[733, "t-printpf"]], "t_psse": [[734, "t-psse"]], "t_qps_matpower": [[735, "t-qps-matpower"]], "t_runmarket": [[736, "t-runmarket"]], "t_runopf_w_res": [[737, "t-runopf-w-res"]], "t_scale_load": [[738, "t-scale-load"]], "t_total_load": [[739, "t-total-load"]], "t_totcost": [[740, "t-totcost"]], "t_vdep_load": [[741, "t-vdep-load"]], "toggle_dcline": [[742, "toggle-dcline"]], "toggle_iflims": [[743, "toggle-iflims"]], "toggle_reserves": [[744, "toggle-reserves"]], "toggle_softlims": [[745, "toggle-softlims"]], "total_load": [[746, "total-load"]], "totcost": [[747, "totcost"]], "uopf": [[748, "uopf"]], "update_mupq": [[749, "update-mupq"]], "zgausspf": [[750, "zgausspf"]], "mp_foo_table": [[754, "mp-foo-table"]], "t_case3p_a": [[755, "t-case3p-a"]], "t_case3p_b": [[756, "t-case3p-b"]], "t_case3p_c": [[757, "t-case3p-c"]], "t_case3p_d": [[758, "t-case3p-d"]], "t_case3p_e": [[759, "t-case3p-e"]], "t_case3p_f": [[760, "t-case3p-f"]], "t_case3p_g": [[761, "t-case3p-g"]], "t_case3p_h": [[762, "t-case3p-h"]], "t_case9_gizmo": [[763, "t-case9-gizmo"]], "t_dmc_element": [[764, "t-dmc-element"]], "t_mp_data_model": [[765, "t-mp-data-model"]], "t_mp_dm_converter_mpc2": [[766, "t-mp-dm-converter-mpc2"]], "t_mp_mapped_array": [[767, "t-mp-mapped-array"]], "t_mp_table": [[768, "t-mp-table"]], "t_mpxt_legacy_dcline": [[769, "t-mpxt-legacy-dcline"]], "t_mpxt_reserves": [[770, "t-mpxt-reserves"]], "t_nm_element": [[771, "t-nm-element"]], "t_node_test": [[772, "t-node-test"]], "t_port_inj_current_acc": [[773, "t-port-inj-current-acc"]], "t_port_inj_current_acp": [[774, "t-port-inj-current-acp"]], "t_port_inj_power_acc": [[775, "t-port-inj-power-acc"]], "t_port_inj_power_acp": [[776, "t-port-inj-power-acp"]], "t_pretty_print": [[777, "t-pretty-print"]], "t_run_mp": [[778, "t-run-mp"]], "t_run_mp_3p": [[779, "t-run-mp-3p"]], "t_run_opf_default": [[780, "t-run-opf-default"]], "test_matpower": [[781, "test-matpower"]]}, "indexentries": {"generate_autodoc_stubs() (built-in function)": [[14, "generate_autodoc_stubs"]], "generate_matpower_autodoc() (built-in function)": [[15, "generate_matpower_autodoc"]], "generate_source_symlinks() (built-in function)": [[16, "generate_source_symlinks"]], "have_feature_lu_vec() (built-in function)": [[22, "have_feature_lu_vec"]], "have_feature_pardiso() (built-in function)": [[23, "have_feature_pardiso"]], "have_feature_pardiso_legacy() (built-in function)": [[24, "have_feature_pardiso_legacy"]], "have_feature_pardiso_object() (built-in function)": [[25, "have_feature_pardiso_object"]], "mips() (in module mips)": [[26, "mips.mips"]], "mips_example1() (built-in function)": [[27, "mips_example1"]], "mips_example2() (built-in function)": [[28, "mips_example2"]], "mipsver() (built-in function)": [[29, "mipsver"]], "mplinsolve() (built-in function)": [[30, "mplinsolve"]], "qps_mips() (built-in function)": [[31, "qps_mips"]], "t_mips() (built-in function)": [[32, "t_mips"]], "t_mips_pardiso() (built-in function)": [[33, "t_mips_pardiso"]], "t_mplinsolve() (built-in function)": [[34, "t_mplinsolve"]], "t_qps_mips() (built-in function)": [[35, "t_qps_mips"]], "test_mips() (built-in function)": [[36, "test_mips"]], "addgen2mpc() (built-in function)": [[39, "addgen2mpc"]], "addstorage() (built-in function)": [[40, "addstorage"]], "addwind() (built-in function)": [[41, "addwind"]], "apply_profile() (built-in function)": [[42, "apply_profile"]], "c118swf() (built-in function)": [[43, "c118swf"]], "ex_case3a() (built-in function)": [[44, "ex_case3a"]], "ex_case3b() (built-in function)": [[45, "ex_case3b"]], "ex_contab() (built-in function)": [[46, "ex_contab"]], "ex_load_profile() (built-in function)": [[47, "ex_load_profile"]], "ex_storage() (built-in function)": [[48, "ex_storage"]], "ex_transmat() (built-in function)": [[49, "ex_transmat"]], "ex_wind() (built-in function)": [[50, "ex_wind"]], "ex_wind_profile() (built-in function)": [[51, "ex_wind_profile"]], "ex_wind_profile_d() (built-in function)": [[52, "ex_wind_profile_d"]], "ex_wind_uc() (built-in function)": [[53, "ex_wind_uc"]], "ex_xgd() (built-in function)": [[54, "ex_xgd"]], "ex_xgd_ramp() (built-in function)": [[55, "ex_xgd_ramp"]], "ex_xgd_res() (built-in function)": [[56, "ex_xgd_res"]], "ex_xgd_uc() (built-in function)": [[57, "ex_xgd_uc"]], "filter_ramp_transitions() (built-in function)": [[58, "filter_ramp_transitions"]], "getprofiles() (built-in function)": [[59, "getprofiles"]], "idx_profile() (built-in function)": [[60, "idx_profile"]], "loadgenericdata() (built-in function)": [[61, "loadgenericdata"]], "loadmd() (built-in function)": [[62, "loadmd"]], "loadstoragedata() (built-in function)": [[63, "loadstoragedata"]], "loadxgendata() (built-in function)": [[64, "loadxgendata"]], "md_init() (built-in function)": [[65, "md_init"]], "most() (in module most)": [[66, "most.most"]], "most_ex1_ed() (built-in function)": [[67, "most_ex1_ed"]], "most_ex2_dcopf() (built-in function)": [[68, "most_ex2_dcopf"]], "most_ex3_dcopf_w_uc() (built-in function)": [[69, "most_ex3_dcopf_w_uc"]], "most_ex4_dcopf_ss() (built-in function)": [[70, "most_ex4_dcopf_ss"]], "most_ex5_mpopf() (built-in function)": [[71, "most_ex5_mpopf"]], "most_ex6_uc() (built-in function)": [[72, "most_ex6_uc"]], "most_ex7_suc() (built-in function)": [[73, "most_ex7_suc"]], "most_summary() (built-in function)": [[74, "most_summary"]], "mostver() (built-in function)": [[75, "mostver"]], "mpoption_info_most() (built-in function)": [[76, "mpoption_info_most"]], "plot_gen() (built-in function)": [[77, "plot_gen"]], "plot_storage() (built-in function)": [[78, "plot_storage"]], "plot_uc() (built-in function)": [[79, "plot_uc"]], "plot_uc_data() (built-in function)": [[80, "plot_uc_data"]], "t_case30_most() (built-in function)": [[81, "t_case30_most"]], "t_case3_most() (built-in function)": [[82, "t_case3_most"]], "t_case_tlmp() (built-in function)": [[83, "t_case_tlmp"]], "t_case_tlmp_storage() (built-in function)": [[84, "t_case_tlmp_storage"]], "t_most_30b_1_1_0() (built-in function)": [[85, "t_most_30b_1_1_0"]], "t_most_30b_1_1_0_uc() (built-in function)": [[86, "t_most_30b_1_1_0_uc"]], "t_most_30b_1_1_17() (built-in function)": [[87, "t_most_30b_1_1_17"]], "t_most_30b_3_1_0() (built-in function)": [[88, "t_most_30b_3_1_0"]], "t_most_30b_3_1_17() (built-in function)": [[89, "t_most_30b_3_1_17"]], "t_most_3b_1_1_0() (built-in function)": [[90, "t_most_3b_1_1_0"]], "t_most_3b_1_1_2() (built-in function)": [[91, "t_most_3b_1_1_2"]], "t_most_3b_3_1_0() (built-in function)": [[92, "t_most_3b_3_1_0"]], "t_most_3b_3_1_2() (built-in function)": [[93, "t_most_3b_3_1_2"]], "t_most_fixed_res() (built-in function)": [[94, "t_most_fixed_res"]], "t_most_mpopf() (built-in function)": [[95, "t_most_mpopf"]], "t_most_sp() (built-in function)": [[96, "t_most_sp"]], "t_most_spuc() (built-in function)": [[97, "t_most_spuc"]], "t_most_suc() (built-in function)": [[98, "t_most_suc"]], "t_most_tlmp() (built-in function)": [[99, "t_most_tlmp"]], "t_most_uc() (built-in function)": [[100, "t_most_uc"]], "t_most_w_ds() (built-in function)": [[101, "t_most_w_ds"]], "test_most() (built-in function)": [[102, "test_most"]], "uniformwindprofile() (built-in function)": [[103, "uniformwindprofile"]], "n (mp.set_manager attribute)": [[106, "mp.set_manager.N"]], "ns (mp.set_manager attribute)": [[106, "mp.set_manager.NS"]], "add() (mp.set_manager method)": [[106, "mp.set_manager.add"]], "copy() (mp.set_manager method)": [[106, "mp.set_manager.copy"]], "data (mp.set_manager attribute)": [[106, "mp.set_manager.data"]], "describe_idx() (mp.set_manager method)": [[106, "mp.set_manager.describe_idx"]], "display() (mp.set_manager method)": [[106, "mp.set_manager.display"]], "get_n() (mp.set_manager method)": [[106, "mp.set_manager.get_N"]], "idx (mp.set_manager attribute)": [[106, "mp.set_manager.idx"]], "init_indexed_name() (mp.set_manager method)": [[106, "mp.set_manager.init_indexed_name"]], "label (mp.set_manager attribute)": [[106, "mp.set_manager.label"]], "order (mp.set_manager attribute)": [[106, "mp.set_manager.order"]], "set_manager (class in mp)": [[106, "mp.set_manager"]], "set_manager() (mp.set_manager method)": [[106, "mp.set_manager.set_manager"]], "set_type_idx_map() (mp.set_manager method)": [[106, "mp.set_manager.set_type_idx_map"]], "display_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.display_soln"]], "has_parsed_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.has_parsed_soln"]], "params() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.params"]], "parse_soln() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.parse_soln"]], "set_manager_opt_model (class in mp)": [[107, "mp.set_manager_opt_model"]], "set_manager_opt_model() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.set_manager_opt_model"]], "set_params() (mp.set_manager_opt_model method)": [[107, "mp.set_manager_opt_model.set_params"]], "soln (mp.set_manager_opt_model attribute)": [[107, "mp.set_manager_opt_model.soln"]], "add() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.add"]], "cache (mp.sm_lin_constraint attribute)": [[108, "mp.sm_lin_constraint.cache"]], "display_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.display_soln"]], "eval() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.eval"]], "get_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.get_soln"]], "params() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.params"]], "parse_soln() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.parse_soln"]], "set_params() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.set_params"]], "sm_lin_constraint (class in mp)": [[108, "mp.sm_lin_constraint"]], "sm_lin_constraint() (mp.sm_lin_constraint method)": [[108, "mp.sm_lin_constraint.sm_lin_constraint"]], "add() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.add"]], "display_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.display_soln"]], "eval() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.eval"]], "eval_hess() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.eval_hess"]], "get_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.get_soln"]], "params() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.params"]], "parse_soln() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.parse_soln"]], "set_params() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.set_params"]], "sm_nln_constraint (class in mp)": [[109, "mp.sm_nln_constraint"]], "sm_nln_constraint() (mp.sm_nln_constraint method)": [[109, "mp.sm_nln_constraint.sm_nln_constraint"]], "add() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.add"]], "display_soln() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.display_soln"]], "eval() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.eval"]], "get_soln() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.get_soln"]], "params() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.params"]], "set_params() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.set_params"]], "sm_nln_cost (class in mp)": [[110, "mp.sm_nln_cost"]], "sm_nln_cost() (mp.sm_nln_cost method)": [[110, "mp.sm_nln_cost.sm_nln_cost"]], "add() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.add"]], "blkprod2vertcat() (mp.sm_quad_constraint static method)": [[111, "mp.sm_quad_constraint.blkprod2vertcat"]], "cache (mp.sm_quad_constraint attribute)": [[111, "mp.sm_quad_constraint.cache"]], "display_soln() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.display_soln"]], "eval() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.eval"]], "get_soln() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.get_soln"]], "params() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.params"]], "parse_soln() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.parse_soln"]], "set_params() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.set_params"]], "sm_quad_constraint (class in mp)": [[111, "mp.sm_quad_constraint"]], "sm_quad_constraint() (mp.sm_quad_constraint method)": [[111, "mp.sm_quad_constraint.sm_quad_constraint"]], "add() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.add"]], "cache (mp.sm_quad_cost attribute)": [[112, "mp.sm_quad_cost.cache"]], "display_soln() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.display_soln"]], "eval() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.eval"]], "get_soln() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.get_soln"]], "params() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.params"]], "set_params() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.set_params"]], "sm_quad_cost (class in mp)": [[112, "mp.sm_quad_cost"]], "sm_quad_cost() (mp.sm_quad_cost method)": [[112, "mp.sm_quad_cost.sm_quad_cost"]], "add() (mp.sm_variable method)": [[113, "mp.sm_variable.add"]], "cache (mp.sm_variable attribute)": [[113, "mp.sm_variable.cache"]], "display_soln() (mp.sm_variable method)": [[113, "mp.sm_variable.display_soln"]], "get_soln() (mp.sm_variable method)": [[113, "mp.sm_variable.get_soln"]], "params() (mp.sm_variable method)": [[113, "mp.sm_variable.params"]], "parse_soln() (mp.sm_variable method)": [[113, "mp.sm_variable.parse_soln"]], "set_params() (mp.sm_variable method)": [[113, "mp.sm_variable.set_params"]], "sm_variable (class in mp)": [[113, "mp.sm_variable"]], "sm_variable() (mp.sm_variable method)": [[113, "mp.sm_variable.sm_variable"]], "varsets_cell2struct() (mp.sm_variable static method)": [[113, "mp.sm_variable.varsets_cell2struct"]], "varsets_idx() (mp.sm_variable method)": [[113, "mp.sm_variable.varsets_idx"]], "varsets_len() (mp.sm_variable method)": [[113, "mp.sm_variable.varsets_len"]], "varsets_x() (mp.sm_variable method)": [[113, "mp.sm_variable.varsets_x"]], "add_named_set() (mp_idx_manager method)": [[114, "mp_idx_manager.add_named_set"]], "copy() (mp_idx_manager method)": [[114, "mp_idx_manager.copy"]], "describe_idx() (mp_idx_manager method)": [[114, "mp_idx_manager.describe_idx"]], "display_set() (mp_idx_manager method)": [[114, "mp_idx_manager.display_set"]], "get() (mp_idx_manager method)": [[114, "mp_idx_manager.get"]], "getn() (mp_idx_manager method)": [[114, "mp_idx_manager.getN"]], "get_idx() (mp_idx_manager method)": [[114, "mp_idx_manager.get_idx"]], "get_userdata() (mp_idx_manager method)": [[114, "mp_idx_manager.get_userdata"]], "init_indexed_name() (mp_idx_manager method)": [[114, "mp_idx_manager.init_indexed_name"]], "init_set_types() (mp_idx_manager method)": [[114, "mp_idx_manager.init_set_types"]], "mp_idx_manager (built-in class)": [[114, "mp_idx_manager"]], "mp_idx_manager() (mp_idx_manager method)": [[114, "mp_idx_manager.mp_idx_manager"]], "set_type_idx_map() (mp_idx_manager method)": [[114, "mp_idx_manager.set_type_idx_map"]], "valid_named_set_type() (mp_idx_manager method)": [[114, "mp_idx_manager.valid_named_set_type"]], "add_lin_constraint() (opt_model method)": [[115, "opt_model.add_lin_constraint"]], "add_nln_constraint() (opt_model method)": [[115, "opt_model.add_nln_constraint"]], "add_nln_cost() (opt_model method)": [[115, "opt_model.add_nln_cost"]], "add_quad_cost() (opt_model method)": [[115, "opt_model.add_quad_cost"]], "add_var() (opt_model method)": [[115, "opt_model.add_var"]], "copy() (opt_model method)": [[115, "opt_model.copy"]], "def_set_types() (opt_model method)": [[115, "opt_model.def_set_types"]], "display() (opt_model method)": [[115, "opt_model.display"]], "display_soln() (opt_model method)": [[115, "opt_model.display_soln"]], "eval_lin_constraint() (opt_model method)": [[115, "opt_model.eval_lin_constraint"]], "eval_nln_constraint() (opt_model method)": [[115, "opt_model.eval_nln_constraint"]], "eval_nln_constraint_hess() (opt_model method)": [[115, "opt_model.eval_nln_constraint_hess"]], "eval_nln_cost() (opt_model method)": [[115, "opt_model.eval_nln_cost"]], "eval_quad_cost() (opt_model method)": [[115, "opt_model.eval_quad_cost"]], "get_idx() (opt_model method)": [[115, "opt_model.get_idx"]], "get_soln() (opt_model method)": [[115, "opt_model.get_soln"]], "has_parsed_soln() (opt_model method)": [[115, "opt_model.has_parsed_soln"]], "init_indexed_name() (opt_model method)": [[115, "opt_model.init_indexed_name"]], "is_mixed_integer() (opt_model method)": [[115, "opt_model.is_mixed_integer"]], "is_solved() (opt_model method)": [[115, "opt_model.is_solved"]], "lin (opt_model attribute)": [[115, "opt_model.lin"]], "nlc (opt_model attribute)": [[115, "opt_model.nlc"]], "nle (opt_model attribute)": [[115, "opt_model.nle"]], "nli (opt_model attribute)": [[115, "opt_model.nli"]], "opt_model (built-in class)": [[115, "opt_model"]], "opt_model() (opt_model method)": [[115, "opt_model.opt_model"]], "params_lin_constraint() (opt_model method)": [[115, "opt_model.params_lin_constraint"]], "params_nln_constraint() (opt_model method)": [[115, "opt_model.params_nln_constraint"]], "params_nln_cost() (opt_model method)": [[115, "opt_model.params_nln_cost"]], "params_quad_cost() (opt_model method)": [[115, "opt_model.params_quad_cost"]], "params_var() (opt_model method)": [[115, "opt_model.params_var"]], "parse_soln() (opt_model method)": [[115, "opt_model.parse_soln"]], "prob_type (opt_model attribute)": [[115, "opt_model.prob_type"]], "problem_type() (opt_model method)": [[115, "opt_model.problem_type"]], "qcn (opt_model attribute)": [[115, "opt_model.qcn"]], "qdc (opt_model attribute)": [[115, "opt_model.qdc"]], "set_params() (opt_model method)": [[115, "opt_model.set_params"]], "soln (opt_model attribute)": [[115, "opt_model.soln"]], "solve() (opt_model method)": [[115, "opt_model.solve"]], "var (opt_model attribute)": [[115, "opt_model.var"]], "varsets_cell2struct() (opt_model method)": [[115, "opt_model.varsets_cell2struct"]], "varsets_idx() (opt_model method)": [[115, "opt_model.varsets_idx"]], "varsets_len() (opt_model method)": [[115, "opt_model.varsets_len"]], "varsets_x() (opt_model method)": [[115, "opt_model.varsets_x"]], "artelys_knitro_options() (built-in function)": [[116, "artelys_knitro_options"]], "convert_constraint_multipliers() (built-in function)": [[117, "convert_constraint_multipliers"]], "convert_lin_constraint() (built-in function)": [[118, "convert_lin_constraint"]], "convert_lin_constraint_multipliers() (built-in function)": [[119, "convert_lin_constraint_multipliers"]], "convert_quad_constraint() (built-in function)": [[120, "convert_quad_constraint"]], "cplex_options() (built-in function)": [[121, "cplex_options"]], "glpk_options() (built-in function)": [[122, "glpk_options"]], "gurobi_options() (built-in function)": [[123, "gurobi_options"]], "gurobiver() (built-in function)": [[124, "gurobiver"]], "have_feature_bpmpd() (built-in function)": [[125, "have_feature_bpmpd"]], "have_feature_catchme() (built-in function)": [[126, "have_feature_catchme"]], "have_feature_clp() (built-in function)": [[127, "have_feature_clp"]], "have_feature_cplex() (built-in function)": [[128, "have_feature_cplex"]], "have_feature_evalc() (built-in function)": [[129, "have_feature_evalc"]], "have_feature_fmincon() (built-in function)": [[130, "have_feature_fmincon"]], "have_feature_fmincon_ipm() (built-in function)": [[131, "have_feature_fmincon_ipm"]], "have_feature_fsolve() (built-in function)": [[132, "have_feature_fsolve"]], "have_feature_glpk() (built-in function)": [[133, "have_feature_glpk"]], "have_feature_gurobi() (built-in function)": [[134, "have_feature_gurobi"]], "have_feature_intlinprog() (built-in function)": [[135, "have_feature_intlinprog"]], "have_feature_ipopt() (built-in function)": [[136, "have_feature_ipopt"]], "have_feature_ipopt_auxdata() (built-in function)": [[137, "have_feature_ipopt_auxdata"]], "have_feature_isequaln() (built-in function)": [[138, "have_feature_isequaln"]], "have_feature_knitro() (built-in function)": [[139, "have_feature_knitro"]], "have_feature_knitromatlab() (built-in function)": [[140, "have_feature_knitromatlab"]], "have_feature_ktrlink() (built-in function)": [[141, "have_feature_ktrlink"]], "have_feature_linprog() (built-in function)": [[142, "have_feature_linprog"]], "have_feature_linprog_ds() (built-in function)": [[143, "have_feature_linprog_ds"]], "have_feature_mosek() (built-in function)": [[144, "have_feature_mosek"]], "have_feature_opti_clp() (built-in function)": [[145, "have_feature_opti_clp"]], "have_feature_optim() (built-in function)": [[146, "have_feature_optim"]], "have_feature_optimoptions() (built-in function)": [[147, "have_feature_optimoptions"]], "have_feature_osqp() (built-in function)": [[148, "have_feature_osqp"]], "have_feature_quadprog() (built-in function)": [[149, "have_feature_quadprog"]], "have_feature_quadprog_ls() (built-in function)": [[150, "have_feature_quadprog_ls"]], "have_feature_sdpt3() (built-in function)": [[151, "have_feature_sdpt3"]], "have_feature_sedumi() (built-in function)": [[152, "have_feature_sedumi"]], "have_feature_yalmip() (built-in function)": [[153, "have_feature_yalmip"]], "ipopt_options() (built-in function)": [[154, "ipopt_options"]], "knitrover() (built-in function)": [[155, "knitrover"]], "miqps_cplex() (built-in function)": [[156, "miqps_cplex"]], "miqps_glpk() (built-in function)": [[157, "miqps_glpk"]], "miqps_gurobi() (built-in function)": [[158, "miqps_gurobi"]], "miqps_master() (built-in function)": [[159, "miqps_master"]], "miqps_mosek() (built-in function)": [[160, "miqps_mosek"]], "miqps_ot() (built-in function)": [[161, "miqps_ot"]], "mosek_options() (built-in function)": [[162, "mosek_options"]], "mosek_symbcon() (built-in function)": [[163, "mosek_symbcon"]], "mpomver() (built-in function)": [[164, "mpomver"]], "mpopt2nleqopt() (built-in function)": [[165, "mpopt2nleqopt"]], "mpopt2nlpopt() (built-in function)": [[166, "mpopt2nlpopt"]], "mpopt2pneopt() (built-in function)": [[167, "mpopt2pneopt"]], "mpopt2qcqpopt() (built-in function)": [[168, "mpopt2qcqpopt"]], "mpopt2qpopt() (built-in function)": [[169, "mpopt2qpopt"]], "nested_struct_copy() (built-in function)": [[170, "nested_struct_copy"]], "nleqs_core() (built-in function)": [[171, "nleqs_core"]], "nleqs_fd_newton() (built-in function)": [[172, "nleqs_fd_newton"]], "nleqs_fsolve() (built-in function)": [[173, "nleqs_fsolve"]], "nleqs_gauss_seidel() (built-in function)": [[174, "nleqs_gauss_seidel"]], "nleqs_master() (built-in function)": [[175, "nleqs_master"]], "nleqs_master_ex1() (built-in function)": [[176, "nleqs_master_ex1"]], "nleqs_master_ex2() (built-in function)": [[177, "nleqs_master_ex2"]], "nleqs_newton() (built-in function)": [[178, "nleqs_newton"]], "nlp_consfcn() (built-in function)": [[179, "nlp_consfcn"]], "nlp_costfcn() (built-in function)": [[180, "nlp_costfcn"]], "nlp_hessfcn() (built-in function)": [[181, "nlp_hessfcn"]], "nlps_fmincon() (built-in function)": [[182, "nlps_fmincon"]], "nlps_ipopt() (built-in function)": [[183, "nlps_ipopt"]], "nlps_knitro() (built-in function)": [[184, "nlps_knitro"]], "nlps_master() (built-in function)": [[185, "nlps_master"]], "nlps_master_ex1() (built-in function)": [[186, "nlps_master_ex1"]], "nlps_master_ex2() (built-in function)": [[187, "nlps_master_ex2"]], "osqp_options() (built-in function)": [[188, "osqp_options"]], "osqpver() (built-in function)": [[189, "osqpver"]], "pne_callback_default() (built-in function)": [[190, "pne_callback_default"]], "pne_callback_nose() (built-in function)": [[191, "pne_callback_nose"]], "pne_callback_target_lam() (built-in function)": [[192, "pne_callback_target_lam"]], "pne_detect_events() (built-in function)": [[193, "pne_detect_events"]], "pne_detected_event() (built-in function)": [[194, "pne_detected_event"]], "pne_event_nose() (built-in function)": [[195, "pne_event_nose"]], "pne_event_target_lam() (built-in function)": [[196, "pne_event_target_lam"]], "pne_ex1() (built-in function)": [[197, "pne_ex1"]], "pne_pfcn_arc_len() (built-in function)": [[198, "pne_pfcn_arc_len"]], "pne_pfcn_natural() (built-in function)": [[199, "pne_pfcn_natural"]], "pne_pfcn_pseudo_arc_len() (built-in function)": [[200, "pne_pfcn_pseudo_arc_len"]], "pne_register_callbacks() (built-in function)": [[201, "pne_register_callbacks"]], "pne_register_events() (built-in function)": [[202, "pne_register_events"]], "pnes_master() (built-in function)": [[203, "pnes_master"]], "qcqp_ex1() (built-in function)": [[204, "qcqp_ex1"]], "qcqp_nlp_consfcn() (built-in function)": [[205, "qcqp_nlp_consfcn"]], "qcqp_nlp_costfcn() (built-in function)": [[206, "qcqp_nlp_costfcn"]], "qcqp_nlp_hessfcn() (built-in function)": [[207, "qcqp_nlp_hessfcn"]], "qcqps_gurobi() (built-in function)": [[208, "qcqps_gurobi"]], "qcqps_knitro() (built-in function)": [[209, "qcqps_knitro"]], "qcqps_master() (built-in function)": [[210, "qcqps_master"]], "qp_ex1() (built-in function)": [[211, "qp_ex1"]], "qps_bpmpd() (built-in function)": [[212, "qps_bpmpd"]], "qps_clp() (built-in function)": [[213, "qps_clp"]], "qps_cplex() (built-in function)": [[214, "qps_cplex"]], "qps_glpk() (built-in function)": [[215, "qps_glpk"]], "qps_gurobi() (built-in function)": [[216, "qps_gurobi"]], "qps_ipopt() (built-in function)": [[217, "qps_ipopt"]], "qps_knitro() (built-in function)": [[218, "qps_knitro"]], "qps_master() (built-in function)": [[219, "qps_master"]], "qps_mosek() (built-in function)": [[220, "qps_mosek"]], "qps_osqp() (built-in function)": [[221, "qps_osqp"]], "qps_ot() (built-in function)": [[222, "qps_ot"]], "t_miqps_master() (built-in function)": [[223, "t_miqps_master"]], "t_nested_struct_copy() (built-in function)": [[224, "t_nested_struct_copy"]], "t_nleqs_master() (built-in function)": [[225, "t_nleqs_master"]], "t_nlps_master() (built-in function)": [[226, "t_nlps_master"]], "t_om_solve_leqs() (built-in function)": [[227, "t_om_solve_leqs"]], "t_om_solve_miqps() (built-in function)": [[228, "t_om_solve_miqps"]], "t_om_solve_nleqs() (built-in function)": [[229, "t_om_solve_nleqs"]], "t_om_solve_nlps() (built-in function)": [[230, "t_om_solve_nlps"]], "t_om_solve_pne() (built-in function)": [[231, "t_om_solve_pne"]], "t_om_solve_qcqps() (built-in function)": [[232, "t_om_solve_qcqps"]], "t_om_solve_qps() (built-in function)": [[233, "t_om_solve_qps"]], "t_opt_model() (built-in function)": [[234, "t_opt_model"]], "t_pnes_master() (built-in function)": [[235, "t_pnes_master"]], "t_qcqps_master() (built-in function)": [[236, "t_qcqps_master"]], "t_qps_master() (built-in function)": [[237, "t_qps_master"]], "test_mp_opt_model() (built-in function)": [[238, "test_mp_opt_model"]], "have_feature() (built-in function)": [[241, "have_feature"]], "have_feature_matlab() (built-in function)": [[242, "have_feature_matlab"]], "have_feature_octave() (built-in function)": [[243, "have_feature_octave"]], "mptestver() (built-in function)": [[244, "mptestver"]], "t_begin() (built-in function)": [[245, "t_begin"]], "t_end() (built-in function)": [[246, "t_end"]], "t_file_match() (built-in function)": [[247, "t_file_match"]], "t_have_feature() (built-in function)": [[248, "t_have_feature"]], "t_is() (built-in function)": [[249, "t_is"]], "t_ok() (built-in function)": [[250, "t_ok"]], "t_run_tests() (built-in function)": [[251, "t_run_tests"]], "t_skip() (built-in function)": [[252, "t_skip"]], "t_str_match() (built-in function)": [[253, "t_str_match"]], "t_test_fcns() (built-in function)": [[254, "t_test_fcns"]], "test_mptest() (built-in function)": [[255, "test_mptest"]], "node_type (class in mp)": [[259, "mp.NODE_TYPE"]], "none (mp.node_type attribute)": [[259, "mp.NODE_TYPE.NONE"]], "pq (mp.node_type attribute)": [[259, "mp.NODE_TYPE.PQ"]], "pv (mp.node_type attribute)": [[259, "mp.NODE_TYPE.PV"]], "ref (mp.node_type attribute)": [[259, "mp.NODE_TYPE.REF"]], "is_valid() (mp.node_type static method)": [[259, "mp.NODE_TYPE.is_valid"]], "cost_table (class in mp)": [[260, "mp.cost_table"]], "cost_table() (mp.cost_table method)": [[260, "mp.cost_table.cost_table"]], "diff_poly_fcn() (mp.cost_table static method)": [[260, "mp.cost_table.diff_poly_fcn"]], "eval_poly_fcn() (mp.cost_table static method)": [[260, "mp.cost_table.eval_poly_fcn"]], "max_pwl_cost() (mp.cost_table method)": [[260, "mp.cost_table.max_pwl_cost"]], "poly_cost_fcn() (mp.cost_table static method)": [[260, "mp.cost_table.poly_cost_fcn"]], "poly_params() (mp.cost_table method)": [[260, "mp.cost_table.poly_params"]], "pwl_params() (mp.cost_table method)": [[260, "mp.cost_table.pwl_params"]], "cost_table_utils (class in mp)": [[261, "mp.cost_table_utils"]], "max_pwl_cost() (mp.cost_table_utils static method)": [[261, "mp.cost_table_utils.max_pwl_cost"]], "poly_params() (mp.cost_table_utils static method)": [[261, "mp.cost_table_utils.poly_params"]], "pwl_params() (mp.cost_table_utils static method)": [[261, "mp.cost_table_utils.pwl_params"]], "base_kva (mp.data_model attribute)": [[262, "mp.data_model.base_kva"]], "base_mva (mp.data_model attribute)": [[262, "mp.data_model.base_mva"]], "build() (mp.data_model method)": [[262, "mp.data_model.build"]], "build_params() (mp.data_model method)": [[262, "mp.data_model.build_params"]], "copy() (mp.data_model method)": [[262, "mp.data_model.copy"]], "count() (mp.data_model method)": [[262, "mp.data_model.count"]], "data_model (class in mp)": [[262, "mp.data_model"]], "data_model() (mp.data_model method)": [[262, "mp.data_model.data_model"]], "display() (mp.data_model method)": [[262, "mp.data_model.display"]], "initialize() (mp.data_model method)": [[262, "mp.data_model.initialize"]], "online() (mp.data_model method)": [[262, "mp.data_model.online"]], "pp_data() (mp.data_model method)": [[262, "mp.data_model.pp_data"]], "pp_flags() (mp.data_model method)": [[262, "mp.data_model.pp_flags"]], "pp_get_headers() (mp.data_model method)": [[262, "mp.data_model.pp_get_headers"]], "pp_get_headers_cnt() (mp.data_model method)": [[262, "mp.data_model.pp_get_headers_cnt"]], "pp_get_headers_ext() (mp.data_model method)": [[262, "mp.data_model.pp_get_headers_ext"]], "pp_get_headers_other() (mp.data_model method)": [[262, "mp.data_model.pp_get_headers_other"]], "pp_have_section() (mp.data_model method)": [[262, "mp.data_model.pp_have_section"]], "pp_section() (mp.data_model method)": [[262, "mp.data_model.pp_section"]], "pp_section_label() (mp.data_model method)": [[262, "mp.data_model.pp_section_label"]], "pp_section_list() (mp.data_model method)": [[262, "mp.data_model.pp_section_list"]], "pretty_print() (mp.data_model method)": [[262, "mp.data_model.pretty_print"]], "rebuild() (mp.data_model method)": [[262, "mp.data_model.rebuild"]], "set_bus_v_lims_via_vg() (mp.data_model method)": [[262, "mp.data_model.set_bus_v_lims_via_vg"]], "source (mp.data_model attribute)": [[262, "mp.data_model.source"]], "update_status() (mp.data_model method)": [[262, "mp.data_model.update_status"]], "userdata (mp.data_model attribute)": [[262, "mp.data_model.userdata"]], "data_model_cpf (class in mp)": [[263, "mp.data_model_cpf"]], "data_model_cpf() (mp.data_model_cpf method)": [[263, "mp.data_model_cpf.data_model_cpf"]], "data_model_opf (class in mp)": [[264, "mp.data_model_opf"]], "data_model_opf() (mp.data_model_opf method)": [[264, "mp.data_model_opf.data_model_opf"]], "pp_flags() (mp.data_model_opf method)": [[264, "mp.data_model_opf.pp_flags"]], "pp_get_headers_other() (mp.data_model_opf method)": [[264, "mp.data_model_opf.pp_get_headers_other"]], "pp_section_list() (mp.data_model_opf method)": [[264, "mp.data_model_opf.pp_section_list"]], "build() (mp.dm_converter method)": [[265, "mp.dm_converter.build"]], "copy() (mp.dm_converter method)": [[265, "mp.dm_converter.copy"]], "display() (mp.dm_converter method)": [[265, "mp.dm_converter.display"]], "dm_converter (class in mp)": [[265, "mp.dm_converter"]], "export() (mp.dm_converter method)": [[265, "mp.dm_converter.export"]], "format_tag() (mp.dm_converter method)": [[265, "mp.dm_converter.format_tag"]], "import() (mp.dm_converter method)": [[265, "mp.dm_converter.import"]], "init_export() (mp.dm_converter method)": [[265, "mp.dm_converter.init_export"]], "save() (mp.dm_converter method)": [[265, "mp.dm_converter.save"]], "dm_converter_mpc2 (class in mp)": [[266, "mp.dm_converter_mpc2"]], "dm_converter_mpc2() (mp.dm_converter_mpc2 method)": [[266, "mp.dm_converter_mpc2.dm_converter_mpc2"]], "format_tag() (mp.dm_converter_mpc2 method)": [[266, "mp.dm_converter_mpc2.format_tag"]], "import() (mp.dm_converter_mpc2 method)": [[266, "mp.dm_converter_mpc2.import"]], "init_export() (mp.dm_converter_mpc2 method)": [[266, "mp.dm_converter_mpc2.init_export"]], "save() (mp.dm_converter_mpc2 method)": [[266, "mp.dm_converter_mpc2.save"]], "dm_converter_mpc2_legacy (class in mp)": [[267, "mp.dm_converter_mpc2_legacy"]], "legacy_user_mod_inputs() (mp.dm_converter_mpc2_legacy method)": [[267, "mp.dm_converter_mpc2_legacy.legacy_user_mod_inputs"]], "legacy_user_nln_constraints() (mp.dm_converter_mpc2_legacy method)": [[267, "mp.dm_converter_mpc2_legacy.legacy_user_nln_constraints"]], "id() (mp.dm_element method)": [[268, "mp.dm_element.ID"]], "id2i (mp.dm_element attribute)": [[268, "mp.dm_element.ID2i"]], "build_params() (mp.dm_element method)": [[268, "mp.dm_element.build_params"]], "copy() (mp.dm_element method)": [[268, "mp.dm_element.copy"]], "count() (mp.dm_element method)": [[268, "mp.dm_element.count"]], "cxn_idx_prop() (mp.dm_element method)": [[268, "mp.dm_element.cxn_idx_prop"]], "cxn_type() (mp.dm_element method)": [[268, "mp.dm_element.cxn_type"]], "cxn_type_prop() (mp.dm_element method)": [[268, "mp.dm_element.cxn_type_prop"]], "display() (mp.dm_element method)": [[268, "mp.dm_element.display"]], "dm_converter_element() (mp.dm_element method)": [[268, "mp.dm_element.dm_converter_element"]], "dm_element (class in mp)": [[268, "mp.dm_element"]], "export_vars() (mp.dm_element method)": [[268, "mp.dm_element.export_vars"]], "export_vars_offline_val() (mp.dm_element method)": [[268, "mp.dm_element.export_vars_offline_val"]], "i2on (mp.dm_element attribute)": [[268, "mp.dm_element.i2on"]], "init_status() (mp.dm_element method)": [[268, "mp.dm_element.init_status"]], "initialize() (mp.dm_element method)": [[268, "mp.dm_element.initialize"]], "label() (mp.dm_element method)": [[268, "mp.dm_element.label"]], "labels() (mp.dm_element method)": [[268, "mp.dm_element.labels"]], "main_table_var_names() (mp.dm_element method)": [[268, "mp.dm_element.main_table_var_names"]], "n (mp.dm_element attribute)": [[268, "mp.dm_element.n"]], "name() (mp.dm_element method)": [[268, "mp.dm_element.name"]], "nr (mp.dm_element attribute)": [[268, "mp.dm_element.nr"]], "off (mp.dm_element attribute)": [[268, "mp.dm_element.off"]], "on (mp.dm_element attribute)": [[268, "mp.dm_element.on"]], "pp_data() (mp.dm_element method)": [[268, "mp.dm_element.pp_data"]], "pp_data_cnt() (mp.dm_element method)": [[268, "mp.dm_element.pp_data_cnt"]], "pp_data_det() (mp.dm_element method)": [[268, "mp.dm_element.pp_data_det"]], "pp_data_ext() (mp.dm_element method)": [[268, "mp.dm_element.pp_data_ext"]], "pp_data_row_det() (mp.dm_element method)": [[268, "mp.dm_element.pp_data_row_det"]], "pp_data_sum() (mp.dm_element method)": [[268, "mp.dm_element.pp_data_sum"]], "pp_get_footers() (mp.dm_element method)": [[268, "mp.dm_element.pp_get_footers"]], "pp_get_footers_det() (mp.dm_element method)": [[268, "mp.dm_element.pp_get_footers_det"]], "pp_get_headers() (mp.dm_element method)": [[268, "mp.dm_element.pp_get_headers"]], "pp_get_headers_det() (mp.dm_element method)": [[268, "mp.dm_element.pp_get_headers_det"]], "pp_get_title_det() (mp.dm_element method)": [[268, "mp.dm_element.pp_get_title_det"]], "pp_have_section() (mp.dm_element method)": [[268, "mp.dm_element.pp_have_section"]], "pp_have_section_cnt() (mp.dm_element method)": [[268, "mp.dm_element.pp_have_section_cnt"]], "pp_have_section_det() (mp.dm_element method)": [[268, "mp.dm_element.pp_have_section_det"]], "pp_have_section_ext() (mp.dm_element method)": [[268, "mp.dm_element.pp_have_section_ext"]], "pp_have_section_sum() (mp.dm_element method)": [[268, "mp.dm_element.pp_have_section_sum"]], "pp_rows() (mp.dm_element method)": [[268, "mp.dm_element.pp_rows"]], "pretty_print() (mp.dm_element method)": [[268, "mp.dm_element.pretty_print"]], "rebuild() (mp.dm_element method)": [[268, "mp.dm_element.rebuild"]], "tab (mp.dm_element attribute)": [[268, "mp.dm_element.tab"]], "table_exists() (mp.dm_element method)": [[268, "mp.dm_element.table_exists"]], "update_status() (mp.dm_element method)": [[268, "mp.dm_element.update_status"]], "data_exists() (mp.dmc_element method)": [[269, "mp.dmc_element.data_exists"]], "data_field() (mp.dmc_element method)": [[269, "mp.dmc_element.data_field"]], "data_model_element() (mp.dmc_element method)": [[269, "mp.dmc_element.data_model_element"]], "data_subs() (mp.dmc_element method)": [[269, "mp.dmc_element.data_subs"]], "default_export_data_nrows() (mp.dmc_element method)": [[269, "mp.dmc_element.default_export_data_nrows"]], "default_export_data_table() (mp.dmc_element method)": [[269, "mp.dmc_element.default_export_data_table"]], "dmc_element (class in mp)": [[269, "mp.dmc_element"]], "export() (mp.dmc_element method)": [[269, "mp.dmc_element.export"]], "export_col() (mp.dmc_element method)": [[269, "mp.dmc_element.export_col"]], "export_table_values() (mp.dmc_element method)": [[269, "mp.dmc_element.export_table_values"]], "get_export_size() (mp.dmc_element method)": [[269, "mp.dmc_element.get_export_size"]], "get_export_spec() (mp.dmc_element method)": [[269, "mp.dmc_element.get_export_spec"]], "get_import_size() (mp.dmc_element method)": [[269, "mp.dmc_element.get_import_size"]], "get_import_spec() (mp.dmc_element method)": [[269, "mp.dmc_element.get_import_spec"]], "get_input_table_values() (mp.dmc_element method)": [[269, "mp.dmc_element.get_input_table_values"]], "import() (mp.dmc_element method)": [[269, "mp.dmc_element.import"]], "import_col() (mp.dmc_element method)": [[269, "mp.dmc_element.import_col"]], "import_table_values() (mp.dmc_element method)": [[269, "mp.dmc_element.import_table_values"]], "init_export_data() (mp.dmc_element method)": [[269, "mp.dmc_element.init_export_data"]], "name() (mp.dmc_element method)": [[269, "mp.dmc_element.name"]], "table_var_map() (mp.dmc_element method)": [[269, "mp.dmc_element.table_var_map"]], "data_field() (mp.dmce_branch_mpc2 method)": [[270, "mp.dmce_branch_mpc2.data_field"]], "default_export_data_table() (mp.dmce_branch_mpc2 method)": [[270, "mp.dmce_branch_mpc2.default_export_data_table"]], "dmce_branch_mpc2 (class in mp)": [[270, "mp.dmce_branch_mpc2"]], "name() (mp.dmce_branch_mpc2 method)": [[270, "mp.dmce_branch_mpc2.name"]], "table_var_map() (mp.dmce_branch_mpc2 method)": [[270, "mp.dmce_branch_mpc2.table_var_map"]], "bus_status_import() (mp.dmce_bus3p_mpc2 method)": [[271, "mp.dmce_bus3p_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus3p_mpc2 method)": [[271, "mp.dmce_bus3p_mpc2.data_field"]], "dmce_bus3p_mpc2 (class in mp)": [[271, "mp.dmce_bus3p_mpc2"]], "name() (mp.dmce_bus3p_mpc2 method)": [[271, "mp.dmce_bus3p_mpc2.name"]], "table_var_map() (mp.dmce_bus3p_mpc2 method)": [[271, "mp.dmce_bus3p_mpc2.table_var_map"]], "bus_name_export() (mp.dmce_bus_mpc2 method)": [[272, "mp.dmce_bus_mpc2.bus_name_export"]], "bus_name_import() (mp.dmce_bus_mpc2 method)": [[272, "mp.dmce_bus_mpc2.bus_name_import"]], "bus_status_import() (mp.dmce_bus_mpc2 method)": [[272, "mp.dmce_bus_mpc2.bus_status_import"]], "data_field() (mp.dmce_bus_mpc2 method)": [[272, "mp.dmce_bus_mpc2.data_field"]], "default_export_data_table() (mp.dmce_bus_mpc2 method)": [[272, "mp.dmce_bus_mpc2.default_export_data_table"]], "dmce_bus_mpc2 (class in mp)": [[272, "mp.dmce_bus_mpc2"]], "init_export_data() (mp.dmce_bus_mpc2 method)": [[272, "mp.dmce_bus_mpc2.init_export_data"]], "name() (mp.dmce_bus_mpc2 method)": [[272, "mp.dmce_bus_mpc2.name"]], "table_var_map() (mp.dmce_bus_mpc2 method)": [[272, "mp.dmce_bus_mpc2.table_var_map"]], "data_field() (mp.dmce_buslink_mpc2 method)": [[273, "mp.dmce_buslink_mpc2.data_field"]], "dmce_buslink_mpc2 (class in mp)": [[273, "mp.dmce_buslink_mpc2"]], "name() (mp.dmce_buslink_mpc2 method)": [[273, "mp.dmce_buslink_mpc2.name"]], "table_var_map() (mp.dmce_buslink_mpc2 method)": [[273, "mp.dmce_buslink_mpc2.table_var_map"]], "data_field() (mp.dmce_gen3p_mpc2 method)": [[274, "mp.dmce_gen3p_mpc2.data_field"]], "dmce_gen3p_mpc2 (class in mp)": [[274, "mp.dmce_gen3p_mpc2"]], "name() (mp.dmce_gen3p_mpc2 method)": [[274, "mp.dmce_gen3p_mpc2.name"]], "table_var_map() (mp.dmce_gen3p_mpc2 method)": [[274, "mp.dmce_gen3p_mpc2.table_var_map"]], "cost_table2gencost() (mp.dmce_gen_mpc2 static method)": [[275, "mp.dmce_gen_mpc2.cost_table2gencost"]], "data_field() (mp.dmce_gen_mpc2 method)": [[275, "mp.dmce_gen_mpc2.data_field"]], "default_export_data_table() (mp.dmce_gen_mpc2 method)": [[275, "mp.dmce_gen_mpc2.default_export_data_table"]], "dmce_gen_mpc2 (class in mp)": [[275, "mp.dmce_gen_mpc2"]], "gen_cost_export() (mp.dmce_gen_mpc2 method)": [[275, "mp.dmce_gen_mpc2.gen_cost_export"]], "gen_cost_import() (mp.dmce_gen_mpc2 method)": [[275, "mp.dmce_gen_mpc2.gen_cost_import"]], "gencost2cost_table() (mp.dmce_gen_mpc2 static method)": [[275, "mp.dmce_gen_mpc2.gencost2cost_table"]], "name() (mp.dmce_gen_mpc2 method)": [[275, "mp.dmce_gen_mpc2.name"]], "pwl1 (mp.dmce_gen_mpc2 attribute)": [[275, "mp.dmce_gen_mpc2.pwl1"]], "start_cost_export() (mp.dmce_gen_mpc2 method)": [[275, "mp.dmce_gen_mpc2.start_cost_export"]], "start_cost_import() (mp.dmce_gen_mpc2 method)": [[275, "mp.dmce_gen_mpc2.start_cost_import"]], "table_var_map() (mp.dmce_gen_mpc2 method)": [[275, "mp.dmce_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_legacy_dcline_mpc2 method)": [[276, "mp.dmce_legacy_dcline_mpc2.data_field"]], "dcline_cost_export() (mp.dmce_legacy_dcline_mpc2 method)": [[276, "mp.dmce_legacy_dcline_mpc2.dcline_cost_export"]], "dcline_cost_import() (mp.dmce_legacy_dcline_mpc2 method)": [[276, "mp.dmce_legacy_dcline_mpc2.dcline_cost_import"]], "default_export_data_table() (mp.dmce_legacy_dcline_mpc2 method)": [[276, "mp.dmce_legacy_dcline_mpc2.default_export_data_table"]], "dmce_legacy_dcline_mpc2 (class in mp)": [[276, "mp.dmce_legacy_dcline_mpc2"]], "name() (mp.dmce_legacy_dcline_mpc2 method)": [[276, "mp.dmce_legacy_dcline_mpc2.name"]], "table_var_map() (mp.dmce_legacy_dcline_mpc2 method)": [[276, "mp.dmce_legacy_dcline_mpc2.table_var_map"]], "create_line_construction_table() (mp.dmce_line3p_mpc2 method)": [[277, "mp.dmce_line3p_mpc2.create_line_construction_table"]], "data_field() (mp.dmce_line3p_mpc2 method)": [[277, "mp.dmce_line3p_mpc2.data_field"]], "dmce_line3p_mpc2 (class in mp)": [[277, "mp.dmce_line3p_mpc2"]], "import() (mp.dmce_line3p_mpc2 method)": [[277, "mp.dmce_line3p_mpc2.import"]], "name() (mp.dmce_line3p_mpc2 method)": [[277, "mp.dmce_line3p_mpc2.name"]], "table_var_map() (mp.dmce_line3p_mpc2 method)": [[277, "mp.dmce_line3p_mpc2.table_var_map"]], "bus (mp.dmce_load3p_mpc2 attribute)": [[278, "mp.dmce_load3p_mpc2.bus"]], "data_field() (mp.dmce_load3p_mpc2 method)": [[278, "mp.dmce_load3p_mpc2.data_field"]], "dmce_load3p_mpc2 (class in mp)": [[278, "mp.dmce_load3p_mpc2"]], "name() (mp.dmce_load3p_mpc2 method)": [[278, "mp.dmce_load3p_mpc2.name"]], "table_var_map() (mp.dmce_load3p_mpc2 method)": [[278, "mp.dmce_load3p_mpc2.table_var_map"]], "bus (mp.dmce_load_mpc2 attribute)": [[279, "mp.dmce_load_mpc2.bus"]], "data_field() (mp.dmce_load_mpc2 method)": [[279, "mp.dmce_load_mpc2.data_field"]], "dmce_load_mpc2 (class in mp)": [[279, "mp.dmce_load_mpc2"]], "get_export_size() (mp.dmce_load_mpc2 method)": [[279, "mp.dmce_load_mpc2.get_export_size"]], "get_import_size() (mp.dmce_load_mpc2 method)": [[279, "mp.dmce_load_mpc2.get_import_size"]], "name() (mp.dmce_load_mpc2 method)": [[279, "mp.dmce_load_mpc2.name"]], "scale_factor_fcn() (mp.dmce_load_mpc2 method)": [[279, "mp.dmce_load_mpc2.scale_factor_fcn"]], "sys_wide_zip_loads() (mp.dmce_load_mpc2 method)": [[279, "mp.dmce_load_mpc2.sys_wide_zip_loads"]], "table_var_map() (mp.dmce_load_mpc2 method)": [[279, "mp.dmce_load_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.data_subs"]], "dmce_reserve_gen_mpc2 (class in mp)": [[280, "mp.dmce_reserve_gen_mpc2"]], "get_export_size() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.get_export_size"]], "get_import_size() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.get_import_size"]], "import() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.import"]], "import_cost() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.import_cost"]], "import_qty() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.import_qty"]], "import_ramp() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.import_ramp"]], "name() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.name"]], "table_var_map() (mp.dmce_reserve_gen_mpc2 method)": [[280, "mp.dmce_reserve_gen_mpc2.table_var_map"]], "data_field() (mp.dmce_reserve_zone_mpc2 method)": [[281, "mp.dmce_reserve_zone_mpc2.data_field"]], "data_subs() (mp.dmce_reserve_zone_mpc2 method)": [[281, "mp.dmce_reserve_zone_mpc2.data_subs"]], "dmce_reserve_zone_mpc2 (class in mp)": [[281, "mp.dmce_reserve_zone_mpc2"]], "import_req() (mp.dmce_reserve_zone_mpc2 method)": [[281, "mp.dmce_reserve_zone_mpc2.import_req"]], "import_zones() (mp.dmce_reserve_zone_mpc2 method)": [[281, "mp.dmce_reserve_zone_mpc2.import_zones"]], "name() (mp.dmce_reserve_zone_mpc2 method)": [[281, "mp.dmce_reserve_zone_mpc2.name"]], "table_var_map() (mp.dmce_reserve_zone_mpc2 method)": [[281, "mp.dmce_reserve_zone_mpc2.table_var_map"]], "bus (mp.dmce_shunt_mpc2 attribute)": [[282, "mp.dmce_shunt_mpc2.bus"]], "data_field() (mp.dmce_shunt_mpc2 method)": [[282, "mp.dmce_shunt_mpc2.data_field"]], "dmce_shunt_mpc2 (class in mp)": [[282, "mp.dmce_shunt_mpc2"]], "get_export_size() (mp.dmce_shunt_mpc2 method)": [[282, "mp.dmce_shunt_mpc2.get_export_size"]], "get_import_size() (mp.dmce_shunt_mpc2 method)": [[282, "mp.dmce_shunt_mpc2.get_import_size"]], "name() (mp.dmce_shunt_mpc2 method)": [[282, "mp.dmce_shunt_mpc2.name"]], "table_var_map() (mp.dmce_shunt_mpc2 method)": [[282, "mp.dmce_shunt_mpc2.table_var_map"]], "data_field() (mp.dmce_xfmr3p_mpc2 method)": [[283, "mp.dmce_xfmr3p_mpc2.data_field"]], "dmce_xfmr3p_mpc2 (class in mp)": [[283, "mp.dmce_xfmr3p_mpc2"]], "name() (mp.dmce_xfmr3p_mpc2 method)": [[283, "mp.dmce_xfmr3p_mpc2.name"]], "table_var_map() (mp.dmce_xfmr3p_mpc2 method)": [[283, "mp.dmce_xfmr3p_mpc2.table_var_map"]], "b_fr (mp.dme_branch attribute)": [[284, "mp.dme_branch.b_fr"]], "b_to (mp.dme_branch attribute)": [[284, "mp.dme_branch.b_to"]], "build_params() (mp.dme_branch method)": [[284, "mp.dme_branch.build_params"]], "cxn_idx_prop() (mp.dme_branch method)": [[284, "mp.dme_branch.cxn_idx_prop"]], "cxn_type() (mp.dme_branch method)": [[284, "mp.dme_branch.cxn_type"]], "dme_branch (class in mp)": [[284, "mp.dme_branch"]], "export_vars() (mp.dme_branch method)": [[284, "mp.dme_branch.export_vars"]], "export_vars_offline_val() (mp.dme_branch method)": [[284, "mp.dme_branch.export_vars_offline_val"]], "fbus (mp.dme_branch attribute)": [[284, "mp.dme_branch.fbus"]], "g_fr (mp.dme_branch attribute)": [[284, "mp.dme_branch.g_fr"]], "g_to (mp.dme_branch attribute)": [[284, "mp.dme_branch.g_to"]], "initialize() (mp.dme_branch method)": [[284, "mp.dme_branch.initialize"]], "label() (mp.dme_branch method)": [[284, "mp.dme_branch.label"]], "labels() (mp.dme_branch method)": [[284, "mp.dme_branch.labels"]], "loss_tol (mp.dme_branch attribute)": [[284, "mp.dme_branch.loss_tol"]], "main_table_var_names() (mp.dme_branch method)": [[284, "mp.dme_branch.main_table_var_names"]], "name() (mp.dme_branch method)": [[284, "mp.dme_branch.name"]], "pp_data_cnt() (mp.dme_branch method)": [[284, "mp.dme_branch.pp_data_cnt"]], "pp_data_row_det() (mp.dme_branch method)": [[284, "mp.dme_branch.pp_data_row_det"]], "pp_data_sum() (mp.dme_branch method)": [[284, "mp.dme_branch.pp_data_sum"]], "pp_get_footers_det() (mp.dme_branch method)": [[284, "mp.dme_branch.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_branch method)": [[284, "mp.dme_branch.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_branch method)": [[284, "mp.dme_branch.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_branch method)": [[284, "mp.dme_branch.pp_have_section_sum"]], "r (mp.dme_branch attribute)": [[284, "mp.dme_branch.r"]], "rate_a (mp.dme_branch attribute)": [[284, "mp.dme_branch.rate_a"]], "ta (mp.dme_branch attribute)": [[284, "mp.dme_branch.ta"]], "tbus (mp.dme_branch attribute)": [[284, "mp.dme_branch.tbus"]], "tm (mp.dme_branch attribute)": [[284, "mp.dme_branch.tm"]], "update_status() (mp.dme_branch method)": [[284, "mp.dme_branch.update_status"]], "x (mp.dme_branch attribute)": [[284, "mp.dme_branch.x"]], "dme_branch_opf (class in mp)": [[285, "mp.dme_branch_opf"]], "export_vars() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.export_vars"]], "export_vars_offline_val() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.pp_get_headers_lim"]], "pp_get_title_lim() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_branch_opf method)": [[285, "mp.dme_branch_opf.pretty_print"]], "build_params() (mp.dme_bus method)": [[286, "mp.dme_bus.build_params"]], "dme_bus (class in mp)": [[286, "mp.dme_bus"]], "export_vars() (mp.dme_bus method)": [[286, "mp.dme_bus.export_vars"]], "export_vars_offline_val() (mp.dme_bus method)": [[286, "mp.dme_bus.export_vars_offline_val"]], "init_status() (mp.dme_bus method)": [[286, "mp.dme_bus.init_status"]], "label() (mp.dme_bus method)": [[286, "mp.dme_bus.label"]], "labels() (mp.dme_bus method)": [[286, "mp.dme_bus.labels"]], "main_table_var_names() (mp.dme_bus method)": [[286, "mp.dme_bus.main_table_var_names"]], "name() (mp.dme_bus method)": [[286, "mp.dme_bus.name"]], "pp_data_cnt() (mp.dme_bus method)": [[286, "mp.dme_bus.pp_data_cnt"]], "pp_data_ext() (mp.dme_bus method)": [[286, "mp.dme_bus.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus method)": [[286, "mp.dme_bus.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus method)": [[286, "mp.dme_bus.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus method)": [[286, "mp.dme_bus.pp_have_section_det"]], "pp_have_section_ext() (mp.dme_bus method)": [[286, "mp.dme_bus.pp_have_section_ext"]], "set_bus_type_pq() (mp.dme_bus method)": [[286, "mp.dme_bus.set_bus_type_pq"]], "set_bus_type_pv() (mp.dme_bus method)": [[286, "mp.dme_bus.set_bus_type_pv"]], "set_bus_type_ref() (mp.dme_bus method)": [[286, "mp.dme_bus.set_bus_type_ref"]], "type (mp.dme_bus attribute)": [[286, "mp.dme_bus.type"]], "update_status() (mp.dme_bus method)": [[286, "mp.dme_bus.update_status"]], "va_start (mp.dme_bus attribute)": [[286, "mp.dme_bus.va_start"]], "vm_control (mp.dme_bus attribute)": [[286, "mp.dme_bus.vm_control"]], "vm_lb (mp.dme_bus attribute)": [[286, "mp.dme_bus.vm_lb"]], "vm_start (mp.dme_bus attribute)": [[286, "mp.dme_bus.vm_start"]], "vm_ub (mp.dme_bus attribute)": [[286, "mp.dme_bus.vm_ub"]], "build_params() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.build_params"]], "dme_bus3p (class in mp)": [[287, "mp.dme_bus3p"]], "init_status() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.init_status"]], "label() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.label"]], "labels() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.labels"]], "main_table_var_names() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.main_table_var_names"]], "name() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.name"]], "pp_data_row_det() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.pp_have_section_det"]], "type (mp.dme_bus3p attribute)": [[287, "mp.dme_bus3p.type"]], "update_status() (mp.dme_bus3p method)": [[287, "mp.dme_bus3p.update_status"]], "va1_start (mp.dme_bus3p attribute)": [[287, "mp.dme_bus3p.va1_start"]], "va2_start (mp.dme_bus3p attribute)": [[287, "mp.dme_bus3p.va2_start"]], "va3_start (mp.dme_bus3p attribute)": [[287, "mp.dme_bus3p.va3_start"]], "vm1_start (mp.dme_bus3p attribute)": [[287, "mp.dme_bus3p.vm1_start"]], "vm2_start (mp.dme_bus3p attribute)": [[287, "mp.dme_bus3p.vm2_start"]], "vm3_start (mp.dme_bus3p attribute)": [[287, "mp.dme_bus3p.vm3_start"]], "vm_control (mp.dme_bus3p attribute)": [[287, "mp.dme_bus3p.vm_control"]], "dme_bus3p_opf (class in mp)": [[288, "mp.dme_bus3p_opf"]], "dme_bus_opf (class in mp)": [[289, "mp.dme_bus_opf"]], "export_vars() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.export_vars"]], "export_vars_offline_val() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.export_vars_offline_val"]], "main_table_var_names() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.pp_binding_rows_lim"]], "pp_data_ext() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.pp_data_ext"]], "pp_data_row_det() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.pp_data_row_lim"]], "pp_get_headers_det() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_bus_opf method)": [[289, "mp.dme_bus_opf.pp_have_section_lim"]], "build_params() (mp.dme_buslink method)": [[290, "mp.dme_buslink.build_params"]], "bus (mp.dme_buslink attribute)": [[290, "mp.dme_buslink.bus"]], "bus3p (mp.dme_buslink attribute)": [[290, "mp.dme_buslink.bus3p"]], "cxn_idx_prop() (mp.dme_buslink method)": [[290, "mp.dme_buslink.cxn_idx_prop"]], "cxn_type() (mp.dme_buslink method)": [[290, "mp.dme_buslink.cxn_type"]], "dme_buslink (class in mp)": [[290, "mp.dme_buslink"]], "initialize() (mp.dme_buslink method)": [[290, "mp.dme_buslink.initialize"]], "label() (mp.dme_buslink method)": [[290, "mp.dme_buslink.label"]], "labels() (mp.dme_buslink method)": [[290, "mp.dme_buslink.labels"]], "main_table_var_names() (mp.dme_buslink method)": [[290, "mp.dme_buslink.main_table_var_names"]], "name() (mp.dme_buslink method)": [[290, "mp.dme_buslink.name"]], "pg1_start (mp.dme_buslink attribute)": [[290, "mp.dme_buslink.pg1_start"]], "pg2_start (mp.dme_buslink attribute)": [[290, "mp.dme_buslink.pg2_start"]], "pg3_start (mp.dme_buslink attribute)": [[290, "mp.dme_buslink.pg3_start"]], "pp_data_row_det() (mp.dme_buslink method)": [[290, "mp.dme_buslink.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_buslink method)": [[290, "mp.dme_buslink.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_buslink method)": [[290, "mp.dme_buslink.pp_have_section_det"]], "qg1_start (mp.dme_buslink attribute)": [[290, "mp.dme_buslink.qg1_start"]], "qg2_start (mp.dme_buslink attribute)": [[290, "mp.dme_buslink.qg2_start"]], "qg3_start (mp.dme_buslink attribute)": [[290, "mp.dme_buslink.qg3_start"]], "update_status() (mp.dme_buslink method)": [[290, "mp.dme_buslink.update_status"]], "dme_buslink_opf (class in mp)": [[291, "mp.dme_buslink_opf"]], "apply_vm_setpoint() (mp.dme_gen method)": [[292, "mp.dme_gen.apply_vm_setpoint"]], "build_params() (mp.dme_gen method)": [[292, "mp.dme_gen.build_params"]], "bus (mp.dme_gen attribute)": [[292, "mp.dme_gen.bus"]], "bus_on (mp.dme_gen attribute)": [[292, "mp.dme_gen.bus_on"]], "cxn_idx_prop() (mp.dme_gen method)": [[292, "mp.dme_gen.cxn_idx_prop"]], "cxn_type() (mp.dme_gen method)": [[292, "mp.dme_gen.cxn_type"]], "dme_gen (class in mp)": [[292, "mp.dme_gen"]], "export_vars() (mp.dme_gen method)": [[292, "mp.dme_gen.export_vars"]], "export_vars_offline_val() (mp.dme_gen method)": [[292, "mp.dme_gen.export_vars_offline_val"]], "have_cost() (mp.dme_gen method)": [[292, "mp.dme_gen.have_cost"]], "initialize() (mp.dme_gen method)": [[292, "mp.dme_gen.initialize"]], "isload() (mp.dme_gen method)": [[292, "mp.dme_gen.isload"]], "label() (mp.dme_gen method)": [[292, "mp.dme_gen.label"]], "labels() (mp.dme_gen method)": [[292, "mp.dme_gen.labels"]], "main_table_var_names() (mp.dme_gen method)": [[292, "mp.dme_gen.main_table_var_names"]], "name() (mp.dme_gen method)": [[292, "mp.dme_gen.name"]], "pg_lb (mp.dme_gen attribute)": [[292, "mp.dme_gen.pg_lb"]], "pg_start (mp.dme_gen attribute)": [[292, "mp.dme_gen.pg_start"]], "pg_ub (mp.dme_gen attribute)": [[292, "mp.dme_gen.pg_ub"]], "pp_data_row_det() (mp.dme_gen method)": [[292, "mp.dme_gen.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen method)": [[292, "mp.dme_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_gen method)": [[292, "mp.dme_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_gen method)": [[292, "mp.dme_gen.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen method)": [[292, "mp.dme_gen.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen method)": [[292, "mp.dme_gen.pp_have_section_sum"]], "qg_lb (mp.dme_gen attribute)": [[292, "mp.dme_gen.qg_lb"]], "qg_start (mp.dme_gen attribute)": [[292, "mp.dme_gen.qg_start"]], "qg_ub (mp.dme_gen attribute)": [[292, "mp.dme_gen.qg_ub"]], "update_status() (mp.dme_gen method)": [[292, "mp.dme_gen.update_status"]], "violated_q_lims() (mp.dme_gen method)": [[292, "mp.dme_gen.violated_q_lims"]], "vm_setpoint (mp.dme_gen attribute)": [[292, "mp.dme_gen.vm_setpoint"]], "apply_vm_setpoint() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.apply_vm_setpoint"]], "build_params() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.build_params"]], "bus (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.bus"]], "bus_on (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.bus_on"]], "cxn_idx_prop() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.cxn_idx_prop"]], "cxn_type() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.cxn_type"]], "dme_gen3p (class in mp)": [[293, "mp.dme_gen3p"]], "initialize() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.initialize"]], "label() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.label"]], "labels() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.labels"]], "main_table_var_names() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.main_table_var_names"]], "name() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.name"]], "pg1_start (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.pg1_start"]], "pg2_start (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.pg2_start"]], "pg3_start (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.pg3_start"]], "pp_data_row_det() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.pp_have_section_sum"]], "qg1_start (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.qg1_start"]], "qg2_start (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.qg2_start"]], "qg3_start (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.qg3_start"]], "update_status() (mp.dme_gen3p method)": [[293, "mp.dme_gen3p.update_status"]], "vm1_setpoint (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.vm1_setpoint"]], "vm2_setpoint (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.vm2_setpoint"]], "vm3_setpoint (mp.dme_gen3p attribute)": [[293, "mp.dme_gen3p.vm3_setpoint"]], "dme_gen3p_opf (class in mp)": [[294, "mp.dme_gen3p_opf"]], "build_cost_params() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.build_cost_params"]], "dme_gen_opf (class in mp)": [[295, "mp.dme_gen_opf"]], "export_vars() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.export_vars"]], "export_vars_offline_val() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.export_vars_offline_val"]], "have_cost() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.have_cost"]], "main_table_var_names() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.main_table_var_names"]], "max_pwl_gencost() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.max_pwl_gencost"]], "pp_binding_rows_lim() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_gen_opf method)": [[295, "mp.dme_gen_opf.pretty_print"]], "apply_vm_setpoints() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.apply_vm_setpoints"]], "build_params() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.build_params"]], "cxn_idx_prop() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.cxn_idx_prop"]], "cxn_type() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.cxn_type"]], "dme_legacy_dcline (class in mp)": [[296, "mp.dme_legacy_dcline"]], "export_vars() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.export_vars_offline_val"]], "fbus (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.fbus"]], "fbus_on (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.fbus_on"]], "have_cost() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.have_cost"]], "initialize() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.initialize"]], "label() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.label"]], "labels() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.labels"]], "loss0 (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.loss0"]], "loss1 (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.loss1"]], "main_table_var_names() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.main_table_var_names"]], "name() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.name"]], "p_fr_lb (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.p_fr_lb"]], "p_fr_start (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.p_fr_start"]], "p_fr_ub (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.p_fr_ub"]], "p_to_start (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.p_to_start"]], "pp_data_row_det() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.pp_data_row_det"]], "pp_data_sum() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.pp_data_sum"]], "pp_get_headers_det() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.pp_have_section_sum"]], "q_fr_lb (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.q_fr_lb"]], "q_fr_start (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.q_fr_start"]], "q_fr_ub (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.q_fr_ub"]], "q_to_lb (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.q_to_lb"]], "q_to_start (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.q_to_start"]], "q_to_ub (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.q_to_ub"]], "tbus (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.tbus"]], "tbus_on (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.tbus_on"]], "update_status() (mp.dme_legacy_dcline method)": [[296, "mp.dme_legacy_dcline.update_status"]], "vm_setpoint_fr (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.vm_setpoint_fr"]], "vm_setpoint_to (mp.dme_legacy_dcline attribute)": [[296, "mp.dme_legacy_dcline.vm_setpoint_to"]], "build_cost_params() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.build_cost_params"]], "dme_legacy_dcline_opf (class in mp)": [[297, "mp.dme_legacy_dcline_opf"]], "export_vars() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.export_vars"]], "export_vars_offline_val() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.export_vars_offline_val"]], "have_cost() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.have_cost"]], "main_table_var_names() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.main_table_var_names"]], "pp_binding_rows_lim() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.pp_binding_rows_lim"]], "pp_data_row_lim() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.pp_data_row_lim"]], "pp_get_headers_lim() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.pp_get_headers_lim"]], "pp_have_section_lim() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.pp_have_section_lim"]], "pretty_print() (mp.dme_legacy_dcline_opf method)": [[297, "mp.dme_legacy_dcline_opf.pretty_print"]], "build_params() (mp.dme_line3p method)": [[298, "mp.dme_line3p.build_params"]], "create_line_construction_table() (mp.dme_line3p method)": [[298, "mp.dme_line3p.create_line_construction_table"]], "cxn_idx_prop() (mp.dme_line3p method)": [[298, "mp.dme_line3p.cxn_idx_prop"]], "cxn_type() (mp.dme_line3p method)": [[298, "mp.dme_line3p.cxn_type"]], "dme_line3p (class in mp)": [[298, "mp.dme_line3p"]], "fbus (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.fbus"]], "freq (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.freq"]], "initialize() (mp.dme_line3p method)": [[298, "mp.dme_line3p.initialize"]], "label() (mp.dme_line3p method)": [[298, "mp.dme_line3p.label"]], "labels() (mp.dme_line3p method)": [[298, "mp.dme_line3p.labels"]], "lc (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.lc"]], "lc_tab (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.lc_tab"]], "lc_table_var_names() (mp.dme_line3p method)": [[298, "mp.dme_line3p.lc_table_var_names"]], "lc_y_idx (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.lc_y_idx"]], "len (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.len"]], "main_table_var_names() (mp.dme_line3p method)": [[298, "mp.dme_line3p.main_table_var_names"]], "name() (mp.dme_line3p method)": [[298, "mp.dme_line3p.name"]], "pp_data_row_det() (mp.dme_line3p method)": [[298, "mp.dme_line3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_line3p method)": [[298, "mp.dme_line3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_line3p method)": [[298, "mp.dme_line3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_line3p method)": [[298, "mp.dme_line3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_line3p method)": [[298, "mp.dme_line3p.pp_have_section_sum"]], "pretty_print() (mp.dme_line3p method)": [[298, "mp.dme_line3p.pretty_print"]], "symmat2vec() (mp.dme_line3p method)": [[298, "mp.dme_line3p.symmat2vec"]], "tbus (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.tbus"]], "update_status() (mp.dme_line3p method)": [[298, "mp.dme_line3p.update_status"]], "vec2symmat() (mp.dme_line3p method)": [[298, "mp.dme_line3p.vec2symmat"]], "yc (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.yc"]], "ys (mp.dme_line3p attribute)": [[298, "mp.dme_line3p.ys"]], "dme_line3p_opf (class in mp)": [[299, "mp.dme_line3p_opf"]], "build_params() (mp.dme_load method)": [[300, "mp.dme_load.build_params"]], "bus (mp.dme_load attribute)": [[300, "mp.dme_load.bus"]], "cxn_idx_prop() (mp.dme_load method)": [[300, "mp.dme_load.cxn_idx_prop"]], "cxn_type() (mp.dme_load method)": [[300, "mp.dme_load.cxn_type"]], "dme_load (class in mp)": [[300, "mp.dme_load"]], "initialize() (mp.dme_load method)": [[300, "mp.dme_load.initialize"]], "label() (mp.dme_load method)": [[300, "mp.dme_load.label"]], "labels() (mp.dme_load method)": [[300, "mp.dme_load.labels"]], "main_table_var_names() (mp.dme_load method)": [[300, "mp.dme_load.main_table_var_names"]], "name() (mp.dme_load method)": [[300, "mp.dme_load.name"]], "pd (mp.dme_load attribute)": [[300, "mp.dme_load.pd"]], "pd_i (mp.dme_load attribute)": [[300, "mp.dme_load.pd_i"]], "pd_z (mp.dme_load attribute)": [[300, "mp.dme_load.pd_z"]], "pp_data_row_det() (mp.dme_load method)": [[300, "mp.dme_load.pp_data_row_det"]], "pp_data_sum() (mp.dme_load method)": [[300, "mp.dme_load.pp_data_sum"]], "pp_get_footers_det() (mp.dme_load method)": [[300, "mp.dme_load.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_load method)": [[300, "mp.dme_load.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load method)": [[300, "mp.dme_load.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load method)": [[300, "mp.dme_load.pp_have_section_sum"]], "qd (mp.dme_load attribute)": [[300, "mp.dme_load.qd"]], "qd_i (mp.dme_load attribute)": [[300, "mp.dme_load.qd_i"]], "qd_z (mp.dme_load attribute)": [[300, "mp.dme_load.qd_z"]], "update_status() (mp.dme_load method)": [[300, "mp.dme_load.update_status"]], "build_params() (mp.dme_load3p method)": [[301, "mp.dme_load3p.build_params"]], "bus (mp.dme_load3p attribute)": [[301, "mp.dme_load3p.bus"]], "cxn_idx_prop() (mp.dme_load3p method)": [[301, "mp.dme_load3p.cxn_idx_prop"]], "cxn_type() (mp.dme_load3p method)": [[301, "mp.dme_load3p.cxn_type"]], "dme_load3p (class in mp)": [[301, "mp.dme_load3p"]], "initialize() (mp.dme_load3p method)": [[301, "mp.dme_load3p.initialize"]], "label() (mp.dme_load3p method)": [[301, "mp.dme_load3p.label"]], "labels() (mp.dme_load3p method)": [[301, "mp.dme_load3p.labels"]], "main_table_var_names() (mp.dme_load3p method)": [[301, "mp.dme_load3p.main_table_var_names"]], "name() (mp.dme_load3p method)": [[301, "mp.dme_load3p.name"]], "pd1 (mp.dme_load3p attribute)": [[301, "mp.dme_load3p.pd1"]], "pd2 (mp.dme_load3p attribute)": [[301, "mp.dme_load3p.pd2"]], "pd3 (mp.dme_load3p attribute)": [[301, "mp.dme_load3p.pd3"]], "pf1 (mp.dme_load3p attribute)": [[301, "mp.dme_load3p.pf1"]], "pf2 (mp.dme_load3p attribute)": [[301, "mp.dme_load3p.pf2"]], "pf3 (mp.dme_load3p attribute)": [[301, "mp.dme_load3p.pf3"]], "pp_data_row_det() (mp.dme_load3p method)": [[301, "mp.dme_load3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_load3p method)": [[301, "mp.dme_load3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_load3p method)": [[301, "mp.dme_load3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_load3p method)": [[301, "mp.dme_load3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_load3p method)": [[301, "mp.dme_load3p.pp_have_section_sum"]], "update_status() (mp.dme_load3p method)": [[301, "mp.dme_load3p.update_status"]], "dme_load3p_opf (class in mp)": [[302, "mp.dme_load3p_opf"]], "dme_load_cpf (class in mp)": [[303, "mp.dme_load_cpf"]], "export_vars() (mp.dme_load_cpf method)": [[303, "mp.dme_load_cpf.export_vars"]], "parameterized() (mp.dme_load_cpf method)": [[303, "mp.dme_load_cpf.parameterized"]], "dme_load_opf (class in mp)": [[304, "mp.dme_load_opf"]], "build_params() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.build_params"]], "dme_reserve_gen (class in mp)": [[305, "mp.dme_reserve_gen"]], "export_vars() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.export_vars_offline_val"]], "gen (mp.dme_reserve_gen attribute)": [[305, "mp.dme_reserve_gen.gen"]], "label() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.label"]], "labels() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.labels"]], "main_table_var_names() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.main_table_var_names"]], "name() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.name"]], "pp_binding_rows_lim() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_binding_rows_lim"]], "pp_data_row_det() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_data_row_det"]], "pp_data_row_lim() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_data_row_lim"]], "pp_data_sum() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_data_sum"]], "pp_get_footers_det() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_get_headers_det"]], "pp_get_headers_lim() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_get_headers_lim"]], "pp_have_section_det() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_have_section_det"]], "pp_have_section_lim() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_have_section_lim"]], "pp_have_section_sum() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.pp_have_section_sum"]], "r_ub (mp.dme_reserve_gen attribute)": [[305, "mp.dme_reserve_gen.r_ub"]], "update_status() (mp.dme_reserve_gen method)": [[305, "mp.dme_reserve_gen.update_status"]], "build_params() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.build_params"]], "dme_reserve_zone (class in mp)": [[306, "mp.dme_reserve_zone"]], "export_vars() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.export_vars"]], "export_vars_offline_val() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.export_vars_offline_val"]], "label() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.label"]], "labels() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.labels"]], "main_table_var_names() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.main_table_var_names"]], "name() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.name"]], "pp_data_row_det() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.pp_data_row_det"]], "pp_get_headers_det() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.pp_have_section_det"]], "req (mp.dme_reserve_zone attribute)": [[306, "mp.dme_reserve_zone.req"]], "update_status() (mp.dme_reserve_zone method)": [[306, "mp.dme_reserve_zone.update_status"]], "zones (mp.dme_reserve_zone attribute)": [[306, "mp.dme_reserve_zone.zones"]], "ctol (mp.dme_shared_opf attribute)": [[307, "mp.dme_shared_opf.ctol"]], "dme_shared_opf (class in mp)": [[307, "mp.dme_shared_opf"]], "pp_binding_rows_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_binding_rows_lim"]], "pp_data_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_data_lim"]], "pp_data_other() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_data_other"]], "pp_data_row_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_data_row_lim"]], "pp_get_footers_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_get_footers_lim"]], "pp_get_footers_other() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_get_footers_other"]], "pp_get_headers_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_get_headers_lim"]], "pp_get_headers_other() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_get_headers_other"]], "pp_get_title_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_get_title_lim"]], "pp_have_section_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_have_section_lim"]], "pp_have_section_other() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_have_section_other"]], "pp_rows_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_rows_lim"]], "pp_rows_other() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_rows_other"]], "pp_set_tols_lim() (mp.dme_shared_opf method)": [[307, "mp.dme_shared_opf.pp_set_tols_lim"]], "ptol (mp.dme_shared_opf attribute)": [[307, "mp.dme_shared_opf.ptol"]], "bs (mp.dme_shunt attribute)": [[308, "mp.dme_shunt.bs"]], "build_params() (mp.dme_shunt method)": [[308, "mp.dme_shunt.build_params"]], "bus (mp.dme_shunt attribute)": [[308, "mp.dme_shunt.bus"]], "cxn_idx_prop() (mp.dme_shunt method)": [[308, "mp.dme_shunt.cxn_idx_prop"]], "cxn_type() (mp.dme_shunt method)": [[308, "mp.dme_shunt.cxn_type"]], "dme_shunt (class in mp)": [[308, "mp.dme_shunt"]], "gs (mp.dme_shunt attribute)": [[308, "mp.dme_shunt.gs"]], "initialize() (mp.dme_shunt method)": [[308, "mp.dme_shunt.initialize"]], "label() (mp.dme_shunt method)": [[308, "mp.dme_shunt.label"]], "labels() (mp.dme_shunt method)": [[308, "mp.dme_shunt.labels"]], "main_table_var_names() (mp.dme_shunt method)": [[308, "mp.dme_shunt.main_table_var_names"]], "name() (mp.dme_shunt method)": [[308, "mp.dme_shunt.name"]], "pp_data_row_det() (mp.dme_shunt method)": [[308, "mp.dme_shunt.pp_data_row_det"]], "pp_data_sum() (mp.dme_shunt method)": [[308, "mp.dme_shunt.pp_data_sum"]], "pp_get_footers_det() (mp.dme_shunt method)": [[308, "mp.dme_shunt.pp_get_footers_det"]], "pp_get_headers_det() (mp.dme_shunt method)": [[308, "mp.dme_shunt.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_shunt method)": [[308, "mp.dme_shunt.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_shunt method)": [[308, "mp.dme_shunt.pp_have_section_sum"]], "update_status() (mp.dme_shunt method)": [[308, "mp.dme_shunt.update_status"]], "dme_shunt_cpf (class in mp)": [[309, "mp.dme_shunt_cpf"]], "export_vars() (mp.dme_shunt_cpf method)": [[309, "mp.dme_shunt_cpf.export_vars"]], "parameterized() (mp.dme_shunt_cpf method)": [[309, "mp.dme_shunt_cpf.parameterized"]], "dme_shunt_opf (class in mp)": [[310, "mp.dme_shunt_opf"]], "build_params() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.build_params"]], "cxn_idx_prop() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.cxn_idx_prop"]], "cxn_type() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.cxn_type"]], "dme_xfmr3p (class in mp)": [[311, "mp.dme_xfmr3p"]], "fbus (mp.dme_xfmr3p attribute)": [[311, "mp.dme_xfmr3p.fbus"]], "initialize() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.initialize"]], "label() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.label"]], "labels() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.labels"]], "main_table_var_names() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.main_table_var_names"]], "name() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.name"]], "pp_data_row_det() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.pp_data_row_det"]], "pp_data_sum() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.pp_data_sum"]], "pp_get_headers_det() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.pp_get_headers_det"]], "pp_have_section_det() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.pp_have_section_det"]], "pp_have_section_sum() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.pp_have_section_sum"]], "pretty_print() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.pretty_print"]], "r (mp.dme_xfmr3p attribute)": [[311, "mp.dme_xfmr3p.r"]], "tbus (mp.dme_xfmr3p attribute)": [[311, "mp.dme_xfmr3p.tbus"]], "update_status() (mp.dme_xfmr3p method)": [[311, "mp.dme_xfmr3p.update_status"]], "x (mp.dme_xfmr3p attribute)": [[311, "mp.dme_xfmr3p.x"]], "dme_xfmr3p_opf (class in mp)": [[312, "mp.dme_xfmr3p_opf"]], "element_classes (mp.element_container attribute)": [[313, "mp.element_container.element_classes"]], "element_container (class in mp)": [[313, "mp.element_container"]], "elements (mp.element_container attribute)": [[313, "mp.element_container.elements"]], "modify_element_classes() (mp.element_container method)": [[313, "mp.element_container.modify_element_classes"]], "data_model_class() (mp.extension method)": [[314, "mp.extension.data_model_class"]], "dm_converter_class() (mp.extension method)": [[314, "mp.extension.dm_converter_class"]], "dm_element_classes() (mp.extension method)": [[314, "mp.extension.dm_element_classes"]], "dmc_element_classes() (mp.extension method)": [[314, "mp.extension.dmc_element_classes"]], "extension (class in mp)": [[314, "mp.extension"]], "math_model_class() (mp.extension method)": [[314, "mp.extension.math_model_class"]], "mm_element_classes() (mp.extension method)": [[314, "mp.extension.mm_element_classes"]], "network_model_class() (mp.extension method)": [[314, "mp.extension.network_model_class"]], "nm_element_classes() (mp.extension method)": [[314, "mp.extension.nm_element_classes"]], "task_class() (mp.extension method)": [[314, "mp.extension.task_class"]], "find_form_class() (mp.form method)": [[315, "mp.form.find_form_class"]], "form (class in mp)": [[315, "mp.form"]], "form_name() (mp.form method)": [[315, "mp.form.form_name"]], "form_tag() (mp.form method)": [[315, "mp.form.form_tag"]], "get_params() (mp.form method)": [[315, "mp.form.get_params"]], "model_params() (mp.form method)": [[315, "mp.form.model_params"]], "model_vvars() (mp.form method)": [[315, "mp.form.model_vvars"]], "model_zvars() (mp.form method)": [[315, "mp.form.model_zvars"]], "l (mp.form_ac attribute)": [[316, "mp.form_ac.L"]], "m (mp.form_ac attribute)": [[316, "mp.form_ac.M"]], "n (mp.form_ac attribute)": [[316, "mp.form_ac.N"]], "y (mp.form_ac attribute)": [[316, "mp.form_ac.Y"]], "aux_data_va_vm() (mp.form_ac method)": [[316, "mp.form_ac.aux_data_va_vm"]], "form_ac (class in mp)": [[316, "mp.form_ac"]], "i (mp.form_ac attribute)": [[316, "mp.form_ac.i"]], "inln (mp.form_ac attribute)": [[316, "mp.form_ac.inln"]], "inln_hess (mp.form_ac attribute)": [[316, "mp.form_ac.inln_hess"]], "model_params() (mp.form_ac method)": [[316, "mp.form_ac.model_params"]], "model_zvars() (mp.form_ac method)": [[316, "mp.form_ac.model_zvars"]], "param_ncols (mp.form_ac attribute)": [[316, "mp.form_ac.param_ncols"]], "port_active_power2_lim_fcn() (mp.form_ac method)": [[316, "mp.form_ac.port_active_power2_lim_fcn"]], "port_active_power2_lim_hess() (mp.form_ac method)": [[316, "mp.form_ac.port_active_power2_lim_hess"]], "port_active_power_lim_fcn() (mp.form_ac method)": [[316, "mp.form_ac.port_active_power_lim_fcn"]], "port_active_power_lim_hess() (mp.form_ac method)": [[316, "mp.form_ac.port_active_power_lim_hess"]], "port_apparent_power_lim_fcn() (mp.form_ac method)": [[316, "mp.form_ac.port_apparent_power_lim_fcn"]], "port_apparent_power_lim_hess() (mp.form_ac method)": [[316, "mp.form_ac.port_apparent_power_lim_hess"]], "port_current_lim_fcn() (mp.form_ac method)": [[316, "mp.form_ac.port_current_lim_fcn"]], "port_current_lim_hess() (mp.form_ac method)": [[316, "mp.form_ac.port_current_lim_hess"]], "port_inj_current() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_current"]], "port_inj_current_hess() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_current_hess"]], "port_inj_current_hess_v() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_current_jac"]], "port_inj_power() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_power"]], "port_inj_power_hess() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_power_hess"]], "port_inj_power_hess_v() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_ac method)": [[316, "mp.form_ac.port_inj_power_jac"]], "s (mp.form_ac attribute)": [[316, "mp.form_ac.s"]], "snln (mp.form_ac attribute)": [[316, "mp.form_ac.snln"]], "snln_hess (mp.form_ac attribute)": [[316, "mp.form_ac.snln_hess"]], "aux_data_va_vm() (mp.form_acc method)": [[317, "mp.form_acc.aux_data_va_vm"]], "form_acc (class in mp)": [[317, "mp.form_acc"]], "form_name() (mp.form_acc method)": [[317, "mp.form_acc.form_name"]], "form_tag() (mp.form_acc method)": [[317, "mp.form_acc.form_tag"]], "model_vvars() (mp.form_acc method)": [[317, "mp.form_acc.model_vvars"]], "port_inj_current_hess_v() (mp.form_acc method)": [[317, "mp.form_acc.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acc method)": [[317, "mp.form_acc.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acc method)": [[317, "mp.form_acc.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acc method)": [[317, "mp.form_acc.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acc method)": [[317, "mp.form_acc.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acc method)": [[317, "mp.form_acc.port_inj_power_jac"]], "va_fcn() (mp.form_acc method)": [[317, "mp.form_acc.va_fcn"]], "va_hess() (mp.form_acc method)": [[317, "mp.form_acc.va_hess"]], "vm2_fcn() (mp.form_acc method)": [[317, "mp.form_acc.vm2_fcn"]], "vm2_hess() (mp.form_acc method)": [[317, "mp.form_acc.vm2_hess"]], "aux_data_va_vm() (mp.form_acp method)": [[318, "mp.form_acp.aux_data_va_vm"]], "form_acp (class in mp)": [[318, "mp.form_acp"]], "form_name() (mp.form_acp method)": [[318, "mp.form_acp.form_name"]], "form_tag() (mp.form_acp method)": [[318, "mp.form_acp.form_tag"]], "model_vvars() (mp.form_acp method)": [[318, "mp.form_acp.model_vvars"]], "port_inj_current_hess_v() (mp.form_acp method)": [[318, "mp.form_acp.port_inj_current_hess_v"]], "port_inj_current_hess_vz() (mp.form_acp method)": [[318, "mp.form_acp.port_inj_current_hess_vz"]], "port_inj_current_jac() (mp.form_acp method)": [[318, "mp.form_acp.port_inj_current_jac"]], "port_inj_power_hess_v() (mp.form_acp method)": [[318, "mp.form_acp.port_inj_power_hess_v"]], "port_inj_power_hess_vz() (mp.form_acp method)": [[318, "mp.form_acp.port_inj_power_hess_vz"]], "port_inj_power_jac() (mp.form_acp method)": [[318, "mp.form_acp.port_inj_power_jac"]], "b (mp.form_dc attribute)": [[319, "mp.form_dc.B"]], "k (mp.form_dc attribute)": [[319, "mp.form_dc.K"]], "form_dc (class in mp)": [[319, "mp.form_dc"]], "form_name() (mp.form_dc method)": [[319, "mp.form_dc.form_name"]], "form_tag() (mp.form_dc method)": [[319, "mp.form_dc.form_tag"]], "model_params() (mp.form_dc method)": [[319, "mp.form_dc.model_params"]], "model_vvars() (mp.form_dc method)": [[319, "mp.form_dc.model_vvars"]], "model_zvars() (mp.form_dc method)": [[319, "mp.form_dc.model_zvars"]], "p (mp.form_dc attribute)": [[319, "mp.form_dc.p"]], "param_ncols (mp.form_dc attribute)": [[319, "mp.form_dc.param_ncols"]], "port_inj_power() (mp.form_dc method)": [[319, "mp.form_dc.port_inj_power"]], "add_elements() (mp.mapped_array method)": [[320, "mp.mapped_array.add_elements"]], "add_names() (mp.mapped_array method)": [[320, "mp.mapped_array.add_names"]], "copy() (mp.mapped_array method)": [[320, "mp.mapped_array.copy"]], "delete_elements() (mp.mapped_array method)": [[320, "mp.mapped_array.delete_elements"]], "display() (mp.mapped_array method)": [[320, "mp.mapped_array.display"]], "has_name() (mp.mapped_array method)": [[320, "mp.mapped_array.has_name"]], "length() (mp.mapped_array method)": [[320, "mp.mapped_array.length"]], "mapped_array (class in mp)": [[320, "mp.mapped_array"]], "mapped_array() (mp.mapped_array method)": [[320, "mp.mapped_array.mapped_array"]], "name2idx() (mp.mapped_array method)": [[320, "mp.mapped_array.name2idx"]], "size() (mp.mapped_array method)": [[320, "mp.mapped_array.size"]], "subsasgn() (mp.mapped_array method)": [[320, "mp.mapped_array.subsasgn"]], "subsref() (mp.mapped_array method)": [[320, "mp.mapped_array.subsref"]], "add_aux_data() (mp.math_model method)": [[321, "mp.math_model.add_aux_data"]], "add_constraints() (mp.math_model method)": [[321, "mp.math_model.add_constraints"]], "add_costs() (mp.math_model method)": [[321, "mp.math_model.add_costs"]], "add_node_balance_constraints() (mp.math_model method)": [[321, "mp.math_model.add_node_balance_constraints"]], "add_system_constraints() (mp.math_model method)": [[321, "mp.math_model.add_system_constraints"]], "add_system_costs() (mp.math_model method)": [[321, "mp.math_model.add_system_costs"]], "add_system_vars() (mp.math_model method)": [[321, "mp.math_model.add_system_vars"]], "add_vars() (mp.math_model method)": [[321, "mp.math_model.add_vars"]], "aux_data (mp.math_model attribute)": [[321, "mp.math_model.aux_data"]], "build() (mp.math_model method)": [[321, "mp.math_model.build"]], "build_base_aux_data() (mp.math_model method)": [[321, "mp.math_model.build_base_aux_data"]], "data_model_update() (mp.math_model method)": [[321, "mp.math_model.data_model_update"]], "display() (mp.math_model method)": [[321, "mp.math_model.display"]], "form_name() (mp.math_model method)": [[321, "mp.math_model.form_name"]], "form_tag() (mp.math_model method)": [[321, "mp.math_model.form_tag"]], "math_model (class in mp)": [[321, "mp.math_model"]], "network_model_x_soln() (mp.math_model method)": [[321, "mp.math_model.network_model_x_soln"]], "solve_opts() (mp.math_model method)": [[321, "mp.math_model.solve_opts"]], "task_name() (mp.math_model method)": [[321, "mp.math_model.task_name"]], "task_tag() (mp.math_model method)": [[321, "mp.math_model.task_tag"]], "update_nm_vars() (mp.math_model method)": [[321, "mp.math_model.update_nm_vars"]], "math_model_cpf_acc (class in mp)": [[322, "mp.math_model_cpf_acc"]], "math_model_cpf_acc() (mp.math_model_cpf_acc method)": [[322, "mp.math_model_cpf_acc.math_model_cpf_acc"]], "add_node_balance_constraints() (mp.math_model_cpf_acci method)": [[323, "mp.math_model_cpf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acci method)": [[323, "mp.math_model_cpf_acci.form_name"]], "form_tag() (mp.math_model_cpf_acci method)": [[323, "mp.math_model_cpf_acci.form_tag"]], "math_model_cpf_acci (class in mp)": [[323, "mp.math_model_cpf_acci"]], "add_node_balance_constraints() (mp.math_model_cpf_accs method)": [[324, "mp.math_model_cpf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_accs method)": [[324, "mp.math_model_cpf_accs.form_name"]], "form_tag() (mp.math_model_cpf_accs method)": [[324, "mp.math_model_cpf_accs.form_tag"]], "math_model_cpf_accs (class in mp)": [[324, "mp.math_model_cpf_accs"]], "callback_vlim() (mp.math_model_cpf_acp method)": [[325, "mp.math_model_cpf_acp.callback_vlim"]], "event_vlim() (mp.math_model_cpf_acp method)": [[325, "mp.math_model_cpf_acp.event_vlim"]], "math_model_cpf_acp (class in mp)": [[325, "mp.math_model_cpf_acp"]], "math_model_cpf_acp() (mp.math_model_cpf_acp method)": [[325, "mp.math_model_cpf_acp.math_model_cpf_acp"]], "add_node_balance_constraints() (mp.math_model_cpf_acpi method)": [[326, "mp.math_model_cpf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_cpf_acpi method)": [[326, "mp.math_model_cpf_acpi.form_name"]], "form_tag() (mp.math_model_cpf_acpi method)": [[326, "mp.math_model_cpf_acpi.form_tag"]], "math_model_cpf_acpi (class in mp)": [[326, "mp.math_model_cpf_acpi"]], "add_node_balance_constraints() (mp.math_model_cpf_acps method)": [[327, "mp.math_model_cpf_acps.add_node_balance_constraints"]], "expand_z_warmstart() (mp.math_model_cpf_acps method)": [[327, "mp.math_model_cpf_acps.expand_z_warmstart"]], "form_name() (mp.math_model_cpf_acps method)": [[327, "mp.math_model_cpf_acps.form_name"]], "form_tag() (mp.math_model_cpf_acps method)": [[327, "mp.math_model_cpf_acps.form_tag"]], "math_model_cpf_acps (class in mp)": [[327, "mp.math_model_cpf_acps"]], "solve_opts_warmstart() (mp.math_model_cpf_acps method)": [[327, "mp.math_model_cpf_acps.solve_opts_warmstart"]], "add_system_vars() (mp.math_model_opf method)": [[328, "mp.math_model_opf.add_system_vars"]], "build_aux_data() (mp.math_model_opf method)": [[328, "mp.math_model_opf.build_aux_data"]], "interior_va() (mp.math_model_opf method)": [[328, "mp.math_model_opf.interior_va"]], "interior_x0() (mp.math_model_opf method)": [[328, "mp.math_model_opf.interior_x0"]], "math_model_opf (class in mp)": [[328, "mp.math_model_opf"]], "task_name() (mp.math_model_opf method)": [[328, "mp.math_model_opf.task_name"]], "task_tag() (mp.math_model_opf method)": [[328, "mp.math_model_opf.task_tag"]], "math_model_opf_ac (class in mp)": [[329, "mp.math_model_opf_ac"]], "nodal_current_balance_fcn() (mp.math_model_opf_ac method)": [[329, "mp.math_model_opf_ac.nodal_current_balance_fcn"]], "nodal_current_balance_hess() (mp.math_model_opf_ac method)": [[329, "mp.math_model_opf_ac.nodal_current_balance_hess"]], "nodal_power_balance_fcn() (mp.math_model_opf_ac method)": [[329, "mp.math_model_opf_ac.nodal_power_balance_fcn"]], "nodal_power_balance_hess() (mp.math_model_opf_ac method)": [[329, "mp.math_model_opf_ac.nodal_power_balance_hess"]], "solve_opts() (mp.math_model_opf_ac method)": [[329, "mp.math_model_opf_ac.solve_opts"]], "convert_x_m2n() (mp.math_model_opf_acc method)": [[330, "mp.math_model_opf_acc.convert_x_m2n"]], "interior_va() (mp.math_model_opf_acc method)": [[330, "mp.math_model_opf_acc.interior_va"]], "math_model_opf_acc (class in mp)": [[330, "mp.math_model_opf_acc"]], "math_model_opf_acc() (mp.math_model_opf_acc method)": [[330, "mp.math_model_opf_acc.math_model_opf_acc"]], "add_node_balance_constraints() (mp.math_model_opf_acci method)": [[331, "mp.math_model_opf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acci method)": [[331, "mp.math_model_opf_acci.form_name"]], "form_tag() (mp.math_model_opf_acci method)": [[331, "mp.math_model_opf_acci.form_tag"]], "math_model_opf_acci (class in mp)": [[331, "mp.math_model_opf_acci"]], "node_power_balance_prices() (mp.math_model_opf_acci method)": [[331, "mp.math_model_opf_acci.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.add_vars"]], "build() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.build"]], "def_set_types() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.legacy_user_var_names"]], "math_model_opf_acci_legacy (class in mp)": [[332, "mp.math_model_opf_acci_legacy"]], "math_model_opf_acci_legacy() (mp.math_model_opf_acci_legacy method)": [[332, "mp.math_model_opf_acci_legacy.math_model_opf_acci_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_accs method)": [[333, "mp.math_model_opf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_accs method)": [[333, "mp.math_model_opf_accs.form_name"]], "form_tag() (mp.math_model_opf_accs method)": [[333, "mp.math_model_opf_accs.form_tag"]], "math_model_opf_accs (class in mp)": [[333, "mp.math_model_opf_accs"]], "node_power_balance_prices() (mp.math_model_opf_accs method)": [[333, "mp.math_model_opf_accs.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.add_vars"]], "build() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.build"]], "def_set_types() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.legacy_user_var_names"]], "math_model_opf_accs_legacy (class in mp)": [[334, "mp.math_model_opf_accs_legacy"]], "math_model_opf_accs_legacy() (mp.math_model_opf_accs_legacy method)": [[334, "mp.math_model_opf_accs_legacy.math_model_opf_accs_legacy"]], "convert_x_m2n() (mp.math_model_opf_acp method)": [[335, "mp.math_model_opf_acp.convert_x_m2n"]], "math_model_opf_acp (class in mp)": [[335, "mp.math_model_opf_acp"]], "math_model_opf_acp() (mp.math_model_opf_acp method)": [[335, "mp.math_model_opf_acp.math_model_opf_acp"]], "add_node_balance_constraints() (mp.math_model_opf_acpi method)": [[336, "mp.math_model_opf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acpi method)": [[336, "mp.math_model_opf_acpi.form_name"]], "form_tag() (mp.math_model_opf_acpi method)": [[336, "mp.math_model_opf_acpi.form_tag"]], "math_model_opf_acpi (class in mp)": [[336, "mp.math_model_opf_acpi"]], "node_power_balance_prices() (mp.math_model_opf_acpi method)": [[336, "mp.math_model_opf_acpi.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.add_vars"]], "build() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.build"]], "def_set_types() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.legacy_user_var_names"]], "math_model_opf_acpi_legacy (class in mp)": [[337, "mp.math_model_opf_acpi_legacy"]], "math_model_opf_acpi_legacy() (mp.math_model_opf_acpi_legacy method)": [[337, "mp.math_model_opf_acpi_legacy.math_model_opf_acpi_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_acps method)": [[338, "mp.math_model_opf_acps.add_node_balance_constraints"]], "form_name() (mp.math_model_opf_acps method)": [[338, "mp.math_model_opf_acps.form_name"]], "form_tag() (mp.math_model_opf_acps method)": [[338, "mp.math_model_opf_acps.form_tag"]], "math_model_opf_acps (class in mp)": [[338, "mp.math_model_opf_acps"]], "node_power_balance_prices() (mp.math_model_opf_acps method)": [[338, "mp.math_model_opf_acps.node_power_balance_prices"]], "add_named_set() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.add_vars"]], "build() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.build"]], "def_set_types() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.legacy_user_var_names"]], "math_model_opf_acps_legacy (class in mp)": [[339, "mp.math_model_opf_acps_legacy"]], "math_model_opf_acps_legacy() (mp.math_model_opf_acps_legacy method)": [[339, "mp.math_model_opf_acps_legacy.math_model_opf_acps_legacy"]], "add_node_balance_constraints() (mp.math_model_opf_dc method)": [[340, "mp.math_model_opf_dc.add_node_balance_constraints"]], "convert_x_m2n() (mp.math_model_opf_dc method)": [[340, "mp.math_model_opf_dc.convert_x_m2n"]], "form_name() (mp.math_model_opf_dc method)": [[340, "mp.math_model_opf_dc.form_name"]], "form_tag() (mp.math_model_opf_dc method)": [[340, "mp.math_model_opf_dc.form_tag"]], "math_model_opf_dc (class in mp)": [[340, "mp.math_model_opf_dc"]], "math_model_opf_dc() (mp.math_model_opf_dc method)": [[340, "mp.math_model_opf_dc.math_model_opf_dc"]], "solve_opts() (mp.math_model_opf_dc method)": [[340, "mp.math_model_opf_dc.solve_opts"]], "add_named_set() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.add_named_set"]], "add_system_constraints() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.add_system_constraints"]], "add_system_costs() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.add_system_costs"]], "add_vars() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.add_vars"]], "build() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.build"]], "def_set_types() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.def_set_types"]], "init_set_types() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.init_set_types"]], "legacy_user_var_names() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.legacy_user_var_names"]], "math_model_opf_dc_legacy (class in mp)": [[341, "mp.math_model_opf_dc_legacy"]], "math_model_opf_dc_legacy() (mp.math_model_opf_dc_legacy method)": [[341, "mp.math_model_opf_dc_legacy.math_model_opf_dc_legacy"]], "add_costs() (mp.math_model_pf method)": [[342, "mp.math_model_pf.add_costs"]], "add_system_vars() (mp.math_model_pf method)": [[342, "mp.math_model_pf.add_system_vars"]], "math_model_pf (class in mp)": [[342, "mp.math_model_pf"]], "solve_opts() (mp.math_model_pf method)": [[342, "mp.math_model_pf.solve_opts"]], "task_name() (mp.math_model_pf method)": [[342, "mp.math_model_pf.task_name"]], "task_tag() (mp.math_model_pf method)": [[342, "mp.math_model_pf.task_tag"]], "math_model_pf_ac (class in mp)": [[343, "mp.math_model_pf_ac"]], "math_model_pf_ac() (mp.math_model_pf_ac method)": [[343, "mp.math_model_pf_ac.math_model_pf_ac"]], "add_node_balance_constraints() (mp.math_model_pf_acci method)": [[344, "mp.math_model_pf_acci.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acci method)": [[344, "mp.math_model_pf_acci.form_name"]], "form_tag() (mp.math_model_pf_acci method)": [[344, "mp.math_model_pf_acci.form_tag"]], "math_model_pf_acci (class in mp)": [[344, "mp.math_model_pf_acci"]], "add_node_balance_constraints() (mp.math_model_pf_accs method)": [[345, "mp.math_model_pf_accs.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_accs method)": [[345, "mp.math_model_pf_accs.form_name"]], "form_tag() (mp.math_model_pf_accs method)": [[345, "mp.math_model_pf_accs.form_tag"]], "math_model_pf_accs (class in mp)": [[345, "mp.math_model_pf_accs"]], "add_node_balance_constraints() (mp.math_model_pf_acpi method)": [[346, "mp.math_model_pf_acpi.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_acpi method)": [[346, "mp.math_model_pf_acpi.form_name"]], "form_tag() (mp.math_model_pf_acpi method)": [[346, "mp.math_model_pf_acpi.form_tag"]], "math_model_pf_acpi (class in mp)": [[346, "mp.math_model_pf_acpi"]], "add_node_balance_constraints() (mp.math_model_pf_acps method)": [[347, "mp.math_model_pf_acps.add_node_balance_constraints"]], "fd_jac_approx() (mp.math_model_pf_acps method)": [[347, "mp.math_model_pf_acps.fd_jac_approx"]], "fdpf_b_matrix_models() (mp.math_model_pf_acps method)": [[347, "mp.math_model_pf_acps.fdpf_B_matrix_models"]], "form_name() (mp.math_model_pf_acps method)": [[347, "mp.math_model_pf_acps.form_name"]], "form_tag() (mp.math_model_pf_acps method)": [[347, "mp.math_model_pf_acps.form_tag"]], "gs_x_update() (mp.math_model_pf_acps method)": [[347, "mp.math_model_pf_acps.gs_x_update"]], "math_model_pf_acps (class in mp)": [[347, "mp.math_model_pf_acps"]], "zg_x_update() (mp.math_model_pf_acps method)": [[347, "mp.math_model_pf_acps.zg_x_update"]], "add_node_balance_constraints() (mp.math_model_pf_dc method)": [[348, "mp.math_model_pf_dc.add_node_balance_constraints"]], "form_name() (mp.math_model_pf_dc method)": [[348, "mp.math_model_pf_dc.form_name"]], "form_tag() (mp.math_model_pf_dc method)": [[348, "mp.math_model_pf_dc.form_tag"]], "math_model_pf_dc (class in mp)": [[348, "mp.math_model_pf_dc"]], "math_model_pf_dc() (mp.math_model_pf_dc method)": [[348, "mp.math_model_pf_dc.math_model_pf_dc"]], "solve_opts() (mp.math_model_pf_dc method)": [[348, "mp.math_model_pf_dc.solve_opts"]], "add_constraints() (mp.mm_element method)": [[349, "mp.mm_element.add_constraints"]], "add_costs() (mp.mm_element method)": [[349, "mp.mm_element.add_costs"]], "add_vars() (mp.mm_element method)": [[349, "mp.mm_element.add_vars"]], "data_model_element() (mp.mm_element method)": [[349, "mp.mm_element.data_model_element"]], "data_model_update() (mp.mm_element method)": [[349, "mp.mm_element.data_model_update"]], "data_model_update_off() (mp.mm_element method)": [[349, "mp.mm_element.data_model_update_off"]], "data_model_update_on() (mp.mm_element method)": [[349, "mp.mm_element.data_model_update_on"]], "mm_element (class in mp)": [[349, "mp.mm_element"]], "name() (mp.mm_element method)": [[349, "mp.mm_element.name"]], "network_model_element() (mp.mm_element method)": [[349, "mp.mm_element.network_model_element"]], "add_legacy_cost() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.add_legacy_cost"]], "add_legacy_user_constraints() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.add_legacy_user_constraints"]], "add_legacy_user_constraints_ac() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.add_legacy_user_constraints_ac"]], "add_legacy_user_costs() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.add_legacy_user_costs"]], "add_legacy_user_vars() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.add_legacy_user_vars"]], "build_legacy() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.build_legacy"]], "eval_legacy_cost() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.eval_legacy_cost"]], "get_mpc() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.get_mpc"]], "init_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.init_set_types_legacy"]], "mm_shared_opf_legacy (class in mp)": [[350, "mp.mm_shared_opf_legacy"]], "mod_set_types_legacy() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.mod_set_types_legacy"]], "params_legacy_cost() (mp.mm_shared_opf_legacy method)": [[350, "mp.mm_shared_opf_legacy.params_legacy_cost"]], "build_aux_data() (mp.mm_shared_pfcpf method)": [[351, "mp.mm_shared_pfcpf.build_aux_data"]], "mm_shared_pfcpf (class in mp)": [[351, "mp.mm_shared_pfcpf"]], "add_system_varset_pf() (mp.mm_shared_pfcpf_ac method)": [[352, "mp.mm_shared_pfcpf_ac.add_system_varset_pf"]], "mm_shared_pfcpf_ac (class in mp)": [[352, "mp.mm_shared_pfcpf_ac"]], "update_z() (mp.mm_shared_pfcpf_ac method)": [[352, "mp.mm_shared_pfcpf_ac.update_z"]], "build_aux_data_i() (mp.mm_shared_pfcpf_ac_i method)": [[353, "mp.mm_shared_pfcpf_ac_i.build_aux_data_i"]], "mm_shared_pfcpf_ac_i (class in mp)": [[353, "mp.mm_shared_pfcpf_ac_i"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acc method)": [[354, "mp.mm_shared_pfcpf_acc.convert_x_m2n"]], "mm_shared_pfcpf_acc (class in mp)": [[354, "mp.mm_shared_pfcpf_acc"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acci method)": [[355, "mp.mm_shared_pfcpf_acci.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acci method)": [[355, "mp.mm_shared_pfcpf_acci.build_aux_data"]], "mm_shared_pfcpf_acci (class in mp)": [[355, "mp.mm_shared_pfcpf_acci"]], "node_balance_equations() (mp.mm_shared_pfcpf_acci method)": [[355, "mp.mm_shared_pfcpf_acci.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_accs method)": [[356, "mp.mm_shared_pfcpf_accs.add_system_vars_pf"]], "mm_shared_pfcpf_accs (class in mp)": [[356, "mp.mm_shared_pfcpf_accs"]], "node_balance_equations() (mp.mm_shared_pfcpf_accs method)": [[356, "mp.mm_shared_pfcpf_accs.node_balance_equations"]], "convert_x_m2n() (mp.mm_shared_pfcpf_acp method)": [[357, "mp.mm_shared_pfcpf_acp.convert_x_m2n"]], "mm_shared_pfcpf_acp (class in mp)": [[357, "mp.mm_shared_pfcpf_acp"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acpi method)": [[358, "mp.mm_shared_pfcpf_acpi.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acpi method)": [[358, "mp.mm_shared_pfcpf_acpi.build_aux_data"]], "mm_shared_pfcpf_acpi (class in mp)": [[358, "mp.mm_shared_pfcpf_acpi"]], "node_balance_equations() (mp.mm_shared_pfcpf_acpi method)": [[358, "mp.mm_shared_pfcpf_acpi.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_acps method)": [[359, "mp.mm_shared_pfcpf_acps.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_acps method)": [[359, "mp.mm_shared_pfcpf_acps.build_aux_data"]], "mm_shared_pfcpf_acps (class in mp)": [[359, "mp.mm_shared_pfcpf_acps"]], "node_balance_equations() (mp.mm_shared_pfcpf_acps method)": [[359, "mp.mm_shared_pfcpf_acps.node_balance_equations"]], "add_system_vars_pf() (mp.mm_shared_pfcpf_dc method)": [[360, "mp.mm_shared_pfcpf_dc.add_system_vars_pf"]], "build_aux_data() (mp.mm_shared_pfcpf_dc method)": [[360, "mp.mm_shared_pfcpf_dc.build_aux_data"]], "convert_x_m2n() (mp.mm_shared_pfcpf_dc method)": [[360, "mp.mm_shared_pfcpf_dc.convert_x_m2n"]], "mm_shared_pfcpf_dc (class in mp)": [[360, "mp.mm_shared_pfcpf_dc"]], "update_z() (mp.mm_shared_pfcpf_dc method)": [[360, "mp.mm_shared_pfcpf_dc.update_z"]], "mme_branch (class in mp)": [[361, "mp.mme_branch"]], "name() (mp.mme_branch method)": [[361, "mp.mme_branch.name"]], "ang_diff_params() (mp.mme_branch_opf method)": [[362, "mp.mme_branch_opf.ang_diff_params"]], "ang_diff_prices() (mp.mme_branch_opf method)": [[362, "mp.mme_branch_opf.ang_diff_prices"]], "mme_branch_opf (class in mp)": [[362, "mp.mme_branch_opf"]], "add_constraints() (mp.mme_branch_opf_ac method)": [[363, "mp.mme_branch_opf_ac.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_ac method)": [[363, "mp.mme_branch_opf_ac.data_model_update_on"]], "mme_branch_opf_ac (class in mp)": [[363, "mp.mme_branch_opf_ac"]], "add_constraints() (mp.mme_branch_opf_acc method)": [[364, "mp.mme_branch_opf_acc.add_constraints"]], "ang_diff_prices() (mp.mme_branch_opf_acc method)": [[364, "mp.mme_branch_opf_acc.ang_diff_prices"]], "mme_branch_opf_acc (class in mp)": [[364, "mp.mme_branch_opf_acc"]], "add_constraints() (mp.mme_branch_opf_acp method)": [[365, "mp.mme_branch_opf_acp.add_constraints"]], "mme_branch_opf_acp (class in mp)": [[365, "mp.mme_branch_opf_acp"]], "add_constraints() (mp.mme_branch_opf_dc method)": [[366, "mp.mme_branch_opf_dc.add_constraints"]], "data_model_update_on() (mp.mme_branch_opf_dc method)": [[366, "mp.mme_branch_opf_dc.data_model_update_on"]], "mme_branch_opf_dc (class in mp)": [[366, "mp.mme_branch_opf_dc"]], "data_model_update_on() (mp.mme_branch_pf_ac method)": [[367, "mp.mme_branch_pf_ac.data_model_update_on"]], "mme_branch_pf_ac (class in mp)": [[367, "mp.mme_branch_pf_ac"]], "data_model_update_on() (mp.mme_branch_pf_dc method)": [[368, "mp.mme_branch_pf_dc.data_model_update_on"]], "mme_branch_pf_dc (class in mp)": [[368, "mp.mme_branch_pf_dc"]], "mme_bus (class in mp)": [[369, "mp.mme_bus"]], "name() (mp.mme_bus method)": [[369, "mp.mme_bus.name"]], "data_model_update_on() (mp.mme_bus3p method)": [[370, "mp.mme_bus3p.data_model_update_on"]], "mme_bus3p (class in mp)": [[370, "mp.mme_bus3p"]], "name() (mp.mme_bus3p method)": [[370, "mp.mme_bus3p.name"]], "interior_x0() (mp.mme_bus3p_opf_acc method)": [[371, "mp.mme_bus3p_opf_acc.interior_x0"]], "mme_bus3p_opf_acc (class in mp)": [[371, "mp.mme_bus3p_opf_acc"]], "interior_x0() (mp.mme_bus3p_opf_acp method)": [[372, "mp.mme_bus3p_opf_acp.interior_x0"]], "mme_bus3p_opf_acp (class in mp)": [[372, "mp.mme_bus3p_opf_acp"]], "interior_vm() (mp.mme_bus_opf_ac method)": [[373, "mp.mme_bus_opf_ac.interior_vm"]], "mme_bus_opf_ac (class in mp)": [[373, "mp.mme_bus_opf_ac"]], "add_constraints() (mp.mme_bus_opf_acc method)": [[374, "mp.mme_bus_opf_acc.add_constraints"]], "data_model_update_on() (mp.mme_bus_opf_acc method)": [[374, "mp.mme_bus_opf_acc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acc method)": [[374, "mp.mme_bus_opf_acc.interior_x0"]], "mme_bus_opf_acc (class in mp)": [[374, "mp.mme_bus_opf_acc"]], "data_model_update_on() (mp.mme_bus_opf_acp method)": [[375, "mp.mme_bus_opf_acp.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_acp method)": [[375, "mp.mme_bus_opf_acp.interior_x0"]], "mme_bus_opf_acp (class in mp)": [[375, "mp.mme_bus_opf_acp"]], "data_model_update_on() (mp.mme_bus_opf_dc method)": [[376, "mp.mme_bus_opf_dc.data_model_update_on"]], "interior_x0() (mp.mme_bus_opf_dc method)": [[376, "mp.mme_bus_opf_dc.interior_x0"]], "mme_bus_opf_dc (class in mp)": [[376, "mp.mme_bus_opf_dc"]], "data_model_update_on() (mp.mme_bus_pf_ac method)": [[377, "mp.mme_bus_pf_ac.data_model_update_on"]], "mme_bus_pf_ac (class in mp)": [[377, "mp.mme_bus_pf_ac"]], "data_model_update_on() (mp.mme_bus_pf_dc method)": [[378, "mp.mme_bus_pf_dc.data_model_update_on"]], "mme_bus_pf_dc (class in mp)": [[378, "mp.mme_bus_pf_dc"]], "mme_buslink (class in mp)": [[379, "mp.mme_buslink"]], "name() (mp.mme_buslink method)": [[379, "mp.mme_buslink.name"]], "interior_x0() (mp.mme_buslink_opf method)": [[380, "mp.mme_buslink_opf.interior_x0"]], "mme_buslink_opf (class in mp)": [[380, "mp.mme_buslink_opf"]], "add_constraints() (mp.mme_buslink_opf_acc method)": [[381, "mp.mme_buslink_opf_acc.add_constraints"]], "mme_buslink_opf_acc (class in mp)": [[381, "mp.mme_buslink_opf_acc"]], "va_fcn() (mp.mme_buslink_opf_acc method)": [[381, "mp.mme_buslink_opf_acc.va_fcn"]], "va_hess() (mp.mme_buslink_opf_acc method)": [[381, "mp.mme_buslink_opf_acc.va_hess"]], "vm2_fcn() (mp.mme_buslink_opf_acc method)": [[381, "mp.mme_buslink_opf_acc.vm2_fcn"]], "vm2_hess() (mp.mme_buslink_opf_acc method)": [[381, "mp.mme_buslink_opf_acc.vm2_hess"]], "add_constraints() (mp.mme_buslink_opf_acp method)": [[382, "mp.mme_buslink_opf_acp.add_constraints"]], "mme_buslink_opf_acp (class in mp)": [[382, "mp.mme_buslink_opf_acp"]], "add_constraints() (mp.mme_buslink_pf_ac method)": [[383, "mp.mme_buslink_pf_ac.add_constraints"]], "add_vars() (mp.mme_buslink_pf_ac method)": [[383, "mp.mme_buslink_pf_ac.add_vars"]], "mme_buslink_pf_ac (class in mp)": [[383, "mp.mme_buslink_pf_ac"]], "voltage_constraints() (mp.mme_buslink_pf_ac method)": [[383, "mp.mme_buslink_pf_ac.voltage_constraints"]], "add_constraints() (mp.mme_buslink_pf_acc method)": [[384, "mp.mme_buslink_pf_acc.add_constraints"]], "mme_buslink_pf_acc (class in mp)": [[384, "mp.mme_buslink_pf_acc"]], "pf_va_fcn() (mp.mme_buslink_pf_acc method)": [[384, "mp.mme_buslink_pf_acc.pf_va_fcn"]], "pf_vm_fcn() (mp.mme_buslink_pf_acc method)": [[384, "mp.mme_buslink_pf_acc.pf_vm_fcn"]], "add_constraints() (mp.mme_buslink_pf_acp method)": [[385, "mp.mme_buslink_pf_acp.add_constraints"]], "mme_buslink_pf_acp (class in mp)": [[385, "mp.mme_buslink_pf_acp"]], "mme_gen (class in mp)": [[386, "mp.mme_gen"]], "name() (mp.mme_gen method)": [[386, "mp.mme_gen.name"]], "data_model_update_on() (mp.mme_gen3p method)": [[387, "mp.mme_gen3p.data_model_update_on"]], "mme_gen3p (class in mp)": [[387, "mp.mme_gen3p"]], "name() (mp.mme_gen3p method)": [[387, "mp.mme_gen3p.name"]], "interior_x0() (mp.mme_gen3p_opf method)": [[388, "mp.mme_gen3p_opf.interior_x0"]], "mme_gen3p_opf (class in mp)": [[388, "mp.mme_gen3p_opf"]], "add_costs() (mp.mme_gen_opf method)": [[389, "mp.mme_gen_opf.add_costs"]], "add_vars() (mp.mme_gen_opf method)": [[389, "mp.mme_gen_opf.add_vars"]], "cost (mp.mme_gen_opf attribute)": [[389, "mp.mme_gen_opf.cost"]], "interior_x0() (mp.mme_gen_opf method)": [[389, "mp.mme_gen_opf.interior_x0"]], "mme_gen_opf (class in mp)": [[389, "mp.mme_gen_opf"]], "add_constraints() (mp.mme_gen_opf_ac method)": [[390, "mp.mme_gen_opf_ac.add_constraints"]], "add_costs() (mp.mme_gen_opf_ac method)": [[390, "mp.mme_gen_opf_ac.add_costs"]], "build_cost_params() (mp.mme_gen_opf_ac method)": [[390, "mp.mme_gen_opf_ac.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_ac method)": [[390, "mp.mme_gen_opf_ac.data_model_update_on"]], "disp_load_constant_pf_constraint() (mp.mme_gen_opf_ac method)": [[390, "mp.mme_gen_opf_ac.disp_load_constant_pf_constraint"]], "has_pq_cap() (mp.mme_gen_opf_ac method)": [[390, "mp.mme_gen_opf_ac.has_pq_cap"]], "mme_gen_opf_ac (class in mp)": [[390, "mp.mme_gen_opf_ac"]], "pq_capability_constraint() (mp.mme_gen_opf_ac method)": [[390, "mp.mme_gen_opf_ac.pq_capability_constraint"]], "add_constraints() (mp.mme_gen_opf_ac_oval method)": [[391, "mp.mme_gen_opf_ac_oval.add_constraints"]], "mme_gen_opf_ac_oval (class in mp)": [[391, "mp.mme_gen_opf_ac_oval"]], "oval_pq_capability_fcn() (mp.mme_gen_opf_ac_oval method)": [[391, "mp.mme_gen_opf_ac_oval.oval_pq_capability_fcn"]], "oval_pq_capability_hess() (mp.mme_gen_opf_ac_oval method)": [[391, "mp.mme_gen_opf_ac_oval.oval_pq_capability_hess"]], "add_constraints() (mp.mme_gen_opf_dc method)": [[392, "mp.mme_gen_opf_dc.add_constraints"]], "build_cost_params() (mp.mme_gen_opf_dc method)": [[392, "mp.mme_gen_opf_dc.build_cost_params"]], "data_model_update_on() (mp.mme_gen_opf_dc method)": [[392, "mp.mme_gen_opf_dc.data_model_update_on"]], "mme_gen_opf_dc (class in mp)": [[392, "mp.mme_gen_opf_dc"]], "data_model_update_on() (mp.mme_gen_pf_ac method)": [[393, "mp.mme_gen_pf_ac.data_model_update_on"]], "mme_gen_pf_ac (class in mp)": [[393, "mp.mme_gen_pf_ac"]], "data_model_update_on() (mp.mme_gen_pf_dc method)": [[394, "mp.mme_gen_pf_dc.data_model_update_on"]], "mme_gen_pf_dc (class in mp)": [[394, "mp.mme_gen_pf_dc"]], "mme_legacy_dcline (class in mp)": [[395, "mp.mme_legacy_dcline"]], "name() (mp.mme_legacy_dcline method)": [[395, "mp.mme_legacy_dcline.name"]], "add_constraints() (mp.mme_legacy_dcline_opf method)": [[396, "mp.mme_legacy_dcline_opf.add_constraints"]], "add_costs() (mp.mme_legacy_dcline_opf method)": [[396, "mp.mme_legacy_dcline_opf.add_costs"]], "add_vars() (mp.mme_legacy_dcline_opf method)": [[396, "mp.mme_legacy_dcline_opf.add_vars"]], "build_cost_params() (mp.mme_legacy_dcline_opf method)": [[396, "mp.mme_legacy_dcline_opf.build_cost_params"]], "cost (mp.mme_legacy_dcline_opf attribute)": [[396, "mp.mme_legacy_dcline_opf.cost"]], "interior_x0() (mp.mme_legacy_dcline_opf method)": [[396, "mp.mme_legacy_dcline_opf.interior_x0"]], "mme_legacy_dcline_opf (class in mp)": [[396, "mp.mme_legacy_dcline_opf"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_ac method)": [[397, "mp.mme_legacy_dcline_opf_ac.data_model_update_on"]], "mme_legacy_dcline_opf_ac (class in mp)": [[397, "mp.mme_legacy_dcline_opf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_opf_dc method)": [[398, "mp.mme_legacy_dcline_opf_dc.data_model_update_on"]], "mme_legacy_dcline_opf_dc (class in mp)": [[398, "mp.mme_legacy_dcline_opf_dc"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_ac method)": [[399, "mp.mme_legacy_dcline_pf_ac.data_model_update_on"]], "mme_legacy_dcline_pf_ac (class in mp)": [[399, "mp.mme_legacy_dcline_pf_ac"]], "data_model_update_on() (mp.mme_legacy_dcline_pf_dc method)": [[400, "mp.mme_legacy_dcline_pf_dc.data_model_update_on"]], "mme_legacy_dcline_pf_dc (class in mp)": [[400, "mp.mme_legacy_dcline_pf_dc"]], "data_model_update_on() (mp.mme_line3p method)": [[401, "mp.mme_line3p.data_model_update_on"]], "mme_line3p (class in mp)": [[401, "mp.mme_line3p"]], "name() (mp.mme_line3p method)": [[401, "mp.mme_line3p.name"]], "interior_x0() (mp.mme_line3p_opf method)": [[402, "mp.mme_line3p_opf.interior_x0"]], "mme_line3p_opf (class in mp)": [[402, "mp.mme_line3p_opf"]], "mme_load (class in mp)": [[403, "mp.mme_load"]], "name() (mp.mme_load method)": [[403, "mp.mme_load.name"]], "data_model_update_on() (mp.mme_load_cpf method)": [[404, "mp.mme_load_cpf.data_model_update_on"]], "mme_load_cpf (class in mp)": [[404, "mp.mme_load_cpf"]], "data_model_update_on() (mp.mme_load_pf_ac method)": [[405, "mp.mme_load_pf_ac.data_model_update_on"]], "mme_load_pf_ac (class in mp)": [[405, "mp.mme_load_pf_ac"]], "data_model_update_on() (mp.mme_load_pf_dc method)": [[406, "mp.mme_load_pf_dc.data_model_update_on"]], "mme_load_pf_dc (class in mp)": [[406, "mp.mme_load_pf_dc"]], "add_constraints() (mp.mme_reserve_gen method)": [[407, "mp.mme_reserve_gen.add_constraints"]], "add_costs() (mp.mme_reserve_gen method)": [[407, "mp.mme_reserve_gen.add_costs"]], "add_vars() (mp.mme_reserve_gen method)": [[407, "mp.mme_reserve_gen.add_vars"]], "data_model_update_on() (mp.mme_reserve_gen method)": [[407, "mp.mme_reserve_gen.data_model_update_on"]], "mme_reserve_gen (class in mp)": [[407, "mp.mme_reserve_gen"]], "name() (mp.mme_reserve_gen method)": [[407, "mp.mme_reserve_gen.name"]], "add_constraints() (mp.mme_reserve_zone method)": [[408, "mp.mme_reserve_zone.add_constraints"]], "data_model_update_on() (mp.mme_reserve_zone method)": [[408, "mp.mme_reserve_zone.data_model_update_on"]], "mme_reserve_zone (class in mp)": [[408, "mp.mme_reserve_zone"]], "name() (mp.mme_reserve_zone method)": [[408, "mp.mme_reserve_zone.name"]], "mme_shunt (class in mp)": [[409, "mp.mme_shunt"]], "name() (mp.mme_shunt method)": [[409, "mp.mme_shunt.name"]], "data_model_update_on() (mp.mme_shunt_cpf method)": [[410, "mp.mme_shunt_cpf.data_model_update_on"]], "mme_shunt_cpf (class in mp)": [[410, "mp.mme_shunt_cpf"]], "data_model_update_on() (mp.mme_shunt_pf_ac method)": [[411, "mp.mme_shunt_pf_ac.data_model_update_on"]], "mme_shunt_pf_ac (class in mp)": [[411, "mp.mme_shunt_pf_ac"]], "data_model_update_on() (mp.mme_shunt_pf_dc method)": [[412, "mp.mme_shunt_pf_dc.data_model_update_on"]], "mme_shunt_pf_dc (class in mp)": [[412, "mp.mme_shunt_pf_dc"]], "data_model_update_on() (mp.mme_xfmr3p method)": [[413, "mp.mme_xfmr3p.data_model_update_on"]], "mme_xfmr3p (class in mp)": [[413, "mp.mme_xfmr3p"]], "name() (mp.mme_xfmr3p method)": [[413, "mp.mme_xfmr3p.name"]], "interior_x0() (mp.mme_xfmr3p_opf method)": [[414, "mp.mme_xfmr3p_opf.interior_x0"]], "mme_xfmr3p_opf (class in mp)": [[414, "mp.mme_xfmr3p_opf"]], "add_node() (mp.net_model method)": [[415, "mp.net_model.add_node"]], "add_nodes() (mp.net_model method)": [[415, "mp.net_model.add_nodes"]], "add_port() (mp.net_model method)": [[415, "mp.net_model.add_port"]], "add_state() (mp.net_model method)": [[415, "mp.net_model.add_state"]], "add_states() (mp.net_model method)": [[415, "mp.net_model.add_states"]], "add_var() (mp.net_model method)": [[415, "mp.net_model.add_var"]], "add_vvars() (mp.net_model method)": [[415, "mp.net_model.add_vvars"]], "add_zvars() (mp.net_model method)": [[415, "mp.net_model.add_zvars"]], "build() (mp.net_model method)": [[415, "mp.net_model.build"]], "build_params() (mp.net_model method)": [[415, "mp.net_model.build_params"]], "def_set_types() (mp.net_model method)": [[415, "mp.net_model.def_set_types"]], "display() (mp.net_model method)": [[415, "mp.net_model.display"]], "ensure_ref_node() (mp.net_model method)": [[415, "mp.net_model.ensure_ref_node"]], "get_node_idx() (mp.net_model method)": [[415, "mp.net_model.get_node_idx"]], "get_port_idx() (mp.net_model method)": [[415, "mp.net_model.get_port_idx"]], "get_state_idx() (mp.net_model method)": [[415, "mp.net_model.get_state_idx"]], "init_set_types() (mp.net_model method)": [[415, "mp.net_model.init_set_types"]], "name() (mp.net_model method)": [[415, "mp.net_model.name"]], "net_model (class in mp)": [[415, "mp.net_model"]], "node (mp.net_model attribute)": [[415, "mp.net_model.node"]], "node_types() (mp.net_model method)": [[415, "mp.net_model.node_types"]], "np() (mp.net_model method)": [[415, "mp.net_model.np"]], "nv (mp.net_model attribute)": [[415, "mp.net_model.nv"]], "nz() (mp.net_model method)": [[415, "mp.net_model.nz"]], "params_var() (mp.net_model method)": [[415, "mp.net_model.params_var"]], "port (mp.net_model attribute)": [[415, "mp.net_model.port"]], "set_node_type_pq() (mp.net_model method)": [[415, "mp.net_model.set_node_type_pq"]], "set_node_type_pv() (mp.net_model method)": [[415, "mp.net_model.set_node_type_pv"]], "set_node_type_ref() (mp.net_model method)": [[415, "mp.net_model.set_node_type_ref"]], "set_type_idx_map() (mp.net_model method)": [[415, "mp.net_model.set_type_idx_map"]], "set_type_label() (mp.net_model method)": [[415, "mp.net_model.set_type_label"]], "stack_matrix_params() (mp.net_model method)": [[415, "mp.net_model.stack_matrix_params"]], "stack_vector_params() (mp.net_model method)": [[415, "mp.net_model.stack_vector_params"]], "state (mp.net_model attribute)": [[415, "mp.net_model.state"]], "the_np (mp.net_model attribute)": [[415, "mp.net_model.the_np"]], "the_nz (mp.net_model attribute)": [[415, "mp.net_model.the_nz"]], "build_params() (mp.net_model_ac method)": [[416, "mp.net_model_ac.build_params"]], "def_set_types() (mp.net_model_ac method)": [[416, "mp.net_model_ac.def_set_types"]], "get_va() (mp.net_model_ac method)": [[416, "mp.net_model_ac.get_va"]], "net_model_ac (class in mp)": [[416, "mp.net_model_ac"]], "nodal_complex_current_balance() (mp.net_model_ac method)": [[416, "mp.net_model_ac.nodal_complex_current_balance"]], "nodal_complex_current_balance_hess() (mp.net_model_ac method)": [[416, "mp.net_model_ac.nodal_complex_current_balance_hess"]], "nodal_complex_power_balance() (mp.net_model_ac method)": [[416, "mp.net_model_ac.nodal_complex_power_balance"]], "nodal_complex_power_balance_hess() (mp.net_model_ac method)": [[416, "mp.net_model_ac.nodal_complex_power_balance_hess"]], "port_inj_nln() (mp.net_model_ac method)": [[416, "mp.net_model_ac.port_inj_nln"]], "port_inj_nln_hess() (mp.net_model_ac method)": [[416, "mp.net_model_ac.port_inj_nln_hess"]], "port_inj_soln() (mp.net_model_ac method)": [[416, "mp.net_model_ac.port_inj_soln"]], "def_set_types() (mp.net_model_acc method)": [[417, "mp.net_model_acc.def_set_types"]], "initial_voltage_angle() (mp.net_model_acc method)": [[417, "mp.net_model_acc.initial_voltage_angle"]], "net_model_acc (class in mp)": [[417, "mp.net_model_acc"]], "net_model_acc() (mp.net_model_acc method)": [[417, "mp.net_model_acc.net_model_acc"]], "def_set_types() (mp.net_model_acp method)": [[418, "mp.net_model_acp.def_set_types"]], "initial_voltage_angle() (mp.net_model_acp method)": [[418, "mp.net_model_acp.initial_voltage_angle"]], "net_model_acp (class in mp)": [[418, "mp.net_model_acp"]], "net_model_acp() (mp.net_model_acp method)": [[418, "mp.net_model_acp.net_model_acp"]], "build_params() (mp.net_model_dc method)": [[419, "mp.net_model_dc.build_params"]], "def_set_types() (mp.net_model_dc method)": [[419, "mp.net_model_dc.def_set_types"]], "net_model_dc (class in mp)": [[419, "mp.net_model_dc"]], "net_model_dc() (mp.net_model_dc method)": [[419, "mp.net_model_dc.net_model_dc"]], "port_inj_soln() (mp.net_model_dc method)": [[419, "mp.net_model_dc.port_inj_soln"]], "va (mp.net_model_dc attribute)": [[419, "mp.net_model_dc.va"]], "z (mp.net_model_dc attribute)": [[419, "mp.net_model_dc.z"]], "c (mp.nm_element attribute)": [[420, "mp.nm_element.C"]], "d (mp.nm_element attribute)": [[420, "mp.nm_element.D"]], "add_nodes() (mp.nm_element method)": [[420, "mp.nm_element.add_nodes"]], "add_states() (mp.nm_element method)": [[420, "mp.nm_element.add_states"]], "add_vvars() (mp.nm_element method)": [[420, "mp.nm_element.add_vvars"]], "add_zvars() (mp.nm_element method)": [[420, "mp.nm_element.add_zvars"]], "build_params() (mp.nm_element method)": [[420, "mp.nm_element.build_params"]], "count() (mp.nm_element method)": [[420, "mp.nm_element.count"]], "data_model_element() (mp.nm_element method)": [[420, "mp.nm_element.data_model_element"]], "display() (mp.nm_element method)": [[420, "mp.nm_element.display"]], "get_nv_() (mp.nm_element method)": [[420, "mp.nm_element.get_nv_"]], "incidence_matrix() (mp.nm_element method)": [[420, "mp.nm_element.incidence_matrix"]], "math_model_element() (mp.nm_element method)": [[420, "mp.nm_element.math_model_element"]], "name() (mp.nm_element method)": [[420, "mp.nm_element.name"]], "nk (mp.nm_element attribute)": [[420, "mp.nm_element.nk"]], "nm_element (class in mp)": [[420, "mp.nm_element"]], "nn() (mp.nm_element method)": [[420, "mp.nm_element.nn"]], "node_indices() (mp.nm_element method)": [[420, "mp.nm_element.node_indices"]], "node_types() (mp.nm_element method)": [[420, "mp.nm_element.node_types"]], "np() (mp.nm_element method)": [[420, "mp.nm_element.np"]], "nz() (mp.nm_element method)": [[420, "mp.nm_element.nz"]], "set_node_type_pq() (mp.nm_element method)": [[420, "mp.nm_element.set_node_type_pq"]], "set_node_type_pv() (mp.nm_element method)": [[420, "mp.nm_element.set_node_type_pv"]], "set_node_type_ref() (mp.nm_element method)": [[420, "mp.nm_element.set_node_type_ref"]], "soln (mp.nm_element attribute)": [[420, "mp.nm_element.soln"]], "x2vz() (mp.nm_element method)": [[420, "mp.nm_element.x2vz"]], "name() (mp.nme_branch method)": [[421, "mp.nme_branch.name"]], "nme_branch (class in mp)": [[421, "mp.nme_branch"]], "np() (mp.nme_branch method)": [[421, "mp.nme_branch.np"]], "build_params() (mp.nme_branch_ac method)": [[422, "mp.nme_branch_ac.build_params"]], "nme_branch_ac (class in mp)": [[422, "mp.nme_branch_ac"]], "ang_diff_fcn() (mp.nme_branch_acc method)": [[423, "mp.nme_branch_acc.ang_diff_fcn"]], "ang_diff_hess() (mp.nme_branch_acc method)": [[423, "mp.nme_branch_acc.ang_diff_hess"]], "nme_branch_acc (class in mp)": [[423, "mp.nme_branch_acc"]], "nme_branch_acp (class in mp)": [[424, "mp.nme_branch_acp"]], "build_params() (mp.nme_branch_dc method)": [[425, "mp.nme_branch_dc.build_params"]], "nme_branch_dc (class in mp)": [[425, "mp.nme_branch_dc"]], "name() (mp.nme_bus method)": [[426, "mp.nme_bus.name"]], "nme_bus (class in mp)": [[426, "mp.nme_bus"]], "nn() (mp.nme_bus method)": [[426, "mp.nme_bus.nn"]], "node_types() (mp.nme_bus method)": [[426, "mp.nme_bus.node_types"]], "set_node_type_pq() (mp.nme_bus method)": [[426, "mp.nme_bus.set_node_type_pq"]], "set_node_type_pv() (mp.nme_bus method)": [[426, "mp.nme_bus.set_node_type_pv"]], "set_node_type_ref() (mp.nme_bus method)": [[426, "mp.nme_bus.set_node_type_ref"]], "name() (mp.nme_bus3p method)": [[427, "mp.nme_bus3p.name"]], "nme_bus3p (class in mp)": [[427, "mp.nme_bus3p"]], "nn() (mp.nme_bus3p method)": [[427, "mp.nme_bus3p.nn"]], "node_types() (mp.nme_bus3p method)": [[427, "mp.nme_bus3p.node_types"]], "add_vvars() (mp.nme_bus3p_acc method)": [[428, "mp.nme_bus3p_acc.add_vvars"]], "nme_bus3p_acc (class in mp)": [[428, "mp.nme_bus3p_acc"]], "add_vvars() (mp.nme_bus3p_acp method)": [[429, "mp.nme_bus3p_acp.add_vvars"]], "nme_bus3p_acp (class in mp)": [[429, "mp.nme_bus3p_acp"]], "add_vvars() (mp.nme_bus_acc method)": [[430, "mp.nme_bus_acc.add_vvars"]], "nme_bus_acc (class in mp)": [[430, "mp.nme_bus_acc"]], "add_vvars() (mp.nme_bus_acp method)": [[431, "mp.nme_bus_acp.add_vvars"]], "nme_bus_acp (class in mp)": [[431, "mp.nme_bus_acp"]], "add_vvars() (mp.nme_bus_dc method)": [[432, "mp.nme_bus_dc.add_vvars"]], "nme_bus_dc (class in mp)": [[432, "mp.nme_bus_dc"]], "add_zvars() (mp.nme_buslink method)": [[433, "mp.nme_buslink.add_zvars"]], "build_params() (mp.nme_buslink method)": [[433, "mp.nme_buslink.build_params"]], "name() (mp.nme_buslink method)": [[433, "mp.nme_buslink.name"]], "nme_buslink (class in mp)": [[433, "mp.nme_buslink"]], "np() (mp.nme_buslink method)": [[433, "mp.nme_buslink.np"]], "nz() (mp.nme_buslink method)": [[433, "mp.nme_buslink.nz"]], "voltage_constraints() (mp.nme_buslink method)": [[433, "mp.nme_buslink.voltage_constraints"]], "nme_buslink_acc (class in mp)": [[434, "mp.nme_buslink_acc"]], "nme_buslink_acp (class in mp)": [[435, "mp.nme_buslink_acp"]], "name() (mp.nme_gen method)": [[436, "mp.nme_gen.name"]], "nme_gen (class in mp)": [[436, "mp.nme_gen"]], "np() (mp.nme_gen method)": [[436, "mp.nme_gen.np"]], "nz() (mp.nme_gen method)": [[436, "mp.nme_gen.nz"]], "add_zvars() (mp.nme_gen3p method)": [[437, "mp.nme_gen3p.add_zvars"]], "build_params() (mp.nme_gen3p method)": [[437, "mp.nme_gen3p.build_params"]], "name() (mp.nme_gen3p method)": [[437, "mp.nme_gen3p.name"]], "nme_gen3p (class in mp)": [[437, "mp.nme_gen3p"]], "np() (mp.nme_gen3p method)": [[437, "mp.nme_gen3p.np"]], "nz() (mp.nme_gen3p method)": [[437, "mp.nme_gen3p.nz"]], "nme_gen3p_acc (class in mp)": [[438, "mp.nme_gen3p_acc"]], "nme_gen3p_acp (class in mp)": [[439, "mp.nme_gen3p_acp"]], "add_zvars() (mp.nme_gen_ac method)": [[440, "mp.nme_gen_ac.add_zvars"]], "build_params() (mp.nme_gen_ac method)": [[440, "mp.nme_gen_ac.build_params"]], "nme_gen_ac (class in mp)": [[440, "mp.nme_gen_ac"]], "nme_gen_acc (class in mp)": [[441, "mp.nme_gen_acc"]], "nme_gen_acp (class in mp)": [[442, "mp.nme_gen_acp"]], "add_zvars() (mp.nme_gen_dc method)": [[443, "mp.nme_gen_dc.add_zvars"]], "build_params() (mp.nme_gen_dc method)": [[443, "mp.nme_gen_dc.build_params"]], "nme_gen_dc (class in mp)": [[443, "mp.nme_gen_dc"]], "name() (mp.nme_legacy_dcline method)": [[444, "mp.nme_legacy_dcline.name"]], "nme_legacy_dcline (class in mp)": [[444, "mp.nme_legacy_dcline"]], "np() (mp.nme_legacy_dcline method)": [[444, "mp.nme_legacy_dcline.np"]], "nz() (mp.nme_legacy_dcline method)": [[444, "mp.nme_legacy_dcline.nz"]], "add_zvars() (mp.nme_legacy_dcline_ac method)": [[445, "mp.nme_legacy_dcline_ac.add_zvars"]], "build_params() (mp.nme_legacy_dcline_ac method)": [[445, "mp.nme_legacy_dcline_ac.build_params"]], "nme_legacy_dcline_ac (class in mp)": [[445, "mp.nme_legacy_dcline_ac"]], "nme_legacy_dcline_acc (class in mp)": [[446, "mp.nme_legacy_dcline_acc"]], "nme_legacy_dcline_acp (class in mp)": [[447, "mp.nme_legacy_dcline_acp"]], "add_zvars() (mp.nme_legacy_dcline_dc method)": [[448, "mp.nme_legacy_dcline_dc.add_zvars"]], "build_params() (mp.nme_legacy_dcline_dc method)": [[448, "mp.nme_legacy_dcline_dc.build_params"]], "nme_legacy_dcline_dc (class in mp)": [[448, "mp.nme_legacy_dcline_dc"]], "build_params() (mp.nme_line3p method)": [[449, "mp.nme_line3p.build_params"]], "name() (mp.nme_line3p method)": [[449, "mp.nme_line3p.name"]], "nme_line3p (class in mp)": [[449, "mp.nme_line3p"]], "np() (mp.nme_line3p method)": [[449, "mp.nme_line3p.np"]], "vec2symmat_stacked() (mp.nme_line3p method)": [[449, "mp.nme_line3p.vec2symmat_stacked"]], "name() (mp.nme_load method)": [[450, "mp.nme_load.name"]], "nme_load (class in mp)": [[450, "mp.nme_load"]], "np() (mp.nme_load method)": [[450, "mp.nme_load.np"]], "build_params() (mp.nme_load3p method)": [[451, "mp.nme_load3p.build_params"]], "name() (mp.nme_load3p method)": [[451, "mp.nme_load3p.name"]], "nme_load3p (class in mp)": [[451, "mp.nme_load3p"]], "np() (mp.nme_load3p method)": [[451, "mp.nme_load3p.np"]], "build_params() (mp.nme_load_ac method)": [[452, "mp.nme_load_ac.build_params"]], "nme_load_ac (class in mp)": [[452, "mp.nme_load_ac"]], "port_inj_current_nln() (mp.nme_load_ac method)": [[452, "mp.nme_load_ac.port_inj_current_nln"]], "port_inj_power_nln() (mp.nme_load_ac method)": [[452, "mp.nme_load_ac.port_inj_power_nln"]], "nme_load_acc (class in mp)": [[453, "mp.nme_load_acc"]], "nme_load_acp (class in mp)": [[454, "mp.nme_load_acp"]], "build_params() (mp.nme_load_dc method)": [[455, "mp.nme_load_dc.build_params"]], "nme_load_dc (class in mp)": [[455, "mp.nme_load_dc"]], "name() (mp.nme_shunt method)": [[456, "mp.nme_shunt.name"]], "nme_shunt (class in mp)": [[456, "mp.nme_shunt"]], "np() (mp.nme_shunt method)": [[456, "mp.nme_shunt.np"]], "build_params() (mp.nme_shunt_ac method)": [[457, "mp.nme_shunt_ac.build_params"]], "nme_shunt_ac (class in mp)": [[457, "mp.nme_shunt_ac"]], "nme_shunt_acc (class in mp)": [[458, "mp.nme_shunt_acc"]], "nme_shunt_acp (class in mp)": [[459, "mp.nme_shunt_acp"]], "build_params() (mp.nme_shunt_dc method)": [[460, "mp.nme_shunt_dc.build_params"]], "nme_shunt_dc (class in mp)": [[460, "mp.nme_shunt_dc"]], "build_params() (mp.nme_xfmr3p method)": [[461, "mp.nme_xfmr3p.build_params"]], "name() (mp.nme_xfmr3p method)": [[461, "mp.nme_xfmr3p.name"]], "nme_xfmr3p (class in mp)": [[461, "mp.nme_xfmr3p"]], "np() (mp.nme_xfmr3p method)": [[461, "mp.nme_xfmr3p.np"]], "cache (mp.sm_legacy_cost attribute)": [[462, "mp.sm_legacy_cost.cache"]], "sm_legacy_cost (class in mp)": [[462, "mp.sm_legacy_cost"]], "sm_legacy_cost() (mp.sm_legacy_cost method)": [[462, "mp.sm_legacy_cost.sm_legacy_cost"]], "data_model_build() (mp.task method)": [[463, "mp.task.data_model_build"]], "data_model_build_post() (mp.task method)": [[463, "mp.task.data_model_build_post"]], "data_model_build_pre() (mp.task method)": [[463, "mp.task.data_model_build_pre"]], "data_model_class() (mp.task method)": [[463, "mp.task.data_model_class"]], "data_model_class_default() (mp.task method)": [[463, "mp.task.data_model_class_default"]], "data_model_create() (mp.task method)": [[463, "mp.task.data_model_create"]], "dm (mp.task attribute)": [[463, "mp.task.dm"]], "dm_converter_build() (mp.task method)": [[463, "mp.task.dm_converter_build"]], "dm_converter_class() (mp.task method)": [[463, "mp.task.dm_converter_class"]], "dm_converter_class_mpc2_default() (mp.task method)": [[463, "mp.task.dm_converter_class_mpc2_default"]], "dm_converter_create() (mp.task method)": [[463, "mp.task.dm_converter_create"]], "dmc (mp.task attribute)": [[463, "mp.task.dmc"]], "et (mp.task attribute)": [[463, "mp.task.et"]], "i_dm (mp.task attribute)": [[463, "mp.task.i_dm"]], "i_mm (mp.task attribute)": [[463, "mp.task.i_mm"]], "i_nm (mp.task attribute)": [[463, "mp.task.i_nm"]], "load_dm() (mp.task method)": [[463, "mp.task.load_dm"]], "math_model_build() (mp.task method)": [[463, "mp.task.math_model_build"]], "math_model_class() (mp.task method)": [[463, "mp.task.math_model_class"]], "math_model_class_default() (mp.task method)": [[463, "mp.task.math_model_class_default"]], "math_model_create() (mp.task method)": [[463, "mp.task.math_model_create"]], "math_model_opt() (mp.task method)": [[463, "mp.task.math_model_opt"]], "message (mp.task attribute)": [[463, "mp.task.message"]], "mm (mp.task attribute)": [[463, "mp.task.mm"]], "mm_opt (mp.task attribute)": [[463, "mp.task.mm_opt"]], "name (mp.task attribute)": [[463, "mp.task.name"]], "network_model_build() (mp.task method)": [[463, "mp.task.network_model_build"]], "network_model_build_post() (mp.task method)": [[463, "mp.task.network_model_build_post"]], "network_model_build_pre() (mp.task method)": [[463, "mp.task.network_model_build_pre"]], "network_model_class() (mp.task method)": [[463, "mp.task.network_model_class"]], "network_model_class_default() (mp.task method)": [[463, "mp.task.network_model_class_default"]], "network_model_create() (mp.task method)": [[463, "mp.task.network_model_create"]], "network_model_update() (mp.task method)": [[463, "mp.task.network_model_update"]], "network_model_x_soln() (mp.task method)": [[463, "mp.task.network_model_x_soln"]], "next_dm() (mp.task method)": [[463, "mp.task.next_dm"]], "next_mm() (mp.task method)": [[463, "mp.task.next_mm"]], "next_nm() (mp.task method)": [[463, "mp.task.next_nm"]], "nm (mp.task attribute)": [[463, "mp.task.nm"]], "print_soln() (mp.task method)": [[463, "mp.task.print_soln"]], "print_soln_header() (mp.task method)": [[463, "mp.task.print_soln_header"]], "run() (mp.task method)": [[463, "mp.task.run"]], "run_post() (mp.task method)": [[463, "mp.task.run_post"]], "run_pre() (mp.task method)": [[463, "mp.task.run_pre"]], "save_soln() (mp.task method)": [[463, "mp.task.save_soln"]], "success (mp.task attribute)": [[463, "mp.task.success"]], "tag (mp.task attribute)": [[463, "mp.task.tag"]], "task (class in mp)": [[463, "mp.task"]], "data_model_build() (mp.task_cpf method)": [[464, "mp.task_cpf.data_model_build"]], "data_model_class_default() (mp.task_cpf method)": [[464, "mp.task_cpf.data_model_class_default"]], "dm_converter_class() (mp.task_cpf method)": [[464, "mp.task_cpf.dm_converter_class"]], "math_model_class_default() (mp.task_cpf method)": [[464, "mp.task_cpf.math_model_class_default"]], "math_model_opt() (mp.task_cpf method)": [[464, "mp.task_cpf.math_model_opt"]], "network_model_build() (mp.task_cpf method)": [[464, "mp.task_cpf.network_model_build"]], "network_model_update() (mp.task_cpf method)": [[464, "mp.task_cpf.network_model_update"]], "network_model_x_soln() (mp.task_cpf method)": [[464, "mp.task_cpf.network_model_x_soln"]], "next_mm() (mp.task_cpf method)": [[464, "mp.task_cpf.next_mm"]], "run_pre() (mp.task_cpf method)": [[464, "mp.task_cpf.run_pre"]], "task_cpf (class in mp)": [[464, "mp.task_cpf"]], "task_cpf() (mp.task_cpf method)": [[464, "mp.task_cpf.task_cpf"]], "warmstart (mp.task_cpf attribute)": [[464, "mp.task_cpf.warmstart"]], "legacy_post_run() (mp.task_cpf_legacy method)": [[465, "mp.task_cpf_legacy.legacy_post_run"]], "run_post() (mp.task_cpf_legacy method)": [[465, "mp.task_cpf_legacy.run_post"]], "run_pre() (mp.task_cpf_legacy method)": [[465, "mp.task_cpf_legacy.run_pre"]], "task_cpf_legacy (class in mp)": [[465, "mp.task_cpf_legacy"]], "data_model_build_post() (mp.task_opf method)": [[466, "mp.task_opf.data_model_build_post"]], "data_model_class_default() (mp.task_opf method)": [[466, "mp.task_opf.data_model_class_default"]], "dc (mp.task_opf attribute)": [[466, "mp.task_opf.dc"]], "math_model_class_default() (mp.task_opf method)": [[466, "mp.task_opf.math_model_class_default"]], "network_model_class_default() (mp.task_opf method)": [[466, "mp.task_opf.network_model_class_default"]], "print_soln_header() (mp.task_opf method)": [[466, "mp.task_opf.print_soln_header"]], "run_pre() (mp.task_opf method)": [[466, "mp.task_opf.run_pre"]], "task_opf (class in mp)": [[466, "mp.task_opf"]], "data_model_build_post() (mp.task_opf_legacy method)": [[467, "mp.task_opf_legacy.data_model_build_post"]], "dm_converter_class_mpc2_default() (mp.task_opf_legacy method)": [[467, "mp.task_opf_legacy.dm_converter_class_mpc2_default"]], "legacy_post_run() (mp.task_opf_legacy method)": [[467, "mp.task_opf_legacy.legacy_post_run"]], "math_model_class_default() (mp.task_opf_legacy method)": [[467, "mp.task_opf_legacy.math_model_class_default"]], "run_post() (mp.task_opf_legacy method)": [[467, "mp.task_opf_legacy.run_post"]], "run_pre() (mp.task_opf_legacy method)": [[467, "mp.task_opf_legacy.run_pre"]], "task_opf_legacy (class in mp)": [[467, "mp.task_opf_legacy"]], "dc (mp.task_pf attribute)": [[468, "mp.task_pf.dc"]], "enforce_q_lims() (mp.task_pf method)": [[468, "mp.task_pf.enforce_q_lims"]], "fixed_q_idx (mp.task_pf attribute)": [[468, "mp.task_pf.fixed_q_idx"]], "fixed_q_qty (mp.task_pf attribute)": [[468, "mp.task_pf.fixed_q_qty"]], "iterations (mp.task_pf attribute)": [[468, "mp.task_pf.iterations"]], "math_model_class_default() (mp.task_pf method)": [[468, "mp.task_pf.math_model_class_default"]], "name (mp.task_pf attribute)": [[468, "mp.task_pf.name"]], "network_model_build_post() (mp.task_pf method)": [[468, "mp.task_pf.network_model_build_post"]], "network_model_class_default() (mp.task_pf method)": [[468, "mp.task_pf.network_model_class_default"]], "network_model_x_soln() (mp.task_pf method)": [[468, "mp.task_pf.network_model_x_soln"]], "next_dm() (mp.task_pf method)": [[468, "mp.task_pf.next_dm"]], "ref (mp.task_pf attribute)": [[468, "mp.task_pf.ref"]], "ref0 (mp.task_pf attribute)": [[468, "mp.task_pf.ref0"]], "run_pre() (mp.task_pf method)": [[468, "mp.task_pf.run_pre"]], "tag (mp.task_pf attribute)": [[468, "mp.task_pf.tag"]], "task_pf (class in mp)": [[468, "mp.task_pf"]], "va_ref0 (mp.task_pf attribute)": [[468, "mp.task_pf.va_ref0"]], "legacy_post_run() (mp.task_pf_legacy method)": [[469, "mp.task_pf_legacy.legacy_post_run"]], "run_post() (mp.task_pf_legacy method)": [[469, "mp.task_pf_legacy.run_post"]], "run_pre() (mp.task_pf_legacy method)": [[469, "mp.task_pf_legacy.run_pre"]], "task_pf_legacy (class in mp)": [[469, "mp.task_pf_legacy"]], "run_pre_legacy() (mp.task_shared_legacy method)": [[470, "mp.task_shared_legacy.run_pre_legacy"]], "task_shared_legacy (class in mp)": [[470, "mp.task_shared_legacy"]], "dm_element_classes() (mp.xt_3p method)": [[471, "mp.xt_3p.dm_element_classes"]], "dmc_element_classes() (mp.xt_3p method)": [[471, "mp.xt_3p.dmc_element_classes"]], "mm_element_classes() (mp.xt_3p method)": [[471, "mp.xt_3p.mm_element_classes"]], "nm_element_classes() (mp.xt_3p method)": [[471, "mp.xt_3p.nm_element_classes"]], "xt_3p (class in mp)": [[471, "mp.xt_3p"]], "dm_element_classes() (mp.xt_legacy_dcline method)": [[472, "mp.xt_legacy_dcline.dm_element_classes"]], "dmc_element_classes() (mp.xt_legacy_dcline method)": [[472, "mp.xt_legacy_dcline.dmc_element_classes"]], "mm_element_classes() (mp.xt_legacy_dcline method)": [[472, "mp.xt_legacy_dcline.mm_element_classes"]], "nm_element_classes() (mp.xt_legacy_dcline method)": [[472, "mp.xt_legacy_dcline.nm_element_classes"]], "xt_legacy_dcline (class in mp)": [[472, "mp.xt_legacy_dcline"]], "mm_element_classes() (mp.xt_oval_cap_curve method)": [[473, "mp.xt_oval_cap_curve.mm_element_classes"]], "xt_oval_cap_curve (class in mp)": [[473, "mp.xt_oval_cap_curve"]], "dm_element_classes() (mp.xt_reserves method)": [[474, "mp.xt_reserves.dm_element_classes"]], "dmc_element_classes() (mp.xt_reserves method)": [[474, "mp.xt_reserves.dmc_element_classes"]], "mm_element_classes() (mp.xt_reserves method)": [[474, "mp.xt_reserves.mm_element_classes"]], "xt_reserves (class in mp)": [[474, "mp.xt_reserves"]], "display() (mp_table method)": [[475, "mp_table.display"]], "end() (mp_table method)": [[475, "mp_table.end"]], "extract_named_args() (mp_table static method)": [[475, "mp_table.extract_named_args"]], "horzcat() (mp_table method)": [[475, "mp_table.horzcat"]], "isempty() (mp_table method)": [[475, "mp_table.isempty"]], "istable() (mp_table method)": [[475, "mp_table.istable"]], "mp_table (built-in class)": [[475, "mp_table"]], "mp_table() (mp_table method)": [[475, "mp_table.mp_table"]], "size() (mp_table method)": [[475, "mp_table.size"]], "subsasgn() (mp_table method)": [[475, "mp_table.subsasgn"]], "subsref() (mp_table method)": [[475, "mp_table.subsref"]], "vertcat() (mp_table method)": [[475, "mp_table.vertcat"]], "get_table() (mp_table_subclass method)": [[476, "mp_table_subclass.get_table"]], "mp_table_subclass (built-in class)": [[476, "mp_table_subclass"]], "set_table() (mp_table_subclass method)": [[476, "mp_table_subclass.set_table"]], "install_matpower() (built-in function)": [[478, "install_matpower"]], "load_dm() (in module mp)": [[479, "mp.load_dm"]], "mp_table_class() (built-in function)": [[480, "mp_table_class"]], "run_cpf() (built-in function)": [[481, "run_cpf"]], "run_mp() (built-in function)": [[482, "run_mp"]], "run_opf() (built-in function)": [[483, "run_opf"]], "run_pf() (built-in function)": [[484, "run_pf"]], "add_legacy_cost() (opf_model method)": [[487, "opf_model.add_legacy_cost"]], "add_named_set() (opf_model method)": [[487, "opf_model.add_named_set"]], "cost (opf_model attribute)": [[487, "opf_model.cost"]], "def_set_types() (opf_model method)": [[487, "opf_model.def_set_types"]], "display() (opf_model method)": [[487, "opf_model.display"]], "eval_legacy_cost() (opf_model method)": [[487, "opf_model.eval_legacy_cost"]], "get_mpc() (opf_model method)": [[487, "opf_model.get_mpc"]], "init_set_types() (opf_model method)": [[487, "opf_model.init_set_types"]], "mpc (opf_model attribute)": [[487, "opf_model.mpc"]], "opf_model (built-in class)": [[487, "opf_model"]], "opf_model() (opf_model method)": [[487, "opf_model.opf_model"]], "params_legacy_cost() (opf_model method)": [[487, "opf_model.params_legacy_cost"]], "set_mpc() (opf_model method)": [[487, "opf_model.set_mpc"]], "add_userfcn() (built-in function)": [[488, "add_userfcn"]], "apply_changes() (built-in function)": [[489, "apply_changes"]], "bustypes() (built-in function)": [[490, "bustypes"]], "calc_branch_angle() (built-in function)": [[491, "calc_branch_angle"]], "calc_v_i_sum() (built-in function)": [[492, "calc_v_i_sum"]], "calc_v_pq_sum() (built-in function)": [[493, "calc_v_pq_sum"]], "calc_v_y_sum() (built-in function)": [[494, "calc_v_y_sum"]], "case_info() (built-in function)": [[495, "case_info"]], "cdf2mpc() (built-in function)": [[497, "cdf2mpc"]], "compare_case() (built-in function)": [[498, "compare_case"]], "connected_components() (built-in function)": [[499, "connected_components"]], "cpf_corrector() (built-in function)": [[500, "cpf_corrector"]], "cpf_current_mpc() (built-in function)": [[501, "cpf_current_mpc"]], "cpf_default_callback() (built-in function)": [[502, "cpf_default_callback"]], "cpf_detect_events() (built-in function)": [[503, "cpf_detect_events"]], "cpf_flim_event() (built-in function)": [[504, "cpf_flim_event"]], "cpf_flim_event_cb() (built-in function)": [[505, "cpf_flim_event_cb"]], "cpf_nose_event() (built-in function)": [[506, "cpf_nose_event"]], "cpf_nose_event_cb() (built-in function)": [[507, "cpf_nose_event_cb"]], "cpf_p() (built-in function)": [[508, "cpf_p"]], "cpf_p_jac() (built-in function)": [[509, "cpf_p_jac"]], "cpf_plim_event() (built-in function)": [[510, "cpf_plim_event"]], "cpf_plim_event_cb() (built-in function)": [[511, "cpf_plim_event_cb"]], "cpf_predictor() (built-in function)": [[512, "cpf_predictor"]], "cpf_qlim_event() (built-in function)": [[513, "cpf_qlim_event"]], "cpf_qlim_event_cb() (built-in function)": [[514, "cpf_qlim_event_cb"]], "cpf_register_callback() (built-in function)": [[515, "cpf_register_callback"]], "cpf_register_event() (built-in function)": [[516, "cpf_register_event"]], "cpf_tangent() (built-in function)": [[517, "cpf_tangent"]], "cpf_target_lam_event() (built-in function)": [[518, "cpf_target_lam_event"]], "cpf_target_lam_event_cb() (built-in function)": [[519, "cpf_target_lam_event_cb"]], "cpf_vlim_event() (built-in function)": [[520, "cpf_vlim_event"]], "cpf_vlim_event_cb() (built-in function)": [[521, "cpf_vlim_event_cb"]], "d2abr_dv2() (built-in function)": [[522, "d2Abr_dV2"]], "d2ibr_dv2() (built-in function)": [[523, "d2Ibr_dV2"]], "d2imis_dv2() (built-in function)": [[524, "d2Imis_dV2"]], "d2imis_dvdsg() (built-in function)": [[525, "d2Imis_dVdSg"]], "d2sbr_dv2() (built-in function)": [[526, "d2Sbr_dV2"]], "d2sbus_dv2() (built-in function)": [[527, "d2Sbus_dV2"]], "dabr_dv() (built-in function)": [[528, "dAbr_dV"]], "dibr_dv() (built-in function)": [[529, "dIbr_dV"]], "dimis_dv() (built-in function)": [[530, "dImis_dV"]], "dsbr_dv() (built-in function)": [[531, "dSbr_dV"]], "dsbus_dv() (built-in function)": [[532, "dSbus_dV"]], "dcopf() (built-in function)": [[533, "dcopf"]], "dcopf_solver() (built-in function)": [[534, "dcopf_solver"]], "dcpf() (built-in function)": [[535, "dcpf"]], "e2i_data() (built-in function)": [[537, "e2i_data"]], "e2i_field() (built-in function)": [[538, "e2i_field"]], "ext2int() (built-in function)": [[539, "ext2int"]], "extract_islands() (built-in function)": [[540, "extract_islands"]], "fdpf() (built-in function)": [[541, "fdpf"]], "feval_w_path() (built-in function)": [[542, "feval_w_path"]], "find_bridges() (built-in function)": [[543, "find_bridges"]], "find_islands() (built-in function)": [[544, "find_islands"]], "fmincopf() (built-in function)": [[545, "fmincopf"]], "gausspf() (built-in function)": [[546, "gausspf"]], "genfuels() (built-in function)": [[547, "genfuels"]], "gentypes() (built-in function)": [[548, "gentypes"]], "get_losses() (built-in function)": [[549, "get_losses"]], "get_reorder() (built-in function)": [[550, "get_reorder"]], "haspqcap() (built-in function)": [[551, "hasPQcap"]], "have_feature_e4st() (built-in function)": [[552, "have_feature_e4st"]], "have_feature_minopf() (built-in function)": [[553, "have_feature_minopf"]], "have_feature_most() (built-in function)": [[554, "have_feature_most"]], "have_feature_mp_core() (built-in function)": [[555, "have_feature_mp_core"]], "have_feature_pdipmopf() (built-in function)": [[556, "have_feature_pdipmopf"]], "have_feature_regexp_split() (built-in function)": [[557, "have_feature_regexp_split"]], "have_feature_scpdipmopf() (built-in function)": [[558, "have_feature_scpdipmopf"]], "have_feature_sdp_pf() (built-in function)": [[559, "have_feature_sdp_pf"]], "have_feature_smartmarket() (built-in function)": [[560, "have_feature_smartmarket"]], "have_feature_syngrid() (built-in function)": [[561, "have_feature_syngrid"]], "have_feature_table() (built-in function)": [[562, "have_feature_table"]], "have_feature_tralmopf() (built-in function)": [[563, "have_feature_tralmopf"]], "i2e_data() (built-in function)": [[564, "i2e_data"]], "i2e_field() (built-in function)": [[565, "i2e_field"]], "idx_brch() (built-in function)": [[566, "idx_brch"]], "idx_bus() (built-in function)": [[567, "idx_bus"]], "idx_cost() (built-in function)": [[568, "idx_cost"]], "idx_ct() (built-in function)": [[569, "idx_ct"]], "idx_dcline() (built-in function)": [[570, "idx_dcline"]], "idx_gen() (built-in function)": [[571, "idx_gen"]], "int2ext() (built-in function)": [[572, "int2ext"]], "isload() (built-in function)": [[573, "isload"]], "load2disp() (built-in function)": [[574, "load2disp"]], "loadcase() (built-in function)": [[575, "loadcase"]], "loadshed() (built-in function)": [[576, "loadshed"]], "makeaang() (built-in function)": [[577, "makeAang"]], "makeapq() (built-in function)": [[578, "makeApq"]], "makeavl() (built-in function)": [[579, "makeAvl"]], "makeay() (built-in function)": [[580, "makeAy"]], "makeb() (built-in function)": [[581, "makeB"]], "makebdc() (built-in function)": [[582, "makeBdc"]], "makejac() (built-in function)": [[583, "makeJac"]], "makelodf() (built-in function)": [[584, "makeLODF"]], "makeptdf() (built-in function)": [[585, "makePTDF"]], "makesbus() (built-in function)": [[586, "makeSbus"]], "makesdzip() (built-in function)": [[587, "makeSdzip"]], "makeybus() (built-in function)": [[588, "makeYbus"]], "make_vcorr() (built-in function)": [[589, "make_vcorr"]], "make_zpv() (built-in function)": [[590, "make_zpv"]], "margcost() (built-in function)": [[591, "margcost"]], "miqps_matpower() (built-in function)": [[592, "miqps_matpower"]], "modcost() (built-in function)": [[593, "modcost"]], "mpoption() (built-in function)": [[594, "mpoption"]], "mpoption_info_clp() (built-in function)": [[595, "mpoption_info_clp"]], "mpoption_info_cplex() (built-in function)": [[596, "mpoption_info_cplex"]], "mpoption_info_fmincon() (built-in function)": [[597, "mpoption_info_fmincon"]], "mpoption_info_glpk() (built-in function)": [[598, "mpoption_info_glpk"]], "mpoption_info_gurobi() (built-in function)": [[599, "mpoption_info_gurobi"]], "mpoption_info_intlinprog() (built-in function)": [[600, "mpoption_info_intlinprog"]], "mpoption_info_ipopt() (built-in function)": [[601, "mpoption_info_ipopt"]], "mpoption_info_knitro() (built-in function)": [[602, "mpoption_info_knitro"]], "mpoption_info_linprog() (built-in function)": [[603, "mpoption_info_linprog"]], "mpoption_info_mips() (built-in function)": [[604, "mpoption_info_mips"]], "mpoption_info_mosek() (built-in function)": [[605, "mpoption_info_mosek"]], "mpoption_info_osqp() (built-in function)": [[606, "mpoption_info_osqp"]], "mpoption_info_quadprog() (built-in function)": [[607, "mpoption_info_quadprog"]], "mpoption_old() (built-in function)": [[608, "mpoption_old"]], "mpver() (built-in function)": [[609, "mpver"]], "newtonpf() (built-in function)": [[610, "newtonpf"]], "newtonpf_i_cart() (built-in function)": [[611, "newtonpf_I_cart"]], "newtonpf_i_hybrid() (built-in function)": [[612, "newtonpf_I_hybrid"]], "newtonpf_i_polar() (built-in function)": [[613, "newtonpf_I_polar"]], "newtonpf_s_cart() (built-in function)": [[614, "newtonpf_S_cart"]], "newtonpf_s_hybrid() (built-in function)": [[615, "newtonpf_S_hybrid"]], "nlpopf_solver() (built-in function)": [[616, "nlpopf_solver"]], "opf() (built-in function)": [[617, "opf"]], "opf_args() (built-in function)": [[618, "opf_args"]], "opf_branch_ang_fcn() (built-in function)": [[619, "opf_branch_ang_fcn"]], "opf_branch_ang_hess() (built-in function)": [[620, "opf_branch_ang_hess"]], "opf_branch_flow_fcn() (built-in function)": [[621, "opf_branch_flow_fcn"]], "opf_branch_flow_hess() (built-in function)": [[622, "opf_branch_flow_hess"]], "opf_current_balance_fcn() (built-in function)": [[623, "opf_current_balance_fcn"]], "opf_current_balance_hess() (built-in function)": [[624, "opf_current_balance_hess"]], "opf_execute() (built-in function)": [[625, "opf_execute"]], "opf_gen_cost_fcn() (built-in function)": [[626, "opf_gen_cost_fcn"]], "opf_legacy_user_cost_fcn() (built-in function)": [[627, "opf_legacy_user_cost_fcn"]], "opf_nle_fcn1() (built-in function)": [[628, "opf_nle_fcn1"]], "opf_nle_hess1() (built-in function)": [[629, "opf_nle_hess1"]], "opf_power_balance_fcn() (built-in function)": [[630, "opf_power_balance_fcn"]], "opf_power_balance_hess() (built-in function)": [[631, "opf_power_balance_hess"]], "opf_setup() (built-in function)": [[632, "opf_setup"]], "opf_veq_fcn() (built-in function)": [[633, "opf_veq_fcn"]], "opf_veq_hess() (built-in function)": [[634, "opf_veq_hess"]], "opf_vlim_fcn() (built-in function)": [[635, "opf_vlim_fcn"]], "opf_vlim_hess() (built-in function)": [[636, "opf_vlim_hess"]], "opf_vref_fcn() (built-in function)": [[637, "opf_vref_fcn"]], "opf_vref_hess() (built-in function)": [[638, "opf_vref_hess"]], "order_radial() (built-in function)": [[639, "order_radial"]], "pfsoln() (built-in function)": [[640, "pfsoln"]], "poly2pwl() (built-in function)": [[641, "poly2pwl"]], "polycost() (built-in function)": [[642, "polycost"]], "pqcost() (built-in function)": [[643, "pqcost"]], "printpf() (built-in function)": [[644, "printpf"]], "psse2mpc() (built-in function)": [[645, "psse2mpc"]], "psse_convert() (built-in function)": [[646, "psse_convert"]], "psse_convert_hvdc() (built-in function)": [[647, "psse_convert_hvdc"]], "psse_convert_xfmr() (built-in function)": [[648, "psse_convert_xfmr"]], "psse_parse() (built-in function)": [[649, "psse_parse"]], "psse_parse_line() (built-in function)": [[650, "psse_parse_line"]], "psse_parse_section() (built-in function)": [[651, "psse_parse_section"]], "psse_read() (built-in function)": [[652, "psse_read"]], "qps_matpower() (built-in function)": [[653, "qps_matpower"]], "radial_pf() (built-in function)": [[654, "radial_pf"]], "remove_userfcn() (built-in function)": [[655, "remove_userfcn"]], "run_userfcn() (built-in function)": [[656, "run_userfcn"]], "runcpf() (built-in function)": [[657, "runcpf"]], "rundcopf() (built-in function)": [[658, "rundcopf"]], "rundcpf() (built-in function)": [[659, "rundcpf"]], "runduopf() (built-in function)": [[660, "runduopf"]], "runopf() (built-in function)": [[661, "runopf"]], "runopf_w_res() (built-in function)": [[662, "runopf_w_res"]], "runpf() (built-in function)": [[663, "runpf"]], "runuopf() (built-in function)": [[664, "runuopf"]], "save2psse() (built-in function)": [[665, "save2psse"]], "savecase() (built-in function)": [[666, "savecase"]], "savechgtab() (built-in function)": [[667, "savechgtab"]], "scale_load() (built-in function)": [[668, "scale_load"]], "set_reorder() (built-in function)": [[669, "set_reorder"]], "t_apply_changes() (built-in function)": [[670, "t_apply_changes"]], "t_auction_case() (built-in function)": [[671, "t_auction_case"]], "t_auction_minopf() (built-in function)": [[672, "t_auction_minopf"]], "t_auction_mips() (built-in function)": [[673, "t_auction_mips"]], "t_auction_tspopf_pdipm() (built-in function)": [[674, "t_auction_tspopf_pdipm"]], "t_case30_userfcns() (built-in function)": [[675, "t_case30_userfcns"]], "t_case9_dcline() (built-in function)": [[676, "t_case9_dcline"]], "t_case9_opf() (built-in function)": [[677, "t_case9_opf"]], "t_case9_opfv2() (built-in function)": [[678, "t_case9_opfv2"]], "t_case9_pf() (built-in function)": [[679, "t_case9_pf"]], "t_case9_pfv2() (built-in function)": [[680, "t_case9_pfv2"]], "t_case9_save2psse() (built-in function)": [[681, "t_case9_save2psse"]], "t_case_ext() (built-in function)": [[682, "t_case_ext"]], "t_case_int() (built-in function)": [[683, "t_case_int"]], "t_chgtab() (built-in function)": [[684, "t_chgtab"]], "t_cpf() (built-in function)": [[685, "t_cpf"]], "t_cpf_cb1() (built-in function)": [[686, "t_cpf_cb1"]], "t_cpf_cb2() (built-in function)": [[687, "t_cpf_cb2"]], "t_dcline() (built-in function)": [[688, "t_dcline"]], "t_ext2int2ext() (built-in function)": [[689, "t_ext2int2ext"]], "t_feval_w_path() (built-in function)": [[690, "t_feval_w_path"]], "t_get_losses() (built-in function)": [[691, "t_get_losses"]], "t_haspqcap() (built-in function)": [[692, "t_hasPQcap"]], "t_hessian() (built-in function)": [[693, "t_hessian"]], "t_islands() (built-in function)": [[694, "t_islands"]], "t_jacobian() (built-in function)": [[695, "t_jacobian"]], "t_load2disp() (built-in function)": [[696, "t_load2disp"]], "t_loadcase() (built-in function)": [[697, "t_loadcase"]], "t_makelodf() (built-in function)": [[698, "t_makeLODF"]], "t_makeptdf() (built-in function)": [[699, "t_makePTDF"]], "t_margcost() (built-in function)": [[700, "t_margcost"]], "t_miqps_matpower() (built-in function)": [[701, "t_miqps_matpower"]], "t_modcost() (built-in function)": [[702, "t_modcost"]], "t_mpoption() (built-in function)": [[703, "t_mpoption"]], "t_mpoption_ov() (built-in function)": [[704, "t_mpoption_ov"]], "t_off2case() (built-in function)": [[705, "t_off2case"]], "t_opf_dc_bpmpd() (built-in function)": [[706, "t_opf_dc_bpmpd"]], "t_opf_dc_clp() (built-in function)": [[707, "t_opf_dc_clp"]], "t_opf_dc_cplex() (built-in function)": [[708, "t_opf_dc_cplex"]], "t_opf_dc_default() (built-in function)": [[709, "t_opf_dc_default"]], "t_opf_dc_glpk() (built-in function)": [[710, "t_opf_dc_glpk"]], "t_opf_dc_gurobi() (built-in function)": [[711, "t_opf_dc_gurobi"]], "t_opf_dc_ipopt() (built-in function)": [[712, "t_opf_dc_ipopt"]], "t_opf_dc_mips() (built-in function)": [[713, "t_opf_dc_mips"]], "t_opf_dc_mips_sc() (built-in function)": [[714, "t_opf_dc_mips_sc"]], "t_opf_dc_mosek() (built-in function)": [[715, "t_opf_dc_mosek"]], "t_opf_dc_osqp() (built-in function)": [[716, "t_opf_dc_osqp"]], "t_opf_dc_ot() (built-in function)": [[717, "t_opf_dc_ot"]], "t_opf_default() (built-in function)": [[718, "t_opf_default"]], "t_opf_fmincon() (built-in function)": [[719, "t_opf_fmincon"]], "t_opf_ipopt() (built-in function)": [[720, "t_opf_ipopt"]], "t_opf_knitro() (built-in function)": [[721, "t_opf_knitro"]], "t_opf_minopf() (built-in function)": [[722, "t_opf_minopf"]], "t_opf_mips() (built-in function)": [[723, "t_opf_mips"]], "t_opf_model() (built-in function)": [[724, "t_opf_model"]], "t_opf_softlims() (built-in function)": [[725, "t_opf_softlims"]], "t_opf_tspopf_pdipm() (built-in function)": [[726, "t_opf_tspopf_pdipm"]], "t_opf_tspopf_scpdipm() (built-in function)": [[727, "t_opf_tspopf_scpdipm"]], "t_opf_tspopf_tralm() (built-in function)": [[728, "t_opf_tspopf_tralm"]], "t_opf_userfcns() (built-in function)": [[729, "t_opf_userfcns"]], "t_pf_ac() (built-in function)": [[730, "t_pf_ac"]], "t_pf_dc() (built-in function)": [[731, "t_pf_dc"]], "t_pf_radial() (built-in function)": [[732, "t_pf_radial"]], "t_printpf() (built-in function)": [[733, "t_printpf"]], "t_psse() (built-in function)": [[734, "t_psse"]], "t_qps_matpower() (built-in function)": [[735, "t_qps_matpower"]], "t_runmarket() (built-in function)": [[736, "t_runmarket"]], "t_runopf_w_res() (built-in function)": [[737, "t_runopf_w_res"]], "t_scale_load() (built-in function)": [[738, "t_scale_load"]], "t_total_load() (built-in function)": [[739, "t_total_load"]], "t_totcost() (built-in function)": [[740, "t_totcost"]], "t_vdep_load() (built-in function)": [[741, "t_vdep_load"]], "toggle_dcline() (built-in function)": [[742, "toggle_dcline"]], "toggle_iflims() (built-in function)": [[743, "toggle_iflims"]], "toggle_reserves() (built-in function)": [[744, "toggle_reserves"]], "toggle_softlims() (built-in function)": [[745, "toggle_softlims"]], "total_load() (built-in function)": [[746, "total_load"]], "totcost() (built-in function)": [[747, "totcost"]], "uopf() (built-in function)": [[748, "uopf"]], "update_mupq() (built-in function)": [[749, "update_mupq"]], "zgausspf() (built-in function)": [[750, "zgausspf"]], "mp_foo_table (built-in class)": [[754, "mp_foo_table"]], "t_case3p_a() (built-in function)": [[755, "t_case3p_a"]], "t_case3p_b() (built-in function)": [[756, "t_case3p_b"]], "t_case3p_c() (built-in function)": [[757, "t_case3p_c"]], "t_case3p_d() (built-in function)": [[758, "t_case3p_d"]], "t_case3p_e() (built-in function)": [[759, "t_case3p_e"]], "t_case3p_f() (built-in function)": [[760, "t_case3p_f"]], "t_case3p_g() (built-in function)": [[761, "t_case3p_g"]], "t_case3p_h() (built-in function)": [[762, "t_case3p_h"]], "t_case9_gizmo() (built-in function)": [[763, "t_case9_gizmo"]], "t_dmc_element() (built-in function)": [[764, "t_dmc_element"]], "t_mp_data_model() (built-in function)": [[765, "t_mp_data_model"]], "t_mp_dm_converter_mpc2() (built-in function)": [[766, "t_mp_dm_converter_mpc2"]], "t_mp_mapped_array() (built-in function)": [[767, "t_mp_mapped_array"]], "t_mp_table() (built-in function)": [[768, "t_mp_table"]], "t_mpxt_legacy_dcline() (built-in function)": [[769, "t_mpxt_legacy_dcline"]], "t_mpxt_reserves() (built-in function)": [[770, "t_mpxt_reserves"]], "t_nm_element() (built-in function)": [[771, "t_nm_element"]], "t_node_test() (built-in function)": [[772, "t_node_test"]], "t_port_inj_current_acc() (built-in function)": [[773, "t_port_inj_current_acc"]], "t_port_inj_current_acp() (built-in function)": [[774, "t_port_inj_current_acp"]], "t_port_inj_power_acc() (built-in function)": [[775, "t_port_inj_power_acc"]], "t_port_inj_power_acp() (built-in function)": [[776, "t_port_inj_power_acp"]], "t_pretty_print() (built-in function)": [[777, "t_pretty_print"]], "t_run_mp() (built-in function)": [[778, "t_run_mp"]], "t_run_mp_3p() (built-in function)": [[779, "t_run_mp_3p"]], "t_run_opf_default() (built-in function)": [[780, "t_run_opf_default"]], "test_matpower() (built-in function)": [[781, "test_matpower"]]}})